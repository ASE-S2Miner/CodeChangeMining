[{"original_method":"@Nullable\n    private ConstructorDescriptor resolveConstructor(\n            PsiClass psiClass,\n            boolean aStatic,\n            PsiMethod psiConstructor,\n            ClassDescriptorFromJvmBytecode classDescriptor\n    ) {\n        PsiMethodWrapper constructor = new PsiMethodWrapper(psiConstructor);\n\n        //noinspection deprecation\n        if (constructor.getJetConstructorAnnotation().hidden()) {\n            return null;\n        }\n\n        if (trace.get(BindingContext.CONSTRUCTOR, psiConstructor) != null) {\n            return trace.get(BindingContext.CONSTRUCTOR, psiConstructor);\n        }\n\n        ConstructorDescriptorImpl constructorDescriptor = new ConstructorDescriptorImpl(\n                classDescriptor,\n                Collections.<AnnotationDescriptor>emptyList(), // TODO\n                false);\n\n        String context = \"constructor of class \" + psiClass.getQualifiedName();\n        JavaDescriptorResolver.ValueParameterDescriptors valueParameterDescriptors = valueParameterResolver.resolveParameterDescriptors(\n                constructorDescriptor, constructor.getParameters(),\n                TypeVariableResolvers.classTypeVariableResolver(classDescriptor, context));\n\n        if (valueParameterDescriptors.getReceiverType() != null) {\n            throw new IllegalStateException();\n        }\n\n        AlternativeMethodSignatureData alternativeMethodSignatureData =\n                new AlternativeMethodSignatureData(constructor, valueParameterDescriptors, null,\n                                                   Collections.<TypeParameterDescriptor>emptyList());\n        if (alternativeMethodSignatureData.isAnnotated() && !alternativeMethodSignatureData.hasErrors()) {\n            valueParameterDescriptors = alternativeMethodSignatureData.getValueParameters();\n        }\n        else if (alternativeMethodSignatureData.hasErrors()) {\n            trace.record(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERROR, constructorDescriptor,\n                         alternativeMethodSignatureData.getError());\n        }\n\n        constructorDescriptor.initialize(classDescriptor.getTypeConstructor().getParameters(),\n                                         valueParameterDescriptors.getDescriptors(),\n                                         DescriptorResolverUtils.resolveVisibility(psiConstructor, constructor.getJetConstructorAnnotation()),\n                                         aStatic);\n        trace.record(BindingContext.CONSTRUCTOR, psiConstructor, constructorDescriptor);\n        return constructorDescriptor;\n    }","id":56000,"modified_method":"@Nullable\n    private ConstructorDescriptor resolveConstructor(\n            PsiClass psiClass,\n            boolean aStatic,\n            PsiMethod psiConstructor,\n            ClassDescriptorFromJvmBytecode classDescriptor\n    ) {\n        PsiMethodWrapper constructor = new PsiMethodWrapper(psiConstructor);\n\n        //noinspection deprecation\n        if (constructor.getJetConstructorAnnotation().hidden()) {\n            return null;\n        }\n\n        if (trace.get(BindingContext.CONSTRUCTOR, psiConstructor) != null) {\n            return trace.get(BindingContext.CONSTRUCTOR, psiConstructor);\n        }\n\n        ConstructorDescriptorImpl constructorDescriptor = new ConstructorDescriptorImpl(\n                classDescriptor,\n                Collections.<AnnotationDescriptor>emptyList(), // TODO\n                false);\n\n        String context = \"constructor of class \" + psiClass.getQualifiedName();\n        JavaDescriptorResolver.ValueParameterDescriptors valueParameterDescriptors = valueParameterResolver.resolveParameterDescriptors(\n                constructorDescriptor, constructor.getParameters(),\n                TypeVariableResolvers.classTypeVariableResolver(classDescriptor, context));\n\n        if (valueParameterDescriptors.getReceiverType() != null) {\n            throw new IllegalStateException();\n        }\n\n        AlternativeMethodSignatureData alternativeMethodSignatureData =\n                new AlternativeMethodSignatureData(constructor, valueParameterDescriptors, null,\n                                                   Collections.<TypeParameterDescriptor>emptyList());\n        if (alternativeMethodSignatureData.isAnnotated() && !alternativeMethodSignatureData.hasErrors()) {\n            valueParameterDescriptors = alternativeMethodSignatureData.getValueParameters();\n        }\n        else if (alternativeMethodSignatureData.hasErrors()) {\n            trace.record(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERRORS, constructorDescriptor,\n                         Collections.singletonList(alternativeMethodSignatureData.getError()));\n        }\n\n        constructorDescriptor.initialize(classDescriptor.getTypeConstructor().getParameters(),\n                                         valueParameterDescriptors.getDescriptors(),\n                                         DescriptorResolverUtils.resolveVisibility(psiConstructor, constructor.getJetConstructorAnnotation()),\n                                         aStatic);\n        trace.record(BindingContext.CONSTRUCTOR, psiConstructor, constructorDescriptor);\n        return constructorDescriptor;\n    }","commit_id":"60f30732ed5f73c91260da8c43abbb2f28288d77","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Nullable\n    private SimpleFunctionDescriptor resolveMethodToFunctionDescriptor(\n            @NotNull final PsiClass psiClass, final PsiMethodWrapper method,\n            @NotNull PsiDeclarationProvider scopeData, @NotNull ClassOrNamespaceDescriptor ownerDescriptor\n    ) {\n        PsiType returnPsiType = method.getReturnType();\n        if (returnPsiType == null) {\n            return null;\n        }\n\n        // TODO: ugly\n        if (method.getJetMethodAnnotation().hasPropertyFlag()) {\n            return null;\n        }\n\n        final PsiMethod psiMethod = method.getPsiMethod();\n        final PsiClass containingClass = psiMethod.getContainingClass();\n        if (scopeData.getDeclarationOrigin() == KOTLIN) {\n            // TODO: unless maybe class explicitly extends Object\n            assert containingClass != null;\n            String ownerClassName = containingClass.getQualifiedName();\n            if (DescriptorResolverUtils.OBJECT_FQ_NAME.getFqName().equals(ownerClassName)) {\n                return null;\n            }\n        }\n\n        if (trace.get(BindingContext.FUNCTION, psiMethod) != null) {\n            return trace.get(BindingContext.FUNCTION, psiMethod);\n        }\n\n        final SimpleFunctionDescriptorImpl functionDescriptorImpl = new SimpleFunctionDescriptorImpl(\n                ownerDescriptor,\n                annotationResolver.resolveAnnotations(psiMethod),\n                Name.identifier(method.getName()),\n                DescriptorKindUtils.flagsToKind(method.getJetMethodAnnotation().kind())\n        );\n\n        String context = \"method \" + method.getName() + \" in class \" + psiClass.getQualifiedName();\n\n        List<TypeParameterDescriptor> methodTypeParameters =\n                signatureResolver.resolveMethodTypeParameters(method,\n                                                              functionDescriptorImpl);\n\n        TypeVariableResolver methodTypeVariableResolver = TypeVariableResolvers.typeVariableResolverFromTypeParameters(methodTypeParameters,\n                                                                                                                       functionDescriptorImpl,\n                                                                                                                       context);\n\n\n        JavaDescriptorResolver.ValueParameterDescriptors valueParameterDescriptors = parameterResolver\n                .resolveParameterDescriptors(functionDescriptorImpl, method.getParameters(), methodTypeVariableResolver);\n        JetType returnType = makeReturnType(returnPsiType, method, methodTypeVariableResolver);\n\n        returnType = SignaturesPropagation.modifyReturnTypeAccordingToSuperMethods(returnType, method, trace, new Function1<String, Void>() {\n            @Override\n            public Void invoke(String error) {\n                trace.record(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERROR, functionDescriptorImpl, error);\n                return null;\n            }\n        });\n\n        // TODO consider better place for this check\n        AlternativeMethodSignatureData alternativeMethodSignatureData =\n                new AlternativeMethodSignatureData(method, valueParameterDescriptors, returnType, methodTypeParameters);\n        if (alternativeMethodSignatureData.isAnnotated() && !alternativeMethodSignatureData.hasErrors()) {\n            valueParameterDescriptors = alternativeMethodSignatureData.getValueParameters();\n            returnType = alternativeMethodSignatureData.getReturnType();\n            methodTypeParameters = alternativeMethodSignatureData.getTypeParameters();\n        }\n        else if (alternativeMethodSignatureData.hasErrors()) {\n            trace.record(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERROR, functionDescriptorImpl,\n                         alternativeMethodSignatureData.getError());\n        }\n\n        functionDescriptorImpl.initialize(\n                valueParameterDescriptors.getReceiverType(),\n                DescriptorUtils.getExpectedThisObjectIfNeeded(ownerDescriptor),\n                methodTypeParameters,\n                valueParameterDescriptors.getDescriptors(),\n                returnType,\n                DescriptorResolverUtils.resolveModality(method, method.isFinal()),\n                DescriptorResolverUtils.resolveVisibility(psiMethod, method.getJetMethodAnnotation()),\n                /*isInline = */ false\n        );\n\n        if (functionDescriptorImpl.getKind() == CallableMemberDescriptor.Kind.DECLARATION) {\n            BindingContextUtils.recordFunctionDeclarationToDescriptor(trace, psiMethod, functionDescriptorImpl);\n        }\n\n        if (scopeData.getDeclarationOrigin() == JAVA) {\n            trace.record(BindingContext.IS_DECLARED_IN_JAVA, functionDescriptorImpl);\n        }\n\n        if (containingClass != psiClass && !method.isStatic()) {\n            throw new IllegalStateException(\"non-static method in subclass\");\n        }\n\n        if (trace.get(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERROR, functionDescriptorImpl) == null) {\n            List<FunctionDescriptor> superFunctions = SignaturesPropagation.getSuperFunctionsForMethod(method, trace);\n            for (FunctionDescriptor superFunction : superFunctions) {\n                TypeSubstitutor substitutor = SubstitutionUtils.buildDeepSubstitutor(((ClassDescriptor) ownerDescriptor).getDefaultType());\n                FunctionDescriptor superFunctionSubstituted = superFunction.substitute(substitutor);\n\n                // TODO replace asserted condition when propagation for parameters is supported\n                //OverridingUtil.OverrideCompatibilityInfo.Result overridableResult =\n                //        OverridingUtil.isOverridableBy(superFunctionSubstituted, functionDescriptorImpl).getResult();\n                //if (overridableResult != OverridingUtil.OverrideCompatibilityInfo.Result.OVERRIDABLE\n                //    || !OverridingUtil.isReturnTypeOkForOverride(JetTypeChecker.INSTANCE, superFunctionSubstituted, functionDescriptorImpl)) {\n                if (!OverridingUtil.isReturnTypeOkForOverride(JetTypeChecker.INSTANCE, superFunctionSubstituted, functionDescriptorImpl)) {\n                    throw new IllegalStateException(\"Loaded Java method overrides another, but resolved as Kotlin function, doesn't.\\n\"\n                                                    + \"super function = \" + superFunction + \"\\n\"\n                                                    + \"this function = \" + functionDescriptorImpl + \"\\n\"\n                                                    + \"this method = \" + PsiFormatUtil.getExternalName(psiMethod) + \"\\n\"\n                                                    + \"@KotlinSignature = \" + method.getSignatureAnnotation().signature());\n                }\n            }\n        }\n\n        return functionDescriptorImpl;\n    }","id":56001,"modified_method":"@Nullable\n    private SimpleFunctionDescriptor resolveMethodToFunctionDescriptor(\n            @NotNull final PsiClass psiClass, final PsiMethodWrapper method,\n            @NotNull PsiDeclarationProvider scopeData, @NotNull ClassOrNamespaceDescriptor ownerDescriptor\n    ) {\n        PsiType returnPsiType = method.getReturnType();\n        if (returnPsiType == null) {\n            return null;\n        }\n\n        // TODO: ugly\n        if (method.getJetMethodAnnotation().hasPropertyFlag()) {\n            return null;\n        }\n\n        final PsiMethod psiMethod = method.getPsiMethod();\n        final PsiClass containingClass = psiMethod.getContainingClass();\n        if (scopeData.getDeclarationOrigin() == KOTLIN) {\n            // TODO: unless maybe class explicitly extends Object\n            assert containingClass != null;\n            String ownerClassName = containingClass.getQualifiedName();\n            if (DescriptorResolverUtils.OBJECT_FQ_NAME.getFqName().equals(ownerClassName)) {\n                return null;\n            }\n        }\n\n        if (trace.get(BindingContext.FUNCTION, psiMethod) != null) {\n            return trace.get(BindingContext.FUNCTION, psiMethod);\n        }\n\n        final SimpleFunctionDescriptorImpl functionDescriptorImpl = new SimpleFunctionDescriptorImpl(\n                ownerDescriptor,\n                annotationResolver.resolveAnnotations(psiMethod),\n                Name.identifier(method.getName()),\n                DescriptorKindUtils.flagsToKind(method.getJetMethodAnnotation().kind())\n        );\n\n        String context = \"method \" + method.getName() + \" in class \" + psiClass.getQualifiedName();\n\n        List<TypeParameterDescriptor> methodTypeParameters =\n                signatureResolver.resolveMethodTypeParameters(method,\n                                                              functionDescriptorImpl);\n\n        TypeVariableResolver methodTypeVariableResolver = TypeVariableResolvers.typeVariableResolverFromTypeParameters(methodTypeParameters,\n                                                                                                                       functionDescriptorImpl,\n                                                                                                                       context);\n\n\n        JavaDescriptorResolver.ValueParameterDescriptors valueParameterDescriptors = parameterResolver\n                .resolveParameterDescriptors(functionDescriptorImpl, method.getParameters(), methodTypeVariableResolver);\n        JetType returnType = makeReturnType(returnPsiType, method, methodTypeVariableResolver);\n\n        final List<String> signatureErrors = Lists.newArrayList();\n\n        returnType = SignaturesPropagation.modifyReturnTypeAccordingToSuperMethods(returnType, method, trace, new Function1<String, Void>() {\n            @Override\n            public Void invoke(String error) {\n                signatureErrors.add(error);\n                return null;\n            }\n        });\n\n        // TODO consider better place for this check\n        AlternativeMethodSignatureData alternativeMethodSignatureData =\n                new AlternativeMethodSignatureData(method, valueParameterDescriptors, returnType, methodTypeParameters);\n        if (alternativeMethodSignatureData.isAnnotated() && !alternativeMethodSignatureData.hasErrors()) {\n            valueParameterDescriptors = alternativeMethodSignatureData.getValueParameters();\n            returnType = alternativeMethodSignatureData.getReturnType();\n            methodTypeParameters = alternativeMethodSignatureData.getTypeParameters();\n        }\n        else if (alternativeMethodSignatureData.hasErrors()) {\n            signatureErrors.add(alternativeMethodSignatureData.getError());\n        }\n\n        functionDescriptorImpl.initialize(\n                valueParameterDescriptors.getReceiverType(),\n                DescriptorUtils.getExpectedThisObjectIfNeeded(ownerDescriptor),\n                methodTypeParameters,\n                valueParameterDescriptors.getDescriptors(),\n                returnType,\n                DescriptorResolverUtils.resolveModality(method, method.isFinal()),\n                DescriptorResolverUtils.resolveVisibility(psiMethod, method.getJetMethodAnnotation()),\n                /*isInline = */ false\n        );\n\n        if (functionDescriptorImpl.getKind() == CallableMemberDescriptor.Kind.DECLARATION) {\n            BindingContextUtils.recordFunctionDeclarationToDescriptor(trace, psiMethod, functionDescriptorImpl);\n        }\n\n        if (scopeData.getDeclarationOrigin() == JAVA) {\n            trace.record(BindingContext.IS_DECLARED_IN_JAVA, functionDescriptorImpl);\n        }\n\n        if (containingClass != psiClass && !method.isStatic()) {\n            throw new IllegalStateException(\"non-static method in subclass\");\n        }\n\n        if (!signatureErrors.isEmpty()) {\n            trace.record(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERRORS, functionDescriptorImpl, signatureErrors);\n        }\n        if (signatureErrors.isEmpty()) {\n            List<FunctionDescriptor> superFunctions = SignaturesPropagation.getSuperFunctionsForMethod(method, trace);\n            for (FunctionDescriptor superFunction : superFunctions) {\n                TypeSubstitutor substitutor = SubstitutionUtils.buildDeepSubstitutor(((ClassDescriptor) ownerDescriptor).getDefaultType());\n                FunctionDescriptor superFunctionSubstituted = superFunction.substitute(substitutor);\n\n                // TODO replace asserted condition when propagation for parameters is supported\n                //OverridingUtil.OverrideCompatibilityInfo.Result overridableResult =\n                //        OverridingUtil.isOverridableBy(superFunctionSubstituted, functionDescriptorImpl).getResult();\n                //if (overridableResult != OverridingUtil.OverrideCompatibilityInfo.Result.OVERRIDABLE\n                //    || !OverridingUtil.isReturnTypeOkForOverride(JetTypeChecker.INSTANCE, superFunctionSubstituted, functionDescriptorImpl)) {\n                if (!OverridingUtil.isReturnTypeOkForOverride(JetTypeChecker.INSTANCE, superFunctionSubstituted, functionDescriptorImpl)) {\n                    throw new IllegalStateException(\"Loaded Java method overrides another, but resolved as Kotlin function, doesn't.\\n\"\n                                                    + \"super function = \" + superFunction + \"\\n\"\n                                                    + \"this function = \" + functionDescriptorImpl + \"\\n\"\n                                                    + \"this method = \" + PsiFormatUtil.getExternalName(psiMethod) + \"\\n\"\n                                                    + \"@KotlinSignature = \" + method.getSignatureAnnotation().signature());\n                }\n            }\n        }\n\n        return functionDescriptorImpl;\n    }","commit_id":"60f30732ed5f73c91260da8c43abbb2f28288d77","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    private JetType getAlternativeSignatureData(\n            boolean isVar,\n            PropertyPsiDataElement characteristicMember,\n            PropertyDescriptor propertyDescriptor,\n            JetType propertyType\n    ) {\n        if (!characteristicMember.isField()) {\n            return propertyType;\n        }\n        AlternativeFieldSignatureData signatureData =\n                new AlternativeFieldSignatureData((PsiFieldWrapper) characteristicMember.getMember(), propertyType, isVar);\n        if (!signatureData.hasErrors()) {\n            if (signatureData.isAnnotated()) {\n                return signatureData.getReturnType();\n            }\n        }\n        else {\n            trace.record(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERROR, propertyDescriptor, signatureData.getError());\n        }\n        return propertyType;\n    }","id":56002,"modified_method":"@NotNull\n    private JetType getAlternativeSignatureData(\n            boolean isVar,\n            PropertyPsiDataElement characteristicMember,\n            PropertyDescriptor propertyDescriptor,\n            JetType propertyType\n    ) {\n        if (!characteristicMember.isField()) {\n            return propertyType;\n        }\n        AlternativeFieldSignatureData signatureData =\n                new AlternativeFieldSignatureData((PsiFieldWrapper) characteristicMember.getMember(), propertyType, isVar);\n        if (!signatureData.hasErrors()) {\n            if (signatureData.isAnnotated()) {\n                return signatureData.getReturnType();\n            }\n        }\n        else {\n            trace.record(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERRORS, propertyDescriptor,\n                         Collections.singletonList(signatureData.getError()));\n        }\n        return propertyType;\n    }","commit_id":"60f30732ed5f73c91260da8c43abbb2f28288d77","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public AlternativeSignatureErrorFindingVisitor(BindingContext bindingContext, Map<DeclarationDescriptor, String> errors) {\n            this.bindingContext = bindingContext;\n            this.errors = errors;\n        }","id":56003,"modified_method":"public AlternativeSignatureErrorFindingVisitor(BindingContext bindingContext, Map<DeclarationDescriptor, List<String>> errors) {\n            this.bindingContext = bindingContext;\n            this.errors = errors;\n        }","commit_id":"60f30732ed5f73c91260da8c43abbb2f28288d77","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void testNoErrorsInAlternativeSignatures() {\n        InjectorForJavaSemanticServices injector = new InjectorForJavaSemanticServices(getProject());\n\n        final BindingContext bindingContext = injector.getBindingTrace().getBindingContext();\n        JavaDescriptorResolver javaDescriptorResolver = injector.getJavaDescriptorResolver();\n\n        final Map<DeclarationDescriptor, String> errors = Maps.newHashMap();\n\n        Iterable<FqName> affectedClasses = getAffectedClasses(kotlinAnnotationsRoot);\n        AlternativeSignatureErrorFindingVisitor visitor = new AlternativeSignatureErrorFindingVisitor(bindingContext, errors);\n        for (FqName javaClass : affectedClasses) {\n            ClassDescriptor topLevelClass = javaDescriptorResolver.resolveClass(javaClass);\n            NamespaceDescriptor topLevelNamespace = javaDescriptorResolver.resolveNamespace(javaClass);\n            assertNotNull(\"Class has annotation, but it is not found: \" + javaClass, topLevelClass);\n\n            topLevelClass.acceptVoid(visitor);\n\n            if (topLevelNamespace != null) {\n                topLevelNamespace.acceptVoid(visitor);\n            }\n        }\n\n        if (!errors.isEmpty()) {\n            StringBuilder sb = new StringBuilder(\"Error(s) in JDK alternative signatures: \\n\");\n            for (Map.Entry<DeclarationDescriptor, String> entry : errors.entrySet()) {\n                sb.append(DescriptorRenderer.TEXT.render(entry.getKey())).append(\" : \").append(entry.getValue()).append(\"\\n\");\n            }\n            fail(sb.toString());\n        }\n    }","id":56004,"modified_method":"public void testNoErrorsInAlternativeSignatures() {\n        InjectorForJavaSemanticServices injector = new InjectorForJavaSemanticServices(getProject());\n\n        final BindingContext bindingContext = injector.getBindingTrace().getBindingContext();\n        JavaDescriptorResolver javaDescriptorResolver = injector.getJavaDescriptorResolver();\n\n        final Map<DeclarationDescriptor, List<String>> errors = Maps.newHashMap();\n\n        Iterable<FqName> affectedClasses = getAffectedClasses(kotlinAnnotationsRoot);\n        AlternativeSignatureErrorFindingVisitor visitor = new AlternativeSignatureErrorFindingVisitor(bindingContext, errors);\n        for (FqName javaClass : affectedClasses) {\n            ClassDescriptor topLevelClass = javaDescriptorResolver.resolveClass(javaClass);\n            NamespaceDescriptor topLevelNamespace = javaDescriptorResolver.resolveNamespace(javaClass);\n            assertNotNull(\"Class has annotation, but it is not found: \" + javaClass, topLevelClass);\n\n            topLevelClass.acceptVoid(visitor);\n\n            if (topLevelNamespace != null) {\n                topLevelNamespace.acceptVoid(visitor);\n            }\n        }\n\n        if (!errors.isEmpty()) {\n            StringBuilder sb = new StringBuilder(\"Error(s) in JDK alternative signatures: \\n\");\n            for (Map.Entry<DeclarationDescriptor, List<String>> entry : errors.entrySet()) {\n                sb.append(DescriptorRenderer.TEXT.render(entry.getKey())).append(\" : \").append(entry.getValue()).append(\"\\n\");\n            }\n            fail(sb.toString());\n        }\n    }","commit_id":"60f30732ed5f73c91260da8c43abbb2f28288d77","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private Void visitDeclaration(@NotNull DeclarationDescriptor descriptor) {\n            String error = bindingContext.get(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERROR, descriptor);\n            if (error != null) {\n                errors.put(descriptor, error);\n            }\n            return null;\n        }","id":56005,"modified_method":"private Void visitDeclaration(@NotNull DeclarationDescriptor descriptor) {\n            List<String> errors = bindingContext.get(BindingContext.LOAD_FROM_JAVA_SIGNATURE_ERRORS, descriptor);\n            if (errors != null) {\n                this.errors.put(descriptor, errors);\n            }\n            return null;\n        }","commit_id":"60f30732ed5f73c91260da8c43abbb2f28288d77","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public AlternativeMethodSignature(\n                @Nullable JetType returnType,\n                @Nullable JetType receiverType,\n                @NotNull List<ValueParameterDescriptor> valueParameters,\n                @NotNull List<TypeParameterDescriptor> typeParameters,\n                @Nullable String signatureError\n        ) {\n            super(signatureError);\n            this.returnType = returnType;\n            this.receiverType = receiverType;\n            this.valueParameters = valueParameters;\n            this.typeParameters = typeParameters;\n        }","id":56006,"modified_method":"public AlternativeMethodSignature(\n                @Nullable JetType returnType,\n                @Nullable JetType receiverType,\n                @NotNull List<ValueParameterDescriptor> valueParameters,\n                @NotNull List<TypeParameterDescriptor> typeParameters,\n                @NotNull List<String> signatureErrors\n        ) {\n            super(signatureErrors);\n            this.returnType = returnType;\n            this.receiverType = receiverType;\n            this.valueParameters = valueParameters;\n            this.typeParameters = typeParameters;\n        }","commit_id":"16d63f6109c07238ecd9cb902c83c2f81b30138c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@SuppressWarnings(\"MethodMayBeStatic\")\n    @NotNull\n    public AlternativeMethodSignature resolveAlternativeMethodSignature(\n            @NotNull JavaMethod method,\n            boolean hasSuperMethods,\n            @Nullable JetType returnType,\n            @Nullable JetType receiverType,\n            @NotNull List<ValueParameterDescriptor> valueParameters,\n            @NotNull List<TypeParameterDescriptor> typeParameters\n    ) {\n        AlternativeMethodSignatureData data =\n                new AlternativeMethodSignatureData(method, receiverType, valueParameters, returnType, typeParameters, hasSuperMethods);\n\n        if (data.isAnnotated() && !data.hasErrors()) {\n            return new AlternativeMethodSignature(data.getReturnType(), receiverType, data.getValueParameters(), data.getTypeParameters(),\n                                                  null);\n        }\n\n        String error = data.hasErrors() ? data.getError() : null;\n        return new AlternativeMethodSignature(returnType, receiverType, valueParameters, typeParameters, error);\n    }","id":56007,"modified_method":"@SuppressWarnings(\"MethodMayBeStatic\")\n    @NotNull\n    public AlternativeMethodSignature resolveAlternativeMethodSignature(\n            @NotNull JavaMethod method,\n            boolean hasSuperMethods,\n            @Nullable JetType returnType,\n            @Nullable JetType receiverType,\n            @NotNull List<ValueParameterDescriptor> valueParameters,\n            @NotNull List<TypeParameterDescriptor> typeParameters\n    ) {\n        AlternativeMethodSignatureData data =\n                new AlternativeMethodSignatureData(method, receiverType, valueParameters, returnType, typeParameters, hasSuperMethods);\n\n        if (data.isAnnotated() && !data.hasErrors()) {\n            return new AlternativeMethodSignature(data.getReturnType(), receiverType, data.getValueParameters(), data.getTypeParameters(),\n                                                  Collections.<String>emptyList());\n        }\n\n        List<String> error = data.hasErrors() ? Collections.singletonList(data.getError()) : Collections.<String>emptyList();\n        return new AlternativeMethodSignature(returnType, receiverType, valueParameters, typeParameters, error);\n    }","commit_id":"16d63f6109c07238ecd9cb902c83c2f81b30138c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n    public SignaturesPropagationData resolvePropagatedSignature(\n            @NotNull JavaMethod method,\n            @NotNull ClassDescriptor owner,\n            @NotNull JetType returnType,\n            @Nullable JetType receiverType,\n            @NotNull List<ValueParameterDescriptor> valueParameters,\n            @NotNull List<TypeParameterDescriptor> typeParameters\n    ) {\n        return new SignaturesPropagationData(owner, returnType, receiverType, valueParameters, typeParameters, method, trace);\n    }","id":56008,"modified_method":"@NotNull\n    public PropagatedMethodSignature resolvePropagatedSignature(\n            @NotNull JavaMethod method,\n            @NotNull ClassDescriptor owner,\n            @NotNull JetType returnType,\n            @Nullable JetType receiverType,\n            @NotNull List<ValueParameterDescriptor> valueParameters,\n            @NotNull List<TypeParameterDescriptor> typeParameters\n    ) {\n        SignaturesPropagationData data =\n                new SignaturesPropagationData(owner, returnType, receiverType, valueParameters, typeParameters, method, trace);\n        return new PropagatedMethodSignature(data.getModifiedReturnType(), data.getModifiedReceiverType(),\n                                             data.getModifiedValueParameters(), data.getModifiedTypeParameters(), data.getSignatureErrors(),\n                                             data.getSuperFunctions());\n    }","commit_id":"16d63f6109c07238ecd9cb902c83c2f81b30138c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Inject\n    public void setTrace(BindingTrace trace) {\n        this.trace = trace;\n    }","id":56009,"modified_method":"protected MemberSignature(@NotNull List<String> signatureErrors) {\n            this.signatureErrors = signatureErrors;\n        }","commit_id":"16d63f6109c07238ecd9cb902c83c2f81b30138c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public AlternativeFieldSignature(@NotNull JetType returnType, @Nullable String signatureError) {\n            super(signatureError);\n            this.returnType = returnType;\n        }","id":56010,"modified_method":"public AlternativeFieldSignature(@NotNull JetType returnType, @Nullable String signatureError) {\n            super(signatureError == null ? Collections.<String>emptyList() : Collections.singletonList(signatureError));\n            this.returnType = returnType;\n        }","commit_id":"16d63f6109c07238ecd9cb902c83c2f81b30138c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n        public List<String> getErrors() {\n            return signatureError == null ? Collections.<String>emptyList() : Collections.singletonList(signatureError);\n        }","id":56011,"modified_method":"@NotNull\n        public List<String> getErrors() {\n            return signatureErrors;\n        }","commit_id":"16d63f6109c07238ecd9cb902c83c2f81b30138c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Nullable\n    private SimpleFunctionDescriptor resolveMethodToFunctionDescriptor(\n            @NotNull JavaMethod method,\n            @NotNull ClassOrNamespaceDescriptor ownerDescriptor,\n            boolean record\n    ) {\n        if (!DescriptorResolverUtils.isCorrectOwnerForEnumMember(ownerDescriptor, method)) {\n            return null;\n        }\n\n        JavaType returnJavaType = method.getReturnType();\n        if (returnJavaType == null) {\n            // This means that the method is a constructor\n            return null;\n        }\n\n        SimpleFunctionDescriptor alreadyResolved = trace.get(BindingContext.FUNCTION, method.getPsi());\n        if (alreadyResolved != null) {\n            return alreadyResolved;\n        }\n\n        SimpleFunctionDescriptorImpl functionDescriptorImpl = new JavaMethodDescriptor(\n                ownerDescriptor,\n                annotationResolver.resolveAnnotations(method),\n                method.getName()\n        );\n\n        JavaTypeParameterResolver.Initializer typeParameterInitializer = typeParameterResolver.resolveTypeParameters(functionDescriptorImpl, method);\n        typeParameterInitializer.initialize();\n        List<TypeParameterDescriptor> methodTypeParameters = typeParameterInitializer.getDescriptors();\n\n        TypeVariableResolver typeVariableResolver = new TypeVariableResolver(methodTypeParameters, functionDescriptorImpl);\n\n        List<ValueParameterDescriptor> valueParameters =\n                valueParameterResolver.resolveValueParameters(functionDescriptorImpl, method, typeVariableResolver);\n        JetType returnType = makeReturnType(returnJavaType, method, typeVariableResolver);\n\n\n        List<String> signatureErrors;\n        List<FunctionDescriptor> superFunctions;\n        ExternalSignatureResolver.AlternativeMethodSignature effectiveSignature;\n\n        if (ownerDescriptor instanceof NamespaceDescriptor) {\n            superFunctions = Collections.emptyList();\n            effectiveSignature = externalSignatureResolver\n                    .resolveAlternativeMethodSignature(method, false, returnType, null, valueParameters, methodTypeParameters);\n            signatureErrors = effectiveSignature.getErrors();\n        }\n        else if (ownerDescriptor instanceof ClassDescriptor) {\n            SignaturesPropagationData propagated = externalSignatureResolver\n                    .resolvePropagatedSignature(method, (ClassDescriptor) ownerDescriptor, returnType, null, valueParameters,\n                                                methodTypeParameters);\n\n            superFunctions = propagated.getSuperFunctions();\n\n            effectiveSignature = externalSignatureResolver\n                    .resolveAlternativeMethodSignature(method, !superFunctions.isEmpty(), propagated.getModifiedReturnType(),\n                                                       propagated.getModifiedReceiverType(), propagated.getModifiedValueParameters(),\n                                                       propagated.getModifiedTypeParameters());\n\n            signatureErrors = new ArrayList<String>(propagated.getSignatureErrors());\n            signatureErrors.addAll(effectiveSignature.getErrors());\n        }\n        else {\n            throw new IllegalStateException(\"Unknown class or namespace descriptor: \" + ownerDescriptor);\n        }\n\n        functionDescriptorImpl.initialize(\n                effectiveSignature.getReceiverType(),\n                DescriptorUtils.getExpectedThisObjectIfNeeded(ownerDescriptor),\n                effectiveSignature.getTypeParameters(),\n                effectiveSignature.getValueParameters(),\n                effectiveSignature.getReturnType(),\n                Modality.convertFromFlags(method.isAbstract(), !method.isFinal()),\n                method.getVisibility(),\n                /*isInline = */ false\n        );\n\n        if (functionDescriptorImpl.getKind() == CallableMemberDescriptor.Kind.DECLARATION && record) {\n            BindingContextUtils.recordFunctionDeclarationToDescriptor(trace, method.getPsi(), functionDescriptorImpl);\n        }\n\n        if (!RawTypesCheck.hasRawTypesInHierarchicalSignature(method)\n            && JavaMethodSignatureUtil.isMethodReturnTypeCompatible(method)\n            && !containsErrorType(superFunctions, functionDescriptorImpl)) {\n            if (signatureErrors.isEmpty()) {\n                checkFunctionsOverrideCorrectly(method, superFunctions, functionDescriptorImpl);\n            }\n            else if (record) {\n                externalSignatureResolver.reportSignatureErrors(functionDescriptorImpl, signatureErrors);\n            }\n        }\n\n        return functionDescriptorImpl;\n    }","id":56012,"modified_method":"@Nullable\n    private SimpleFunctionDescriptor resolveMethodToFunctionDescriptor(\n            @NotNull JavaMethod method,\n            @NotNull ClassOrNamespaceDescriptor ownerDescriptor,\n            boolean record\n    ) {\n        if (!DescriptorResolverUtils.isCorrectOwnerForEnumMember(ownerDescriptor, method)) {\n            return null;\n        }\n\n        JavaType returnJavaType = method.getReturnType();\n        if (returnJavaType == null) {\n            // This means that the method is a constructor\n            return null;\n        }\n\n        SimpleFunctionDescriptor alreadyResolved = trace.get(BindingContext.FUNCTION, method.getPsi());\n        if (alreadyResolved != null) {\n            return alreadyResolved;\n        }\n\n        SimpleFunctionDescriptorImpl functionDescriptorImpl = new JavaMethodDescriptor(\n                ownerDescriptor,\n                annotationResolver.resolveAnnotations(method),\n                method.getName()\n        );\n\n        JavaTypeParameterResolver.Initializer typeParameterInitializer = typeParameterResolver.resolveTypeParameters(functionDescriptorImpl, method);\n        typeParameterInitializer.initialize();\n        List<TypeParameterDescriptor> methodTypeParameters = typeParameterInitializer.getDescriptors();\n\n        TypeVariableResolver typeVariableResolver = new TypeVariableResolver(methodTypeParameters, functionDescriptorImpl);\n\n        List<ValueParameterDescriptor> valueParameters =\n                valueParameterResolver.resolveValueParameters(functionDescriptorImpl, method, typeVariableResolver);\n        JetType returnType = makeReturnType(returnJavaType, method, typeVariableResolver);\n\n\n        List<String> signatureErrors;\n        List<FunctionDescriptor> superFunctions;\n        ExternalSignatureResolver.AlternativeMethodSignature effectiveSignature;\n\n        if (ownerDescriptor instanceof NamespaceDescriptor) {\n            superFunctions = Collections.emptyList();\n            effectiveSignature = externalSignatureResolver\n                    .resolveAlternativeMethodSignature(method, false, returnType, null, valueParameters, methodTypeParameters);\n            signatureErrors = effectiveSignature.getErrors();\n        }\n        else if (ownerDescriptor instanceof ClassDescriptor) {\n            ExternalSignatureResolver.PropagatedMethodSignature propagated = externalSignatureResolver\n                    .resolvePropagatedSignature(method, (ClassDescriptor) ownerDescriptor, returnType, null, valueParameters,\n                                                methodTypeParameters);\n\n            superFunctions = propagated.getSuperMethods();\n\n            effectiveSignature = externalSignatureResolver\n                    .resolveAlternativeMethodSignature(method, !superFunctions.isEmpty(), propagated.getReturnType(),\n                                                       propagated.getReceiverType(), propagated.getValueParameters(),\n                                                       propagated.getTypeParameters());\n\n            signatureErrors = new ArrayList<String>(propagated.getErrors());\n            signatureErrors.addAll(effectiveSignature.getErrors());\n        }\n        else {\n            throw new IllegalStateException(\"Unknown class or namespace descriptor: \" + ownerDescriptor);\n        }\n\n        functionDescriptorImpl.initialize(\n                effectiveSignature.getReceiverType(),\n                DescriptorUtils.getExpectedThisObjectIfNeeded(ownerDescriptor),\n                effectiveSignature.getTypeParameters(),\n                effectiveSignature.getValueParameters(),\n                effectiveSignature.getReturnType(),\n                Modality.convertFromFlags(method.isAbstract(), !method.isFinal()),\n                method.getVisibility(),\n                /*isInline = */ false\n        );\n\n        if (functionDescriptorImpl.getKind() == CallableMemberDescriptor.Kind.DECLARATION && record) {\n            BindingContextUtils.recordFunctionDeclarationToDescriptor(trace, method.getPsi(), functionDescriptorImpl);\n        }\n\n        if (!RawTypesCheck.hasRawTypesInHierarchicalSignature(method)\n            && JavaMethodSignatureUtil.isMethodReturnTypeCompatible(method)\n            && !containsErrorType(superFunctions, functionDescriptorImpl)) {\n            if (signatureErrors.isEmpty()) {\n                checkFunctionsOverrideCorrectly(method, superFunctions, functionDescriptorImpl);\n            }\n            else if (record) {\n                externalSignatureResolver.reportSignatureErrors(functionDescriptorImpl, signatureErrors);\n            }\n        }\n\n        return functionDescriptorImpl;\n    }","commit_id":"16d63f6109c07238ecd9cb902c83c2f81b30138c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public String toString()\n    {\n        return format( \"Step[%s, processors:%d, batches:%d\", name, numberOfProcessors(), doneBatches.get() );\n    }","id":56013,"modified_method":"@Override\n    public String toString()\n    {\n        return format( \"%s[%s, processors:%d, batches:%d\", getClass().getSimpleName(),\n                name, numberOfProcessors(), doneBatches.get() );\n    }","commit_id":"e9267beaeaf1368c9f7b89d652123751666f3bf2","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ControlledStep<T> setNumberOfProcessors( int numberOfProcessors )\n    {\n        assertTrue( numberOfProcessors <= maxProcessors );\n        this.numberOfProcessors = numberOfProcessors;\n        return this;\n    }","id":56014,"modified_method":"public ControlledStep<T> setProcessors( int numberOfProcessors )\n    {\n        assertTrue( numberOfProcessors <= maxProcessors );\n        this.numberOfProcessors = numberOfProcessors;\n        setNumberOfProcessors( numberOfProcessors );\n        return this;\n    }","commit_id":"e9267beaeaf1368c9f7b89d652123751666f3bf2","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldRemoveCPUsButNotSoThatTheFastStepBecomesBottleneck() throws Exception\n    {\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 3 );\n\n        ControlledStep<?> slowStep = spy( stepWithStats( \"slow\", 1, avg_processing_time, 10L, done_batches, 10L ) );\n        ControlledStep<?> fastStep = spy( stepWithStats( \"fast\", 0, avg_processing_time, 7L, done_batches, 10L )\n                .setNumberOfProcessors( 3 ) );\n\n        StageExecution[] execution = executionOf( config, slowStep, fastStep );\n        assigner.start( execution );\n\n        // WHEN checking the first time\n        assigner.check( execution );\n\n        // THEN one processor should be removed from the fast step\n        verify( fastStep, times( 0 ) ).incrementNumberOfProcessors();\n        verify( fastStep, times( 0 ) ).decrementNumberOfProcessors();\n    }","id":56015,"modified_method":"@Test\n    public void shouldRemoveCPUsButNotSoThatTheFastStepBecomesBottleneck() throws Exception\n    {\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 3 );\n\n        ControlledStep<?> slowStep = spy( stepWithStats( \"slow\", 1, avg_processing_time, 10L, done_batches, 10L ) );\n        ControlledStep<?> fastStep = spy( stepWithStats( \"fast\", 0, avg_processing_time, 7L, done_batches, 10L )\n                .setProcessors( 3 ) );\n\n        StageExecution[] execution = executionOf( config, slowStep, fastStep );\n        assigner.start( execution );\n\n        // WHEN checking the first time\n        assigner.check( execution );\n\n        // THEN one processor should be removed from the fast step\n        verify( fastStep, times( 0 ) ).incrementNumberOfProcessors();\n        verify( fastStep, times( 0 ) ).decrementNumberOfProcessors();\n    }","commit_id":"e9267beaeaf1368c9f7b89d652123751666f3bf2","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldRemoveCPUsFromWayTooFastStep() throws Exception\n    {\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        // available processors = 2 is enough because it will see the fast step as only using 20% of a processor\n        // and it rounds down. So there's room for assigning one more.\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 3 );\n\n        ControlledStep<?> slowStep = spy( stepWithStats( \"slow\", 1, avg_processing_time, 10L, done_batches, 10L ) );\n        ControlledStep<?> fastStep = spy( stepWithStats( \"fast\", 0, avg_processing_time, 2L, done_batches, 10L )\n                .setNumberOfProcessors( 2 ) );\n\n        StageExecution[] execution = executionOf( config, slowStep, fastStep );\n        assigner.start( execution );\n\n        // WHEN checking\n        assigner.check( execution );\n\n        // THEN one processor should be removed from the fast step\n        verify( fastStep, times( 0 ) ).incrementNumberOfProcessors();\n        verify( fastStep, times( 1 ) ).decrementNumberOfProcessors();\n    }","id":56016,"modified_method":"@Test\n    public void shouldRemoveCPUsFromWayTooFastStep() throws Exception\n    {\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        // available processors = 2 is enough because it will see the fast step as only using 20% of a processor\n        // and it rounds down. So there's room for assigning one more.\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 3 );\n\n        ControlledStep<?> slowStep = spy( stepWithStats( \"slow\", 1, avg_processing_time, 10L, done_batches, 10L ) );\n        ControlledStep<?> fastStep = spy( stepWithStats( \"fast\", 0, avg_processing_time, 2L, done_batches, 10L )\n                .setProcessors( 2 ) );\n\n        StageExecution[] execution = executionOf( config, slowStep, fastStep );\n        assigner.start( execution );\n\n        // WHEN checking\n        assigner.check( execution );\n\n        // THEN one processor should be removed from the fast step\n        verify( fastStep, times( 0 ) ).incrementNumberOfProcessors();\n        verify( fastStep, times( 1 ) ).decrementNumberOfProcessors();\n    }","commit_id":"e9267beaeaf1368c9f7b89d652123751666f3bf2","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldRemoveCPUsFromTooFastStepEvenIfThereIsAWayFaster() throws Exception\n    {\n        // The point is that not only the fastest step is subject to have processors removed,\n        // it's the relationship between all pairs of steps. This is important since the DPA has got\n        // a max permit count of processors to assign, so reclaiming unnecessary assignments can\n        // have those be assigned to a more appropriate step instead, where it will benefit the Stage more.\n\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 5 );\n        Step<?> wayFastest = stepWithStats( \"wayFastest\", 0, avg_processing_time, 0L, done_batches, 20L );\n        Step<?> fast = spy( stepWithStats( \"fast\", 0, avg_processing_time, 100L, done_batches, 20L )\n                .setNumberOfProcessors( 3 ) );\n        Step<?> slow = stepWithStats( \"slow\", 1, avg_processing_time, 220L, done_batches, 20L );\n        StageExecution[] execution = executionOf( config, slow, wayFastest, fast );\n        assigner.start( execution );\n\n        // WHEN\n        assigner.check( execution );\n\n        // THEN\n        verify( fast ).decrementNumberOfProcessors();\n    }","id":56017,"modified_method":"@Test\n    public void shouldRemoveCPUsFromTooFastStepEvenIfThereIsAWayFaster() throws Exception\n    {\n        // The point is that not only the fastest step is subject to have processors removed,\n        // it's the relationship between all pairs of steps. This is important since the DPA has got\n        // a max permit count of processors to assign, so reclaiming unnecessary assignments can\n        // have those be assigned to a more appropriate step instead, where it will benefit the Stage more.\n\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 5 );\n        Step<?> wayFastest = stepWithStats( \"wayFastest\", 0, avg_processing_time, 0L, done_batches, 20L );\n        Step<?> fast = spy( stepWithStats( \"fast\", 0, avg_processing_time, 100L, done_batches, 20L )\n                .setProcessors( 3 ) );\n        Step<?> slow = stepWithStats( \"slow\", 1, avg_processing_time, 220L, done_batches, 20L );\n        StageExecution[] execution = executionOf( config, slow, wayFastest, fast );\n        assigner.start( execution );\n\n        // WHEN\n        assigner.check( execution );\n\n        // THEN\n        verify( fast ).decrementNumberOfProcessors();\n    }","commit_id":"e9267beaeaf1368c9f7b89d652123751666f3bf2","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public synchronized boolean decrementNumberOfProcessors()\n    {\n        if ( numberOfProcessors() == 1 )\n        {\n            return false;\n        }\n        setNumberOfProcessors( numberOfProcessors() - 1 );\n        return true;\n    }","id":56018,"modified_method":"@Override\n    public synchronized boolean decrementNumberOfProcessors()\n    {\n        if ( shutDown )\n        {\n            return false;\n        }\n        int currentNumber = numberOfProcessors();\n        if ( currentNumber == 1 )\n        {\n            return false;\n        }\n\n        Processor[] newProcessors = Arrays.copyOf( processors, currentNumber - 1 );\n        processors[currentNumber-1].shutDown = true;\n        processors = newProcessors;\n        return true;\n    }","commit_id":"e9267beaeaf1368c9f7b89d652123751666f3bf2","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public synchronized boolean incrementNumberOfProcessors()\n    {\n        if ( numberOfProcessors() >= maxProcessorCount )\n        {\n            return false;\n        }\n        setNumberOfProcessors( numberOfProcessors() + 1 );\n        return true;\n    }","id":56019,"modified_method":"@Override\n    public synchronized boolean incrementNumberOfProcessors()\n    {\n        if ( shutDown )\n        {\n            return false;\n        }\n        int currentNumber = numberOfProcessors();\n        if ( currentNumber >= maxProcessorCount )\n        {\n            return false;\n        }\n\n        Processor[] newProcessors = Arrays.copyOf( processors, currentNumber + 1 );\n        newProcessors[currentNumber] = new Processor( processorThreadNamePrefix + \"-\" + currentNumber );\n        this.processors = newProcessors;\n        return true;\n    }","commit_id":"e9267beaeaf1368c9f7b89d652123751666f3bf2","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ControlledStep( String name, boolean allowMultipleProcessors )\n    {\n        this( name, allowMultipleProcessors, 1 );\n    }","id":56020,"modified_method":"public ControlledStep( String name, int maxProcessors, int initialProcessorCount )\n    {\n        this.maxProcessors = maxProcessors == 0 ? Integer.MAX_VALUE : maxProcessors;\n        this.name = name;\n        setNumberOfProcessors( initialProcessorCount );\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static ControlledStep<?> stepWithStats( Object... statisticsAltKeyAndValue )\n    {\n        return stepWithStats( MapUtil.<Key,Long>genericMap( statisticsAltKeyAndValue ) );\n    }","id":56021,"modified_method":"public static ControlledStep<?> stepWithStats( String name, int maxProcessors, Object... statisticsAltKeyAndValue )\n    {\n        return stepWithStats( name, maxProcessors, MapUtil.<Key,Long>genericMap( statisticsAltKeyAndValue ) );\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ControlledStep<T> setNumberOfProcessors( int numberOfProcessors )\n    {\n        assertTrue( allowMultipleProcessors );\n        this.numberOfProcessors = numberOfProcessors;\n        return this;\n    }","id":56022,"modified_method":"public ControlledStep<T> setNumberOfProcessors( int numberOfProcessors )\n    {\n        assertTrue( numberOfProcessors <= maxProcessors );\n        this.numberOfProcessors = numberOfProcessors;\n        return this;\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static ControlledStep<?> stepWithStats( Map<Key,Long> statistics )\n    {\n        ControlledStep<?> step = new ControlledStep<>( \"test\", true );\n        for ( Map.Entry<Key,Long> statistic : statistics.entrySet() )\n        {\n            step.setStat( statistic.getKey(), statistic.getValue().longValue() );\n        }\n        return step;\n    }","id":56023,"modified_method":"public static ControlledStep<?> stepWithStats( String name, int maxProcessors,\n            Map<Key,Long> statistics )\n    {\n        ControlledStep<?> step = new ControlledStep<>( name, maxProcessors );\n        for ( Map.Entry<Key,Long> statistic : statistics.entrySet() )\n        {\n            step.setStat( statistic.getKey(), statistic.getValue().longValue() );\n        }\n        return step;\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public synchronized boolean incrementNumberOfProcessors()\n    {\n        if ( !allowMultipleProcessors )\n        {\n            return false;\n        }\n        numberOfProcessors++;\n        return true;\n    }","id":56024,"modified_method":"@Override\n    public synchronized boolean incrementNumberOfProcessors()\n    {\n        if ( numberOfProcessors >= maxProcessors )\n        {\n            return false;\n        }\n        numberOfProcessors++;\n        return true;\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ControlledStep( String name, boolean allowMultipleProcessors, int initialProcessorCount )\n    {\n        this.name = name;\n        this.allowMultipleProcessors = allowMultipleProcessors;\n        this.numberOfProcessors = initialProcessorCount;\n    }","id":56025,"modified_method":"public ControlledStep( String name, int maxProcessors )\n    {\n        this( name, maxProcessors, 1 );\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static ControlledStep<?> stepWithAverageOf( long avg )\n    {\n        ControlledStep<?> step = new ControlledStep<>( \"test\", true );\n        step.setStat( Keys.avg_processing_time, avg );\n        return step;\n    }","id":56026,"modified_method":"public static ControlledStep<?> stepWithAverageOf( String name, int maxProcessors, long avg )\n    {\n        return stepWithStats( name, maxProcessors, Keys.avg_processing_time, avg );\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean removeProcessorFromPotentialIdleStep( StageExecution execution )\n    {\n        for ( Pair<Step<?>,Float> fast : execution.stepsOrderedBy( Keys.avg_processing_time, true ) )\n        {\n            float threshold = 1f - (1f/fast.first().numberOfProcessors());\n            if ( fast.other() < threshold )\n            {\n                Step<?> fastestStep = fast.first();\n                long doneBatches = batches( fastestStep );\n                if ( batchesPassedSinceLastChange( fastestStep, doneBatches ) >= config.movingAverageSize() )\n                {\n                    if ( fastestStep.decrementNumberOfProcessors() )\n                    {\n                        lastChangedProcessors.put( fastestStep, doneBatches );\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }","id":56027,"modified_method":"private boolean removeProcessorFromPotentialIdleStep( StageExecution execution )\n    {\n        for ( Pair<Step<?>,Float> fast : execution.stepsOrderedBy( Keys.avg_processing_time, true ) )\n        {\n            int numberOfProcessors = fast.first().numberOfProcessors();\n            if ( numberOfProcessors == 1 )\n            {\n                continue;\n            }\n\n            // Translate the factor compared to the next (slower) step and see if this step would still\n            // be faster if we decremented the processor count, with a slight conservative margin as well\n            // (0.8 instead of 1.0 so that we don't decrement and immediately become the bottleneck ourselves).\n            float factorWithDecrementedProcessorCount =\n                    fast.other().floatValue()*numberOfProcessors/(numberOfProcessors-1);\n            if ( factorWithDecrementedProcessorCount < 0.8f )\n            {\n                Step<?> fastestStep = fast.first();\n                long doneBatches = batches( fastestStep );\n                if ( batchesPassedSinceLastChange( fastestStep, doneBatches ) >= config.movingAverageSize() )\n                {\n                    if ( fastestStep.decrementNumberOfProcessors() )\n                    {\n                        lastChangedProcessors.put( fastestStep, doneBatches );\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldHandleZeroAverage() throws Exception\n    {\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 5 );\n\n        ControlledStep<?> aStep = new ControlledStep<>( \"slow\", true );\n        aStep.setStat( Keys.avg_processing_time, 0 );\n        aStep.setStat( Keys.done_batches, 0 );\n\n        ControlledStep<?> anotherStep = new ControlledStep<>( \"fast\", true );\n        anotherStep.setStat( Keys.avg_processing_time, 0 );\n        anotherStep.setStat( Keys.done_batches, 0 );\n\n        StageExecution[] execution = executionOf( config, aStep, anotherStep );\n        assigner.start( execution );\n\n        // WHEN\n        assigner.check( execution );\n\n        // THEN\n        assertEquals( 1, aStep.numberOfProcessors() );\n        assertEquals( 1, anotherStep.numberOfProcessors() );\n    }","id":56028,"modified_method":"@Test\n    public void shouldHandleZeroAverage() throws Exception\n    {\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 5 );\n\n        ControlledStep<?> aStep = stepWithStats( \"slow\", 0, avg_processing_time, 0L, done_batches, 0L );\n        ControlledStep<?> anotherStep = stepWithStats( \"fast\", 0, avg_processing_time, 0L, done_batches, 0L );\n\n        StageExecution[] execution = executionOf( config, aStep, anotherStep );\n        assigner.start( execution );\n\n        // WHEN\n        assigner.check( execution );\n\n        // THEN\n        assertEquals( 1, aStep.numberOfProcessors() );\n        assertEquals( 1, anotherStep.numberOfProcessors() );\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAssignAdditionalCPUToBottleNeckStep() throws Exception\n    {\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 5 );\n\n        ControlledStep<?> slowStep = new ControlledStep<>( \"slow\", true );\n        slowStep.setStat( Keys.avg_processing_time, 10 );\n        slowStep.setStat( Keys.done_batches, 10 );\n\n        ControlledStep<?> fastStep = new ControlledStep<>( \"fast\", true );\n        fastStep.setStat( Keys.avg_processing_time, 2 );\n        fastStep.setStat( Keys.done_batches, 10 );\n\n        StageExecution[] execution = executionOf( config, slowStep, fastStep );\n        assigner.start( execution );\n\n        // WHEN\n        assigner.check( execution );\n\n        // THEN\n        assertEquals( 5, slowStep.numberOfProcessors() );\n        assertEquals( 1, fastStep.numberOfProcessors() );\n    }","id":56029,"modified_method":"@Test\n    public void shouldAssignAdditionalCPUToBottleNeckStep() throws Exception\n    {\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 5 );\n\n        ControlledStep<?> slowStep = stepWithStats( \"slow\", 0, avg_processing_time, 10L, done_batches, 10L );\n        ControlledStep<?> fastStep = stepWithStats( \"fast\", 0, avg_processing_time, 2L, done_batches, 10L );\n\n        StageExecution[] execution = executionOf( config, slowStep, fastStep );\n        assigner.start( execution );\n\n        // WHEN\n        assigner.check( execution );\n\n        // THEN\n        assertEquals( 5, slowStep.numberOfProcessors() );\n        assertEquals( 1, fastStep.numberOfProcessors() );\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldRemoveCPUsFromWayTooFastStep() throws Exception\n    {\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        // available processors = 2 is enough because it will see the fast step as only using 20% of a processor\n        // and it rounds down. So there's room for assigning one more.\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 3 );\n\n        ControlledStep<?> slowStep = spy( new ControlledStep<>( \"slow\", true ) );\n        slowStep.setStat( Keys.avg_processing_time, 10 );\n        slowStep.setStat( Keys.done_batches, 10 );\n\n        ControlledStep<?> fastStep = spy( new ControlledStep<>( \"fast\", true, 2 ) );\n        fastStep.setStat( Keys.avg_processing_time, 2 );\n        fastStep.setStat( Keys.done_batches, 10 );\n\n        StageExecution[] execution = executionOf( config, slowStep, fastStep );\n        assigner.start( execution );\n\n        // WHEN first checking\n        assigner.check( execution );\n        // THEN one additional processor will be added to the slow step\n        verify( fastStep, times( 0 ) ).incrementNumberOfProcessors();\n        verify( fastStep, times( 1 ) ).decrementNumberOfProcessors();\n    }","id":56030,"modified_method":"@Test\n    public void shouldRemoveCPUsFromWayTooFastStep() throws Exception\n    {\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        // available processors = 2 is enough because it will see the fast step as only using 20% of a processor\n        // and it rounds down. So there's room for assigning one more.\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 3 );\n\n        ControlledStep<?> slowStep = spy( stepWithStats( \"slow\", 1, avg_processing_time, 10L, done_batches, 10L ) );\n        ControlledStep<?> fastStep = spy( stepWithStats( \"fast\", 0, avg_processing_time, 2L, done_batches, 10L )\n                .setNumberOfProcessors( 2 ) );\n\n        StageExecution[] execution = executionOf( config, slowStep, fastStep );\n        assigner.start( execution );\n\n        // WHEN checking\n        assigner.check( execution );\n\n        // THEN one processor should be removed from the fast step\n        verify( fastStep, times( 0 ) ).incrementNumberOfProcessors();\n        verify( fastStep, times( 1 ) ).decrementNumberOfProcessors();\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldRemoveCPUsFromTooFastStepEvenIfThereIsAWayFaster() throws Exception\n    {\n        // The point is that not only the fastest step is subject to have processors removed,\n        // it's the relationship between all pairs of steps. This is important since the DPA has got\n        // a max permit count of processors to assign, so reclaiming unnecessary assignments can\n        // have those be assigned to a more appropriate step instead, where it will benefit the Stage more.\n\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 5 );\n        Step<?> wayFastest = stepWithStats( avg_processing_time, 0L, done_batches, 20L );\n        Step<?> fast =  spy( stepWithStats( avg_processing_time, 100L, done_batches, 20L ).setNumberOfProcessors( 3 ) );\n        Step<?> slow = stepWithStats( avg_processing_time, 200L, done_batches, 20L );\n        StageExecution[] execution = executionOf( config, slow, wayFastest, fast );\n        assigner.start( execution );\n\n        // WHEN\n        assigner.check( execution );\n\n        // THEN\n        verify( fast ).decrementNumberOfProcessors();\n    }","id":56031,"modified_method":"@Test\n    public void shouldRemoveCPUsFromTooFastStepEvenIfThereIsAWayFaster() throws Exception\n    {\n        // The point is that not only the fastest step is subject to have processors removed,\n        // it's the relationship between all pairs of steps. This is important since the DPA has got\n        // a max permit count of processors to assign, so reclaiming unnecessary assignments can\n        // have those be assigned to a more appropriate step instead, where it will benefit the Stage more.\n\n        // GIVEN\n        Configuration config = movingAverageConfig( 10 );\n        DynamicProcessorAssigner assigner = new DynamicProcessorAssigner( config, 5 );\n        Step<?> wayFastest = stepWithStats( \"wayFastest\", 0, avg_processing_time, 0L, done_batches, 20L );\n        Step<?> fast = spy( stepWithStats( \"fast\", 0, avg_processing_time, 100L, done_batches, 20L )\n                .setNumberOfProcessors( 3 ) );\n        Step<?> slow = stepWithStats( \"slow\", 1, avg_processing_time, 220L, done_batches, 20L );\n        StageExecution[] execution = executionOf( config, slow, wayFastest, fast );\n        assigner.start( execution );\n\n        // WHEN\n        assigner.check( execution );\n\n        // THEN\n        verify( fast ).decrementNumberOfProcessors();\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldOrderStepsDescending() throws Exception\n    {\n        // GIVEN\n        Collection<Step<?>> steps = new ArrayList<>();\n        steps.add( stepWithAverageOf( 10 ) );\n        steps.add( stepWithAverageOf( 5 ) );\n        steps.add( stepWithAverageOf( 30 ) );\n        steps.add( stepWithAverageOf( 5 ) );\n        StageExecution execution = new StageExecution( \"Test\", DEFAULT, steps, true );\n\n        // WHEN\n        Iterator<Pair<Step<?>,Float>> ordered = execution.stepsOrderedBy( Keys.avg_processing_time, false ).iterator();\n\n        // THEN\n        Pair<Step<?>,Float> slowest = ordered.next();\n        assertEquals( 3f, slowest.other().floatValue(), 0f );\n        Pair<Step<?>,Float> slower = ordered.next();\n        assertEquals( 2f, slower.other().floatValue(), 0f );\n        Pair<Step<?>,Float> slow = ordered.next();\n        assertEquals( 1f, slow.other().floatValue(), 0f );\n        Pair<Step<?>,Float> alsoSlow = ordered.next();\n        assertEquals( 1f, alsoSlow.other().floatValue(), 0f );\n        assertFalse( ordered.hasNext() );\n    }","id":56032,"modified_method":"@Test\n    public void shouldOrderStepsDescending() throws Exception\n    {\n        // GIVEN\n        Collection<Step<?>> steps = new ArrayList<>();\n        steps.add( stepWithAverageOf( \"step1\", 0, 10 ) );\n        steps.add( stepWithAverageOf( \"step2\", 0, 5 ) );\n        steps.add( stepWithAverageOf( \"step3\", 0, 30 ) );\n        steps.add( stepWithAverageOf( \"step4\", 0, 5 ) );\n        StageExecution execution = new StageExecution( \"Test\", DEFAULT, steps, true );\n\n        // WHEN\n        Iterator<Pair<Step<?>,Float>> ordered = execution.stepsOrderedBy( Keys.avg_processing_time, false ).iterator();\n\n        // THEN\n        Pair<Step<?>,Float> slowest = ordered.next();\n        assertEquals( 3f, slowest.other().floatValue(), 0f );\n        Pair<Step<?>,Float> slower = ordered.next();\n        assertEquals( 2f, slower.other().floatValue(), 0f );\n        Pair<Step<?>,Float> slow = ordered.next();\n        assertEquals( 1f, slow.other().floatValue(), 0f );\n        Pair<Step<?>,Float> alsoSlow = ordered.next();\n        assertEquals( 1f, alsoSlow.other().floatValue(), 0f );\n        assertFalse( ordered.hasNext() );\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldOrderStepsAscending() throws Exception\n    {\n        // GIVEN\n        Collection<Step<?>> steps = new ArrayList<>();\n        steps.add( stepWithAverageOf( 10 ) );\n        steps.add( stepWithAverageOf( 5 ) );\n        steps.add( stepWithAverageOf( 30 ) );\n        StageExecution execution = new StageExecution( \"Test\", DEFAULT, steps, true );\n\n        // WHEN\n        Iterator<Pair<Step<?>,Float>> ordered = execution.stepsOrderedBy( Keys.avg_processing_time, true ).iterator();\n\n        // THEN\n        Pair<Step<?>,Float> fastest = ordered.next();\n        assertEquals( 1f/2f, fastest.other().floatValue(), 0f );\n        Pair<Step<?>,Float> faster = ordered.next();\n        assertEquals( 1f/3f, faster.other().floatValue(), 0f );\n        Pair<Step<?>,Float> fast = ordered.next();\n        assertEquals( 1f, fast.other().floatValue(), 0f );\n        assertFalse( ordered.hasNext() );\n    }","id":56033,"modified_method":"@Test\n    public void shouldOrderStepsAscending() throws Exception\n    {\n        // GIVEN\n        Collection<Step<?>> steps = new ArrayList<>();\n        steps.add( stepWithAverageOf( \"step1\", 0, 10 ) );\n        steps.add( stepWithAverageOf( \"step2\", 0, 5 ) );\n        steps.add( stepWithAverageOf( \"step3\", 0, 30 ) );\n        StageExecution execution = new StageExecution( \"Test\", DEFAULT, steps, true );\n\n        // WHEN\n        Iterator<Pair<Step<?>,Float>> ordered = execution.stepsOrderedBy( Keys.avg_processing_time, true ).iterator();\n\n        // THEN\n        Pair<Step<?>,Float> fastest = ordered.next();\n        assertEquals( 1f/2f, fastest.other().floatValue(), 0f );\n        Pair<Step<?>,Float> faster = ordered.next();\n        assertEquals( 1f/3f, faster.other().floatValue(), 0f );\n        Pair<Step<?>,Float> fast = ordered.next();\n        assertEquals( 1f, fast.other().floatValue(), 0f );\n        assertFalse( ordered.hasNext() );\n    }","commit_id":"aecd5d72b901944b41b3cf0c38136928f31a8bc6","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected String postProcess(String content) {\n\t\treturn TABLE_OF_CONTENTS + super.postProcess(content);\n\t}","id":56034,"modified_method":"protected String postProcess(String content) {\n\t\tMatcher matcher = Pattern.compile(\n\t\t\t\"\\\\[{2}([^\\\\]]*)\\\\]{2}\", Pattern.DOTALL).matcher(content);\n\n\t\twhile (matcher.find()) {\n\t\t\tString linkWithUnderscores = matcher.group(1);\n\n\t\t\tString link = linkWithUnderscores.replaceAll(\n\t\t\t\tStringPool.UNDERLINE, StringPool.SPACE);\n\n\t\t\tcontent = content.replaceAll(linkWithUnderscores, link);\n\t\t}\n\n\t\treturn TABLE_OF_CONTENTS + super.postProcess(content);\n\t}","commit_id":"2ea432537791d0fe1829cc42b2024072c82d4181","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void initNowikiRegexps() {\n\n\t\t// Preformat protected\n\n\t\tnowikiRegexps.add(\"(<nowiki>)(.*?)(<\/nowiki>)\");\n\n\t\t// Escape protected\n\n\t\tnowikiRegexps.add(\n\t\t\t\"~(\\\\*\\\\*|~|//|-|#|\\\\{\\\\{|}}|\\\\\\\\|~\\\\[~~[|]]|----|=|\\\\|)\");\n\t}","id":56035,"modified_method":"protected void initNowikiRegexps() {\n\n\t\t// Preformat protected\n\n\t\tnowikiRegexps.add(\"(<nowiki>)(.*?)(<\/nowiki>)\");\n\t\tnowikiRegexps.add(\"(<pre>)(.*?)(<\/pre>)\");\n\n\t\t// Escape protected\n\n\t\tnowikiRegexps.add(\n\t\t\t\"~(\\\\*\\\\*|~|//|-|#|\\\\{\\\\{|}}|\\\\\\\\|~\\\\[~~[|]]|----|=|\\\\|)\");\n\t}","commit_id":"2ea432537791d0fe1829cc42b2024072c82d4181","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void initRegexps() {\n\n\t\t// Clean unnecessary header emphasis\n\n\t\tregexps.put(\"= '''([^=]*)''' =\", \"= $1 =\");\n\t\tregexps.put(\"== '''([^=]*)''' ==\", \"== $1 ==\");\n\t\tregexps.put(\"== '''([^=]*)''' ===\", \"=== $1 ===\");\n\n\t\t// Unscape angle brackets\n\n\t\tregexps.put(\"&lt;\", \"<\");\n\t\tregexps.put(\"&gt;\", \">\");\n\n\t\t// Category removal\n\n\t\tregexps.put(\"\\\\[\\\\[[Cc]ategory:([^\\\\]]*)\\\\]\\\\][\\\\n]*\", \"\");\n\n\t\t// Bold and italics\n\n\t\tregexps.put(\n\t\t\t\"''''((?s:.)*?)(''''|(\\n\\n|\\r\\r|\\r\\n\\r\\n))\", \"**//$1//**$3\");\n\n\t\t// Bold\n\n\t\tregexps.put(\"'''((?s:.)*?)('''|(\\n\\n|\\r\\r|\\r\\n\\r\\n))\", \"**$1**$3\");\n\n\t\t// Italics\n\n\t\tregexps.put(\"''((?s:.)*?)(''|(\\n\\n|\\r\\r|\\r\\n\\r\\n))\", \"//$1//$3\");\n\n\t\t// Images\n\n\t\tregexps.put(\n\t\t\t\"\\\\[{2}Image:([^\\\\]]*)\\\\]{2}\",\n\t\t\t\"{{\" + MediaWikiImporter.SHARED_IMAGES_TITLE + \"/$1}}\");\n\n\t\t// Normalize URLs\n\n\t\tregexps.put(\"\\\\[{2}((http|ftp)[^ ]*) ([^\\\\]]*)\\\\]{2}\", \"[$1 $3]\");\n\n\t\t// URL\n\n\t\tregexps.put(\"\\\\[((http|ftp)[^ ]*)\\\\]\", \"[[$1]]\");\n\n\t\t// URL with label\n\n\t\tregexps.put(\"\\\\[((http|ftp)[^ ]*) ([^\\\\]]*)\\\\]\", \"[[$1|$3]]\");\n\n\t\t// Monospace\n\n\t\tregexps.put(\"(^ (.+))(\\\\n (.+))*\", \"{{{\\n$0\\n}}}\");\n\n\t\t// Term and definition\n\n\t\tregexps.put(\"^\\\\t([\\\\w]+):\\\\t(.*)\", \"**$1**:\\n$2\");\n\n\t\t// Indented paragraph\n\n\t\tregexps.put(\"^\\\\t:\\\\t(.*)\", \"$1\");\n\n\t\t// No wiki\n\n\t\tregexps.put(\"<nowiki>([^<]*)<\/nowiki>\", \"{{{$1}}}\");\n\t}","id":56036,"modified_method":"protected void initRegexps() {\n\n\t\t// Clean unnecessary header emphasis\n\n\t\tregexps.put(\"= '''([^=]*)''' =\", \"= $1 =\");\n\t\tregexps.put(\"== '''([^=]*)''' ==\", \"== $1 ==\");\n\t\tregexps.put(\"== '''([^=]*)''' ===\", \"=== $1 ===\");\n\n\t\t// Unscape angle brackets\n\n\t\tregexps.put(\"&lt;\", \"<\");\n\t\tregexps.put(\"&gt;\", \">\");\n\n\t\t// Category removal\n\n\t\tregexps.put(\"\\\\[\\\\[[Cc]ategory:([^\\\\]]*)\\\\]\\\\][\\\\n]*\", \"\");\n\n\t\t// Bold and italics\n\n\t\tregexps.put(\n\t\t\t\"''''((?s:.)*?)(''''|(\\n\\n|\\r\\r|\\r\\n\\r\\n))\", \"**//$1//**$3\");\n\n\t\t// Bold\n\n\t\tregexps.put(\"'''((?s:.)*?)('''|(\\n\\n|\\r\\r|\\r\\n\\r\\n))\", \"**$1**$3\");\n\n\t\t// Italics\n\n\t\tregexps.put(\"''((?s:.)*?)(''|(\\n\\n|\\r\\r|\\r\\n\\r\\n))\", \"//$1//$3\");\n\n\t\t// Images\n\n\t\tregexps.put(\n\t\t\t\"\\\\[{2}Image:([^\\\\]]*)\\\\]{2}\",\n\t\t\t\"{{\" + MediaWikiImporter.SHARED_IMAGES_TITLE + \"/$1}}\");\n\n\t\t// Normalize URLs\n\n\t\tregexps.put(\"\\\\[{2}((http|ftp)[^ ]*) ([^\\\\]]*)\\\\]{2}\", \"[$1 $3]\");\n\n\t\t// URL\n\n\t\tregexps.put(\"\\\\[((http|ftp)[^ ]*)\\\\]\", \"[[$1]]\");\n\n\t\t// URL with label\n\n\t\tregexps.put(\"\\\\[((http|ftp)[^ ]*) ([^\\\\]]*)\\\\]\", \"[[$1|$3]]\");\n\n\t\t// Monospace\n\n\t\tregexps.put(\"(^ (.+))(\\\\n (.+))*\", \"{{{\\n$0\\n}}}\");\n\n\t\t// Term and definition\n\n\t\tregexps.put(\"^\\\\t([\\\\w]+):\\\\t(.*)\", \"**$1**:\\n$2\");\n\n\t\t// Indented paragraph\n\n\t\tregexps.put(\"^\\\\t:\\\\t(.*)\", \"$1\");\n\n\t\t// No wiki\n\n\t\tregexps.put(\"<nowiki>([^<]*)<\/nowiki>\", \"{{{$1}}}\");\n\n\t\t// Pre\n\n\t\tregexps.put(\"<pre>([^<]*)<\/pre>\", \"{{{$1}}}\");\n\t}","commit_id":"2ea432537791d0fe1829cc42b2024072c82d4181","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLinkWithUnderscores() throws Exception {\n\t\tString content = \"[[Link_With_Underscores]]\";\n\n\t\tString expected = content;\n\t\tString actual = _translate(content);\n\n\t\tassertEquals(expected, actual);\n\t}","id":56037,"modified_method":"public void testLinkWithUnderscores() throws Exception {\n\t\tString content = \"[[Link_With_Underscores]]\";\n\n\t\tString expected =\n\t\t\tMediaWikiToCreoleTranslator.TABLE_OF_CONTENTS +\n\t\t\t\t\"[[Link With Underscores]]\";\n\t\tString actual = _translator.postProcess(_translate(content));\n\n\t\tassertEquals(expected, actual);\n\t}","commit_id":"2ea432537791d0fe1829cc42b2024072c82d4181","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovalOfCategories() throws Exception {\n\t\tString content =\n\t\t\t\"[[Category:My category]]\\n[[category:Other category]]\";\n\n\t\tString expected = \"\\n\";\n\t\tString actual = _translate(content);\n\n\t\tassertEquals(expected, actual);\n\t}","id":56038,"modified_method":"public void testRemovalOfCategories() throws Exception {\n\t\tString content =\n\t\t\t\"[[Category:My category]]\\n[[category:Other category]]\";\n\n\t\tString expected = \"\";\n\t\tString actual = _translate(content);\n\n\t\tassertEquals(expected, actual);\n\t}","commit_id":"2ea432537791d0fe1829cc42b2024072c82d4181","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testNowiki() throws Exception {\n\t\tString content =\n\t\t\t\"previous line\\n<nowiki>\\nmonospace\\n''second'' \" +\n\t\t\t\t\"line\\n<\/nowiki>\\nnext line\";\n\n\t\tString expected =\n\t\t\tMediaWikiToCreoleTranslator.TABLE_OF_CONTENTS +\n\t\t\t\t\"previous line\\n{{{\\nmonospace\\n''second'' line\\n}}}\\nnext\" +\n\t\t\t\t\t\" line\";\n\t\tString actual = _translate(content);\n\n\t\tassertEquals(expected, actual);\n\t}","id":56039,"modified_method":"public void testNowikiWithFormat() throws Exception {\n\t\tString content =\n\t\t\t\"previous line\\n<pre>\\nmonospace\\nsecond \" +\n\t\t\t\t\"line\\n<\/pre>\\nnext line\";\n\n\t\tString expected =\n\t\t\t\"previous line\\n{{{\\nmonospace\\nsecond line\\n}}}\\nnext\" +\n\t\t\t\t\" line\";\n\t\tString actual = _translate(content);\n\n\t\tassertEquals(expected, actual);\n\t}","commit_id":"2ea432537791d0fe1829cc42b2024072c82d4181","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void processImages(long userId, WikiNode node, File imagesFile)\n\t\tthrows Exception {\n\n\t\tif ((imagesFile == null) || (!imagesFile.exists())) {\n\t\t\treturn;\n\t\t}\n\n\t\tProgressTracker progressTracker =\n\t\t\tProgressTrackerThreadLocal.getProgressTracker();\n\n\t\tint count = 0;\n\n\t\tZipReader zipReader = new ZipReader(imagesFile);\n\n\t\tMap<String, byte[]> entries = zipReader.getEntries();\n\n\t\tint total = entries.size();\n\n\t\tif (total > 0) {\n\t\t\ttry {\n\t\t\t\tWikiPageLocalServiceUtil.getPage(\n\t\t\t\t\tnode.getNodeId(), SHARED_IMAGES_TITLE);\n\t\t\t}\n\t\t\tcatch (NoSuchPageException nspe) {\n\t\t\t\tWikiPageLocalServiceUtil.addPage(\n\t\t\t\t\tuserId, node.getNodeId(), SHARED_IMAGES_TITLE,\n\t\t\t\t\tSHARED_IMAGES_CONTENT, null, true, null, null);\n\t\t\t}\n\t\t}\n\n\t\tList<ObjectValuePair<String, byte[]>> attachments =\n\t\t\tnew ArrayList<ObjectValuePair<String, byte[]>>();\n\n\t\tIterator<Map.Entry<String, byte[]>> itr = entries.entrySet().iterator();\n\n\t\tint percentage = 50;\n\n\t\tfor (int i = 0; itr.hasNext(); i++) {\n\t\t\tMap.Entry<String, byte[]> entry = itr.next();\n\n\t\t\tString key = entry.getKey();\n\t\t\tbyte[] value = entry.getValue();\n\n\t\t\tif (key.endsWith(StringPool.SLASH)) {\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\"Ignoring \" + key);\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString[] paths = StringUtil.split(key, StringPool.SLASH);\n\n\t\t\tif (!isValidImage(paths, value)) {\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\"Ignoring \" + key);\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString fileName = paths[paths.length - 1];\n\n\t\t\tattachments.add(\n\t\t\t\tnew ObjectValuePair<String, byte[]>(fileName, value));\n\n\t\t\tcount++;\n\n\t\t\tif ((i % 5) == 0) {\n\t\t\t\tWikiPageLocalServiceUtil.addPageAttachments(\n\t\t\t\t\tnode.getNodeId(), SHARED_IMAGES_TITLE, attachments);\n\n\t\t\t\tattachments.clear();\n\n\t\t\t\tpercentage = Math.min(50 + (i * 50) / total, 99);\n\n\t\t\t\tprogressTracker.updateProgress(percentage);\n\t\t\t}\n\t\t}\n\n\t\tif (!attachments.isEmpty()) {\n\t\t\tWikiPageLocalServiceUtil.addPageAttachments(\n\t\t\t\tnode.getNodeId(), SHARED_IMAGES_TITLE, attachments);\n\t\t}\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Imported \" + count + \" images into \" + node.getName());\n\t\t}\n\t}","id":56040,"modified_method":"private void processImages(long userId, WikiNode node, File imagesFile)\n\t\tthrows Exception {\n\n\t\tif ((imagesFile == null) || (!imagesFile.exists())) {\n\t\t\treturn;\n\t\t}\n\n\t\tProgressTracker progressTracker =\n\t\t\tProgressTrackerThreadLocal.getProgressTracker();\n\n\t\tint count = 0;\n\n\t\tZipReader zipReader = new ZipReader(imagesFile);\n\n\t\tMap<String, byte[]> entries = zipReader.getEntries();\n\n\t\tint total = entries.size();\n\n\t\tif (total > 0) {\n\t\t\ttry {\n\t\t\t\tWikiPageLocalServiceUtil.getPage(\n\t\t\t\t\tnode.getNodeId(), SHARED_IMAGES_TITLE);\n\t\t\t}\n\t\t\tcatch (NoSuchPageException nspe) {\n\t\t\t\tWikiPageLocalServiceUtil.addPage(\n\t\t\t\t\tuserId, node.getNodeId(), SHARED_IMAGES_TITLE,\n\t\t\t\t\tSHARED_IMAGES_CONTENT, null, true, null, null);\n\t\t\t}\n\t\t}\n\n\t\tList<ObjectValuePair<String, byte[]>> attachments =\n\t\t\tnew ArrayList<ObjectValuePair<String, byte[]>>();\n\n\t\tIterator<Map.Entry<String, byte[]>> itr = entries.entrySet().iterator();\n\n\t\tint percentage = 50;\n\n\t\tfor (int i = 0; itr.hasNext(); i++) {\n\t\t\tMap.Entry<String, byte[]> entry = itr.next();\n\n\t\t\tString key = entry.getKey();\n\t\t\tbyte[] value = entry.getValue();\n\n\t\t\tif (key.endsWith(StringPool.SLASH)) {\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\"Ignoring \" + key);\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString[] paths = StringUtil.split(key, StringPool.SLASH);\n\n\t\t\tif (!isValidImage(paths, value)) {\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\"Ignoring \" + key);\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString fileName = paths[paths.length - 1].toLowerCase();\n\n\t\t\tattachments.add(\n\t\t\t\tnew ObjectValuePair<String, byte[]>(fileName, value));\n\n\t\t\tcount++;\n\n\t\t\tif ((i % 5) == 0) {\n\t\t\t\tWikiPageLocalServiceUtil.addPageAttachments(\n\t\t\t\t\tnode.getNodeId(), SHARED_IMAGES_TITLE, attachments);\n\n\t\t\t\tattachments.clear();\n\n\t\t\t\tpercentage = Math.min(50 + (i * 50) / total, 99);\n\n\t\t\t\tprogressTracker.updateProgress(percentage);\n\t\t\t}\n\t\t}\n\n\t\tif (!attachments.isEmpty()) {\n\t\t\tWikiPageLocalServiceUtil.addPageAttachments(\n\t\t\t\tnode.getNodeId(), SHARED_IMAGES_TITLE, attachments);\n\t\t}\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Imported \" + count + \" images into \" + node.getName());\n\t\t}\n\t}","commit_id":"6cc04c6f4208c389b295c587fb8cea9fd5d21658","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String postProcess(String content) {\n\n\t\t// LEP-6118\n\n\t\tMatcher matcher = Pattern.compile(\n\t\t\t\"^=([^=]+)=\", Pattern.MULTILINE).matcher(content);\n\n\t\tif (matcher.find()) {\n\t\t\tcontent = runRegexp(content, \"^===([^=]+)===\", \"====$1====\");\n\t\t\tcontent = runRegexp(content, \"^==([^=]+)==\", \"===$1===\");\n\t\t\tcontent = runRegexp(content, \"^=([^=]+)=\", \"==$1==\");\n\t\t}\n\n\t\t// Remove HTML tags\n\n\t\tfor (int i = 0; i < _HTML_TAGS.length; i++) {\n\t\t\tcontent = content.replaceAll(_HTML_TAGS[i], StringPool.BLANK);\n\t\t}\n\n\t\t// Remove underscores from links\n\n\t\tmatcher = Pattern.compile(\n\t\t\t\"\\\\[{2}([^\\\\]]*)\\\\]{2}\", Pattern.DOTALL).matcher(content);\n\n\t\tStringBuffer sb = new StringBuffer(content);\n\n\t\twhile (matcher.find()) {\n\t\t\tString link = matcher.group(1).replace(\n\t\t\t\tStringPool.UNDERLINE, StringPool.SPACE);\n\n\t\t\tsb.replace(matcher.start(1), matcher.end(1), link);\n\t\t}\n\n\t\treturn TABLE_OF_CONTENTS + super.postProcess(sb.toString());\n\t}","id":56041,"modified_method":"protected String postProcess(String content) {\n\n\t\t// LEP-6118\n\n\t\tMatcher matcher = Pattern.compile(\n\t\t\t\"^=([^=]+)=\", Pattern.MULTILINE).matcher(content);\n\n\t\tif (matcher.find()) {\n\t\t\tcontent = runRegexp(content, \"^===([^=]+)===\", \"====$1====\");\n\t\t\tcontent = runRegexp(content, \"^==([^=]+)==\", \"===$1===\");\n\t\t\tcontent = runRegexp(content, \"^=([^=]+)=\", \"==$1==\");\n\t\t}\n\n\t\t// Remove HTML tags\n\n\t\tfor (int i = 0; i < _HTML_TAGS.length; i++) {\n\t\t\tcontent = content.replaceAll(_HTML_TAGS[i], StringPool.BLANK);\n\t\t}\n\n\t\t// Images\n\n\t\tmatcher = Pattern.compile(\n\t\t\t\"\\\\[{2}Image:([^\\\\]]*)\\\\]{2}\", Pattern.DOTALL).matcher(content);\n\n\t\tStringBuffer sb = new StringBuffer(content);\n\n\t\twhile (matcher.find()) {\n\t\t\tString image =\n\t\t\t\t\"{{\" + MediaWikiImporter.SHARED_IMAGES_TITLE + \"/\" +\n\t\t\t\t\tmatcher.group(1).toLowerCase() + \"}}\";\n\n\t\t\tsb.replace(matcher.start(0), matcher.end(0), image);\n\t\t}\n\n\t\tcontent = sb.toString();\n\t\t\n\t\t// Remove underscores from links\n\n\t\tmatcher = Pattern.compile(\n\t\t\t\"\\\\[{2}([^\\\\]]*)\\\\]{2}\", Pattern.DOTALL).matcher(content);\n\n\t\tsb = new StringBuffer(content);\n\n\t\twhile (matcher.find()) {\n\t\t\tString link = matcher.group(1).replace(\n\t\t\t\tStringPool.UNDERLINE, StringPool.SPACE);\n\n\t\t\tsb.replace(matcher.start(1), matcher.end(1), link);\n\t\t}\n\n\t\treturn TABLE_OF_CONTENTS + super.postProcess(sb.toString());\n\t}","commit_id":"6cc04c6f4208c389b295c587fb8cea9fd5d21658","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void initRegexps() {\n\n\t\t// Clean unnecessary header emphasis\n\n\t\tregexps.put(\"= '''([^=]+)''' =\", \"= $1 =\");\n\t\tregexps.put(\"== '''([^=]+)''' ==\", \"== $1 ==\");\n\t\tregexps.put(\"== '''([^=]+)''' ===\", \"=== $1 ===\");\n\n\t\t// Unscape angle brackets\n\n\t\tregexps.put(\"&lt;\", \"<\");\n\t\tregexps.put(\"&gt;\", \">\");\n\n\t\t// Category removal\n\n\t\tregexps.put(\"\\\\[\\\\[[Cc]ategory:([^\\\\]]*)\\\\]\\\\][\\\\n]*\", \"\");\n\n\t\t// Remove disambiguations\n\n\t\tregexps.put(\"\\\\{{2}OtherTopics\\\\|([^\\\\}]*)\\\\}{2}\", StringPool.BLANK);\n\n\t\t// Bold and italics\n\n\t\tregexps.put(\n\t\t\t\"''''((?s:.)*?)(''''|(\\n\\n|\\r\\r|\\r\\n\\r\\n))\", \"**//$1//**$3\");\n\n\t\t// Bold\n\n\t\tregexps.put(\"'''((?s:.)*?)('''|(\\n\\n|\\r\\r|\\r\\n\\r\\n))\", \"**$1**$3\");\n\n\t\t// Italics\n\n\t\tregexps.put(\"''((?s:.)*?)(''|(\\n\\n|\\r\\r|\\r\\n\\r\\n))\", \"//$1//$3\");\n\n\t\t// Images\n\n\t\tregexps.put(\n\t\t\t\"\\\\[{2}Image:([^\\\\]]*)\\\\]{2}\",\n\t\t\t\"{{\" + MediaWikiImporter.SHARED_IMAGES_TITLE + \"/$1}}\");\n\n\t\t// Normalize URLs\n\n\t\tregexps.put(\"\\\\[{2}((http|ftp)[^ ]*) ([^\\\\]]*)\\\\]{2}\", \"[$1 $3]\");\n\n\t\t// URL\n\n\t\tregexps.put(\"\\\\[((http|ftp)[^ ]*)\\\\]\", \"[[$1]]\");\n\n\t\t// URL with label\n\n\t\tregexps.put(\"\\\\[((http|ftp)[^ ]*) ([^\\\\]]*)\\\\]\", \"[[$1|$3]]\");\n\n\t\t// Term and definition\n\n\t\tregexps.put(\"^\\\\t([\\\\w]+):\\\\t(.*)\", \"**$1**:\\n$2\");\n\n\t\t// Indented paragraph\n\n\t\tregexps.put(\"^\\\\t:\\\\t(.*)\", \"$1\");\n\n\t\t// Monospace\n\n\t\tregexps.put(\"(^ (.+))(\\\\n (.+))*\", \"{{{\\n$0\\n}}}\");\n\n\t\t// No wiki\n\n\t\tregexps.put(\"<nowiki>([^<]*)<\/nowiki>\", \"{{{$1}}}\");\n\n\t\t// HTML PRE\n\n\t\tregexps.put(\"<pre>([^<]*)<\/pre>\", \"{{{$1}}}\");\n\n\t\t// User reference\n\n\t\tregexps.put(\"[-]*\\\\[{2}User:([^\\\\]]*)\\\\]{2}\", \"$1\");\n\t}","id":56042,"modified_method":"protected void initRegexps() {\n\n\t\t// Clean unnecessary header emphasis\n\n\t\tregexps.put(\"= '''([^=]+)''' =\", \"= $1 =\");\n\t\tregexps.put(\"== '''([^=]+)''' ==\", \"== $1 ==\");\n\t\tregexps.put(\"== '''([^=]+)''' ===\", \"=== $1 ===\");\n\n\t\t// Unscape angle brackets\n\n\t\tregexps.put(\"&lt;\", \"<\");\n\t\tregexps.put(\"&gt;\", \">\");\n\n\t\t// Category removal\n\n\t\tregexps.put(\"\\\\[\\\\[[Cc]ategory:([^\\\\]]*)\\\\]\\\\][\\\\n]*\", \"\");\n\n\t\t// Remove disambiguations\n\n\t\tregexps.put(\"\\\\{{2}OtherTopics\\\\|([^\\\\}]*)\\\\}{2}\", StringPool.BLANK);\n\n\t\t// Bold and italics\n\n\t\tregexps.put(\n\t\t\t\"''''((?s:.)*?)(''''|(\\n\\n|\\r\\r|\\r\\n\\r\\n))\", \"**//$1//**$3\");\n\n\t\t// Bold\n\n\t\tregexps.put(\"'''((?s:.)*?)('''|(\\n\\n|\\r\\r|\\r\\n\\r\\n))\", \"**$1**$3\");\n\n\t\t// Italics\n\n\t\tregexps.put(\"''((?s:.)*?)(''|(\\n\\n|\\r\\r|\\r\\n\\r\\n))\", \"//$1//$3\");\n\n\t\t// Normalize URLs\n\n\t\tregexps.put(\"\\\\[{2}((http|ftp)[^ ]*) ([^\\\\]]*)\\\\]{2}\", \"[$1 $3]\");\n\n\t\t// URL\n\n\t\tregexps.put(\"\\\\[((http|ftp)[^ ]*)\\\\]\", \"[[$1]]\");\n\n\t\t// URL with label\n\n\t\tregexps.put(\"\\\\[((http|ftp)[^ ]*) ([^\\\\]]*)\\\\]\", \"[[$1|$3]]\");\n\n\t\t// Term and definition\n\n\t\tregexps.put(\"^\\\\t([\\\\w]+):\\\\t(.*)\", \"**$1**:\\n$2\");\n\n\t\t// Indented paragraph\n\n\t\tregexps.put(\"^\\\\t:\\\\t(.*)\", \"$1\");\n\n\t\t// Monospace\n\n\t\tregexps.put(\"(^ (.+))(\\\\n (.+))*\", \"{{{\\n$0\\n}}}\");\n\n\t\t// No wiki\n\n\t\tregexps.put(\"<nowiki>([^<]*)<\/nowiki>\", \"{{{$1}}}\");\n\n\t\t// HTML PRE\n\n\t\tregexps.put(\"<pre>([^<]*)<\/pre>\", \"{{{$1}}}\");\n\n\t\t// User reference\n\n\t\tregexps.put(\"[-]*\\\\[{2}User:([^\\\\]]*)\\\\]{2}\", \"$1\");\n\t}","commit_id":"6cc04c6f4208c389b295c587fb8cea9fd5d21658","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImage() throws Exception {\n\t\tString content = \"[[Image:sample.png]]\";\n\n\t\tString expected = \"{{SharedImages/sample.png}}\";\n\t\tString actual = _translate(content);\n\n\t\tassertEquals(expected, actual);\n\t}","id":56043,"modified_method":"public void testImage() throws Exception {\n\t\tString content = \"[[Image:Sample.png]]\";\n\n\t\tString expected =\n\t\t\tMediaWikiToCreoleTranslator.TABLE_OF_CONTENTS +\n\t\t\t\t\"{{SharedImages/sample.png}}\";\n\t\tString actual = _translator.postProcess(_translate(content));\n\n\t\tassertEquals(expected, actual);\n\t}","commit_id":"6cc04c6f4208c389b295c587fb8cea9fd5d21658","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n     *\n     * @param assignmentRef\n     * @param associateGradebookAssignment\n     * @param addUpdateRemoveAssignment\n     * @param newAssignment_title\n     * @param newAssignment_maxPoints\n     * @param newAssignment_dueTime\n     * @param submissionRef\n     * @param updateRemoveSubmission\n     * @param context\n     */\n    protected void integrateGradebook( String assignmentRef, String associateGradebookAssignment, String addUpdateRemoveAssignment, String newAssignment_title, int newAssignment_maxPoints, Time newAssignment_dueTime, String submissionRef, String updateRemoveSubmission, String context)\n    {\n    \t//add or remove external grades to gradebook\n    \t// a. if Gradebook does not exists, do nothing, 'cos setting should have been hidden\n    \t// b. if Gradebook exists, just call addExternal and removeExternal and swallow any exception. The\n    \t//    exception are indication that the assessment is already in the Gradebook or there is nothing\n    \t//    to remove.\n    \tString gradebookUid = context;\n    \tboolean gradebookExists = isGradebookDefined(context);\n    \t\n    \tString assignmentToolTitle = \"Assignments\";\n    \t\n    \tif (gradebookExists)\n    \t{\n    \t\tboolean isExternalAssignmentDefined=gradebookService.isExternalAssignmentDefined(gradebookUid, assignmentRef);\n    \t\tboolean isExternalAssociateAssignmentDefined = gradebookService.isExternalAssignmentDefined(gradebookUid, associateGradebookAssignment);\n    \t\tboolean isAssignmentDefined = gradebookService.isAssignmentDefined(gradebookUid, associateGradebookAssignment);\n\n    \t\tif (addUpdateRemoveAssignment != null)\n    \t\t{\n    \t\t\tif (addUpdateRemoveAssignment.equals(\"add\") || ( addUpdateRemoveAssignment.equals(\"update\") && !gradebookService.isAssignmentDefined(gradebookUid, newAssignment_title)))\n    \t\t\t{\n    \t\t\t\t// add assignment into gradebook\n    \t\t\t\ttry\n    \t\t\t\t{\n    \t\t\t\t\t// add assignment to gradebook\n    \t\t\t\t\tgradebookService.addExternalAssessment(gradebookUid,\n    \t\t\t\t\t\t\tassignmentRef, \n    \t\t\t\t\t\t\tnull,\n    \t\t\t\t\t\t\tnewAssignment_title,\n    \t\t\t\t\t\t\tnewAssignment_maxPoints/10,\n    \t\t\t\t\t\t\tnew Date(newAssignment_dueTime.getTime()),\n    \t\t\t\t\t\"Assignment\");\n    \t\t\t\t}\n    \t\t\t\tcatch (AssignmentHasIllegalPointsException e) \n    \t\t\t\t{\n    \t\t\t\t\t//addAlert(state, rb.getString(\"addtogradebook.illegalPoints\"));\n    \t\t\t\t}\n    \t\t\t\tcatch(ConflictingAssignmentNameException e)\n    \t\t\t\t{\n    \t\t\t\t\t// try to modify assignment title, make sure there is no such assignment in the gradebook, and insert again\n    \t\t\t\t\tboolean trying = true;\n    \t\t\t\t\tint attempts = 1;\n    \t\t\t\t\tString titleBase = newAssignment_title;\n    \t\t\t\t\twhile(trying && attempts < MAXIMUM_ATTEMPTS_FOR_UNIQUENESS) \t// see end of loop for condition that enforces attempts <= limit)\n    \t\t\t\t\t{\n    \t\t\t\t\t\tString newTitle = titleBase + \"-\" + attempts;\n    \t\t\t\t\t\t\n    \t\t\t\t\t\tif(!gradebookService.isAssignmentDefined(gradebookUid, newTitle))\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\ttry\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t// add assignment to gradebook\n    \t\t\t\t\t\t\t\tgradebookService.addExternalAssessment(gradebookUid,\n    \t\t\t\t\t\t\t\t\t\tassignmentRef, \n    \t\t\t\t\t\t\t\t\t\tnull,\n    \t\t\t\t\t\t\t\t\t\tnewTitle,\n    \t\t\t\t\t\t\t\t\t\tnewAssignment_maxPoints/10,\n    \t\t\t\t\t\t\t\t\t\tnew Date(newAssignment_dueTime.getTime()),\n    \t\t\t\t\t\t\t\t\"Assignment\");\n    \t\t\t\t\t\t\t\ttrying = false;\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\tcatch(Exception ee)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t// try again, ignore the exception\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t\t\n    \t\t\t\t\t\tif (trying)\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tattempts++;\n    \t\t\t\t\t\t\tif(attempts >= MAXIMUM_ATTEMPTS_FOR_UNIQUENESS)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t// add alert prompting for change assignment title\n    \t\t\t\t\t\t\t\t//addAlert(state, rb.getString(\"addtogradebook.nonUniqueTitle\"));\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\tcatch (ConflictingExternalIdException e)\n    \t\t\t\t{\n    \t\t\t\t\t// ignore\n    \t\t\t\t}\n    \t\t\t\tcatch (GradebookNotFoundException e)\n    \t\t\t\t{\n    \t\t\t\t\t// ignore\n    \t\t\t\t}\n    \t\t\t\tcatch (Exception e)\n    \t\t\t\t{\n    \t\t\t\t\t// ignore\n    \t\t\t\t}\n\n    \t\t\t}  // (addUpdateRemoveAssignment.equals(\"add\") || ( addUpdateRemoveAssignment.equals(\"update\") && !g.isAssignmentDefined(gradebookUid, newAssignment_title)))  \n    \t\t\t\n    \t\t}\t// addUpdateRemoveAssignment != null\n    \t\t\n    \t\tif (updateRemoveSubmission != null)\n    \t\t{\n    \t\t\ttry\n    \t\t\t{\n    \t\t\t\tAssignment a = assignmentService.getAssignment(assignmentRef);\n\n    \t\t\t\tif (updateRemoveSubmission.equals(\"update\")\n    \t\t\t\t\t\t&& a.getProperties().getProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK) != null\n    \t\t\t\t\t\t&& !a.getProperties().getProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK).equals(AssignmentService.GRADEBOOK_INTEGRATION_NO)\n    \t\t\t\t\t\t&& a.getContent().getTypeOfGrade() == Assignment.SCORE_GRADE_TYPE)\n    \t\t\t\t{\n    \t\t\t\t\tif (submissionRef == null)\n    \t\t\t\t\t{\n    \t\t\t\t\t\t// bulk add all grades for assignment into gradebook\n    \t\t\t\t\t\tIterator submissions = assignmentService.getSubmissions(a).iterator();\n\n    \t\t\t\t\t\tMap m = new HashMap();\n\n    \t\t\t\t\t\t// any score to copy over? get all the assessmentGradingData and copy over\n    \t\t\t\t\t\twhile (submissions.hasNext())\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tAssignmentSubmission aSubmission = (AssignmentSubmission) submissions.next();\n    \t\t\t\t\t\t\tif (aSubmission.getGradeReleased())\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tUser[] submitters = aSubmission.getSubmitters();\n    \t\t\t\t\t\t\t\tString submitterId = submitters[0].getId();\n    \t\t\t\t\t\t\t\tString gradeString = StringUtils.trimToNull(aSubmission.getGrade(false));\n    \t\t\t\t\t\t\t\tDouble grade = gradeString != null ? Double.valueOf(displayGrade(gradeString)) : null;\n    \t\t\t\t\t\t\t\tm.put(submitterId, grade);\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t\t// need to update only when there is at least one submission\n    \t\t\t\t\t\tif (m.size()>0)\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tif (associateGradebookAssignment != null)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tif (isExternalAssociateAssignmentDefined)\n    \t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\t// the associated assignment is externally maintained\n    \t\t\t\t\t\t\t\t\tgradebookService.updateExternalAssessmentScores(gradebookUid, associateGradebookAssignment, m);\n    \t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t\telse if (isAssignmentDefined)\n    \t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\t// the associated assignment is internal one, update records one by one\n    \t\t\t\t\t\t\t\t\tsubmissions = assignmentService.getSubmissions(a).iterator();\n    \t\t\t\t\t\t\t\t\twhile (submissions.hasNext())\n    \t\t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\t\tAssignmentSubmission aSubmission = (AssignmentSubmission) submissions.next();\n    \t\t\t\t\t\t\t\t\t\tUser[] submitters = aSubmission.getSubmitters();\n    \t\t\t\t\t\t\t\t\t\tString submitterId = submitters[0].getId();\n    \t\t\t\t\t\t\t\t\t\tString gradeString = StringUtils.trimToNull(aSubmission.getGrade(false));\n    \t\t\t\t\t\t\t\t\t\tDouble grade = (gradeString != null && aSubmission.getGradeReleased()) ? Double.valueOf(displayGrade(gradeString)) : null;\n    \t\t\t\t\t\t\t\t\t\tgradebookService.setAssignmentScore(gradebookUid, associateGradebookAssignment, submitterId, grade, assignmentToolTitle);\n    \t\t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\telse if (isExternalAssignmentDefined)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tgradebookService.updateExternalAssessmentScores(gradebookUid, assignmentRef, m);\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t\telse\n    \t\t\t\t\t{\n    \t\t\t\t\t\ttry\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\t// only update one submission\n    \t\t\t\t\t\t\tAssignmentSubmission aSubmission = (AssignmentSubmission) assignmentService.getSubmission(submissionRef);\n    \t\t\t\t\t\t\tUser[] submitters = aSubmission.getSubmitters();\n    \t\t\t\t\t\t\tString gradeString = StringUtils.trimToNull(aSubmission.getGrade(false));\n\n    \t\t\t\t\t\t\tif (associateGradebookAssignment != null)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tif (gradebookService.isExternalAssignmentDefined(gradebookUid, associateGradebookAssignment))\n    \t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\t// the associated assignment is externally maintained\n    \t\t\t\t\t\t\t\t\tgradebookService.updateExternalAssessmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(),\n    \t\t\t\t\t\t\t\t\t\t\t(gradeString != null && aSubmission.getGradeReleased()) ? Double.valueOf(displayGrade(gradeString)) : null);\n    \t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t\telse if (gradebookService.isAssignmentDefined(gradebookUid, associateGradebookAssignment))\n    \t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\t// the associated assignment is internal one, update records\n    \t\t\t\t\t\t\t\t\tgradebookService.setAssignmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(),\n    \t\t\t\t\t\t\t\t\t\t\t(gradeString != null && aSubmission.getGradeReleased()) ? Double.valueOf(displayGrade(gradeString)) : null, assignmentToolTitle);\n    \t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\telse\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tgradebookService.updateExternalAssessmentScore(gradebookUid, assignmentRef, submitters[0].getId(),\n    \t\t\t\t\t\t\t\t\t\t(gradeString != null && aSubmission.getGradeReleased()) ? Double.valueOf(displayGrade(gradeString)) : null);\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t\tcatch (Exception e)\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tLOG.warn(\"Cannot find submission \" + submissionRef + \": \" + e.getMessage());\n    \t\t\t\t\t\t}\n    \t\t\t\t\t} // submissionref != null\n\n    \t\t\t\t}\n    \t\t\t\telse if (updateRemoveSubmission.equals(\"remove\"))\n    \t\t\t\t{\n    \t\t\t\t\tif (submissionRef == null)\n    \t\t\t\t\t{\n    \t\t\t\t\t\t// remove all submission grades (when changing the associated entry in Gradebook)\n    \t\t\t\t\t\tIterator submissions = assignmentService.getSubmissions(a).iterator();\n\n    \t\t\t\t\t\t// any score to copy over? get all the assessmentGradingData and copy over\n    \t\t\t\t\t\twhile (submissions.hasNext())\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tAssignmentSubmission aSubmission = (AssignmentSubmission) submissions.next();\n    \t\t\t\t\t\t\tUser[] submitters = aSubmission.getSubmitters();\n    \t\t\t\t\t\t\tif (isExternalAssociateAssignmentDefined)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t// if the old associated assignment is an external maintained one\n    \t\t\t\t\t\t\t\tgradebookService.updateExternalAssessmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(), null);\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\telse if (isAssignmentDefined)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tgradebookService.setAssignmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(), null, assignmentToolTitle);\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t\telse\n    \t\t\t\t\t{\n    \t\t\t\t\t\t// remove only one submission grade\n    \t\t\t\t\t\ttry\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tAssignmentSubmission aSubmission = (AssignmentSubmission) assignmentService.getSubmission(submissionRef);\n    \t\t\t\t\t\t\tUser[] submitters = aSubmission.getSubmitters();\n    \t\t\t\t\t\t\tgradebookService.updateExternalAssessmentScore(gradebookUid, assignmentRef, submitters[0].getId(), null);\n    \t\t\t\t\t\t}\n    \t\t\t\t\t\tcatch (Exception e)\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tLOG.warn(\"Cannot find submission \" + submissionRef + \": \" + e.getMessage());\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tcatch (Exception e)\n    \t\t\t{\n    \t\t\t\tLOG.warn(\"Cannot find assignment: \" + assignmentRef + \": \" + e.getMessage());\n    \t\t\t}\n    \t\t} // updateRemoveSubmission != null\n\n    \t\t\n    \t}\t// if gradebook exists\n    \t\n    }","id":56044,"modified_method":"/**\n     *\n     * @param assignmentRef\n     * @param associateGradebookAssignment\n     * @param addUpdateRemoveAssignment\n     * @param newAssignment_title\n     * @param newAssignment_maxPoints\n     * @param newAssignment_dueTime\n     * @param submissionRef\n     * @param updateRemoveSubmission\n     * @param context\n     */\n    protected void integrateGradebook( String assignmentRef, String associateGradebookAssignment, String addUpdateRemoveAssignment, String newAssignment_title, int newAssignment_maxPoints, Time newAssignment_dueTime, String submissionRef, String updateRemoveSubmission, String context)\n    {\n    \t//add or remove external grades to gradebook\n    \t// a. if Gradebook does not exists, do nothing, 'cos setting should have been hidden\n    \t// b. if Gradebook exists, just call addExternal and removeExternal and swallow any exception. The\n    \t//    exception are indication that the assessment is already in the Gradebook or there is nothing\n    \t//    to remove.\n    \tString gradebookUid = context;\n    \tboolean gradebookExists = isGradebookDefined(context);\n    \t\n    \tString assignmentToolTitle = \"Assignments\";\n    \t\n    \tif (gradebookExists)\n    \t{\n    \t\tboolean isExternalAssignmentDefined=gradebookExternalAssessmentService.isExternalAssignmentDefined(gradebookUid, assignmentRef);\n    \t\tboolean isExternalAssociateAssignmentDefined = gradebookExternalAssessmentService.isExternalAssignmentDefined(gradebookUid, associateGradebookAssignment);\n    \t\tboolean isAssignmentDefined = gradebookService.isAssignmentDefined(gradebookUid, associateGradebookAssignment);\n\n    \t\tif (addUpdateRemoveAssignment != null)\n    \t\t{\n    \t\t\tif (addUpdateRemoveAssignment.equals(\"add\") || ( addUpdateRemoveAssignment.equals(\"update\") && !gradebookService.isAssignmentDefined(gradebookUid, newAssignment_title)))\n    \t\t\t{\n    \t\t\t\t// add assignment into gradebook\n    \t\t\t\ttry\n    \t\t\t\t{\n    \t\t\t\t\t// add assignment to gradebook\n    \t\t\t\t\tgradebookExternalAssessmentService.addExternalAssessment(gradebookUid,\n    \t\t\t\t\t\t\tassignmentRef, \n    \t\t\t\t\t\t\tnull,\n    \t\t\t\t\t\t\tnewAssignment_title,\n    \t\t\t\t\t\t\tnewAssignment_maxPoints/10,\n    \t\t\t\t\t\t\tnew Date(newAssignment_dueTime.getTime()),\n    \t\t\t\t\t\"Assignment\");\n    \t\t\t\t}\n    \t\t\t\tcatch (AssignmentHasIllegalPointsException e) \n    \t\t\t\t{\n    \t\t\t\t\t//addAlert(state, rb.getString(\"addtogradebook.illegalPoints\"));\n    \t\t\t\t}\n    \t\t\t\tcatch(ConflictingAssignmentNameException e)\n    \t\t\t\t{\n    \t\t\t\t\t// try to modify assignment title, make sure there is no such assignment in the gradebook, and insert again\n    \t\t\t\t\tboolean trying = true;\n    \t\t\t\t\tint attempts = 1;\n    \t\t\t\t\tString titleBase = newAssignment_title;\n    \t\t\t\t\twhile(trying && attempts < MAXIMUM_ATTEMPTS_FOR_UNIQUENESS) \t// see end of loop for condition that enforces attempts <= limit)\n    \t\t\t\t\t{\n    \t\t\t\t\t\tString newTitle = titleBase + \"-\" + attempts;\n    \t\t\t\t\t\t\n    \t\t\t\t\t\tif(!gradebookService.isAssignmentDefined(gradebookUid, newTitle))\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\ttry\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t// add assignment to gradebook\n    \t\t\t\t\t\t\t\tgradebookExternalAssessmentService.addExternalAssessment(gradebookUid,\n    \t\t\t\t\t\t\t\t\t\tassignmentRef, \n    \t\t\t\t\t\t\t\t\t\tnull,\n    \t\t\t\t\t\t\t\t\t\tnewTitle,\n    \t\t\t\t\t\t\t\t\t\tnewAssignment_maxPoints/10,\n    \t\t\t\t\t\t\t\t\t\tnew Date(newAssignment_dueTime.getTime()),\n    \t\t\t\t\t\t\t\t\"Assignment\");\n    \t\t\t\t\t\t\t\ttrying = false;\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\tcatch(Exception ee)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t// try again, ignore the exception\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t\t\n    \t\t\t\t\t\tif (trying)\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tattempts++;\n    \t\t\t\t\t\t\tif(attempts >= MAXIMUM_ATTEMPTS_FOR_UNIQUENESS)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t// add alert prompting for change assignment title\n    \t\t\t\t\t\t\t\t//addAlert(state, rb.getString(\"addtogradebook.nonUniqueTitle\"));\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t\tcatch (ConflictingExternalIdException e)\n    \t\t\t\t{\n    \t\t\t\t\t// ignore\n    \t\t\t\t}\n    \t\t\t\tcatch (GradebookNotFoundException e)\n    \t\t\t\t{\n    \t\t\t\t\t// ignore\n    \t\t\t\t}\n    \t\t\t\tcatch (Exception e)\n    \t\t\t\t{\n    \t\t\t\t\t// ignore\n    \t\t\t\t}\n\n    \t\t\t}  // (addUpdateRemoveAssignment.equals(\"add\") || ( addUpdateRemoveAssignment.equals(\"update\") && !g.isAssignmentDefined(gradebookUid, newAssignment_title)))  \n    \t\t\t\n    \t\t}\t// addUpdateRemoveAssignment != null\n    \t\t\n    \t\tif (updateRemoveSubmission != null)\n    \t\t{\n    \t\t\ttry\n    \t\t\t{\n    \t\t\t\tAssignment a = assignmentService.getAssignment(assignmentRef);\n\n    \t\t\t\tif (updateRemoveSubmission.equals(\"update\")\n    \t\t\t\t\t\t&& a.getProperties().getProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK) != null\n    \t\t\t\t\t\t&& !a.getProperties().getProperty(NEW_ASSIGNMENT_ADD_TO_GRADEBOOK).equals(AssignmentService.GRADEBOOK_INTEGRATION_NO)\n    \t\t\t\t\t\t&& a.getContent().getTypeOfGrade() == Assignment.SCORE_GRADE_TYPE)\n    \t\t\t\t{\n    \t\t\t\t\tif (submissionRef == null)\n    \t\t\t\t\t{\n    \t\t\t\t\t\t// bulk add all grades for assignment into gradebook\n    \t\t\t\t\t\tIterator submissions = assignmentService.getSubmissions(a).iterator();\n\n    \t\t\t\t\t\tMap m = new HashMap();\n\n    \t\t\t\t\t\t// any score to copy over? get all the assessmentGradingData and copy over\n    \t\t\t\t\t\twhile (submissions.hasNext())\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tAssignmentSubmission aSubmission = (AssignmentSubmission) submissions.next();\n    \t\t\t\t\t\t\tif (aSubmission.getGradeReleased())\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tUser[] submitters = aSubmission.getSubmitters();\n    \t\t\t\t\t\t\t\tString submitterId = submitters[0].getId();\n    \t\t\t\t\t\t\t\tString gradeString = StringUtils.trimToNull(aSubmission.getGrade(false));\n    \t\t\t\t\t\t\t\tDouble grade = gradeString != null ? Double.valueOf(displayGrade(gradeString)) : null;\n    \t\t\t\t\t\t\t\tm.put(submitterId, grade);\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t\t// need to update only when there is at least one submission\n    \t\t\t\t\t\tif (m.size()>0)\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tif (associateGradebookAssignment != null)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tif (isExternalAssociateAssignmentDefined)\n    \t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\t// the associated assignment is externally maintained\n    \t\t\t\t\t\t\t\t\tgradebookExternalAssessmentService.updateExternalAssessmentScores(gradebookUid, associateGradebookAssignment, m);\n    \t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t\telse if (isAssignmentDefined)\n    \t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\t// the associated assignment is internal one, update records one by one\n    \t\t\t\t\t\t\t\t\tsubmissions = assignmentService.getSubmissions(a).iterator();\n    \t\t\t\t\t\t\t\t\twhile (submissions.hasNext())\n    \t\t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\t\tAssignmentSubmission aSubmission = (AssignmentSubmission) submissions.next();\n    \t\t\t\t\t\t\t\t\t\tUser[] submitters = aSubmission.getSubmitters();\n    \t\t\t\t\t\t\t\t\t\tString submitterId = submitters[0].getId();\n    \t\t\t\t\t\t\t\t\t\tString gradeString = StringUtils.trimToNull(aSubmission.getGrade(false));\n    \t\t\t\t\t\t\t\t\t\tString grade = (gradeString != null && aSubmission.getGradeReleased()) ? displayGrade(gradeString) : null;\n    \t\t\t\t\t\t\t\t\t\tgradebookService.setAssignmentScoreString(gradebookUid, associateGradebookAssignment, submitterId, grade, assignmentToolTitle);\n    \t\t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\telse if (isExternalAssignmentDefined)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tgradebookExternalAssessmentService.updateExternalAssessmentScores(gradebookUid, assignmentRef, m);\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t\telse\n    \t\t\t\t\t{\n    \t\t\t\t\t\ttry\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\t// only update one submission\n    \t\t\t\t\t\t\tAssignmentSubmission aSubmission = (AssignmentSubmission) assignmentService.getSubmission(submissionRef);\n    \t\t\t\t\t\t\tUser[] submitters = aSubmission.getSubmitters();\n    \t\t\t\t\t\t\tString gradeString = StringUtils.trimToNull(aSubmission.getGrade(false));\n\n    \t\t\t\t\t\t\tif (associateGradebookAssignment != null)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tif (gradebookExternalAssessmentService.isExternalAssignmentDefined(gradebookUid, associateGradebookAssignment))\n    \t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\t// the associated assignment is externally maintained\n    \t\t\t\t\t\t\t\t\tgradebookExternalAssessmentService.updateExternalAssessmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(),\n    \t\t\t\t\t\t\t\t\t\t\t(gradeString != null && aSubmission.getGradeReleased()) ? displayGrade(gradeString) : null);\n    \t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t\telse if (gradebookService.isAssignmentDefined(gradebookUid, associateGradebookAssignment))\n    \t\t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t\t// the associated assignment is internal one, update records\n    \t\t\t\t\t\t\t\t\tgradebookService.setAssignmentScoreString(gradebookUid, associateGradebookAssignment, submitters[0].getId(),\n    \t\t\t\t\t\t\t\t\t\t\t(gradeString != null && aSubmission.getGradeReleased()) ? displayGrade(gradeString) : null, assignmentToolTitle);\n    \t\t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\telse\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tgradebookExternalAssessmentService.updateExternalAssessmentScore(gradebookUid, assignmentRef, submitters[0].getId(),\n    \t\t\t\t\t\t\t\t\t\t(gradeString != null && aSubmission.getGradeReleased()) ? displayGrade(gradeString) : null);\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t\tcatch (Exception e)\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tLOG.warn(\"Cannot find submission \" + submissionRef + \": \" + e.getMessage());\n    \t\t\t\t\t\t}\n    \t\t\t\t\t} // submissionref != null\n\n    \t\t\t\t}\n    \t\t\t\telse if (updateRemoveSubmission.equals(\"remove\"))\n    \t\t\t\t{\n    \t\t\t\t\tif (submissionRef == null)\n    \t\t\t\t\t{\n    \t\t\t\t\t\t// remove all submission grades (when changing the associated entry in Gradebook)\n    \t\t\t\t\t\tIterator submissions = assignmentService.getSubmissions(a).iterator();\n\n    \t\t\t\t\t\t// any score to copy over? get all the assessmentGradingData and copy over\n    \t\t\t\t\t\twhile (submissions.hasNext())\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tAssignmentSubmission aSubmission = (AssignmentSubmission) submissions.next();\n    \t\t\t\t\t\t\tUser[] submitters = aSubmission.getSubmitters();\n    \t\t\t\t\t\t\tif (isExternalAssociateAssignmentDefined)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\t// if the old associated assignment is an external maintained one\n    \t\t\t\t\t\t\t\tgradebookExternalAssessmentService.updateExternalAssessmentScore(gradebookUid, associateGradebookAssignment, submitters[0].getId(), null);\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t\telse if (isAssignmentDefined)\n    \t\t\t\t\t\t\t{\n    \t\t\t\t\t\t\t\tgradebookService.setAssignmentScoreString(gradebookUid, associateGradebookAssignment, submitters[0].getId(), null, assignmentToolTitle);\n    \t\t\t\t\t\t\t}\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t\telse\n    \t\t\t\t\t{\n    \t\t\t\t\t\t// remove only one submission grade\n    \t\t\t\t\t\ttry\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tAssignmentSubmission aSubmission = (AssignmentSubmission) assignmentService.getSubmission(submissionRef);\n    \t\t\t\t\t\t\tUser[] submitters = aSubmission.getSubmitters();\n    \t\t\t\t\t\t\tgradebookExternalAssessmentService.updateExternalAssessmentScore(gradebookUid, assignmentRef, submitters[0].getId(), null);\n    \t\t\t\t\t\t}\n    \t\t\t\t\t\tcatch (Exception e)\n    \t\t\t\t\t\t{\n    \t\t\t\t\t\t\tLOG.warn(\"Cannot find submission \" + submissionRef + \": \" + e.getMessage());\n    \t\t\t\t\t\t}\n    \t\t\t\t\t}\n    \t\t\t\t}\n    \t\t\t}\n    \t\t\tcatch (Exception e)\n    \t\t\t{\n    \t\t\t\tLOG.warn(\"Cannot find assignment: \" + assignmentRef + \": \" + e.getMessage());\n    \t\t\t}\n    \t\t} // updateRemoveSubmission != null\n\n    \t\t\n    \t}\t// if gradebook exists\n    \t\n    }","commit_id":"07f7286b34b4b0b99131983dadb063bdc0a5090f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"@Override\n    public Object compile(String script) {\n        // we don't know why kind of safeguards rhino has,\n        // but just be safe\n        SecurityManager sm = System.getSecurityManager();\n        if (sm != null) {\n            sm.checkPermission(new SpecialPermission());\n        }\n        Context ctx = Context.enter();\n        try {\n            ctx.setWrapFactory(wrapFactory);\n            ctx.setOptimizationLevel(optimizationLevel);\n            ctx.setSecurityController(new PolicySecurityController());\n            return ctx.compileString(script, generateScriptName(), 1, \n                      new CodeSource(new URL(\"file:\" + BootstrapInfo.UNTRUSTED_CODEBASE), (Certificate[]) null));\n        } catch (MalformedURLException e) {\n            throw new RuntimeException(e);\n        } finally {\n            Context.exit();\n        }\n    }","id":56045,"modified_method":"@Override\n    public Object compile(String script) {\n        Context ctx = Context.enter();\n        try {\n            ctx.setWrapFactory(wrapFactory);\n            ctx.setOptimizationLevel(optimizationLevel);\n            return ctx.compileString(script, generateScriptName(), 1, DOMAIN);\n        } finally {\n            Context.exit();\n        }\n    }","commit_id":"b6a23185638197cfa5f2cab612c558b9e73734fe","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Before\n    public void setup() {\n        se = new JavaScriptScriptEngineService(Settings.Builder.EMPTY_SETTINGS);\n    }","id":56046,"modified_method":"@Override\n    public void setUp() throws Exception {\n        super.setUp();\n        se = new JavaScriptScriptEngineService(Settings.Builder.EMPTY_SETTINGS);\n        // otherwise will exit your VM and other bad stuff\n        assumeTrue(\"test requires security manager to be enabled\", System.getSecurityManager() != null);\n    }","commit_id":"b6a23185638197cfa5f2cab612c558b9e73734fe","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Before\n    public void setup() {\n        se = new PythonScriptEngineService(Settings.Builder.EMPTY_SETTINGS);\n    }","id":56047,"modified_method":"@Override\n    public void setUp() throws Exception {\n        super.setUp();\n        se = new PythonScriptEngineService(Settings.Builder.EMPTY_SETTINGS);\n        // otherwise will exit your VM and other bad stuff\n        assumeTrue(\"test requires security manager to be enabled\", System.getSecurityManager() != null);\n    }","commit_id":"b6a23185638197cfa5f2cab612c558b9e73734fe","url":"https://github.com/elastic/elasticsearch"},{"original_method":"protected ClassLoader getClassLoader() {\n\t\tClass<?> clazz = getClass();\n\n\t\treturn clazz.getClassLoader();\n\t}","id":56048,"modified_method":"protected ClassLoader getClassLoader() {\n\t\tClass<?> clazz = getClass();\n\n\t\tClassLoader classLoader = clazz.getClassLoader();\n\n\t\tClassLoader contextClassLoader =\n\t\t\tThread.currentThread().getContextClassLoader();\n\n\t\treturn AggregateClassLoader.getAggregateClassLoader(\n\t\t\tclassLoader, contextClassLoader);\n\t}","commit_id":"4b09be224511d8683aecb6600f593cfcf30783df","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic Map<String, Object> eval(\n\t\t\tSet<String> allowedClasses, Map<String, Object> inputObjects,\n\t\t\tSet<String> outputNames, String script)\n\t\tthrows ScriptingException {\n\n\t\tif (allowedClasses != null) {\n\t\t\tthrow new ExecutionException(\n\t\t\t\t\"Constrained execution not supported for Groovy\");\n\t\t}\n\n\t\tScript compiledScript = _groovyShell.parse(script);\n\n\t\tBinding binding = new Binding(inputObjects);\n\n\t\tcompiledScript.setBinding(binding);\n\n\t\tcompiledScript.run();\n\n\t\tif (outputNames == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tMap<String, Object> outputObjects = new HashMap<>();\n\n\t\tfor (String outputName : outputNames) {\n\t\t\toutputObjects.put(outputName, binding.getVariable(outputName));\n\t\t}\n\n\t\treturn outputObjects;\n\t}","id":56049,"modified_method":"@Override\n\tpublic Map<String, Object> eval(\n\t\t\tSet<String> allowedClasses, Map<String, Object> inputObjects,\n\t\t\tSet<String> outputNames, String script)\n\t\tthrows ScriptingException {\n\n\t\tif (allowedClasses != null) {\n\t\t\tthrow new ExecutionException(\n\t\t\t\t\"Constrained execution not supported for Groovy\");\n\t\t}\n\n\t\tGroovyShell groovyShell = new GroovyShell(getClassLoader());\n\n\t\tScript compiledScript = groovyShell.parse(script);\n\n\t\tBinding binding = new Binding(inputObjects);\n\n\t\tcompiledScript.setBinding(binding);\n\n\t\tcompiledScript.run();\n\n\t\tif (outputNames == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tMap<String, Object> outputObjects = new HashMap<>();\n\n\t\tfor (String outputName : outputNames) {\n\t\t\toutputObjects.put(outputName, binding.getVariable(outputName));\n\t\t}\n\n\t\treturn outputObjects;\n\t}","commit_id":"4b09be224511d8683aecb6600f593cfcf30783df","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected Script getCompiledScript(String script)\n\t\tthrows ScriptingException {\n\n\t\tString key = String.valueOf(script.hashCode());\n\n\t\tScript compiledScript = _portalCache.get(key);\n\n\t\tif (compiledScript != null) {\n\t\t\treturn compiledScript;\n\t\t}\n\n\t\ttry {\n\t\t\tContext context = Context.enter();\n\n\t\t\tClass<?> clazz = getClass();\n\n\t\t\tcontext.setApplicationClassLoader(clazz.getClassLoader());\n\n\t\t\tcompiledScript = context.compileString(script, \"script\", 0, null);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new ScriptingException(e.getMessage() + \"\\n\\n\", e);\n\t\t}\n\t\tfinally {\n\t\t\tContext.exit();\n\t\t}\n\n\t\t_portalCache.put(key, compiledScript);\n\n\t\treturn compiledScript;\n\t}","id":56050,"modified_method":"protected Script getCompiledScript(String script)\n\t\tthrows ScriptingException {\n\n\t\ttry {\n\t\t\tContext context = Context.enter();\n\n\t\t\tClass<?> clazz = getClass();\n\n\t\t\tcontext.setApplicationClassLoader(clazz.getClassLoader());\n\n\t\t\treturn context.compileString(script, \"script\", 0, null);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new ScriptingException(e.getMessage() + \"\\n\\n\", e);\n\t\t}\n\t\tfinally {\n\t\t\tContext.exit();\n\t\t}\n\t}","commit_id":"4b09be224511d8683aecb6600f593cfcf30783df","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected PyCode getCompiledScript(String script) {\n\t\tif (!_initialized) {\n\t\t\tsynchronized (this) {\n\t\t\t\tif (!_initialized) {\n\t\t\t\t\tPySystemState.initialize();\n\n\t\t\t\t\t_initialized = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tString key = String.valueOf(script.hashCode());\n\n\t\tPyCode compiledScript = _portalCache.get(key);\n\n\t\tif (compiledScript == null) {\n\t\t\tcompiledScript = Py.compile_flags(\n\t\t\t\tscript, \"<string>\", CompileMode.exec, Py.getCompilerFlags());\n\n\t\t\t_portalCache.put(key, compiledScript);\n\t\t}\n\n\t\treturn compiledScript;\n\t}","id":56051,"modified_method":"protected PyCode getCompiledScript(String script) {\n\t\tif (!_initialized) {\n\t\t\tsynchronized (this) {\n\t\t\t\tif (!_initialized) {\n\t\t\t\t\tPySystemState.initialize();\n\n\t\t\t\t\t_initialized = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Py.compile_flags(\n\t\t\tscript, \"<string>\", CompileMode.exec, Py.getCompilerFlags());\n\t}","commit_id":"4b09be224511d8683aecb6600f593cfcf30783df","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic ScriptingExecutor newInstance(boolean executeInSeparateThread) {\n\t\tPythonExecutor pythonExecutor = new PythonExecutor();\n\n\t\tpythonExecutor._portalCache = _portalCache;\n\n\t\treturn pythonExecutor;\n\t}","id":56052,"modified_method":"@Override\n\tpublic ScriptingExecutor newInstance(boolean executeInSeparateThread) {\n\t\treturn new PythonExecutor();\n\t}","commit_id":"4b09be224511d8683aecb6600f593cfcf30783df","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ESPolicy(PermissionCollection dynamic) throws Exception {\n        URI policyUri = getClass().getResource(POLICY_RESOURCE).toURI();\n        URI groovyUri = getClass().getResource(GROOVY_RESOURCE).toURI();\n        this.template = Policy.getInstance(\"JavaPolicy\", new URIParameter(policyUri));\n        this.groovy = Policy.getInstance(\"JavaPolicy\", new URIParameter(groovyUri));\n        this.dynamic = dynamic;\n    }","id":56053,"modified_method":"public ESPolicy(PermissionCollection dynamic) throws Exception {\n        URI policyUri = getClass().getResource(POLICY_RESOURCE).toURI();\n        URI untrustedUri = getClass().getResource(UNTRUSTED_RESOURCE).toURI();\n        this.template = Policy.getInstance(\"JavaPolicy\", new URIParameter(policyUri));\n        this.untrusted = Policy.getInstance(\"JavaPolicy\", new URIParameter(untrustedUri));\n        this.dynamic = dynamic;\n    }","commit_id":"8ff42834e9755ca64dacb71b13de75242128262a","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override @SuppressForbidden(reason = \"fast equals check is desired\")\n    public boolean implies(ProtectionDomain domain, Permission permission) {        \n        CodeSource codeSource = domain.getCodeSource();\n        // codesource can be null when reducing privileges via doPrivileged()\n        if (codeSource != null) {\n            URL location = codeSource.getLocation();\n            // location can be null... ??? nobody knows\n            // https://bugs.openjdk.java.net/browse/JDK-8129972\n            if (location != null) {\n                // run groovy scripts with no permissions (except logging property)\n                if (\"/groovy/script\".equals(location.getFile())) {\n                    return groovy.implies(domain, permission);\n                }\n            }\n        }\n\n        // Special handling for broken AWS code which destroys all SSL security\n        // REMOVE THIS when https://github.com/aws/aws-sdk-java/pull/432 is fixed\n        if (permission instanceof RuntimePermission && \"accessClassInPackage.sun.security.ssl\".equals(permission.getName())) {\n            for (StackTraceElement element : Thread.currentThread().getStackTrace()) {\n                if (\"com.amazonaws.http.conn.ssl.SdkTLSSocketFactory\".equals(element.getClassName()) &&\n                      \"verifyMasterSecret\".equals(element.getMethodName())) {\n                    // we found the horrible method: the hack begins!\n                    // force the aws code to back down, by throwing an exception that it catches.\n                    rethrow(new IllegalAccessException(\"no amazon, you cannot do this.\"));\n                }\n            }\n        }\n        // otherwise defer to template + dynamic file permissions\n        return template.implies(domain, permission) || dynamic.implies(permission);\n    }","id":56054,"modified_method":"@Override @SuppressForbidden(reason = \"fast equals check is desired\")\n    public boolean implies(ProtectionDomain domain, Permission permission) {        \n        CodeSource codeSource = domain.getCodeSource();\n        // codesource can be null when reducing privileges via doPrivileged()\n        if (codeSource == null) {\n            return false;\n        }\n\n        URL location = codeSource.getLocation();\n        // location can be null... ??? nobody knows\n        // https://bugs.openjdk.java.net/browse/JDK-8129972\n        if (location != null) {\n            // run scripts with limited permissions\n            if (BootstrapInfo.UNTRUSTED_CODEBASE.equals(location.getFile())) {\n                return untrusted.implies(domain, permission);\n            }\n        }\n\n        // Special handling for broken AWS code which destroys all SSL security\n        // REMOVE THIS when https://github.com/aws/aws-sdk-java/pull/432 is fixed\n        if (permission instanceof RuntimePermission && \"accessClassInPackage.sun.security.ssl\".equals(permission.getName())) {\n            for (StackTraceElement element : Thread.currentThread().getStackTrace()) {\n                if (\"com.amazonaws.http.conn.ssl.SdkTLSSocketFactory\".equals(element.getClassName()) &&\n                      \"verifyMasterSecret\".equals(element.getMethodName())) {\n                    // we found the horrible method: the hack begins!\n                    // force the aws code to back down, by throwing an exception that it catches.\n                    rethrow(new IllegalAccessException(\"no amazon, you cannot do this.\"));\n                }\n            }\n        }\n        // otherwise defer to template + dynamic file permissions\n        return template.implies(domain, permission) || dynamic.implies(permission);\n    }","commit_id":"8ff42834e9755ca64dacb71b13de75242128262a","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/** \n     * Test policy with null codesource.\n     * <p>\n     * This can happen when restricting privileges with doPrivileged,\n     * even though ProtectionDomain's ctor javadocs might make you think\n     * that the policy won't be consulted.\n     */\n    public void testNullCodeSource() throws Exception {\n        assumeTrue(\"test cannot run with security manager\", System.getSecurityManager() == null);\n        PermissionCollection noPermissions = new Permissions();\n        ESPolicy policy = new ESPolicy(noPermissions);\n        assertFalse(policy.implies(new ProtectionDomain(null, noPermissions), new FilePermission(\"foo\", \"read\")));\n    }","id":56055,"modified_method":"/** \n     * Test policy with null codesource.\n     * <p>\n     * This can happen when restricting privileges with doPrivileged,\n     * even though ProtectionDomain's ctor javadocs might make you think\n     * that the policy won't be consulted.\n     */\n    public void testNullCodeSource() throws Exception {\n        assumeTrue(\"test cannot run with security manager\", System.getSecurityManager() == null);\n        // create a policy with AllPermission\n        Permission all = new AllPermission();\n        PermissionCollection allCollection = all.newPermissionCollection();\n        allCollection.add(all);\n        ESPolicy policy = new ESPolicy(allCollection);\n        // restrict ourselves to NoPermission\n        PermissionCollection noPermissions = new Permissions();\n        assertFalse(policy.implies(new ProtectionDomain(null, noPermissions), new FilePermission(\"foo\", \"read\")));\n    }","commit_id":"8ff42834e9755ca64dacb71b13de75242128262a","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public Object compile(String script) {\n        try {\n            // we reuse classloader, so do a security check just in case.\n            SecurityManager sm = System.getSecurityManager();\n            if (sm != null) {\n                sm.checkPermission(new SpecialPermission());\n            }\n            return loader.parseClass(script, MessageDigests.toHexString(MessageDigests.sha1().digest(script.getBytes(StandardCharsets.UTF_8))));\n        } catch (Throwable e) {\n            if (logger.isTraceEnabled()) {\n                logger.trace(\"exception compiling Groovy script:\", e);\n            }\n            throw new ScriptException(\"failed to compile groovy script\", e);\n        }\n    }","id":56056,"modified_method":"@Override\n    public Object compile(String script) {\n        try {\n            // we reuse classloader, so do a security check just in case.\n            SecurityManager sm = System.getSecurityManager();\n            if (sm != null) {\n                sm.checkPermission(new SpecialPermission());\n            }\n            String fake = MessageDigests.toHexString(MessageDigests.sha1().digest(script.getBytes(StandardCharsets.UTF_8)));\n            // same logic as GroovyClassLoader.parseClass() but with a different codesource string:\n            GroovyCodeSource gcs = AccessController.doPrivileged(new PrivilegedAction<GroovyCodeSource>() {\n                public GroovyCodeSource run() {\n                    return new GroovyCodeSource(script, fake, BootstrapInfo.UNTRUSTED_CODEBASE);\n                }\n            });\n            gcs.setCachable(false);\n            return loader.parseClass(gcs);\n        } catch (Throwable e) {\n            if (logger.isTraceEnabled()) {\n                logger.trace(\"exception compiling Groovy script:\", e);\n            }\n            throw new ScriptException(\"failed to compile groovy script\", e);\n        }\n    }","commit_id":"8ff42834e9755ca64dacb71b13de75242128262a","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public Object compile(String script) {\n        // we don't know why kind of safeguards rhino has,\n        // but just be safe\n        SecurityManager sm = System.getSecurityManager();\n        if (sm != null) {\n            sm.checkPermission(new SpecialPermission());\n        }\n        Context ctx = Context.enter();\n        try {\n            ctx.setWrapFactory(wrapFactory);\n            ctx.setOptimizationLevel(optimizationLevel);\n            return ctx.compileString(script, generateScriptName(), 1, null);\n        } finally {\n            Context.exit();\n        }\n    }","id":56057,"modified_method":"@Override\n    public Object compile(String script) {\n        // we don't know why kind of safeguards rhino has,\n        // but just be safe\n        SecurityManager sm = System.getSecurityManager();\n        if (sm != null) {\n            sm.checkPermission(new SpecialPermission());\n        }\n        Context ctx = Context.enter();\n        try {\n            ctx.setWrapFactory(wrapFactory);\n            ctx.setOptimizationLevel(optimizationLevel);\n            ctx.setSecurityController(new PolicySecurityController());\n            return ctx.compileString(script, generateScriptName(), 1, \n                      new CodeSource(new URL(\"file:\" + BootstrapInfo.UNTRUSTED_CODEBASE), (Certificate[]) null));\n        } catch (MalformedURLException e) {\n            throw new RuntimeException(e);\n        } finally {\n            Context.exit();\n        }\n    }","commit_id":"8ff42834e9755ca64dacb71b13de75242128262a","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public boolean implies(ProtectionDomain domain, Permission permission) {\n        if (standardPolicy.implies(domain, permission)) {\n            return true;\n        } else if (excludedSources.contains(domain.getCodeSource()) == false && \n                   Objects.toString(domain.getCodeSource()).contains(\"test-classes\") == false) {\n            return extraPermissions.implies(permission);\n        } else {\n            return false;\n        }\n    }","id":56058,"modified_method":"@Override\n    public boolean implies(ProtectionDomain domain, Permission permission) {\n        CodeSource codeSource = domain.getCodeSource();\n        // codesource can be null when reducing privileges via doPrivileged()\n        if (codeSource == null) {\n            return false;\n        }\n\n        if (standardPolicy.implies(domain, permission)) {\n            return true;\n        } else if (excludedSources.contains(codeSource) == false &&\n                   codeSource.toString().contains(\"test-classes\") == false) {\n            return extraPermissions.implies(permission);\n        } else {\n            return false;\n        }\n    }","commit_id":"8ff42834e9755ca64dacb71b13de75242128262a","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Create a new MockPluginPolicy with dynamic {@code permissions} and\n     * adding the extra plugin permissions from {@code insecurePluginProp} to\n     * all code except test classes.\n     */\n    MockPluginPolicy(Permissions permissions, String insecurePluginProp) throws Exception {\n        // the hack begins!\n\n        // parse whole policy file, with and without the substitution, compute the delta\n        standardPolicy = new ESPolicy(permissions);\n\n        URL bogus = new URL(\"file:/bogus\"); // its \"any old codebase\" this time: generic permissions\n        PermissionCollection smallPermissions = standardPolicy.template.getPermissions(new CodeSource(bogus, (Certificate[])null)); \n        Set<Permission> small = new HashSet<>(Collections.list(smallPermissions.elements()));\n\n        // set the URL for the property substitution, this time it will also have special permissions\n        System.setProperty(insecurePluginProp, bogus.toString());\n        ESPolicy biggerPolicy = new ESPolicy(permissions);\n        System.clearProperty(insecurePluginProp);\n        PermissionCollection bigPermissions = biggerPolicy.template.getPermissions(new CodeSource(bogus, (Certificate[])null));\n        Set<Permission> big = new HashSet<>(Collections.list(bigPermissions.elements()));\n\n        // compute delta to remove all the generic permissions\n        // we want equals() vs implies() for this check, in case we need \n        // to pass along any UnresolvedPermission to the plugin\n        big.removeAll(small);\n\n        // build collection of the special permissions for easy checking\n        extraPermissions = new Permissions();\n        for (Permission p : big) {\n            extraPermissions.add(p);\n        }\n\n        excludedSources = new HashSet<CodeSource>();\n        // exclude some obvious places\n        // es core\n        excludedSources.add(Bootstrap.class.getProtectionDomain().getCodeSource());\n        // es test framework\n        excludedSources.add(getClass().getProtectionDomain().getCodeSource());\n        // lucene test framework\n        excludedSources.add(LuceneTestCase.class.getProtectionDomain().getCodeSource());\n        // test runner\n        excludedSources.add(RandomizedRunner.class.getProtectionDomain().getCodeSource());\n        // junit library\n        excludedSources.add(Assert.class.getProtectionDomain().getCodeSource());\n        // groovy scripts\n        excludedSources.add(new CodeSource(new URL(\"file:/groovy/script\"), (Certificate[])null));\n\n        Loggers.getLogger(getClass()).debug(\"Apply permissions [{}] excluding codebases [{}]\", extraPermissions, excludedSources);\n    }","id":56059,"modified_method":"/**\n     * Create a new MockPluginPolicy with dynamic {@code permissions} and\n     * adding the extra plugin permissions from {@code insecurePluginProp} to\n     * all code except test classes.\n     */\n    MockPluginPolicy(Permissions permissions, String insecurePluginProp) throws Exception {\n        // the hack begins!\n\n        // parse whole policy file, with and without the substitution, compute the delta\n        standardPolicy = new ESPolicy(permissions);\n\n        URL bogus = new URL(\"file:/bogus\"); // its \"any old codebase\" this time: generic permissions\n        PermissionCollection smallPermissions = standardPolicy.template.getPermissions(new CodeSource(bogus, (Certificate[])null)); \n        Set<Permission> small = new HashSet<>(Collections.list(smallPermissions.elements()));\n\n        // set the URL for the property substitution, this time it will also have special permissions\n        System.setProperty(insecurePluginProp, bogus.toString());\n        ESPolicy biggerPolicy = new ESPolicy(permissions);\n        System.clearProperty(insecurePluginProp);\n        PermissionCollection bigPermissions = biggerPolicy.template.getPermissions(new CodeSource(bogus, (Certificate[])null));\n        Set<Permission> big = new HashSet<>(Collections.list(bigPermissions.elements()));\n\n        // compute delta to remove all the generic permissions\n        // we want equals() vs implies() for this check, in case we need \n        // to pass along any UnresolvedPermission to the plugin\n        big.removeAll(small);\n\n        // build collection of the special permissions for easy checking\n        extraPermissions = new Permissions();\n        for (Permission p : big) {\n            extraPermissions.add(p);\n        }\n\n        excludedSources = new HashSet<CodeSource>();\n        // exclude some obvious places\n        // es core\n        excludedSources.add(Bootstrap.class.getProtectionDomain().getCodeSource());\n        // es test framework\n        excludedSources.add(getClass().getProtectionDomain().getCodeSource());\n        // lucene test framework\n        excludedSources.add(LuceneTestCase.class.getProtectionDomain().getCodeSource());\n        // test runner\n        excludedSources.add(RandomizedRunner.class.getProtectionDomain().getCodeSource());\n        // junit library\n        excludedSources.add(Assert.class.getProtectionDomain().getCodeSource());\n        // scripts\n        excludedSources.add(new CodeSource(new URL(\"file:\" + BootstrapInfo.UNTRUSTED_CODEBASE), (Certificate[])null));\n\n        Loggers.getLogger(getClass()).debug(\"Apply permissions [{}] excluding codebases [{}]\", extraPermissions, excludedSources);\n    }","commit_id":"8ff42834e9755ca64dacb71b13de75242128262a","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n    public Object execute(CompiledScript compiledScript, Map<String, Object> vars) {\n        PyObject pyVars = Py.java2py(vars);\n        interp.setLocals(pyVars);\n        PyObject ret = interp.eval((PyCode) compiledScript.compiled());\n        if (ret == null) {\n            return null;\n        }\n        return ret.__tojava__(Object.class);\n    }","id":56060,"modified_method":"@Override\n    public Object execute(CompiledScript compiledScript, Map<String, Object> vars) {\n        PyObject pyVars = Py.java2py(vars);\n        interp.setLocals(pyVars);\n        // eval the script with reduced privileges\n        PyObject ret = evalRestricted((PyCode) compiledScript.compiled());\n        if (ret == null) {\n            return null;\n        }\n        return ret.__tojava__(Object.class);\n    }","commit_id":"8ff42834e9755ca64dacb71b13de75242128262a","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public Object run() {\n            interp.setLocals(pyVars);\n            PyObject ret = interp.eval(code);\n            if (ret == null) {\n                return null;\n            }\n            return ret.__tojava__(Object.class);\n        }","id":56061,"modified_method":"@Override\n        public Object run() {\n            interp.setLocals(pyVars);\n            // eval the script with reduced privileges\n            PyObject ret = evalRestricted(code);\n            if (ret == null) {\n                return null;\n            }\n            return ret.__tojava__(Object.class);\n        }","commit_id":"8ff42834e9755ca64dacb71b13de75242128262a","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public Object run() {\n            interp.setLocals(pyVars);\n            PyObject ret = interp.eval(code);\n            if (ret == null) {\n                return null;\n            }\n            return ret.__tojava__(Object.class);\n        }","id":56062,"modified_method":"@Override\n        public Object run() {\n            interp.setLocals(pyVars);\n            // eval the script with reduced privileges\n            PyObject ret = evalRestricted(code);\n            if (ret == null) {\n                return null;\n            }\n            return ret.__tojava__(Object.class);\n        }","commit_id":"8ff42834e9755ca64dacb71b13de75242128262a","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void printOptimizationResults(LikelihoodFunction df, MonitorFunction monitor) {\n    double negLogLike = df.valueAt(prob.lambda);\n    System.err.printf(\"After optimization neg (penalized) log cond likelihood: %1.2f%n\", negLogLike);\n    if (monitor != null) {\n      monitor.reportMonitoring(negLogLike);\n    }\n    int numNonZero = 0;\n    for (int i = 0; i < prob.lambda.length; i++) {\n      if (prob.lambda[i] != 0.0) {\n        // 0.0 == -0.0 in IEEE math!\n        numNonZero++;\n      }\n    }\n    System.err.printf(\"Non-zero parameters: %d/%d (%1.2f%%)%n\", numNonZero, prob.lambda.length,\n        (100.0 * numNonZero) / prob.lambda.length);\n  }","id":56063,"modified_method":"private void printOptimizationResults(LikelihoodFunction df, MonitorFunction monitor) {\n    double negLogLike = df.valueAt(prob.lambda);\n    System.err.println(\"After optimization neg (penalized) log likelihood is: \" + negLogLike);\n    if (monitor != null) {\n      monitor.reportMonitoring(negLogLike);\n    }\n    int numNonZero = 0;\n    for (int i = 0; i < prob.lambda.length; i++) {\n      if (prob.lambda[i] != 0.0) {\n        // 0.0 == -0.0 in IEEE math!\n        numNonZero++;\n      }\n    }\n    System.err.printf(\"Non-zero parameters: %d/%d (%0.2f%%)%n\", numNonZero, prob.lambda.length,\n        ((double) numNonZero) / prob.lambda.length);\n  }","commit_id":"1cda570d9095eea297eb9a5177c0e15aad35a08e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public ModCollinsHeadFinder(TreebankLanguagePack tlp) {\n    super(tlp, tlp.punctuationTags()); // avoid punctuation as head in final default rule\n\n    nonTerminalInfo = Generics.newHashMap();\n\n    // This version from Collins' diss (1999: 236-238)\n    // NNS, NN is actually sensible (money, etc.)!\n    // QP early isn't; should prefer JJR NN RB\n    // remove ADVP; it just shouldn't be there.\n    // if two JJ, should take right one (e.g. South Korean)\n    // nonTerminalInfo.put(\"ADJP\", new String[][]{{\"left\", \"NNS\", \"NN\", \"$\", \"QP\"}, {\"right\", \"JJ\"}, {\"left\", \"VBN\", \"VBG\", \"ADJP\", \"JJP\", \"JJR\", \"NP\", \"JJS\", \"DT\", \"FW\", \"RBR\", \"RBS\", \"SBAR\", \"RB\"}});\n    nonTerminalInfo.put(\"ADJP\", new String[][]{{\"left\", \"$\"}, {\"rightdis\", \"NNS\", \"NN\", \"JJ\", \"QP\", \"VBN\", \"VBG\"}, {\"left\", \"ADJP\"}, {\"rightdis\", \"JJP\", \"JJR\", \"JJS\", \"DT\", \"RB\", \"RBR\", \"CD\", \"IN\", \"VBD\"}, {\"left\", \"ADVP\", \"NP\"}});\n    nonTerminalInfo.put(\"JJP\", new String[][]{{\"left\", \"NNS\", \"NN\", \"$\", \"QP\", \"JJ\", \"VBN\", \"VBG\", \"ADJP\", \"JJP\", \"JJR\", \"NP\", \"JJS\", \"DT\", \"FW\", \"RBR\", \"RBS\", \"SBAR\", \"RB\"}});  // JJP is introduced for NML-like adjective phrases in Vadas' treebank; Chris wishes he hadn't used JJP which should be a POS-tag.\n    // ADVP rule rewritten by Chris in Nov 2010 to be rightdis.  This is right! JJ.* is often head and rightmost.\n    nonTerminalInfo.put(\"ADVP\", new String[][]{{\"left\", \"ADVP\", \"IN\"},\n                                               {\"rightdis\", \"RB\", \"RBR\", \"RBS\", \"JJ\", \"JJR\", \"JJS\"},\n                                               {\"rightdis\", \"RP\", \"DT\", \"NN\", \"CD\", \"NP\", \"VBN\", \"NNP\", \"CC\", \"FW\", \"NNS\", \"ADJP\", \"NML\"}});\n    nonTerminalInfo.put(\"CONJP\", new String[][]{{\"right\", \"CC\", \"RB\", \"IN\"}});\n    nonTerminalInfo.put(\"FRAG\", new String[][]{{\"right\"}}); // crap\n    nonTerminalInfo.put(\"INTJ\", new String[][]{{\"left\"}});\n    nonTerminalInfo.put(\"LST\", new String[][]{{\"right\", \"LS\", \":\"}});\n\n    // NML is head in: (NAC-LOC (NML San Antonio) (, ,) (NNP Texas))\n    // TODO: NNP should be head (rare cases, could be ignored):\n    //   (NAC (NML New York) (NNP Court) (PP of Appeals))\n    //   (NAC (NML Prudential Insurance) (NNP Co.) (PP Of America))\n    // Chris: This could maybe still do with more thought, but NAC is rare.\n    nonTerminalInfo.put(\"NAC\", new String[][]{{\"left\", \"NN\", \"NNS\", \"NML\", \"NNP\", \"NNPS\", \"NP\", \"NAC\", \"EX\", \"$\", \"CD\", \"QP\", \"PRP\", \"VBG\", \"JJ\", \"JJS\", \"JJR\", \"ADJP\", \"JJP\", \"FW\"}});\n    nonTerminalInfo.put(\"NX\", new String[][]{{\"right\", \"NP\", \"NX\"}});\n\n    // Added JJ to PP head table, since it is a head in several cases, e.g.:\n    // (PP (JJ next) (PP to them))\n    // When you have both JJ and IN daughters, it is invariably \"such as\" -- not so clear which should be head, but leave as IN\n    // should prefer JJ? (PP (JJ such) (IN as) (NP (NN crocidolite)))  Michel thinks we should make JJ a head of PP\n    // added SYM as used in new treebanks for symbols filling role of IN\n    // Changed PP search to left -- just what you want for conjunction (and consistent with SemanticHeadFinder)\n    nonTerminalInfo.put(\"PP\", new String[][]{{\"right\", \"IN\", \"TO\", \"VBG\", \"VBN\", \"RP\", \"FW\", \"JJ\", \"SYM\"}, {\"left\", \"PP\"}});\n\n    nonTerminalInfo.put(\"PRN\", new String[][]{{\"left\", \"VP\", \"NP\", \"PP\", \"SQ\", \"S\", \"SINV\", \"SBAR\", \"ADJP\", \"JJP\", \"ADVP\", \"INTJ\", \"WHNP\", \"NAC\", \"VBP\", \"JJ\", \"NN\", \"NNP\"}});\n    nonTerminalInfo.put(\"PRT\", new String[][]{{\"right\", \"RP\"}});\n    // add '#' for pounds!!\n    nonTerminalInfo.put(\"QP\", new String[][]{{\"left\", \"$\", \"IN\", \"NNS\", \"NN\", \"JJ\", \"CD\", \"PDT\", \"DT\", \"RB\", \"NCD\", \"QP\", \"JJR\", \"JJS\"}});\n    // reduced relative clause can be any predicate VP, ADJP, NP, PP.\n    // For choosing between NP and PP, really need to know which one is temporal and to choose the other.\n    // It's not clear ADVP needs to be in the list at all (delete?).\n    nonTerminalInfo.put(\"RRC\", new String[][]{{\"left\", \"RRC\"}, {\"right\", \"VP\", \"ADJP\", \"JJP\", \"NP\", \"PP\", \"ADVP\"}});\n\n    // delete IN -- go for main part of sentence; add FRAG\n\n    nonTerminalInfo.put(\"S\", new String[][]{{\"left\", \"TO\", \"VP\", \"S\", \"FRAG\", \"SBAR\", \"ADJP\", \"JJP\", \"UCP\", \"NP\"}});\n    nonTerminalInfo.put(\"SBAR\", new String[][]{{\"left\", \"WHNP\", \"WHPP\", \"WHADVP\", \"WHADJP\", \"IN\", \"DT\", \"S\", \"SQ\", \"SINV\", \"SBAR\", \"FRAG\"}});\n    nonTerminalInfo.put(\"SBARQ\", new String[][]{{\"left\", \"SQ\", \"S\", \"SINV\", \"SBARQ\", \"FRAG\", \"SBAR\"}});\n    // cdm: if you have 2 VP under an SINV, you should really take the 2nd as syntactic head, because the first is a topicalized VP complement of the second, but for now I didn't change this, since it didn't help parsing.  (If it were changed, it'd need to be also changed to the opposite in SemanticHeadFinder.)\n    nonTerminalInfo.put(\"SINV\", new String[][]{{\"left\", \"VBZ\", \"VBD\", \"VBP\", \"VB\", \"MD\", \"VBN\", \"VP\", \"S\", \"SINV\", \"ADJP\", \"JJP\", \"NP\"}});\n    nonTerminalInfo.put(\"SQ\", new String[][]{{\"left\", \"VBZ\", \"VBD\", \"VBP\", \"VB\", \"MD\", \"AUX\", \"AUXG\", \"VP\", \"SQ\"}});  // TODO: Should maybe put S before SQ for tag questions. Check.\n    nonTerminalInfo.put(\"UCP\", new String[][]{{\"right\"}});\n    // below is weird!! Make 2 lists, one for good and one for bad heads??\n    // VP: added AUX and AUXG to work with Charniak tags\n    nonTerminalInfo.put(\"VP\", new String[][]{{\"left\", \"TO\", \"VBD\", \"VBN\", \"MD\", \"VBZ\", \"VB\", \"VBG\", \"VBP\", \"VP\", \"AUX\", \"AUXG\", \"ADJP\", \"JJP\", \"NN\", \"NNS\", \"JJ\", \"NP\", \"NNP\"}});\n    nonTerminalInfo.put(\"WHADJP\", new String[][]{{\"left\", \"WRB\", \"WHADVP\", \"RB\", \"JJ\", \"ADJP\", \"JJP\", \"JJR\"}});\n    nonTerminalInfo.put(\"WHADVP\", new String[][]{{\"right\", \"WRB\", \"WHADVP\"}});\n    nonTerminalInfo.put(\"WHNP\", new String[][]{{\"left\", \"WDT\", \"WP\", \"WP$\", \"WHADJP\", \"WHPP\", \"WHNP\"}});\n    nonTerminalInfo.put(\"WHPP\", new String[][]{{\"right\", \"IN\", \"TO\", \"FW\"}});\n    nonTerminalInfo.put(\"X\", new String[][]{{\"right\", \"S\", \"VP\", \"ADJP\", \"JJP\", \"NP\", \"SBAR\", \"PP\", \"X\"}});\n    nonTerminalInfo.put(\"NP\", new String[][]{{\"rightdis\", \"NN\", \"NNP\", \"NNPS\", \"NNS\", \"NML\", \"NX\", \"POS\", \"JJR\"}, {\"left\", \"NP\", \"PRP\"}, {\"rightdis\", \"$\", \"ADJP\", \"JJP\", \"PRN\", \"FW\"}, {\"right\", \"CD\"}, {\"rightdis\", \"JJ\", \"JJS\", \"RB\", \"QP\", \"DT\", \"WDT\", \"RBR\", \"ADVP\"}});\n    // TODO: seems JJ should be head of NML in this case:\n    // (NP (NML (JJ former) (NML Red Sox) (JJ great)) (NNP Luis) (NNP Tiant)),\n    nonTerminalInfo.put(\"NML\", new String[][]{{\"rightdis\", \"NN\", \"NNP\", \"NNPS\", \"NNS\", \"NX\", \"NML\", \"POS\", \"JJR\"}, {\"left\", \"NP\", \"PRP\"}, {\"rightdis\", \"$\", \"ADJP\", \"JJP\", \"PRN\"}, {\"right\", \"CD\"}, {\"rightdis\", \"JJ\", \"JJS\", \"RB\", \"QP\", \"DT\", \"WDT\", \"RBR\", \"ADVP\"}});\n\n    nonTerminalInfo.put(\"POSSP\", new String[][]{{\"right\", \"POS\"}});\n\n    /* HJT: Adding the following to deal with oddly formed data in (for example) the Brown corpus */\n    nonTerminalInfo.put(\"ROOT\", new String[][]{{\"left\", \"S\", \"SQ\", \"SINV\", \"SBAR\", \"FRAG\"}});\n    nonTerminalInfo.put(\"TYPO\", new String[][]{{\"left\", \"NN\", \"NP\", \"NML\", \"NNP\", \"NNPS\", \"TO\",\n      \"VBD\", \"VBN\", \"MD\", \"VBZ\", \"VB\", \"VBG\", \"VBP\", \"VP\", \"ADJP\", \"JJP\", \"FRAG\"}}); // for Brown (Roger)\n    nonTerminalInfo.put(\"ADV\", new String[][]{{\"right\", \"RB\", \"RBR\", \"RBS\", \"FW\",\n      \"ADVP\", \"TO\", \"CD\", \"JJR\", \"JJ\", \"IN\", \"NP\", \"NML\", \"JJS\", \"NN\"}});\n\n    // SWBD\n    nonTerminalInfo.put(\"EDITED\", new String[][] {{\"left\"}});  // crap rule for Switchboard (if don't delete EDITED nodes)\n    // in sw2756, a \"VB\". (copy \"VP\" to handle this problem, though should really fix it on reading)\n    nonTerminalInfo.put(\"VB\", new String[][]{{\"left\", \"TO\", \"VBD\", \"VBN\", \"MD\", \"VBZ\", \"VB\", \"VBG\", \"VBP\", \"VP\", \"AUX\", \"AUXG\", \"ADJP\", \"JJP\", \"NN\", \"NNS\", \"JJ\", \"NP\", \"NNP\"}});\n\n    nonTerminalInfo.put(\"META\", new String[][] {{\"left\"}});  // rule for OntoNotes, but maybe should just be deleted in TreeReader??\n    nonTerminalInfo.put(\"XS\", new String[][] {{\"right\", \"IN\"}}); // rule for new structure in QP, introduced by Stanford in QPTreeTransformer\n    // nonTerminalInfo.put(null, new String[][] {{\"left\"}});  // rule for OntoNotes from Michel, but it would be better to fix this in TreeReader or to use a default rule?\n\n    // todo: Uncomment this line if we always want to take the leftmost if no head rule is defined for the mother category.\n    // defaultRule = defaultLeftRule; // Don't exception, take leftmost if no rule defined for a certain parent category\n  }","id":56064,"modified_method":"public ModCollinsHeadFinder(TreebankLanguagePack tlp) {\n    super(tlp, tlp.punctuationTags()); // avoid punctuation as head in final default rule\n\n    nonTerminalInfo = Generics.newHashMap();\n\n    // This version from Collins' diss (1999: 236-238)\n    // NNS, NN is actually sensible (money, etc.)!\n    // QP early isn't; should prefer JJR NN RB\n    // remove ADVP; it just shouldn't be there.\n    // if two JJ, should take right one (e.g. South Korean)\n    // nonTerminalInfo.put(\"ADJP\", new String[][]{{\"left\", \"NNS\", \"NN\", \"$\", \"QP\"}, {\"right\", \"JJ\"}, {\"left\", \"VBN\", \"VBG\", \"ADJP\", \"JJP\", \"JJR\", \"NP\", \"JJS\", \"DT\", \"FW\", \"RBR\", \"RBS\", \"SBAR\", \"RB\"}});\n    nonTerminalInfo.put(\"ADJP\", new String[][]{{\"left\", \"$\"}, {\"rightdis\", \"NNS\", \"NN\", \"JJ\", \"QP\", \"VBN\", \"VBG\"}, {\"left\", \"ADJP\"}, {\"rightdis\", \"JJP\", \"JJR\", \"JJS\", \"DT\", \"RB\", \"RBR\", \"CD\", \"IN\", \"VBD\"}, {\"left\", \"ADVP\", \"NP\"}});\n    nonTerminalInfo.put(\"JJP\", new String[][]{{\"left\", \"NNS\", \"NN\", \"$\", \"QP\", \"JJ\", \"VBN\", \"VBG\", \"ADJP\", \"JJP\", \"JJR\", \"NP\", \"JJS\", \"DT\", \"FW\", \"RBR\", \"RBS\", \"SBAR\", \"RB\"}});  // JJP is introduced for NML-like adjective phrases in Vadas' treebank; Chris wishes he hadn't used JJP which should be a POS-tag.\n    // ADVP rule rewritten by Chris in Nov 2010 to be rightdis.  This is right! JJ.* is often head and rightmost.\n    nonTerminalInfo.put(\"ADVP\", new String[][]{{\"left\", \"ADVP\", \"IN\"},\n                                               {\"rightdis\", \"RB\", \"RBR\", \"RBS\", \"JJ\", \"JJR\", \"JJS\"},\n                                               {\"rightdis\", \"RP\", \"DT\", \"NN\", \"CD\", \"NP\", \"VBN\", \"NNP\", \"CC\", \"FW\", \"NNS\", \"ADJP\", \"NML\"}});\n    nonTerminalInfo.put(\"CONJP\", new String[][]{{\"right\", \"CC\", \"RB\", \"IN\"}});\n    nonTerminalInfo.put(\"FRAG\", new String[][]{{\"right\"}}); // crap\n    nonTerminalInfo.put(\"INTJ\", new String[][]{{\"left\"}});\n    nonTerminalInfo.put(\"LST\", new String[][]{{\"right\", \"LS\", \":\"}});\n\n    // NML is head in: (NAC-LOC (NML San Antonio) (, ,) (NNP Texas))\n    // TODO: NNP should be head (rare cases, could be ignored):\n    //   (NAC (NML New York) (NNP Court) (PP of Appeals))\n    //   (NAC (NML Prudential Insurance) (NNP Co.) (PP Of America))\n    // Chris: This could maybe still do with more thought, but NAC is rare.\n    nonTerminalInfo.put(\"NAC\", new String[][]{{\"left\", \"NN\", \"NNS\", \"NML\", \"NNP\", \"NNPS\", \"NP\", \"NAC\", \"EX\", \"$\", \"CD\", \"QP\", \"PRP\", \"VBG\", \"JJ\", \"JJS\", \"JJR\", \"ADJP\", \"JJP\", \"FW\"}});\n    nonTerminalInfo.put(\"NX\", new String[][]{{\"right\", \"NP\", \"NX\"}});\n\n    // Added JJ to PP head table, since it is a head in several cases, e.g.:\n    // (PP (JJ next) (PP to them))\n    // When you have both JJ and IN daughters, it is invariably \"such as\" -- not so clear which should be head, but leave as IN\n    // should prefer JJ? (PP (JJ such) (IN as) (NP (NN crocidolite)))  Michel thinks we should make JJ a head of PP\n    // added SYM as used in new treebanks for symbols filling role of IN\n    // Changed PP search to left -- just what you want for conjunction (and consistent with SemanticHeadFinder)\n    nonTerminalInfo.put(\"PP\", new String[][]{{\"right\", \"IN\", \"TO\", \"VBG\", \"VBN\", \"RP\", \"FW\", \"JJ\", \"SYM\"}, {\"left\", \"PP\"}});\n\n    nonTerminalInfo.put(\"PRN\", new String[][]{{\"left\", \"VP\", \"NP\", \"PP\", \"SQ\", \"S\", \"SINV\", \"SBAR\", \"ADJP\", \"JJP\", \"ADVP\", \"INTJ\", \"WHNP\", \"NAC\", \"VBP\", \"JJ\", \"NN\", \"NNP\"}});\n    nonTerminalInfo.put(\"PRT\", new String[][]{{\"right\", \"RP\"}});\n    // add '#' for pounds!!\n    nonTerminalInfo.put(\"QP\", new String[][]{{\"left\", \"$\", \"IN\", \"NNS\", \"NN\", \"JJ\", \"CD\", \"PDT\", \"DT\", \"RB\", \"NCD\", \"QP\", \"JJR\", \"JJS\"}});\n    nonTerminalInfo.put(\"RRC\", new String[][]{{\"right\", \"VP\", \"NP\", \"ADVP\", \"ADJP\", \"JJP\", \"PP\"}});\n\n    // delete IN -- go for main part of sentence; add FRAG\n\n    nonTerminalInfo.put(\"S\", new String[][]{{\"left\", \"TO\", \"VP\", \"S\", \"FRAG\", \"SBAR\", \"ADJP\", \"JJP\", \"UCP\", \"NP\"}});\n    nonTerminalInfo.put(\"SBAR\", new String[][]{{\"left\", \"WHNP\", \"WHPP\", \"WHADVP\", \"WHADJP\", \"IN\", \"DT\", \"S\", \"SQ\", \"SINV\", \"SBAR\", \"FRAG\"}});\n    nonTerminalInfo.put(\"SBARQ\", new String[][]{{\"left\", \"SQ\", \"S\", \"SINV\", \"SBARQ\", \"FRAG\", \"SBAR\"}});\n    // cdm: if you have 2 VP under an SINV, you should really take the 2nd as syntactic head, because the first is a topicalized VP complement of the second, but for now I didn't change this, since it didn't help parsing.  (If it were changed, it'd need to be also changed to the opposite in SemanticHeadFinder.)\n    nonTerminalInfo.put(\"SINV\", new String[][]{{\"left\", \"VBZ\", \"VBD\", \"VBP\", \"VB\", \"MD\", \"VBN\", \"VP\", \"S\", \"SINV\", \"ADJP\", \"JJP\", \"NP\"}});\n    nonTerminalInfo.put(\"SQ\", new String[][]{{\"left\", \"VBZ\", \"VBD\", \"VBP\", \"VB\", \"MD\", \"AUX\", \"AUXG\", \"VP\", \"SQ\"}});  // TODO: Should maybe put S before SQ for tag questions. Check.\n    nonTerminalInfo.put(\"UCP\", new String[][]{{\"right\"}});\n    // below is weird!! Make 2 lists, one for good and one for bad heads??\n    // VP: added AUX and AUXG to work with Charniak tags\n    nonTerminalInfo.put(\"VP\", new String[][]{{\"left\", \"TO\", \"VBD\", \"VBN\", \"MD\", \"VBZ\", \"VB\", \"VBG\", \"VBP\", \"VP\", \"AUX\", \"AUXG\", \"ADJP\", \"JJP\", \"NN\", \"NNS\", \"JJ\", \"NP\", \"NNP\"}});\n    nonTerminalInfo.put(\"WHADJP\", new String[][]{{\"left\", \"WRB\", \"WHADVP\", \"RB\", \"JJ\", \"ADJP\", \"JJP\", \"JJR\"}});\n    nonTerminalInfo.put(\"WHADVP\", new String[][]{{\"right\", \"WRB\", \"WHADVP\"}});\n    nonTerminalInfo.put(\"WHNP\", new String[][]{{\"left\", \"WDT\", \"WP\", \"WP$\", \"WHADJP\", \"WHPP\", \"WHNP\"}});\n    nonTerminalInfo.put(\"WHPP\", new String[][]{{\"right\", \"IN\", \"TO\", \"FW\"}});\n    nonTerminalInfo.put(\"X\", new String[][]{{\"right\", \"S\", \"VP\", \"ADJP\", \"JJP\", \"NP\", \"SBAR\", \"PP\", \"X\"}});\n    nonTerminalInfo.put(\"NP\", new String[][]{{\"rightdis\", \"NN\", \"NNP\", \"NNPS\", \"NNS\", \"NML\", \"NX\", \"POS\", \"JJR\"}, {\"left\", \"NP\", \"PRP\"}, {\"rightdis\", \"$\", \"ADJP\", \"JJP\", \"PRN\", \"FW\"}, {\"right\", \"CD\"}, {\"rightdis\", \"JJ\", \"JJS\", \"RB\", \"QP\", \"DT\", \"WDT\", \"RBR\", \"ADVP\"}});\n    // TODO: seems JJ should be head of NML in this case:\n    // (NP (NML (JJ former) (NML Red Sox) (JJ great)) (NNP Luis) (NNP Tiant)),\n    nonTerminalInfo.put(\"NML\", new String[][]{{\"rightdis\", \"NN\", \"NNP\", \"NNPS\", \"NNS\", \"NX\", \"NML\", \"POS\", \"JJR\"}, {\"left\", \"NP\", \"PRP\"}, {\"rightdis\", \"$\", \"ADJP\", \"JJP\", \"PRN\"}, {\"right\", \"CD\"}, {\"rightdis\", \"JJ\", \"JJS\", \"RB\", \"QP\", \"DT\", \"WDT\", \"RBR\", \"ADVP\"}});\n\n    nonTerminalInfo.put(\"POSSP\", new String[][]{{\"right\", \"POS\"}});\n\n    /* HJT: Adding the following to deal with oddly formed data in (for example) the Brown corpus */\n    nonTerminalInfo.put(\"ROOT\", new String[][]{{\"left\", \"S\", \"SQ\", \"SINV\", \"SBAR\", \"FRAG\"}});\n    nonTerminalInfo.put(\"TYPO\", new String[][]{{\"left\", \"NN\", \"NP\", \"NML\", \"NNP\", \"NNPS\", \"TO\",\n      \"VBD\", \"VBN\", \"MD\", \"VBZ\", \"VB\", \"VBG\", \"VBP\", \"VP\", \"ADJP\", \"JJP\", \"FRAG\"}}); // for Brown (Roger)\n    nonTerminalInfo.put(\"ADV\", new String[][]{{\"right\", \"RB\", \"RBR\", \"RBS\", \"FW\",\n      \"ADVP\", \"TO\", \"CD\", \"JJR\", \"JJ\", \"IN\", \"NP\", \"NML\", \"JJS\", \"NN\"}});\n\n    // SWBD\n    nonTerminalInfo.put(\"EDITED\", new String[][] {{\"left\"}});  // crap rule for Switchboard (if don't delete EDITED nodes)\n    // in sw2756, a \"VB\". (copy \"VP\" to handle this problem, though should really fix it on reading)\n    nonTerminalInfo.put(\"VB\", new String[][]{{\"left\", \"TO\", \"VBD\", \"VBN\", \"MD\", \"VBZ\", \"VB\", \"VBG\", \"VBP\", \"VP\", \"AUX\", \"AUXG\", \"ADJP\", \"JJP\", \"NN\", \"NNS\", \"JJ\", \"NP\", \"NNP\"}});\n\n    nonTerminalInfo.put(\"META\", new String[][] {{\"left\"}});  // rule for OntoNotes, but maybe should just be deleted in TreeReader??\n    nonTerminalInfo.put(\"XS\", new String[][] {{\"right\", \"IN\"}}); // rule for new structure in QP, introduced by Stanford in QPTreeTransformer\n    // nonTerminalInfo.put(null, new String[][] {{\"left\"}});  // rule for OntoNotes from Michel, but it would be better to fix this in TreeReader or to use a default rule?\n\n    // todo: Uncomment this line if we always want to take the leftmost if no head rule is defined for the mother category.\n    // defaultRule = defaultLeftRule; // Don't exception, take leftmost if no rule defined for a certain parent category\n  }","commit_id":"1cda570d9095eea297eb9a5177c0e15aad35a08e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/** Create a SemanticHeadFinder.\n   *\n   * @param tlp The TreebankLanguagePack, used by the superclass to get basic\n   *     category of constituents.\n   * @param cop If true, a copular verb (be, seem, appear, stay, remain, resemble, become)\n   *     is not treated as head when it has an AdjP or NP complement.  If false,\n   *     a copula verb is still always treated as a head.  But it will still\n   *     be treated as an auxiliary in periphrastic tenses with a VP complement.\n   */\n  public SemanticHeadFinder(TreebankLanguagePack tlp, boolean cop) {\n    super(tlp);\n    ruleChanges();\n\n    // make a distinction between auxiliaries and copula verbs to\n    // get the NP has semantic head in sentences like \"Bill is an honest man\".  (Added \"sha\" for \"shan't\" May 2009\n    verbalAuxiliaries = Generics.newHashSet(Arrays.asList(auxiliaries));\n\n    passiveAuxiliaries = Generics.newHashSet(Arrays.asList(beGetVerbs));\n\n    //copula verbs having an NP complement\n    copulars = Generics.newHashSet();\n    if (cop) {\n      copulars.addAll(Arrays.asList(copulaVerbs));\n    }\n\n    verbalTags = Generics.newHashSet(Arrays.asList(verbTags));\n    unambiguousAuxiliaryTags = Generics.newHashSet(Arrays.asList(unambiguousAuxTags));\n\n\n  }","id":56065,"modified_method":"/** Create a SemanticHeadFinder.\n   *\n   * @param tlp The TreebankLanguagePack, used by the superclass to get basic\n   *     category of constituents.\n   * @param cop If true, a copular verb (be, seem, appear, stay, remain, resemble, become)\n   *     is not treated as head when it has an AdjP or NP complement.  If false,\n   *     a copula verb is still always treated as a head.  But it will still\n   *     be treated as an auxiliary in periphrastic tenses with a VP complement.\n   */\n  public SemanticHeadFinder(TreebankLanguagePack tlp, boolean cop) {\n    super(tlp);\n    ruleChanges();\n\n    // make a distinction between auxiliaries and copula verbs to\n    // get the NP has semantic head in sentences like \"Bill is an honest man\".  (Added \"sha\" for \"shan't\" May 2009\n    verbalAuxiliaries = Generics.newHashSet();\n    verbalAuxiliaries.addAll(Arrays.asList(auxiliaries));\n\n    passiveAuxiliaries = Generics.newHashSet();\n    passiveAuxiliaries.addAll(Arrays.asList(beGetVerbs));\n\n    //copula verbs having an NP complement\n    copulars = Generics.newHashSet();\n    if (cop) {\n      copulars.addAll(Arrays.asList(copulaVerbs));\n    } // a few times the apostrophe is missing on \"'s\"\n\n    verbalTags = Generics.newHashSet();\n    // include Charniak tags so can do BLLIP right\n    verbalTags.addAll(Arrays.asList(verbTags));\n\n  }","commit_id":"1cda570d9095eea297eb9a5177c0e15aad35a08e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private boolean hasPassiveProgressiveAuxiliary(Tree[] kids) {\n    if (DEBUG) {\n      System.err.println(\"Checking for passive/progressive auxiliary\");\n    }\n    boolean foundPassiveVP = false;\n    boolean foundPassiveAux = false;\n    for (Tree kid : kids) {\n      if (DEBUG) {\n        System.err.println(\"  checking in \" + kid);\n      }\n      if (isVerbalAuxiliary(kid, passiveAuxiliaries, false)) {\n          foundPassiveAux = true;\n      } else if (kid.isPhrasal()) {\n        Label kidLabel = kid.label();\n        String cat = null;\n        if (kidLabel instanceof HasCategory) {\n          cat = ((HasCategory) kidLabel).category();\n        }\n        if (cat == null) {\n          cat = kid.value();\n        }\n        if ( ! cat.startsWith(\"VP\")) {\n          continue;\n        }\n        if (DEBUG) {\n          System.err.println(\"hasPassiveProgressiveAuxiliary found VP\");\n        }\n        Tree[] kidkids = kid.children();\n        boolean foundParticipleInVp = false;\n        for (Tree kidkid : kidkids) {\n          if (DEBUG) {\n            System.err.println(\"  hasPassiveProgressiveAuxiliary examining \" + kidkid);\n          }\n          if (kidkid.isPreTerminal()) {\n            Label kidkidLabel = kidkid.label();\n            String tag = null;\n            if (kidkidLabel instanceof HasTag) {\n              tag = ((HasTag) kidkidLabel).tag();\n            }\n            if (tag == null) {\n              tag = kidkid.value();\n            }\n            // we allow in VBD because of frequent tagging mistakes\n            if (\"VBN\".equals(tag) || \"VBG\".equals(tag) || \"VBD\".equals(tag)) {\n              foundPassiveVP = true;\n              if (DEBUG) {\n                System.err.println(\"hasPassiveAuxiliary found VBN/VBG/VBD VP\");\n              }\n              break;\n            } else if (\"CC\".equals(tag) && foundParticipleInVp) {\n              foundPassiveVP = true;\n              if (DEBUG) {\n                System.err.println(\"hasPassiveAuxiliary [coordination] found (VP (VP[VBN/VBG/VBD] CC\");\n              }\n              break;\n            }\n          } else if (kidkid.isPhrasal()) {\n            String catcat = null;\n            if (kidLabel instanceof HasCategory) {\n              catcat = ((HasCategory) kidLabel).category();\n            }\n            if (catcat == null) {\n              catcat = kid.value();\n            }\n            if (\"VP\".equals(catcat)) {\n              if (DEBUG) {\n                System.err.println(\"hasPassiveAuxiliary found (VP (VP)), recursing\");\n              }\n              foundParticipleInVp = vpContainsParticiple(kidkid);\n            } else if ((\"CONJP\".equals(catcat) || \"PRN\".equals(catcat)) && foundParticipleInVp) { // occasionally get PRN in CONJ-like structures\n              foundPassiveVP = true;\n              if (DEBUG) {\n                System.err.println(\"hasPassiveAuxiliary [coordination] found (VP (VP[VBN/VBG/VBD] CONJP\");\n              }\n              break;\n            }\n          }\n        }\n      }\n      if (foundPassiveAux && foundPassiveVP) {\n        break;\n      }\n    } // end for (Tree kid : kids)\n    if (DEBUG) {\n      System.err.println(\"hasPassiveProgressiveAuxiliary returns \" + (foundPassiveAux && foundPassiveVP));\n    }\n    return foundPassiveAux && foundPassiveVP;\n  }","id":56066,"modified_method":"private boolean hasPassiveProgressiveAuxiliary(Tree[] kids, Set<String> verbalSet) {\n    if (DEBUG) {\n      System.err.println(\"Checking for passive/progressive auxiliary\");\n    }\n    boolean foundPassiveVP = false;\n    boolean foundPassiveAux = false;\n    for (Tree kid : kids) {\n      if (DEBUG) {\n        System.err.println(\"  checking in \" + kid);\n      }\n      if (kid.isPreTerminal()) {\n        Label kidLabel = kid.label();\n        String tag = null;\n        if (kidLabel instanceof HasTag) {\n          tag = ((HasTag) kidLabel).tag();\n        }\n        if (tag == null) {\n          tag = kid.value();\n        }\n        Label wordLabel = kid.firstChild().label();\n        String word = null;\n        if (wordLabel instanceof HasWord) {\n          word = ((HasWord) wordLabel).word();\n        }\n        if (word == null) {\n          word = wordLabel.value();\n        }\n\n        if (DEBUG) {\n          System.err.println(\"Checking \" + kid.value() + \" head is \" + word + '/' + tag);\n        }\n        String lcWord = word.toLowerCase();\n        if (verbalTags.contains(tag) && verbalSet.contains(lcWord)) {\n          if (DEBUG) {\n            System.err.println(\"hasPassiveProgressiveAuxiliary found passive aux\");\n          }\n          foundPassiveAux = true;\n        }\n      } else if (kid.isPhrasal()) {\n        Label kidLabel = kid.label();\n        String cat = null;\n        if (kidLabel instanceof HasCategory) {\n          cat = ((HasCategory) kidLabel).category();\n        }\n        if (cat == null) {\n          cat = kid.value();\n        }\n        if ( ! cat.startsWith(\"VP\")) {\n          continue;\n        }\n        if (DEBUG) {\n          System.err.println(\"hasPassiveProgressiveAuxiliary found VP\");\n        }\n        Tree[] kidkids = kid.children();\n        boolean foundParticipleInVp = false;\n        for (Tree kidkid : kidkids) {\n          if (DEBUG) {\n            System.err.println(\"  hasPassiveProgressiveAuxiliary examining \" + kidkid);\n          }\n          if (kidkid.isPreTerminal()) {\n            Label kidkidLabel = kidkid.label();\n            String tag = null;\n            if (kidkidLabel instanceof HasTag) {\n              tag = ((HasTag) kidkidLabel).tag();\n            }\n            if (tag == null) {\n              tag = kidkid.value();\n            }\n            // we allow in VBD because of frequent tagging mistakes\n            if (\"VBN\".equals(tag) || \"VBG\".equals(tag) || \"VBD\".equals(tag)) {\n              foundPassiveVP = true;\n              if (DEBUG) {\n                System.err.println(\"hasPassiveAuxiliary found VBN/VBG/VBD VP\");\n              }\n              break;\n            } else if (\"CC\".equals(tag) && foundParticipleInVp) {\n              foundPassiveVP = true;\n              if (DEBUG) {\n                System.err.println(\"hasPassiveAuxiliary [coordination] found (VP (VP[VBN/VBG/VBD] CC\");\n              }\n              break;\n            }\n          } else if (kidkid.isPhrasal()) {\n            String catcat = null;\n            if (kidLabel instanceof HasCategory) {\n              catcat = ((HasCategory) kidLabel).category();\n            }\n            if (catcat == null) {\n              catcat = kid.value();\n            }\n            if (\"VP\".equals(catcat)) {\n              if (DEBUG) {\n                System.err.println(\"hasPassiveAuxiliary found (VP (VP)), recursing\");\n              }\n              foundParticipleInVp = vpContainsParticiple(kidkid);\n            } else if ((\"CONJP\".equals(catcat) || \"PRN\".equals(catcat)) && foundParticipleInVp) { // occasionally get PRN in CONJ-like structures\n              foundPassiveVP = true;\n              if (DEBUG) {\n                System.err.println(\"hasPassiveAuxiliary [coordination] found (VP (VP[VBN/VBG/VBD] CONJP\");\n              }\n              break;\n            }\n          }\n        }\n      }\n      if (foundPassiveAux && foundPassiveVP) {\n        break;\n      }\n    } // end for (Tree kid : kids)\n    if (DEBUG) {\n      System.err.println(\"hasPassiveProgressiveAuxiliary returns \" + (foundPassiveAux && foundPassiveVP));\n    }\n    return foundPassiveAux && foundPassiveVP;\n  }","commit_id":"1cda570d9095eea297eb9a5177c0e15aad35a08e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Returns true if this tree is a preterminal that is a verbal auxiliary.\n   *\n   * @param t A tree to examine for being an auxiliary.\n   * @return Whether it is a verbal auxiliary (be, do, have, get)\n   */\n  public boolean isVerbalAuxiliary(Tree t) {\n    return isVerbalAuxiliary(t, verbalAuxiliaries, true);\n  }","id":56067,"modified_method":"/**\n   * Reinserted so samples.GetSubcats compiles ... should rework if\n   * this is going to stay.\n   *\n   * @param t A tree to examine for being an auxiliary.\n   * @return Whether it is a verbal auxiliary (be, do, have, get)\n   */\n  public boolean isVerbalAuxiliary(Tree t) {\n    Tree[] trees = { t };\n    return hasVerbalAuxiliary(trees, verbalAuxiliaries);\n  }","commit_id":"1cda570d9095eea297eb9a5177c0e15aad35a08e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Determine which daughter of the current parse tree is the\n   * head.  It assumes that the daughters already have had their\n   * heads determined.  Uses special rule for VP heads\n   *\n   * @param t The parse tree to examine the daughters of.\n   *          This is assumed to never be a leaf\n   * @return The parse tree that is the head\n   */\n  @Override\n  protected Tree determineNonTrivialHead(Tree t, Tree parent) {\n    String motherCat = tlp.basicCategory(t.label().value());\n\n    if (DEBUG) {\n      System.err.println(\"At \" + motherCat + \", my parent is \" + parent);\n    }\n\n    // do VPs with auxiliary as special case\n    if ((motherCat.equals(\"VP\") || motherCat.equals(\"SQ\") || motherCat.equals(\"SINV\"))) {\n      Tree[] kids = t.children();\n      // try to find if there is an auxiliary verb\n\n      if (DEBUG) {\n        System.err.println(\"Semantic head finder: at VP\");\n        System.err.println(\"Class is \" + t.getClass().getName());\n        t.pennPrint(System.err);\n        //System.err.println(\"hasVerbalAuxiliary = \" + hasVerbalAuxiliary(kids, verbalAuxiliaries));\n      }\n\n      // looks for auxiliaries\n      if (hasVerbalAuxiliary(kids, verbalAuxiliaries, true) || hasPassiveProgressiveAuxiliary(kids)) {\n        // String[] how = new String[] {\"left\", \"VP\", \"ADJP\", \"NP\"};\n        // Including NP etc seems okay for copular sentences but is\n        // problematic for other auxiliaries, like 'he has an answer'\n        // But maybe doing ADJP is fine!\n        String[] how = { \"left\", \"VP\", \"ADJP\" };\n        Tree pti = traverseLocate(kids, how, false);\n        if (DEBUG) {\n          System.err.println(\"Determined head (case 1) for \" + t.value() + \" is: \" + pti);\n        }\n        if (pti != null) {\n          return pti;\n        // } else {\n          // System.err.println(\"------\");\n          // System.err.println(\"SemanticHeadFinder failed to reassign head for\");\n          // t.pennPrint(System.err);\n          // System.err.println(\"------\");\n        }\n      }\n\n      // looks for copular verbs\n      if (hasVerbalAuxiliary(kids, copulars, false) && ! isExistential(t, parent) && ! isWHQ(t, parent)) {\n        String[] how;\n        if (motherCat.equals(\"SQ\")) {\n          how = new String[]{\"right\", \"VP\", \"ADJP\", \"NP\", \"WHADJP\", \"WHNP\"};\n        } else {\n          how = new String[]{\"left\", \"VP\", \"ADJP\", \"NP\", \"WHADJP\", \"WHNP\"};\n        }\n        Tree pti = traverseLocate(kids, how, false);\n        // don't allow a temporal to become head\n        if (pti != null && pti.label() != null && pti.label().value().contains(\"-TMP\")) {\n          pti = null;\n        }\n        // In SQ, only allow an NP to become head if there is another one to the left (then it's probably predicative)\n        if (motherCat.equals(\"SQ\") && pti != null && pti.label() != null && pti.label().value().startsWith(\"NP\")) {\n            boolean foundAnotherNp = false;\n            for (Tree kid : kids) {\n              if (kid == pti) {\n                break;\n              } else if (kid.label() != null && kid.label().value().startsWith(\"NP\")) {\n                foundAnotherNp = true;\n                break;\n              }\n            }\n          if ( ! foundAnotherNp) {\n            pti = null;\n          }\n        }\n\n        if (DEBUG) {\n          System.err.println(\"Determined head (case 2) for \" + t.value() + \" is: \" + pti);\n        }\n        if (pti != null) {\n          return pti;\n        } else {\n          if (DEBUG) {\n            System.err.println(\"------\");\n            System.err.println(\"SemanticHeadFinder failed to reassign head for\");\n            t.pennPrint(System.err);\n            System.err.println(\"------\");\n          }\n        }\n      }\n    }\n\n    Tree hd = super.determineNonTrivialHead(t, parent);\n\n    // Heuristically repair punctuation heads\n    Tree[] hdChildren = hd.children();\n    if (hdChildren != null && hdChildren.length > 0 &&\n        hdChildren[0].isLeaf()) {\n      if (tlp.isPunctuationWord(hdChildren[0].label().value())) {\n         Tree[] tChildren = t.children();\n         if (DEBUG) {\n           System.err.printf(\"head is punct: %s\\n\", hdChildren[0].label());\n         }\n         for (int i = tChildren.length - 1; i >= 0; i--) {\n           if (!tlp.isPunctuationWord(tChildren[i].children()[0].label().value())) {\n             hd = tChildren[i];\n             if (DEBUG) {\n               System.err.printf(\"New head: %s %s\", hd.label(), hd.children()[0].label());\n             }\n             break;\n           }\n         }\n      }\n    }\n\n    if (DEBUG) {\n      System.err.println(\"Determined head (case 3) for \" + t.value() + \" is: \" + hd);\n    }\n    return hd;\n  }","id":56068,"modified_method":"/**\n   * Determine which daughter of the current parse tree is the\n   * head.  It assumes that the daughters already have had their\n   * heads determined.  Uses special rule for VP heads\n   *\n   * @param t The parse tree to examine the daughters of.\n   *          This is assumed to never be a leaf\n   * @return The parse tree that is the head\n   */\n  @Override\n  protected Tree determineNonTrivialHead(Tree t, Tree parent) {\n    String motherCat = tlp.basicCategory(t.label().value());\n\n    if (DEBUG) {\n      System.err.println(\"At \" + motherCat + \", my parent is \" + parent);\n    }\n\n    // do VPs with auxiliary as special case\n    if ((motherCat.equals(\"VP\") || motherCat.equals(\"SQ\") || motherCat.equals(\"SINV\"))) {\n      Tree[] kids = t.children();\n      // try to find if there is an auxiliary verb\n\n      if (DEBUG) {\n        System.err.println(\"Semantic head finder: at VP\");\n        System.err.println(\"Class is \" + t.getClass().getName());\n        t.pennPrint(System.err);\n        //System.err.println(\"hasVerbalAuxiliary = \" + hasVerbalAuxiliary(kids, verbalAuxiliaries));\n      }\n\n      // looks for auxiliaries\n      if (hasVerbalAuxiliary(kids, verbalAuxiliaries) || hasPassiveProgressiveAuxiliary(kids, passiveAuxiliaries)) {\n        // String[] how = new String[] {\"left\", \"VP\", \"ADJP\", \"NP\"};\n        // Including NP etc seems okay for copular sentences but is\n        // problematic for other auxiliaries, like 'he has an answer'\n        // But maybe doing ADJP is fine!\n        String[] how = { \"left\", \"VP\", \"ADJP\" };\n        Tree pti = traverseLocate(kids, how, false);\n        if (DEBUG) {\n          System.err.println(\"Determined head (case 1) for \" + t.value() + \" is: \" + pti);\n        }\n        if (pti != null) {\n          return pti;\n        } else {\n          // System.err.println(\"------\");\n          // System.err.println(\"SemanticHeadFinder failed to reassign head for\");\n          // t.pennPrint(System.err);\n          // System.err.println(\"------\");\n        }\n      }\n\n      // looks for copular verbs\n      if (hasVerbalAuxiliary(kids, copulars) && ! isExistential(t, parent) && ! isWHQ(t, parent)) {\n        String[] how;\n        if (motherCat.equals(\"SQ\")) {\n          how = new String[]{\"right\", \"VP\", \"ADJP\", \"NP\", \"WHADJP\", \"WHNP\"};\n        } else {\n          how = new String[]{\"left\", \"VP\", \"ADJP\", \"NP\", \"WHADJP\", \"WHNP\"};\n        }\n        Tree pti = traverseLocate(kids, how, false);\n        // don't allow a temporal to become head\n        if (pti != null && pti.label() != null && pti.label().value().contains(\"-TMP\")) {\n          pti = null;\n        }\n        // In SQ, only allow an NP to become head if there is another one to the left (then it's probably predicative)\n        if (motherCat.equals(\"SQ\") && pti != null && pti.label() != null && pti.label().value().startsWith(\"NP\")) {\n            boolean foundAnotherNp = false;\n            for (Tree kid : kids) {\n              if (kid == pti) {\n                break;\n              } else if (kid.label() != null && kid.label().value().startsWith(\"NP\")) {\n                foundAnotherNp = true;\n                break;\n              }\n            }\n          if ( ! foundAnotherNp) {\n            pti = null;\n          }\n        }\n\n        if (DEBUG) {\n          System.err.println(\"Determined head (case 2) for \" + t.value() + \" is: \" + pti);\n        }\n        if (pti != null) {\n          return pti;\n        } else {\n          if (DEBUG) {\n            System.err.println(\"------\");\n            System.err.println(\"SemanticHeadFinder failed to reassign head for\");\n            t.pennPrint(System.err);\n            System.err.println(\"------\");\n          }\n        }\n      }\n    }\n\n    Tree hd = super.determineNonTrivialHead(t, parent);\n\n    // Heuristically repair punctuation heads\n    Tree[] hdChildren = hd.children();\n    if (hdChildren != null && hdChildren.length > 0 &&\n        hdChildren[0].isLeaf()) {\n      if (tlp.isPunctuationWord(hdChildren[0].label().value())) {\n         Tree[] tChildren = t.children();\n         if (DEBUG) {\n           System.err.printf(\"head is punct: %s\\n\", hdChildren[0].label());\n         }\n         for (int i = tChildren.length - 1; i >= 0; i--) {\n           if (!tlp.isPunctuationWord(tChildren[i].children()[0].label().value())) {\n             hd = tChildren[i];\n             if (DEBUG) {\n               System.err.printf(\"New head: %s %s\", hd.label(), hd.children()[0].label());\n             }\n             break;\n           }\n         }\n      }\n    }\n\n    if (DEBUG) {\n      System.err.println(\"Determined head (case 3) for \" + t.value() + \" is: \" + hd);\n    }\n    return hd;\n  }","commit_id":"1cda570d9095eea297eb9a5177c0e15aad35a08e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/** This looks to see whether any of the children is a preterminal headed by a word\n   *  which is within the set verbalSet (which in practice is either\n   *  auxiliary or copula verbs).  It only returns true if it's a preterminal head, since\n   *  you don't want to pick things up in phrasal daughters.  That is an error.\n   *\n   * @param kids The child trees\n   * @param verbalSet The set of words\n   * @param allowTagOnlyMatch If true, it's sufficient to match on an unambiguous auxiliary tag.\n   *                          Make true iff verbalSet is \"all auxiliaries\"\n   * @return Returns true if one of the child trees is a preterminal verb headed\n   *      by a word in verbalSet\n   */\n  private boolean hasVerbalAuxiliary(Tree[] kids, Set<String> verbalSet, boolean allowTagOnlyMatch) {\n    if (DEBUG) {\n      System.err.println(\"Checking for verbal auxiliary\");\n    }\n    for (Tree kid : kids) {\n      if (DEBUG) {\n        System.err.println(\"  checking in \" + kid);\n      }\n      if (isVerbalAuxiliary(kid, verbalSet, allowTagOnlyMatch)) {\n        return true;\n      }\n    }\n    if (DEBUG) {\n      System.err.println(\"hasVerbalAuxiliary returns false\");\n    }\n    return false;\n  }","id":56069,"modified_method":"/** This looks to see whether any of the children is a preterminal headed by a word\n   *  which is within the set verbalSet (which in practice is either\n   *  auxiliary or copula verbs).  It only returns true if it's a preterminal head, since\n   *  you don't want to pick things up in phrasal daughters.  That is an error.\n   *\n   * @param kids The child trees\n   * @param verbalSet The set of words\n   * @return Returns true if one of the child trees is a preterminal verb headed\n   *      by a word in verbalSet\n   */\n  private boolean hasVerbalAuxiliary(Tree[] kids, Set<String> verbalSet) {\n    if (DEBUG) {\n      System.err.println(\"Checking for verbal auxiliary\");\n    }\n    for (Tree kid : kids) {\n      if (DEBUG) {\n        System.err.println(\"  checking in \" + kid);\n      }\n      if (kid.isPreTerminal()) {\n        Label kidLabel = kid.label();\n        String tag = null;\n        if (kidLabel instanceof HasTag) {\n          tag = ((HasTag) kidLabel).tag();\n        }\n        if (tag == null) {\n          tag = kid.value();\n        }\n        Label wordLabel = kid.firstChild().label();\n        String word = null;\n        if (wordLabel instanceof HasWord) {\n          word = ((HasWord) wordLabel).word();\n        }\n        if (word == null) {\n          word = wordLabel.value();\n        }\n\n        if (DEBUG) {\n          System.err.println(\"Checking \" + kid.value() + \" head is \" + word + '/' + tag);\n        }\n        String lcWord = word.toLowerCase();\n        if (verbalTags.contains(tag) && verbalSet.contains(lcWord)) {\n          if (DEBUG) {\n            System.err.println(\"hasVerbalAuxiliary returns true\");\n          }\n          return true;\n        }\n      }\n    }\n    if (DEBUG) {\n      System.err.println(\"hasVerbalAuxiliary returns false\");\n    }\n    return false;\n  }","commit_id":"1cda570d9095eea297eb9a5177c0e15aad35a08e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public Set<String> getTaskNames() {\n        return tasks;\n    }","id":56070,"modified_method":"public SortedSet<String> getTaskNames() {\n        return tasks;\n    }","commit_id":"0008d23e1a856a47e756116e52b9a2dfd080a624","url":"https://github.com/gradle/gradle"},{"original_method":"public BasicGradleTaskSelector setTaskNames(Set<String> tasks) {\n        this.tasks = tasks;\n        return this;\n    }","id":56071,"modified_method":"public BasicGradleTaskSelector setTaskNames(SortedSet<String> tasks) {\n        this.tasks = tasks;\n        return this;\n    }","commit_id":"0008d23e1a856a47e756116e52b9a2dfd080a624","url":"https://github.com/gradle/gradle"},{"original_method":"private List<BasicGradleTaskSelector> buildRecursively(GradleProject project, List<GradleTask> tasks) {\n        Multimap<String, String> aggregatedTasks = ArrayListMultimap.create();\n        for (GradleProject childProject : project.getChildren()) {\n            List<BasicGradleTaskSelector> childSelectors = buildRecursively(childProject, tasks);\n            for (BasicGradleTaskSelector childSelector : childSelectors) {\n                aggregatedTasks.putAll(childSelector.getName(), childSelector.getTaskNames());\n            }\n        }\n        for (GradleTask task : project.getTasks()) {\n            aggregatedTasks.put(task.getName(), task.getPath());\n            tasks.add(task);\n        }\n        List<BasicGradleTaskSelector> selectors = Lists.newArrayList();\n        for (String selectorName : aggregatedTasks.keySet()) {\n            selectors.add(new BasicGradleTaskSelector().\n                    setName(selectorName).\n                    setTaskNames(Sets.newHashSet(aggregatedTasks.get(selectorName))).\n                    setDescription(project.getParent() != null\n                            ? String.format(\"%s:%s task selector\", project.getPath(), selectorName)\n                            : String.format(\"%s task selector\", selectorName)).\n                    setDisplayName(String.format(\"%s in %s and subprojects.\", selectorName, project.getName())));\n        }\n        return selectors;\n    }","id":56072,"modified_method":"private List<BasicGradleTaskSelector> buildRecursively(GradleProject project, List<GradleTask> tasks) {\n        Multimap<String, String> aggregatedTasks = ArrayListMultimap.create();\n        for (GradleProject childProject : project.getChildren()) {\n            List<BasicGradleTaskSelector> childSelectors = buildRecursively(childProject, tasks);\n            for (BasicGradleTaskSelector childSelector : childSelectors) {\n                aggregatedTasks.putAll(childSelector.getName(), childSelector.getTaskNames());\n            }\n        }\n        for (GradleTask task : project.getTasks()) {\n            aggregatedTasks.put(task.getName(), task.getPath());\n            tasks.add(task);\n        }\n        List<BasicGradleTaskSelector> selectors = Lists.newArrayList();\n        for (String selectorName : aggregatedTasks.keySet()) {\n            SortedSet<String> selectorTasks = Sets.newTreeSet(new TaskNameComparator());\n            selectorTasks.addAll(aggregatedTasks.get(selectorName));\n            selectors.add(new BasicGradleTaskSelector().\n                    setName(selectorName).\n                    setTaskNames(selectorTasks).\n                    setDescription(project.getParent() != null\n                            ? String.format(\"%s:%s task selector\", project.getPath(), selectorName)\n                            : String.format(\"%s task selector\", selectorName)).\n                    setDisplayName(String.format(\"%s in %s and subprojects.\", selectorName, project.getName())));\n        }\n        return selectors;\n    }","commit_id":"0008d23e1a856a47e756116e52b9a2dfd080a624","url":"https://github.com/gradle/gradle"},{"original_method":"public Set<String> getTaskNames() {\n        return Collections.singleton(getPath());\n    }","id":56073,"modified_method":"public SortedSet<String> getTaskNames() {\n        // TODO use comparator\n        SortedSet result = Sets.newTreeSet(new TaskNameComparator());\n        result.add(getPath());\n        return result;\n    }","commit_id":"0008d23e1a856a47e756116e52b9a2dfd080a624","url":"https://github.com/gradle/gradle"},{"original_method":"/**\n\t * TODO Document processContextConfiguration() implementation.\n\t */\n\tpublic void processContextConfiguration(ContextConfigurationAttributes configAttributes) {\n\t\tfor (SmartContextLoader loader : candidates) {\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(String.format(\"Delegating to loader [%s] to process context configuration [%s].\",\n\t\t\t\t\tloader.getClass().getName(), configAttributes));\n\t\t\t}\n\n\t\t\t// TODO Implement processContextConfiguration().\n\t\t\t//\n\t\t\t// If the original locations and classes are not empty, there's no\n\t\t\t// need to bother with default generation checks; just let each\n\t\t\t// loader process the configuration.\n\t\t\t//\n\t\t\t// Otherwise, if a loader claims to generate defaults, let it\n\t\t\t// process the configuration, and then verify that it actually did\n\t\t\t// generate defaults.\n\t\t\t//\n\t\t\t// If it generated defaults, there's no need to delegate to\n\t\t\t// additional candidates. So:\n\t\t\t// 1) stop iterating\n\t\t\t// 2) mark the current loader as the winning candidate (?)\n\t\t\t// 3) log an info message.\n\n\t\t\tloader.processContextConfiguration(configAttributes);\n\t\t}\n\t}","id":56074,"modified_method":"/**\n\t * TODO Document processContextConfiguration() implementation.\n\t */\n\tpublic void processContextConfiguration(ContextConfigurationAttributes configAttributes) {\n\n\t\tfinal String[] originalLocations = configAttributes.getLocations();\n\t\tfinal Class<?>[] originalClasses = configAttributes.getClasses();\n\t\tfinal boolean emptyResources = ObjectUtils.isEmpty(originalLocations) && ObjectUtils.isEmpty(originalClasses);\n\n\t\tfor (SmartContextLoader loader : candidates) {\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(String.format(\"Delegating to loader [%s] to process context configuration [%s].\",\n\t\t\t\t\tloader.getClass().getName(), configAttributes));\n\t\t\t}\n\n\t\t\t// TODO Implement processContextConfiguration().\n\t\t\t//\n\t\t\t// If the original locations and classes are not empty, there's no\n\t\t\t// need to bother with default generation checks; just let each\n\t\t\t// loader process the configuration.\n\t\t\tif (!emptyResources) {\n\t\t\t\tloader.processContextConfiguration(configAttributes);\n\t\t\t}\n\t\t\t// Otherwise, if a loader claims to generate defaults, let it\n\t\t\t// process the configuration, and then verify that it actually did\n\t\t\t// generate defaults.\n\t\t\t//\n\t\t\t// If it generated defaults, there's no need to delegate to\n\t\t\t// additional candidates. So:\n\t\t\t// 1) stop iterating\n\t\t\t// 2) mark the current loader as the winning candidate (?)\n\t\t\t// 3) log an info message.\n\t\t\telse {\n\t\t\t\tif (loader.generatesDefaults()) {\n\t\t\t\t\tloader.processContextConfiguration(configAttributes);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If any loader claims to generate defaults but none actually did,\n\t\t// throw an exception.\n\t}","commit_id":"4cbe2ae00aaec2ca4074b06f389f5e50ca235da3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * TODO Document loadContext(MergedContextConfiguration) implementation.\n\t */\n\tpublic ApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {\n\n\t\tfor (SmartContextLoader loader : candidates) {\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(String.format(\"Delegating to loader [%s] to load context from [%s].\",\n\t\t\t\t\tloader.getClass().getName(), mergedConfig));\n\t\t\t}\n\n\t\t\t// TODO Implement loadContext(MergedContextConfiguration).\n\t\t\t//\n\t\t\t// Ask each loader if it _can_ load a context from the mergedConfig.\n\t\t\t// If a loader can, let it; otherwise, continue iterating over all\n\t\t\t// remaining candidates.\n\t\t\t//\n\t\t\t// If no candidate can load a context from the mergedConfig, throw\n\t\t\t// an exception.\n\t\t}\n\n\t\t// TODO Implement delegation logic.\n\t\t//\n\t\t// Proof of concept: ensuring that hard-coded delegation to\n\t\t// GenericXmlContextLoader works \"as is\".\n\t\treturn candidates.get(0).loadContext(mergedConfig);\n\t}","id":56075,"modified_method":"/**\n\t * TODO Document loadContext(MergedContextConfiguration) implementation.\n\t */\n\tpublic ApplicationContext loadContext(MergedContextConfiguration mergedConfig) throws Exception {\n\n\t\tfor (SmartContextLoader loader : candidates) {\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(String.format(\"Delegating to loader [%s] to load context from [%s].\",\n\t\t\t\t\tloader.getClass().getName(), mergedConfig));\n\t\t\t}\n\n\t\t\t// Ask each loader if it can load a context from the mergedConfig.\n\t\t\t// If a loader can, let it; otherwise, continue iterating over all\n\t\t\t// remaining candidates.\n\t\t\tif (loader.supports(mergedConfig)) {\n\t\t\t\treturn loader.loadContext(mergedConfig);\n\t\t\t}\n\t\t}\n\n\t\tthrow new IllegalStateException(String.format(\"None of the candidate SmartContextLoaders [%s] \"\n\t\t\t\t+ \"was able to load an ApplicationContext from [%s].\", candidates, mergedConfig));\n\t}","commit_id":"4cbe2ae00aaec2ca4074b06f389f5e50ca235da3","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the <code>inheritLocations<\/code> flag that was declared via\n\t * {@link ContextConfiguration @ContextConfiguration}.\n\t * @return the <code>inheritLocations<\/code> flag\n\t * @see ContextConfiguration#inheritLocations\n\t */\n\tpublic boolean isInheritLocations() {\n\t\treturn this.inheritLocations;\n\t}","id":56076,"modified_method":"/**\n\t * Get the <code>inheritLocations<\/code> flag that was declared via\n\t * {@link ContextConfiguration @ContextConfiguration}.\n\t * @return the <code>inheritLocations<\/code> flag\n\t * @see ContextConfiguration#inheritLocations\n\t */\n\tpublic boolean isInheritLocations() {\n\t\treturn inheritLocations;\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the configuration classes that were declared via\n\t * {@link ContextConfiguration @ContextConfiguration}.\n\t * <p>Note: this is a mutable property. The returned value may therefore\n\t * represent a <em>processed<\/em> value that does not match the original value \n\t * declared via {@link ContextConfiguration @ContextConfiguration}.\n\t * @return the configuration classes; potentially <code>null<\/code> or <em>empty<\/em>\n\t * @see ContextConfiguration#classes\n\t * @see #setClasses()\n\t */\n\tpublic Class<?>[] getClasses() {\n\t\treturn this.classes;\n\t}","id":56077,"modified_method":"/**\n\t * Get the configuration classes that were declared via\n\t * {@link ContextConfiguration @ContextConfiguration}.\n\t * <p>Note: this is a mutable property. The returned value may therefore\n\t * represent a <em>processed<\/em> value that does not match the original value \n\t * declared via {@link ContextConfiguration @ContextConfiguration}.\n\t * @return the configuration classes; potentially <code>null<\/code> or <em>empty<\/em>\n\t * @see ContextConfiguration#classes\n\t * @see #setClasses()\n\t */\n\tpublic Class<?>[] getClasses() {\n\t\treturn classes;\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the {@link Class class} that declared the\n\t * {@link ContextConfiguration @ContextConfiguration} annotation.\n\t * @return the declaring class; never <code>null<\/code>\n\t */\n\tpublic Class<?> getDeclaringClass() {\n\t\treturn this.declaringClass;\n\t}","id":56078,"modified_method":"/**\n\t * Get the {@link Class class} that declared the\n\t * {@link ContextConfiguration @ContextConfiguration} annotation.\n\t * @return the declaring class; never <code>null<\/code>\n\t */\n\tpublic Class<?> getDeclaringClass() {\n\t\treturn declaringClass;\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Construct a new {@link ContextConfigurationAttributes} instance for the\n\t * {@link Class test class} that declared the\n\t * {@link ContextConfiguration @ContextConfiguration} annotation and its\n\t * corresponding attributes.\n\t * \n\t * @param declaringClass the test class that declared {@code @ContextConfiguration}\n\t * @param locations the resource locations declared via {@code @ContextConfiguration}\n\t * @param classes the configuration classes declared via {@code @ContextConfiguration}\n\t * @param inheritLocations the <code>inheritLocations<\/code> flag declared via {@code @ContextConfiguration}\n\t * @param contextLoaderClass the {@code ContextLoader} class declared via {@code @ContextConfiguration}\n\t */\n\tpublic ContextConfigurationAttributes(Class<?> declaringClass, String[] locations, Class<?>[] classes,\n\t\t\tboolean inheritLocations, Class<? extends ContextLoader> contextLoaderClass) {\n\t\tthis.declaringClass = declaringClass;\n\t\tthis.locations = locations;\n\t\tthis.classes = classes;\n\t\tthis.inheritLocations = inheritLocations;\n\t\tthis.contextLoaderClass = contextLoaderClass;\n\t}","id":56079,"modified_method":"/**\n\t * Construct a new {@link ContextConfigurationAttributes} instance for the\n\t * {@link Class test class} that declared the\n\t * {@link ContextConfiguration @ContextConfiguration} annotation and its\n\t * corresponding attributes.\n\t * \n\t * @param declaringClass the test class that declared {@code @ContextConfiguration}\n\t * @param locations the resource locations declared via {@code @ContextConfiguration}\n\t * @param classes the configuration classes declared via {@code @ContextConfiguration}\n\t * @param inheritLocations the <code>inheritLocations<\/code> flag declared via {@code @ContextConfiguration}\n\t * @param contextLoaderClass the {@code ContextLoader} class declared via {@code @ContextConfiguration}\n\t */\n\tpublic ContextConfigurationAttributes(Class<?> declaringClass, String[] locations, Class<?>[] classes,\n\t\t\tboolean inheritLocations, Class<? extends ContextLoader> contextLoaderClass) {\n\n\t\tAssert.notNull(declaringClass, \"declaringClass must not be null\");\n\t\tAssert.notNull(contextLoaderClass, \"contextLoaderClass must not be null\");\n\n\t\tthis.declaringClass = declaringClass;\n\t\tthis.locations = locations;\n\t\tthis.classes = classes;\n\t\tthis.inheritLocations = inheritLocations;\n\t\tthis.contextLoaderClass = contextLoaderClass;\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Provide a String representation of the context configuration attributes\n\t * and declaring class.\n\t */\n\t@Override\n\tpublic String toString() {\n\t\treturn new ToStringCreator(this)//\n\t\t.append(\"declaringClass\", this.declaringClass)//\n\t\t.append(\"locations\", ObjectUtils.nullSafeToString(this.locations))//\n\t\t.append(\"classes\", ObjectUtils.nullSafeToString(this.classes))//\n\t\t.append(\"inheritLocations\", this.inheritLocations)//\n\t\t.append(\"contextLoaderClass\", this.contextLoaderClass)//\n\t\t.toString();\n\t}","id":56080,"modified_method":"/**\n\t * Provide a String representation of the context configuration attributes\n\t * and declaring class.\n\t */\n\t@Override\n\tpublic String toString() {\n\t\treturn new ToStringCreator(this)//\n\t\t.append(\"declaringClass\", declaringClass.getName())//\n\t\t.append(\"locations\", ObjectUtils.nullSafeToString(locations))//\n\t\t.append(\"classes\", ObjectUtils.nullSafeToString(classes))//\n\t\t.append(\"inheritLocations\", inheritLocations)//\n\t\t.append(\"contextLoaderClass\", contextLoaderClass.getName())//\n\t\t.toString();\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the <code>ContextLoader<\/code> class that was declared via\n\t * {@link ContextConfiguration @ContextConfiguration}.\n\t * @return the <code>ContextLoader<\/code> class\n\t * @see ContextConfiguration#loader\n\t */\n\tpublic Class<? extends ContextLoader> getContextLoaderClass() {\n\t\treturn this.contextLoaderClass;\n\t}","id":56081,"modified_method":"/**\n\t * Get the <code>ContextLoader<\/code> class that was declared via\n\t * {@link ContextConfiguration @ContextConfiguration}.\n\t * @return the <code>ContextLoader<\/code> class\n\t * @see ContextConfiguration#loader\n\t */\n\tpublic Class<? extends ContextLoader> getContextLoaderClass() {\n\t\treturn contextLoaderClass;\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the resource locations that were declared via\n\t * {@link ContextConfiguration @ContextConfiguration}.\n\t * <p>Note: this is a mutable property. The returned value may therefore\n\t * represent a <em>processed<\/em> value that does not match the original value \n\t * declared via {@link ContextConfiguration @ContextConfiguration}.\n\t * @return the resource locations; potentially <code>null<\/code> or <em>empty<\/em>\n\t * @see ContextConfiguration#value\n\t * @see ContextConfiguration#locations\n\t * @see #setLocations()\n\t */\n\tpublic String[] getLocations() {\n\t\treturn this.locations;\n\t}","id":56082,"modified_method":"/**\n\t * Get the resource locations that were declared via\n\t * {@link ContextConfiguration @ContextConfiguration}.\n\t * <p>Note: this is a mutable property. The returned value may therefore\n\t * represent a <em>processed<\/em> value that does not match the original value \n\t * declared via {@link ContextConfiguration @ContextConfiguration}.\n\t * @return the resource locations; potentially <code>null<\/code> or <em>empty<\/em>\n\t * @see ContextConfiguration#value\n\t * @see ContextConfiguration#locations\n\t * @see #setLocations()\n\t */\n\tpublic String[] getLocations() {\n\t\treturn locations;\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * TODO Document processContextConfiguration() implementation.\n\t */\n\tpublic void processContextConfiguration(ContextConfigurationAttributes configAttributes) {\n\n\t\tfinal boolean originallyHadResources = configAttributes.hasResources();\n\n\t\tfor (SmartContextLoader loader : candidates) {\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(String.format(\"Potentially delegating to %s to process context configuration [%s].\",\n\t\t\t\t\tloader.getClass().getName(), configAttributes));\n\t\t\t}\n\n\t\t\t// If the original locations and classes were not empty, there's no\n\t\t\t// need to bother with default generation checks; just let each\n\t\t\t// loader process the configuration.\n\t\t\tif (originallyHadResources) {\n\t\t\t\tloader.processContextConfiguration(configAttributes);\n\t\t\t}\n\t\t\t// Otherwise, if the loader claims to generate defaults, let it\n\t\t\t// process the configuration.\n\t\t\telse if (loader.generatesDefaults()) {\n\t\t\t\tloader.processContextConfiguration(configAttributes);\n\t\t\t\tif (configAttributes.hasResources() && logger.isInfoEnabled()) {\n\t\t\t\t\tlogger.info(String.format(\"SmartContextLoader candidate %s \"\n\t\t\t\t\t\t\t+ \"generated defaults for context configuration [%s].\", loader, configAttributes));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If any loader claims to generate defaults but none actually did,\n\t\t// throw an exception.\n\t\tif (generatesDefaults() && !originallyHadResources && !configAttributes.hasResources()) {\n\t\t\tthrow new IllegalStateException(String.format(\"None of the SmartContextLoader candidates %s \"\n\t\t\t\t\t+ \"was able to generate defaults for context configuration [%s].\", candidates, configAttributes));\n\t\t}\n\t}","id":56083,"modified_method":"/**\n\t * TODO Document processContextConfiguration() implementation.\n\t */\n\tpublic void processContextConfiguration(ContextConfigurationAttributes configAttributes) {\n\n\t\tfinal boolean originallyHadResources = configAttributes.hasResources();\n\n\t\t// If the original locations and classes were not empty, there's no\n\t\t// need to bother with default generation checks; just let each\n\t\t// loader process the configuration.\n\t\tif (originallyHadResources) {\n\t\t\tfor (SmartContextLoader loader : candidates) {\n\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\tlogger.debug(String.format(\"Delegating to %s to process context configuration [%s].\",\n\t\t\t\t\t\tloader.getClass().getName(), configAttributes));\n\t\t\t\t}\n\t\t\t\tloader.processContextConfiguration(configAttributes);\n\t\t\t}\n\t\t}\n\t\telse if (generatesDefaults()) {\n\t\t\tfor (SmartContextLoader loader : candidates) {\n\t\t\t\tboolean defaultResourcesAlreadyGenerated = configAttributes.hasResources();\n\t\t\t\t// If defaults haven't already been generated and the loader\n\t\t\t\t// claims to generate defaults, let it process the\n\t\t\t\t// configuration.\n\t\t\t\tif (!defaultResourcesAlreadyGenerated && loader.generatesDefaults()) {\n\t\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\t\tlogger.debug(String.format(\n\t\t\t\t\t\t\t\"Delegating to %s to generate defaults for context configuration [%s].\",\n\t\t\t\t\t\t\tloader.getClass().getName(), configAttributes));\n\t\t\t\t\t}\n\n\t\t\t\t\tloader.processContextConfiguration(configAttributes);\n\n\t\t\t\t\tif (configAttributes.hasResources()) {\n\t\t\t\t\t\tif (logger.isInfoEnabled()) {\n\t\t\t\t\t\t\tlogger.info(String.format(\"SmartContextLoader candidate %s \"\n\t\t\t\t\t\t\t\t\t+ \"generated defaults for context configuration [%s].\", loader, configAttributes));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If any loader claims to generate defaults but none actually did,\n\t\t\t// throw an exception.\n\t\t\tif (!configAttributes.hasResources()) {\n\t\t\t\tthrow new IllegalStateException(\n\t\t\t\t\tString.format(\"None of the SmartContextLoader candidates %s \"\n\t\t\t\t\t\t\t+ \"was able to generate defaults for context configuration [%s].\", candidates,\n\t\t\t\t\t\tconfigAttributes));\n\t\t\t}\n\t\t}\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void processContextConfiguration() {\n\t\t// TODO test processContextConfiguration().\n\t}","id":56084,"modified_method":"@Test\n\tpublic void processContextConfigurationWithLocation() {\n\t\tString[] locations = new String[] { \"classpath:/foo.xml\" };\n\t\tContextConfigurationAttributes configAttributes = new ContextConfigurationAttributes(getClass(), locations,\n\t\t\tEMPTY_CLASS_ARRAY, true, ContextLoader.class);\n\t\tloader.processContextConfiguration(configAttributes);\n\t\tassertArrayEquals(locations, configAttributes.getLocations());\n\t\tassertEmpty(configAttributes.getClasses());\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Test\n\tpublic void loadContext() {\n\t\t// TODO test loadContext().\n\t}","id":56085,"modified_method":"@Test\n\tpublic void loadContextWithXmlConfig() throws Exception {\n\t\tMergedContextConfiguration mergedConfig = new MergedContextConfiguration(\n\t\t\tXmlTestCase.class,\n\t\t\tnew String[] { \"classpath:/org/springframework/test/context/support/DelegatingSmartContextLoaderTests$XmlTestCase-context.xml\" },\n\t\t\tEMPTY_CLASS_ARRAY, EMPTY_STRING_ARRAY, loader);\n\t\tassertApplicationContextLoadsAndContainsFooString(mergedConfig);\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the merged configuration classes for the\n\t * {@link #getTestClass() test class}.\n\t */\n\tpublic Class<?>[] getClasses() {\n\t\treturn this.classes;\n\t}","id":56086,"modified_method":"/**\n\t * Get the merged configuration classes for the\n\t * {@link #getTestClass() test class}.\n\t */\n\tpublic Class<?>[] getClasses() {\n\t\treturn classes;\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the merged active bean definition profiles for the\n\t * {@link #getTestClass() test class}.\n\t */\n\tpublic String[] getActiveProfiles() {\n\t\treturn this.activeProfiles;\n\t}","id":56087,"modified_method":"/**\n\t * Get the merged active bean definition profiles for the\n\t * {@link #getTestClass() test class}.\n\t */\n\tpublic String[] getActiveProfiles() {\n\t\treturn activeProfiles;\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the resolved {@link ContextLoader} for the\n\t * {@link #getTestClass() test class}.\n\t */\n\tpublic ContextLoader getContextLoader() {\n\t\treturn this.contextLoader;\n\t}","id":56088,"modified_method":"/**\n\t * Get the resolved {@link ContextLoader} for the\n\t * {@link #getTestClass() test class}.\n\t */\n\tpublic ContextLoader getContextLoader() {\n\t\treturn contextLoader;\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the merged resource locations for the\n\t * {@link #getTestClass() test class}.\n\t */\n\tpublic String[] getLocations() {\n\t\treturn this.locations;\n\t}","id":56089,"modified_method":"/**\n\t * Get the merged resource locations for the\n\t * {@link #getTestClass() test class}.\n\t */\n\tpublic String[] getLocations() {\n\t\treturn locations;\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Provide a String representation of the test class, merged context\n\t * configuration, and context key.\n\t */\n\t@Override\n\tpublic String toString() {\n\t\treturn new ToStringCreator(this)//\n\t\t.append(\"testClass\", this.testClass)//\n\t\t.append(\"locations\", ObjectUtils.nullSafeToString(this.locations))//\n\t\t.append(\"classes\", ObjectUtils.nullSafeToString(this.classes))//\n\t\t.append(\"activeProfiles\", ObjectUtils.nullSafeToString(this.activeProfiles))//\n\t\t.append(\"contextLoader\", nullSafeToString(contextLoader))//\n\t\t.append(\"contextKey\", this.contextKey)//\n\t\t.toString();\n\t}","id":56090,"modified_method":"/**\n\t * Provide a String representation of the test class, merged context\n\t * configuration, and context key.\n\t */\n\t@Override\n\tpublic String toString() {\n\t\treturn new ToStringCreator(this)//\n\t\t.append(\"testClass\", testClass)//\n\t\t.append(\"locations\", ObjectUtils.nullSafeToString(locations))//\n\t\t.append(\"classes\", ObjectUtils.nullSafeToString(classes))//\n\t\t.append(\"activeProfiles\", ObjectUtils.nullSafeToString(activeProfiles))//\n\t\t.append(\"contextLoader\", nullSafeToString(contextLoader))//\n\t\t.append(\"contextKey\", contextKey)//\n\t\t.toString();\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the {@link Class test class} associated with this\n\t * <code>MergedContextConfiguration<\/code>.\n\t */\n\tpublic Class<?> getTestClass() {\n\t\treturn this.testClass;\n\t}","id":56091,"modified_method":"/**\n\t * Get the {@link Class test class} associated with this\n\t * <code>MergedContextConfiguration<\/code>.\n\t */\n\tpublic Class<?> getTestClass() {\n\t\treturn testClass;\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Get the unique context key for all properties of this\n\t * <code>MergedContextConfiguration<\/code> excluding the\n\t * {@link #getTestClass() test class}. \n\t * <p>Intended to be used for caching an \n\t * {@link org.springframework.context.ApplicationContext ApplicationContext}\n\t * that was loaded using properties of this <code>MergedContextConfiguration<\/code>.\n\t */\n\tpublic String getContextKey() {\n\t\treturn this.contextKey;\n\t}","id":56092,"modified_method":"/**\n\t * Get the unique context key for all properties of this\n\t * <code>MergedContextConfiguration<\/code> excluding the\n\t * {@link #getTestClass() test class}. \n\t * <p>Intended to be used for caching an \n\t * {@link org.springframework.context.ApplicationContext ApplicationContext}\n\t * that was loaded using properties of this <code>MergedContextConfiguration<\/code>.\n\t */\n\tpublic String getContextKey() {\n\t\treturn contextKey;\n\t}","commit_id":"f874ed9790d1eb1621c097fbd9954ec1013f4290","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\r\n    public boolean replaceEvent(GameEvent event, Ability source, Game game) {\r\n        Permanent permanent = ((ZoneChangeEvent) event).getTarget();\r\n        if (permanent != null) {\r\n            return permanent.moveToZone(Zone.LIBRARY, source.getSourceId(), game, false);\r\n        }\r\n        return false;\r\n    }","id":56093,"modified_method":"@Override\r\n    public boolean replaceEvent(GameEvent event, Ability source, Game game) {\r\n        Permanent permanent = ((ZoneChangeEvent) event).getTarget();\r\n        if (permanent != null) {\r\n            if(permanent.moveToZone(Zone.LIBRARY, source.getSourceId(), game, false)) {\r\n                game.informPlayers(new StringBuilder(permanent.getName()).append(\" was put on the bottom of its owner's library\").toString());\r\n                return true;\r\n            }\r\n            \r\n        }\r\n        return false;\r\n    }","commit_id":"da65404436d4d9fe2c115a59e296d95ae95302b1","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    protected void init(UUID choosingPlayerId, GameOptions gameOptions) {\n        super.init(choosingPlayerId, gameOptions);\n        \n        //Move commender to commande zone\n        for (UUID playerId: state.getPlayerList(startingPlayerId)) {\n            Player player = getPlayer(playerId);\n            if(player != null){\n                if(player.getSideboard().size() > 0){\n                    Card commander =  getCard((UUID)player.getSideboard().toArray()[0]);\n                    if(commander != null){\n                        commander.moveToZone(Zone.COMMAND, null, this, true);\n                        \n                    }\n                }\n            }\n            \n        }\n        \n        state.getTurnMods().add(new TurnMod(startingPlayerId, PhaseStep.DRAW));\n    }","id":56094,"modified_method":"@Override\n    protected void init(UUID choosingPlayerId, GameOptions gameOptions) {\n        super.init(choosingPlayerId, gameOptions);\n        Ability ability = new SimpleStaticAbility(Zone.COMMAND, new EmptyEffect(\"Commander effects\"));\n        //Move commender to commande zone\n        for (UUID playerId: state.getPlayerList(startingPlayerId)) {\n            Player player = getPlayer(playerId);\n            if(player != null){\n                if(player.getSideboard().size() > 0){\n                    Card commander =  getCard((UUID)player.getSideboard().toArray()[0]);\n                    if(commander != null){\n                        commander.moveToZone(Zone.COMMAND, null, this, true);\n                        ability.addEffect(new CommanderReplacementEffect(commander.getId()));\n                        ability.addEffect(new CommanderCostModification(commander.getId()));\n                        getState().setValue(commander + \"_castCount\", new Integer(0));\n                    }\n                }\n            }\n            \n        }\n        this.getState().addAbility(ability, null, null);\n        state.getTurnMods().add(new TurnMod(startingPlayerId, PhaseStep.DRAW));\n    }","commit_id":"15862b4fc5b4b4617fcd6137f32ca6ecd8f42055","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean moveToZone(Zone toZone, UUID sourceId, Game game, boolean flag, ArrayList<UUID> appliedEffects) {\r\n        Zone fromZone = game.getState().getZone(objectId);\r\n        ZoneChangeEvent event = new ZoneChangeEvent(this.objectId, sourceId, ownerId, fromZone, toZone, appliedEffects);\r\n        if (!game.replaceEvent(event)) {\r\n            if (event.getFromZone() != null) {\r\n                switch (event.getFromZone()) {\r\n                    case GRAVEYARD:\r\n                        game.getPlayer(ownerId).removeFromGraveyard(this, game);\r\n                        break;\r\n                    case HAND:\r\n                        game.getPlayer(ownerId).removeFromHand(this, game);\r\n                        break;\r\n                    case LIBRARY:\r\n                        game.getPlayer(ownerId).removeFromLibrary(this, game);\r\n                        break;\r\n                    case EXILED:\r\n                        game.getExile().removeCard(this, game);\r\n                        break;\r\n                    case OUTSIDE:\r\n                        game.getPlayer(ownerId).getSideboard().remove(this);\r\n                        break;\r\n                    case COMMAND:\r\n                        game.getState().getCommand().remove((Commander)game.getObject(objectId));\r\n                        break;\r\n                    case STACK:\r\n                    case PICK:\r\n                    case BATTLEFIELD: // for sacrificing permanents\r\n                        break;\r\n                    default:\r\n                        Card sourceCard = game.getCard(sourceId);\r\n                        logger.fatal(new StringBuilder(\"Invalid from zone [\").append(fromZone)\r\n                                .append(\"] for card [\").append(this.getName())\r\n                                .append(\"] to zone [\").append(toZone)\r\n                                .append(\"] source [\").append(sourceCard != null ? sourceCard.getName():\"null\").append(\"]\").toString());\r\n                        break;\r\n                }\r\n                game.rememberLKI(objectId, event.getFromZone(), this);\r\n            }\r\n            \r\n            if (isFaceDown() && !event.getToZone().equals(Zone.BATTLEFIELD)) { // to battlefield is possible because of Morph\r\n                setFaceDown(false);\r\n                game.getCard(this.getId()).setFaceDown(false);\r\n            }\r\n            updateZoneChangeCounter();\r\n            switch (event.getToZone()) {\r\n                case GRAVEYARD:\r\n                    game.getPlayer(ownerId).putInGraveyard(this, game, !flag);\r\n                    break;\r\n                case HAND:\r\n                    game.getPlayer(ownerId).getHand().add(this);\r\n                    break;\r\n                case STACK:\r\n                    game.getStack().push(new Spell(this, this.getSpellAbility().copy(), ownerId, event.getFromZone()));\r\n                    break;\r\n                case EXILED:\r\n                    game.getExile().getPermanentExile().add(this);\r\n                    break;\r\n                case COMMAND:\r\n                    game.addCommander(new Commander(this));\r\n                    break;\r\n                case LIBRARY:\r\n                    if (flag) {\r\n                        game.getPlayer(ownerId).getLibrary().putOnTop(this, game);\r\n                    }\r\n                    else {\r\n                        game.getPlayer(ownerId).getLibrary().putOnBottom(this, game);\r\n                    }\r\n                    break;\r\n                case BATTLEFIELD:\r\n                    PermanentCard permanent = new PermanentCard(this, ownerId);\r\n                    game.resetForSourceId(permanent.getId());\r\n                    game.addPermanent(permanent);\r\n                    game.setZone(objectId, Zone.BATTLEFIELD);\r\n                    game.setScopeRelevant(true);\r\n                    game.applyEffects();\r\n                    permanent.entersBattlefield(sourceId, game, event.getFromZone(), true);\r\n                    game.setScopeRelevant(false);\r\n                    game.applyEffects();\r\n                    if (flag) {\r\n                        permanent.setTapped(true);\r\n                    }\r\n                    event.setTarget(permanent);\r\n                    break;\r\n                default:\r\n                    Card sourceCard = game.getCard(sourceId);\r\n                    logger.fatal(new StringBuilder(\"Invalid to zone [\").append(toZone)\r\n                                .append(\"] for card [\").append(this.getName())\r\n                                .append(\"] to zone [\").append(toZone)\r\n                                .append(\"] source [\").append(sourceCard != null ? sourceCard.getName():\"null\").append(\"]\").toString());\r\n                    return false;\r\n            }\r\n            setControllerId(ownerId);\r\n            game.setZone(objectId, event.getToZone());\r\n            game.addSimultaneousEvent(event);\r\n            return game.getState().getZone(objectId) == toZone;\r\n        }\r\n        return false;\r\n    }","id":56095,"modified_method":"@Override\r\n    public boolean moveToZone(Zone toZone, UUID sourceId, Game game, boolean flag, ArrayList<UUID> appliedEffects) {\r\n        Zone fromZone = game.getState().getZone(objectId);\r\n        ZoneChangeEvent event = new ZoneChangeEvent(this.objectId, sourceId, ownerId, fromZone, toZone, appliedEffects);\r\n        if (!game.replaceEvent(event)) {\r\n            if (event.getFromZone() != null) {\r\n                switch (event.getFromZone()) {\r\n                    case GRAVEYARD:\r\n                        game.getPlayer(ownerId).removeFromGraveyard(this, game);\r\n                        break;\r\n                    case HAND:\r\n                        game.getPlayer(ownerId).removeFromHand(this, game);\r\n                        break;\r\n                    case LIBRARY:\r\n                        game.getPlayer(ownerId).removeFromLibrary(this, game);\r\n                        break;\r\n                    case EXILED:\r\n                        game.getExile().removeCard(this, game);\r\n                        break;\r\n                    case OUTSIDE:\r\n                        game.getPlayer(ownerId).getSideboard().remove(this);\r\n                        break;\r\n                    case COMMAND:\r\n                        game.getState().getCommand().remove((Commander)game.getObject(objectId));\r\n                        break;\r\n                    case STACK:\r\n                        StackObject stackObject = game.getStack().getStackObject(getId());\r\n                        if (stackObject != null) {\r\n                            game.getStack().remove(stackObject);\r\n                        }\r\n                        break;\r\n                    case PICK:\r\n                    case BATTLEFIELD: // for sacrificing permanents\r\n                        break;\r\n                    default:\r\n                        Card sourceCard = game.getCard(sourceId);\r\n                        logger.fatal(new StringBuilder(\"Invalid from zone [\").append(fromZone)\r\n                                .append(\"] for card [\").append(this.getName())\r\n                                .append(\"] to zone [\").append(toZone)\r\n                                .append(\"] source [\").append(sourceCard != null ? sourceCard.getName():\"null\").append(\"]\").toString());\r\n                        break;\r\n                }\r\n                game.rememberLKI(objectId, event.getFromZone(), this);\r\n            }\r\n            \r\n            if (isFaceDown() && !event.getToZone().equals(Zone.BATTLEFIELD)) { // to battlefield is possible because of Morph\r\n                setFaceDown(false);\r\n                game.getCard(this.getId()).setFaceDown(false);\r\n            }\r\n            updateZoneChangeCounter();\r\n            switch (event.getToZone()) {\r\n                case GRAVEYARD:\r\n                    game.getPlayer(ownerId).putInGraveyard(this, game, !flag);\r\n                    break;\r\n                case HAND:\r\n                    game.getPlayer(ownerId).getHand().add(this);\r\n                    break;\r\n                case STACK:\r\n                    game.getStack().push(new Spell(this, this.getSpellAbility().copy(), ownerId, event.getFromZone()));\r\n                    break;\r\n                case EXILED:\r\n                    game.getExile().getPermanentExile().add(this);\r\n                    break;\r\n                case COMMAND:\r\n                    game.addCommander(new Commander(this));\r\n                    break;\r\n                case LIBRARY:\r\n                    if (flag) {\r\n                        game.getPlayer(ownerId).getLibrary().putOnTop(this, game);\r\n                    }\r\n                    else {\r\n                        game.getPlayer(ownerId).getLibrary().putOnBottom(this, game);\r\n                    }\r\n                    break;\r\n                case BATTLEFIELD:\r\n                    PermanentCard permanent = new PermanentCard(this, ownerId);\r\n                    game.resetForSourceId(permanent.getId());\r\n                    game.addPermanent(permanent);\r\n                    game.setZone(objectId, Zone.BATTLEFIELD);\r\n                    game.setScopeRelevant(true);\r\n                    game.applyEffects();\r\n                    permanent.entersBattlefield(sourceId, game, event.getFromZone(), true);\r\n                    game.setScopeRelevant(false);\r\n                    game.applyEffects();\r\n                    if (flag) {\r\n                        permanent.setTapped(true);\r\n                    }\r\n                    event.setTarget(permanent);\r\n                    break;\r\n                default:\r\n                    Card sourceCard = game.getCard(sourceId);\r\n                    logger.fatal(new StringBuilder(\"Invalid to zone [\").append(toZone)\r\n                                .append(\"] for card [\").append(this.getName())\r\n                                .append(\"] to zone [\").append(toZone)\r\n                                .append(\"] source [\").append(sourceCard != null ? sourceCard.getName():\"null\").append(\"]\").toString());\r\n                    return false;\r\n            }\r\n            setControllerId(ownerId);\r\n            game.setZone(objectId, event.getToZone());\r\n            game.addSimultaneousEvent(event);\r\n            return game.getState().getZone(objectId) == toZone;\r\n        }\r\n        return false;\r\n    }","commit_id":"100decf7ce9f7399c95f8f93027f45d9d3757fd5","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean applies(GameEvent event, Ability source, Game game) {\r\n        if (event.getType() == GameEvent.EventType.ZONE_CHANGE && (((ZoneChangeEvent)event).getToZone() == Zone.GRAVEYARD || ((ZoneChangeEvent)event).getToZone() == Zone.EXILED)) {\r\n            if(commanderId != null && commanderId.equals(event.getTargetId())){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }","id":56096,"modified_method":"@Override\r\n    public boolean applies(GameEvent event, Ability source, Game game) {\r\n        if (event.getType() == GameEvent.EventType.ZONE_CHANGE && (((ZoneChangeEvent)event).getToZone() == Zone.GRAVEYARD || ((ZoneChangeEvent)event).getToZone() == Zone.EXILED)) {\r\n            if (commanderId != null) {\r\n                if (((ZoneChangeEvent)event).getFromZone().equals(Zone.STACK)) {\r\n                    Spell spell = game.getStack().getSpell(event.getTargetId());\r\n                    if (spell != null) {\r\n                        if (commanderId.equals(spell.getSourceId())) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                if(commanderId.equals(event.getTargetId())){\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }","commit_id":"100decf7ce9f7399c95f8f93027f45d9d3757fd5","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean replaceEvent(GameEvent event, Ability source, Game game) {\r\n        if (((ZoneChangeEvent)event).getFromZone() == Zone.BATTLEFIELD) {\r\n            Permanent permanent = ((ZoneChangeEvent)event).getTarget();\r\n            if (permanent != null) {\r\n                Player player = game.getPlayer(permanent.getOwnerId());\r\n                if (player != null && player.chooseUse(Outcome.Benefit, \"Move commander to command zone?\", game)){\r\n                    boolean result = permanent.moveToZone(Zone.COMMAND, source.getSourceId(), game, false);\r\n                    return result;\r\n                }\r\n            }\r\n        } else {\r\n            Card card = game.getCard(event.getTargetId());\r\n            if (card != null) {\r\n\r\n                Player player = game.getPlayer(card.getOwnerId());\r\n                if (player != null && player.chooseUse(Outcome.Benefit, \"Move commander to command zone?\", game)){\r\n                    boolean result  = card.moveToZone(Zone.COMMAND, source.getSourceId(), game, false);\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }","id":56097,"modified_method":"@Override\r\n    public boolean replaceEvent(GameEvent event, Ability source, Game game) {\r\n        if (((ZoneChangeEvent)event).getFromZone() == Zone.BATTLEFIELD) {\r\n            Permanent permanent = ((ZoneChangeEvent)event).getTarget();\r\n            if (permanent != null) {\r\n                Player player = game.getPlayer(permanent.getOwnerId());\r\n                if (player != null && player.chooseUse(Outcome.Benefit, \"Move commander to command zone?\", game)){\r\n                    boolean result = permanent.moveToZone(Zone.COMMAND, source.getSourceId(), game, false);\r\n                    return result;\r\n                }\r\n            }\r\n        } else {\r\n            Card card = null;\r\n            if (((ZoneChangeEvent)event).getFromZone().equals(Zone.STACK)) {\r\n                Spell spell = game.getStack().getSpell(event.getTargetId());\r\n                if (spell != null) {\r\n                    card = game.getCard(spell.getSourceId());\r\n                }\r\n            } else {\r\n                card = game.getCard(event.getTargetId());\r\n            }\r\n            \r\n            if (card != null) {\r\n                Player player = game.getPlayer(card.getOwnerId());\r\n                if (player != null && player.chooseUse(Outcome.Benefit, \"Move commander to command zone?\", game)){\r\n                    game.informPlayers(player.getName() + \" moved his commander to the command zone instead\");\r\n                    return card.moveToZone(Zone.COMMAND, source.getSourceId(), game, false);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }","commit_id":"100decf7ce9f7399c95f8f93027f45d9d3757fd5","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        int affectedTargets = 0;\n        if (targetPointer.getTargets(game, source).size() > 0) {\n            for (UUID spellId : targetPointer.getTargets(game, source)) {\n                Spell spell = game.getStack().getSpell(spellId);\n                if (spell != null) {\n                    spell.moveToExile(null, null, source.getSourceId(), game);\n                    affectedTargets++;\n                }\n            }\n        }\n        return affectedTargets > 0;\n    }","id":56098,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player controller = game.getPlayer(source.getControllerId());\n        if (controller != null) {\n            int affectedTargets = 0;\n            if (targetPointer.getTargets(game, source).size() > 0) {\n                for (UUID spellId : targetPointer.getTargets(game, source)) {\n                    Spell spell = game.getStack().getSpell(spellId);\n                    if (spell != null) {\n                        controller.moveCardToExileWithInfo(spell, null, \"\", source.getSourceId(), game, Zone.STACK);\n                        affectedTargets++;\n                    }\n                }\n            }\n            return affectedTargets > 0;\n        }\n        return false;\n    }","commit_id":"100decf7ce9f7399c95f8f93027f45d9d3757fd5","url":"https://github.com/magefree/mage"},{"original_method":"public MindbreakTrapAlternativeCost() {\n        super(\"you may pay {0} rather than pay Mindbreak Trap's mana cost\");\n        this.add(new GenericManaCost(0));\n    }","id":56099,"modified_method":"public MindbreakTrapAlternativeCost() {\n        super(\"you may pay {0} rather than pay {this}'s mana cost\");\n        this.add(new GenericManaCost(0));\n    }","commit_id":"100decf7ce9f7399c95f8f93027f45d9d3757fd5","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public String getText() {\n        return \"If an opponent cast three or more spells this turn, you may pay {0} rather than pay Mindbreak Trap's mana cost\";\n    }","id":56100,"modified_method":"@Override\n    public String getText() {\n        return \"If an opponent cast three or more spells this turn, you may pay {0} rather than pay {this}'s mana cost\";\n    }","commit_id":"100decf7ce9f7399c95f8f93027f45d9d3757fd5","url":"https://github.com/magefree/mage"},{"original_method":"public LookLibraryAndPickControllerEffect(final LookLibraryAndPickControllerEffect effect) {\n        super(effect);\n        this.numberToPick = effect.numberToPick.copy();\n        this.filter = effect.filter.copy();\n        this.revealPickedCards = effect.revealPickedCards;\n        this.targetPickedCards = effect.targetPickedCards;\n        this.upTo = effect.upTo;\n    }","id":56101,"modified_method":"public LookLibraryAndPickControllerEffect(final LookLibraryAndPickControllerEffect effect) {\n        super(effect);\n        this.numberToPick = effect.numberToPick.copy();\n        this.filter = effect.filter.copy();\n        this.revealPickedCards = effect.revealPickedCards;\n        this.targetPickedCards = effect.targetPickedCards;\n        this.upTo = effect.upTo;\n        this.optional = effect.optional;\n    }","commit_id":"df728473c7346bbf77274c872268ac661a61f412","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    protected void actionWithSelectedCards(Cards cards, Game game, Ability source, String windowName) {\n        Player player = game.getPlayer(source.getControllerId());\n        if (player != null && foundCardsToPick > 0) {\n            if (!optional || player.chooseUse(Outcome.DrawCard, \"Do you wish to reveal \"+filter.getMessage()+\" and put it into your hand?\", game)) {\n                FilterCard pickFilter = filter.copy();\n                // Set the pick message\n                StringBuilder sb = new StringBuilder(filter.getMessage()).append(\" to \");\n                if (revealPickedCards) {\n                    sb.append(\"reveal and \");\n                }\n                sb.append(\"put into your hand\");\n\n                pickFilter.setMessage(sb.toString());\n                TargetCard target = new TargetCard((upTo ? 0:numberToPick.calculate(game, source)),numberToPick.calculate(game, source), Zone.PICK, pickFilter);\n                if (player.choose(Outcome.DrawCard, cards, target, game)) {\n                    Cards reveal = new CardsImpl();\n                    for (UUID cardId : (List<UUID>)target.getTargets()) {\n                        Card card = cards.get(cardId, game);\n                        if (card != null) {\n                            cards.remove(card);\n                            card.moveToZone(targetPickedCards, source.getId(), game, false);\n                            if (revealPickedCards) {\n                                reveal.add(card);\n                            }\n                        }\n                    }\n                    if (revealPickedCards) {\n                        player.revealCards(windowName, reveal, game);\n                    }\n\n                }\n            }\n        }\n\n    }","id":56102,"modified_method":"@Override\n    protected void actionWithSelectedCards(Cards cards, Game game, Ability source, String windowName) {\n        Player player = game.getPlayer(source.getControllerId());\n        if (player != null && foundCardsToPick > 0) {\n            if (!optional || player.chooseUse(Outcome.DrawCard, getMayText(), game)) {\n                FilterCard pickFilter = filter.copy();\n                pickFilter.setMessage(getPickText());\n                TargetCard target = new TargetCard((upTo ? 0:numberToPick.calculate(game, source)),numberToPick.calculate(game, source), Zone.PICK, pickFilter);\n                if (player.choose(Outcome.DrawCard, cards, target, game)) {\n                    Cards reveal = new CardsImpl();\n                    for (UUID cardId : (List<UUID>)target.getTargets()) {\n                        Card card = cards.get(cardId, game);\n                        if (card != null) {\n                            cards.remove(card);\n                            if (targetZoneLookedCards.equals(Zone.BATTLEFIELD)) {\n                                card.putOntoBattlefield(game, Zone.PICK, source.getSourceId(), source.getControllerId());\n                            } else {\n                                card.moveToZone(targetPickedCards, source.getId(), game, false);\n                            }\n                            if (revealPickedCards) {\n                                reveal.add(card);\n                            }\n                        }\n                    }\n                    if (revealPickedCards) {\n                        player.revealCards(windowName, reveal, game);\n                    }\n\n                }\n            }\n        }\n\n    }","commit_id":"df728473c7346bbf77274c872268ac661a61f412","url":"https://github.com/magefree/mage"},{"original_method":"public LookLibraryAndPickControllerEffect(DynamicValue numberOfCards, boolean mayShuffleAfter, DynamicValue numberToPick, FilterCard pickFilter, Zone targetZoneLookedCards, boolean putOnTop, boolean reveal, boolean upTo) {\n            super(Outcome.DrawCard, numberOfCards, mayShuffleAfter, targetZoneLookedCards, putOnTop);\n            this.numberToPick = numberToPick;\n            this.filter = pickFilter;\n            this.revealPickedCards = reveal;\n            this.upTo = upTo;\n    }","id":56103,"modified_method":"public LookLibraryAndPickControllerEffect(DynamicValue numberOfCards, boolean mayShuffleAfter, DynamicValue numberToPick, FilterCard pickFilter, Zone targetZoneLookedCards, boolean putOnTop, boolean reveal, boolean upTo) {\n        this(numberOfCards, mayShuffleAfter, numberToPick, pickFilter, targetZoneLookedCards, putOnTop, reveal, upTo, Zone.HAND, false);\n    }","commit_id":"df728473c7346bbf77274c872268ac661a61f412","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public String getText(Mode mode) {\n        StringBuilder sb = new StringBuilder();\n        if (numberToPick.calculate(null, null) > 0) {\n            if (revealPickedCards) {\n                sb.append(\". You may reveal \");\n                sb.append(filter.getMessage()).append(\" from among them and put it into your \");\n            } else {\n                sb.append(\". Put one of them into your \");\n            }\n            sb.append(targetPickedCards.toString().toLowerCase());\n            if (targetZoneLookedCards == Zone.LIBRARY) {\n                sb.append(\". Put the rest \");\n                if (putOnTop) {\n                    sb.append(\"back \");\n                } else {\n                    sb.append(\"on the bottom of your library \");\n                }\n                sb.append(\"in any order\");\n            } else if (targetZoneLookedCards == Zone.GRAVEYARD) {\n                sb.append(\" and the other into your graveyard\");\n            }\n        }\n        // get text frame from super class and inject action text\n        return setText(mode, sb.toString());\n    }","id":56104,"modified_method":"@Override\n    public String getText(Mode mode) {\n        StringBuilder sb = new StringBuilder();\n        if (numberToPick.calculate(null, null) > 0) {\n            \n                if (revealPickedCards) {\n                    sb.append(\". You may reveal \");\n                    sb.append(filter.getMessage()).append(\" from among them and put it into your \");\n                } else {\n                    if (targetPickedCards.equals(Zone.BATTLEFIELD)) {\n                        sb.append(\". You \");\n                        if (optional) {\n                            sb.append(\"may \");\n                        }\n                        sb.append(\"put \").append(filter.getMessage()).append(\" from among them onto the \");\n                    } else {\n                        sb.append(\". Put one of them into your \");\n                    }\n                }\n                sb.append(targetPickedCards.toString().toLowerCase());\n\n            if (targetZoneLookedCards == Zone.LIBRARY) {\n                sb.append(\". Put the rest \");\n                if (putOnTop) {\n                    sb.append(\"back \");\n                } else {\n                    sb.append(\"on the bottom of your library \");\n                }\n                sb.append(\"in any order\");\n            } else if (targetZoneLookedCards == Zone.GRAVEYARD) {\n                sb.append(\" and the other into your graveyard\");\n            }\n        }\n        // get text frame from super class and inject action text\n        return setText(mode, sb.toString());\n    }","commit_id":"df728473c7346bbf77274c872268ac661a61f412","url":"https://github.com/magefree/mage"},{"original_method":"public String setText(Mode mode, String middleText) {\n        int numberLook;\n        try {\n            numberLook = Integer.parseInt(numberOfCards.toString());\n        } catch (NumberFormatException e) {\n            numberLook = 0;\n        }\n        StringBuilder sb = new StringBuilder(\"Look at the top \");\n        switch (numberLook) {\n            case 0:\n                sb.append(\" X \");\n                break;\n            case 1:\n                sb.append(\"card \");\n                break;\n            case 2:\n                sb.append(\"two\");\n                break;\n            case 3:\n                sb.append(\"three\");\n                break;\n            case 4:\n                sb.append(\"four\");\n                break;\n            case 5:\n                sb.append(\"five\");\n                break;\n            default:\n                sb.append(numberLook);\n                break;\n        }\n        if (numberLook != 1) {\n            sb.append(\" cards \");\n        }\n\n        sb.append(\"of your Library\");\n        if (numberLook == 0) {\n            sb.append(\", where {X} is the number of cards \").append(numberOfCards.getMessage());\n        }\n\n\n        if (!middleText.isEmpty()) {\n            sb.append(middleText);\n        } else if (numberLook > 1) {\n            sb.append(\", then put them back in any order\");\n        }\n        if (this.mayShuffleAfter) {\n            sb.append(\". You may shuffle your library\");\n        }\n\n        return sb.toString();\n    }","id":56105,"modified_method":"public String setText(Mode mode, String middleText) {\n        int numberLook;\n        try {\n            numberLook = Integer.parseInt(numberOfCards.toString());\n        } catch (NumberFormatException e) {\n            numberLook = 0;\n        }\n        StringBuilder sb = new StringBuilder(\"Look at the top \");\n        switch (numberLook) {\n            case 0:\n                sb.append(\" X \");\n                break;\n            case 1:\n                sb.append(\"card \");\n                break;\n            default:\n                sb.append(CardUtil.numberToText(numberLook));\n                break;\n        }\n        if (numberLook != 1) {\n            sb.append(\" cards \");\n        }\n\n        sb.append(\"of your Library\");\n        if (numberLook == 0) {\n            sb.append(\", where {X} is the number of cards \").append(numberOfCards.getMessage());\n        }\n\n\n        if (!middleText.isEmpty()) {\n            sb.append(middleText);\n        } else if (numberLook > 1) {\n            sb.append(\", then put them back in any order\");\n        }\n        if (this.mayShuffleAfter) {\n            sb.append(\". You may shuffle your library\");\n        }\n\n        return sb.toString();\n    }","commit_id":"df728473c7346bbf77274c872268ac661a61f412","url":"https://github.com/magefree/mage"},{"original_method":"public MayaelTheAnima(UUID ownerId) {\n        super(ownerId, 179, \"Mayael the Anima\", Rarity.MYTHIC, new CardType[]{CardType.CREATURE}, \"{R}{G}{W}\");\n        this.expansionSetCode = \"ALA\";\n        this.supertype.add(\"Legendary\");\n        this.subtype.add(\"Elf\");\n        this.subtype.add(\"Shaman\");\n\n        this.color.setRed(true);\n        this.color.setGreen(true);\n        this.color.setWhite(true);\n        this.power = new MageInt(2);\n        this.toughness = new MageInt(3);\n\n        // {3}{R}{G}{W}, {tap}: Look at the top five cards of your library.\n        // You may put a creature card with power 5 or greater from among them onto the battlefield.\n        // Put the rest on the bottom of your library in any order.\n        SimpleActivatedAbility ability = new SimpleActivatedAbility(Zone.BATTLEFIELD,\n                new LookLibraryAndPickControllerEffect(5,1, filter,false),\n                new ManaCostsImpl(\"{3}{R}{G}{W}\"));\n        ability.addCost(new TapSourceCost());\n        this.addAbility(ability);\n    }","id":56106,"modified_method":"public MayaelTheAnima(UUID ownerId) {\n        super(ownerId, 179, \"Mayael the Anima\", Rarity.MYTHIC, new CardType[]{CardType.CREATURE}, \"{R}{G}{W}\");\n        this.expansionSetCode = \"ALA\";\n        this.supertype.add(\"Legendary\");\n        this.subtype.add(\"Elf\");\n        this.subtype.add(\"Shaman\");\n\n        this.color.setRed(true);\n        this.color.setGreen(true);\n        this.color.setWhite(true);\n        this.power = new MageInt(2);\n        this.toughness = new MageInt(3);\n\n        // {3}{R}{G}{W}, {tap}: Look at the top five cards of your library.\n        // You may put a creature card with power 5 or greater from among them onto the battlefield.\n        // Put the rest on the bottom of your library in any order.\n        SimpleActivatedAbility ability = new SimpleActivatedAbility(Zone.BATTLEFIELD,\n                new LookLibraryAndPickControllerEffect(5,1, filter,false, false, Zone.BATTLEFIELD, true),\n                new ManaCostsImpl(\"{3}{R}{G}{W}\"));\n        ability.addCost(new TapSourceCost());\n        this.addAbility(ability);\n    }","commit_id":"df728473c7346bbf77274c872268ac661a61f412","url":"https://github.com/magefree/mage"},{"original_method":"public static boolean canBeAParent(final IOperationContext operationContext, final CanBeAParentContext _context) {\n    if (!(SConceptOperations.isSubConceptOf(_context.getChildConcept(), \"jetbrains.mps.baseLanguage.structure.PublicVisibility\")) && _context.getLink() == SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.extensionMethods.structure.ExtensionMethodDeclaration\", \"visibility\")) {\n      return false;\n    }\n    return true;\n  }","id":56107,"modified_method":"public static boolean canBeAParent(final IOperationContext operationContext, final CanBeAParentContext _context) {\n    if (!(SConceptOperations.isSubConceptOf(_context.getChildConcept(), \"jetbrains.mps.baseLanguage.structure.PublicVisibility\") || SConceptOperations.isSubConceptOf(_context.getChildConcept(), \"jetbrains.mps.baseLanguage.structure.PrivateVisibility\")) && _context.getLink() == SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.extensionMethods.structure.ExtensionMethodDeclaration\", \"visibility\")) {\n      return false;\n    }\n    return true;\n  }","commit_id":"e2326a44fc2b89d02808ba8bdebc99d121da94b5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void nodeFactory_NodeSetup_ExtensionMethodDeclaration_720975379598240373(final IOperationContext operationContext, final NodeSetupContext _context) {\n    if (_context.getEnclosingNode() != null && SNodeOperations.isInstanceOf(_context.getEnclosingNode(), \"jetbrains.mps.baseLanguage.structure.IVisible\")) {\n      SLinkOperations.setTarget(_context.getNewNode(), \"visibility\", SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(_context.getEnclosingNode(), \"jetbrains.mps.baseLanguage.structure.IVisible\"), \"visibility\", true)), true);\n    } else {\n      SLinkOperations.setNewChild(_context.getNewNode(), \"visibility\", \"jetbrains.mps.baseLanguage.structure.PublicVisibility\");\n    }\n  }","id":56108,"modified_method":"public static void nodeFactory_NodeSetup_ExtensionMethodDeclaration_720975379598240373(final IOperationContext operationContext, final NodeSetupContext _context) {\n    SLinkOperations.setNewChild(_context.getNewNode(), \"visibility\", \"jetbrains.mps.baseLanguage.structure.PublicVisibility\");\n  }","commit_id":"e2326a44fc2b89d02808ba8bdebc99d121da94b5","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ConstraintsDescriptor() {\n    ListSequence.fromList(this.myConstraints).addElement(new Root_MappingRule_template_ReferentConstraint());\n    ListSequence.fromList(this.myConstraints).addElement(new CreateRootRule_templateNode_ReferentConstraint());\n    ListSequence.fromList(this.myConstraints).addElement(new TemplateArgumentPatternVarRefExpression_patternVarDecl_ReferentConstraint());\n  }","id":56109,"modified_method":"public ConstraintsDescriptor() {\n    ListSequence.fromList(this.myConstraints).addElement(new Root_MappingRule_template_ReferentConstraint());\n    ListSequence.fromList(this.myConstraints).addElement(new CreateRootRule_templateNode_ReferentConstraint());\n    ListSequence.fromList(this.myConstraints).addElement(new TemplateArgumentPatternVarRefExpression_patternVarDecl_ReferentConstraint());\n    ListSequence.fromList(this.myConstraints).addElement(new TemplateArgumentPropertyPatternRefExpression_propertyPattern_ReferentConstraint());\n    ListSequence.fromList(this.myConstraints).addElement(new TemplateArgumentLinkPatternRefExpression_patternVar_ReferentConstraint());\n  }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"static TemplateContext getTemplateContext(RuleConsequence consequence, SNode inputNode, TemplateContext context, ITemplateGenerator generator) {\n    if(consequence instanceof ITemplateCall) {\n      final Expression[] arguments = getArguments((ITemplateCall) consequence);\n      final TemplateParameterDeclaration[] parameters = getParameters((ITemplateCall) consequence);\n\n      if(arguments == null && parameters == null) {\n        return null;\n      }\n      if(arguments == null || parameters == null || arguments.length != parameters.length) {\n        generator.showErrorMessage(inputNode, consequence.getNode(), \"number of arguments doesn't match template\");\n        return null;\n      }\n\n      final Map<String,Object> vars = new HashMap<String, Object>(arguments.length);\n      for(int i = 0; i < arguments.length; i++) {\n        Expression expr = arguments[i];\n        String name = parameters[i].getName();\n        Object value = null;\n        if(expr instanceof BooleanConstant) {\n          value = ((BooleanConstant) expr).getValue();\n        } else if(expr instanceof IntegerConstant) {\n          value = ((IntegerConstant) expr).getValue();\n        } else if(expr instanceof StringLiteral) {\n          value = ((StringLiteral) expr).getValue();\n        } else if(expr instanceof NullLiteral) {\n          /* ok */\n        } else if(expr instanceof TemplateArgumentPatternVarRefExpression) {\n          TemplateArgumentPatternVarRefExpression patternRefExpr = (TemplateArgumentPatternVarRefExpression) expr;\n          if(patternRefExpr.getPatternVarDecl() == null) {\n            generator.showErrorMessage(inputNode, consequence.getNode(), \"cannot evaluate template argument #\" + (i+1) + \": invalid pattern reference\");\n          } else {\n            // TODO FIXME using PatternVarsUtil directly, which is loaded by MPS\n            value = context.getPatternVariable(PatternVarsUtil.getFieldName(patternRefExpr.getPatternVarDecl().getNode()));\n          }\n        } else if(expr instanceof TemplateArgumentQueryExpression) {\n          TemplateArgumentQuery query = ((TemplateArgumentQueryExpression) expr).getQuery();\n          value = generator.getExecutor().evaluateArgumentQuery(inputNode, query, context);\n        } else {\n          generator.showErrorMessage(inputNode, consequence.getNode(), \"cannot evaluate template argument #\" + (i+1));\n        }\n\n        vars.put(name, value);\n      }\n      return new TemplateContext(null, vars);\n    }\n    return context;\n  }","id":56110,"modified_method":"static TemplateContext getTemplateContext(RuleConsequence consequence, SNode inputNode, TemplateContext context, ITemplateGenerator generator) {\n    if(consequence instanceof ITemplateCall) {\n      final Expression[] arguments = getArguments((ITemplateCall) consequence);\n      final TemplateParameterDeclaration[] parameters = getParameters((ITemplateCall) consequence);\n\n      if(arguments == null && parameters == null) {\n        return null;\n      }\n      if(arguments == null || parameters == null || arguments.length != parameters.length) {\n        generator.showErrorMessage(inputNode, consequence.getNode(), \"number of arguments doesn't match template\");\n        return null;\n      }\n\n      final Map<String,Object> vars = new HashMap<String, Object>(arguments.length);\n      for(int i = 0; i < arguments.length; i++) {\n        Expression expr = arguments[i];\n        String name = parameters[i].getName();\n        Object value = null;\n        if(expr instanceof BooleanConstant) {\n          value = ((BooleanConstant) expr).getValue();\n        } else if(expr instanceof IntegerConstant) {\n          value = ((IntegerConstant) expr).getValue();\n        } else if(expr instanceof StringLiteral) {\n          value = ((StringLiteral) expr).getValue();\n        } else if(expr instanceof NullLiteral) {\n          /* ok */\n        } else if(expr instanceof TemplateArgumentPatternRef) {\n          BaseConcept patternVar = getPatternVariable((TemplateArgumentPatternRef) expr);\n          if(patternVar == null) {\n            generator.showErrorMessage(inputNode, expr.getNode(), \"cannot evaluate template argument #\" + (i+1) + \": invalid pattern reference\");\n          } else {\n            // TODO FIXME using PatternVarsUtil directly, which is loaded by MPS\n            value = context.getPatternVariable(PatternVarsUtil.getFieldName(patternVar.getNode()));\n          }\n        } else if(expr instanceof TemplateArgumentQueryExpression) {\n          TemplateArgumentQuery query = ((TemplateArgumentQueryExpression) expr).getQuery();\n          value = generator.getExecutor().evaluateArgumentQuery(inputNode, query, context);\n        } else {\n          generator.showErrorMessage(inputNode, consequence.getNode(), \"cannot evaluate template argument #\" + (i+1));\n        }\n\n        vars.put(name, value);\n      }\n      return new TemplateContext(null, vars);\n    }\n    return context;\n  }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static boolean canBeAParent(final IOperationContext operationContext, final CanBeAParentContext _context) {\n    if (_context.getLink() == SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.generator.structure.ITemplateCall\", \"actualArgument\")) {\n      return _context.getChildConcept() == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.lang.generator.structure.TemplateArgumentPatternVarRefExpression\") || SConceptOperations.isSubConceptOf(_context.getChildConcept(), \"jetbrains.mps.lang.generator.structure.TemplateArgumentQueryExpression\") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.IntegerConstant\") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StringLiteral\");\n    }\n    return false;\n  }","id":56111,"modified_method":"public static boolean canBeAParent(final IOperationContext operationContext, final CanBeAParentContext _context) {\n    if (_context.getLink() == SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.generator.structure.ITemplateCall\", \"actualArgument\")) {\n      return SConceptOperations.isSubConceptOf(_context.getChildConcept(), \"jetbrains.mps.lang.generator.structure.TemplateArgumentPatternRef\") || SConceptOperations.isSubConceptOf(_context.getChildConcept(), \"jetbrains.mps.lang.generator.structure.TemplateArgumentQueryExpression\") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.IntegerConstant\") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\") || _context.getChildConcept() == SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StringLiteral\");\n    }\n    return false;\n  }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void removeActionsByCondition_8421689336187917123(final IOperationContext operationContext, final RemoveSubstituteActionByConditionContext _context) {\n    Iterator<INodeSubstituteAction> actions = _context.getActions();\n    while (actions.hasNext()) {\n      INodeSubstituteAction current = actions.next();\n      final SNode concept = current.getOutputConcept();\n      SNode applicableConcept = SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.Expression\");\n      Condition cond = new Condition() {\n        public boolean met(Object object) {\n          return concept != SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\") && concept != SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\") && concept != SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StringLiteral\") && concept != SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.IntegerConstant\") && concept != SConceptOperations.findConceptDeclaration(\"jetbrains.mps.lang.generator.structure.TemplateArgumentPatternVarRefExpression\") && !(SConceptOperations.isSubConceptOf(concept, \"jetbrains.mps.lang.generator.structure.TemplateArgumentQueryExpression\"));\n\n        }\n      };\n      if (SConceptOperations.isSuperConceptOf(applicableConcept, NameUtil.nodeFQName(concept)) && cond.met(concept)) {\n        actions.remove();\n      }\n    }\n  }","id":56112,"modified_method":"public static void removeActionsByCondition_8421689336187917123(final IOperationContext operationContext, final RemoveSubstituteActionByConditionContext _context) {\n    Iterator<INodeSubstituteAction> actions = _context.getActions();\n    while (actions.hasNext()) {\n      INodeSubstituteAction current = actions.next();\n      final SNode concept = current.getOutputConcept();\n      SNode applicableConcept = SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.Expression\");\n      Condition cond = new Condition() {\n        public boolean met(Object object) {\n          return concept != SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\") && concept != SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\") && concept != SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StringLiteral\") && concept != SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.IntegerConstant\") && !(SConceptOperations.isSubConceptOf(concept, \"jetbrains.mps.lang.generator.structure.TemplateArgumentPatternRef\")) && !(SConceptOperations.isSubConceptOf(concept, \"jetbrains.mps.lang.generator.structure.TemplateArgumentQueryExpression\"));\n\n        }\n      };\n      if (SConceptOperations.isSuperConceptOf(applicableConcept, NameUtil.nodeFQName(concept)) && cond.met(concept)) {\n        actions.remove();\n      }\n    }\n  }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean match(SNode nodeToMatch) {\n      {\n        SNode nodeToMatch_x583g4_a0a0a51;\n        nodeToMatch_x583g4_a0a0a51 = nodeToMatch;\n        if (!(\"jetbrains.mps.baseLanguage.structure.AndExpression\".equals(nodeToMatch_x583g4_a0a0a51.getConceptFqName()))) {\n          return false;\n        }\n        {\n          String childRole_x583g4__4 = \"leftExpression\";\n          if (nodeToMatch_x583g4_a0a0a51.getChildCount(childRole_x583g4__4) != 1) {\n            return false;\n          }\n          {\n            this.PatternVar_left = null;\n            SNode childVar_x583g4_a0a0a0p = nodeToMatch_x583g4_a0a0a51.getChildren(childRole_x583g4__4).get(0);\n            this.PatternVar_left = childVar_x583g4_a0a0a0p;\n          }\n        }\n        {\n          String childRole_x583g4__5 = \"rightExpression\";\n          if (nodeToMatch_x583g4_a0a0a51.getChildCount(childRole_x583g4__5) != 1) {\n            return false;\n          }\n          {\n            this.PatternVar_right = null;\n            SNode childVar_x583g4_a0a0a0p_0 = nodeToMatch_x583g4_a0a0a51.getChildren(childRole_x583g4__5).get(0);\n            this.PatternVar_right = childVar_x583g4_a0a0a0p_0;\n          }\n        }\n      }\n      return true;\n    }","id":56113,"modified_method":"public boolean match(SNode nodeToMatch) {\n      {\n        SNode nodeToMatch_x583g4_a0a0a51;\n        nodeToMatch_x583g4_a0a0a51 = nodeToMatch;\n        if (!(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\".equals(nodeToMatch_x583g4_a0a0a51.getConceptFqName()))) {\n          return false;\n        }\n        {\n          String childRole_x583g4_ = \"expression\";\n          if (nodeToMatch_x583g4_a0a0a51.getChildCount(childRole_x583g4_) != 1) {\n            return false;\n          }\n          {\n            SNode childVar_x583g4_a0a0a0p = nodeToMatch_x583g4_a0a0a51.getChildren(childRole_x583g4_).get(0);\n            {\n              SNode nodeToMatch_x583g4_a0a0a0p;\n              nodeToMatch_x583g4_a0a0a0p = childVar_x583g4_a0a0a0p;\n              if (!(\"jetbrains.mps.baseLanguage.structure.AssignmentExpression\".equals(nodeToMatch_x583g4_a0a0a0p.getConceptFqName()))) {\n                return false;\n              }\n              {\n                String childRole_x583g4__0 = \"lValue\";\n                if (nodeToMatch_x583g4_a0a0a0p.getChildCount(childRole_x583g4__0) != 1) {\n                  return false;\n                }\n                {\n                  this.PatternVar_yy = null;\n                  SNode childVar_x583g4_a0a0a0a51 = nodeToMatch_x583g4_a0a0a0p.getChildren(childRole_x583g4__0).get(0);\n                  this.PatternVar_yy = childVar_x583g4_a0a0a0a51;\n                }\n              }\n              {\n                String childRole_x583g4__1 = \"rValue\";\n                if (nodeToMatch_x583g4_a0a0a0p.getChildCount(childRole_x583g4__1) != 1) {\n                  return false;\n                }\n                {\n                  SNode childVar_x583g4_a0a0a0a51_0 = nodeToMatch_x583g4_a0a0a0p.getChildren(childRole_x583g4__1).get(0);\n                  {\n                    SNode nodeToMatch_x583g4_a0a0a0a51;\n                    nodeToMatch_x583g4_a0a0a0a51 = childVar_x583g4_a0a0a0a51_0;\n                    if (!(\"jetbrains.mps.baseLanguage.structure.MulExpression\".equals(nodeToMatch_x583g4_a0a0a0a51.getConceptFqName()))) {\n                      return false;\n                    }\n                    {\n                      String childRole_x583g4__2 = \"leftExpression\";\n                      if (nodeToMatch_x583g4_a0a0a0a51.getChildCount(childRole_x583g4__2) != 1) {\n                        return false;\n                      }\n                      {\n                        this.PatternVar_xx = null;\n                        SNode childVar_x583g4_a0a0a0a0p = nodeToMatch_x583g4_a0a0a0a51.getChildren(childRole_x583g4__2).get(0);\n                        this.PatternVar_xx = childVar_x583g4_a0a0a0a0p;\n                      }\n                    }\n                    {\n                      String childRole_x583g4__3 = \"rightExpression\";\n                      if (nodeToMatch_x583g4_a0a0a0a51.getChildCount(childRole_x583g4__3) != 1) {\n                        return false;\n                      }\n                      {\n                        this.PatternVar_right = null;\n                        SNode childVar_x583g4_a0a0a0a0p_0 = nodeToMatch_x583g4_a0a0a0a51.getChildren(childRole_x583g4__3).get(0);\n                        this.PatternVar_right = childVar_x583g4_a0a0a0a0p_0;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      return true;\n    }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Object getFieldValue(String fieldName) {\n      if (\"PatternVar_left\".equals(fieldName)) {\n        return this.PatternVar_left;\n      }\n      if (\"PatternVar_right\".equals(fieldName)) {\n        return this.PatternVar_right;\n      }\n      return null;\n    }","id":56114,"modified_method":"public Object getFieldValue(String fieldName) {\n      if (\"PatternVar_right\".equals(fieldName)) {\n        return this.PatternVar_right;\n      }\n      if (\"PatternVar_xx\".equals(fieldName)) {\n        return this.PatternVar_xx;\n      }\n      if (\"PatternVar_yy\".equals(fieldName)) {\n        return this.PatternVar_yy;\n      }\n      return null;\n    }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean match(SNode nodeToMatch) {\n      {\n        SNode nodeToMatch_x583g4_a0a0a61;\n        nodeToMatch_x583g4_a0a0a61 = nodeToMatch;\n        if (!(\"jetbrains.mps.baseLanguage.structure.NotExpression\".equals(nodeToMatch_x583g4_a0a0a61.getConceptFqName()))) {\n          return false;\n        }\n        {\n          String childRole_x583g4__6 = \"expression\";\n          if (nodeToMatch_x583g4_a0a0a61.getChildCount(childRole_x583g4__6) != 1) {\n            return false;\n          }\n          {\n            SNode childVar_x583g4_a0a0a0q = nodeToMatch_x583g4_a0a0a61.getChildren(childRole_x583g4__6).get(0);\n            {\n              SNode nodeToMatch_x583g4_a0a0a0q;\n              nodeToMatch_x583g4_a0a0a0q = childVar_x583g4_a0a0a0q;\n              if (!(\"jetbrains.mps.baseLanguage.structure.EqualsExpression\".equals(nodeToMatch_x583g4_a0a0a0q.getConceptFqName()))) {\n                return false;\n              }\n              {\n                String childRole_x583g4__7 = \"leftExpression\";\n                if (nodeToMatch_x583g4_a0a0a0q.getChildCount(childRole_x583g4__7) != 1) {\n                  return false;\n                }\n                {\n                  this.PatternVar_left = null;\n                  SNode childVar_x583g4_a0a0a0a61 = nodeToMatch_x583g4_a0a0a0q.getChildren(childRole_x583g4__7).get(0);\n                  this.PatternVar_left = childVar_x583g4_a0a0a0a61;\n                }\n              }\n              {\n                String childRole_x583g4__8 = \"rightExpression\";\n                if (nodeToMatch_x583g4_a0a0a0q.getChildCount(childRole_x583g4__8) != 1) {\n                  return false;\n                }\n                {\n                  this.PatternVar_right = null;\n                  SNode childVar_x583g4_a0a0a0a61_0 = nodeToMatch_x583g4_a0a0a0q.getChildren(childRole_x583g4__8).get(0);\n                  this.PatternVar_right = childVar_x583g4_a0a0a0a61_0;\n                }\n              }\n            }\n          }\n        }\n      }\n      return true;\n    }","id":56115,"modified_method":"public boolean match(SNode nodeToMatch) {\n      {\n        SNode nodeToMatch_x583g4_a0a0a61;\n        nodeToMatch_x583g4_a0a0a61 = nodeToMatch;\n        if (!(\"jetbrains.mps.baseLanguage.structure.AndExpression\".equals(nodeToMatch_x583g4_a0a0a61.getConceptFqName()))) {\n          return false;\n        }\n        {\n          String childRole_x583g4__4 = \"leftExpression\";\n          if (nodeToMatch_x583g4_a0a0a61.getChildCount(childRole_x583g4__4) != 1) {\n            return false;\n          }\n          {\n            this.PatternVar_left = null;\n            SNode childVar_x583g4_a0a0a0q = nodeToMatch_x583g4_a0a0a61.getChildren(childRole_x583g4__4).get(0);\n            this.PatternVar_left = childVar_x583g4_a0a0a0q;\n          }\n        }\n        {\n          String childRole_x583g4__5 = \"rightExpression\";\n          if (nodeToMatch_x583g4_a0a0a61.getChildCount(childRole_x583g4__5) != 1) {\n            return false;\n          }\n          {\n            this.PatternVar_right = null;\n            SNode childVar_x583g4_a0a0a0q_0 = nodeToMatch_x583g4_a0a0a61.getChildren(childRole_x583g4__5).get(0);\n            this.PatternVar_right = childVar_x583g4_a0a0a0q_0;\n          }\n        }\n      }\n      return true;\n    }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Object getFieldValue(String fieldName) {\n      if (\"PatternVar_right\".equals(fieldName)) {\n        return this.PatternVar_right;\n      }\n      if (\"PatternVar_left\".equals(fieldName)) {\n        return this.PatternVar_left;\n      }\n      return null;\n    }","id":56116,"modified_method":"public Object getFieldValue(String fieldName) {\n      if (\"PatternVar_left\".equals(fieldName)) {\n        return this.PatternVar_left;\n      }\n      if (\"PatternVar_right\".equals(fieldName)) {\n        return this.PatternVar_right;\n      }\n      return null;\n    }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {\n      if (!(!(pattern != null) || pattern.getClass() != this.getClass())) {\n        this.PatternVar_right = (SNode) pattern.getFieldValue(\"PatternVar_right\");\n        this.PatternVar_left = (SNode) pattern.getFieldValue(\"PatternVar_left\");\n      }\n    }","id":56117,"modified_method":"public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {\n      if (!(!(pattern != null) || pattern.getClass() != this.getClass())) {\n        this.PatternVar_left = (SNode) pattern.getFieldValue(\"PatternVar_left\");\n        this.PatternVar_right = (SNode) pattern.getFieldValue(\"PatternVar_right\");\n      }\n    }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static GeneratedMatchingPattern patternRule_Condition_2681305894288275225(final IOperationContext operationContext, final BaseMappingRuleContext _context) {\n    GeneratedMatchingPattern pattern = new QueriesGenerated.Pattern_x583g4_a0a0a51();\n    if (!(pattern.match(_context.getNode()))) {\n      return null;\n    }\n    return pattern;\n  }","id":56118,"modified_method":"public static GeneratedMatchingPattern patternRule_Condition_2681305894288275225(final IOperationContext operationContext, final BaseMappingRuleContext _context) {\n    GeneratedMatchingPattern pattern = new QueriesGenerated.Pattern_x583g4_a0a0a61();\n    if (!(pattern.match(_context.getNode()))) {\n      return null;\n    }\n    return pattern;\n  }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {\n      if (!(!(pattern != null) || pattern.getClass() != this.getClass())) {\n        this.PatternVar_left = (SNode) pattern.getFieldValue(\"PatternVar_left\");\n        this.PatternVar_right = (SNode) pattern.getFieldValue(\"PatternVar_right\");\n      }\n    }","id":56119,"modified_method":"public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {\n      if (!(!(pattern != null) || pattern.getClass() != this.getClass())) {\n        this.PatternVar_right = (SNode) pattern.getFieldValue(\"PatternVar_right\");\n        this.PatternVar_xx = (SNode) pattern.getFieldValue(\"PatternVar_xx\");\n        this.PatternVar_yy = (SNode) pattern.getFieldValue(\"PatternVar_yy\");\n      }\n    }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static GeneratedMatchingPattern patternRule_Condition_4146564171992608883(final IOperationContext operationContext, final BaseMappingRuleContext _context) {\n    GeneratedMatchingPattern pattern = new QueriesGenerated.Pattern_x583g4_a0a0a41();\n    if (!(pattern.match(_context.getNode()))) {\n      return null;\n    }\n    _context.setContext(new TemplateContext(pattern, null));\n    if (!(baseMappingRule_Condition_4112907264514778044(operationContext, _context))) {\n      return null;\n    }\n    return pattern;\n  }","id":56120,"modified_method":"public static GeneratedMatchingPattern patternRule_Condition_4146564171992608883(final IOperationContext operationContext, final BaseMappingRuleContext _context) {\n    GeneratedMatchingPattern pattern = new QueriesGenerated.Pattern_x583g4_a0a0a51();\n    if (!(pattern.match(_context.getNode()))) {\n      return null;\n    }\n    _context.setContext(new TemplateContext(pattern, null));\n    if (!(baseMappingRule_Condition_4112907264514778044(operationContext, _context))) {\n      return null;\n    }\n    return pattern;\n  }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Object getFieldValue(String fieldName) {\n      if (\"PatternVar_myExpr\".equals(fieldName)) {\n        return this.PatternVar_myExpr;\n      }\n      if (\"PatternVar_jobName\".equals(fieldName)) {\n        return this.PatternVar_jobName;\n      }\n      return null;\n    }","id":56121,"modified_method":"public Object getFieldValue(String fieldName) {\n      if (\"PatternVar_right\".equals(fieldName)) {\n        return this.PatternVar_right;\n      }\n      if (\"PatternVar_left\".equals(fieldName)) {\n        return this.PatternVar_left;\n      }\n      return null;\n    }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean match(SNode nodeToMatch) {\n      {\n        SNode nodeToMatch_x583g4_a0a0a71;\n        nodeToMatch_x583g4_a0a0a71 = nodeToMatch;\n        if (!(\"jetbrains.mps.transformation.test.outputLang.structure.CustomStatement\".equals(nodeToMatch_x583g4_a0a0a71.getConceptFqName()))) {\n          return false;\n        }\n        this.PatternVar_jobName = nodeToMatch_x583g4_a0a0a71.getProperty(\"name\");\n        {\n          String childRole_x583g4__9 = \"inner\";\n          if (nodeToMatch_x583g4_a0a0a71.getChildCount(childRole_x583g4__9) != 1) {\n            return false;\n          }\n          {\n            this.PatternVar_myExpr = null;\n            SNode childVar_x583g4_a0a0a0r = nodeToMatch_x583g4_a0a0a71.getChildren(childRole_x583g4__9).get(0);\n            this.PatternVar_myExpr = childVar_x583g4_a0a0a0r;\n          }\n        }\n      }\n      return true;\n    }","id":56122,"modified_method":"public boolean match(SNode nodeToMatch) {\n      {\n        SNode nodeToMatch_x583g4_a0a0a71;\n        nodeToMatch_x583g4_a0a0a71 = nodeToMatch;\n        if (!(\"jetbrains.mps.baseLanguage.structure.NotExpression\".equals(nodeToMatch_x583g4_a0a0a71.getConceptFqName()))) {\n          return false;\n        }\n        {\n          String childRole_x583g4__6 = \"expression\";\n          if (nodeToMatch_x583g4_a0a0a71.getChildCount(childRole_x583g4__6) != 1) {\n            return false;\n          }\n          {\n            SNode childVar_x583g4_a0a0a0r = nodeToMatch_x583g4_a0a0a71.getChildren(childRole_x583g4__6).get(0);\n            {\n              SNode nodeToMatch_x583g4_a0a0a0r;\n              nodeToMatch_x583g4_a0a0a0r = childVar_x583g4_a0a0a0r;\n              if (!(\"jetbrains.mps.baseLanguage.structure.EqualsExpression\".equals(nodeToMatch_x583g4_a0a0a0r.getConceptFqName()))) {\n                return false;\n              }\n              {\n                String childRole_x583g4__7 = \"leftExpression\";\n                if (nodeToMatch_x583g4_a0a0a0r.getChildCount(childRole_x583g4__7) != 1) {\n                  return false;\n                }\n                {\n                  this.PatternVar_left = null;\n                  SNode childVar_x583g4_a0a0a0a71 = nodeToMatch_x583g4_a0a0a0r.getChildren(childRole_x583g4__7).get(0);\n                  this.PatternVar_left = childVar_x583g4_a0a0a0a71;\n                }\n              }\n              {\n                String childRole_x583g4__8 = \"rightExpression\";\n                if (nodeToMatch_x583g4_a0a0a0r.getChildCount(childRole_x583g4__8) != 1) {\n                  return false;\n                }\n                {\n                  this.PatternVar_right = null;\n                  SNode childVar_x583g4_a0a0a0a71_0 = nodeToMatch_x583g4_a0a0a0r.getChildren(childRole_x583g4__8).get(0);\n                  this.PatternVar_right = childVar_x583g4_a0a0a0a71_0;\n                }\n              }\n            }\n          }\n        }\n      }\n      return true;\n    }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {\n      if (!(!(pattern != null) || pattern.getClass() != this.getClass())) {\n        this.PatternVar_myExpr = (SNode) pattern.getFieldValue(\"PatternVar_myExpr\");\n        this.PatternVar_jobName = (String) pattern.getFieldValue(\"PatternVar_jobName\");\n      }\n    }","id":56123,"modified_method":"public void fillFieldValuesFrom(GeneratedMatchingPattern pattern) {\n      if (!(!(pattern != null) || pattern.getClass() != this.getClass())) {\n        this.PatternVar_right = (SNode) pattern.getFieldValue(\"PatternVar_right\");\n        this.PatternVar_left = (SNode) pattern.getFieldValue(\"PatternVar_left\");\n      }\n    }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static GeneratedMatchingPattern patternRule_Condition_2681305894288486365(final IOperationContext operationContext, final BaseMappingRuleContext _context) {\n    GeneratedMatchingPattern pattern = new QueriesGenerated.Pattern_x583g4_a0a0a71();\n    if (!(pattern.match(_context.getNode()))) {\n      return null;\n    }\n    return pattern;\n  }","id":56124,"modified_method":"public static GeneratedMatchingPattern patternRule_Condition_2681305894288486365(final IOperationContext operationContext, final BaseMappingRuleContext _context) {\n    GeneratedMatchingPattern pattern = new QueriesGenerated.Pattern_x583g4_a0a0a81();\n    if (!(pattern.match(_context.getNode()))) {\n      return null;\n    }\n    return pattern;\n  }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static GeneratedMatchingPattern patternRule_Condition_2681305894288382558(final IOperationContext operationContext, final BaseMappingRuleContext _context) {\n    GeneratedMatchingPattern pattern = new QueriesGenerated.Pattern_x583g4_a0a0a61();\n    if (!(pattern.match(_context.getNode()))) {\n      return null;\n    }\n    return pattern;\n  }","id":56125,"modified_method":"public static GeneratedMatchingPattern patternRule_Condition_2681305894288382558(final IOperationContext operationContext, final BaseMappingRuleContext _context) {\n    GeneratedMatchingPattern pattern = new QueriesGenerated.Pattern_x583g4_a0a0a71();\n    if (!(pattern.match(_context.getNode()))) {\n      return null;\n    }\n    return pattern;\n  }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public TypesystemDescriptor() {\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CustomStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n  }","id":56126,"modified_method":"public TypesystemDescriptor() {\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CustomStatement_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CustomStatementRef_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n  }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public TypesystemDescriptor() {\n    {\n      InferenceRule_Runtime inferenceRule = new check_Weaving_MappingRule_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BaseMappingRule_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CreateRootRule_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ITemplateCall_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_PatternReduction_MappingRule_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_Root_MappingRule_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TemplateArgumentPatternVarRefExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TemplateDeclarationReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TemplateFunctionParameter_outputNode_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TemplateFunctionParameter_sourceNode_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_MappingConfiguration_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_NodeMacro_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_PropertyMacro_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ReferenceMacro_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_WeaveEach_RuleConsequence_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n  }","id":56127,"modified_method":"public TypesystemDescriptor() {\n    {\n      InferenceRule_Runtime inferenceRule = new check_Weaving_MappingRule_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_BaseMappingRule_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_CreateRootRule_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_ITemplateCall_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_PatternReduction_MappingRule_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_Root_MappingRule_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TemplateArgumentLinkPatternRefExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TemplateArgumentPatternVarRefExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TemplateArgumentPropertyPatternRefExpression_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TemplateDeclarationReference_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TemplateFunctionParameter_outputNode_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      InferenceRule_Runtime inferenceRule = new typeof_TemplateFunctionParameter_sourceNode_InferenceRule();\n      this.myInferenceRules.add(inferenceRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_MappingConfiguration_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_NodeMacro_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_PropertyMacro_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_ReferenceMacro_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n    {\n      NonTypesystemRule_Runtime nonTypesystemRule = new check_WeaveEach_RuleConsequence_NonTypesystemRule();\n      this.myNonTypesystemRules.add(nonTypesystemRule);\n    }\n  }","commit_id":"960cfb5bf2c4ceffe71189f96a1cacf2175059de","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static List<SNode> getActionsBuilders(SNode parentNode, SNode currentChild, SNode childConcept, IChildNodeSetter childSetter, IOperationContext context) {\n    SNode link = null;\n    if (childSetter instanceof DefaultChildNodeSetter) {\n      link = SNodeOperations.cast(((DefaultChildNodeSetter) childSetter).getLinkDeclaration(), \"jetbrains.mps.lang.structure.structure.LinkDeclaration\");\n    }\n\n    List<SNode> allBuilders = new ArrayList<SNode>();\n    List<Language> languages = SModelOperations.getLanguages(SNodeOperations.getModel(parentNode), context.getScope());\n    boolean wrapped = !(childSetter instanceof DefaultChildNodeSetter);\n    for (SNode actionsBuilder : ListSequence.fromList(getAllActionsBuilders(languages))) {\n      SNode applicableConcept = SLinkOperations.getTarget(actionsBuilder, \"applicableConcept\", false);\n      if (applicableConcept == null) {\n        continue;\n      }\n      if (SConceptOperations.isSubConceptOf(applicableConcept, NameUtil.nodeFQName(childConcept))) {\n        if (satisfiesPrecondition(actionsBuilder, parentNode, applicableConcept, link, currentChild, wrapped, context)) {\n          ListSequence.fromList(allBuilders).addElement(actionsBuilder);\n        }\n      }\n    }\n    return allBuilders;\n  }","id":56128,"modified_method":"public static List<SNode> getActionsBuilders(SNode parentNode, SNode currentChild, SNode childConcept, IChildNodeSetter childSetter, IOperationContext context) {\n    SNode link = null;\n    if (childSetter instanceof DefaultChildNodeSetter) {\n      link = SNodeOperations.cast(((DefaultChildNodeSetter) childSetter).getLinkDeclaration(), \"jetbrains.mps.lang.structure.structure.LinkDeclaration\");\n    }\n\n    List<SNode> allBuilders = new ArrayList<SNode>();\n    List<Language> languages = SModelOperations.getLanguages(SNodeOperations.getModel(parentNode), context.getScope());\n    boolean wrapped = !(childSetter instanceof DefaultChildNodeSetter);\n    for (SNode actionsBuilder : ListSequence.fromList(getAllActionsBuilders(languages))) {\n      SNode applicableConcept = SLinkOperations.getTarget(actionsBuilder, \"applicableConcept\", false);\n      if (applicableConcept == null) {\n        continue;\n      }\n      if (SConceptOperations.isSubConceptOf(applicableConcept, NameUtil.nodeFQName(childConcept)) || SConceptOperations.isSubConceptOf(childConcept, NameUtil.nodeFQName(applicableConcept))) {\n        if (satisfiesPrecondition(actionsBuilder, parentNode, applicableConcept, link, currentChild, wrapped, context)) {\n          ListSequence.fromList(allBuilders).addElement(actionsBuilder);\n        }\n      }\n    }\n    return allBuilders;\n  }","commit_id":"905d6e9a3153da156f0f909a48877bffc4cf0a69","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Test\n    public void testBasicAlignment() {\n        String md5 = \"34eb4323742999d6d250a0aaa803c6d5\";\n        WalkerTest.WalkerTestSpec spec = new WalkerTest.WalkerTestSpec(\n                \"-R /humgen/gsa-scr1/GATK_Data/bwa/human_b36_both.fasta\" +\n                        \" -T Align\" +\n                        \" -I \" + validationDataLocation + \"NA12878_Pilot1_20.trimmed.unmapped.bam\" +\n                        \" -ob %s\",\n                1, // just one output file\n                Arrays.asList(md5));\n        executeTest(\"testBasicAlignment\", spec);\n    }","id":56129,"modified_method":"@Test\n    public void testBasicAlignment() {\n        String md5 = \"34eb4323742999d6d250a0aaa803c6d5\";\n        WalkerTest.WalkerTestSpec spec = new WalkerTest.WalkerTestSpec(\n                \"-R /humgen/gsa-scr1/GATK_Data/bwa/human_b36_both.fasta\" +\n                        \" -T Align\" +\n                        \" -I \" + validationDataLocation + \"NA12878_Pilot1_20.trimmed.unmapped.bam\" +\n                        \" -o %s\",\n                1, // just one output file\n                Arrays.asList(md5));\n        executeTest(\"testBasicAlignment\", spec);\n    }","commit_id":"5e7a5cf924d6a45b648c06705813c3103b8175f8","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Creates a read directly from an alignment.\n     * @param alignment The alignment to convert to a read.\n     * @param unmappedRead Source of the unmapped read.  Should have bases, quality scores, and flags.\n     * @param newSAMHeader The new SAM header to use in creating this read.  Can be null, but if so, the sequence\n     *                     dictionary in the\n     * @return A mapped alignment.\n     */\n    public static SAMRecord convertToRead(Alignment alignment, SAMRecord unmappedRead, SAMFileHeader newSAMHeader) {\n        SAMRecord read;\n        try {\n            read = (SAMRecord)unmappedRead.clone();\n        }\n        catch(CloneNotSupportedException ex) {\n            throw new ReviewedStingException(\"Unable to create aligned read from template.\");\n        }\n\n        if(newSAMHeader != null)\n            read.setHeader(newSAMHeader);\n\n        if(alignment != null) {\n            read.setReadUmappedFlag(false);\n            read.setReferenceIndex(alignment.getContigIndex());\n            read.setAlignmentStart((int)alignment.getAlignmentStart());\n            read.setReadNegativeStrandFlag(alignment.isNegativeStrand());\n            read.setMappingQuality(alignment.getMappingQuality());\n            read.setCigar(alignment.getCigar());\n            if(alignment.isNegativeStrand()) {\n                read.setReadBases(BaseUtils.simpleReverseComplement(read.getReadBases()));\n                read.setBaseQualities(Utils.reverse(read.getBaseQualities()));\n            }\n            read.setAttribute(\"NM\",alignment.getEditDistance());\n            read.setAttribute(\"MD\",alignment.getMismatchingPositions());\n        }\n\n        return read;\n    }","id":56130,"modified_method":"/**\n     * Creates a read directly from an alignment.\n     * @param alignment The alignment to convert to a read.\n     * @param unmappedRead Source of the unmapped read.  Should have bases, quality scores, and flags.\n     * @param newSAMHeader The new SAM header to use in creating this read.  Can be null, but if so, the sequence\n     *                     dictionary in the\n     * @return A mapped alignment.\n     */\n    public static SAMRecord convertToRead(Alignment alignment, SAMRecord unmappedRead, SAMFileHeader newSAMHeader) {\n        SAMRecord read;\n        try {\n            read = (SAMRecord)unmappedRead.clone();\n        }\n        catch(CloneNotSupportedException ex) {\n            throw new ReviewedStingException(\"Unable to create aligned read from template.\");\n        }\n\n        if(newSAMHeader != null)\n            read.setHeader(newSAMHeader);\n\n        // If we're realigning a previously aligned record, strip out the placement of the alignment.\n        read.setReferenceName(SAMRecord.NO_ALIGNMENT_REFERENCE_NAME);\n        read.setAlignmentStart(SAMRecord.NO_ALIGNMENT_START);\n        read.setMateReferenceName(SAMRecord.NO_ALIGNMENT_REFERENCE_NAME);\n        read.setMateAlignmentStart(SAMRecord.NO_ALIGNMENT_START);        \n\n        if(alignment != null) {\n            read.setReadUmappedFlag(false);\n            read.setReferenceIndex(alignment.getContigIndex());\n            read.setAlignmentStart((int)alignment.getAlignmentStart());\n            read.setReadNegativeStrandFlag(alignment.isNegativeStrand());\n            read.setMappingQuality(alignment.getMappingQuality());\n            read.setCigar(alignment.getCigar());\n            if(alignment.isNegativeStrand()) {\n                read.setReadBases(BaseUtils.simpleReverseComplement(read.getReadBases()));\n                read.setBaseQualities(Utils.reverse(read.getBaseQualities()));\n            }\n            read.setAttribute(\"NM\",alignment.getEditDistance());\n            read.setAttribute(\"MD\",alignment.getMismatchingPositions());\n        }\n\n        return read;\n    }","commit_id":"5e7a5cf924d6a45b648c06705813c3103b8175f8","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Aligns a read to the given reference.\n     * @param ref Reference over the read.  Read will most likely be unmapped, so ref will be null.\n     * @param read Read to align.\n     * @return Number of alignments found for this read.\n     */\n    @Override\n    public Integer map(ReferenceContext ref, SAMRecord read, ReadMetaDataTracker metaDataTracker) {\n        SAMRecord alignedRead = aligner.align(read,header);\n        if (outputBam != null) {\n            outputBam.addAlignment(alignedRead);\n        } else {\n            out.println(alignedRead.format());\n        }\n        return 1;\n    }","id":56131,"modified_method":"/**\n     * Aligns a read to the given reference.\n     * @param ref Reference over the read.  Read will most likely be unmapped, so ref will be null.\n     * @param read Read to align.\n     * @return Number of alignments found for this read.\n     */\n    @Override\n    public Integer map(ReferenceContext ref, SAMRecord read, ReadMetaDataTracker metaDataTracker) {\n        SAMRecord alignedRead = aligner.align(read,header);\n        out.addAlignment(alignedRead);\n        return 1;\n    }","commit_id":"5e7a5cf924d6a45b648c06705813c3103b8175f8","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Create an aligner object.  The aligner object will load and hold the BWT until close() is called.\n     */    \n    @Override\n    public void initialize() {\n        if(prefix == null)\n            prefix = getToolkit().getArguments().referenceFile.getAbsolutePath();        \n        BWTFiles bwtFiles = new BWTFiles(prefix);\n        BWAConfiguration configuration = new BWAConfiguration();\n        aligner = new BWACAligner(bwtFiles,configuration);\n\n        // Take the header of the SAM file, tweak it by adding in the reference dictionary and specifying that the target file is unsorted.\n        header = getToolkit().getSAMFileHeader().clone();\n        SAMSequenceDictionary referenceDictionary =\n                ReferenceSequenceFileFactory.getReferenceSequenceFile(getToolkit().getArguments().referenceFile).getSequenceDictionary();\n        header.setSequenceDictionary(referenceDictionary);\n        header.setSortOrder(SAMFileHeader.SortOrder.unsorted);\n\n        if (outputBamFile != null) {\n            SAMFileWriterFactory factory = new SAMFileWriterFactory();\n            outputBam = factory.makeBAMWriter(header, false, new File(outputBamFile), bamCompression);\n        }\n    }","id":56132,"modified_method":"/**\n     * Create an aligner object.  The aligner object will load and hold the BWT until close() is called.\n     */    \n    @Override\n    public void initialize() {\n        if(targetReferenceFile == null)\n            targetReferenceFile = getToolkit().getArguments().referenceFile;\n        BWTFiles bwtFiles = new BWTFiles(targetReferenceFile.getAbsolutePath());\n        BWAConfiguration configuration = new BWAConfiguration();\n        aligner = new BWACAligner(bwtFiles,configuration);\n\n        // Take the header of the SAM file, tweak it by adding in the reference dictionary and specifying that the target file is unsorted.\n        header = getToolkit().getSAMFileHeader().clone();\n        SAMSequenceDictionary referenceDictionary =\n                ReferenceSequenceFileFactory.getReferenceSequenceFile(targetReferenceFile).getSequenceDictionary();\n        header.setSequenceDictionary(referenceDictionary);\n        header.setSortOrder(SAMFileHeader.SortOrder.unsorted);\n\n        out.writeHeader(header);\n    }","commit_id":"5e7a5cf924d6a45b648c06705813c3103b8175f8","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Cleanup.\n     * @param result Number of reads processed.\n     */    \n    @Override\n    public void onTraversalDone(Integer result) {\n        aligner.close();\n        if (outputBam != null)\n            outputBam.close();\n        super.onTraversalDone(result);\n    }","id":56133,"modified_method":"/**\n     * Cleanup.\n     * @param result Number of reads processed.\n     */    \n    @Override\n    public void onTraversalDone(Integer result) {\n        aligner.close();\n        super.onTraversalDone(result);\n    }","commit_id":"5e7a5cf924d6a45b648c06705813c3103b8175f8","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * The reads map function.\n     *\n     * @param ref the reference bases that correspond to our read, if a reference was provided\n     * @param read the read itself, as a SAMRecord\n     * @return the read itself\n     */\n    public SAMRecord map( ReferenceContext ref, GATKSAMRecord read, ReadMetaDataTracker metaDataTracker ) {\n        return (random.nextDouble() < downsampleRatio) ? read : null;\n    }","id":56134,"modified_method":"/**\n     * The reads map function.\n     *\n     * @param ref  the reference bases that correspond to our read, if a reference was provided\n     * @param read the read itself, as a SAMRecord\n     * @return the read itself\n     */\n    public SAMRecord map( ReferenceContext ref, GATKSAMRecord read, ReadMetaDataTracker metaDataTracker ) {\n        return read;\n    }","commit_id":"cec7107762937832f4014f3df0830a45da4757d9","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * given a read and a output location, reduce by emitting the read\n     *\n     * @param read   the read itself\n     * @param output the output source\n     * @return the SAMFileWriter, so that the next reduce can emit to the same source\n     */\n    public SAMFileWriter reduce( SAMRecord read, SAMFileWriter output ) {\n        if (read != null)\n            output.addAlignment(read);\n        return output;\n    }","id":56135,"modified_method":"/**\n     * given a read and a output location, reduce by emitting the read\n     *\n     * @param read   the read itself\n     * @param output the output source\n     * @return the SAMFileWriter, so that the next reduce can emit to the same source\n     */\n    public SAMFileWriter reduce( SAMRecord read, SAMFileWriter output ) {\n        output.addAlignment(read);\n        return output;\n    }","commit_id":"cec7107762937832f4014f3df0830a45da4757d9","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * The reads filter function.\n     *\n     * @param ref  the reference bases that correspond to our read, if a reference was provided\n     * @param read the read itself, as a SAMRecord\n     * @return true if the read passes the filter, false if it doesn't\n     */\n    public boolean filter(ReferenceContext ref, GATKSAMRecord read) {\n        // check the read group\n        if  ( readGroup != null ) {\n            SAMReadGroupRecord myReadGroup = read.getReadGroup();\n            if ( myReadGroup == null || !readGroup.equals(myReadGroup.getReadGroupId()) )\n                return false;\n        }\n\n        // check the platform\n        if  ( platform != null ) {\n            SAMReadGroupRecord readGroup = read.getReadGroup();\n            if ( readGroup == null )\n                return false;\n\n            Object readPlatformAttr = readGroup.getAttribute(\"PL\");\n            if ( readPlatformAttr == null || !readPlatformAttr.toString().toUpperCase().contains(platform))\n                return false;\n        }\n        if (SAMPLES_SPECIFIED )  {\n            // user specified samples to select\n            // todo - should be case-agnostic  but for simplicity and speed this is ignored.\n            // todo - can check at initialization intersection of requested samples and samples in BAM header to further speedup.\n            if (!samplesToChoose.contains(read.getReadGroup().getSample()))\n                return false;\n        }\n\n\n        // check if we've reached the output limit\n        if ( nReadsToPrint == 0 ) {\n            return false;          // n == 0 means we've printed all we needed.\n        }\n        else if (nReadsToPrint > 0) {\n            nReadsToPrint--;       // n > 0 means there are still reads to be printed.\n        }\n\n        return true;\n\t}","id":56136,"modified_method":"/**\n     * The reads filter function.\n     *\n     * @param ref  the reference bases that correspond to our read, if a reference was provided\n     * @param read the read itself, as a SAMRecord\n     * @return true if the read passes the filter, false if it doesn't\n     */\n    public boolean filter(ReferenceContext ref, GATKSAMRecord read) {\n        // check the read group\n        if  ( readGroup != null ) {\n            SAMReadGroupRecord myReadGroup = read.getReadGroup();\n            if ( myReadGroup == null || !readGroup.equals(myReadGroup.getReadGroupId()) )\n                return false;\n        }\n\n        // check the platform\n        if  ( platform != null ) {\n            SAMReadGroupRecord readGroup = read.getReadGroup();\n            if ( readGroup == null )\n                return false;\n\n            Object readPlatformAttr = readGroup.getAttribute(\"PL\");\n            if ( readPlatformAttr == null || !readPlatformAttr.toString().toUpperCase().contains(platform))\n                return false;\n        }\n        if (SAMPLES_SPECIFIED )  {\n            // user specified samples to select\n            // todo - should be case-agnostic  but for simplicity and speed this is ignored.\n            // todo - can check at initialization intersection of requested samples and samples in BAM header to further speedup.\n            if (!samplesToChoose.contains(read.getReadGroup().getSample()))\n                return false;\n        }\n\n\n        // check if we've reached the output limit\n        if ( nReadsToPrint == 0 ) {\n            return false;          // n == 0 means we've printed all we needed.\n        }\n        else if (nReadsToPrint > 0) {\n            nReadsToPrint--;       // n > 0 means there are still reads to be printed.\n        }\n\n        // if downsample option is turned off (= 1) then don't waste time  getting the next random number.\n        return (downsampleRatio == 1 || random.nextDouble() < downsampleRatio);\n    }","commit_id":"cec7107762937832f4014f3df0830a45da4757d9","url":"https://github.com/broadgsa/gatk"},{"original_method":"private SAMRecord constructSAMRecord(RawRead rr, FourProbRead fpr, SAMFileHeader sfh, boolean isPaired, boolean isSecondEndOfPair) {\n        SAMRecord sr = new SAMRecord(sfh);\n\n        sr.setReadName(String.format(\"%s:%d:%d:%d:%d#0\", RUN_BARCODE, lane, tile, rr.getXCoordinate(), rr.getYCoordinate()));\n        sr.setReadUmappedFlag(true);\n        sr.setReadString(rr.getSequenceAsString());\n        sr.setBaseQualities(rr.getQuals());\n        sr.setAttribute(\"SQ\", fpr.getSQTag(rr));\n\n        sr.setReadPairedFlag(isPaired);\n        if (isPaired) {\n            sr.setMateUnmappedFlag(true);\n            sr.setFirstOfPairFlag(!isSecondEndOfPair);\n            sr.setSecondOfPairFlag(isSecondEndOfPair);\n        }\n\n        return sr;\n    }","id":56137,"modified_method":"private SAMRecord constructSAMRecord(RawRead rr, byte[] sqtag, SAMFileHeader sfh, boolean isPaired, boolean isSecondEndOfPair) {\n        SAMRecord sr = new SAMRecord(sfh);\n\n        sr.setReadName(String.format(\"%s:%d:%d:%d:%d#0\", RUN_BARCODE, lane, tile, rr.getXCoordinate(), rr.getYCoordinate()));\n        sr.setReadUmappedFlag(true);\n        sr.setReadString(rr.getSequenceAsString());\n        sr.setBaseQualities(rr.getQuals());\n        sr.setAttribute(\"SQ\", sqtag);\n\n        sr.setReadPairedFlag(isPaired);\n        if (isPaired) {\n            sr.setMateUnmappedFlag(true);\n            sr.setFirstOfPairFlag(!isSecondEndOfPair);\n            sr.setSecondOfPairFlag(isSecondEndOfPair);\n        }\n\n        return sr;\n    }","commit_id":"d412c5dc2fd685ff4cf35278a82538e55ec182b8","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void callBases(BasecallingReadModel model, ArrayList<Pair<Integer, Integer>> cycleRanges) {\n        SAMFileHeader sheader = new SAMFileHeader();\n        sheader.setSortOrder(SAMFileHeader.SortOrder.unsorted);\n        SAMFileWriter swriter =  new SAMFileWriterFactory().makeSAMOrBAMWriter(sheader, true, SAM_TILE_OUT);\n\n        IlluminaTile tileParser = new IlluminaTile(BUSTARD_DIR, lane, tile);\n\n        BasecallingStats bstats = new BasecallingStats();\n\n        for (RawRead rr : tileParser) {\n            FourProbRead fpr = model.call(rr);\n\n            for (int rangeIndex = 0; rangeIndex < cycleRanges.size(); rangeIndex++) {\n                FourProbRead fprEnd = fpr.getSubset(cycleRanges.get(rangeIndex).getFirst(), cycleRanges.get(rangeIndex).getSecond());\n                RawRead rrEnd = rr.getSubset(cycleRanges.get(rangeIndex).getFirst(), cycleRanges.get(rangeIndex).getSecond());\n\n                SAMRecord sr = constructSAMRecord(rrEnd, fprEnd, sheader, cycleRanges.size() > 1, rangeIndex == 1);\n\n                swriter.addAlignment(sr);\n            }\n\n            bstats.update(rr, fpr);\n            bstats.notifyOnInterval(10000);\n        }\n\n        bstats.notifyNow();\n\n        tileParser.close();\n        swriter.close();\n    }","id":56138,"modified_method":"private void callBases(SecondaryBaseAnnotator sba, ArrayList<Pair<Integer, Integer>> cycleRanges) {\n        SAMFileHeader sheader = new SAMFileHeader();\n        sheader.setSortOrder(SAMFileHeader.SortOrder.unsorted);\n        SAMFileWriter swriter =  new SAMFileWriterFactory().makeSAMOrBAMWriter(sheader, true, SAM_TILE_OUT);\n\n        IlluminaTile tileParser = new IlluminaTile(BUSTARD_DIR, lane, tile);\n\n        BasecallingStats bstats = new BasecallingStats();\n\n        for (RawRead rr : tileParser) {\n            bstats.update(rr, sba.getFourProbRead(rr));\n\n            byte[] sqtag = sba.getSqTagValue(rr);\n\n            SAMRecord sr = constructSAMRecord(rr, sqtag, sheader, false, false);\n\n            swriter.addAlignment(sr);\n        }\n\n        bstats.notifyNow();\n\n        tileParser.close();\n        swriter.close();\n    }","commit_id":"d412c5dc2fd685ff4cf35278a82538e55ec182b8","url":"https://github.com/broadgsa/gatk"},{"original_method":"protected int execute() {\n        ArrayList<Pair<Integer, Integer>> cycleRanges = getCycleRanges(CYCLE_RANGES);\n\n        System.out.printf(\"%s: Loading training set...\\n\", (new Date()).toString());\n        ArrayList<RawRead> trainingData = loadTrainingData();\n\n        System.out.printf(\"%s: Training model...\\n\", (new Date()).toString());\n        BasecallingReadModel model = new BasecallingReadModel(trainingData);\n\n        System.out.printf(\"%s: Calling bases...\\n\", (new Date()).toString());\n        callBases(model, cycleRanges);\n\n        System.out.println(\"Done.\");\n\n        return 0;\n    }","id":56139,"modified_method":"protected int execute() {\n        ArrayList<Pair<Integer, Integer>> cycleRanges = getCycleRanges(CYCLE_RANGES);\n        SecondaryBaseAnnotator sba = new SecondaryBaseAnnotator();\n\n        System.out.printf(\"%s: Loading training set...\\n\", (new Date()).toString());\n        loadTrainingData(sba);\n\n        System.out.printf(\"%s: Calling bases...\\n\", (new Date()).toString());\n        callBases(sba, cycleRanges);\n\n        System.out.println(\"Done.\");\n\n        return 0;\n    }","commit_id":"d412c5dc2fd685ff4cf35278a82538e55ec182b8","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * count all the events with the given options and return a map organizing\n     * the counts in a hierarchy from date > eventtype> count\n     *\n     *\n     * @param startTime events before this time will be excluded (seconds from\n     *                  unix epoch)\n     * @param endTime   events at or after this time will be excluded (seconds\n     *                  from unix epoch)\n     * @param filter    only events that pass this filter will be counted\n     * @param zoomLevel only events of this type or a subtype will be counted\n     *                  and the counts will be organized into bins for each of\n     *                  the subtypes of the given event type\n     *\n     * @return a map organizing the counts in a hierarchy from date > eventtype>\n     *         count\n     */\n    private Map<EventType, Long> countEvents(Long startTime, Long endTime, RootFilter filter, EventTypeZoomLevel zoomLevel) {\n        if (Objects.equals(startTime, endTime)) {\n            endTime++;\n        }\n\n        Map<EventType, Long> typeMap = new HashMap<>();\n\n        //do we want the root or subtype column of the databse\n        final boolean useSubTypes = (zoomLevel == EventTypeZoomLevel.SUB_TYPE);\n\n        //get some info about the range of dates requested\n        final String queryString = \"select count(*), \" + useSubTypeHelper(useSubTypes)\n                + \" from events\" + useHashHitTablesHelper(filter) + \" where time >= \" + startTime + \" and time < \" + endTime + \" and \" + SQLHelper.getSQLWhere(filter) // NON-NLS\n                + \" GROUP BY \" + useSubTypeHelper(useSubTypes); // NON-NLS\n\n        ResultSet rs = null;\n        DBLock.lock();\n        try (Statement stmt = con.createStatement();) {\n            while (rs.next()) {\n\n                EventType type = useSubTypes\n                        ? RootEventType.allTypes.get(rs.getInt(\"sub_type\"))\n                        : BaseTypes.values()[rs.getInt(\"base_type\")];\n\n                typeMap.put(type, rs.getLong(\"count(*)\")); // NON-NLS\n            }\n\n        } catch (Exception ex) {\n            LOGGER.log(Level.SEVERE, \"error getting count of events from db.\", ex); // NON-NLS\n        } finally {\n            try {\n                rs.close();\n            } catch (SQLException ex) {\n                Exceptions.printStackTrace(ex);\n            }\n            DBLock.unlock();\n        }\n        return typeMap;\n    }","id":56140,"modified_method":"/**\n     * count all the events with the given options and return a map organizing\n     * the counts in a hierarchy from date > eventtype> count\n     *\n     *\n     * @param startTime events before this time will be excluded (seconds from\n     *                  unix epoch)\n     * @param endTime   events at or after this time will be excluded (seconds\n     *                  from unix epoch)\n     * @param filter    only events that pass this filter will be counted\n     * @param zoomLevel only events of this type or a subtype will be counted\n     *                  and the counts will be organized into bins for each of\n     *                  the subtypes of the given event type\n     *\n     * @return a map organizing the counts in a hierarchy from date > eventtype>\n     *         count\n     */\n    private Map<EventType, Long> countEvents(Long startTime, Long endTime, RootFilter filter, EventTypeZoomLevel zoomLevel) {\n        if (Objects.equals(startTime, endTime)) {\n            endTime++;\n        }\n\n        Map<EventType, Long> typeMap = new HashMap<>();\n\n        //do we want the root or subtype column of the databse\n        final boolean useSubTypes = (zoomLevel == EventTypeZoomLevel.SUB_TYPE);\n\n        //get some info about the range of dates requested\n        final String queryString = \"select count(*), \" + useSubTypeHelper(useSubTypes)\n                + \" from events\" + useHashHitTablesHelper(filter) + \" where time >= \" + startTime + \" and time < \" + endTime + \" and \" + SQLHelper.getSQLWhere(filter) // NON-NLS\n                + \" GROUP BY \" + useSubTypeHelper(useSubTypes); // NON-NLS\n\n        DBLock.lock();\n        try (Statement stmt = con.createStatement();\n                ResultSet rs = stmt.executeQuery(queryString);) {\n            while (rs.next()) {\n                EventType type = useSubTypes\n                        ? RootEventType.allTypes.get(rs.getInt(\"sub_type\"))\n                        : BaseTypes.values()[rs.getInt(\"base_type\")];\n\n                typeMap.put(type, rs.getLong(\"count(*)\")); // NON-NLS\n            }\n\n        } catch (Exception ex) {\n            LOGGER.log(Level.SEVERE, \"Error getting count of events from db.\", ex); // NON-NLS\n        } finally {\n            DBLock.unlock();\n        }\n        return typeMap;\n    }","commit_id":"685934fa55d3155ef777687fdad0b8cd9daee89b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public EventsRepository(Case autoCase, ReadOnlyObjectProperty<ZoomParams> currentStateProperty) {\n        this.autoCase = autoCase;\n        //TODO: we should check that case is open, or get passed a case object/directory -jm\n        this.eventDB = EventDB.getEventDB(autoCase);\n        populateFilterMaps(autoCase.getSleuthkitCase());\n        idToEventCache = CacheBuilder.newBuilder().maximumSize(5000L).expireAfterAccess(10, TimeUnit.MINUTES).removalListener((RemovalNotification<Long, TimeLineEvent> rn) -> {\n//            LOGGER.log(Level.INFO, \"evicting event: {0}\", rn.toString());\n        }).build(CacheLoader.from(eventDB::getEventById));\n        eventCountsCache = CacheBuilder.newBuilder().maximumSize(1000L).expireAfterAccess(10, TimeUnit.MINUTES).removalListener((RemovalNotification<ZoomParams, Map<EventType, Long>> rn) -> {\n            //LOGGER.log(Level.INFO, \"evicting counts: {0}\", rn.toString());\n        }).build(CacheLoader.from(eventDB::countEventsByType));\n        aggregateEventsCache = CacheBuilder.newBuilder().maximumSize(1000L).expireAfterAccess(10, TimeUnit.MINUTES).removalListener((RemovalNotification<ZoomParams, List<AggregateEvent>> rn) -> {\n//            LOGGER.log(Level.INFO, \"evicting aggregated events: {0}\", rn.toString());\n        }).build(CacheLoader.from(eventDB::getAggregatedEvents));\n        maxCache = CacheBuilder.newBuilder().build(CacheLoader.from(eventDB::getMaxTime));\n        minCache = CacheBuilder.newBuilder().build(CacheLoader.from(eventDB::getMinTime));\n        this.modelInstance = new FilteredEventsModel(this, currentStateProperty);\n    }","id":56141,"modified_method":"public EventsRepository(Case autoCase, ReadOnlyObjectProperty<ZoomParams> currentStateProperty) {\n        this.autoCase = autoCase;\n        //TODO: we should check that case is open, or get passed a case object/directory -jm\n        this.eventDB = EventDB.getEventDB(autoCase);\n        populateFilterMaps(autoCase.getSleuthkitCase());\n        idToEventCache = CacheBuilder.newBuilder()\n                .maximumSize(5000L)\n                .expireAfterAccess(10, TimeUnit.MINUTES)\n                .build(CacheLoader.from(eventDB::getEventById));\n        eventCountsCache = CacheBuilder.newBuilder()\n                .maximumSize(1000L)\n                .expireAfterAccess(10, TimeUnit.MINUTES)\n                .build(CacheLoader.from(eventDB::countEventsByType));\n        aggregateEventsCache = CacheBuilder.newBuilder()\n                .maximumSize(1000L)\n                .expireAfterAccess(10, TimeUnit.MINUTES\n                ).build(CacheLoader.from(eventDB::getAggregatedEvents));\n        maxCache = CacheBuilder.newBuilder().build(CacheLoader.from(eventDB::getMaxTime));\n        minCache = CacheBuilder.newBuilder().build(CacheLoader.from(eventDB::getMinTime));\n        this.modelInstance = new FilteredEventsModel(this, currentStateProperty);\n    }","commit_id":"685934fa55d3155ef777687fdad0b8cd9daee89b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public Set<Long> getEventIDs() {\n        return eventIDs;\n    }","id":56142,"modified_method":"public Set<Long> getEventIDs() {\n        return Collections.unmodifiableSet(eventIDs);\n    }","commit_id":"685934fa55d3155ef777687fdad0b8cd9daee89b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public Set<Long> getEventIDs() {\n        return eventIDs;\n    }","id":56143,"modified_method":"public Set<Long> getEventIDs() {\n        return Collections.unmodifiableSet(eventIDs);\n    }","commit_id":"685934fa55d3155ef777687fdad0b8cd9daee89b","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public void registerGlobalServices(ServiceRegistration registration) {\n        registration.addProvider(new Object() {\n            ClassDirectoryBinaryRenderer createClassBinaryRenderer() {\n                return new ClassDirectoryBinaryRenderer();\n            }\n        });\n    }","id":56144,"modified_method":"public void registerGlobalServices(ServiceRegistration registration) {\n        registration.add(ClassDirectoryBinaryRenderer.class);\n    }","commit_id":"f1d711e3ca6d5a084041dbb5c6d58d2ec85e4e52","url":"https://github.com/gradle/gradle"},{"original_method":"public void registerGlobalServices(ServiceRegistration registration) {\n        registration.addProvider(new Object() {\n            JarBinaryRenderer createJarBinaryRenderer() {\n                return new JarBinaryRenderer();\n            }\n        });\n    }","id":56145,"modified_method":"public void registerGlobalServices(ServiceRegistration registration) {\n        registration.add(JarBinaryRenderer.class);\n    }","commit_id":"f1d711e3ca6d5a084041dbb5c6d58d2ec85e4e52","url":"https://github.com/gradle/gradle"},{"original_method":"public void registerGlobalServices(ServiceRegistration registration) {\n        registration.addProvider(new Object() {\n            PlayApplicationBinaryRenderer createBinaryRenderer() {\n                return new PlayApplicationBinaryRenderer();\n            }\n        });\n    }","id":56146,"modified_method":"public void registerGlobalServices(ServiceRegistration registration) {\n        registration.add(PlayApplicationBinaryRenderer.class);\n    }","commit_id":"f1d711e3ca6d5a084041dbb5c6d58d2ec85e4e52","url":"https://github.com/gradle/gradle"},{"original_method":"private PsiMethod getSyntheticMethod(String text) {\n    PsiElementFactory factory = JavaPsiFacade.getInstance(myClass.getProject()).getElementFactory();\n    PsiMethod method = factory.createMethodFromText(text, myClass);\n    return new LightMethod(myClass.getManager(), method, myClass) {\n      @Override\n      public int getTextOffset() {\n        return myClass.getTextOffset();\n      }\n    };\n  }","id":56147,"modified_method":"private PsiMethod getSyntheticMethod(String text) {\n    PsiElementFactory factory = JavaPsiFacade.getInstance(myClass.getProject()).getElementFactory();\n    LightMethod method = new LightMethod(myClass.getManager(), factory.createMethodFromText(text, myClass), myClass);\n    method.setNavigationElement(myClass);\n    return method;\n  }","commit_id":"32a437d608af377399817d2f48b4aea8cbddfed6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private PsiMethod getSyntheticMethod(String text) {\n    PsiElementFactory factory = JavaPsiFacade.getInstance(myClass.getProject()).getElementFactory();\n    LightMethod method = new LightMethod(myClass.getManager(), factory.createMethodFromText(text, myClass), myClass);\n    method.setNavigationElement(myClass);\n    return method;\n  }","id":56148,"modified_method":"private PsiMethod getSyntheticMethod(String text) {\n    PsiElementFactory factory = JavaPsiFacade.getInstance(myClass.getProject()).getElementFactory();\n    PsiMethod method = factory.createMethodFromText(text, myClass);\n    return new LightMethod(myClass.getManager(), method, myClass) {\n      @Override\n      public int getTextOffset() {\n        return myClass.getTextOffset();\n      }\n    };\n  }","commit_id":"edaab5124ef8cb1ea2dbedaffd66f30416d1a604","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean validateNewStepDefinitionFileName(@NotNull Project project, @NotNull String fileName) {\n    return fileName.endsWith(\"MyStepdefs.java\");\n  }","id":56149,"modified_method":"@Override\n  public boolean validateNewStepDefinitionFileName(@NotNull Project project, @NotNull String fileName) {\n    return fileName.toLowerCase(Locale.ENGLISH).endsWith(\"stepdefs\");\n  }","commit_id":"d198e0d4e617b36d8cd6288b95e93af8bb825ba9","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private PsiMethod buildStepDefinitionByStep(@NotNull final GherkinStep step) {\n    final PsiElementFactory factory = JavaPsiFacade.getInstance(step.getProject()).getElementFactory();\n    final Step cucumberStep = new Step(new ArrayList<Comment>(), step.getKeyword().getText(), step.getStepName(), 0, null, null);\n    final StringBuilder snippet =  new StringBuilder(new SnippetGenerator(new JavaSnippet()).getSnippet(cucumberStep).replace(\"PendingException\", \"cucumber.runtime.PendingException\"));\n    snippet.insert(1, \"cucumber.annotation.en.\");\n\n    final PsiMethod element = factory.createMethodFromText(snippet.toString(), step);\n    return element;\n  }","id":56150,"modified_method":"private static PsiMethod buildStepDefinitionByStep(@NotNull final GherkinStep step) {\n    final PsiElementFactory factory = JavaPsiFacade.getInstance(step.getProject()).getElementFactory();\n    final Step cucumberStep = new Step(new ArrayList<Comment>(), step.getKeyword().getText(), step.getStepName(), 0, null, null);\n    final StringBuilder snippet =  new StringBuilder(new SnippetGenerator(new JavaSnippet()).getSnippet(cucumberStep).replace(\"PendingException\", \"cucumber.runtime.PendingException\"));\n    snippet.insert(1, \"cucumber.annotation.en.\");\n\n    return factory.createMethodFromText(snippet.toString(), step);\n  }","commit_id":"d198e0d4e617b36d8cd6288b95e93af8bb825ba9","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public boolean createStepDefinition(@NotNull GherkinStep step, @NotNull PsiFile file) {\n    if (!(file instanceof PsiJavaFile)) {\n      return false;\n    }\n\n    final Project project = file.getProject();\n    final VirtualFile vFile = file.getVirtualFile();\n    final OpenFileDescriptor descriptor = new OpenFileDescriptor(project, vFile);\n    FileEditorManager.getInstance(project).getAllEditors(vFile);\n    FileEditorManager.getInstance(project).openTextEditor(descriptor, true);\n    final Editor editor = FileEditorManager.getInstance(project).getSelectedTextEditor();\n\n    if (editor != null) {\n      final TemplateManager templateManager = TemplateManager.getInstance(file.getProject());\n      final TemplateState templateState = TemplateManagerImpl.getTemplateState(editor);\n      final Template template = templateManager.getActiveTemplate(editor);\n      if (templateState != null && template != null) {\n        templateState.gotoEnd();\n      }\n    }\n\n    // snippet text\n    final PsiMethod element = buildStepDefinitionByStep(step);\n\n    PsiClass clazz = PsiTreeUtil.getChildOfType(file, PsiClass.class);\n    if (clazz != null) {\n      PsiMethod addedElement = (PsiMethod)clazz.add(element);\n      addedElement = CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(addedElement);\n    }\n\n    //final RCall call = (RCall)addedElement.getCall();\n    //final RRegexpLiteral regexpLiteral = (RRegexpLiteral)call.getArguments().get(0);\n    //final int regexpLiteralLength = regexpLiteral.getTextLength();\n    //\n    //final List<RPsiElement> statements = addedElement.getBlock().getCompoundStatement().getStatements();\n    //\n    //final TemplateBuilder builder = TemplateBuilderFactory.getInstance().createTemplateBuilder(addedElement);\n    //\n    //// regexp str\n    //builder.replaceElement(regexpLiteral,\n    //                       new TextRange(2, regexpLiteralLength - 2),\n    //                       regexpLiteral.getText().substring(2, regexpLiteralLength - 2));\n    //\n    //// block vars\n    //final RBlockVariables blockVars = addedElement.getBlock().getBlockVariables();\n    //if (blockVars != null) {\n    //  final List<RIdentifier> varsList = blockVars.getVariables();\n    //  for (RIdentifier var : varsList) {\n    //    builder.replaceElement(var, var.getText());\n    //  }\n    //}\n    //\n    //// pending\n    //builder.replaceElement(statements.get(0), \"pending\");\n    //builder.run();\n\n    return true;\n\n  }","id":56151,"modified_method":"@Override\n  public boolean createStepDefinition(@NotNull GherkinStep step, @NotNull PsiFile file) {\n    if (!(file instanceof PsiJavaFile)) return false;\n\n    final Project project = file.getProject();\n    final VirtualFile vFile = ObjectUtils.assertNotNull(file.getVirtualFile());\n    final OpenFileDescriptor descriptor = new OpenFileDescriptor(project, vFile);\n    FileEditorManager.getInstance(project).getAllEditors(vFile);\n    FileEditorManager.getInstance(project).openTextEditor(descriptor, true);\n    final Editor editor = FileEditorManager.getInstance(project).getSelectedTextEditor();\n\n    if (editor != null) {\n      final TemplateManager templateManager = TemplateManager.getInstance(file.getProject());\n      final TemplateState templateState = TemplateManagerImpl.getTemplateState(editor);\n      final Template template = templateManager.getActiveTemplate(editor);\n      if (templateState != null && template != null) {\n        templateState.gotoEnd();\n      }\n    }\n\n    // snippet text\n    final PsiMethod element = buildStepDefinitionByStep(step);\n\n    PsiClass clazz = PsiTreeUtil.getChildOfType(file, PsiClass.class);\n    if (clazz != null) {\n      PsiMethod addedElement = (PsiMethod)clazz.add(element);\n      addedElement = CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(addedElement);\n      JavaCodeStyleManager.getInstance(project).shortenClassReferences(addedElement);\n    }\n\n    //final RCall call = (RCall)addedElement.getCall();\n    //final RRegexpLiteral regexpLiteral = (RRegexpLiteral)call.getArguments().get(0);\n    //final int regexpLiteralLength = regexpLiteral.getTextLength();\n    //\n    //final List<RPsiElement> statements = addedElement.getBlock().getCompoundStatement().getStatements();\n    //\n    //final TemplateBuilder builder = TemplateBuilderFactory.getInstance().createTemplateBuilder(addedElement);\n    //\n    //// regexp str\n    //builder.replaceElement(regexpLiteral,\n    //                       new TextRange(2, regexpLiteralLength - 2),\n    //                       regexpLiteral.getText().substring(2, regexpLiteralLength - 2));\n    //\n    //// block vars\n    //final RBlockVariables blockVars = addedElement.getBlock().getBlockVariables();\n    //if (blockVars != null) {\n    //  final List<RIdentifier> varsList = blockVars.getVariables();\n    //  for (RIdentifier var : varsList) {\n    //    builder.replaceElement(var, var.getText());\n    //  }\n    //}\n    //\n    //// pending\n    //builder.replaceElement(statements.get(0), \"pending\");\n    //builder.run();\n\n    return true;\n\n  }","commit_id":"d198e0d4e617b36d8cd6288b95e93af8bb825ba9","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  @Override\n  public PsiFile createStepDefinitionContainer(@NotNull PsiDirectory dir, @NotNull String name) {\n    return null;  //To change body of implemented methods use File | Settings | File Templates.\n  }","id":56152,"modified_method":"@NotNull\n  @Override\n  public PsiFile createStepDefinitionContainer(@NotNull PsiDirectory dir, @NotNull String name) {\n    PsiClass newClass = CreateClassUtil.createClassNamed(name, CreateClassUtil.DEFAULT_CLASS_TEMPLATE, dir);\n    assert newClass != null;\n    return newClass.getContainingFile();\n  }","commit_id":"d198e0d4e617b36d8cd6288b95e93af8bb825ba9","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n  @Override\n  public PsiDirectory getDefaultStepDefinitionFolder(@NotNull GherkinStep step) {\n    final PsiFile featureFile = step.getContainingFile();\n    PsiDirectory dir = featureFile.getParent();\n    return dir;\n  }","id":56153,"modified_method":"@NotNull\n  @Override\n  public PsiDirectory getDefaultStepDefinitionFolder(@NotNull GherkinStep step) {\n    final PsiFile featureFile = step.getContainingFile();\n    return ObjectUtils.assertNotNull(featureFile.getParent());\n  }","commit_id":"d198e0d4e617b36d8cd6288b95e93af8bb825ba9","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Nullable\n  private static PsiMethod generateStaticFactory(@Nullable PsiMethod constructor,\n                                                 PsiClass containingClass,\n                                                 PsiTypeParameter[] params,\n                                                 PsiJavaCodeReferenceElement reference) {\n    final StringBuilder buf = new StringBuilder();\n    buf.append(\"public static \");\n    buf.append(\"<\");\n    buf.append(StringUtil.join(params, new Function<PsiTypeParameter, String>() {\n      @Override\n      public String fun(PsiTypeParameter psiTypeParameter) {\n        final String extendsList = psiTypeParameter.getLanguage().isKindOf(JavaLanguage.INSTANCE) ? psiTypeParameter.getExtendsList().getText() : null;\n        return psiTypeParameter.getName() + (StringUtil.isEmpty(extendsList) ? \"\" : \" \" + extendsList);\n      }\n    }, \", \"));\n    buf.append(\">\");\n\n    final PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(containingClass.getProject());\n\n    String qualifiedName = containingClass.getQualifiedName();\n\n    PsiElement qualifier = reference != null ? reference.getQualifier() : null;\n    if (qualifier instanceof PsiJavaCodeReferenceElement) {\n      final JavaResolveResult resolveResult = ((PsiJavaCodeReferenceElement)qualifier).advancedResolve(false);\n      final PsiElement element = resolveResult.getElement();\n      if (element instanceof PsiClass) {\n        final String outerClassSubstitutedQName =\n          elementFactory.createType((PsiClass)element, resolveResult.getSubstitutor()).getInternalCanonicalText();\n        qualifiedName = outerClassSubstitutedQName + \".\" + containingClass.getName();\n      }\n    } else if (reference != null && qualifier == null && containingClass.getContainingClass() != null) {\n      qualifiedName = null;\n    }\n\n    buf.append(qualifiedName != null ? qualifiedName : containingClass.getName());\n    final PsiTypeParameter[] parameters = containingClass.getTypeParameters();\n    buf.append(\"<\");\n    buf.append(StringUtil.join(parameters, new Function<PsiTypeParameter, String>() {\n      @Override\n      public String fun(PsiTypeParameter psiTypeParameter) {\n        return psiTypeParameter.getName();\n      }\n    }, \", \"));\n    buf.append(\"> \");\n\n    String staticFactoryName = \"staticFactory\";\n    final JavaCodeStyleManager styleManager = JavaCodeStyleManager.getInstance(containingClass.getProject());\n    staticFactoryName = styleManager.suggestUniqueVariableName(staticFactoryName, containingClass, false);\n    buf.append(staticFactoryName);\n    if (constructor == null) {\n      buf.append(\"()\");\n    }\n    else {\n      buf.append(\"(\").append(StringUtil.join(constructor.getParameterList().getParameters(), new Function<PsiParameter, String>() {\n        int myIdx = 0;\n        @Override\n        public String fun(PsiParameter psiParameter) {\n          return psiParameter.getType().getCanonicalText() + \" p\" + myIdx++;\n        }\n      }, \",\")).append(\")\");\n    }\n    buf.append(\"{}\");\n\n    try {\n      final PsiNameIdentifierOwner owner = constructor != null ? constructor : containingClass;\n      return elementFactory.createMethodFromText(buf.toString(), owner instanceof PsiCompiledElement ? ((PsiCompiledElement)owner).getMirror() : owner);\n    }\n    catch (IncorrectOperationException e) {\n      return null;\n    }\n  }","id":56154,"modified_method":"@Nullable\n  private static PsiMethod generateStaticFactory(@Nullable PsiMethod constructor,\n                                                 PsiClass containingClass,\n                                                 PsiTypeParameter[] params,\n                                                 PsiJavaCodeReferenceElement reference) {\n    final StringBuilder buf = new StringBuilder();\n    buf.append(\"public static \");\n    buf.append(\"<\");\n    buf.append(StringUtil.join(params, new Function<PsiTypeParameter, String>() {\n      @Override\n      public String fun(PsiTypeParameter psiTypeParameter) {\n        final String extendsList = psiTypeParameter.getLanguage().isKindOf(JavaLanguage.INSTANCE) ? psiTypeParameter.getExtendsList().getText() : null;\n        return psiTypeParameter.getName() + (StringUtil.isEmpty(extendsList) ? \"\" : \" \" + extendsList);\n      }\n    }, \", \"));\n    buf.append(\">\");\n\n    final PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(containingClass.getProject());\n\n    String qualifiedName = containingClass.getQualifiedName();\n\n    PsiElement qualifier = reference != null ? reference.getQualifier() : null;\n    if (qualifier instanceof PsiJavaCodeReferenceElement) {\n      final JavaResolveResult resolveResult = ((PsiJavaCodeReferenceElement)qualifier).advancedResolve(false);\n      final PsiElement element = resolveResult.getElement();\n      if (element instanceof PsiClass) {\n        final String outerClassSubstitutedQName =\n          elementFactory.createType((PsiClass)element, resolveResult.getSubstitutor()).getInternalCanonicalText();\n        qualifiedName = outerClassSubstitutedQName + \".\" + containingClass.getName();\n      }\n    } else if (reference != null && qualifier == null && containingClass.getContainingClass() != null) {\n      qualifiedName = null;\n    }\n\n    buf.append(qualifiedName != null ? qualifiedName : containingClass.getName());\n    final PsiTypeParameter[] parameters = containingClass.getTypeParameters();\n    buf.append(\"<\");\n    buf.append(StringUtil.join(parameters, new Function<PsiTypeParameter, String>() {\n      @Override\n      public String fun(PsiTypeParameter psiTypeParameter) {\n        return psiTypeParameter.getName();\n      }\n    }, \", \"));\n    buf.append(\"> \");\n\n    String staticFactoryName = \"staticFactory\";\n    final JavaCodeStyleManager styleManager = JavaCodeStyleManager.getInstance(containingClass.getProject());\n    staticFactoryName = styleManager.suggestUniqueVariableName(staticFactoryName, containingClass, false);\n    buf.append(staticFactoryName);\n    if (constructor == null) {\n      buf.append(\"()\");\n    }\n    else {\n      buf.append(\"(\").append(StringUtil.join(constructor.getParameterList().getParameters(), new Function<PsiParameter, String>() {\n        int myIdx = 0;\n        @Override\n        public String fun(PsiParameter psiParameter) {\n          return psiParameter.getType().getCanonicalText() + \" p\" + myIdx++;\n        }\n      }, \",\")).append(\")\");\n    }\n    buf.append(\"{}\");\n\n    try {\n      return elementFactory.createMethodFromText(buf.toString(), constructor != null ? constructor : containingClass);\n    }\n    catch (IncorrectOperationException e) {\n      return null;\n    }\n  }","commit_id":"a6218a4c11f665a89545c67960815407a2382c60","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void setUp() throws Exception {\n    super.setUp();\n    TestFixtureBuilder<IdeaProjectTestFixture> projectBuilder = IdeaTestFixtureFactory.getFixtureFactory().createFixtureBuilder(getName());\n    myFixture = JavaTestFixtureFactory.getFixtureFactory().createCodeInsightFixture(projectBuilder.getFixture());\n    myFixture.setTestDataPath(PathManagerEx.getTestDataPath() + \"/codeInsight/clsHighlighting\");\n    JavaModuleFixtureBuilder builder = projectBuilder.addModule(JavaModuleFixtureBuilder.class);\n    builder.setMockJdkLevel(JavaModuleFixtureBuilder.MockJdkLevel.jdk15);\n    myFixture.setUp();\n    myModule = builder.getFixture().getModule();\n  }","id":56155,"modified_method":"@Override\n  public void setUp() throws Exception {\n    super.setUp();\n    TestFixtureBuilder<IdeaProjectTestFixture> projectBuilder = IdeaTestFixtureFactory.getFixtureFactory().createFixtureBuilder(getName());\n    myFixture = JavaTestFixtureFactory.getFixtureFactory().createCodeInsightFixture(projectBuilder.getFixture());\n    myFixture.setTestDataPath(PathManagerEx.getTestDataPath() + \"/codeInsight/clsHighlighting\");\n    JavaModuleFixtureBuilder builder = projectBuilder.addModule(JavaModuleFixtureBuilder.class);\n    builder.setLanguageLevel(getLanguageLevel());\n    myFixture.setUp();\n    myModule = builder.getFixture().getModule();\n  }","commit_id":"f738b512a3f090bf1c154fdecb145c6843883a06","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doTest() {\n    String name = getTestName(false);\n    addLibrary(name + \".jar\");\n    myFixture.configureByFile(name + \".java\");\n    myFixture.checkHighlighting();\n  }","id":56156,"modified_method":"protected void doTest() {\n    String name = getTestName(false);\n    addLibrary(name + \".jar\");\n    myFixture.configureByFile(name + \".java\");\n    myFixture.checkHighlighting();\n  }","commit_id":"f738b512a3f090bf1c154fdecb145c6843883a06","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static PsiMethod generateStaticFactory(@Nullable PsiMethod constructor,\n                                                 PsiClass containingClass,\n                                                 PsiTypeParameter[] params,\n                                                 PsiJavaCodeReferenceElement reference) {\n    final StringBuilder buf = new StringBuilder();\n    buf.append(\"public static \");\n    buf.append(\"<\");\n    buf.append(StringUtil.join(params, new Function<PsiTypeParameter, String>() {\n      @Override\n      public String fun(PsiTypeParameter psiTypeParameter) {\n        final String extendsList = psiTypeParameter.getLanguage().isKindOf(JavaLanguage.INSTANCE) ? psiTypeParameter.getExtendsList().getText() : null;\n        return psiTypeParameter.getName() + (StringUtil.isEmpty(extendsList) ? \"\" : \" \" + extendsList);\n      }\n    }, \", \"));\n    buf.append(\">\");\n\n    final PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(containingClass.getProject());\n\n    String qualifiedName = containingClass.getQualifiedName();\n\n    PsiElement qualifier = reference != null ? reference.getQualifier() : null;\n    if (qualifier instanceof PsiJavaCodeReferenceElement) {\n      final JavaResolveResult resolveResult = ((PsiJavaCodeReferenceElement)qualifier).advancedResolve(false);\n      final PsiElement element = resolveResult.getElement();\n      if (element instanceof PsiClass) {\n        final String outerClassSubstitutedQName =\n          elementFactory.createType((PsiClass)element, resolveResult.getSubstitutor()).getInternalCanonicalText();\n        qualifiedName = outerClassSubstitutedQName + \".\" + containingClass.getName();\n      }\n    } else if (reference != null && qualifier == null && containingClass.getContainingClass() != null) {\n      qualifiedName = null;\n    }\n\n    buf.append(qualifiedName != null ? qualifiedName : containingClass.getName());\n    final PsiTypeParameter[] parameters = containingClass.getTypeParameters();\n    buf.append(\"<\");\n    buf.append(StringUtil.join(parameters, new Function<PsiTypeParameter, String>() {\n      @Override\n      public String fun(PsiTypeParameter psiTypeParameter) {\n        return psiTypeParameter.getName();\n      }\n    }, \", \"));\n    buf.append(\"> \");\n\n    String staticFactoryName = \"staticFactory\";\n    final JavaCodeStyleManager styleManager = JavaCodeStyleManager.getInstance(containingClass.getProject());\n    staticFactoryName = styleManager.suggestUniqueVariableName(staticFactoryName, containingClass, false);\n    buf.append(staticFactoryName);\n    if (constructor == null) {\n      buf.append(\"()\");\n    }\n    else {\n      buf.append(\"(\").append(StringUtil.join(constructor.getParameterList().getParameters(), new Function<PsiParameter, String>() {\n        int myIdx = 0;\n        @Override\n        public String fun(PsiParameter psiParameter) {\n          return psiParameter.getType().getCanonicalText() + \" p\" + myIdx++;\n        }\n      }, \",\")).append(\")\");\n    }\n    buf.append(\"{}\");\n\n    try {\n      return elementFactory.createMethodFromText(buf.toString(), constructor != null ? constructor : containingClass);\n    }\n    catch (IncorrectOperationException e) {\n      return null;\n    }\n  }","id":56157,"modified_method":"@Nullable\n  private static PsiMethod generateStaticFactory(@Nullable PsiMethod constructor,\n                                                 PsiClass containingClass,\n                                                 PsiTypeParameter[] params,\n                                                 PsiJavaCodeReferenceElement reference) {\n    final StringBuilder buf = new StringBuilder();\n    buf.append(\"public static \");\n    buf.append(\"<\");\n    buf.append(StringUtil.join(params, new Function<PsiTypeParameter, String>() {\n      @Override\n      public String fun(PsiTypeParameter psiTypeParameter) {\n        final String extendsList = psiTypeParameter.getLanguage().isKindOf(JavaLanguage.INSTANCE) ? psiTypeParameter.getExtendsList().getText() : null;\n        return psiTypeParameter.getName() + (StringUtil.isEmpty(extendsList) ? \"\" : \" \" + extendsList);\n      }\n    }, \", \"));\n    buf.append(\">\");\n\n    final PsiElementFactory elementFactory = JavaPsiFacade.getElementFactory(containingClass.getProject());\n\n    String qualifiedName = containingClass.getQualifiedName();\n\n    PsiElement qualifier = reference != null ? reference.getQualifier() : null;\n    if (qualifier instanceof PsiJavaCodeReferenceElement) {\n      final JavaResolveResult resolveResult = ((PsiJavaCodeReferenceElement)qualifier).advancedResolve(false);\n      final PsiElement element = resolveResult.getElement();\n      if (element instanceof PsiClass) {\n        final String outerClassSubstitutedQName =\n          elementFactory.createType((PsiClass)element, resolveResult.getSubstitutor()).getInternalCanonicalText();\n        qualifiedName = outerClassSubstitutedQName + \".\" + containingClass.getName();\n      }\n    } else if (reference != null && qualifier == null && containingClass.getContainingClass() != null) {\n      qualifiedName = null;\n    }\n\n    buf.append(qualifiedName != null ? qualifiedName : containingClass.getName());\n    final PsiTypeParameter[] parameters = containingClass.getTypeParameters();\n    buf.append(\"<\");\n    buf.append(StringUtil.join(parameters, new Function<PsiTypeParameter, String>() {\n      @Override\n      public String fun(PsiTypeParameter psiTypeParameter) {\n        return psiTypeParameter.getName();\n      }\n    }, \", \"));\n    buf.append(\"> \");\n\n    String staticFactoryName = \"staticFactory\";\n    final JavaCodeStyleManager styleManager = JavaCodeStyleManager.getInstance(containingClass.getProject());\n    staticFactoryName = styleManager.suggestUniqueVariableName(staticFactoryName, containingClass, false);\n    buf.append(staticFactoryName);\n    if (constructor == null) {\n      buf.append(\"()\");\n    }\n    else {\n      buf.append(\"(\").append(StringUtil.join(constructor.getParameterList().getParameters(), new Function<PsiParameter, String>() {\n        int myIdx = 0;\n        @Override\n        public String fun(PsiParameter psiParameter) {\n          return psiParameter.getType().getCanonicalText() + \" p\" + myIdx++;\n        }\n      }, \",\")).append(\")\");\n    }\n    buf.append(\"{}\");\n\n    try {\n      final PsiNameIdentifierOwner owner = constructor != null ? constructor : containingClass;\n      return elementFactory.createMethodFromText(buf.toString(), owner instanceof PsiCompiledElement ? ((PsiCompiledElement)owner).getMirror() : owner);\n    }\n    catch (IncorrectOperationException e) {\n      return null;\n    }\n  }","commit_id":"f738b512a3f090bf1c154fdecb145c6843883a06","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    protected void renderCause( final Event event, final StringBuilder buff )\n    {\n        assert event != null;\n        assert buff != null;\n\n        Throwable cause = event.getCause();\n        if ( cause == null )\n        {\n            return;\n        }\n\n        buff.append( ansi().fgRed().a( cause.getClass().getName() ).reset() );\n        if ( cause.getMessage() != null )\n        {\n            buff.append( ansi().fgRed().a( \": \" ).reset() );\n            buff.append( ansi().fgRed().a( cause.getMessage() ).reset() );\n        }\n        renderNewLine( buff );\n\n        while ( cause != null )\n        {\n            for ( StackTraceElement e : cause.getStackTrace() )\n            {\n                buff.append( \"    \" );\n                buff.append( ansi().a( \"at \" ).a( e.getClassName() ).a( \".\" ).a( e.getMethodName() ) );\n                buff.append( ansi().a( \" (\" ).a( getLocation( e ) ).a( \")\" ).reset() );\n                renderNewLine( buff );\n            }\n\n            cause = cause.getCause();\n            if ( cause != null )\n            {\n                buff.append( ansi().fgRed().a( \"Caused by: \" ).a( cause.getClass().getName() ) );\n                if ( cause.getMessage() != null )\n                {\n                    buff.append( ansi().fgRed().a( \": \" ).a( cause.getMessage() ).reset() );\n                }\n                renderNewLine( buff );\n            }\n        }\n    }","id":56158,"modified_method":"@Override\n    protected void renderCause( final Event event, final StringBuilder buff )\n    {\n        assert event != null;\n        assert buff != null;\n\n        Throwable cause = event.getCause();\n        if ( cause == null )\n        {\n            return;\n        }\n\n        buff.append( ansi().bold().fgRed().a( cause.getClass().getName() ).reset() );\n        if ( cause.getMessage() != null )\n        {\n            buff.append( \": \" );\n            buff.append( ansi().bold().fgRed().a( cause.getMessage() ).reset() );\n        }\n        renderNewLine( buff );\n\n        while ( cause != null )\n        {\n            for ( StackTraceElement e : cause.getStackTrace() )\n            {\n                buff.append( \"    \" );\n                buff.append( ansi().bold().a( \"at\" ).reset().a( \" \" )\n                        .a( e.getClassName() ).a( \".\" ).a( e.getMethodName() ) );\n                buff.append( ansi().a( \" (\" ).bold().a( getLocation( e ) ).reset().a( \")\" ) );\n                renderNewLine( buff );\n            }\n\n            cause = cause.getCause();\n            if ( cause != null )\n            {\n                buff.append( ansi().bold().a( \"Caused by\" ).reset().a( \": \" )\n                        .a( cause.getClass().getName() ) );\n                if ( cause.getMessage() != null )\n                {\n                    buff.append( \": \" );\n                    buff.append( ansi().bold().fgRed().a( cause.getMessage() ).reset() );\n                }\n                renderNewLine( buff );\n            }\n        }\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    protected void renderName( final Event event, final StringBuilder buff, final boolean shortName )\n    {\n        StringBuilder tmp = new StringBuilder();\n        super.renderName( event, tmp, shortName );\n        buff.append( ansi().fgBlue().a( tmp ).reset() );\n    }","id":56159,"modified_method":"@Override\n    protected void renderName( final Event event, final StringBuilder buff, final boolean shortName )\n    {\n        StringBuilder tmp = new StringBuilder();\n        super.renderName( event, tmp, shortName );\n        buff.append( ansi().fgGreen().a( tmp ).reset() );\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    protected void renderLevel( final Event event, final StringBuilder buff )\n    {\n        assert event != null;\n        assert buff != null;\n\n        Level level = event.getLevel();\n        switch ( level )\n        {\n            case TRACE:\n            case DEBUG:\n                buff.append( ansi().fgCyan().a( level.name() ).reset() );\n                break;\n\n            case INFO:\n                buff.append( ansi().fgBlue().a( level.name() ).reset() );\n                break;\n\n            case WARN:\n                // Maven uses WARNING instead of WARN\n                buff.append( ansi().fgYellow().a( WARNING ).reset() );\n                break;\n\n            case ERROR:\n                buff.append( ansi().fgRed().a( level.name() ).reset() );\n                break;\n\n            default:\n                throw new InternalError();\n        }\n    }","id":56160,"modified_method":"@Override\n    protected void renderLevel( final Event event, final StringBuilder buff )\n    {\n        assert event != null;\n        assert buff != null;\n\n        Level level = event.getLevel();\n        switch ( level )\n        {\n            case TRACE:\n            case DEBUG:\n                buff.append( ansi().bold().fgCyan().a( level.name() ).reset() );\n                break;\n\n            case INFO:\n                buff.append( ansi().bold().fgBlue().a( level.name() ).reset() );\n                break;\n\n            case WARN:\n                // Maven uses WARNING instead of WARN\n                buff.append( ansi().bold().fgYellow().a( WARNING ).reset() );\n                break;\n\n            case ERROR:\n                buff.append( ansi().bold().fgRed().a( level.name() ).reset() );\n                break;\n\n            default:\n                throw new InternalError();\n        }\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * <pre>>>> mojo-artifactId:version:goal (mojo-executionId) > :forked-goal @ project-artifactId >>><\/pre>\n     * <pre>>>> mojo-artifactId:version:goal (mojo-executionId) > [lifecycle]phase @ project-artifactId >>><\/pre>\n     */\n    @Override\n    public void forkStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().fgBlue().a( \">>> \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            ansi.fgBlue().a( \" > \" ).reset();\n            appendForkInfo( ansi, event.getMojoExecution().getMojoDescriptor() );\n            append( ansi, event.getProject() );\n            ansi.fgBlue().a( \" >>>\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","id":56161,"modified_method":"/**\n     * <pre>>>> mojo-artifactId:version:goal (mojo-executionId) > :forked-goal @ project-artifactId >>><\/pre>\n     * <pre>>>> mojo-artifactId:version:goal (mojo-executionId) > [lifecycle]phase @ project-artifactId >>><\/pre>\n     */\n    @Override\n    public void forkStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().bold().a( \">>> \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            ansi.bold().a( \" > \" ).reset();\n            appendForkInfo( ansi, event.getMojoExecution().getMojoDescriptor() );\n            append( ansi, event.getProject() );\n            ansi.bold().a( \" >>>\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    public void mojoSkipped( ExecutionEvent event )\n    {\n        if ( logger.isWarnEnabled() )\n        {\n            logger.warn( ansi().fgYellow().\n                a( \"Goal \" + event.getMojoExecution().getGoal()\n                       + \" requires online mode for execution but Maven is currently offline, skipping\" ).\n                reset().toString() );\n\n        }\n    }","id":56162,"modified_method":"@Override\n    public void mojoSkipped( ExecutionEvent event )\n    {\n        if ( logger.isWarnEnabled() )\n        {\n            logger.warn( \"Goal \" + event.getMojoExecution().getGoal()\n                + \" requires online mode for execution but Maven is currently offline, skipping\" );\n        }\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"private void logStats( MavenSession session )\n    {\n        infoLine( '-' );\n\n        long finish = System.currentTimeMillis();\n\n        long time = finish - session.getRequest().getStartTime().getTime();\n\n        String wallClock = session.getRequest().getDegreeOfConcurrency() > 1 ? \" (Wall Clock)\" : \"\";\n\n        logger.info( ansi().fgBlue().a( \"Total time: \" + formatDuration( time ) + wallClock ).reset().toString() );\n\n        logger.info( ansi().fgBlue().a( \"Finished at: \" + formatTimestamp( finish ) ).reset().toString() );\n\n        System.gc();\n\n        Runtime r = Runtime.getRuntime();\n\n        long mb = 1024 * 1024;\n\n        logger.info( ansi().fgBlue().a( \"Final Memory: \" + ( r.totalMemory() - r.freeMemory() ) / mb + \"M/\"\n                                            + r.totalMemory() / mb + \"M\" ).reset().toString() );\n    }","id":56163,"modified_method":"private void logStats( MavenSession session )\n    {\n        infoLine( '-' );\n\n        long finish = System.currentTimeMillis();\n\n        long time = finish - session.getRequest().getStartTime().getTime();\n\n        String wallClock = session.getRequest().getDegreeOfConcurrency() > 1 ? \" (Wall Clock)\" : \"\";\n\n        logger.info( \"Total time: \" + formatDuration( time ) + wallClock );\n\n        logger.info( \"Finished at: \" + formatTimestamp( finish ) );\n\n        System.gc();\n\n        Runtime r = Runtime.getRuntime();\n\n        long mb = 1024 * 1024;\n\n        logger.info( \"Final Memory: \" + ( r.totalMemory() - r.freeMemory() ) / mb + \"M/\" + r.totalMemory() / mb + \"M\" );\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    public void projectSkipped( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n            infoLine( '-' );\n\n            infoMain( \"Skipping \" + event.getProject().getName() );\n            logger.info( ansi().fgBlue().a( \"This project has been banned from the build due to previous failures.\" ).\n                reset().toString() );\n\n            infoLine( '-' );\n        }\n    }","id":56164,"modified_method":"@Override\n    public void projectSkipped( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n            infoLine( '-' );\n\n            infoMain( \"Skipping \" + event.getProject().getName() );\n            logger.info( \"This project has been banned from the build due to previous failures.\" );\n\n            infoLine( '-' );\n        }\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"private void logReactorSummary( MavenSession session )\n    {\n        infoLine( '-' );\n\n        infoMain( \"Reactor Summary:\" );\n\n        logger.info( \"\" );\n\n        MavenExecutionResult result = session.getResult();\n\n        for ( MavenProject project : session.getProjects() )\n        {\n            BuildSummary buildSummary = result.getBuildSummary( project );\n            Ansi ansi = ansi();\n\n            if ( buildSummary == null )\n            {\n                ansi.fgYellow();\n            }\n            else if ( buildSummary instanceof BuildSuccess )\n            {\n                ansi.fgGreen();\n            }\n            else if ( buildSummary instanceof BuildFailure )\n            {\n                ansi.fgRed();\n            }\n\n            ansi.a( project.getName() );\n            ansi.a( ' ' );\n\n            int dots = MAX_PROJECT_NAME_LENGTH - project.getName().length();\n\n            for ( int i = 0; i < dots; i++ )\n            {\n                ansi.a( '.' );\n            }\n\n            ansi.a( ' ' );\n\n            if ( buildSummary == null )\n            {\n                ansi.a( \"SKIPPED\" );\n            }\n            else if ( buildSummary instanceof BuildSuccess )\n            {\n                ansi.a( \"SUCCESS\" );\n                ansi.a( \" [\" );\n                String buildTimeDuration = formatDuration( buildSummary.getTime() );\n                int padSize = MAX_PADDED_BUILD_TIME_DURATION_LENGTH - buildTimeDuration.length();\n                if ( padSize > 0 )\n                {\n                    ansi.a( chars( ' ', padSize ) );\n                }\n                ansi.a( buildTimeDuration );\n                ansi.a( ']' );\n            }\n            else if ( buildSummary instanceof BuildFailure )\n            {\n                ansi.a( \"FAILURE\" );\n                ansi.a( \" [\" );\n                String buildTimeDuration = formatDuration( buildSummary.getTime() );\n                int padSize = MAX_PADDED_BUILD_TIME_DURATION_LENGTH - buildTimeDuration.length();\n                if ( padSize > 0 )\n                {\n                    ansi.a( chars( ' ', padSize ) );\n                }\n                ansi.a( buildTimeDuration );\n                ansi.a( ']' );\n            }\n\n            ansi.reset();\n            logger.info( ansi.toString() );\n        }\n    }","id":56165,"modified_method":"private void logReactorSummary( MavenSession session )\n    {\n        infoLine( '-' );\n\n        infoMain( \"Reactor Summary:\" );\n\n        logger.info( \"\" );\n\n        MavenExecutionResult result = session.getResult();\n\n        for ( MavenProject project : session.getProjects() )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n\n            buffer.append( project.getName() );\n            buffer.append( ' ' );\n\n            if ( buffer.length() <= MAX_PROJECT_NAME_LENGTH )\n            {\n                while ( buffer.length() < MAX_PROJECT_NAME_LENGTH )\n                {\n                    buffer.append( '.' );\n                }\n                buffer.append( ' ' );\n            }\n\n            BuildSummary buildSummary = result.getBuildSummary( project );\n\n            if ( buildSummary == null )\n            {\n                buffer.append( ansi().bold().fgYellow().a( \"SKIPPED\" ).reset() );\n            }\n            else if ( buildSummary instanceof BuildSuccess )\n            {\n                buffer.append( ansi().bold().fgGreen().a( \"SUCCESS\" ).reset() );\n                buffer.append( \" [\" );\n                String buildTimeDuration = formatDuration( buildSummary.getTime() );\n                int padSize = MAX_PADDED_BUILD_TIME_DURATION_LENGTH - buildTimeDuration.length();\n                if ( padSize > 0 )\n                {\n                    buffer.append( chars( ' ', padSize ) );\n                }\n                buffer.append( buildTimeDuration );\n                buffer.append( ']' );\n            }\n            else if ( buildSummary instanceof BuildFailure )\n            {\n                buffer.append( ansi().bold().fgRed().a( \"FAILURE\" ).reset() );\n                buffer.append( \" [\" );\n                String buildTimeDuration = formatDuration( buildSummary.getTime() );\n                int padSize = MAX_PADDED_BUILD_TIME_DURATION_LENGTH - buildTimeDuration.length();\n                if ( padSize > 0 )\n                {\n                    buffer.append( chars( ' ', padSize ) );\n                }\n                buffer.append( buildTimeDuration );\n                buffer.append( ']' );\n            }\n\n            logger.info( buffer.toString() );\n        }\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    public void projectDiscoveryStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( ansi().fgBlue().a( \"Scanning for projects...\" ).reset().toString() );\n        }\n    }","id":56166,"modified_method":"@Override\n    public void projectDiscoveryStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"Scanning for projects...\" );\n        }\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * <pre>&lt;&lt;&lt; mojo-artifactId:version:goal (mojo-executionId) &lt; :forked-goal @ project-artifactId &lt;&lt;&lt;<\/pre>\n     * <pre>&lt;&lt;&lt; mojo-artifactId:version:goal (mojo-executionId) &lt; [lifecycle]phase @ project-artifactId &lt;&lt;&lt;<\/pre>\n     */\n    // CHECKSTYLE_ON: LineLength\n    @Override\n    public void forkSucceeded( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().fgBlue().a( \"<<< \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            ansi.fgBlue().a( \" < \" ).reset();\n            appendForkInfo( ansi, event.getMojoExecution().getMojoDescriptor() );\n            append( ansi, event.getProject() );\n            ansi.fgBlue().a( \" <<<\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","id":56167,"modified_method":"/**\n     * <pre>&lt;&lt;&lt; mojo-artifactId:version:goal (mojo-executionId) &lt; :forked-goal @ project-artifactId &lt;&lt;&lt;<\/pre>\n     * <pre>&lt;&lt;&lt; mojo-artifactId:version:goal (mojo-executionId) &lt; [lifecycle]phase @ project-artifactId &lt;&lt;&lt;<\/pre>\n     */\n    // CHECKSTYLE_ON: LineLength\n    @Override\n    public void forkSucceeded( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().bold().a( \"<<< \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            ansi.bold().a( \" < \" ).reset();\n            appendForkInfo( ansi, event.getMojoExecution().getMojoDescriptor() );\n            append( ansi, event.getProject() );\n            ansi.bold().a( \" <<<\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"private void appendForkInfo( Ansi ansi, MojoDescriptor md )\n    {\n        ansi.fgBlue();\n        if ( StringUtils.isNotEmpty( md.getExecutePhase() ) )\n        {\n            // forked phase\n            if ( StringUtils.isNotEmpty( md.getExecuteLifecycle() ) )\n            {\n                ansi.a( '[' );\n                ansi.a( md.getExecuteLifecycle() );\n                ansi.a( ']' );\n            }\n            ansi.a( md.getExecutePhase() );\n        }\n        else\n        {\n            // forked goal\n            ansi.a( ':' );\n            ansi.a( md.getExecuteGoal() );\n        }\n        ansi.reset();\n    }","id":56168,"modified_method":"private void appendForkInfo( Ansi ansi, MojoDescriptor md )\n    {\n        ansi.bold();\n        if ( StringUtils.isNotEmpty( md.getExecutePhase() ) )\n        {\n            // forked phase\n            if ( StringUtils.isNotEmpty( md.getExecuteLifecycle() ) )\n            {\n                ansi.a( '[' );\n                ansi.a( md.getExecuteLifecycle() );\n                ansi.a( ']' );\n            }\n            ansi.a( md.getExecutePhase() );\n        }\n        else\n        {\n            // forked goal\n            ansi.a( ':' );\n            ansi.a( md.getExecuteGoal() );\n        }\n        ansi.reset();\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * <pre>--- mojo-artifactId:version:goal (mojo-executionId) @ project-artifactId ---<\/pre>\n     */\n    @Override\n    public void mojoStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().fgBlue().a( \"--- \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            append( ansi, event.getProject() );\n            ansi.fgBlue().a( \" ---\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","id":56169,"modified_method":"/**\n     * <pre>--- mojo-artifactId:version:goal (mojo-executionId) @ project-artifactId ---<\/pre>\n     */\n    @Override\n    public void mojoStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().bold().a( \"--- \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            append( ansi, event.getProject() );\n            ansi.bold().a( \" ---\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    public void sessionStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() && event.getSession().getProjects().size() > 1 )\n        {\n            infoLine( '-' );\n\n            infoMain( \"Reactor Build Order:\" );\n\n            logger.info( \"\" );\n\n            for ( MavenProject project : event.getSession().getProjects() )\n            {\n                logger.info( ansi().fgBlue().a( project.getName() ).reset().toString() );\n            }\n        }\n    }","id":56170,"modified_method":"@Override\n    public void sessionStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() && event.getSession().getProjects().size() > 1 )\n        {\n            infoLine( '-' );\n\n            infoMain( \"Reactor Build Order:\" );\n\n            logger.info( \"\" );\n\n            for ( MavenProject project : event.getSession().getProjects() )\n            {\n                logger.info( project.getName() );\n            }\n        }\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"private void infoMain( String msg )\n    {\n        logger.info( ansi().fgBlue().a( msg ).reset().toString() );\n    }","id":56171,"modified_method":"private void infoMain( String msg )\n    {\n        logger.info( ansi().bold().a( msg ).reset().toString() );\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"private void append( Ansi ansi, MojoExecution me )\n    {\n        ansi.fgBlue().a( me.getArtifactId() ).a( ':' ).a( me.getVersion() );\n        ansi.a( ':' ).a( me.getGoal() ).reset();\n        if ( me.getExecutionId() != null )\n        {\n            ansi.fgBlue().a( \" (\" ).a( me.getExecutionId() ).a( ')' ).reset();\n        }\n    }","id":56172,"modified_method":"private void append( Ansi ansi, MojoExecution me )\n    {\n        ansi.fgGreen().a( me.getArtifactId() ).a( ':' ).a( me.getVersion() );\n        ansi.a( ':' ).a( me.getGoal() ).reset();\n        if ( me.getExecutionId() != null )\n        {\n            ansi.bold().a( \" (\" ).a( me.getExecutionId() ).a( ')' ).reset();\n        }\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"private void logResult( MavenSession session )\n    {\n        infoLine( '-' );\n        Ansi ansi = ansi();\n\n        if ( session.getResult().hasExceptions() )\n        {\n            ansi.fgRed().a( \"BUILD FAILURE\" );\n        }\n        else\n        {\n            ansi.fgGreen().a( \"BUILD SUCCESS\" );\n        }\n        logger.info( ansi.reset().toString() );\n    }","id":56173,"modified_method":"private void logResult( MavenSession session )\n    {\n        infoLine( '-' );\n        Ansi ansi = ansi().bold();\n\n        if ( session.getResult().hasExceptions() )\n        {\n            ansi.fgRed().a( \"BUILD FAILURE\" );\n        }\n        else\n        {\n            ansi.fgGreen().a( \"BUILD SUCCESS\" );\n        }\n        logger.info( ansi.reset().toString() );\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"private static String createMessage( MojoExecution execution, MavenProject project, Throwable cause )\n    {\n        Ansi buffer = ansi( /*256*/ );\n\n        buffer.fgRed().a( \"Failed to execute goal\" );\n\n        if ( execution != null )\n        {\n            buffer.a( ' ' ).a( execution.getGroupId() ).a( ':' ).a( execution.getArtifactId() ).\n                a( ':' ).a( execution.getVersion() ).a( ':' ).a( execution.getGoal() ).\n                a( \" (\" ).a( execution.getExecutionId() ).a( ')' );\n\n        }\n\n        if ( project != null )\n        {\n            buffer.a( \" on project \" ).a( project.getArtifactId() );\n        }\n\n        if ( cause != null )\n        {\n            buffer.a( \": \" ).a( cause.getMessage() );\n        }\n\n        return buffer.reset().toString();\n    }","id":56174,"modified_method":"private static String createMessage( MojoExecution execution, MavenProject project, Throwable cause )\n    {\n        Ansi buffer = ansi( /*256*/ );\n\n        buffer.a( \"Failed to execute goal\" ).reset();\n\n        if ( execution != null )\n        {\n            buffer.a( ' ' ).a( execution.getGroupId() ).a( ':' ).fgGreen().a( execution.getArtifactId() );\n            buffer.a( ':' ).a( execution.getVersion() ).a( ':' ).a( execution.getGoal() ).reset();\n            buffer.bold().a( \" (\" ).a( execution.getExecutionId() ).a( ')' ).reset();\n        }\n\n        if ( project != null )\n        {\n            buffer.a( \" on project \" );\n            buffer.fgCyan().a( project.getArtifactId() ).reset();\n        }\n\n        if ( cause != null )\n        {\n            buffer.a( \": \" ).bold().fgRed().a( cause.getMessage() ).reset();\n        }\n\n        return buffer.toString();\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"public void warn( String message, Throwable throwable )\n    {\n        logger.warn( ansi().fgYellow().a( message ).reset().toString(), throwable );\n    }","id":56175,"modified_method":"public void warn( String message, Throwable throwable )\n    {\n        logger.warn( message, throwable );\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"public void warn( String message )\n    {\n        logger.warn( ansi().fgYellow().a( message ).reset().toString() );\n    }","id":56176,"modified_method":"public void warn( String message )\n    {\n        logger.warn( message );\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"public void error( String message )\n    {\n        logger.error( ansi().fgRed().a( message ).reset().toString() );\n    }","id":56177,"modified_method":"public void error( String message )\n    {\n        logger.error( message );\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"public void error( String message, Throwable throwable )\n    {\n        logger.error( ansi().fgRed().a( message ).reset().toString(), throwable );\n    }","id":56178,"modified_method":"public void error( String message, Throwable throwable )\n    {\n        logger.error( message, throwable );\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"public void fatalError( String message )\n    {\n        logger.error( ansi().fgRed().a( message ).reset().toString() );\n    }","id":56179,"modified_method":"public void fatalError( String message )\n    {\n        logger.error( message );\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"public void fatalError( String message, Throwable throwable )\n    {\n        logger.error( ansi().fgRed().a( message ).reset().toString(), throwable );\n    }","id":56180,"modified_method":"public void fatalError( String message, Throwable throwable )\n    {\n        logger.error( message, throwable );\n    }","commit_id":"7d89f0583f504615bd87956897971d4b3edeff92","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    protected void renderCause( final Event event, final StringBuilder buff )\n    {\n        assert event != null;\n        assert buff != null;\n\n        Throwable cause = event.getCause();\n        if ( cause == null )\n        {\n            return;\n        }\n\n        buff.append( ansi().bold().fgRed().a( cause.getClass().getName() ).reset() );\n        if ( cause.getMessage() != null )\n        {\n            buff.append( \": \" );\n            buff.append( ansi().bold().fgRed().a( cause.getMessage() ).reset() );\n        }\n        renderNewLine( buff );\n\n        while ( cause != null )\n        {\n            for ( StackTraceElement e : cause.getStackTrace() )\n            {\n                buff.append( \"    \" );\n                buff.append( ansi().bold().a( \"at\" ).reset().a( \" \" )\n                        .a( e.getClassName() ).a( \".\" ).a( e.getMethodName() ) );\n                buff.append( ansi().a( \" (\" ).bold().a( getLocation( e ) ).reset().a( \")\" ) );\n                renderNewLine( buff );\n            }\n\n            cause = cause.getCause();\n            if ( cause != null )\n            {\n                buff.append( ansi().bold().a( \"Caused by\" ).reset().a( \": \" )\n                        .a( cause.getClass().getName() ) );\n                if ( cause.getMessage() != null )\n                {\n                    buff.append( \": \" );\n                    buff.append( ansi().bold().fgRed().a( cause.getMessage() ).reset() );\n                }\n                renderNewLine( buff );\n            }\n        }\n    }","id":56181,"modified_method":"@Override\n    protected void renderCause( final Event event, final StringBuilder buff )\n    {\n        assert event != null;\n        assert buff != null;\n\n        Throwable cause = event.getCause();\n        if ( cause == null )\n        {\n            return;\n        }\n\n        buff.append( ansi().fgRed().a( cause.getClass().getName() ).reset() );\n        if ( cause.getMessage() != null )\n        {\n            buff.append( ansi().fgRed().a( \": \" ).reset() );\n            buff.append( ansi().fgRed().a( cause.getMessage() ).reset() );\n        }\n        renderNewLine( buff );\n\n        while ( cause != null )\n        {\n            for ( StackTraceElement e : cause.getStackTrace() )\n            {\n                buff.append( \"    \" );\n                buff.append( ansi().a( \"at \" ).a( e.getClassName() ).a( \".\" ).a( e.getMethodName() ) );\n                buff.append( ansi().a( \" (\" ).a( getLocation( e ) ).a( \")\" ).reset() );\n                renderNewLine( buff );\n            }\n\n            cause = cause.getCause();\n            if ( cause != null )\n            {\n                buff.append( ansi().fgRed().a( \"Caused by: \" ).a( cause.getClass().getName() ) );\n                if ( cause.getMessage() != null )\n                {\n                    buff.append( ansi().fgRed().a( \": \" ).a( cause.getMessage() ).reset() );\n                }\n                renderNewLine( buff );\n            }\n        }\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    protected void renderLevel( final Event event, final StringBuilder buff )\n    {\n        assert event != null;\n        assert buff != null;\n\n        Level level = event.getLevel();\n        switch ( level )\n        {\n            case TRACE:\n            case DEBUG:\n                buff.append( ansi().bold().fgCyan().a( level.name() ).reset() );\n                break;\n\n            case INFO:\n                buff.append( ansi().bold().fgBlue().a( level.name() ).reset() );\n                break;\n\n            case WARN:\n                // Maven uses WARNING instead of WARN\n                buff.append( ansi().bold().fgYellow().a( WARNING ).reset() );\n                break;\n\n            case ERROR:\n                buff.append( ansi().bold().fgRed().a( level.name() ).reset() );\n                break;\n\n            default:\n                throw new InternalError();\n        }\n    }","id":56182,"modified_method":"@Override\n    protected void renderLevel( final Event event, final StringBuilder buff )\n    {\n        assert event != null;\n        assert buff != null;\n\n        Level level = event.getLevel();\n        switch ( level )\n        {\n            case TRACE:\n            case DEBUG:\n                buff.append( ansi().fgCyan().a( level.name() ).reset() );\n                break;\n\n            case INFO:\n                buff.append( ansi().fgBlue().a( level.name() ).reset() );\n                break;\n\n            case WARN:\n                // Maven uses WARNING instead of WARN\n                buff.append( ansi().fgYellow().a( WARNING ).reset() );\n                break;\n\n            case ERROR:\n                buff.append( ansi().fgRed().a( level.name() ).reset() );\n                break;\n\n            default:\n                throw new InternalError();\n        }\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    public void sessionStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() && event.getSession().getProjects().size() > 1 )\n        {\n            infoLine( '-' );\n\n            infoMain( \"Reactor Build Order:\" );\n\n            logger.info( \"\" );\n\n            for ( MavenProject project : event.getSession().getProjects() )\n            {\n                logger.info( project.getName() );\n            }\n        }\n    }","id":56183,"modified_method":"@Override\n    public void sessionStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() && event.getSession().getProjects().size() > 1 )\n        {\n            infoLine( '-' );\n\n            infoMain( \"Reactor Build Order:\" );\n\n            logger.info( \"\" );\n\n            for ( MavenProject project : event.getSession().getProjects() )\n            {\n                logger.info( ansi().fgBlue().a( project.getName() ).reset().toString() );\n            }\n        }\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"private void logResult( MavenSession session )\n    {\n        infoLine( '-' );\n        Ansi ansi = ansi().bold();\n\n        if ( session.getResult().hasExceptions() )\n        {\n            ansi.fgRed().a( \"BUILD FAILURE\" );\n        }\n        else\n        {\n            ansi.fgGreen().a( \"BUILD SUCCESS\" );\n        }\n        logger.info( ansi.reset().toString() );\n    }","id":56184,"modified_method":"private void logResult( MavenSession session )\n    {\n        infoLine( '-' );\n        Ansi ansi = ansi();\n\n        if ( session.getResult().hasExceptions() )\n        {\n            ansi.fgRed().a( \"BUILD FAILURE\" );\n        }\n        else\n        {\n            ansi.fgGreen().a( \"BUILD SUCCESS\" );\n        }\n        logger.info( ansi.reset().toString() );\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"private void logReactorSummary( MavenSession session )\n    {\n        infoLine( '-' );\n\n        infoMain( \"Reactor Summary:\" );\n\n        logger.info( \"\" );\n\n        MavenExecutionResult result = session.getResult();\n\n        for ( MavenProject project : session.getProjects() )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n\n            buffer.append( project.getName() );\n            buffer.append( ' ' );\n\n            if ( buffer.length() <= MAX_PROJECT_NAME_LENGTH )\n            {\n                while ( buffer.length() < MAX_PROJECT_NAME_LENGTH )\n                {\n                    buffer.append( '.' );\n                }\n                buffer.append( ' ' );\n            }\n\n            BuildSummary buildSummary = result.getBuildSummary( project );\n\n            if ( buildSummary == null )\n            {\n                buffer.append( ansi().bold().fgYellow().a( \"SKIPPED\" ).reset() );\n            }\n            else if ( buildSummary instanceof BuildSuccess )\n            {\n                buffer.append( ansi().bold().fgGreen().a( \"SUCCESS\" ).reset() );\n                buffer.append( \" [\" );\n                String buildTimeDuration = formatDuration( buildSummary.getTime() );\n                int padSize = MAX_PADDED_BUILD_TIME_DURATION_LENGTH - buildTimeDuration.length();\n                if ( padSize > 0 )\n                {\n                    buffer.append( chars( ' ', padSize ) );\n                }\n                buffer.append( buildTimeDuration );\n                buffer.append( ']' );\n            }\n            else if ( buildSummary instanceof BuildFailure )\n            {\n                buffer.append( ansi().bold().fgRed().a( \"FAILURE\" ).reset() );\n                buffer.append( \" [\" );\n                String buildTimeDuration = formatDuration( buildSummary.getTime() );\n                int padSize = MAX_PADDED_BUILD_TIME_DURATION_LENGTH - buildTimeDuration.length();\n                if ( padSize > 0 )\n                {\n                    buffer.append( chars( ' ', padSize ) );\n                }\n                buffer.append( buildTimeDuration );\n                buffer.append( ']' );\n            }\n\n            logger.info( buffer.toString() );\n        }\n    }","id":56185,"modified_method":"private void logReactorSummary( MavenSession session )\n    {\n        infoLine( '-' );\n\n        infoMain( \"Reactor Summary:\" );\n\n        logger.info( \"\" );\n\n        MavenExecutionResult result = session.getResult();\n\n        for ( MavenProject project : session.getProjects() )\n        {\n            BuildSummary buildSummary = result.getBuildSummary( project );\n            Ansi ansi = ansi();\n\n            if ( buildSummary == null )\n            {\n                ansi.fgYellow();\n            }\n            else if ( buildSummary instanceof BuildSuccess )\n            {\n                ansi.fgGreen();\n            }\n            else if ( buildSummary instanceof BuildFailure )\n            {\n                ansi.fgRed();\n            }\n\n            ansi.a( project.getName() );\n            ansi.a( ' ' );\n\n            int dots = MAX_PROJECT_NAME_LENGTH - project.getName().length();\n\n            for ( int i = 0; i < dots; i++ )\n            {\n                ansi.a( '.' );\n            }\n\n            ansi.a( ' ' );\n\n            if ( buildSummary == null )\n            {\n                ansi.a( \"SKIPPED\" );\n            }\n            else if ( buildSummary instanceof BuildSuccess )\n            {\n                ansi.a( \"SUCCESS\" );\n                ansi.a( \" [\" );\n                String buildTimeDuration = formatDuration( buildSummary.getTime() );\n                int padSize = MAX_PADDED_BUILD_TIME_DURATION_LENGTH - buildTimeDuration.length();\n                if ( padSize > 0 )\n                {\n                    ansi.a( chars( ' ', padSize ) );\n                }\n                ansi.a( buildTimeDuration );\n                ansi.a( ']' );\n            }\n            else if ( buildSummary instanceof BuildFailure )\n            {\n                ansi.a( \"FAILURE\" );\n                ansi.a( \" [\" );\n                String buildTimeDuration = formatDuration( buildSummary.getTime() );\n                int padSize = MAX_PADDED_BUILD_TIME_DURATION_LENGTH - buildTimeDuration.length();\n                if ( padSize > 0 )\n                {\n                    ansi.a( chars( ' ', padSize ) );\n                }\n                ansi.a( buildTimeDuration );\n                ansi.a( ']' );\n            }\n\n            ansi.reset();\n            logger.info( ansi.toString() );\n        }\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"private void append( Ansi ansi, MojoExecution me )\n    {\n        ansi.fgBlue().a( me.getArtifactId() ).a( ':' ).a( me.getVersion() );\n        ansi.a( ':' ).a( me.getGoal() ).reset();\n        if ( me.getExecutionId() != null )\n        {\n            ansi.fgBlue().bold().a( \" (\" ).a( me.getExecutionId() ).a( ')' ).reset();\n        }\n    }","id":56186,"modified_method":"private void append( Ansi ansi, MojoExecution me )\n    {\n        ansi.fgBlue().a( me.getArtifactId() ).a( ':' ).a( me.getVersion() );\n        ansi.a( ':' ).a( me.getGoal() ).reset();\n        if ( me.getExecutionId() != null )\n        {\n            ansi.fgBlue().a( \" (\" ).a( me.getExecutionId() ).a( ')' ).reset();\n        }\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * <pre>&lt;&lt;&lt; mojo-artifactId:version:goal (mojo-executionId) &lt; :forked-goal @ project-artifactId &lt;&lt;&lt;<\/pre>\n     * <pre>&lt;&lt;&lt; mojo-artifactId:version:goal (mojo-executionId) &lt; [lifecycle]phase @ project-artifactId &lt;&lt;&lt;<\/pre>\n     */\n    // CHECKSTYLE_ON: LineLength\n    @Override\n    public void forkSucceeded( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().bold().a( \"<<< \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            ansi.bold().a( \" < \" ).reset();\n            appendForkInfo( ansi, event.getMojoExecution().getMojoDescriptor() );\n            append( ansi, event.getProject() );\n            ansi.bold().a( \" <<<\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","id":56187,"modified_method":"/**\n     * <pre>&lt;&lt;&lt; mojo-artifactId:version:goal (mojo-executionId) &lt; :forked-goal @ project-artifactId &lt;&lt;&lt;<\/pre>\n     * <pre>&lt;&lt;&lt; mojo-artifactId:version:goal (mojo-executionId) &lt; [lifecycle]phase @ project-artifactId &lt;&lt;&lt;<\/pre>\n     */\n    // CHECKSTYLE_ON: LineLength\n    @Override\n    public void forkSucceeded( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().fgBlue().a( \"<<< \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            ansi.fgBlue().a( \" < \" ).reset();\n            appendForkInfo( ansi, event.getMojoExecution().getMojoDescriptor() );\n            append( ansi, event.getProject() );\n            ansi.fgBlue().a( \" <<<\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"private void appendForkInfo( Ansi ansi, MojoDescriptor md )\n    {\n        ansi.bold();\n        if ( StringUtils.isNotEmpty( md.getExecutePhase() ) )\n        {\n            // forked phase\n            if ( StringUtils.isNotEmpty( md.getExecuteLifecycle() ) )\n            {\n                ansi.a( '[' );\n                ansi.a( md.getExecuteLifecycle() );\n                ansi.a( ']' );\n            }\n            ansi.a( md.getExecutePhase() );\n        }\n        else\n        {\n            // forked goal\n            ansi.a( ':' );\n            ansi.a( md.getExecuteGoal() );\n        }\n        ansi.reset();\n    }","id":56188,"modified_method":"private void appendForkInfo( Ansi ansi, MojoDescriptor md )\n    {\n        ansi.fgBlue();\n        if ( StringUtils.isNotEmpty( md.getExecutePhase() ) )\n        {\n            // forked phase\n            if ( StringUtils.isNotEmpty( md.getExecuteLifecycle() ) )\n            {\n                ansi.a( '[' );\n                ansi.a( md.getExecuteLifecycle() );\n                ansi.a( ']' );\n            }\n            ansi.a( md.getExecutePhase() );\n        }\n        else\n        {\n            // forked goal\n            ansi.a( ':' );\n            ansi.a( md.getExecuteGoal() );\n        }\n        ansi.reset();\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"private void logStats( MavenSession session )\n    {\n        infoLine( '-' );\n\n        long finish = System.currentTimeMillis();\n\n        long time = finish - session.getRequest().getStartTime().getTime();\n\n        String wallClock = session.getRequest().getDegreeOfConcurrency() > 1 ? \" (Wall Clock)\" : \"\";\n\n        logger.info( \"Total time: \" + formatDuration( time ) + wallClock );\n\n        logger.info( \"Finished at: \" + formatTimestamp( finish ) );\n\n        System.gc();\n\n        Runtime r = Runtime.getRuntime();\n\n        long mb = 1024 * 1024;\n\n        logger.info( \"Final Memory: \" + ( r.totalMemory() - r.freeMemory() ) / mb + \"M/\" + r.totalMemory() / mb + \"M\" );\n    }","id":56189,"modified_method":"private void logStats( MavenSession session )\n    {\n        infoLine( '-' );\n\n        long finish = System.currentTimeMillis();\n\n        long time = finish - session.getRequest().getStartTime().getTime();\n\n        String wallClock = session.getRequest().getDegreeOfConcurrency() > 1 ? \" (Wall Clock)\" : \"\";\n\n        logger.info( ansi().fgBlue().a( \"Total time: \" + formatDuration( time ) + wallClock ).reset().toString() );\n\n        logger.info( ansi().fgBlue().a( \"Finished at: \" + formatTimestamp( finish ) ).reset().toString() );\n\n        System.gc();\n\n        Runtime r = Runtime.getRuntime();\n\n        long mb = 1024 * 1024;\n\n        logger.info( ansi().fgBlue().a( \"Final Memory: \" + ( r.totalMemory() - r.freeMemory() ) / mb + \"M/\"\n                                            + r.totalMemory() / mb + \"M\" ).reset().toString() );\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * <pre>>>> mojo-artifactId:version:goal (mojo-executionId) > :forked-goal @ project-artifactId >>><\/pre>\n     * <pre>>>> mojo-artifactId:version:goal (mojo-executionId) > [lifecycle]phase @ project-artifactId >>><\/pre>\n     */\n    @Override\n    public void forkStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().bold().a( \">>> \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            ansi.bold().a( \" > \" ).reset();\n            appendForkInfo( ansi, event.getMojoExecution().getMojoDescriptor() );\n            append( ansi, event.getProject() );\n            ansi.bold().a( \" >>>\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","id":56190,"modified_method":"/**\n     * <pre>>>> mojo-artifactId:version:goal (mojo-executionId) > :forked-goal @ project-artifactId >>><\/pre>\n     * <pre>>>> mojo-artifactId:version:goal (mojo-executionId) > [lifecycle]phase @ project-artifactId >>><\/pre>\n     */\n    @Override\n    public void forkStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().fgBlue().a( \">>> \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            ansi.fgBlue().a( \" > \" ).reset();\n            appendForkInfo( ansi, event.getMojoExecution().getMojoDescriptor() );\n            append( ansi, event.getProject() );\n            ansi.fgBlue().a( \" >>>\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    public void mojoSkipped( ExecutionEvent event )\n    {\n        if ( logger.isWarnEnabled() )\n        {\n            logger.warn( \"Goal \" + event.getMojoExecution().getGoal()\n                + \" requires online mode for execution but Maven is currently offline, skipping\" );\n        }\n    }","id":56191,"modified_method":"@Override\n    public void mojoSkipped( ExecutionEvent event )\n    {\n        if ( logger.isWarnEnabled() )\n        {\n            logger.warn( ansi().fgYellow().\n                a( \"Goal \" + event.getMojoExecution().getGoal()\n                       + \" requires online mode for execution but Maven is currently offline, skipping\" ).\n                reset().toString() );\n\n        }\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    public void projectDiscoveryStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"Scanning for projects...\" );\n        }\n    }","id":56192,"modified_method":"@Override\n    public void projectDiscoveryStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( ansi().fgBlue().a( \"Scanning for projects...\" ).reset().toString() );\n        }\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    public void projectSkipped( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n            infoLine( '-' );\n\n            infoMain( \"Skipping \" + event.getProject().getName() );\n            logger.info( \"This project has been banned from the build due to previous failures.\" );\n\n            infoLine( '-' );\n        }\n    }","id":56193,"modified_method":"@Override\n    public void projectSkipped( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n            infoLine( '-' );\n\n            infoMain( \"Skipping \" + event.getProject().getName() );\n            logger.info( ansi().fgBlue().a( \"This project has been banned from the build due to previous failures.\" ).\n                reset().toString() );\n\n            infoLine( '-' );\n        }\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"private void infoMain( String msg )\n    {\n        logger.info( ansi().bold().a( msg ).reset().toString() );\n    }","id":56194,"modified_method":"private void infoMain( String msg )\n    {\n        logger.info( ansi().fgBlue().a( msg ).reset().toString() );\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * <pre>--- mojo-artifactId:version:goal (mojo-executionId) @ project-artifactId ---<\/pre>\n     */\n    @Override\n    public void mojoStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().bold().a( \"--- \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            append( ansi, event.getProject() );\n            ansi.bold().a( \" ---\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","id":56195,"modified_method":"/**\n     * <pre>--- mojo-artifactId:version:goal (mojo-executionId) @ project-artifactId ---<\/pre>\n     */\n    @Override\n    public void mojoStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().fgBlue().a( \"--- \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            append( ansi, event.getProject() );\n            ansi.fgBlue().a( \" ---\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"private static String createMessage( MojoExecution execution, MavenProject project, Throwable cause )\n    {\n        Ansi buffer = ansi( /*256*/ );\n\n        buffer.a( \"Failed to execute goal\" ).reset();\n\n        if ( execution != null )\n        {\n            buffer.a( ' ' ).a( execution.getGroupId() ).a( ':' ).a( execution.getArtifactId() );\n            buffer.a( ':' ).a( execution.getVersion() ).a( ':' ).a( execution.getGoal() ).reset();\n            buffer.bold().a( \" (\" ).a( execution.getExecutionId() ).a( ')' ).reset();\n        }\n\n        if ( project != null )\n        {\n            buffer.a( \" on project \" );\n            buffer.fgCyan().a( project.getArtifactId() ).reset();\n        }\n\n        if ( cause != null )\n        {\n            buffer.a( \": \" ).bold().fgRed().a( cause.getMessage() ).reset();\n        }\n\n        return buffer.toString();\n    }","id":56196,"modified_method":"private static String createMessage( MojoExecution execution, MavenProject project, Throwable cause )\n    {\n        Ansi buffer = ansi( /*256*/ );\n\n        buffer.fgRed().a( \"Failed to execute goal\" );\n\n        if ( execution != null )\n        {\n            buffer.a( ' ' ).a( execution.getGroupId() ).a( ':' ).a( execution.getArtifactId() ).\n                a( ':' ).a( execution.getVersion() ).a( ':' ).a( execution.getGoal() ).\n                a( \" (\" ).a( execution.getExecutionId() ).a( ')' );\n\n        }\n\n        if ( project != null )\n        {\n            buffer.a( \" on project \" ).a( project.getArtifactId() );\n        }\n\n        if ( cause != null )\n        {\n            buffer.a( \": \" ).a( cause.getMessage() );\n        }\n\n        return buffer.reset().toString();\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"public void warn( String message, Throwable throwable )\n    {\n        logger.warn( message, throwable );\n    }","id":56197,"modified_method":"public void warn( String message, Throwable throwable )\n    {\n        logger.warn( ansi().fgYellow().a( message ).reset().toString(), throwable );\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"public void error( String message, Throwable throwable )\n    {\n        logger.error( message, throwable );\n    }","id":56198,"modified_method":"public void error( String message, Throwable throwable )\n    {\n        logger.error( ansi().fgRed().a( message ).reset().toString(), throwable );\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"public void fatalError( String message )\n    {\n        logger.error( message );\n    }","id":56199,"modified_method":"public void fatalError( String message )\n    {\n        logger.error( ansi().fgRed().a( message ).reset().toString() );\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"public void fatalError( String message, Throwable throwable )\n    {\n        logger.error( message, throwable );\n    }","id":56200,"modified_method":"public void fatalError( String message, Throwable throwable )\n    {\n        logger.error( ansi().fgRed().a( message ).reset().toString(), throwable );\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"public void error( String message )\n    {\n        logger.error( message );\n    }","id":56201,"modified_method":"public void error( String message )\n    {\n        logger.error( ansi().fgRed().a( message ).reset().toString() );\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"public void warn( String message )\n    {\n        logger.warn( message );\n    }","id":56202,"modified_method":"public void warn( String message )\n    {\n        logger.warn( ansi().fgYellow().a( message ).reset().toString() );\n    }","commit_id":"7e1b961edd44c7d2843b1b7cd01cea5a1cd1a70d","url":"https://github.com/apache/maven"},{"original_method":"/**\n   * It sums up the value returned from various regions. In case qualifier is\n   * null, summation of all the column qualifiers in the given family is done.\n   * @param tableName\n   * @param ci\n   * @param scan\n   * @return sum <S>\n   * @throws Throwable\n   */\n  public <R, S> S sum(final byte[] tableName, final ColumnInterpreter<R, S> ci,\n      final Scan scan) throws Throwable {\n    validateParameters(scan);\n    class SumCallBack implements Batch.Callback<S> {\n      S sumVal = null;\n\n      public S getSumResult() {\n        return sumVal;\n      }\n\n      @Override\n      public synchronized void update(byte[] region, byte[] row, S result) {\n        sumVal = ci.add(sumVal, result);\n      }\n    }\n    SumCallBack sumCallBack = new SumCallBack();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorExec(AggregateProtocol.class, scan.getStartRow(),\n          scan.getStopRow(), new Batch.Call<AggregateProtocol, S>() {\n            @Override\n            public S call(AggregateProtocol instance) throws IOException {\n              return instance.getSum(ci, scan);\n            }\n          }, sumCallBack);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    return sumCallBack.getSumResult();\n  }","id":56203,"modified_method":"/**\n   * It sums up the value returned from various regions. In case qualifier is\n   * null, summation of all the column qualifiers in the given family is done.\n   * @param tableName\n   * @param ci\n   * @param scan\n   * @return sum <S>\n   * @throws Throwable\n   */\n  public <R, S> S sum(final byte[] tableName, final ColumnInterpreter<R, S> ci,\n      final Scan scan) throws Throwable {\n    final AggregateArgument requestArg = validateArgAndGetPB(scan, ci);\n    \n    class SumCallBack implements Batch.Callback<S> {\n      S sumVal = null;\n\n      public S getSumResult() {\n        return sumVal;\n      }\n\n      @Override\n      public synchronized void update(byte[] region, byte[] row, S result) {\n        sumVal = ci.add(sumVal, result);\n      }\n    }\n    SumCallBack sumCallBack = new SumCallBack();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorService(AggregateService.class, scan.getStartRow(),\n          scan.getStopRow(), new Batch.Call<AggregateService, S>() {\n            @Override\n            public S call(AggregateService instance) throws IOException {\n              ServerRpcController controller = new ServerRpcController();\n              BlockingRpcCallback<AggregateResponse> rpcCallback =\n                  new BlockingRpcCallback<AggregateResponse>();\n              instance.getSum(controller, requestArg, rpcCallback);\n              AggregateResponse response = rpcCallback.get();\n              if (controller.failedOnException()) {\n                throw controller.getFailedOn();\n              }\n              if (response.getFirstPartCount() == 0) {\n                return null;\n              }\n              return ci.parseResponseAsPromotedType(\n                  getBytesFromResponse(response.getFirstPart(0)));\n            }\n          }, sumCallBack);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    return sumCallBack.getSumResult();\n  }","commit_id":"d30fff7c925243e77f11eed71bd1eea636dcc0bb","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * It computes average while fetching sum and row count from all the\n   * corresponding regions. Approach is to compute a global sum of region level\n   * sum and rowcount and then compute the average.\n   * @param tableName\n   * @param scan\n   * @throws Throwable\n   */\n  private <R, S> Pair<S, Long> getAvgArgs(final byte[] tableName,\n      final ColumnInterpreter<R, S> ci, final Scan scan) throws Throwable {\n    validateParameters(scan);\n    class AvgCallBack implements Batch.Callback<Pair<S, Long>> {\n      S sum = null;\n      Long rowCount = 0l;\n\n      public Pair<S, Long> getAvgArgs() {\n        return new Pair<S, Long>(sum, rowCount);\n      }\n\n      @Override\n      public synchronized void update(byte[] region, byte[] row, Pair<S, Long> result) {\n        sum = ci.add(sum, result.getFirst());\n        rowCount += result.getSecond();\n      }\n    }\n    AvgCallBack avgCallBack = new AvgCallBack();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorExec(AggregateProtocol.class, scan.getStartRow(),\n          scan.getStopRow(),\n          new Batch.Call<AggregateProtocol, Pair<S, Long>>() {\n            @Override\n            public Pair<S, Long> call(AggregateProtocol instance)\n                throws IOException {\n              return instance.getAvg(ci, scan);\n            }\n          }, avgCallBack);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    return avgCallBack.getAvgArgs();\n  }","id":56204,"modified_method":"/**\n   * It computes average while fetching sum and row count from all the\n   * corresponding regions. Approach is to compute a global sum of region level\n   * sum and rowcount and then compute the average.\n   * @param tableName\n   * @param scan\n   * @throws Throwable\n   */\n  private <R, S> Pair<S, Long> getAvgArgs(final byte[] tableName,\n      final ColumnInterpreter<R, S> ci, final Scan scan) throws Throwable {\n    final AggregateArgument requestArg = validateArgAndGetPB(scan, ci);\n    class AvgCallBack implements Batch.Callback<Pair<S, Long>> {\n      S sum = null;\n      Long rowCount = 0l;\n\n      public Pair<S, Long> getAvgArgs() {\n        return new Pair<S, Long>(sum, rowCount);\n      }\n\n      @Override\n      public synchronized void update(byte[] region, byte[] row, Pair<S, Long> result) {\n        sum = ci.add(sum, result.getFirst());\n        rowCount += result.getSecond();\n      }\n    }\n    AvgCallBack avgCallBack = new AvgCallBack();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorService(AggregateService.class, scan.getStartRow(),\n          scan.getStopRow(),\n          new Batch.Call<AggregateService, Pair<S, Long>>() {\n            @Override\n            public Pair<S, Long> call(AggregateService instance)\n                throws IOException {\n              ServerRpcController controller = new ServerRpcController();\n              BlockingRpcCallback<AggregateResponse> rpcCallback =\n                  new BlockingRpcCallback<AggregateResponse>();\n              instance.getAvg(controller, requestArg, rpcCallback);\n              AggregateResponse response = rpcCallback.get();\n              if (controller.failedOnException()) {\n                throw controller.getFailedOn();\n              }\n              Pair<S,Long> pair = new Pair<S, Long>(null, 0L);\n              if (response.getFirstPartCount() == 0) {\n                return pair;\n              }\n              pair.setFirst(ci.parseResponseAsPromotedType(\n                  getBytesFromResponse(response.getFirstPart(0))));\n              ByteBuffer bb = ByteBuffer.allocate(8).put(\n                  getBytesFromResponse(response.getSecondPart()));\n              bb.rewind();\n              pair.setSecond(bb.getLong());\n              return pair;\n            }\n          }, avgCallBack);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    return avgCallBack.getAvgArgs();\n  }","commit_id":"d30fff7c925243e77f11eed71bd1eea636dcc0bb","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * It gives the minimum value of a column for a given column family for the\n   * given range. In case qualifier is null, a min of all values for the given\n   * family is returned.\n   * @param tableName\n   * @param ci\n   * @param scan\n   * @return min val <R>\n   * @throws Throwable\n   */\n  public <R, S> R min(final byte[] tableName, final ColumnInterpreter<R, S> ci,\n      final Scan scan) throws Throwable {\n    validateParameters(scan);\n    class MinCallBack implements Batch.Callback<R> {\n\n      private R min = null;\n\n      public R getMinimum() {\n        return min;\n      }\n\n      @Override\n      public synchronized void update(byte[] region, byte[] row, R result) {\n        min = (min == null || (result != null && ci.compare(result, min) < 0)) ? result : min;\n      }\n    }\n    MinCallBack minCallBack = new MinCallBack();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorExec(AggregateProtocol.class, scan.getStartRow(),\n          scan.getStopRow(), new Batch.Call<AggregateProtocol, R>() {\n\n            @Override\n            public R call(AggregateProtocol instance) throws IOException {\n              return instance.getMin(ci, scan);\n            }\n          }, minCallBack);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    log.debug(\"Min fom all regions is: \" + minCallBack.getMinimum());\n    return minCallBack.getMinimum();\n  }","id":56205,"modified_method":"/**\n   * It gives the minimum value of a column for a given column family for the\n   * given range. In case qualifier is null, a min of all values for the given\n   * family is returned.\n   * @param tableName\n   * @param ci\n   * @param scan\n   * @return min val <R>\n   * @throws Throwable\n   */\n  public <R, S> R min(final byte[] tableName, final ColumnInterpreter<R, S> ci,\n      final Scan scan) throws Throwable {\n    final AggregateArgument requestArg = validateArgAndGetPB(scan, ci);\n    class MinCallBack implements Batch.Callback<R> {\n\n      private R min = null;\n\n      public R getMinimum() {\n        return min;\n      }\n\n      @Override\n      public synchronized void update(byte[] region, byte[] row, R result) {\n        min = (min == null || (result != null && ci.compare(result, min) < 0)) ? result : min;\n      }\n    }\n    MinCallBack minCallBack = new MinCallBack();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorService(AggregateService.class, scan.getStartRow(),\n          scan.getStopRow(), new Batch.Call<AggregateService, R>() {\n\n            @Override\n            public R call(AggregateService instance) throws IOException {\n              ServerRpcController controller = new ServerRpcController();\n              BlockingRpcCallback<AggregateResponse> rpcCallback =\n                  new BlockingRpcCallback<AggregateResponse>();\n              instance.getMin(controller, requestArg, rpcCallback);\n              AggregateResponse response = rpcCallback.get();\n              if (controller.failedOnException()) {\n                throw controller.getFailedOn();\n              }\n              if (response.getFirstPartCount() > 0) {\n                return ci.castToCellType(\n                  ci.parseResponseAsPromotedType(\n                      getBytesFromResponse(response.getFirstPart(0))));\n              }\n              return null;\n            }\n          }, minCallBack);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    log.debug(\"Min fom all regions is: \" + minCallBack.getMinimum());\n    return minCallBack.getMinimum();\n  }","commit_id":"d30fff7c925243e77f11eed71bd1eea636dcc0bb","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * It helps locate the region with median for a given column whose weight \n   * is specified in an optional column.\n   * From individual regions, it obtains sum of values and sum of weights.\n   * @param tableName\n   * @param ci\n   * @param scan\n   * @return pair whose first element is a map between start row of the region\n   *  and (sum of values, sum of weights) for the region, the second element is\n   *  (sum of values, sum of weights) for all the regions chosen\n   * @throws Throwable\n   */\n  private <R, S> Pair<NavigableMap<byte[], List<S>>, List<S>>\n  getMedianArgs(final byte[] tableName,\n      final ColumnInterpreter<R, S> ci, final Scan scan) throws Throwable {\n    validateParameters(scan);\n    final NavigableMap<byte[], List<S>> map =\n      new TreeMap<byte[], List<S>>(Bytes.BYTES_COMPARATOR);\n    class StdCallback implements Batch.Callback<List<S>> {\n      S sumVal = null, sumWeights = null;\n\n      public Pair<NavigableMap<byte[], List<S>>, List<S>> getMedianParams() {\n        List<S> l = new ArrayList<S>();\n        l.add(sumVal);\n        l.add(sumWeights);\n        Pair<NavigableMap<byte[], List<S>>, List<S>> p =\n          new Pair<NavigableMap<byte[], List<S>>, List<S>>(map, l);\n        return p;\n      }\n\n      @Override\n      public synchronized void update(byte[] region, byte[] row, List<S> result) {\n        map.put(row, result);\n        sumVal = ci.add(sumVal, result.get(0));\n        sumWeights = ci.add(sumWeights, result.get(1));\n      }\n    }\n    StdCallback stdCallback = new StdCallback();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorExec(AggregateProtocol.class, scan.getStartRow(),\n          scan.getStopRow(), new Batch.Call<AggregateProtocol, List<S>>() {\n            @Override\n            public List<S> call(AggregateProtocol instance) throws IOException {\n              return instance.getMedian(ci, scan);\n            }\n\n          }, stdCallback);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    return stdCallback.getMedianParams();\n  }","id":56206,"modified_method":"/**\n   * It helps locate the region with median for a given column whose weight \n   * is specified in an optional column.\n   * From individual regions, it obtains sum of values and sum of weights.\n   * @param tableName\n   * @param ci\n   * @param scan\n   * @return pair whose first element is a map between start row of the region\n   *  and (sum of values, sum of weights) for the region, the second element is\n   *  (sum of values, sum of weights) for all the regions chosen\n   * @throws Throwable\n   */\n  private <R, S> Pair<NavigableMap<byte[], List<S>>, List<S>>\n  getMedianArgs(final byte[] tableName,\n      final ColumnInterpreter<R, S> ci, final Scan scan) throws Throwable {\n    final AggregateArgument requestArg = validateArgAndGetPB(scan, ci);\n    final NavigableMap<byte[], List<S>> map =\n      new TreeMap<byte[], List<S>>(Bytes.BYTES_COMPARATOR);\n    class StdCallback implements Batch.Callback<List<S>> {\n      S sumVal = null, sumWeights = null;\n\n      public Pair<NavigableMap<byte[], List<S>>, List<S>> getMedianParams() {\n        List<S> l = new ArrayList<S>();\n        l.add(sumVal);\n        l.add(sumWeights);\n        Pair<NavigableMap<byte[], List<S>>, List<S>> p =\n          new Pair<NavigableMap<byte[], List<S>>, List<S>>(map, l);\n        return p;\n      }\n\n      @Override\n      public synchronized void update(byte[] region, byte[] row, List<S> result) {\n        map.put(row, result);\n        sumVal = ci.add(sumVal, result.get(0));\n        sumWeights = ci.add(sumWeights, result.get(1));\n      }\n    }\n    StdCallback stdCallback = new StdCallback();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorService(AggregateService.class, scan.getStartRow(),\n          scan.getStopRow(), new Batch.Call<AggregateService, List<S>>() {\n            @Override\n            public List<S> call(AggregateService instance) throws IOException {\n              ServerRpcController controller = new ServerRpcController();\n              BlockingRpcCallback<AggregateResponse> rpcCallback =\n                  new BlockingRpcCallback<AggregateResponse>();\n              instance.getMedian(controller, requestArg, rpcCallback);\n              AggregateResponse response = rpcCallback.get();\n              if (controller.failedOnException()) {\n                throw controller.getFailedOn();\n              }\n\n              List<S> list = new ArrayList<S>();\n              for (int i = 0; i < response.getFirstPartCount(); i++) {\n                list.add(ci.parseResponseAsPromotedType(\n                    getBytesFromResponse(response.getFirstPart(i))));\n              }\n              return list;\n            }\n\n          }, stdCallback);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    return stdCallback.getMedianParams();\n  }","commit_id":"d30fff7c925243e77f11eed71bd1eea636dcc0bb","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * It computes a global standard deviation for a given column and its value.\n   * Standard deviation is square root of (average of squares -\n   * average*average). From individual regions, it obtains sum, square sum and\n   * number of rows. With these, the above values are computed to get the global\n   * std.\n   * @param tableName\n   * @param scan\n   * @return\n   * @throws Throwable\n   */\n  private <R, S> Pair<List<S>, Long> getStdArgs(final byte[] tableName,\n      final ColumnInterpreter<R, S> ci, final Scan scan) throws Throwable {\n    validateParameters(scan);\n    class StdCallback implements Batch.Callback<Pair<List<S>, Long>> {\n      long rowCountVal = 0l;\n      S sumVal = null, sumSqVal = null;\n\n      public Pair<List<S>, Long> getStdParams() {\n        List<S> l = new ArrayList<S>();\n        l.add(sumVal);\n        l.add(sumSqVal);\n        Pair<List<S>, Long> p = new Pair<List<S>, Long>(l, rowCountVal);\n        return p;\n      }\n\n      @Override\n      public synchronized void update(byte[] region, byte[] row, Pair<List<S>, Long> result) {\n        sumVal = ci.add(sumVal, result.getFirst().get(0));\n        sumSqVal = ci.add(sumSqVal, result.getFirst().get(1));\n        rowCountVal += result.getSecond();\n      }\n    }\n    StdCallback stdCallback = new StdCallback();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorExec(AggregateProtocol.class, scan.getStartRow(),\n          scan.getStopRow(),\n          new Batch.Call<AggregateProtocol, Pair<List<S>, Long>>() {\n            @Override\n            public Pair<List<S>, Long> call(AggregateProtocol instance)\n                throws IOException {\n              return instance.getStd(ci, scan);\n            }\n\n          }, stdCallback);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    return stdCallback.getStdParams();\n  }","id":56207,"modified_method":"/**\n   * It computes a global standard deviation for a given column and its value.\n   * Standard deviation is square root of (average of squares -\n   * average*average). From individual regions, it obtains sum, square sum and\n   * number of rows. With these, the above values are computed to get the global\n   * std.\n   * @param tableName\n   * @param scan\n   * @return\n   * @throws Throwable\n   */\n  private <R, S> Pair<List<S>, Long> getStdArgs(final byte[] tableName,\n      final ColumnInterpreter<R, S> ci, final Scan scan) throws Throwable {\n    final AggregateArgument requestArg = validateArgAndGetPB(scan, ci);\n    class StdCallback implements Batch.Callback<Pair<List<S>, Long>> {\n      long rowCountVal = 0l;\n      S sumVal = null, sumSqVal = null;\n\n      public Pair<List<S>, Long> getStdParams() {\n        List<S> l = new ArrayList<S>();\n        l.add(sumVal);\n        l.add(sumSqVal);\n        Pair<List<S>, Long> p = new Pair<List<S>, Long>(l, rowCountVal);\n        return p;\n      }\n\n      @Override\n      public synchronized void update(byte[] region, byte[] row, Pair<List<S>, Long> result) {\n        if (result.getFirst().size() > 0) {\n          sumVal = ci.add(sumVal, result.getFirst().get(0));\n          sumSqVal = ci.add(sumSqVal, result.getFirst().get(1));\n          rowCountVal += result.getSecond();\n        }\n      }\n    }\n    StdCallback stdCallback = new StdCallback();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorService(AggregateService.class, scan.getStartRow(),\n          scan.getStopRow(),\n          new Batch.Call<AggregateService, Pair<List<S>, Long>>() {\n            @Override\n            public Pair<List<S>, Long> call(AggregateService instance)\n                throws IOException {\n              ServerRpcController controller = new ServerRpcController();\n              BlockingRpcCallback<AggregateResponse> rpcCallback =\n                  new BlockingRpcCallback<AggregateResponse>();\n              instance.getStd(controller, requestArg, rpcCallback);\n              AggregateResponse response = rpcCallback.get();\n              if (controller.failedOnException()) {\n                throw controller.getFailedOn();\n              }\n              Pair<List<S>,Long> pair = \n                  new Pair<List<S>, Long>(new ArrayList<S>(), 0L);\n              if (response.getFirstPartCount() == 0) {\n                return pair;\n              }\n              List<S> list = new ArrayList<S>();\n              for (int i = 0; i < response.getFirstPartCount(); i++) {\n                list.add(ci.parseResponseAsPromotedType(\n                    getBytesFromResponse(response.getFirstPart(i))));\n              }\n              pair.setFirst(list);\n              ByteBuffer bb = ByteBuffer.allocate(8).put(\n                  getBytesFromResponse(response.getSecondPart()));\n              bb.rewind();\n              pair.setSecond(bb.getLong());\n              return pair;\n            }\n          }, stdCallback);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    return stdCallback.getStdParams();\n  }","commit_id":"d30fff7c925243e77f11eed71bd1eea636dcc0bb","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * It gives the maximum value of a column for a given column family for the\n   * given range. In case qualifier is null, a max of all values for the given\n   * family is returned.\n   * @param tableName\n   * @param ci\n   * @param scan\n   * @return max val <R>\n   * @throws Throwable\n   *           The caller is supposed to handle the exception as they are thrown\n   *           & propagated to it.\n   */\n  public <R, S> R max(final byte[] tableName, final ColumnInterpreter<R, S> ci,\n      final Scan scan) throws Throwable {\n    validateParameters(scan);\n    class MaxCallBack implements Batch.Callback<R> {\n      R max = null;\n\n      R getMax() {\n        return max;\n      }\n\n      @Override\n      public synchronized void update(byte[] region, byte[] row, R result) {\n        max = (max == null || (result != null && ci.compare(max, result) < 0)) ? result : max;\n      }\n    }\n    MaxCallBack aMaxCallBack = new MaxCallBack();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorExec(AggregateProtocol.class, scan.getStartRow(),\n          scan.getStopRow(), new Batch.Call<AggregateProtocol, R>() {\n            @Override\n            public R call(AggregateProtocol instance) throws IOException {\n              return instance.getMax(ci, scan);\n            }\n          }, aMaxCallBack);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    return aMaxCallBack.getMax();\n  }","id":56208,"modified_method":"/**\n   * It gives the maximum value of a column for a given column family for the\n   * given range. In case qualifier is null, a max of all values for the given\n   * family is returned.\n   * @param tableName\n   * @param ci\n   * @param scan\n   * @return max val <R>\n   * @throws Throwable\n   *           The caller is supposed to handle the exception as they are thrown\n   *           & propagated to it.\n   */\n  public <R, S> R max(final byte[] tableName, final ColumnInterpreter<R, S> ci,\n      final Scan scan) throws Throwable {\n    final AggregateArgument requestArg = validateArgAndGetPB(scan, ci);\n    class MaxCallBack implements Batch.Callback<R> {\n      R max = null;\n\n      R getMax() {\n        return max;\n      }\n\n      @Override\n      public synchronized void update(byte[] region, byte[] row, R result) {\n        max = (max == null || (result != null && ci.compare(max, result) < 0)) ? result : max;\n      }\n    }\n    MaxCallBack aMaxCallBack = new MaxCallBack();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorService(AggregateService.class, scan.getStartRow(),\n          scan.getStopRow(), new Batch.Call<AggregateService, R>() {\n            @Override\n            public R call(AggregateService instance) throws IOException {\n              ServerRpcController controller = new ServerRpcController();\n              BlockingRpcCallback<AggregateResponse> rpcCallback =\n                  new BlockingRpcCallback<AggregateResponse>();\n              instance.getMax(controller, requestArg, rpcCallback);\n              AggregateResponse response = rpcCallback.get();\n              if (controller.failedOnException()) {\n                throw controller.getFailedOn();\n              }\n              if (response.getFirstPartCount() > 0) {\n                return ci.castToCellType(\n                          ci.parseResponseAsPromotedType(\n                              getBytesFromResponse(response.getFirstPart(0))));\n              }\n              return null;\n            }\n          }, aMaxCallBack);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    return aMaxCallBack.getMax();\n  }","commit_id":"d30fff7c925243e77f11eed71bd1eea636dcc0bb","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * It gives the row count, by summing up the individual results obtained from\n   * regions. In case the qualifier is null, FirstKeyValueFilter is used to\n   * optimised the operation. In case qualifier is provided, I can't use the\n   * filter as it may set the flag to skip to next row, but the value read is\n   * not of the given filter: in this case, this particular row will not be\n   * counted ==> an error.\n   * @param tableName\n   * @param ci\n   * @param scan\n   * @return <R, S>\n   * @throws Throwable\n   */\n  public <R, S> long rowCount(final byte[] tableName,\n      final ColumnInterpreter<R, S> ci, final Scan scan) throws Throwable {\n    validateParameters(scan);\n    class RowNumCallback implements Batch.Callback<Long> {\n      private final AtomicLong rowCountL = new AtomicLong(0);\n\n      public long getRowNumCount() {\n        return rowCountL.get();\n      }\n\n      @Override\n      public void update(byte[] region, byte[] row, Long result) {\n        rowCountL.addAndGet(result.longValue());\n      }\n    }\n    RowNumCallback rowNum = new RowNumCallback();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorExec(AggregateProtocol.class, scan.getStartRow(),\n          scan.getStopRow(), new Batch.Call<AggregateProtocol, Long>() {\n            @Override\n            public Long call(AggregateProtocol instance) throws IOException {\n              return instance.getRowNum(ci, scan);\n            }\n          }, rowNum);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    return rowNum.getRowNumCount();\n  }","id":56209,"modified_method":"/**\n   * It gives the row count, by summing up the individual results obtained from\n   * regions. In case the qualifier is null, FirstKeyValueFilter is used to\n   * optimised the operation. In case qualifier is provided, I can't use the\n   * filter as it may set the flag to skip to next row, but the value read is\n   * not of the given filter: in this case, this particular row will not be\n   * counted ==> an error.\n   * @param tableName\n   * @param ci\n   * @param scan\n   * @return <R, S>\n   * @throws Throwable\n   */\n  public <R, S> long rowCount(final byte[] tableName,\n      final ColumnInterpreter<R, S> ci, final Scan scan) throws Throwable {\n    final AggregateArgument requestArg = validateArgAndGetPB(scan, ci);\n    class RowNumCallback implements Batch.Callback<Long> {\n      private final AtomicLong rowCountL = new AtomicLong(0);\n\n      public long getRowNumCount() {\n        return rowCountL.get();\n      }\n\n      @Override\n      public void update(byte[] region, byte[] row, Long result) {\n        rowCountL.addAndGet(result.longValue());\n      }\n    }\n    RowNumCallback rowNum = new RowNumCallback();\n    HTable table = null;\n    try {\n      table = new HTable(conf, tableName);\n      table.coprocessorService(AggregateService.class, scan.getStartRow(),\n          scan.getStopRow(), new Batch.Call<AggregateService, Long>() {\n            @Override\n            public Long call(AggregateService instance) throws IOException {\n              ServerRpcController controller = new ServerRpcController();\n              BlockingRpcCallback<AggregateResponse> rpcCallback =\n                  new BlockingRpcCallback<AggregateResponse>();\n              instance.getRowNum(controller, requestArg, rpcCallback);\n              AggregateResponse response = rpcCallback.get();\n              if (controller.failedOnException()) {\n                throw controller.getFailedOn();\n              }\n              byte[] bytes = getBytesFromResponse(response.getFirstPart(0));\n              ByteBuffer bb = ByteBuffer.allocate(8).put(bytes);\n              bb.rewind();\n              return bb.getLong();\n            }\n          }, rowNum);\n    } finally {\n      if (table != null) {\n        table.close();\n      }\n    }\n    return rowNum.getRowNumCount();\n  }","commit_id":"d30fff7c925243e77f11eed71bd1eea636dcc0bb","url":"https://github.com/apache/hbase"},{"original_method":"private static DependencyInjectorGenerator generateInjectorForTopDownAnalyzerForJs() throws IOException {\n        DependencyInjectorGenerator generator = new DependencyInjectorGenerator();\n        generateInjectorForTopDownAnalyzerCommon(generator);\n        generator.addField(DependencyClassByQualifiedNameResolverDummyImpl.class);\n        generator.addField(MutablePackageFragmentProvider.class);\n        generator.addField(NamespaceFactoryImpl.class);\n        generator.addField(false, PlatformToKotlinClassMap.class, null, new GivenExpression(\"org.jetbrains.jet.lang.PlatformToKotlinClassMap.EMPTY\"));\n        generator.configure(\"js/js.translator/src\", \"org.jetbrains.jet.di\", \"InjectorForTopDownAnalyzerForJs\", GenerateInjectors.class);\n        return generator;\n    }","id":56210,"modified_method":"private static DependencyInjectorGenerator generateInjectorForTopDownAnalyzerForJs() throws IOException {\n        DependencyInjectorGenerator generator = new DependencyInjectorGenerator();\n        generateInjectorForTopDownAnalyzerCommon(generator);\n        generator.addField(DependencyClassByQualifiedNameResolverDummyImpl.class);\n        generator.addField(MutablePackageFragmentProvider.class);\n        generator.addField(false, PlatformToKotlinClassMap.class, null, new GivenExpression(\"org.jetbrains.jet.lang.PlatformToKotlinClassMap.EMPTY\"));\n        generator.configure(\"js/js.translator/src\", \"org.jetbrains.jet.di\", \"InjectorForTopDownAnalyzerForJs\", GenerateInjectors.class);\n        return generator;\n    }","commit_id":"1f74f0234436253584d5dd89412af38a53e1f096","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static DependencyInjectorGenerator generateInjectorForTopDownAnalyzerBasic() throws IOException {\n        DependencyInjectorGenerator generator = new DependencyInjectorGenerator();\n        generateInjectorForTopDownAnalyzerCommon(generator);\n        generator.addField(DependencyClassByQualifiedNameResolverDummyImpl.class);\n        generator.addField(MutablePackageFragmentProvider.class);\n        generator.addField(NamespaceFactoryImpl.class);\n        generator.addParameter(PlatformToKotlinClassMap.class);\n        generator.configure(\"compiler/frontend/src\", \"org.jetbrains.jet.di\", \"InjectorForTopDownAnalyzerBasic\", GenerateInjectors.class);\n        return generator;\n    }","id":56211,"modified_method":"private static DependencyInjectorGenerator generateInjectorForTopDownAnalyzerBasic() throws IOException {\n        DependencyInjectorGenerator generator = new DependencyInjectorGenerator();\n        generateInjectorForTopDownAnalyzerCommon(generator);\n        generator.addField(DependencyClassByQualifiedNameResolverDummyImpl.class);\n        generator.addField(MutablePackageFragmentProvider.class);\n        generator.addParameter(PlatformToKotlinClassMap.class);\n        generator.configure(\"compiler/frontend/src\", \"org.jetbrains.jet.di\", \"InjectorForTopDownAnalyzerBasic\", GenerateInjectors.class);\n        return generator;\n    }","commit_id":"1f74f0234436253584d5dd89412af38a53e1f096","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static DependencyInjectorGenerator generateInjectorForTopDownAnalyzerForJvm() throws IOException {\n        DependencyInjectorGenerator generator = new DependencyInjectorGenerator();\n        generator.implementInterface(InjectorForTopDownAnalyzer.class);\n        generateInjectorForTopDownAnalyzerCommon(generator);\n        generator.addField(JavaDescriptorResolver.class);\n        generator.addField(false, JavaToKotlinClassMap.class, null, new GivenExpression(\"org.jetbrains.jet.lang.resolve.java.mapping.JavaToKotlinClassMap.getInstance()\"));\n        generator.addField(JavaClassFinderImpl.class);\n        generator.addField(TraceBasedExternalSignatureResolver.class);\n        generator.addField(TraceBasedJavaResolverCache.class);\n        generator.addField(TraceBasedErrorReporter.class);\n        generator.addField(PsiBasedMethodSignatureChecker.class);\n        generator.addField(PsiBasedExternalAnnotationResolver.class);\n        generator.addField(MutablePackageFragmentProvider.class);\n        generator.addField(NamespaceFactoryImpl.class);\n        generator.addPublicField(JavaPackageFragmentProviderImpl.class);\n        generator.addField(false, VirtualFileFinder.class, \"virtualFileFinder\",\n                           new GivenExpression(\n                                   VirtualFileFinder.class.getName() + \".SERVICE.getInstance(project)\"));\n        generator.configure(\"compiler/frontend.java/src\", \"org.jetbrains.jet.di\", \"InjectorForTopDownAnalyzerForJvm\",\n                           GenerateInjectors.class);\n        return generator;\n    }","id":56212,"modified_method":"private static DependencyInjectorGenerator generateInjectorForTopDownAnalyzerForJvm() throws IOException {\n        DependencyInjectorGenerator generator = new DependencyInjectorGenerator();\n        generator.implementInterface(InjectorForTopDownAnalyzer.class);\n        generateInjectorForTopDownAnalyzerCommon(generator);\n        generator.addField(JavaDescriptorResolver.class);\n        generator.addField(false, JavaToKotlinClassMap.class, null, new GivenExpression(\"org.jetbrains.jet.lang.resolve.java.mapping.JavaToKotlinClassMap.getInstance()\"));\n        generator.addField(JavaClassFinderImpl.class);\n        generator.addField(TraceBasedExternalSignatureResolver.class);\n        generator.addField(TraceBasedJavaResolverCache.class);\n        generator.addField(TraceBasedErrorReporter.class);\n        generator.addField(PsiBasedMethodSignatureChecker.class);\n        generator.addField(PsiBasedExternalAnnotationResolver.class);\n        generator.addField(MutablePackageFragmentProvider.class);\n        generator.addPublicField(JavaPackageFragmentProviderImpl.class);\n        generator.addField(false, VirtualFileFinder.class, \"virtualFileFinder\",\n                           new GivenExpression(\n                                   VirtualFileFinder.class.getName() + \".SERVICE.getInstance(project)\"));\n        generator.configure(\"compiler/frontend.java/src\", \"org.jetbrains.jet.di\", \"InjectorForTopDownAnalyzerForJvm\",\n                           GenerateInjectors.class);\n        return generator;\n    }","commit_id":"1f74f0234436253584d5dd89412af38a53e1f096","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public InjectorForTopDownAnalyzerBasic(\n        @NotNull Project project,\n        @NotNull TopDownAnalysisParameters topDownAnalysisParameters,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptorImpl moduleDescriptor,\n        @NotNull PlatformToKotlinClassMap platformToKotlinClassMap\n    ) {\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.topDownAnalysisContext = new TopDownAnalysisContext();\n        this.bodyResolver = new BodyResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.descriptorResolver = new DescriptorResolver();\n        this.callResolverExtensionProvider = new CallResolverExtensionProvider();\n        this.project = project;\n        this.topDownAnalysisParameters = topDownAnalysisParameters;\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.dependencyClassByQualifiedNameResolverDummy = new DependencyClassByQualifiedNameResolverDummyImpl();\n        this.mutablePackageFragmentProvider = new MutablePackageFragmentProvider(getModuleDescriptor());\n        this.namespaceFactory = new NamespaceFactoryImpl();\n        this.platformToKotlinClassMap = platformToKotlinClassMap;\n        this.declarationResolver = new DeclarationResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.argumentTypeResolver = new ArgumentTypeResolver();\n        this.expressionTypingServices = new ExpressionTypingServices();\n        this.callExpressionResolver = new CallExpressionResolver();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.candidateResolver = new CandidateResolver();\n        this.importsResolver = new ImportsResolver();\n        this.jetImportsFactory = new JetImportsFactory();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n        this.delegatedPropertyResolver = new DelegatedPropertyResolver();\n        this.functionAnalyzerExtension = new FunctionAnalyzerExtension();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setContext(topDownAnalysisContext);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        this.topDownAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        this.topDownAnalysisContext.setTopDownAnalysisParameters(topDownAnalysisParameters);\n\n        this.bodyResolver.setAnnotationResolver(annotationResolver);\n        this.bodyResolver.setCallResolver(callResolver);\n        this.bodyResolver.setContext(topDownAnalysisContext);\n        this.bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        this.bodyResolver.setDeclarationsChecker(declarationsChecker);\n        this.bodyResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        this.bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        this.bodyResolver.setFunctionAnalyzerExtension(functionAnalyzerExtension);\n        this.bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        this.bodyResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.bodyResolver.setTrace(bindingTrace);\n\n        this.controlFlowAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.controlFlowAnalyzer.setTrace(bindingTrace);\n\n        this.declarationsChecker.setTrace(bindingTrace);\n\n        this.descriptorResolver.setAnnotationResolver(annotationResolver);\n        this.descriptorResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        this.descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        this.descriptorResolver.setTypeResolver(typeResolver);\n\n        namespaceFactory.setModule(moduleDescriptor);\n        namespaceFactory.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        namespaceFactory.setTrace(bindingTrace);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setContext(topDownAnalysisContext);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setExpressionTypingServices(expressionTypingServices);\n\n        callResolver.setArgumentTypeResolver(argumentTypeResolver);\n        callResolver.setCandidateResolver(candidateResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setTypeResolver(typeResolver);\n\n        argumentTypeResolver.setExpressionTypingServices(expressionTypingServices);\n        argumentTypeResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setAnnotationResolver(annotationResolver);\n        expressionTypingServices.setCallExpressionResolver(callExpressionResolver);\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setExtensionProvider(callResolverExtensionProvider);\n        expressionTypingServices.setPlatformToKotlinClassMap(platformToKotlinClassMap);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        callExpressionResolver.setExpressionTypingServices(expressionTypingServices);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setModuleDescriptor(moduleDescriptor);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        candidateResolver.setArgumentTypeResolver(argumentTypeResolver);\n\n        importsResolver.setContext(topDownAnalysisContext);\n        importsResolver.setImportsFactory(jetImportsFactory);\n        importsResolver.setModuleDescriptor(moduleDescriptor);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        jetImportsFactory.setProject(project);\n\n        scriptHeaderResolver.setContext(topDownAnalysisContext);\n        scriptHeaderResolver.setDependencyClassByQualifiedNameResolver(dependencyClassByQualifiedNameResolverDummy);\n        scriptHeaderResolver.setNamespaceFactory(namespaceFactory);\n        scriptHeaderResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        overloadResolver.setContext(topDownAnalysisContext);\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setContext(topDownAnalysisContext);\n        overrideResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setContext(topDownAnalysisContext);\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setNamespaceFactory(namespaceFactory);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n        delegatedPropertyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        functionAnalyzerExtension.setTrace(bindingTrace);\n\n        scriptBodyResolver.setContext(topDownAnalysisContext);\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n        scriptBodyResolver.setTrace(bindingTrace);\n\n    }","id":56213,"modified_method":"public InjectorForTopDownAnalyzerBasic(\n        @NotNull Project project,\n        @NotNull TopDownAnalysisParameters topDownAnalysisParameters,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptorImpl moduleDescriptor,\n        @NotNull PlatformToKotlinClassMap platformToKotlinClassMap\n    ) {\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.topDownAnalysisContext = new TopDownAnalysisContext();\n        this.bodyResolver = new BodyResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.descriptorResolver = new DescriptorResolver();\n        this.callResolverExtensionProvider = new CallResolverExtensionProvider();\n        this.project = project;\n        this.topDownAnalysisParameters = topDownAnalysisParameters;\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.dependencyClassByQualifiedNameResolverDummy = new DependencyClassByQualifiedNameResolverDummyImpl();\n        this.mutablePackageFragmentProvider = new MutablePackageFragmentProvider(getModuleDescriptor());\n        this.platformToKotlinClassMap = platformToKotlinClassMap;\n        this.declarationResolver = new DeclarationResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.argumentTypeResolver = new ArgumentTypeResolver();\n        this.expressionTypingServices = new ExpressionTypingServices();\n        this.callExpressionResolver = new CallExpressionResolver();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.candidateResolver = new CandidateResolver();\n        this.importsResolver = new ImportsResolver();\n        this.jetImportsFactory = new JetImportsFactory();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n        this.delegatedPropertyResolver = new DelegatedPropertyResolver();\n        this.functionAnalyzerExtension = new FunctionAnalyzerExtension();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setContext(topDownAnalysisContext);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        this.topDownAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        this.topDownAnalysisContext.setTopDownAnalysisParameters(topDownAnalysisParameters);\n\n        this.bodyResolver.setAnnotationResolver(annotationResolver);\n        this.bodyResolver.setCallResolver(callResolver);\n        this.bodyResolver.setContext(topDownAnalysisContext);\n        this.bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        this.bodyResolver.setDeclarationsChecker(declarationsChecker);\n        this.bodyResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        this.bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        this.bodyResolver.setFunctionAnalyzerExtension(functionAnalyzerExtension);\n        this.bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        this.bodyResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.bodyResolver.setTrace(bindingTrace);\n\n        this.controlFlowAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.controlFlowAnalyzer.setTrace(bindingTrace);\n\n        this.declarationsChecker.setTrace(bindingTrace);\n\n        this.descriptorResolver.setAnnotationResolver(annotationResolver);\n        this.descriptorResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        this.descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        this.descriptorResolver.setTypeResolver(typeResolver);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setContext(topDownAnalysisContext);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setExpressionTypingServices(expressionTypingServices);\n\n        callResolver.setArgumentTypeResolver(argumentTypeResolver);\n        callResolver.setCandidateResolver(candidateResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setTypeResolver(typeResolver);\n\n        argumentTypeResolver.setExpressionTypingServices(expressionTypingServices);\n        argumentTypeResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setAnnotationResolver(annotationResolver);\n        expressionTypingServices.setCallExpressionResolver(callExpressionResolver);\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setExtensionProvider(callResolverExtensionProvider);\n        expressionTypingServices.setPlatformToKotlinClassMap(platformToKotlinClassMap);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        callExpressionResolver.setExpressionTypingServices(expressionTypingServices);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setModuleDescriptor(moduleDescriptor);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        candidateResolver.setArgumentTypeResolver(argumentTypeResolver);\n\n        importsResolver.setContext(topDownAnalysisContext);\n        importsResolver.setImportsFactory(jetImportsFactory);\n        importsResolver.setModuleDescriptor(moduleDescriptor);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        jetImportsFactory.setProject(project);\n\n        scriptHeaderResolver.setContext(topDownAnalysisContext);\n        scriptHeaderResolver.setDependencyClassByQualifiedNameResolver(dependencyClassByQualifiedNameResolverDummy);\n        scriptHeaderResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        scriptHeaderResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        overloadResolver.setContext(topDownAnalysisContext);\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setContext(topDownAnalysisContext);\n        overrideResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setContext(topDownAnalysisContext);\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n        delegatedPropertyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        functionAnalyzerExtension.setTrace(bindingTrace);\n\n        scriptBodyResolver.setContext(topDownAnalysisContext);\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n        scriptBodyResolver.setTrace(bindingTrace);\n\n    }","commit_id":"1f74f0234436253584d5dd89412af38a53e1f096","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public InjectorForTopDownAnalyzerForJs(\n        @NotNull Project project,\n        @NotNull TopDownAnalysisParameters topDownAnalysisParameters,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptorImpl moduleDescriptor\n    ) {\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.topDownAnalysisContext = new TopDownAnalysisContext();\n        this.bodyResolver = new BodyResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.descriptorResolver = new DescriptorResolver();\n        this.callResolverExtensionProvider = new CallResolverExtensionProvider();\n        this.project = project;\n        this.topDownAnalysisParameters = topDownAnalysisParameters;\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.dependencyClassByQualifiedNameResolverDummy = new DependencyClassByQualifiedNameResolverDummyImpl();\n        this.mutablePackageFragmentProvider = new MutablePackageFragmentProvider(getModuleDescriptor());\n        this.namespaceFactory = new NamespaceFactoryImpl();\n        this.platformToKotlinClassMap = org.jetbrains.jet.lang.PlatformToKotlinClassMap.EMPTY;\n        this.declarationResolver = new DeclarationResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.argumentTypeResolver = new ArgumentTypeResolver();\n        this.expressionTypingServices = new ExpressionTypingServices();\n        this.callExpressionResolver = new CallExpressionResolver();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.candidateResolver = new CandidateResolver();\n        this.importsResolver = new ImportsResolver();\n        this.jetImportsFactory = new JetImportsFactory();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n        this.delegatedPropertyResolver = new DelegatedPropertyResolver();\n        this.functionAnalyzerExtension = new FunctionAnalyzerExtension();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setContext(topDownAnalysisContext);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        this.topDownAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        this.topDownAnalysisContext.setTopDownAnalysisParameters(topDownAnalysisParameters);\n\n        this.bodyResolver.setAnnotationResolver(annotationResolver);\n        this.bodyResolver.setCallResolver(callResolver);\n        this.bodyResolver.setContext(topDownAnalysisContext);\n        this.bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        this.bodyResolver.setDeclarationsChecker(declarationsChecker);\n        this.bodyResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        this.bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        this.bodyResolver.setFunctionAnalyzerExtension(functionAnalyzerExtension);\n        this.bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        this.bodyResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.bodyResolver.setTrace(bindingTrace);\n\n        this.controlFlowAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.controlFlowAnalyzer.setTrace(bindingTrace);\n\n        this.declarationsChecker.setTrace(bindingTrace);\n\n        this.descriptorResolver.setAnnotationResolver(annotationResolver);\n        this.descriptorResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        this.descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        this.descriptorResolver.setTypeResolver(typeResolver);\n\n        namespaceFactory.setModule(moduleDescriptor);\n        namespaceFactory.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        namespaceFactory.setTrace(bindingTrace);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setContext(topDownAnalysisContext);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setExpressionTypingServices(expressionTypingServices);\n\n        callResolver.setArgumentTypeResolver(argumentTypeResolver);\n        callResolver.setCandidateResolver(candidateResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setTypeResolver(typeResolver);\n\n        argumentTypeResolver.setExpressionTypingServices(expressionTypingServices);\n        argumentTypeResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setAnnotationResolver(annotationResolver);\n        expressionTypingServices.setCallExpressionResolver(callExpressionResolver);\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setExtensionProvider(callResolverExtensionProvider);\n        expressionTypingServices.setPlatformToKotlinClassMap(platformToKotlinClassMap);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        callExpressionResolver.setExpressionTypingServices(expressionTypingServices);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setModuleDescriptor(moduleDescriptor);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        candidateResolver.setArgumentTypeResolver(argumentTypeResolver);\n\n        importsResolver.setContext(topDownAnalysisContext);\n        importsResolver.setImportsFactory(jetImportsFactory);\n        importsResolver.setModuleDescriptor(moduleDescriptor);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        jetImportsFactory.setProject(project);\n\n        scriptHeaderResolver.setContext(topDownAnalysisContext);\n        scriptHeaderResolver.setDependencyClassByQualifiedNameResolver(dependencyClassByQualifiedNameResolverDummy);\n        scriptHeaderResolver.setNamespaceFactory(namespaceFactory);\n        scriptHeaderResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        overloadResolver.setContext(topDownAnalysisContext);\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setContext(topDownAnalysisContext);\n        overrideResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setContext(topDownAnalysisContext);\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setNamespaceFactory(namespaceFactory);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n        delegatedPropertyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        functionAnalyzerExtension.setTrace(bindingTrace);\n\n        scriptBodyResolver.setContext(topDownAnalysisContext);\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n        scriptBodyResolver.setTrace(bindingTrace);\n\n    }","id":56214,"modified_method":"public InjectorForTopDownAnalyzerForJs(\n        @NotNull Project project,\n        @NotNull TopDownAnalysisParameters topDownAnalysisParameters,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptorImpl moduleDescriptor\n    ) {\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.topDownAnalysisContext = new TopDownAnalysisContext();\n        this.bodyResolver = new BodyResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.descriptorResolver = new DescriptorResolver();\n        this.callResolverExtensionProvider = new CallResolverExtensionProvider();\n        this.project = project;\n        this.topDownAnalysisParameters = topDownAnalysisParameters;\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.dependencyClassByQualifiedNameResolverDummy = new DependencyClassByQualifiedNameResolverDummyImpl();\n        this.mutablePackageFragmentProvider = new MutablePackageFragmentProvider(getModuleDescriptor());\n        this.platformToKotlinClassMap = org.jetbrains.jet.lang.PlatformToKotlinClassMap.EMPTY;\n        this.declarationResolver = new DeclarationResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.argumentTypeResolver = new ArgumentTypeResolver();\n        this.expressionTypingServices = new ExpressionTypingServices();\n        this.callExpressionResolver = new CallExpressionResolver();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.candidateResolver = new CandidateResolver();\n        this.importsResolver = new ImportsResolver();\n        this.jetImportsFactory = new JetImportsFactory();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n        this.delegatedPropertyResolver = new DelegatedPropertyResolver();\n        this.functionAnalyzerExtension = new FunctionAnalyzerExtension();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setContext(topDownAnalysisContext);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        this.topDownAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        this.topDownAnalysisContext.setTopDownAnalysisParameters(topDownAnalysisParameters);\n\n        this.bodyResolver.setAnnotationResolver(annotationResolver);\n        this.bodyResolver.setCallResolver(callResolver);\n        this.bodyResolver.setContext(topDownAnalysisContext);\n        this.bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        this.bodyResolver.setDeclarationsChecker(declarationsChecker);\n        this.bodyResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        this.bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        this.bodyResolver.setFunctionAnalyzerExtension(functionAnalyzerExtension);\n        this.bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        this.bodyResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.bodyResolver.setTrace(bindingTrace);\n\n        this.controlFlowAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.controlFlowAnalyzer.setTrace(bindingTrace);\n\n        this.declarationsChecker.setTrace(bindingTrace);\n\n        this.descriptorResolver.setAnnotationResolver(annotationResolver);\n        this.descriptorResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        this.descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        this.descriptorResolver.setTypeResolver(typeResolver);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setContext(topDownAnalysisContext);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setExpressionTypingServices(expressionTypingServices);\n\n        callResolver.setArgumentTypeResolver(argumentTypeResolver);\n        callResolver.setCandidateResolver(candidateResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setTypeResolver(typeResolver);\n\n        argumentTypeResolver.setExpressionTypingServices(expressionTypingServices);\n        argumentTypeResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setAnnotationResolver(annotationResolver);\n        expressionTypingServices.setCallExpressionResolver(callExpressionResolver);\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setExtensionProvider(callResolverExtensionProvider);\n        expressionTypingServices.setPlatformToKotlinClassMap(platformToKotlinClassMap);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        callExpressionResolver.setExpressionTypingServices(expressionTypingServices);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setModuleDescriptor(moduleDescriptor);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        candidateResolver.setArgumentTypeResolver(argumentTypeResolver);\n\n        importsResolver.setContext(topDownAnalysisContext);\n        importsResolver.setImportsFactory(jetImportsFactory);\n        importsResolver.setModuleDescriptor(moduleDescriptor);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        jetImportsFactory.setProject(project);\n\n        scriptHeaderResolver.setContext(topDownAnalysisContext);\n        scriptHeaderResolver.setDependencyClassByQualifiedNameResolver(dependencyClassByQualifiedNameResolverDummy);\n        scriptHeaderResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        scriptHeaderResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        overloadResolver.setContext(topDownAnalysisContext);\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setContext(topDownAnalysisContext);\n        overrideResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setContext(topDownAnalysisContext);\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n        delegatedPropertyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        functionAnalyzerExtension.setTrace(bindingTrace);\n\n        scriptBodyResolver.setContext(topDownAnalysisContext);\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n        scriptBodyResolver.setTrace(bindingTrace);\n\n    }","commit_id":"1f74f0234436253584d5dd89412af38a53e1f096","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public InjectorForTopDownAnalyzerForJvm(\n        @NotNull Project project,\n        @NotNull TopDownAnalysisParameters topDownAnalysisParameters,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptorImpl moduleDescriptor\n    ) {\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.topDownAnalysisContext = new TopDownAnalysisContext();\n        this.bodyResolver = new BodyResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.descriptorResolver = new DescriptorResolver();\n        this.callResolverExtensionProvider = new CallResolverExtensionProvider();\n        this.project = project;\n        this.topDownAnalysisParameters = topDownAnalysisParameters;\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.javaDescriptorResolver = new JavaDescriptorResolver();\n        this.javaToKotlinClassMap = org.jetbrains.jet.lang.resolve.java.mapping.JavaToKotlinClassMap.getInstance();\n        this.javaClassFinder = new JavaClassFinderImpl();\n        this.traceBasedExternalSignatureResolver = new TraceBasedExternalSignatureResolver();\n        this.traceBasedJavaResolverCache = new TraceBasedJavaResolverCache();\n        this.traceBasedErrorReporter = new TraceBasedErrorReporter();\n        this.psiBasedMethodSignatureChecker = new PsiBasedMethodSignatureChecker();\n        this.psiBasedExternalAnnotationResolver = new PsiBasedExternalAnnotationResolver();\n        this.mutablePackageFragmentProvider = new MutablePackageFragmentProvider(getModuleDescriptor());\n        this.namespaceFactory = new NamespaceFactoryImpl();\n        this.javaPackageFragmentProvider = new JavaPackageFragmentProviderImpl();\n        this.virtualFileFinder = org.jetbrains.jet.lang.resolve.kotlin.VirtualFileFinder.SERVICE.getInstance(project);\n        this.declarationResolver = new DeclarationResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.argumentTypeResolver = new ArgumentTypeResolver();\n        this.expressionTypingServices = new ExpressionTypingServices();\n        this.callExpressionResolver = new CallExpressionResolver();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.candidateResolver = new CandidateResolver();\n        this.importsResolver = new ImportsResolver();\n        this.jetImportsFactory = new JetImportsFactory();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n        this.delegatedPropertyResolver = new DelegatedPropertyResolver();\n        this.functionAnalyzerExtension = new FunctionAnalyzerExtension();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n        this.javaClassResolver = new JavaClassResolver();\n        this.javaAnnotationResolver = new JavaAnnotationResolver();\n        this.javaAnnotationArgumentResolver = new JavaAnnotationArgumentResolver();\n        this.javaTypeTransformer = new JavaTypeTransformer();\n        this.deserializedDescriptorResolver = new DeserializedDescriptorResolver();\n        this.annotationDescriptorDeserializer = new AnnotationDescriptorDeserializer();\n        this.javaFunctionResolver = new JavaFunctionResolver();\n        this.javaTypeParameterResolver = new JavaTypeParameterResolver();\n        this.javaValueParameterResolver = new JavaValueParameterResolver();\n        this.javaMemberResolver = new JavaMemberResolver();\n        this.javaConstructorResolver = new JavaConstructorResolver();\n        this.javaPropertyResolver = new JavaPropertyResolver();\n        this.javaSupertypeResolver = new JavaSupertypeResolver();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setContext(topDownAnalysisContext);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        this.topDownAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        this.topDownAnalysisContext.setTopDownAnalysisParameters(topDownAnalysisParameters);\n\n        this.bodyResolver.setAnnotationResolver(annotationResolver);\n        this.bodyResolver.setCallResolver(callResolver);\n        this.bodyResolver.setContext(topDownAnalysisContext);\n        this.bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        this.bodyResolver.setDeclarationsChecker(declarationsChecker);\n        this.bodyResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        this.bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        this.bodyResolver.setFunctionAnalyzerExtension(functionAnalyzerExtension);\n        this.bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        this.bodyResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.bodyResolver.setTrace(bindingTrace);\n\n        this.controlFlowAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.controlFlowAnalyzer.setTrace(bindingTrace);\n\n        this.declarationsChecker.setTrace(bindingTrace);\n\n        this.descriptorResolver.setAnnotationResolver(annotationResolver);\n        this.descriptorResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        this.descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        this.descriptorResolver.setTypeResolver(typeResolver);\n\n        javaDescriptorResolver.setClassResolver(javaClassResolver);\n        javaDescriptorResolver.setPackageFragmentProvider(javaPackageFragmentProvider);\n\n        javaClassFinder.setProject(project);\n\n        traceBasedExternalSignatureResolver.setAnnotationResolver(javaAnnotationResolver);\n        traceBasedExternalSignatureResolver.setTrace(bindingTrace);\n\n        traceBasedJavaResolverCache.setTrace(bindingTrace);\n\n        traceBasedErrorReporter.setTrace(bindingTrace);\n\n        psiBasedMethodSignatureChecker.setAnnotationResolver(javaAnnotationResolver);\n        psiBasedMethodSignatureChecker.setExternalSignatureResolver(traceBasedExternalSignatureResolver);\n\n        namespaceFactory.setModule(moduleDescriptor);\n        namespaceFactory.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        namespaceFactory.setTrace(bindingTrace);\n\n        this.javaPackageFragmentProvider.setCache(traceBasedJavaResolverCache);\n        this.javaPackageFragmentProvider.setDeserializedDescriptorResolver(deserializedDescriptorResolver);\n        this.javaPackageFragmentProvider.setJavaClassFinder(javaClassFinder);\n        this.javaPackageFragmentProvider.setJavaDescriptorResolver(javaDescriptorResolver);\n        this.javaPackageFragmentProvider.setKotlinClassFinder(virtualFileFinder);\n        this.javaPackageFragmentProvider.setMemberResolver(javaMemberResolver);\n        this.javaPackageFragmentProvider.setModule(moduleDescriptor);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setContext(topDownAnalysisContext);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setExpressionTypingServices(expressionTypingServices);\n\n        callResolver.setArgumentTypeResolver(argumentTypeResolver);\n        callResolver.setCandidateResolver(candidateResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setTypeResolver(typeResolver);\n\n        argumentTypeResolver.setExpressionTypingServices(expressionTypingServices);\n        argumentTypeResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setAnnotationResolver(annotationResolver);\n        expressionTypingServices.setCallExpressionResolver(callExpressionResolver);\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setExtensionProvider(callResolverExtensionProvider);\n        expressionTypingServices.setPlatformToKotlinClassMap(javaToKotlinClassMap);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        callExpressionResolver.setExpressionTypingServices(expressionTypingServices);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setModuleDescriptor(moduleDescriptor);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        candidateResolver.setArgumentTypeResolver(argumentTypeResolver);\n\n        importsResolver.setContext(topDownAnalysisContext);\n        importsResolver.setImportsFactory(jetImportsFactory);\n        importsResolver.setModuleDescriptor(moduleDescriptor);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        jetImportsFactory.setProject(project);\n\n        scriptHeaderResolver.setContext(topDownAnalysisContext);\n        scriptHeaderResolver.setDependencyClassByQualifiedNameResolver(javaDescriptorResolver);\n        scriptHeaderResolver.setNamespaceFactory(namespaceFactory);\n        scriptHeaderResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        overloadResolver.setContext(topDownAnalysisContext);\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setContext(topDownAnalysisContext);\n        overrideResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setContext(topDownAnalysisContext);\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setNamespaceFactory(namespaceFactory);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n        delegatedPropertyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        functionAnalyzerExtension.setTrace(bindingTrace);\n\n        scriptBodyResolver.setContext(topDownAnalysisContext);\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n        scriptBodyResolver.setTrace(bindingTrace);\n\n        javaClassResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaClassResolver.setCache(traceBasedJavaResolverCache);\n        javaClassResolver.setDeserializedDescriptorResolver(deserializedDescriptorResolver);\n        javaClassResolver.setFunctionResolver(javaFunctionResolver);\n        javaClassResolver.setJavaClassFinder(javaClassFinder);\n        javaClassResolver.setKotlinClassFinder(virtualFileFinder);\n        javaClassResolver.setMemberResolver(javaMemberResolver);\n        javaClassResolver.setPackageFragmentProvider(javaPackageFragmentProvider);\n        javaClassResolver.setSupertypesResolver(javaSupertypeResolver);\n        javaClassResolver.setTypeParameterResolver(javaTypeParameterResolver);\n\n        javaAnnotationResolver.setArgumentResolver(javaAnnotationArgumentResolver);\n        javaAnnotationResolver.setClassResolver(javaClassResolver);\n        javaAnnotationResolver.setExternalAnnotationResolver(psiBasedExternalAnnotationResolver);\n\n        javaAnnotationArgumentResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaAnnotationArgumentResolver.setClassResolver(javaClassResolver);\n        javaAnnotationArgumentResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaTypeTransformer.setClassResolver(javaClassResolver);\n\n        deserializedDescriptorResolver.setAnnotationDeserializer(annotationDescriptorDeserializer);\n        deserializedDescriptorResolver.setErrorReporter(traceBasedErrorReporter);\n        deserializedDescriptorResolver.setJavaClassResolver(javaClassResolver);\n        deserializedDescriptorResolver.setJavaPackageFragmentProvider(javaPackageFragmentProvider);\n\n        annotationDescriptorDeserializer.setErrorReporter(traceBasedErrorReporter);\n        annotationDescriptorDeserializer.setJavaClassResolver(javaClassResolver);\n        annotationDescriptorDeserializer.setKotlinClassFinder(virtualFileFinder);\n\n        javaFunctionResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaFunctionResolver.setCache(traceBasedJavaResolverCache);\n        javaFunctionResolver.setErrorReporter(traceBasedErrorReporter);\n        javaFunctionResolver.setExternalSignatureResolver(traceBasedExternalSignatureResolver);\n        javaFunctionResolver.setSignatureChecker(psiBasedMethodSignatureChecker);\n        javaFunctionResolver.setTypeParameterResolver(javaTypeParameterResolver);\n        javaFunctionResolver.setTypeTransformer(javaTypeTransformer);\n        javaFunctionResolver.setValueParameterResolver(javaValueParameterResolver);\n\n        javaTypeParameterResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaValueParameterResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaValueParameterResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaMemberResolver.setClassResolver(javaClassResolver);\n        javaMemberResolver.setConstructorResolver(javaConstructorResolver);\n        javaMemberResolver.setFunctionResolver(javaFunctionResolver);\n        javaMemberResolver.setPropertyResolver(javaPropertyResolver);\n\n        javaConstructorResolver.setCache(traceBasedJavaResolverCache);\n        javaConstructorResolver.setExternalSignatureResolver(traceBasedExternalSignatureResolver);\n        javaConstructorResolver.setTypeTransformer(javaTypeTransformer);\n        javaConstructorResolver.setValueParameterResolver(javaValueParameterResolver);\n\n        javaPropertyResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaPropertyResolver.setCache(traceBasedJavaResolverCache);\n        javaPropertyResolver.setErrorReporter(traceBasedErrorReporter);\n        javaPropertyResolver.setExternalSignatureResolver(traceBasedExternalSignatureResolver);\n        javaPropertyResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaSupertypeResolver.setClassResolver(javaClassResolver);\n        javaSupertypeResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaClassFinder.initialize();\n\n    }","id":56215,"modified_method":"public InjectorForTopDownAnalyzerForJvm(\n        @NotNull Project project,\n        @NotNull TopDownAnalysisParameters topDownAnalysisParameters,\n        @NotNull BindingTrace bindingTrace,\n        @NotNull ModuleDescriptorImpl moduleDescriptor\n    ) {\n        this.topDownAnalyzer = new TopDownAnalyzer();\n        this.topDownAnalysisContext = new TopDownAnalysisContext();\n        this.bodyResolver = new BodyResolver();\n        this.controlFlowAnalyzer = new ControlFlowAnalyzer();\n        this.declarationsChecker = new DeclarationsChecker();\n        this.descriptorResolver = new DescriptorResolver();\n        this.callResolverExtensionProvider = new CallResolverExtensionProvider();\n        this.project = project;\n        this.topDownAnalysisParameters = topDownAnalysisParameters;\n        this.bindingTrace = bindingTrace;\n        this.moduleDescriptor = moduleDescriptor;\n        this.javaDescriptorResolver = new JavaDescriptorResolver();\n        this.javaToKotlinClassMap = org.jetbrains.jet.lang.resolve.java.mapping.JavaToKotlinClassMap.getInstance();\n        this.javaClassFinder = new JavaClassFinderImpl();\n        this.traceBasedExternalSignatureResolver = new TraceBasedExternalSignatureResolver();\n        this.traceBasedJavaResolverCache = new TraceBasedJavaResolverCache();\n        this.traceBasedErrorReporter = new TraceBasedErrorReporter();\n        this.psiBasedMethodSignatureChecker = new PsiBasedMethodSignatureChecker();\n        this.psiBasedExternalAnnotationResolver = new PsiBasedExternalAnnotationResolver();\n        this.mutablePackageFragmentProvider = new MutablePackageFragmentProvider(getModuleDescriptor());\n        this.javaPackageFragmentProvider = new JavaPackageFragmentProviderImpl();\n        this.virtualFileFinder = org.jetbrains.jet.lang.resolve.kotlin.VirtualFileFinder.SERVICE.getInstance(project);\n        this.declarationResolver = new DeclarationResolver();\n        this.annotationResolver = new AnnotationResolver();\n        this.callResolver = new CallResolver();\n        this.argumentTypeResolver = new ArgumentTypeResolver();\n        this.expressionTypingServices = new ExpressionTypingServices();\n        this.callExpressionResolver = new CallExpressionResolver();\n        this.typeResolver = new TypeResolver();\n        this.qualifiedExpressionResolver = new QualifiedExpressionResolver();\n        this.candidateResolver = new CandidateResolver();\n        this.importsResolver = new ImportsResolver();\n        this.jetImportsFactory = new JetImportsFactory();\n        this.scriptHeaderResolver = new ScriptHeaderResolver();\n        this.overloadResolver = new OverloadResolver();\n        this.overrideResolver = new OverrideResolver();\n        this.typeHierarchyResolver = new TypeHierarchyResolver();\n        this.delegatedPropertyResolver = new DelegatedPropertyResolver();\n        this.functionAnalyzerExtension = new FunctionAnalyzerExtension();\n        this.scriptBodyResolver = new ScriptBodyResolver();\n        this.javaClassResolver = new JavaClassResolver();\n        this.javaAnnotationResolver = new JavaAnnotationResolver();\n        this.javaAnnotationArgumentResolver = new JavaAnnotationArgumentResolver();\n        this.javaTypeTransformer = new JavaTypeTransformer();\n        this.deserializedDescriptorResolver = new DeserializedDescriptorResolver();\n        this.annotationDescriptorDeserializer = new AnnotationDescriptorDeserializer();\n        this.javaFunctionResolver = new JavaFunctionResolver();\n        this.javaTypeParameterResolver = new JavaTypeParameterResolver();\n        this.javaValueParameterResolver = new JavaValueParameterResolver();\n        this.javaMemberResolver = new JavaMemberResolver();\n        this.javaConstructorResolver = new JavaConstructorResolver();\n        this.javaPropertyResolver = new JavaPropertyResolver();\n        this.javaSupertypeResolver = new JavaSupertypeResolver();\n\n        this.topDownAnalyzer.setBodyResolver(bodyResolver);\n        this.topDownAnalyzer.setContext(topDownAnalysisContext);\n        this.topDownAnalyzer.setDeclarationResolver(declarationResolver);\n        this.topDownAnalyzer.setModuleDescriptor(moduleDescriptor);\n        this.topDownAnalyzer.setOverloadResolver(overloadResolver);\n        this.topDownAnalyzer.setOverrideResolver(overrideResolver);\n        this.topDownAnalyzer.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        this.topDownAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.topDownAnalyzer.setTrace(bindingTrace);\n        this.topDownAnalyzer.setTypeHierarchyResolver(typeHierarchyResolver);\n\n        this.topDownAnalysisContext.setTopDownAnalysisParameters(topDownAnalysisParameters);\n\n        this.bodyResolver.setAnnotationResolver(annotationResolver);\n        this.bodyResolver.setCallResolver(callResolver);\n        this.bodyResolver.setContext(topDownAnalysisContext);\n        this.bodyResolver.setControlFlowAnalyzer(controlFlowAnalyzer);\n        this.bodyResolver.setDeclarationsChecker(declarationsChecker);\n        this.bodyResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        this.bodyResolver.setExpressionTypingServices(expressionTypingServices);\n        this.bodyResolver.setFunctionAnalyzerExtension(functionAnalyzerExtension);\n        this.bodyResolver.setScriptBodyResolverResolver(scriptBodyResolver);\n        this.bodyResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.bodyResolver.setTrace(bindingTrace);\n\n        this.controlFlowAnalyzer.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        this.controlFlowAnalyzer.setTrace(bindingTrace);\n\n        this.declarationsChecker.setTrace(bindingTrace);\n\n        this.descriptorResolver.setAnnotationResolver(annotationResolver);\n        this.descriptorResolver.setDelegatedPropertyResolver(delegatedPropertyResolver);\n        this.descriptorResolver.setExpressionTypingServices(expressionTypingServices);\n        this.descriptorResolver.setTypeResolver(typeResolver);\n\n        javaDescriptorResolver.setClassResolver(javaClassResolver);\n        javaDescriptorResolver.setPackageFragmentProvider(javaPackageFragmentProvider);\n\n        javaClassFinder.setProject(project);\n\n        traceBasedExternalSignatureResolver.setAnnotationResolver(javaAnnotationResolver);\n        traceBasedExternalSignatureResolver.setTrace(bindingTrace);\n\n        traceBasedJavaResolverCache.setTrace(bindingTrace);\n\n        traceBasedErrorReporter.setTrace(bindingTrace);\n\n        psiBasedMethodSignatureChecker.setAnnotationResolver(javaAnnotationResolver);\n        psiBasedMethodSignatureChecker.setExternalSignatureResolver(traceBasedExternalSignatureResolver);\n\n        this.javaPackageFragmentProvider.setCache(traceBasedJavaResolverCache);\n        this.javaPackageFragmentProvider.setDeserializedDescriptorResolver(deserializedDescriptorResolver);\n        this.javaPackageFragmentProvider.setJavaClassFinder(javaClassFinder);\n        this.javaPackageFragmentProvider.setJavaDescriptorResolver(javaDescriptorResolver);\n        this.javaPackageFragmentProvider.setKotlinClassFinder(virtualFileFinder);\n        this.javaPackageFragmentProvider.setMemberResolver(javaMemberResolver);\n        this.javaPackageFragmentProvider.setModule(moduleDescriptor);\n\n        declarationResolver.setAnnotationResolver(annotationResolver);\n        declarationResolver.setContext(topDownAnalysisContext);\n        declarationResolver.setDescriptorResolver(descriptorResolver);\n        declarationResolver.setImportsResolver(importsResolver);\n        declarationResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        declarationResolver.setTrace(bindingTrace);\n\n        annotationResolver.setCallResolver(callResolver);\n        annotationResolver.setExpressionTypingServices(expressionTypingServices);\n\n        callResolver.setArgumentTypeResolver(argumentTypeResolver);\n        callResolver.setCandidateResolver(candidateResolver);\n        callResolver.setExpressionTypingServices(expressionTypingServices);\n        callResolver.setTypeResolver(typeResolver);\n\n        argumentTypeResolver.setExpressionTypingServices(expressionTypingServices);\n        argumentTypeResolver.setTypeResolver(typeResolver);\n\n        expressionTypingServices.setAnnotationResolver(annotationResolver);\n        expressionTypingServices.setCallExpressionResolver(callExpressionResolver);\n        expressionTypingServices.setCallResolver(callResolver);\n        expressionTypingServices.setDescriptorResolver(descriptorResolver);\n        expressionTypingServices.setExtensionProvider(callResolverExtensionProvider);\n        expressionTypingServices.setPlatformToKotlinClassMap(javaToKotlinClassMap);\n        expressionTypingServices.setProject(project);\n        expressionTypingServices.setTypeResolver(typeResolver);\n\n        callExpressionResolver.setExpressionTypingServices(expressionTypingServices);\n\n        typeResolver.setAnnotationResolver(annotationResolver);\n        typeResolver.setModuleDescriptor(moduleDescriptor);\n        typeResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n\n        candidateResolver.setArgumentTypeResolver(argumentTypeResolver);\n\n        importsResolver.setContext(topDownAnalysisContext);\n        importsResolver.setImportsFactory(jetImportsFactory);\n        importsResolver.setModuleDescriptor(moduleDescriptor);\n        importsResolver.setQualifiedExpressionResolver(qualifiedExpressionResolver);\n        importsResolver.setTrace(bindingTrace);\n\n        jetImportsFactory.setProject(project);\n\n        scriptHeaderResolver.setContext(topDownAnalysisContext);\n        scriptHeaderResolver.setDependencyClassByQualifiedNameResolver(javaDescriptorResolver);\n        scriptHeaderResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        scriptHeaderResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        scriptHeaderResolver.setTrace(bindingTrace);\n\n        overloadResolver.setContext(topDownAnalysisContext);\n        overloadResolver.setTrace(bindingTrace);\n\n        overrideResolver.setContext(topDownAnalysisContext);\n        overrideResolver.setTopDownAnalysisParameters(topDownAnalysisParameters);\n        overrideResolver.setTrace(bindingTrace);\n\n        typeHierarchyResolver.setContext(topDownAnalysisContext);\n        typeHierarchyResolver.setDescriptorResolver(descriptorResolver);\n        typeHierarchyResolver.setImportsResolver(importsResolver);\n        typeHierarchyResolver.setPackageFragmentProvider(mutablePackageFragmentProvider);\n        typeHierarchyResolver.setScriptHeaderResolver(scriptHeaderResolver);\n        typeHierarchyResolver.setTrace(bindingTrace);\n\n        delegatedPropertyResolver.setExpressionTypingServices(expressionTypingServices);\n\n        functionAnalyzerExtension.setTrace(bindingTrace);\n\n        scriptBodyResolver.setContext(topDownAnalysisContext);\n        scriptBodyResolver.setExpressionTypingServices(expressionTypingServices);\n        scriptBodyResolver.setTrace(bindingTrace);\n\n        javaClassResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaClassResolver.setCache(traceBasedJavaResolverCache);\n        javaClassResolver.setDeserializedDescriptorResolver(deserializedDescriptorResolver);\n        javaClassResolver.setFunctionResolver(javaFunctionResolver);\n        javaClassResolver.setJavaClassFinder(javaClassFinder);\n        javaClassResolver.setKotlinClassFinder(virtualFileFinder);\n        javaClassResolver.setMemberResolver(javaMemberResolver);\n        javaClassResolver.setPackageFragmentProvider(javaPackageFragmentProvider);\n        javaClassResolver.setSupertypesResolver(javaSupertypeResolver);\n        javaClassResolver.setTypeParameterResolver(javaTypeParameterResolver);\n\n        javaAnnotationResolver.setArgumentResolver(javaAnnotationArgumentResolver);\n        javaAnnotationResolver.setClassResolver(javaClassResolver);\n        javaAnnotationResolver.setExternalAnnotationResolver(psiBasedExternalAnnotationResolver);\n\n        javaAnnotationArgumentResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaAnnotationArgumentResolver.setClassResolver(javaClassResolver);\n        javaAnnotationArgumentResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaTypeTransformer.setClassResolver(javaClassResolver);\n\n        deserializedDescriptorResolver.setAnnotationDeserializer(annotationDescriptorDeserializer);\n        deserializedDescriptorResolver.setErrorReporter(traceBasedErrorReporter);\n        deserializedDescriptorResolver.setJavaClassResolver(javaClassResolver);\n        deserializedDescriptorResolver.setJavaPackageFragmentProvider(javaPackageFragmentProvider);\n\n        annotationDescriptorDeserializer.setErrorReporter(traceBasedErrorReporter);\n        annotationDescriptorDeserializer.setJavaClassResolver(javaClassResolver);\n        annotationDescriptorDeserializer.setKotlinClassFinder(virtualFileFinder);\n\n        javaFunctionResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaFunctionResolver.setCache(traceBasedJavaResolverCache);\n        javaFunctionResolver.setErrorReporter(traceBasedErrorReporter);\n        javaFunctionResolver.setExternalSignatureResolver(traceBasedExternalSignatureResolver);\n        javaFunctionResolver.setSignatureChecker(psiBasedMethodSignatureChecker);\n        javaFunctionResolver.setTypeParameterResolver(javaTypeParameterResolver);\n        javaFunctionResolver.setTypeTransformer(javaTypeTransformer);\n        javaFunctionResolver.setValueParameterResolver(javaValueParameterResolver);\n\n        javaTypeParameterResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaValueParameterResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaValueParameterResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaMemberResolver.setClassResolver(javaClassResolver);\n        javaMemberResolver.setConstructorResolver(javaConstructorResolver);\n        javaMemberResolver.setFunctionResolver(javaFunctionResolver);\n        javaMemberResolver.setPropertyResolver(javaPropertyResolver);\n\n        javaConstructorResolver.setCache(traceBasedJavaResolverCache);\n        javaConstructorResolver.setExternalSignatureResolver(traceBasedExternalSignatureResolver);\n        javaConstructorResolver.setTypeTransformer(javaTypeTransformer);\n        javaConstructorResolver.setValueParameterResolver(javaValueParameterResolver);\n\n        javaPropertyResolver.setAnnotationResolver(javaAnnotationResolver);\n        javaPropertyResolver.setCache(traceBasedJavaResolverCache);\n        javaPropertyResolver.setErrorReporter(traceBasedErrorReporter);\n        javaPropertyResolver.setExternalSignatureResolver(traceBasedExternalSignatureResolver);\n        javaPropertyResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaSupertypeResolver.setClassResolver(javaClassResolver);\n        javaSupertypeResolver.setTypeTransformer(javaTypeTransformer);\n\n        javaClassFinder.initialize();\n\n    }","commit_id":"1f74f0234436253584d5dd89412af38a53e1f096","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void processScriptHierarchy(@NotNull JetScript script, @NotNull JetScope outerScope) {\n        JetFile file = (JetFile) script.getContainingFile();\n        JetNamespaceHeader namespaceHeader = file.getNamespaceHeader();\n        FqName fqName = namespaceHeader != null ? new FqName(namespaceHeader.getQualifiedName()) : FqName.ROOT;\n        PackageFragmentDescriptor ns = namespaceFactory.createNamespaceDescriptorPathIfNeeded(fqName);\n\n        Integer priority = script.getUserData(PRIORITY_KEY);\n        if (priority == null) {\n            priority = 0;\n        }\n\n        Name className = new FqName(ScriptNameUtil.classNameForScript((JetFile) script.getContainingFile()).replace('/', '.')).shortName();\n        ScriptDescriptor scriptDescriptor = new ScriptDescriptor(ns, priority, outerScope, className);\n\n        //WriteThroughScope scriptScope = new WriteThroughScope(\n        //        outerScope, ns.getMemberScope(), new TraceBasedRedeclarationHandler(trace));\n        WritableScopeImpl scriptScope = new WritableScopeImpl(outerScope, scriptDescriptor, RedeclarationHandler.DO_NOTHING, \"script\");\n        scriptScope.changeLockLevel(WritableScope.LockLevel.BOTH);\n\n        context.getScriptScopes().put(script, scriptScope);\n        context.getScripts().put(script, scriptDescriptor);\n\n        trace.record(BindingContext.SCRIPT, script, scriptDescriptor);\n\n        ((WritableScope)outerScope).addClassifierDescriptor(scriptDescriptor.getClassDescriptor());\n    }","id":56216,"modified_method":"public void processScriptHierarchy(@NotNull JetScript script, @NotNull JetScope outerScope) {\n        JetFile file = (JetFile) script.getContainingFile();\n        JetNamespaceHeader namespaceHeader = file.getNamespaceHeader();\n        FqName fqName = namespaceHeader != null ? new FqName(namespaceHeader.getQualifiedName()) : FqName.ROOT;\n        PackageFragmentDescriptor ns = packageFragmentProvider.getOrCreateFragment(fqName);\n\n        Integer priority = script.getUserData(PRIORITY_KEY);\n        if (priority == null) {\n            priority = 0;\n        }\n\n        Name className = new FqName(ScriptNameUtil.classNameForScript((JetFile) script.getContainingFile()).replace('/', '.')).shortName();\n        ScriptDescriptor scriptDescriptor = new ScriptDescriptor(ns, priority, outerScope, className);\n\n        //WriteThroughScope scriptScope = new WriteThroughScope(\n        //        outerScope, ns.getMemberScope(), new TraceBasedRedeclarationHandler(trace));\n        WritableScopeImpl scriptScope = new WritableScopeImpl(outerScope, scriptDescriptor, RedeclarationHandler.DO_NOTHING, \"script\");\n        scriptScope.changeLockLevel(WritableScope.LockLevel.BOTH);\n\n        context.getScriptScopes().put(script, scriptScope);\n        context.getScripts().put(script, scriptDescriptor);\n\n        trace.record(BindingContext.SCRIPT, script, scriptDescriptor);\n\n        ((WritableScope)outerScope).addClassifierDescriptor(scriptDescriptor.getClassDescriptor());\n    }","commit_id":"1f74f0234436253584d5dd89412af38a53e1f096","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n        public void visitJetFile(@NotNull JetFile file) {\n            MutablePackageFragmentDescriptor packageFragment = namespaceFactory.createPackageFragmentIfNeeded(file);\n            context.getPackageFragments().put(file, packageFragment);\n\n            PackageViewDescriptor packageView = packageFragment.getContainingDeclaration().getPackage(packageFragment.getFqName());\n            ChainedScope rootPlusPackageScope = new ChainedScope(packageView, \"Root scope for \" + file, packageView.getMemberScope(), outerScope);\n            WriteThroughScope packageScope = new WriteThroughScope(rootPlusPackageScope, packageFragment.getMemberScope(),\n                                                                     new TraceBasedRedeclarationHandler(trace), \"package in file \" + file.getName());\n            packageScope.changeLockLevel(WritableScope.LockLevel.BOTH);\n            context.getNamespaceScopes().put(file, packageScope);\n\n            if (file.isScript()) {\n                scriptHeaderResolver.processScriptHierarchy(file.getScript(), packageScope);\n            }\n\n            prepareForDeferredCall(packageScope, packageFragment, file);\n        }","id":56217,"modified_method":"@Override\n        public void visitJetFile(@NotNull JetFile file) {\n            MutablePackageFragmentDescriptor packageFragment = getOrCreatePackageFragmentForFile(file);\n            context.getPackageFragments().put(file, packageFragment);\n\n            PackageViewDescriptor packageView = packageFragment.getContainingDeclaration().getPackage(packageFragment.getFqName());\n            ChainedScope rootPlusPackageScope = new ChainedScope(packageView, \"Root scope for \" + file, packageView.getMemberScope(), outerScope);\n            WriteThroughScope packageScope = new WriteThroughScope(rootPlusPackageScope, packageFragment.getMemberScope(),\n                                                                     new TraceBasedRedeclarationHandler(trace), \"package in file \" + file.getName());\n            packageScope.changeLockLevel(WritableScope.LockLevel.BOTH);\n            context.getNamespaceScopes().put(file, packageScope);\n\n            if (file.isScript()) {\n                scriptHeaderResolver.processScriptHierarchy(file.getScript(), packageScope);\n            }\n\n            prepareForDeferredCall(packageScope, packageFragment, file);\n        }","commit_id":"1f74f0234436253584d5dd89412af38a53e1f096","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Test\n\tpublic void testGetEntriesOrderByRatings() throws Exception {\n\t\tList<AssetEntry> assetEntries = createAssetEntries();\n\n\t\tAssetEntryQuery assetEntryQuery = new AssetEntryQuery();\n\n\t\tassetEntryQuery.setOrderByCol1(\"ratings\");\n\t\tassetEntryQuery.setOrderByType1(\"DESC\");\n\n\t\tList<AssetEntry> entries = AssetEntryLocalServiceUtil.getEntries(\n\t\t\tassetEntryQuery);\n\n\t\tvalidateAssetEntries(assetEntries, entries);\n\n\t\tdeleteAssetEntries();\n\t}","id":56218,"modified_method":"@Test\n\tpublic void testGetEntriesOrderByRatings() throws Exception {\n\t\tList<AssetEntry> assetEntries = createAssetEntries();\n\n\t\tAssetEntryQuery assetEntryQuery = new AssetEntryQuery();\n\n\t\tassetEntryQuery.setOrderByCol1(\"ratings\");\n\t\tassetEntryQuery.setOrderByType1(\"DESC\");\n\n\t\tList<AssetEntry> entries = AssetEntryLocalServiceUtil.getEntries(\n\t\t\tassetEntryQuery);\n\n\t\tvalidateAssetEntries(assetEntries, entries);\n\t}","commit_id":"3dccc6f128e85bb1ee687899c57066f97f672a6f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testGetEntriesNoFilters() throws Exception {\n\t\tAssetEntry assetEntry = null;\n\n\t\ttry {\n\t\t\tassetEntry = AssetTestUtil.addAssetEntry(_group.getGroupId());\n\n\t\t\tAssetEntryQuery assetEntryQuery = new AssetEntryQuery();\n\n\t\t\tList<AssetEntry> entries = AssetEntryLocalServiceUtil.getEntries(\n\t\t\t\tassetEntryQuery);\n\n\t\t\tAssert.assertEquals(1, entries.size());\n\n\t\t\tAssetEntry assetEntry1 = entries.get(0);\n\n\t\t\tAssert.assertEquals(\n\t\t\t\tassetEntry.getEntryId(), assetEntry1.getEntryId());\n\t\t}\n\t\tfinally {\n\t\t\tAssetEntryLocalServiceUtil.deleteAssetEntry(assetEntry);\n\t\t}\n\t}","id":56219,"modified_method":"@Test\n\tpublic void testGetEntriesNoFilters() throws Exception {\n\t\tAssetEntry assetEntry = AssetTestUtil.addAssetEntry(\n\t\t\t_group.getGroupId());\n\n\t\tAssetEntryQuery assetEntryQuery = new AssetEntryQuery();\n\n\t\tList<AssetEntry> entries = AssetEntryLocalServiceUtil.getEntries(\n\t\t\tassetEntryQuery);\n\n\t\tAssert.assertEquals(1, entries.size());\n\n\t\tAssetEntry assetEntry1 = entries.get(0);\n\n\t\tAssert.assertEquals(assetEntry.getEntryId(), assetEntry1.getEntryId());\n\t}","commit_id":"3dccc6f128e85bb1ee687899c57066f97f672a6f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected List<AssetEntry> createAssetEntries() throws Exception {\n\t\tCalendar calendar = CalendarFactoryUtil.getCalendar();\n\n\t\tcalendar.add(Calendar.DAY_OF_MONTH, -1);\n\n\t\tDate yesterday = calendar.getTime();\n\n\t\tcalendar.add(Calendar.DAY_OF_MONTH, -2);\n\n\t\tDate dayBeforeYesterday = calendar.getTime();\n\n\t\t_assetEntry1 = AssetTestUtil.addAssetEntry(\n\t\t\t_group.getGroupId(), dayBeforeYesterday);\n\n\t\t_ratingStats1 = RatingsTestUtil.addStats(\n\t\t\t_assetEntry1.getClassName(), _assetEntry1.getClassPK(), 2000);\n\n\t\t_assetEntry2 = AssetTestUtil.addAssetEntry(\n\t\t\t_group.getGroupId(), dayBeforeYesterday);\n\n\t\t_ratingStats2 = RatingsTestUtil.addStats(\n\t\t\t_assetEntry2.getClassName(), _assetEntry2.getClassPK(), 1000);\n\n\t\t_assetEntry3 = AssetTestUtil.addAssetEntry(\n\t\t\t_group.getGroupId(), yesterday);\n\n\t\t_ratingStats3 = RatingsTestUtil.addStats(\n\t\t\t_assetEntry3.getClassName(), _assetEntry3.getClassPK(), 3000);\n\n\t\tList<AssetEntry> entries = new ArrayList<AssetEntry>(3);\n\n\t\tentries.add(_assetEntry3);\n\t\tentries.add(_assetEntry1);\n\t\tentries.add(_assetEntry2);\n\n\t\treturn entries;\n\t}","id":56220,"modified_method":"protected List<AssetEntry> createAssetEntries() throws Exception {\n\t\tCalendar calendar = CalendarFactoryUtil.getCalendar();\n\n\t\tcalendar.add(Calendar.DAY_OF_MONTH, -1);\n\n\t\tDate yesterday = calendar.getTime();\n\n\t\tcalendar.add(Calendar.DAY_OF_MONTH, -2);\n\n\t\tDate dayBeforeYesterday = calendar.getTime();\n\n\t\tAssetEntry assetEntry1 = AssetTestUtil.addAssetEntry(\n\t\t\t_group.getGroupId(), dayBeforeYesterday);\n\n\t\tRatingsTestUtil.addStats(\n\t\t\tassetEntry1.getClassName(), assetEntry1.getClassPK(), 2000);\n\n\t\tAssetEntry assetEntry2 = AssetTestUtil.addAssetEntry(\n\t\t\t_group.getGroupId(), dayBeforeYesterday);\n\n\t\tRatingsTestUtil.addStats(\n\t\t\tassetEntry2.getClassName(), assetEntry2.getClassPK(), 1000);\n\n\t\tAssetEntry assetEntry3 = AssetTestUtil.addAssetEntry(\n\t\t\t_group.getGroupId(), yesterday);\n\n\t\tRatingsTestUtil.addStats(\n\t\t\tassetEntry3.getClassName(), assetEntry3.getClassPK(), 3000);\n\n\t\tList<AssetEntry> entries = new ArrayList<AssetEntry>(3);\n\n\t\tentries.add(assetEntry3);\n\t\tentries.add(assetEntry1);\n\t\tentries.add(assetEntry2);\n\n\t\treturn entries;\n\t}","commit_id":"3dccc6f128e85bb1ee687899c57066f97f672a6f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testGetEntriesCountNoFilters() throws Exception {\n\t\tAssetEntry assetEntry = null;\n\n\t\ttry {\n\t\t\tassetEntry = AssetTestUtil.addAssetEntry(_group.getGroupId());\n\n\t\t\tAssetEntryQuery assetEntryQuery = new AssetEntryQuery();\n\n\t\t\tint count = AssetEntryLocalServiceUtil.getEntriesCount(\n\t\t\t\tassetEntryQuery);\n\n\t\t\tAssert.assertEquals(1, count);\n\t\t}\n\t\tfinally {\n\t\t\tAssetEntryLocalServiceUtil.deleteAssetEntry(assetEntry);\n\t\t}\n\t}","id":56221,"modified_method":"@Test\n\tpublic void testGetEntriesCountNoFilters() throws Exception {\n\t\tAssetTestUtil.addAssetEntry(_group.getGroupId());\n\n\t\tAssetEntryQuery assetEntryQuery = new AssetEntryQuery();\n\n\t\tint count = AssetEntryLocalServiceUtil.getEntriesCount(assetEntryQuery);\n\n\t\tAssert.assertEquals(1, count);\n\t}","commit_id":"3dccc6f128e85bb1ee687899c57066f97f672a6f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testGetEntriesOrderByPublishDateAndRatings() throws Exception {\n\t\tList<AssetEntry> assetEntries = createAssetEntries();\n\n\t\tAssetEntryQuery assetEntryQuery = new AssetEntryQuery();\n\n\t\tassetEntryQuery.setOrderByCol1(\"publishDate\");\n\t\tassetEntryQuery.setOrderByType1(\"DESC\");\n\n\t\tassetEntryQuery.setOrderByCol2(\"ratings\");\n\t\tassetEntryQuery.setOrderByType2(\"DESC\");\n\n\t\tList<AssetEntry> entries = AssetEntryLocalServiceUtil.getEntries(\n\t\t\tassetEntryQuery);\n\n\t\tvalidateAssetEntries(assetEntries, entries);\n\n\t\tdeleteAssetEntries();\n\t}","id":56222,"modified_method":"@Test\n\tpublic void testGetEntriesOrderByPublishDateAndRatings() throws Exception {\n\t\tList<AssetEntry> assetEntries = createAssetEntries();\n\n\t\tAssetEntryQuery assetEntryQuery = new AssetEntryQuery();\n\n\t\tassetEntryQuery.setOrderByCol1(\"publishDate\");\n\t\tassetEntryQuery.setOrderByType1(\"DESC\");\n\n\t\tassetEntryQuery.setOrderByCol2(\"ratings\");\n\t\tassetEntryQuery.setOrderByType2(\"DESC\");\n\n\t\tList<AssetEntry> entries = AssetEntryLocalServiceUtil.getEntries(\n\t\t\tassetEntryQuery);\n\n\t\tvalidateAssetEntries(assetEntries, entries);\n\t}","commit_id":"3dccc6f128e85bb1ee687899c57066f97f672a6f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public Tuple getNext() throws IOException\n    {\n        if (widerows)\n            return getNextWide();\n        try\n        {\n            // load the next pair\n            if (!reader.nextKeyValue())\n                return null;\n\n            CfDef cfDef = getCfDef(loadSignature);\n            ByteBuffer key = reader.getCurrentKey();\n            Map<ByteBuffer, IColumn> cf = reader.getCurrentValue();\n            assert key != null && cf != null;\n\n            // output tuple, will hold the key, each indexed column in a tuple, then a bag of the rest\n            // NOTE: we're setting the tuple size here only for the key so we can use setTupleValue on it\n\n            Tuple tuple = keyToTuple(key, cfDef, parseType(cfDef.getKey_validation_class()));\n            DefaultDataBag bag = new DefaultDataBag();\n\n            // we must add all the indexed columns first to match the schema\n            Map<ByteBuffer, Boolean> added = new HashMap<ByteBuffer, Boolean>();\n            // take care to iterate these in the same order as the schema does\n            for (ColumnDef cdef : cfDef.column_metadata)\n            {\n                if (cf.containsKey(cdef.name))\n                {\n                    tuple.append(columnToTuple(cf.get(cdef.name), cfDef, parseType(cfDef.getComparator_type())));\n                }\n                else\n                {   // otherwise, we need to add an empty tuple to take its place\n                    tuple.append(TupleFactory.getInstance().newTuple());\n                }\n                added.put(cdef.name, true);\n            }\n            // now add all the other columns\n            for (Map.Entry<ByteBuffer, IColumn> entry : cf.entrySet())\n            {\n                if (!added.containsKey(entry.getKey()))\n                    bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n            }\n            tuple.append(bag);\n            // finally, special top-level indexes if needed\n            if (usePartitionFilter)\n            {\n                for (ColumnDef cdef : getIndexes())\n                {\n                    Tuple throwaway = columnToTuple(cf.get(cdef.name), cfDef, parseType(cfDef.getComparator_type()));\n                    tuple.append(throwaway.get(1));\n                }\n            }\n            return tuple;\n        }\n        catch (InterruptedException e)\n        {\n            throw new IOException(e.getMessage());\n        }\n    }","id":56223,"modified_method":"@Override\n    public Tuple getNext() throws IOException\n    {\n        if (widerows)\n            return getNextWide();\n        try\n        {\n            // load the next pair\n            if (!reader.nextKeyValue())\n                return null;\n\n            CfDef cfDef = getCfDef(loadSignature);\n            ByteBuffer key = reader.getCurrentKey();\n            Map<ByteBuffer, IColumn> cf = reader.getCurrentValue();\n            assert key != null && cf != null;\n\n            // output tuple, will hold the key, each indexed column in a tuple, then a bag of the rest\n            // NOTE: we're setting the tuple size here only for the key so we can use setTupleValue on it\n\n            Tuple tuple = addKeyToTuple(null, key, cfDef, parseType(cfDef.getKey_validation_class()));\n            DefaultDataBag bag = new DefaultDataBag();\n\n            // we must add all the indexed columns first to match the schema\n            Map<ByteBuffer, Boolean> added = new HashMap<ByteBuffer, Boolean>();\n            // take care to iterate these in the same order as the schema does\n            for (ColumnDef cdef : cfDef.column_metadata)\n            {\n                if (cf.containsKey(cdef.name))\n                {\n                    tuple.append(columnToTuple(cf.get(cdef.name), cfDef, parseType(cfDef.getComparator_type())));\n                }\n                else\n                {   // otherwise, we need to add an empty tuple to take its place\n                    tuple.append(TupleFactory.getInstance().newTuple());\n                }\n                added.put(cdef.name, true);\n            }\n            // now add all the other columns\n            for (Map.Entry<ByteBuffer, IColumn> entry : cf.entrySet())\n            {\n                if (!added.containsKey(entry.getKey()))\n                    bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n            }\n            tuple.append(bag);\n            // finally, special top-level indexes if needed\n            if (usePartitionFilter)\n            {\n                for (ColumnDef cdef : getIndexes())\n                {\n                    Tuple throwaway = columnToTuple(cf.get(cdef.name), cfDef, parseType(cfDef.getComparator_type()));\n                    tuple.append(throwaway.get(1));\n                }\n            }\n            return tuple;\n        }\n        catch (InterruptedException e)\n        {\n            throw new IOException(e.getMessage());\n        }\n    }","commit_id":"7d2ce5f957b1fb392617c1ff05a561571eccd593","url":"https://github.com/apache/cassandra"},{"original_method":"public Tuple getNextWide() throws IOException\n    {\n        CfDef cfDef = getCfDef(loadSignature);\n        ByteBuffer key = null;\n        Tuple tuple = TupleFactory.getInstance().newTuple();\n        DefaultDataBag bag = new DefaultDataBag();\n        try\n        {\n            while(true)\n            {\n                hasNext = reader.nextKeyValue();\n                if (!hasNext)\n                {\n                    if (lastRow != null)\n                    {\n                        if (tuple.size() == 0) // lastRow is a new one\n                        {\n                            key = (ByteBuffer)reader.getCurrentKey();\n                            addKeyToTuple(tuple, key, cfDef, parseType(cfDef.getKey_validation_class()));\n                        }\n                        for (Map.Entry<ByteBuffer, IColumn> entry : lastRow.entrySet())\n                        {\n                            bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                        }\n                        lastKey = null;\n                        lastRow = null;\n                        tuple.append(bag);\n                        return tuple;\n                    }\n                    else\n                    {\n                        if (tuple.size() == 1) // rare case of just one wide row, key already set\n                        {\n                            tuple.append(bag);\n                            return tuple;\n                        }\n                        else\n                            return null;\n                    }\n                }\n                if (key != null && !((ByteBuffer)reader.getCurrentKey()).equals(key)) // key changed\n                {\n                    // read too much, hold on to it for next time\n                    lastKey = (ByteBuffer)reader.getCurrentKey();\n                    lastRow = (SortedMap<ByteBuffer,IColumn>)reader.getCurrentValue();\n                    // but return what we have so far\n                    tuple.append(bag);\n                    return tuple;\n                }\n                if (key == null) // only set the key on the first iteration\n                {\n                    key = (ByteBuffer)reader.getCurrentKey();\n                    if (lastKey != null && !(key.equals(lastKey))) // last key only had one value\n                    {\n                        addKeyToTuple(tuple, lastKey, cfDef, parseType(cfDef.getKey_validation_class()));\n                        for (Map.Entry<ByteBuffer, IColumn> entry : lastRow.entrySet())\n                        {\n                            bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                        }\n                        tuple.append(bag);\n                        lastKey = key;\n                        lastRow = (SortedMap<ByteBuffer,IColumn>)reader.getCurrentValue();\n                        return tuple;\n                    }\n                    addKeyToTuple(tuple, lastKey, cfDef, parseType(cfDef.getKey_validation_class()));\n                }\n                SortedMap<ByteBuffer,IColumn> row = (SortedMap<ByteBuffer,IColumn>)reader.getCurrentValue();\n                if (lastRow != null) // prepend what was read last time\n                {\n                    for (Map.Entry<ByteBuffer, IColumn> entry : lastRow.entrySet())\n                    {\n                        bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                    }\n                    lastKey = null;\n                    lastRow = null;\n                }\n                for (Map.Entry<ByteBuffer, IColumn> entry : row.entrySet())\n                {\n                    bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                }\n            }\n        }\n        catch (InterruptedException e)\n        {\n            throw new IOException(e.getMessage());\n        }\n    }","id":56224,"modified_method":"public Tuple getNextWide() throws IOException\n    {\n        CfDef cfDef = getCfDef(loadSignature);\n        ByteBuffer key = null;\n        Tuple tuple = TupleFactory.getInstance().newTuple();\n        DefaultDataBag bag = new DefaultDataBag();\n        try\n        {\n            while(true)\n            {\n                hasNext = reader.nextKeyValue();\n                if (!hasNext)\n                {\n                    if (lastRow != null)\n                    {\n                        if (tuple.size() == 0) // lastRow is a new one\n                        {\n                            key = (ByteBuffer)reader.getCurrentKey();\n                            tuple = addKeyToTuple(tuple, key, cfDef, parseType(cfDef.getKey_validation_class()));\n                        }\n                        for (Map.Entry<ByteBuffer, IColumn> entry : lastRow.entrySet())\n                        {\n                            bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                        }\n                        lastKey = null;\n                        lastRow = null;\n                        tuple.append(bag);\n                        return tuple;\n                    }\n                    else\n                    {\n                        if (tuple.size() == 1) // rare case of just one wide row, key already set\n                        {\n                            tuple.append(bag);\n                            return tuple;\n                        }\n                        else\n                            return null;\n                    }\n                }\n                if (key != null && !((ByteBuffer)reader.getCurrentKey()).equals(key)) // key changed\n                {\n                    // read too much, hold on to it for next time\n                    lastKey = (ByteBuffer)reader.getCurrentKey();\n                    lastRow = (SortedMap<ByteBuffer,IColumn>)reader.getCurrentValue();\n                    // but return what we have so far\n                    tuple.append(bag);\n                    return tuple;\n                }\n                if (key == null) // only set the key on the first iteration\n                {\n                    key = (ByteBuffer)reader.getCurrentKey();\n                    if (lastKey != null && !(key.equals(lastKey))) // last key only had one value\n                    {\n                        tuple = addKeyToTuple(tuple, lastKey, cfDef, parseType(cfDef.getKey_validation_class()));\n                        for (Map.Entry<ByteBuffer, IColumn> entry : lastRow.entrySet())\n                        {\n                            bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                        }\n                        tuple.append(bag);\n                        lastKey = key;\n                        lastRow = (SortedMap<ByteBuffer,IColumn>)reader.getCurrentValue();\n                        return tuple;\n                    }\n                    tuple = addKeyToTuple(tuple, lastKey, cfDef, parseType(cfDef.getKey_validation_class()));\n                }\n                SortedMap<ByteBuffer,IColumn> row = (SortedMap<ByteBuffer,IColumn>)reader.getCurrentValue();\n                if (lastRow != null) // prepend what was read last time\n                {\n                    for (Map.Entry<ByteBuffer, IColumn> entry : lastRow.entrySet())\n                    {\n                        bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                    }\n                    lastKey = null;\n                    lastRow = null;\n                }\n                for (Map.Entry<ByteBuffer, IColumn> entry : row.entrySet())\n                {\n                    bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                }\n            }\n        }\n        catch (InterruptedException e)\n        {\n            throw new IOException(e.getMessage());\n        }\n    }","commit_id":"7d2ce5f957b1fb392617c1ff05a561571eccd593","url":"https://github.com/apache/cassandra"},{"original_method":"private void addKeyToTuple(Tuple tuple, ByteBuffer key, CfDef cfDef, AbstractType comparator) throws IOException\n    {\n        if( comparator instanceof AbstractCompositeType )\n        {\n            setTupleValue(tuple, 0, composeComposite((AbstractCompositeType)comparator,key));\n        }\n        else\n        {\n            setTupleValue(tuple, 0, getDefaultMarshallers(cfDef).get(MarshallerType.KEY_VALIDATOR).compose(key));\n        }\n\n    }","id":56225,"modified_method":"private Tuple addKeyToTuple(Tuple tuple, ByteBuffer key, CfDef cfDef, AbstractType comparator) throws IOException\n    {\n        if( tuple == null )\n        {\n            tuple = TupleFactory.getInstance().newTuple(1);\n        }\n        if( comparator instanceof AbstractCompositeType )\n        {\n            setTupleValue(tuple, 0, composeComposite((AbstractCompositeType)comparator,key));\n        }\n        else\n        {\n            setTupleValue(tuple, 0, getDefaultMarshallers(cfDef).get(MarshallerType.KEY_VALIDATOR).compose(key));\n        }\n        return tuple;\n    }","commit_id":"7d2ce5f957b1fb392617c1ff05a561571eccd593","url":"https://github.com/apache/cassandra"},{"original_method":"private Tuple addKeyToTuple(Tuple tuple, ByteBuffer key, CfDef cfDef, AbstractType comparator) throws IOException\n    {\n        if( tuple == null )\n        {\n            tuple = TupleFactory.getInstance().newTuple(1);\n        }\n        if( comparator instanceof AbstractCompositeType )\n        {\n            setTupleValue(tuple, 0, composeComposite((AbstractCompositeType)comparator,key));\n        }\n        else\n        {\n            setTupleValue(tuple, 0, getDefaultMarshallers(cfDef).get(MarshallerType.KEY_VALIDATOR).compose(key));\n        }\n        return tuple;\n    }","id":56226,"modified_method":"private void addKeyToTuple(Tuple tuple, ByteBuffer key, CfDef cfDef, AbstractType comparator) throws IOException\n    {\n        if( comparator instanceof AbstractCompositeType )\n        {\n            setTupleValue(tuple, 0, composeComposite((AbstractCompositeType)comparator,key));\n        }\n        else\n        {\n            setTupleValue(tuple, 0, getDefaultMarshallers(cfDef).get(MarshallerType.KEY_VALIDATOR).compose(key));\n        }\n\n    }","commit_id":"2dd73d171068d743befcd445a14751032d232e4e","url":"https://github.com/apache/cassandra"},{"original_method":"@Override\n    public Tuple getNext() throws IOException\n    {\n        if (widerows)\n            return getNextWide();\n        try\n        {\n            // load the next pair\n            if (!reader.nextKeyValue())\n                return null;\n\n            CfDef cfDef = getCfDef(loadSignature);\n            ByteBuffer key = reader.getCurrentKey();\n            Map<ByteBuffer, IColumn> cf = reader.getCurrentValue();\n            assert key != null && cf != null;\n\n            // output tuple, will hold the key, each indexed column in a tuple, then a bag of the rest\n            // NOTE: we're setting the tuple size here only for the key so we can use setTupleValue on it\n\n            Tuple tuple = addKeyToTuple(null, key, cfDef, parseType(cfDef.getKey_validation_class()));\n            DefaultDataBag bag = new DefaultDataBag();\n\n            // we must add all the indexed columns first to match the schema\n            Map<ByteBuffer, Boolean> added = new HashMap<ByteBuffer, Boolean>();\n            // take care to iterate these in the same order as the schema does\n            for (ColumnDef cdef : cfDef.column_metadata)\n            {\n                if (cf.containsKey(cdef.name))\n                {\n                    tuple.append(columnToTuple(cf.get(cdef.name), cfDef, parseType(cfDef.getComparator_type())));\n                }\n                else\n                {   // otherwise, we need to add an empty tuple to take its place\n                    tuple.append(TupleFactory.getInstance().newTuple());\n                }\n                added.put(cdef.name, true);\n            }\n            // now add all the other columns\n            for (Map.Entry<ByteBuffer, IColumn> entry : cf.entrySet())\n            {\n                if (!added.containsKey(entry.getKey()))\n                    bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n            }\n            tuple.append(bag);\n            // finally, special top-level indexes if needed\n            if (usePartitionFilter)\n            {\n                for (ColumnDef cdef : getIndexes())\n                {\n                    Tuple throwaway = columnToTuple(cf.get(cdef.name), cfDef, parseType(cfDef.getComparator_type()));\n                    tuple.append(throwaway.get(1));\n                }\n            }\n            return tuple;\n        }\n        catch (InterruptedException e)\n        {\n            throw new IOException(e.getMessage());\n        }\n    }","id":56227,"modified_method":"@Override\n    public Tuple getNext() throws IOException\n    {\n        if (widerows)\n            return getNextWide();\n        try\n        {\n            // load the next pair\n            if (!reader.nextKeyValue())\n                return null;\n\n            CfDef cfDef = getCfDef(loadSignature);\n            ByteBuffer key = reader.getCurrentKey();\n            Map<ByteBuffer, IColumn> cf = reader.getCurrentValue();\n            assert key != null && cf != null;\n\n            // output tuple, will hold the key, each indexed column in a tuple, then a bag of the rest\n            // NOTE: we're setting the tuple size here only for the key so we can use setTupleValue on it\n\n            Tuple tuple = keyToTuple(key, cfDef, parseType(cfDef.getKey_validation_class()));\n            DefaultDataBag bag = new DefaultDataBag();\n\n            // we must add all the indexed columns first to match the schema\n            Map<ByteBuffer, Boolean> added = new HashMap<ByteBuffer, Boolean>();\n            // take care to iterate these in the same order as the schema does\n            for (ColumnDef cdef : cfDef.column_metadata)\n            {\n                if (cf.containsKey(cdef.name))\n                {\n                    tuple.append(columnToTuple(cf.get(cdef.name), cfDef, parseType(cfDef.getComparator_type())));\n                }\n                else\n                {   // otherwise, we need to add an empty tuple to take its place\n                    tuple.append(TupleFactory.getInstance().newTuple());\n                }\n                added.put(cdef.name, true);\n            }\n            // now add all the other columns\n            for (Map.Entry<ByteBuffer, IColumn> entry : cf.entrySet())\n            {\n                if (!added.containsKey(entry.getKey()))\n                    bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n            }\n            tuple.append(bag);\n            // finally, special top-level indexes if needed\n            if (usePartitionFilter)\n            {\n                for (ColumnDef cdef : getIndexes())\n                {\n                    Tuple throwaway = columnToTuple(cf.get(cdef.name), cfDef, parseType(cfDef.getComparator_type()));\n                    tuple.append(throwaway.get(1));\n                }\n            }\n            return tuple;\n        }\n        catch (InterruptedException e)\n        {\n            throw new IOException(e.getMessage());\n        }\n    }","commit_id":"2dd73d171068d743befcd445a14751032d232e4e","url":"https://github.com/apache/cassandra"},{"original_method":"public Tuple getNextWide() throws IOException\n    {\n        CfDef cfDef = getCfDef(loadSignature);\n        ByteBuffer key = null;\n        Tuple tuple = TupleFactory.getInstance().newTuple();\n        DefaultDataBag bag = new DefaultDataBag();\n        try\n        {\n            while(true)\n            {\n                hasNext = reader.nextKeyValue();\n                if (!hasNext)\n                {\n                    if (lastRow != null)\n                    {\n                        if (tuple.size() == 0) // lastRow is a new one\n                        {\n                            key = (ByteBuffer)reader.getCurrentKey();\n                            tuple = addKeyToTuple(tuple, key, cfDef, parseType(cfDef.getKey_validation_class()));\n                        }\n                        for (Map.Entry<ByteBuffer, IColumn> entry : lastRow.entrySet())\n                        {\n                            bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                        }\n                        lastKey = null;\n                        lastRow = null;\n                        tuple.append(bag);\n                        return tuple;\n                    }\n                    else\n                    {\n                        if (tuple.size() == 1) // rare case of just one wide row, key already set\n                        {\n                            tuple.append(bag);\n                            return tuple;\n                        }\n                        else\n                            return null;\n                    }\n                }\n                if (key != null && !((ByteBuffer)reader.getCurrentKey()).equals(key)) // key changed\n                {\n                    // read too much, hold on to it for next time\n                    lastKey = (ByteBuffer)reader.getCurrentKey();\n                    lastRow = (SortedMap<ByteBuffer,IColumn>)reader.getCurrentValue();\n                    // but return what we have so far\n                    tuple.append(bag);\n                    return tuple;\n                }\n                if (key == null) // only set the key on the first iteration\n                {\n                    key = (ByteBuffer)reader.getCurrentKey();\n                    if (lastKey != null && !(key.equals(lastKey))) // last key only had one value\n                    {\n                        tuple = addKeyToTuple(tuple, lastKey, cfDef, parseType(cfDef.getKey_validation_class()));\n                        for (Map.Entry<ByteBuffer, IColumn> entry : lastRow.entrySet())\n                        {\n                            bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                        }\n                        tuple.append(bag);\n                        lastKey = key;\n                        lastRow = (SortedMap<ByteBuffer,IColumn>)reader.getCurrentValue();\n                        return tuple;\n                    }\n                    tuple = addKeyToTuple(tuple, lastKey, cfDef, parseType(cfDef.getKey_validation_class()));\n                }\n                SortedMap<ByteBuffer,IColumn> row = (SortedMap<ByteBuffer,IColumn>)reader.getCurrentValue();\n                if (lastRow != null) // prepend what was read last time\n                {\n                    for (Map.Entry<ByteBuffer, IColumn> entry : lastRow.entrySet())\n                    {\n                        bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                    }\n                    lastKey = null;\n                    lastRow = null;\n                }\n                for (Map.Entry<ByteBuffer, IColumn> entry : row.entrySet())\n                {\n                    bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                }\n            }\n        }\n        catch (InterruptedException e)\n        {\n            throw new IOException(e.getMessage());\n        }\n    }","id":56228,"modified_method":"public Tuple getNextWide() throws IOException\n    {\n        CfDef cfDef = getCfDef(loadSignature);\n        ByteBuffer key = null;\n        Tuple tuple = null; \n        DefaultDataBag bag = new DefaultDataBag();\n        try\n        {\n            while(true)\n            {\n                hasNext = reader.nextKeyValue();\n                if (!hasNext)\n                {\n                    if (tuple == null)\n                        tuple = TupleFactory.getInstance().newTuple();\n\n                    if (lastRow != null)\n                    {\n                        if (tuple.size() == 0) // lastRow is a new one\n                        {\n                            key = (ByteBuffer)reader.getCurrentKey();\n                            tuple = keyToTuple(key, cfDef, parseType(cfDef.getKey_validation_class()));\n                        }\n                        for (Map.Entry<ByteBuffer, IColumn> entry : lastRow.entrySet())\n                        {\n                            bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                        }\n                        lastKey = null;\n                        lastRow = null;\n                        tuple.append(bag);\n                        return tuple;\n                    }\n                    else\n                    {\n                        if (tuple.size() == 1) // rare case of just one wide row, key already set\n                        {\n                            tuple.append(bag);\n                            return tuple;\n                        }\n                        else\n                            return null;\n                    }\n                }\n                if (key != null && !((ByteBuffer)reader.getCurrentKey()).equals(key)) // key changed\n                {\n                    // read too much, hold on to it for next time\n                    lastKey = (ByteBuffer)reader.getCurrentKey();\n                    lastRow = (SortedMap<ByteBuffer,IColumn>)reader.getCurrentValue();\n                    // but return what we have so far\n                    tuple.append(bag);\n                    return tuple;\n                }\n                if (key == null) // only set the key on the first iteration\n                {\n                    key = (ByteBuffer)reader.getCurrentKey();\n                    if (lastKey != null && !(key.equals(lastKey))) // last key only had one value\n                    {\n                        if (tuple == null)\n                            tuple = keyToTuple(lastKey, cfDef, parseType(cfDef.getKey_validation_class()));\n                        else\n                            addKeyToTuple(tuple, lastKey, cfDef, parseType(cfDef.getKey_validation_class()));\n                        for (Map.Entry<ByteBuffer, IColumn> entry : lastRow.entrySet())\n                        {\n                            bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                        }\n                        tuple.append(bag);\n                        lastKey = key;\n                        lastRow = (SortedMap<ByteBuffer,IColumn>)reader.getCurrentValue();\n                        return tuple;\n                    }\n                    if (tuple == null)\n                        tuple = keyToTuple(key, cfDef, parseType(cfDef.getKey_validation_class()));\n                    else\n                        addKeyToTuple(tuple, lastKey, cfDef, parseType(cfDef.getKey_validation_class()));\n                }\n                SortedMap<ByteBuffer,IColumn> row = (SortedMap<ByteBuffer,IColumn>)reader.getCurrentValue();\n                if (lastRow != null) // prepend what was read last time\n                {\n                    for (Map.Entry<ByteBuffer, IColumn> entry : lastRow.entrySet())\n                    {\n                        bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                    }\n                    lastKey = null;\n                    lastRow = null;\n                }\n                for (Map.Entry<ByteBuffer, IColumn> entry : row.entrySet())\n                {\n                    bag.add(columnToTuple(entry.getValue(), cfDef, parseType(cfDef.getComparator_type())));\n                }\n            }\n        }\n        catch (InterruptedException e)\n        {\n            throw new IOException(e.getMessage());\n        }\n    }","commit_id":"2dd73d171068d743befcd445a14751032d232e4e","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Test rendering with the annotations renderer but without annotations doesn't alter the content.\n     * \n     * @throws Exception in case something goes wrong looking up components and rendering\n     */\n    @Test\n    public void getAnnotatedHTMLWithoutAnnotations() throws Exception\n    {\n        Parser parser = getComponentManager().lookup(Parser.class, docFactory.getDocument(docName).getSyntax());\n        XDOM xdom = parser.parse(new StringReader(docFactory.getDocument(docName).getSource()));\n        SyntaxFactory syntaxFactory = getComponentManager().lookup(SyntaxFactory.class);\n\n        // run transformations\n        TransformationManager transformationManager = getComponentManager().lookup(TransformationManager.class);\n        transformationManager.performTransformations(xdom, syntaxFactory.createSyntaxFromIdString(docFactory\n            .getDocument(docName).getSyntax()));\n\n        AnnotationPrintRenderer renderer =\n            getComponentManager().lookup(AnnotationPrintRenderer.class, ANNOTATIONS_RENDERER_HINT);\n        WikiPrinter printer = new DefaultWikiPrinter();\n        renderer.setPrinter(printer);\n\n        xdom.traverse(renderer);\n\n        assertEquals(\"[\" + docName + \"] test failed\", docFactory.getDocument(docName).getRenderedContent(), printer\n            .toString());\n    }","id":56229,"modified_method":"/**\n     * Test rendering with the annotations renderer but without annotations doesn't alter the content.\n     * \n     * @throws Exception in case something goes wrong looking up components and rendering\n     */\n    @Test\n    public void getAnnotatedHTMLWithoutAnnotations() throws Exception\n    {\n        Parser parser = getComponentManager().lookup(Parser.class, docFactory.getDocument(docName).getSyntax());\n        XDOM xdom = parser.parse(new StringReader(docFactory.getDocument(docName).getSource()));\n        SyntaxFactory syntaxFactory = getComponentManager().lookup(SyntaxFactory.class);\n\n        // run transformations\n        TransformationManager transformationManager = getComponentManager().lookup(TransformationManager.class);\n        transformationManager.performTransformations(xdom, new TransformationContext(xdom,\n            syntaxFactory.createSyntaxFromIdString(docFactory.getDocument(docName).getSyntax())));\n\n        AnnotationPrintRenderer renderer =\n            getComponentManager().lookup(AnnotationPrintRenderer.class, ANNOTATIONS_RENDERER_HINT);\n        WikiPrinter printer = new DefaultWikiPrinter();\n        renderer.setPrinter(printer);\n\n        xdom.traverse(renderer);\n\n        assertEquals(\"[\" + docName + \"] test failed\", docFactory.getDocument(docName).getRenderedContent(), printer\n            .toString());\n    }","commit_id":"171a0e1a446a6fd6168af1f0f683ed7b9748f6d5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Test rendering the annotations in the document description file results in the annotated html.\n     * \n     * @throws Exception in case something goes wrong looking up components and rendering\n     */\n    @Test\n    public void getAnnotatedHTML() throws Exception\n    {\n        Parser parser = getComponentManager().lookup(Parser.class, docFactory.getDocument(docName).getSyntax());\n        XDOM xdom = parser.parse(new StringReader(docFactory.getDocument(docName).getSource()));\n        SyntaxFactory syntaxFactory = getComponentManager().lookup(SyntaxFactory.class);\n\n        // run transformations\n        TransformationManager transformationManager = getComponentManager().lookup(TransformationManager.class);\n        transformationManager.performTransformations(xdom, syntaxFactory.createSyntaxFromIdString(docFactory\n            .getDocument(docName).getSyntax()));\n\n        AnnotationPrintRenderer renderer =\n            getComponentManager().lookup(AnnotationPrintRenderer.class, ANNOTATIONS_RENDERER_HINT);\n        WikiPrinter printer = new DefaultWikiPrinter();\n        renderer.setPrinter(printer);\n        // set the annotations for this renderer\n        renderer.setAnnotations(docFactory.getDocument(docName).getAnnotations());\n\n        xdom.traverse(renderer);\n\n        assertEquals(\"[\" + docName + \"] test failed\", docFactory.getDocument(docName).getAnnotatedContent(), printer\n            .toString());\n    }","id":56230,"modified_method":"/**\n     * Test rendering the annotations in the document description file results in the annotated html.\n     * \n     * @throws Exception in case something goes wrong looking up components and rendering\n     */\n    @Test\n    public void getAnnotatedHTML() throws Exception\n    {\n        Parser parser = getComponentManager().lookup(Parser.class, docFactory.getDocument(docName).getSyntax());\n        XDOM xdom = parser.parse(new StringReader(docFactory.getDocument(docName).getSource()));\n        SyntaxFactory syntaxFactory = getComponentManager().lookup(SyntaxFactory.class);\n\n        // run transformations\n        TransformationManager transformationManager = getComponentManager().lookup(TransformationManager.class);\n        transformationManager.performTransformations(xdom, new TransformationContext(xdom,\n            syntaxFactory.createSyntaxFromIdString(docFactory.getDocument(docName).getSyntax())));\n\n        AnnotationPrintRenderer renderer =\n            getComponentManager().lookup(AnnotationPrintRenderer.class, ANNOTATIONS_RENDERER_HINT);\n        WikiPrinter printer = new DefaultWikiPrinter();\n        renderer.setPrinter(printer);\n        // set the annotations for this renderer\n        renderer.setAnnotations(docFactory.getDocument(docName).getAnnotations());\n\n        xdom.traverse(renderer);\n\n        assertEquals(\"[\" + docName + \"] test failed\", docFactory.getDocument(docName).getAnnotatedContent(), printer\n            .toString());\n    }","commit_id":"171a0e1a446a6fd6168af1f0f683ed7b9748f6d5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.rendering.macro.Macro#execute(Object, String, MacroTransformationContext)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public List<Block> execute(WikiMacroParameters parameters, String macroContent, MacroTransformationContext context)\n        throws MacroExecutionException\n    {\n        // First verify that all mandatory parameters are provided.\n        // Note that we currently verify automatically mandatory parameters in Macro Transformation but for the moment\n        // this is only checked for Java-based macros. Hence why we need to check here too.\n        Map<String, ParameterDescriptor> parameterDescriptors = getDescriptor().getParameterDescriptorMap();\n        for (String parameterName : parameterDescriptors.keySet()) {\n            ParameterDescriptor parameterDescriptor = parameterDescriptors.get(parameterName);\n            Object parameterValue = parameters.get(parameterName);\n            if (parameterDescriptor.isMandatory() && (null == parameterValue)) {\n                throw new MacroParameterException(String.format(\"Parameter [%s] is mandatory\", parameterName));\n            }\n\n            // Set default parameter value if applicable.\n            Object parameterDefaultValue = parameterDescriptor.getDefaultValue();\n            if (parameterValue == null && parameterDefaultValue != null) {\n                parameters.set(parameterName, parameterDefaultValue);\n            }\n        }\n\n        // Verify the a macro content is not empty if it was declared mandatory.\n        if (getDescriptor().getContentDescriptor() != null && getDescriptor().getContentDescriptor().isMandatory()) {\n            if (StringUtils.isEmpty(macroContent)) {\n                throw new MacroExecutionException(\"Missing macro content: this macro requires content (a body)\");\n            }\n        }\n\n        // Parse the wiki macro content.\n        XDOM xdom;\n        try {\n            Parser parser = componentManager.lookup(Parser.class, syntaxId);\n            xdom = parser.parse(new StringReader(this.content));\n        } catch (ComponentLookupException ex) {\n            throw new MacroExecutionException(\"Could not find a parser for macro content\", ex);\n        } catch (ParseException ex) {\n            throw new MacroExecutionException(\"Error while parsing macro content\", ex);\n        }\n\n        // Macro code segment is always parsed into a separate xdom document. Now if this code segment starts with\n        // another macro block, it will always be interpreted as a block macro regardless of the current wiki macro's\n        // context (because as far as the nested macro is concerned, it starts on a new line). This will introduce\n        // unnecessary paragraph elements when the wiki macro is used inline, so we need to force such opening macro\n        // blocks to behave as inline macros if the wiki macro is used inline.\n        if (context.isInline()) {\n            List<Block> children = xdom.getChildren();\n            if (children.size() > 0 && children.get(0) instanceof MacroBlock) {\n                MacroBlock old = (MacroBlock) children.get(0);\n                MacroBlock replacement = new MacroBlock(old.getId(), old.getParameters(), old.getContent(), true);\n                xdom.replaceChild(replacement, old);\n            }\n        }\n\n        // Prepare macro context.\n        Map<String, Object> macroContext = new HashMap<String, Object>();\n        macroContext.put(MACRO_PARAMS_KEY, parameters);\n        macroContext.put(MACRO_CONTENT_KEY, macroContent);\n        macroContext.put(MACRO_CONTEXT_KEY, context);\n        macroContext.put(MACRO_RESULT_KEY, context);\n\n        Map xwikiContext = null;\n        Object contextDoc = null;\n        try {\n            Execution execution = componentManager.lookup(Execution.class);\n            DocumentAccessBridge docBridge = componentManager.lookup(DocumentAccessBridge.class);\n            SyntaxFactory syntaxFactory = componentManager.lookup(SyntaxFactory.class);\n            Transformation macroTransformation = componentManager.lookup(Transformation.class, MACRO_HINT);\n\n            // Place macro context inside xwiki context ($context.macro).\n            xwikiContext = (Map) execution.getContext().getProperty(\"xwikicontext\");\n            xwikiContext.put(MACRO_KEY, macroContext);\n\n            // Save current context document.\n            contextDoc = xwikiContext.get(CONTEXT_DOCUMENT_KEY);\n\n            // Set the macro definition document as the context document, this is required to give the macro access to\n            // it's context ($context.macro) which holds macro parameters, macro content and other important structures.\n            // This workaround ensures that macro code is evaluated with programming rights, which in turn ensures that\n            // $context.macro is accessible within the macro code.\n            xwikiContext.put(CONTEXT_DOCUMENT_KEY, docBridge.getDocument(getDocumentReference()));\n\n            // Perform internal macro transformations.\n            macroTransformation.transform(xdom, syntaxFactory.createSyntaxFromIdString(syntaxId));\n        } catch (Exception ex) {\n            throw new MacroExecutionException(\"Error while performing internal macro transformations\", ex);\n        } finally {\n            if (null != xwikiContext) {\n                // Remove macro context from xwiki context.\n                xwikiContext.remove(MACRO_KEY);\n                if (null != contextDoc) {\n                    // Reset the context document.\n                    xwikiContext.put(CONTEXT_DOCUMENT_KEY, contextDoc);\n                }\n            }\n        }\n\n        Object resultObject = macroContext.get(MACRO_RESULT_KEY);\n\n        List<Block> result;\n        if (resultObject != null && resultObject instanceof List) {\n            result = (List<Block>) macroContext.get(MACRO_RESULT_KEY);\n        } else {\n            result = xdom.getChildren();\n            // If in inline mode remove any top level paragraph.\n            if (context.isInline()) {\n                this.parserUtils.removeTopLevelParagraph(result);\n            }\n        }\n\n        return result;\n    }","id":56231,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.rendering.macro.Macro#execute(Object, String, MacroTransformationContext)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public List<Block> execute(WikiMacroParameters parameters, String macroContent, MacroTransformationContext context)\n        throws MacroExecutionException\n    {\n        // First verify that all mandatory parameters are provided.\n        // Note that we currently verify automatically mandatory parameters in Macro Transformation but for the moment\n        // this is only checked for Java-based macros. Hence why we need to check here too.\n        Map<String, ParameterDescriptor> parameterDescriptors = getDescriptor().getParameterDescriptorMap();\n        for (String parameterName : parameterDescriptors.keySet()) {\n            ParameterDescriptor parameterDescriptor = parameterDescriptors.get(parameterName);\n            Object parameterValue = parameters.get(parameterName);\n            if (parameterDescriptor.isMandatory() && (null == parameterValue)) {\n                throw new MacroParameterException(String.format(\"Parameter [%s] is mandatory\", parameterName));\n            }\n\n            // Set default parameter value if applicable.\n            Object parameterDefaultValue = parameterDescriptor.getDefaultValue();\n            if (parameterValue == null && parameterDefaultValue != null) {\n                parameters.set(parameterName, parameterDefaultValue);\n            }\n        }\n\n        // Verify the a macro content is not empty if it was declared mandatory.\n        if (getDescriptor().getContentDescriptor() != null && getDescriptor().getContentDescriptor().isMandatory()) {\n            if (StringUtils.isEmpty(macroContent)) {\n                throw new MacroExecutionException(\"Missing macro content: this macro requires content (a body)\");\n            }\n        }\n\n        // Parse the wiki macro content.\n        XDOM xdom;\n        try {\n            Parser parser = componentManager.lookup(Parser.class, syntaxId);\n            xdom = parser.parse(new StringReader(this.content));\n        } catch (ComponentLookupException ex) {\n            throw new MacroExecutionException(\"Could not find a parser for macro content\", ex);\n        } catch (ParseException ex) {\n            throw new MacroExecutionException(\"Error while parsing macro content\", ex);\n        }\n\n        // Macro code segment is always parsed into a separate xdom document. Now if this code segment starts with\n        // another macro block, it will always be interpreted as a block macro regardless of the current wiki macro's\n        // context (because as far as the nested macro is concerned, it starts on a new line). This will introduce\n        // unnecessary paragraph elements when the wiki macro is used inline, so we need to force such opening macro\n        // blocks to behave as inline macros if the wiki macro is used inline.\n        if (context.isInline()) {\n            List<Block> children = xdom.getChildren();\n            if (children.size() > 0 && children.get(0) instanceof MacroBlock) {\n                MacroBlock old = (MacroBlock) children.get(0);\n                MacroBlock replacement = new MacroBlock(old.getId(), old.getParameters(), old.getContent(), true);\n                xdom.replaceChild(replacement, old);\n            }\n        }\n\n        // Prepare macro context.\n        Map<String, Object> macroContext = new HashMap<String, Object>();\n        macroContext.put(MACRO_PARAMS_KEY, parameters);\n        macroContext.put(MACRO_CONTENT_KEY, macroContent);\n        macroContext.put(MACRO_CONTEXT_KEY, context);\n        macroContext.put(MACRO_RESULT_KEY, context);\n\n        Map xwikiContext = null;\n        Object contextDoc = null;\n        try {\n            Execution execution = componentManager.lookup(Execution.class);\n            DocumentAccessBridge docBridge = componentManager.lookup(DocumentAccessBridge.class);\n            SyntaxFactory syntaxFactory = componentManager.lookup(SyntaxFactory.class);\n            Transformation macroTransformation = componentManager.lookup(Transformation.class, MACRO_HINT);\n\n            // Place macro context inside xwiki context ($context.macro).\n            xwikiContext = (Map) execution.getContext().getProperty(\"xwikicontext\");\n            xwikiContext.put(MACRO_KEY, macroContext);\n\n            // Save current context document.\n            contextDoc = xwikiContext.get(CONTEXT_DOCUMENT_KEY);\n\n            // Set the macro definition document as the context document, this is required to give the macro access to\n            // it's context ($context.macro) which holds macro parameters, macro content and other important structures.\n            // This workaround ensures that macro code is evaluated with programming rights, which in turn ensures that\n            // $context.macro is accessible within the macro code.\n            xwikiContext.put(CONTEXT_DOCUMENT_KEY, docBridge.getDocument(getDocumentReference()));\n\n            // Perform internal macro transformations.\n            TransformationContext txContext = new TransformationContext(xdom,\n                syntaxFactory.createSyntaxFromIdString(syntaxId));\n            macroTransformation.transform(xdom, txContext);\n        } catch (Exception ex) {\n            throw new MacroExecutionException(\"Error while performing internal macro transformations\", ex);\n        } finally {\n            if (null != xwikiContext) {\n                // Remove macro context from xwiki context.\n                xwikiContext.remove(MACRO_KEY);\n                if (null != contextDoc) {\n                    // Reset the context document.\n                    xwikiContext.put(CONTEXT_DOCUMENT_KEY, contextDoc);\n                }\n            }\n        }\n\n        Object resultObject = macroContext.get(MACRO_RESULT_KEY);\n\n        List<Block> result;\n        if (resultObject != null && resultObject instanceof List) {\n            result = (List<Block>) macroContext.get(MACRO_RESULT_KEY);\n        } else {\n            result = xdom.getChildren();\n            // If in inline mode remove any top level paragraph.\n            if (context.isInline()) {\n                this.parserUtils.removeTopLevelParagraph(result);\n            }\n        }\n\n        return result;\n    }","commit_id":"ae25b226a5f5b2d8c5be2ed1ac2d40ced09583a5","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public BlockRequest(long blockId, long offset, long length) {\n    BLOCK_ID = blockId;\n    OFFSET = offset;\n    LENGTH = length;\n  }","id":56232,"modified_method":"public BlockRequest(long blockId, long offset, long length) {\n    mBlockId = blockId;\n    mOffset = offset;\n    mLength = length;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"public long getLength() {\n    return LENGTH;\n  }","id":56233,"modified_method":"public long getLength() {\n    return mLength;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"public long getOffset() {\n    return OFFSET;\n  }","id":56234,"modified_method":"public long getOffset() {\n    return mOffset;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"public long getBlockId() {\n    return BLOCK_ID;\n  }","id":56235,"modified_method":"public long getBlockId() {\n    return mBlockId;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"public long getOffset() {\n    return OFFSET;\n  }","id":56236,"modified_method":"public long getOffset() {\n    return mOffset;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"public FileChannel getChannel() {\n    return CHANNEL;\n  }","id":56237,"modified_method":"public FileChannel getChannel() {\n    return mChannel;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"public long getBlockId() {\n    return BLOCK_ID;\n  }","id":56238,"modified_method":"public long getBlockId() {\n    return mBlockId;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"public BlockResponse(long blockId, long offset, long length, FileChannel channel) {\n    BLOCK_ID = blockId;\n    OFFSET = offset;\n    LENGTH = length;\n    CHANNEL = channel;\n  }","id":56239,"modified_method":"public BlockResponse(long blockId, long offset, long length, FileChannel channel) {\n    mBlockId = blockId;\n    mOffset = offset;\n    mLength = length;\n    mChannel = channel;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"public long getLength() {\n    return LENGTH;\n  }","id":56240,"modified_method":"public long getLength() {\n    return mLength;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void operationComplete(ChannelFuture future) throws Exception {\n    if (RESOURCE != null) {\n      RESOURCE.close();\n    }\n  }","id":56241,"modified_method":"@Override\n  public void operationComplete(ChannelFuture future) throws Exception {\n    if (mResource != null) {\n      mResource.close();\n    }\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"ClosableResourceChannelListener(Closeable resource) {\n    RESOURCE = resource;\n  }","id":56242,"modified_method":"ClosableResourceChannelListener(Closeable resource) {\n    mResource = resource;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void channelRead(final ChannelHandlerContext ctx, final Object msg) throws Exception {\n    // pipeline will make sure this is true\n    final BlockRequest req = (BlockRequest) msg;\n\n    final long blockId = req.getBlockId();\n    final long offset = req.getOffset();\n    final long len = req.getLength();\n\n    final int lockId = LOCKER.lock(blockId);\n\n    RandomAccessFile file = null;\n    try {\n      validateInput(req);\n\n      String filePath = CommonUtils.concat(WorkerConf.get().DATA_FOLDER, blockId);\n      LOG.info(\"Try to response remote request by reading from \" + filePath);\n\n      file = new RandomAccessFile(filePath, \"r\");\n      long fileLength = file.length();\n      validateBounds(req, fileLength);\n\n      final long readLength = returnLength(offset, len, fileLength);\n\n      FileChannel channel = file.getChannel();\n      ChannelFuture future =\n          ctx.writeAndFlush(new BlockResponse(blockId, offset, readLength, channel));\n      future.addListener(ChannelFutureListener.CLOSE);\n      future.addListener(new ClosableResourceChannelListener(file));\n      LOG.info(\"Response remote request by reading from \" + filePath + \" preparation done.\");\n    } catch (Exception e) {\n      // TODO This is a trick for now. The data may have been removed before remote retrieving.\n      LOG.error(\"The file is not here : \" + e.getMessage(), e);\n      BlockResponse resp = BlockResponse.createErrorResponse(blockId);\n      ChannelFuture future = ctx.writeAndFlush(resp);\n      future.addListener(ChannelFutureListener.CLOSE);\n      if (file != null) {\n        Closeables.closeQuietly(file);\n      }\n    } finally {\n      LOCKER.unlock(Math.abs(blockId), lockId);\n    }\n  }","id":56243,"modified_method":"@Override\n  public void channelRead(final ChannelHandlerContext ctx, final Object msg) throws Exception {\n    // pipeline will make sure this is true\n    final BlockRequest req = (BlockRequest) msg;\n\n    final long blockId = req.getBlockId();\n    final long offset = req.getOffset();\n    final long len = req.getLength();\n\n    final int lockId = mLocker.lock(blockId);\n\n    RandomAccessFile file = null;\n    try {\n      validateInput(req);\n\n      String filePath = CommonUtils.concat(WorkerConf.get().DATA_FOLDER, blockId);\n      LOG.info(\"Try to response remote request by reading from \" + filePath);\n\n      file = new RandomAccessFile(filePath, \"r\");\n      long fileLength = file.length();\n      validateBounds(req, fileLength);\n\n      final long readLength = returnLength(offset, len, fileLength);\n\n      FileChannel channel = file.getChannel();\n      ChannelFuture future =\n          ctx.writeAndFlush(new BlockResponse(blockId, offset, readLength, channel));\n      future.addListener(ChannelFutureListener.CLOSE);\n      future.addListener(new ClosableResourceChannelListener(file));\n      LOG.info(\"Response remote request by reading from \" + filePath + \" preparation done.\");\n    } catch (Exception e) {\n      // TODO This is a trick for now. The data may have been removed before remote retrieving.\n      LOG.error(\"The file is not here : \" + e.getMessage(), e);\n      BlockResponse resp = BlockResponse.createErrorResponse(blockId);\n      ChannelFuture future = ctx.writeAndFlush(resp);\n      future.addListener(ChannelFutureListener.CLOSE);\n      if (file != null) {\n        Closeables.closeQuietly(file);\n      }\n    } finally {\n      mLocker.unlock(Math.abs(blockId), lockId);\n    }\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"public DataServerHandler(BlocksLocker locker) {\n    LOCKER = locker;\n  }","id":56244,"modified_method":"public DataServerHandler(BlocksLocker locker) {\n    mLocker = locker;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Create a data server with direct access to worker storage.\n   * \n   * @param address\n   *          The address of the data server.\n   * @param locker\n   *          The lock system for lock blocks.\n   */\n  public NIODataServer(InetSocketAddress address, BlocksLocker locker) {\n    LOG.info(\"Starting DataServer @ \" + address);\n    CommonConf.assertValidPort(address);\n    mAddress = address;\n    BLOCKS_LOCKER = locker;\n    try {\n      mSelector = initSelector();\n      LISTENER_THREAD = new Thread(this);\n      LISTENER_THREAD.start();\n    } catch (IOException e) {\n      LOG.error(e.getMessage() + mAddress, e);\n      throw Throwables.propagate(e);\n    }\n  }","id":56245,"modified_method":"/**\n   * Create a data server with direct access to worker storage.\n   * \n   * @param address\n   *          The address of the data server.\n   * @param locker\n   *          The lock system for lock blocks.\n   */\n  public NIODataServer(InetSocketAddress address, BlocksLocker locker) {\n    LOG.info(\"Starting DataServer @ \" + address);\n    CommonConf.assertValidPort(address);\n    mAddress = address;\n    mBlockLocker = locker;\n    try {\n      mSelector = initSelector();\n      mListenerThread = new Thread(this);\n      mListenerThread.start();\n    } catch (IOException e) {\n      LOG.error(e.getMessage() + mAddress, e);\n      throw Throwables.propagate(e);\n    }\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"private void read(SelectionKey key) throws IOException {\n    SocketChannel socketChannel = (SocketChannel) key.channel();\n\n    DataServerMessage tMessage;\n    if (mReceivingData.containsKey(socketChannel)) {\n      tMessage = mReceivingData.get(socketChannel);\n    } else {\n      tMessage = DataServerMessage.createBlockRequestMessage();\n      mReceivingData.put(socketChannel, tMessage);\n    }\n\n    // Attempt to read off the channel\n    int numRead;\n    try {\n      numRead = tMessage.recv(socketChannel);\n    } catch (IOException e) {\n      // The remote forcibly closed the connection, cancel the selection key and close the channel.\n      key.cancel();\n      socketChannel.close();\n      mReceivingData.remove(socketChannel);\n      mSendingData.remove(socketChannel);\n      return;\n    }\n\n    if (numRead == -1) {\n      // Remote entity shut the socket down cleanly. Do the same from our end and cancel the\n      // channel.\n      key.channel().close();\n      key.cancel();\n      mReceivingData.remove(socketChannel);\n      mSendingData.remove(socketChannel);\n      return;\n    }\n\n    if (tMessage.isMessageReady()) {\n      if (tMessage.getBlockId() <= 0) {\n        LOG.error(\"Invalid block id \" + tMessage.getBlockId());\n        return;\n      }\n\n      key.interestOps(SelectionKey.OP_WRITE);\n      LOG.info(\"Get request for \" + tMessage.getBlockId());\n      int lockId = BLOCKS_LOCKER.lock(tMessage.getBlockId());\n      DataServerMessage tResponseMessage =\n          DataServerMessage.createBlockResponseMessage(true, tMessage.getBlockId(),\n              tMessage.getOffset(), tMessage.getLength());\n      tResponseMessage.setLockId(lockId);\n      mSendingData.put(socketChannel, tResponseMessage);\n    }\n  }","id":56246,"modified_method":"private void read(SelectionKey key) throws IOException {\n    SocketChannel socketChannel = (SocketChannel) key.channel();\n\n    DataServerMessage tMessage;\n    if (mReceivingData.containsKey(socketChannel)) {\n      tMessage = mReceivingData.get(socketChannel);\n    } else {\n      tMessage = DataServerMessage.createBlockRequestMessage();\n      mReceivingData.put(socketChannel, tMessage);\n    }\n\n    // Attempt to read off the channel\n    int numRead;\n    try {\n      numRead = tMessage.recv(socketChannel);\n    } catch (IOException e) {\n      // The remote forcibly closed the connection, cancel the selection key and close the channel.\n      key.cancel();\n      socketChannel.close();\n      mReceivingData.remove(socketChannel);\n      mSendingData.remove(socketChannel);\n      return;\n    }\n\n    if (numRead == -1) {\n      // Remote entity shut the socket down cleanly. Do the same from our end and cancel the\n      // channel.\n      key.channel().close();\n      key.cancel();\n      mReceivingData.remove(socketChannel);\n      mSendingData.remove(socketChannel);\n      return;\n    }\n\n    if (tMessage.isMessageReady()) {\n      if (tMessage.getBlockId() <= 0) {\n        LOG.error(\"Invalid block id \" + tMessage.getBlockId());\n        return;\n      }\n\n      key.interestOps(SelectionKey.OP_WRITE);\n      LOG.info(\"Get request for \" + tMessage.getBlockId());\n      int lockId = mBlockLocker.lock(tMessage.getBlockId());\n      DataServerMessage tResponseMessage =\n          DataServerMessage.createBlockResponseMessage(true, tMessage.getBlockId(),\n              tMessage.getOffset(), tMessage.getLength());\n      tResponseMessage.setLockId(lockId);\n      mSendingData.put(socketChannel, tResponseMessage);\n    }\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"private Selector initSelector() throws IOException {\n    // Create a new selector\n    Selector socketSelector = SelectorProvider.provider().openSelector();\n\n    // Create a new non-blocking server socket channel\n    mServerChannel = ServerSocketChannel.open();\n    mServerChannel.configureBlocking(false);\n\n    // Bind the server socket to the specified address and port\n    mServerChannel.socket().bind(mAddress);\n\n    // Register the server socket channel, indicating an interest in accepting new connections.\n    mServerChannel.register(socketSelector, SelectionKey.OP_ACCEPT);\n\n    return socketSelector;\n  }","id":56247,"modified_method":"private Selector initSelector() throws IOException {\n    // Create a new selector\n    Selector socketSelector = SelectorProvider.provider().openSelector();\n\n    // Create a new non-blocking server socket channel\n    try {\n      mServerChannel = ServerSocketChannel.open();\n      mServerChannel.configureBlocking(false);\n\n      // Bind the server socket to the specified address and port\n      mServerChannel.socket().bind(mAddress);\n\n      // Register the server socket channel, indicating an interest in accepting new connections.\n      mServerChannel.register(socketSelector, SelectionKey.OP_ACCEPT);\n\n      return socketSelector;\n    } catch (IOException e) {\n      // we wan't to throw the original IO issue, not the close issue, so don't throw\n      // #close IOException.\n      Closeables.closeQuietly(socketSelector);\n      throw e;\n    }\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"private void write(SelectionKey key) {\n    SocketChannel socketChannel = (SocketChannel) key.channel();\n\n    DataServerMessage sendMessage = mSendingData.get(socketChannel);\n\n    boolean closeChannel = false;\n    try {\n      sendMessage.send(socketChannel);\n    } catch (IOException e) {\n      closeChannel = true;\n      LOG.error(e.getMessage());\n    }\n\n    if (sendMessage.finishSending() || closeChannel) {\n      try {\n        key.channel().close();\n      } catch (IOException e) {\n        LOG.error(e.getMessage());\n      }\n      key.cancel();\n      mReceivingData.remove(socketChannel);\n      mSendingData.remove(socketChannel);\n      sendMessage.close();\n      BLOCKS_LOCKER.unlock(Math.abs(sendMessage.getBlockId()), sendMessage.getLockId());\n    }\n  }","id":56248,"modified_method":"private void write(SelectionKey key) {\n    SocketChannel socketChannel = (SocketChannel) key.channel();\n\n    DataServerMessage sendMessage = mSendingData.get(socketChannel);\n\n    boolean closeChannel = false;\n    try {\n      sendMessage.send(socketChannel);\n    } catch (IOException e) {\n      closeChannel = true;\n      LOG.error(e.getMessage());\n    }\n\n    if (sendMessage.finishSending() || closeChannel) {\n      try {\n        key.channel().close();\n      } catch (IOException e) {\n        LOG.error(e.getMessage());\n      }\n      key.cancel();\n      mReceivingData.remove(socketChannel);\n      mSendingData.remove(socketChannel);\n      sendMessage.close();\n      mBlockLocker.unlock(Math.abs(sendMessage.getBlockId()), sendMessage.getLockId());\n    }\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void close() throws IOException {\n    CHANNEL_FUTURE.channel().close().awaitUninterruptibly();\n    BOOTSTRAP.group().shutdownGracefully();\n    BOOTSTRAP.childGroup().shutdownGracefully();\n    SYNC_GROUP.shutdownGracefully();\n  }","id":56249,"modified_method":"@Override\n  public void close() throws IOException {\n    mChannelFuture.channel().close().awaitUninterruptibly();\n    mBootstrap.group().shutdownGracefully();\n    mBootstrap.childGroup().shutdownGracefully();\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"private static ServerBootstrap createBootstrap() {\n    final WorkerConf conf = WorkerConf.get();\n    ServerBootstrap boot = new ServerBootstrap();\n    boot = setupGroups(boot, conf.NETTY_CHANNEL_TYPE);\n\n    // use pooled buffers\n    boot.option(ChannelOption.ALLOCATOR, PooledByteBufAllocator.DEFAULT);\n    boot.childOption(ChannelOption.ALLOCATOR, PooledByteBufAllocator.DEFAULT);\n\n    // set write buffer\n    // this is the default, but its recommended to set it in case of change in future netty.\n    boot.childOption(ChannelOption.WRITE_BUFFER_HIGH_WATER_MARK, conf.NETTY_HIGH_WATER_MARK);\n    boot.childOption(ChannelOption.WRITE_BUFFER_LOW_WATER_MARK, conf.NETTY_LOW_WATER_MARK);\n\n    // more buffer settings\n    if (conf.NETTY_BACKLOG != null) {\n      boot.option(ChannelOption.SO_BACKLOG, conf.NETTY_BACKLOG);\n    }\n    if (conf.NETTY_SEND_BUFFER != null) {\n      boot.option(ChannelOption.SO_SNDBUF, conf.NETTY_SEND_BUFFER);\n    }\n    if (conf.NETTY_RECIEVE_BUFFER != null) {\n      boot.option(ChannelOption.SO_RCVBUF, conf.NETTY_RECIEVE_BUFFER);\n    }\n    return boot;\n  }","id":56250,"modified_method":"private static ServerBootstrap createBootstrap() {\n    final WorkerConf conf = WorkerConf.get();\n    ServerBootstrap boot = new ServerBootstrap();\n    boot = setupGroups(boot, conf.NETTY_CHANNEL_TYPE);\n\n    // use pooled buffers\n    boot.option(ChannelOption.ALLOCATOR, PooledByteBufAllocator.DEFAULT);\n    boot.childOption(ChannelOption.ALLOCATOR, PooledByteBufAllocator.DEFAULT);\n\n    // set write buffer\n    // this is the default, but its recommended to set it in case of change in future netty.\n    boot.childOption(ChannelOption.WRITE_BUFFER_HIGH_WATER_MARK, conf.NETTY_HIGH_WATER_MARK);\n    boot.childOption(ChannelOption.WRITE_BUFFER_LOW_WATER_MARK, conf.NETTY_LOW_WATER_MARK);\n\n    // more buffer settings\n    if (conf.NETTY_BACKLOG.isPresent()) {\n      boot.option(ChannelOption.SO_BACKLOG, conf.NETTY_BACKLOG.get());\n    }\n    if (conf.NETTY_SEND_BUFFER.isPresent()) {\n      boot.option(ChannelOption.SO_SNDBUF, conf.NETTY_SEND_BUFFER.get());\n    }\n    if (conf.NETTY_RECIEVE_BUFFER.isPresent()) {\n      boot.option(ChannelOption.SO_RCVBUF, conf.NETTY_RECIEVE_BUFFER.get());\n    }\n    return boot;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Gets the port listening on.\n   */\n  @Override\n  public int getPort() {\n    // according to the docs, a InetSocketAddress is returned and the user must down-cast\n    return ((InetSocketAddress) CHANNEL_FUTURE.channel().localAddress()).getPort();\n  }","id":56251,"modified_method":"/**\n   * Gets the port listening on.\n   */\n  @Override\n  public int getPort() {\n    // according to the docs, a InetSocketAddress is returned and the user must down-cast\n    return ((InetSocketAddress) mChannelFuture.channel().localAddress()).getPort();\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"public NettyDataServer(final SocketAddress address, final BlocksLocker locker)\n      throws InterruptedException {\n    BOOTSTRAP =\n        createBootstrap().childHandler(new PipelineHandler(locker, SYNC_GROUP));\n\n    CHANNEL_FUTURE = BOOTSTRAP.bind(address).sync();\n  }","id":56252,"modified_method":"public NettyDataServer(final SocketAddress address, final BlocksLocker locker) {\n    mBootstrap = createBootstrap().childHandler(new PipelineHandler(locker));\n\n    try {\n      mChannelFuture = mBootstrap.bind(address).sync();\n    } catch (InterruptedException e) {\n      throw Throwables.propagate(e);\n    }\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public boolean isClosed() {\n    return BOOTSTRAP.group().isShutdown();\n  }","id":56253,"modified_method":"@Override\n  public boolean isClosed() {\n    return mBootstrap.group().isShutdown();\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"public PipelineHandler(BlocksLocker locker, EventExecutorGroup group) {\n    LOCKER = locker;\n    SYNC_GROUP = group;\n  }","id":56254,"modified_method":"public PipelineHandler(BlocksLocker locker) {\n    mLocker = locker;\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  protected void initChannel(SocketChannel ch) throws Exception {\n    ChannelPipeline pipeline = ch.pipeline();\n    pipeline.addLast(\"nioChunckedWriter\", new ChunkedWriteHandler());\n    pipeline.addLast(\"blockRequestDecoder\", new BlockRequest.Decoder());\n    pipeline.addLast(\"blockRequestEncoder\", new BlockResponse.Encoder());\n    pipeline.addLast(SYNC_GROUP, \"dataServerHandler\", new DataServerHandler(LOCKER));\n  }","id":56255,"modified_method":"@Override\n  protected void initChannel(SocketChannel ch) throws Exception {\n    ChannelPipeline pipeline = ch.pipeline();\n    pipeline.addLast(\"nioChunkedWriter\", new ChunkedWriteHandler());\n    pipeline.addLast(\"blockRequestDecoder\", new BlockRequest.Decoder());\n    pipeline.addLast(\"blockResponseEncoder\", new BlockResponse.Encoder());\n    pipeline.addLast(\"dataServerHandler\", new DataServerHandler(mLocker));\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @param masterAddress\n   *          The TachyonMaster's address.\n   * @param workerAddress\n   *          This TachyonWorker's address.\n   * @param dataPort\n   *          This TachyonWorker's data server's port\n   * @param selectorThreads\n   *          The number of selector threads of the worker's thrift server\n   * @param acceptQueueSizePerThreads\n   *          The accept queue size per thread of the worker's thrift server\n   * @param workerThreads\n   *          The number of threads of the worker's thrift server\n   * @param dataFolder\n   *          This TachyonWorker's local folder's path\n   * @param memoryCapacityBytes\n   *          The maximum memory space this TachyonWorker can use, in bytes\n   */\n  private TachyonWorker(InetSocketAddress masterAddress, InetSocketAddress workerAddress,\n      int dataPort, int selectorThreads, int acceptQueueSizePerThreads, int workerThreads,\n      String dataFolder, long memoryCapacityBytes) {\n    CommonConf.assertValidPort(masterAddress);\n    CommonConf.assertValidPort(workerAddress);\n    CommonConf.assertValidPort(dataPort);\n\n    mMasterAddress = masterAddress;\n\n    mWorkerStorage = new WorkerStorage(mMasterAddress, dataFolder, memoryCapacityBytes);\n\n    mWorkerServiceHandler = new WorkerServiceHandler(mWorkerStorage);\n\n    // Extract the port from the generated socket.\n    // When running tests, its great to use port '0' so the system will figure out what port to use\n    // (any random free port).\n    // In a production or any real deployment setup, port '0' should not be used as it will make\n    // deployment more complicated.\n    try {\n      InetSocketAddress dataAddress = new InetSocketAddress(workerAddress.getHostName(), dataPort);\n      BlocksLocker blockLocker = new BlocksLocker(mWorkerStorage, Users.sDATASERVER_USER_ID);\n      mDataServer = createDataServer(dataAddress, blockLocker);\n    } catch (InterruptedException e) {\n      throw Throwables.propagate(e);\n    }\n    mDataPort = mDataServer.getPort();\n\n    mHeartbeatThread = new Thread(this);\n    try {\n      LOG.info(\"Tachyon Worker version \" + Version.VERSION + \" tries to start @ \" + workerAddress);\n      WorkerService.Processor<WorkerServiceHandler> processor =\n          new WorkerService.Processor<WorkerServiceHandler>(mWorkerServiceHandler);\n\n      mServerTNonblockingServerSocket = new TNonblockingServerSocket(workerAddress);\n      mPort = NetworkUtils.getPort(mServerTNonblockingServerSocket);\n      mServer =\n          new TThreadedSelectorServer(new TThreadedSelectorServer.Args(\n              mServerTNonblockingServerSocket).processor(processor)\n              .selectorThreads(selectorThreads)\n              .acceptQueueSizePerThread(acceptQueueSizePerThreads).workerThreads(workerThreads));\n    } catch (TTransportException e) {\n      LOG.error(e.getMessage(), e);\n      throw Throwables.propagate(e);\n    }\n    mWorkerAddress =\n        new NetAddress(workerAddress.getAddress().getCanonicalHostName(), mPort, mDataPort);\n    mWorkerStorage.initialize(mWorkerAddress);\n  }","id":56256,"modified_method":"/**\n   * @param masterAddress\n   *          The TachyonMaster's address.\n   * @param workerAddress\n   *          This TachyonWorker's address.\n   * @param dataPort\n   *          This TachyonWorker's data server's port\n   * @param selectorThreads\n   *          The number of selector threads of the worker's thrift server\n   * @param acceptQueueSizePerThreads\n   *          The accept queue size per thread of the worker's thrift server\n   * @param workerThreads\n   *          The number of threads of the worker's thrift server\n   * @param dataFolder\n   *          This TachyonWorker's local folder's path\n   * @param memoryCapacityBytes\n   *          The maximum memory space this TachyonWorker can use, in bytes\n   */\n  private TachyonWorker(InetSocketAddress masterAddress, InetSocketAddress workerAddress,\n      int dataPort, int selectorThreads, int acceptQueueSizePerThreads, int workerThreads,\n      String dataFolder, long memoryCapacityBytes) {\n    CommonConf.assertValidPort(masterAddress);\n    CommonConf.assertValidPort(workerAddress);\n    CommonConf.assertValidPort(dataPort);\n\n    mMasterAddress = masterAddress;\n\n    mWorkerStorage = new WorkerStorage(mMasterAddress, dataFolder, memoryCapacityBytes);\n\n    mWorkerServiceHandler = new WorkerServiceHandler(mWorkerStorage);\n\n    // Extract the port from the generated socket.\n    // When running tests, its great to use port '0' so the system will figure out what port to use\n    // (any random free port).\n    // In a production or any real deployment setup, port '0' should not be used as it will make\n    // deployment more complicated.\n    InetSocketAddress dataAddress = new InetSocketAddress(workerAddress.getHostName(), dataPort);\n    BlocksLocker blockLocker = new BlocksLocker(mWorkerStorage, Users.sDATASERVER_USER_ID);\n    mDataServer = createDataServer(dataAddress, blockLocker);\n    mDataPort = mDataServer.getPort();\n\n    mHeartbeatThread = new Thread(this);\n    try {\n      LOG.info(\"Tachyon Worker version \" + Version.VERSION + \" tries to start @ \" + workerAddress);\n      WorkerService.Processor<WorkerServiceHandler> processor =\n          new WorkerService.Processor<WorkerServiceHandler>(mWorkerServiceHandler);\n\n      mServerTNonblockingServerSocket = new TNonblockingServerSocket(workerAddress);\n      mPort = NetworkUtils.getPort(mServerTNonblockingServerSocket);\n      mServer =\n          new TThreadedSelectorServer(new TThreadedSelectorServer.Args(\n              mServerTNonblockingServerSocket).processor(processor)\n              .selectorThreads(selectorThreads)\n              .acceptQueueSizePerThread(acceptQueueSizePerThreads).workerThreads(workerThreads));\n    } catch (TTransportException e) {\n      LOG.error(e.getMessage(), e);\n      throw Throwables.propagate(e);\n    }\n    mWorkerAddress =\n        new NetAddress(workerAddress.getAddress().getCanonicalHostName(), mPort, mDataPort);\n    mWorkerStorage.initialize(mWorkerAddress);\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"private WorkerConf() {\n    MASTER_HOSTNAME = getProperty(\"tachyon.master.hostname\", NetworkUtils.getLocalHostName());\n    MASTER_PORT = getIntProperty(\"tachyon.master.port\", Constants.DEFAULT_MASTER_PORT);\n\n    PORT = getIntProperty(\"tachyon.worker.port\", Constants.DEFAULT_WORKER_PORT);\n    DATA_PORT =\n        getIntProperty(\"tachyon.worker.data.port\", Constants.DEFAULT_WORKER_DATA_SERVER_PORT);\n    DATA_FOLDER = getProperty(\"tachyon.worker.data.folder\", \"/mnt/ramdisk\");\n    MEMORY_SIZE =\n        CommonUtils.parseSpaceSize(getProperty(\"tachyon.worker.memory.size\", (128 * Constants.MB)\n            + \"\"));\n    HEARTBEAT_TIMEOUT_MS =\n        getIntProperty(\"tachyon.worker.heartbeat.timeout.ms\", 10 * Constants.SECOND_MS);\n    TO_MASTER_HEARTBEAT_INTERVAL_MS =\n        getIntProperty(\"tachyon.worker.to.master.heartbeat.interval.ms\", Constants.SECOND_MS);\n    SELECTOR_THREADS = getIntProperty(\"tachyon.worker.selector.threads\", 3);\n    QUEUE_SIZE_PER_SELECTOR = getIntProperty(\"tachyon.worker.queue.size.per.selector\", 3000);\n    SERVER_THREADS =\n        getIntProperty(\"tachyon.worker.server.threads\",\n            Runtime.getRuntime().availableProcessors());\n    USER_TIMEOUT_MS = getIntProperty(\"tachyon.worker.user.timeout.ms\", 10 * Constants.SECOND_MS);\n\n    WORKER_CHECKPOINT_THREADS = getIntProperty(\"tachyon.worker.checkpoint.threads\", 1);\n    WORKER_PER_THREAD_CHECKPOINT_CAP_MB_SEC =\n        getIntProperty(\"tachyon.worker.per.thread.checkpoint.cap.mb.sec\", Constants.SECOND_MS);\n\n    NETWORK_TYPE = getEnumProperty(\"tachyon.worker.network.type\", NetworkType.NETTY);\n    NETTY_CHANNEL_TYPE =\n        getEnumProperty(\"tachyon.worker.network.netty.channel\", ChannelType.defaultType());\n\n    NETTY_DATA_PROCESS_THREADS =\n        getIntProperty(\"tachyon.worker.network.netty.process.threads\", Runtime.getRuntime()\n            .availableProcessors());\n\n    NETTY_HIGH_WATER_MARK =\n        getIntProperty(\"tachyon.worker.network.netty.watermark.high\", 32 * 1024);\n    NETTY_LOW_WATER_MARK = getIntProperty(\"tachyon.worker.network.netty.watermark.low\", 8 * 1024);\n    NETTY_BACKLOG = getIntegerProperty(\"tachyon.worker.network.netty.backlog\", null);\n    NETTY_SEND_BUFFER = getIntegerProperty(\"tachyon.worker.network.netty.buffer.send\", null);\n    NETTY_RECIEVE_BUFFER = getIntegerProperty(\"tachyon.worker.network.netty.buffer.recieve\", null);\n  }","id":56257,"modified_method":"private WorkerConf() {\n    MASTER_HOSTNAME = getProperty(\"tachyon.master.hostname\", NetworkUtils.getLocalHostName());\n    MASTER_PORT = getIntProperty(\"tachyon.master.port\", Constants.DEFAULT_MASTER_PORT);\n\n    PORT = getIntProperty(\"tachyon.worker.port\", Constants.DEFAULT_WORKER_PORT);\n    DATA_PORT =\n        getIntProperty(\"tachyon.worker.data.port\", Constants.DEFAULT_WORKER_DATA_SERVER_PORT);\n    DATA_FOLDER = getProperty(\"tachyon.worker.data.folder\", \"/mnt/ramdisk\");\n    MEMORY_SIZE =\n        CommonUtils.parseSpaceSize(getProperty(\"tachyon.worker.memory.size\", (128 * Constants.MB)\n            + \"\"));\n    HEARTBEAT_TIMEOUT_MS =\n        getIntProperty(\"tachyon.worker.heartbeat.timeout.ms\", 10 * Constants.SECOND_MS);\n    TO_MASTER_HEARTBEAT_INTERVAL_MS =\n        getIntProperty(\"tachyon.worker.to.master.heartbeat.interval.ms\", Constants.SECOND_MS);\n    SELECTOR_THREADS = getIntProperty(\"tachyon.worker.selector.threads\", 3);\n    QUEUE_SIZE_PER_SELECTOR = getIntProperty(\"tachyon.worker.queue.size.per.selector\", 3000);\n    SERVER_THREADS =\n        getIntProperty(\"tachyon.worker.server.threads\",\n            Runtime.getRuntime().availableProcessors());\n    USER_TIMEOUT_MS = getIntProperty(\"tachyon.worker.user.timeout.ms\", 10 * Constants.SECOND_MS);\n\n    WORKER_CHECKPOINT_THREADS = getIntProperty(\"tachyon.worker.checkpoint.threads\", 1);\n    WORKER_PER_THREAD_CHECKPOINT_CAP_MB_SEC =\n        getIntProperty(\"tachyon.worker.per.thread.checkpoint.cap.mb.sec\", Constants.SECOND_MS);\n\n    NETWORK_TYPE = getEnumProperty(\"tachyon.worker.network.type\", NetworkType.NETTY);\n    NETTY_CHANNEL_TYPE =\n        getEnumProperty(\"tachyon.worker.network.netty.channel\", ChannelType.defaultType());\n\n    NETTY_DATA_PROCESS_THREADS =\n        getIntProperty(\"tachyon.worker.network.netty.process.threads\", Runtime.getRuntime()\n            .availableProcessors());\n\n    NETTY_HIGH_WATER_MARK =\n        getIntProperty(\"tachyon.worker.network.netty.watermark.high\", 32 * 1024);\n    NETTY_LOW_WATER_MARK = getIntProperty(\"tachyon.worker.network.netty.watermark.low\", 8 * 1024);\n    NETTY_BACKLOG =\n        Optional.fromNullable(getIntegerProperty(\"tachyon.worker.network.netty.backlog\", null));\n    NETTY_SEND_BUFFER =\n        Optional.fromNullable(getIntegerProperty(\"tachyon.worker.network.netty.buffer.send\", null));\n    NETTY_RECIEVE_BUFFER =\n        Optional.fromNullable(getIntegerProperty(\"tachyon.worker.network.netty.buffer.recieve\",\n            null));\n  }","commit_id":"36dbcd245f4be072dcd62e20bb7e7fb3f876d837","url":"https://github.com/amplab/tachyon"},{"original_method":"public HistogramResult histogram(String query, Indexer.DateHistogramInterval interval, TimeRange range) throws IndexHelper.InvalidRangeFormatException {\n        DateHistogramFacetBuilder fb = FacetBuilders.dateHistogramFacet(\"histogram\")\n\t\t\t\t.field(\"timestamp\")\n\t\t\t\t.facetFilter(IndexHelper.getTimestampRangeFilter(range))\n\t\t\t\t.interval(interval.toString().toLowerCase());\n\t\t\n\t\tSearchRequestBuilder srb = c.prepareSearch();\n\t\tsrb.setIndices(IndexHelper.determineAffectedIndices(server, range).toArray(new String[]{}));\n\t\tsrb.setQuery(queryString(query));\n\t\tsrb.addFacet(fb);\n\n        final SearchRequest request = srb.request();\n        SearchResponse r = c.search(request).actionGet();\n\t\treturn new DateHistogramResult((DateHistogramFacet) r.getFacets().facet(\"histogram\"), query,\n                                       request.source(),\n                                       interval, r.getTook());\n\t}","id":56258,"modified_method":"public HistogramResult histogram(String query, Indexer.DateHistogramInterval interval, TimeRange range) throws IndexHelper.InvalidRangeFormatException {\n        DateHistogramFacetBuilder fb = FacetBuilders.dateHistogramFacet(\"histogram\")\n\t\t\t\t.field(\"timestamp\")\n\t\t\t\t.facetFilter(IndexHelper.getTimestampRangeFilter(range))\n\t\t\t\t.interval(interval.toString().toLowerCase());\n\n        QueryStringQueryBuilder qs = queryString(query);\n        qs.allowLeadingWildcard(false);\n\n        SearchRequestBuilder srb = c.prepareSearch();\n\t\tsrb.setIndices(IndexHelper.determineAffectedIndices(server, range).toArray(new String[]{}));\n\t\tsrb.setQuery(qs);\n\t\tsrb.addFacet(fb);\n\n        final SearchRequest request = srb.request();\n        SearchResponse r = c.search(request).actionGet();\n\t\treturn new DateHistogramResult((DateHistogramFacet) r.getFacets().facet(\"histogram\"), query,\n                                       request.source(),\n                                       interval, r.getTook());\n\t}","commit_id":"0ae5c9cc03d50ac693e0bb7e6a3caedfc58c4bfc","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public void flushCaretPosition() {\n    myCaretPositionSaved = false;\n  }","id":56259,"modified_method":"public void flushCaretPosition() {\n    for (Caret caret : myEditor.getCaretModel().getAllCarets()) {\n      caret.putUserData(SAVED_CARET_POSITION, null);\n    }\n  }","commit_id":"ac73fdd5fca3fcb4f2e4b6ba5dc2945d37c587c9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void expandFoldRegion(FoldRegion region) {\n    assertIsDispatchThreadForEditor();\n    if (region.isExpanded() || region.shouldNeverExpand()) return;\n\n    if (!myIsBatchFoldingProcessing) {\n      LOG.error(\"Fold regions must be collapsed or expanded inside batchFoldProcessing() only.\");\n    }\n\n    if (myCaretPositionSaved) {\n      int savedOffset = myEditor.logicalPositionToOffset(new LogicalPosition(mySavedCaretY, mySavedCaretX));\n\n      FoldRegion[] allCollapsed = myFoldTree.fetchCollapsedAt(savedOffset);\n      if (allCollapsed.length == 1 && allCollapsed[0] == region) {\n        LogicalPosition pos = new LogicalPosition(mySavedCaretY, mySavedCaretX);\n        myEditor.getCaretModel().moveToLogicalPosition(pos);\n      }\n    }\n\n    myFoldRegionsProcessed = true;\n    ((FoldRegionImpl) region).setExpandedInternal(true);\n    notifyListenersOnFoldRegionStateChange(region);\n  }","id":56260,"modified_method":"public void expandFoldRegion(FoldRegion region) {\n    assertIsDispatchThreadForEditor();\n    if (region.isExpanded() || region.shouldNeverExpand()) return;\n\n    if (!myIsBatchFoldingProcessing) {\n      LOG.error(\"Fold regions must be collapsed or expanded inside batchFoldProcessing() only.\");\n    }\n\n    for (Caret caret : myEditor.getCaretModel().getAllCarets()) {\n      LogicalPosition savedPosition = caret.getUserData(SAVED_CARET_POSITION);\n      if (savedPosition != null) {\n        int savedOffset = myEditor.logicalPositionToOffset(savedPosition);\n\n        FoldRegion[] allCollapsed = myFoldTree.fetchCollapsedAt(savedOffset);\n        if (allCollapsed.length == 1 && allCollapsed[0] == region) {\n          caret.moveToLogicalPosition(savedPosition);\n        }\n      }\n    }\n\n    myFoldRegionsProcessed = true;\n    ((FoldRegionImpl) region).setExpandedInternal(true);\n    notifyListenersOnFoldRegionStateChange(region);\n  }","commit_id":"ac73fdd5fca3fcb4f2e4b6ba5dc2945d37c587c9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void notifyBatchFoldingProcessingDone(final boolean moveCaretFromCollapsedRegion) {\n    rebuild();\n\n    for (FoldingListener listener : myListeners) {\n      listener.onFoldProcessingEnd();\n    }\n\n    myEditor.updateCaretCursor();\n    myEditor.recalculateSizeAndRepaint();\n    myEditor.getGutterComponentEx().updateSize();\n    myEditor.getGutterComponentEx().repaint();\n\n    LogicalPosition caretPosition = myEditor.getCaretModel().getLogicalPosition();\n    // There is a possible case that caret position is already visual position aware. But visual position depends on number of folded\n    // logical lines as well, hence, we can't be sure that target logical position defines correct visual position because fold\n    // regions have just changed. Hence, we use 'raw' logical position instead.\n    if (caretPosition.visualPositionAware) {\n      caretPosition = new LogicalPosition(caretPosition.line, caretPosition.column);\n    }\n    int caretOffset = myEditor.logicalPositionToOffset(caretPosition);\n    int selectionStart = myEditor.getSelectionModel().getSelectionStart();\n    int selectionEnd = myEditor.getSelectionModel().getSelectionEnd();\n\n    int column = -1;\n    int line = -1;\n    int offsetToUse = -1;\n\n    FoldRegion collapsed = myFoldTree.fetchOutermost(caretOffset);\n    if (myCaretPositionSaved) {\n      int savedOffset = myEditor.logicalPositionToOffset(new LogicalPosition(mySavedCaretY, mySavedCaretX));\n      FoldRegion collapsedAtSaved = myFoldTree.fetchOutermost(savedOffset);\n      if (collapsedAtSaved == null) {\n        column = mySavedCaretX;\n        line = mySavedCaretY;\n      }\n      else {\n        offsetToUse = collapsedAtSaved.getStartOffset();\n      }\n    }\n\n    if (collapsed != null && column == -1) {\n      line = collapsed.getDocument().getLineNumber(collapsed.getStartOffset());\n      column = myEditor.offsetToLogicalPosition(collapsed.getStartOffset()).column;\n    }\n\n    boolean oldCaretPositionSaved = myCaretPositionSaved;\n\n    if (moveCaretFromCollapsedRegion && myEditor.getCaretModel().isUpToDate()) {\n      if (offsetToUse >= 0) {\n        myEditor.getCaretModel().moveToOffset(offsetToUse);\n      }\n      else if (column != -1) {\n        myEditor.getCaretModel().moveToLogicalPosition(new LogicalPosition(line, column));\n      }\n      else {\n        myEditor.getCaretModel().moveToLogicalPosition(caretPosition);\n      }\n    }\n\n    myCaretPositionSaved = oldCaretPositionSaved;\n\n    if (isOffsetInsideCollapsedRegion(selectionStart) || isOffsetInsideCollapsedRegion(selectionEnd)) {\n      myEditor.getSelectionModel().removeSelection();\n    } else if (selectionStart < myEditor.getDocument().getTextLength()) {\n      myEditor.getSelectionModel().setSelection(selectionStart, selectionEnd);\n    }\n\n    if (mySavedCaretShift > 0) {\n      final ScrollingModel scrollingModel = myEditor.getScrollingModel();\n      scrollingModel.disableAnimation();\n      scrollingModel.scrollVertically(myEditor.visibleLineToY(myEditor.getCaretModel().getVisualPosition().line) - mySavedCaretShift);\n      scrollingModel.enableAnimation();\n    }\n  }","id":56261,"modified_method":"private void notifyBatchFoldingProcessingDone(final boolean moveCaretFromCollapsedRegion) {\n    rebuild();\n\n    for (FoldingListener listener : myListeners) {\n      listener.onFoldProcessingEnd();\n    }\n\n    myEditor.updateCaretCursor();\n    myEditor.recalculateSizeAndRepaint();\n    myEditor.getGutterComponentEx().updateSize();\n    myEditor.getGutterComponentEx().repaint();\n\n    for (Caret caret : myEditor.getCaretModel().getAllCarets()) {\n      // There is a possible case that caret position is already visual position aware. But visual position depends on number of folded\n      // logical lines as well, hence, we can't be sure that target logical position defines correct visual position because fold\n      // regions have just changed. Hence, we use 'raw' logical position instead.\n      LogicalPosition caretPosition = caret.getLogicalPosition().withoutVisualPositionInfo();\n      int caretOffset = myEditor.logicalPositionToOffset(caretPosition);\n      int selectionStart = caret.getSelectionStart();\n      int selectionEnd = caret.getSelectionEnd();\n\n      LogicalPosition positionToUse = null;\n      int offsetToUse = -1;\n\n      FoldRegion collapsed = myFoldTree.fetchOutermost(caretOffset);\n      LogicalPosition savedPosition = caret.getUserData(SAVED_CARET_POSITION);\n      if (savedPosition != null) {\n        int savedOffset = myEditor.logicalPositionToOffset(savedPosition);\n        FoldRegion collapsedAtSaved = myFoldTree.fetchOutermost(savedOffset);\n        if (collapsedAtSaved == null) {\n          positionToUse = savedPosition;\n        }\n        else {\n          offsetToUse = collapsedAtSaved.getStartOffset();\n        }\n      }\n\n      if (collapsed != null && positionToUse == null) {\n        positionToUse = myEditor.offsetToLogicalPosition(collapsed.getStartOffset());\n      }\n\n      if (moveCaretFromCollapsedRegion && caret.isUpToDate()) {\n        if (offsetToUse >= 0) {\n          caret.moveToOffset(offsetToUse);\n        }\n        else if (positionToUse != null) {\n          caret.moveToLogicalPosition(positionToUse);\n        }\n        else {\n          caret.moveToLogicalPosition(caretPosition);\n        }\n      }\n\n      caret.putUserData(SAVED_CARET_POSITION, savedPosition);\n\n      if (isOffsetInsideCollapsedRegion(selectionStart) || isOffsetInsideCollapsedRegion(selectionEnd)) {\n        caret.removeSelection();\n      } else if (selectionStart < myEditor.getDocument().getTextLength()) {\n        caret.setSelection(selectionStart, selectionEnd);\n      }\n    }\n\n    if (mySavedCaretShift > 0) {\n      final ScrollingModel scrollingModel = myEditor.getScrollingModel();\n      scrollingModel.disableAnimation();\n      scrollingModel.scrollVertically(myEditor.visibleLineToY(myEditor.getCaretModel().getVisualPosition().line) - mySavedCaretShift);\n      scrollingModel.enableAnimation();\n    }\n  }","commit_id":"ac73fdd5fca3fcb4f2e4b6ba5dc2945d37c587c9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void collapseFoldRegion(FoldRegion region) {\n    assertIsDispatchThreadForEditor();\n    if (!region.isExpanded()) return;\n\n    if (!myIsBatchFoldingProcessing) {\n      LOG.error(\"Fold regions must be collapsed or expanded inside batchFoldProcessing() only.\");\n    }\n\n    LogicalPosition caretPosition = myEditor.getCaretModel().getLogicalPosition();\n\n    int caretOffset = myEditor.logicalPositionToOffset(caretPosition);\n\n    if (FoldRegionsTree.contains(region, caretOffset)) {\n      if (myDoNotCollapseCaret) return;\n\n      if (!myCaretPositionSaved) {\n        mySavedCaretX = caretPosition.column;\n        mySavedCaretY = caretPosition.line;\n        myCaretPositionSaved = true;\n      }\n    }\n\n    myFoldRegionsProcessed = true;\n    ((FoldRegionImpl) region).setExpandedInternal(false);\n    notifyListenersOnFoldRegionStateChange(region);\n  }","id":56262,"modified_method":"public void collapseFoldRegion(FoldRegion region) {\n    assertIsDispatchThreadForEditor();\n    if (!region.isExpanded()) return;\n\n    if (!myIsBatchFoldingProcessing) {\n      LOG.error(\"Fold regions must be collapsed or expanded inside batchFoldProcessing() only.\");\n    }\n\n    List<Caret> carets = myEditor.getCaretModel().getAllCarets();\n    for (Caret caret : carets) {\n      LogicalPosition caretPosition = caret.getLogicalPosition();\n      int caretOffset = myEditor.logicalPositionToOffset(caretPosition);\n      \n      if (FoldRegionsTree.contains(region, caretOffset)) {\n        if (myDoNotCollapseCaret) return;\n      }\n    }\n    for (Caret caret : carets) {\n      LogicalPosition caretPosition = caret.getLogicalPosition();\n      int caretOffset = myEditor.logicalPositionToOffset(caretPosition);\n      \n      if (FoldRegionsTree.contains(region, caretOffset)) {\n        if (caret.getUserData(SAVED_CARET_POSITION) == null) {\n          caret.putUserData(SAVED_CARET_POSITION, caretPosition.withoutVisualPositionInfo());\n        }\n      }\n    }\n\n    myFoldRegionsProcessed = true;\n    ((FoldRegionImpl) region).setExpandedInternal(false);\n    notifyListenersOnFoldRegionStateChange(region);\n  }","commit_id":"ac73fdd5fca3fcb4f2e4b6ba5dc2945d37c587c9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean doRecalculateSoftWraps(IncrementalCacheUpdateEvent event) {\n    // Preparation.\n    myContext.reset();\n    myOffset2fontType.clear();\n    myOffset2widthInPixels.clear();\n\n    // Define start of the visual line that holds target range start.\n    int start = event.getNewStartOffset();\n    LogicalPosition logical = myDataMapper.offsetToLogicalPosition(start);\n    VisualPosition visual = new VisualPosition(myDataMapper.logicalToVisualPosition(logical, myEditor.logicalToVisualPosition(logical, false)).line, 0);\n    start = myEditor.logicalPositionToOffset(logical);\n    Document document = myEditor.getDocument();\n    myContext.text = document.getCharsSequence();\n    myContext.tokenStartOffset = start;\n    IterationState iterationState = new IterationState(myEditor, start, document.getTextLength(), false);\n    try {\n      TextAttributes attributes = iterationState.getMergedAttributes();\n      myContext.fontType = attributes.getFontType();\n      myContext.rangeEndOffset = event.getNewEndOffset();\n\n      EditorPosition position = new EditorPosition(logical, start, myEditor, myRepresentationHelper);\n      Point point = myEditor.visualPositionToXY(visual);\n      position.x = point.x;\n      int spaceWidth = EditorUtil.getSpaceWidth(myContext.fontType, myEditor);\n\n      myContext.logicalLineData.update(logical.line, spaceWidth, myEditor);\n\n      myContext.currentPosition = position;\n      myContext.lineStartPosition = position.clone();\n      myContext.fontType2spaceWidth.put(myContext.fontType, spaceWidth);\n      myContext.softWrapStartOffset = position.offset;\n\n      myContext.contentComponent = myEditor.getContentComponent();\n      myContext.reservedWidthInPixels = myPainter.getMinDrawingWidth(SoftWrapDrawingType.BEFORE_SOFT_WRAP_LINE_FEED);\n\n      // Perform soft wraps calculation.\n      while (!iterationState.atEnd() && myContext.currentPosition.offset <= event.getNewEndOffset()) {\n        FoldRegion currentFold = iterationState.getCurrentFold();\n        if (currentFold == null) {\n          myContext.tokenEndOffset = iterationState.getEndOffset();\n          processNonFoldToken();\n        }\n        else {\n          boolean continueProcessing = processCollapsedFoldRegion(currentFold);\n          if (!continueProcessing) {\n            return false;\n          }\n\n          // 'myOffset2widthInPixels' contains information necessary to processing soft wraps that lay before the current offset.\n          // We do know that soft wraps are not allowed to go backward after processed collapsed fold region, hence, we drop\n          // information about processed symbols width.\n          myOffset2widthInPixels.clear();\n        }\n\n        iterationState.advance();\n        attributes = iterationState.getMergedAttributes();\n        myContext.fontType = attributes.getFontType();\n        myContext.tokenStartOffset = iterationState.getStartOffset();\n        myOffset2fontType.fill(myContext.tokenStartOffset, iterationState.getEndOffset(), myContext.fontType);\n      }\n      notifyListenersOnVisualLineEnd();\n    }\n    finally {\n      iterationState.dispose();\n    }\n    return true;\n  }","id":56263,"modified_method":"private boolean doRecalculateSoftWraps(IncrementalCacheUpdateEvent event) {\n    // Preparation.\n    myContext.reset();\n    myOffset2fontType.clear();\n    myOffset2widthInPixels.clear();\n\n    // Define start of the visual line that holds target range start.\n    int start = event.getNewStartOffset();\n    \n    final LogicalPosition logical;\n    final Point point;\n    \n    if (start == 0 && myEditor.getPrefixTextWidthInPixels() <= 0) {\n      logical = new LogicalPosition(0, 0, 0, 0, 0, 0, 0);\n      point = new Point(0, 0);\n    }\n    else {\n      logical = myDataMapper.offsetToLogicalPosition(start);\n      VisualPosition visual = new VisualPosition(\n        myDataMapper.logicalToVisualPosition(logical, myEditor.logicalToVisualPosition(logical, false)).line,\n        0\n      );\n      point = myEditor.visualPositionToXY(visual);\n      start = myEditor.logicalPositionToOffset(logical);\n    }\n    \n    Document document = myEditor.getDocument();\n    myContext.text = document.getCharsSequence();\n    myContext.tokenStartOffset = start;\n    IterationState iterationState = new IterationState(myEditor, start, document.getTextLength(), false);\n    try {\n      TextAttributes attributes = iterationState.getMergedAttributes();\n      myContext.fontType = attributes.getFontType();\n      myContext.rangeEndOffset = event.getNewEndOffset();\n\n      EditorPosition position = new EditorPosition(logical, start, myEditor, myRepresentationHelper);\n      position.x = point.x;\n      int spaceWidth = EditorUtil.getSpaceWidth(myContext.fontType, myEditor);\n\n      myContext.logicalLineData.update(logical.line, spaceWidth, myEditor);\n\n      myContext.currentPosition = position;\n      myContext.lineStartPosition = position.clone();\n      myContext.fontType2spaceWidth.put(myContext.fontType, spaceWidth);\n      myContext.softWrapStartOffset = position.offset;\n\n      myContext.contentComponent = myEditor.getContentComponent();\n      myContext.reservedWidthInPixels = myPainter.getMinDrawingWidth(SoftWrapDrawingType.BEFORE_SOFT_WRAP_LINE_FEED);\n\n      // Perform soft wraps calculation.\n      while (!iterationState.atEnd() && myContext.currentPosition.offset <= event.getNewEndOffset()) {\n        FoldRegion currentFold = iterationState.getCurrentFold();\n        if (currentFold == null) {\n          myContext.tokenEndOffset = iterationState.getEndOffset();\n          processNonFoldToken();\n        }\n        else {\n          boolean continueProcessing = processCollapsedFoldRegion(currentFold);\n          if (!continueProcessing) {\n            return false;\n          }\n\n          // 'myOffset2widthInPixels' contains information necessary to processing soft wraps that lay before the current offset.\n          // We do know that soft wraps are not allowed to go backward after processed collapsed fold region, hence, we drop\n          // information about processed symbols width.\n          myOffset2widthInPixels.clear();\n        }\n\n        iterationState.advance();\n        attributes = iterationState.getMergedAttributes();\n        myContext.fontType = attributes.getFontType();\n        myContext.tokenStartOffset = iterationState.getStartOffset();\n        myOffset2fontType.fill(myContext.tokenStartOffset, iterationState.getEndOffset(), myContext.fontType);\n      }\n      notifyListenersOnVisualLineEnd();\n    }\n    finally {\n      iterationState.dispose();\n    }\n    return true;\n  }","commit_id":"255527e7129ee79c22182fe8ebaab866bf9be315","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Simulate typing in the rich text area.\n     * \n     * @param keysToSend the sequence of keys to by typed\n     */\n    public void sendKeys(CharSequence... keysToSend)\n    {\n        if (keysToSend.length == 0) {\n            return;\n        }\n\n        String windowHandle = getDriver().getWindowHandle();\n        getDriver().switchTo().frame(iframe);\n\n        // FIXME: The following JavaScript code is a temporary workaround for\n        // http://code.google.com/p/selenium/issues/detail?id=2331 (sendKeys doesn't work on BODY element with\n        // contentEditable=true).\n        StringBuilder script = new StringBuilder();\n\n        // Save the selection.\n        script.append(\"window.__savedRange = window.getSelection().getRangeAt(0);\\n\");\n\n        // Make the BODY element read-only.\n        script.append(\"document.body.contentEditable = false;\\n\");\n\n        // Wrap all content with a contentEditable DIV.\n        script.append(\"var div = document.createElement('div');\\n\");\n        // Make sure the DIV is visible (this is for the case when the rich text area is empty).\n        script.append(\"div.style.minHeight = '20px';\");\n        script.append(\"document.body.appendChild(div);\\n\");\n        script.append(\"var contentRange = document.createRange();\\n\");\n        script.append(\"contentRange.setStartBefore(document.body.firstChild);\\n\");\n        script.append(\"contentRange.setEndBefore(div);\\n\");\n        script.append(\"div.appendChild(contentRange.extractContents());\\n\");\n        script.append(\"div.contentEditable = true;\\n\");\n\n        // Restore the selection.\n        script.append(\"window.getSelection().removeAllRanges();\\n\");\n        script.append(\"window.getSelection().addRange(window.__savedRange);\\n\");\n        script.append(\"window.__savedRange = undefined;\\n\");\n        executeJavascript(script.toString());\n\n        getDriver().findElement(By.xpath(\"//body/div\")).sendKeys(keysToSend);\n\n        // Save the selection.\n        script.delete(0, script.length());\n        script.append(\"window.__savedRange = window.getSelection().getRangeAt(0);\\n\");\n\n        // Unwrap the content.\n        script.append(\"var contentRange = document.createRange();\\n\");\n        script.append(\"contentRange.selectNodeContents(document.body.firstChild);\\n\");\n        script.append(\"document.body.appendChild(contentRange.extractContents());\\n\");\n        script.append(\"document.body.removeChild(document.body.firstChild);\\n\");\n\n        // Restore contentEditable on the BODY element.\n        script.append(\"document.body.contentEditable = true;\\n\");\n\n        // Restore the selection.\n        script.append(\"window.getSelection().removeAllRanges();\\n\");\n        script.append(\"window.getSelection().addRange(window.__savedRange);\\n\");\n        script.append(\"window.__savedRange = undefined;\\n\");\n        executeJavascript(script.toString());\n\n        getDriver().switchTo().window(windowHandle);\n    }","id":56264,"modified_method":"/**\n     * Simulate typing in the rich text area.\n     * \n     * @param keysToSend the sequence of keys to by typed\n     */\n    public void sendKeys(CharSequence... keysToSend)\n    {\n        if (keysToSend.length > 0) {\n            String windowHandle = getDriver().getWindowHandle();\n            try {\n                getDriver().switchTo().frame(iframe).switchTo().activeElement().sendKeys(keysToSend);\n            } finally {\n                getDriver().switchTo().window(windowHandle);\n            }\n        }\n    }","commit_id":"aa51e0e0c9d07aca6f66190287cf963bd3bd52da","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @return the inner text of the rich text area\n     */\n    public String getText()\n    {\n        String windowHandle = getDriver().getWindowHandle();\n        getDriver().switchTo().frame(iframe);\n\n        String content = getDriver().findElement(By.id(\"body\")).getText();\n\n        getDriver().switchTo().window(windowHandle);\n        return content;\n    }","id":56265,"modified_method":"/**\n     * @return the inner text of the rich text area\n     */\n    public String getText()\n    {\n        String windowHandle = getDriver().getWindowHandle();\n        try {\n            return getDriver().switchTo().frame(iframe).switchTo().activeElement().getText();\n        } finally {\n            getDriver().switchTo().window(windowHandle);\n        }\n    }","commit_id":"aa51e0e0c9d07aca6f66190287cf963bd3bd52da","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Clears the content of the rich text area.\n     */\n    public void clear()\n    {\n        String windowHandle = getDriver().getWindowHandle();\n        getDriver().switchTo().frame(iframe);\n\n        executeJavascript(\"document.body.innerHTML = ''\");\n\n        getDriver().switchTo().window(windowHandle);\n    }","id":56266,"modified_method":"/**\n     * Clears the content of the rich text area.\n     */\n    public void clear()\n    {\n        String windowHandle = getDriver().getWindowHandle();\n        try {\n            getDriver().switchTo().frame(iframe).switchTo().activeElement().clear();\n        } finally {\n            getDriver().switchTo().window(windowHandle);\n        }\n    }","commit_id":"aa51e0e0c9d07aca6f66190287cf963bd3bd52da","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public WebDriver createWebDriver(String browserName)\n    {\n        if (browserName.startsWith(\"*firefox\")) {\n            return new FirefoxDriver();\n        } else if (browserName.startsWith(\"*iexplore\")) {\n            return new InternetExplorerDriver();\n        } else if (browserName.startsWith(\"*chrome\")) {\n            return new ChromeDriver();\n        } else {\n            throw new RuntimeException(\"Unsupported browser name [\" + browserName + \"]\");\n        }\n    }","id":56267,"modified_method":"public WebDriver createWebDriver(String browserName)\n    {\n        if (browserName.startsWith(\"*firefox\")) {\n            // Native events are disabled by default for Firefox on Linux as it may cause tests which open many windows\n            // in parallel to be unreliable. However, native events work quite well otherwise and are essential for some\n            // of the new actions of the Advanced User Interaction. We need native events to be enable especially for\n            // testing the WYSIWYG editor. See http://code.google.com/p/selenium/issues/detail?id=2331 .\n            FirefoxProfile profile = new FirefoxProfile();\n            profile.setEnableNativeEvents(true);\n            return new FirefoxDriver(profile);\n        } else if (browserName.startsWith(\"*iexplore\")) {\n            return new InternetExplorerDriver();\n        } else if (browserName.startsWith(\"*chrome\")) {\n            return new ChromeDriver();\n        } else {\n            throw new RuntimeException(\"Unsupported browser name [\" + browserName + \"]\");\n        }\n    }","commit_id":"aa51e0e0c9d07aca6f66190287cf963bd3bd52da","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n   * Advanced API.\n   * \n   * Gets the ClientFileInfo object that represents the fileId, or the path if fileId is -1.\n   * \n   * @param fileId the file id of the file or folder.\n   * @param path the path of the file or folder. valid iff fileId is -1.\n   * @param useCachedMetadata if true use the local cached meta data\n   * @return the ClientFileInfo of the file. null if the file does not exist.\n   * @throws IOException\n   */\n  public synchronized ClientFileInfo getFileStatus(int fileId, TachyonURI path,\n      boolean useCachedMetadata) throws IOException {\n    ClientFileInfo info = null;\n    boolean updated = false;\n\n    validateUri(path);\n\n    if (fileId != -1) {\n      info = mIdToClientFileInfo.get(fileId);\n      if (!useCachedMetadata || info == null) {\n        info = mMasterClient.getFileStatus(fileId, TachyonURI.EMPTY_URI.getPath());\n        updated = true;\n      }\n\n      if (info.getId() == -1) {\n        mIdToClientFileInfo.remove(fileId);\n        return null;\n      }\n\n      path = new TachyonURI(info.getPath());\n    } else {\n      info = mPathToClientFileInfo.get(path.getPath());\n      if (!useCachedMetadata || info == null) {\n        info = mMasterClient.getFileStatus(-1, path.getPath());\n        updated = true;\n      }\n\n      if (info.getId() == -1) {\n        mPathToClientFileInfo.remove(path.getPath());\n        return null;\n      }\n\n      fileId = info.getId();\n    }\n\n    if (updated) {\n      // TODO LRU on this Map.\n      mIdToClientFileInfo.put(fileId, info);\n      mPathToClientFileInfo.put(path.getPath(), info);\n    }\n\n    return info;\n  }","id":56268,"modified_method":"/**\n   * Advanced API.\n   * \n   * Gets the ClientFileInfo object that represents the fileId, or the path if fileId is -1.\n   * \n   * @param fileId the file id of the file or folder.\n   * @param path the path of the file or folder. valid iff fileId is -1.\n   * @param useCachedMetadata if true use the local cached meta data\n   * @return the ClientFileInfo of the file. null if the file does not exist.\n   * @throws IOException\n   */\n  public synchronized ClientFileInfo getFileStatus(int fileId, TachyonURI path,\n      boolean useCachedMetadata) throws IOException {\n    if (fileId != -1) {\n      return getFileStatus(mIdToClientFileInfo, Integer.valueOf(fileId), fileId,\n          TachyonURI.EMPTY_URI.getPath(), useCachedMetadata);\n    } else {\n      validateUri(path);\n      String p = path.getPath();\n      return getFileStatus(mPathToClientFileInfo, p, fileId, p, useCachedMetadata);\n    }\n  }","commit_id":"d2af79af7e108d07806b94644987fa8288205986","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Validates the given uri, throwing an IOException if the uri is invalid.\n   * \n   * @param uri The uri to validate\n   */\n  private void validateUri(TachyonURI uri) throws IOException {\n    TachyonURI thisFs = getUri();\n    if (uri == null || (!uri.isPathAbsolute() && !TachyonURI.EMPTY_URI.equals(uri))\n        || (uri.hasScheme() && !thisFs.getScheme().equals(uri.getScheme()))\n        || (uri.hasAuthority() && !thisFs.getAuthority().equals(uri.getAuthority()))) {\n      throw new IOException(\"Uri \" + uri + \" is invalid.\");\n    }\n  }","id":56269,"modified_method":"/**\n   * Validates the given uri, throwing an IOException if the uri is invalid.\n   * \n   * @param uri The uri to validate\n   */\n  private void validateUri(TachyonURI uri) throws IOException {\n    if (uri == null || (!uri.isPathAbsolute() && !TachyonURI.EMPTY_URI.equals(uri))\n        || (uri.hasScheme() && !mRootUri.getScheme().equals(uri.getScheme()))\n        || (uri.hasAuthority() && !mRootUri.getAuthority().equals(uri.getAuthority()))) {\n      throw new IOException(\"Uri \" + uri + \" is invalid.\");\n    }\n  }","commit_id":"d2af79af7e108d07806b94644987fa8288205986","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @return URI of the root of the filesystem\n   */\n  @Override\n  public synchronized TachyonURI getUri() {\n    String scheme = CommonConf.get().USE_ZOOKEEPER ? Constants.SCHEME_FT : Constants.SCHEME;\n    String authority = mMasterAddress.getHostName() + \":\" + mMasterAddress.getPort();\n    return new TachyonURI(scheme, authority, TachyonURI.SEPARATOR);\n  }","id":56270,"modified_method":"/**\n   * @return URI of the root of the filesystem\n   */\n  @Override\n  public synchronized TachyonURI getUri() {\n    return mRootUri;\n  }","commit_id":"d2af79af7e108d07806b94644987fa8288205986","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Get file id by the path. It will check if the path exists.\n   * \n   * @param path the path in Tachyon file system\n   * @return the file id if exists, -1 otherwise\n   * @throws IOException\n   */\n  public synchronized int getFileId(TachyonURI path) throws IOException {\n    try {\n      return getFileStatus(-1, path, false).getId();\n    } catch (IOException e) {\n      return -1;\n    }\n  }","id":56271,"modified_method":"/**\n   * Get file id by the path. It will check if the path exists.\n   * \n   * @param path the path in Tachyon file system\n   * @return the file id if exists, -1 otherwise\n   */\n  public synchronized int getFileId(TachyonURI path) {\n    try {\n      return getFileStatus(-1, path, false).getId();\n    } catch (IOException e) {\n      return -1;\n    }\n  }","commit_id":"d2af79af7e108d07806b94644987fa8288205986","url":"https://github.com/amplab/tachyon"},{"original_method":"private TachyonFS(InetSocketAddress masterAddress, boolean zookeeperMode) throws IOException {\n    mMasterAddress = masterAddress;\n    mZookeeperMode = zookeeperMode;\n    mAvailableSpaceBytes = 0L;\n\n    mExecutorService =\n        Executors.newFixedThreadPool(2, ThreadFactoryUtils.daemon(\"client-heartbeat-%d\"));\n\n    mMasterClient =\n        mCloser.register(new MasterClient(mMasterAddress, mZookeeperMode, mExecutorService));\n    mWorkerClient = mCloser.register(new WorkerClient(mMasterClient, mExecutorService));\n  }","id":56272,"modified_method":"private TachyonFS(InetSocketAddress masterAddress, boolean zookeeperMode) throws IOException {\n    mMasterAddress = masterAddress;\n    mZookeeperMode = zookeeperMode;\n    mAvailableSpaceBytes = 0L;\n\n    mExecutorService =\n        Executors.newFixedThreadPool(2, ThreadFactoryUtils.daemon(\"client-heartbeat-%d\"));\n\n    mMasterClient =\n        mCloser.register(new MasterClient(mMasterAddress, mZookeeperMode, mExecutorService));\n    mWorkerClient = mCloser.register(new WorkerClient(mMasterClient, mExecutorService));\n\n    String scheme = mZookeeperMode ? Constants.SCHEME_FT : Constants.SCHEME;\n    String authority = mMasterAddress.getHostName() + \":\" + mMasterAddress.getPort();\n    mRootUri = new TachyonURI(scheme, authority, TachyonURI.SEPARATOR);\n  }","commit_id":"d2af79af7e108d07806b94644987fa8288205986","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Try to request space from worker. Only works when a local worker exists.\n   * \n   * @param requestSpaceBytes the space size in bytes\n   * @return true if succeed, false otherwise\n   * @throws IOException\n   */\n  public synchronized boolean requestSpace(long requestSpaceBytes) throws IOException {\n    if (!mWorkerClient.isLocal()) {\n      return false;\n    }\n    int failedTimes = 0;\n    while (mAvailableSpaceBytes < requestSpaceBytes) {\n      long toRequestSpaceBytes =\n          Math.max(requestSpaceBytes - mAvailableSpaceBytes, mUserQuotaUnitBytes);\n      if (mWorkerClient.requestSpace(mMasterClient.getUserId(), toRequestSpaceBytes)) {\n        mAvailableSpaceBytes += toRequestSpaceBytes;\n      } else {\n        LOG.info(\"Failed to request \" + toRequestSpaceBytes + \" bytes local space. \" + \"Time \"\n            + (failedTimes ++));\n        if (failedTimes == mUserFailedSpaceRequestLimits) {\n          return false;\n        }\n      }\n    }\n\n    if (mAvailableSpaceBytes < requestSpaceBytes) {\n      return false;\n    }\n\n    mAvailableSpaceBytes -= requestSpaceBytes;\n\n    return true;\n  }","id":56273,"modified_method":"/**\n   * Try to request space from worker. Only works when a local worker exists.\n   * \n   * @param requestSpaceBytes the space size in bytes\n   * @return true if succeed, false otherwise\n   * @throws IOException\n   */\n  public synchronized boolean requestSpace(long requestSpaceBytes) throws IOException {\n    if (!mWorkerClient.isLocal()) {\n      return false;\n    }\n    int failedTimes = 0;\n    while (mAvailableSpaceBytes < requestSpaceBytes) {\n      long toRequestSpaceBytes =\n          Math.max(requestSpaceBytes - mAvailableSpaceBytes, mUserQuotaUnitBytes);\n      if (mWorkerClient.requestSpace(mMasterClient.getUserId(), toRequestSpaceBytes)) {\n        mAvailableSpaceBytes += toRequestSpaceBytes;\n      } else {\n        LOG.info(\"Failed to request \" + toRequestSpaceBytes + \" bytes local space. \" + \"Time \"\n            + (failedTimes ++));\n        if (failedTimes == mUserFailedSpaceRequestLimits) {\n          return false;\n        }\n      }\n    }\n\n    mAvailableSpaceBytes -= requestSpaceBytes;\n\n    return true;\n  }","commit_id":"d2af79af7e108d07806b94644987fa8288205986","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * Create snapshot for a dir using a given snapshot name\n   * \n   * @param hdfs DistributedFileSystem instance\n   * @param snapshottedDir The dir to be snapshotted\n   * @param snapshotName The name of the snapshot\n   * @return The path of the snapshot root\n   */\n  public static Path createSnapshot(DistributedFileSystem hdfs,\n      Path snapshottedDir, String snapshotName) throws Exception {\n    assert hdfs.exists(snapshottedDir);\n    hdfs.allowSnapshot(snapshottedDir.toString());\n    hdfs.createSnapshot(snapshotName, snapshottedDir.toString());\n    return SnapshotTestHelper.getSnapshotRoot(snapshottedDir, snapshotName);\n  }","id":56274,"modified_method":"/**\n   * Create snapshot for a dir using a given snapshot name\n   * \n   * @param hdfs DistributedFileSystem instance\n   * @param snapshottedDir The dir to be snapshotted\n   * @param snapshotName The name of the snapshot\n   * @return The path of the snapshot root\n   */\n  public static Path createSnapshot(DistributedFileSystem hdfs,\n      Path snapshottedDir, String snapshotName) throws Exception {\n    assertTrue(hdfs.exists(snapshottedDir));\n    hdfs.allowSnapshot(snapshottedDir.toString());\n    hdfs.createSnapshot(snapshotName, snapshottedDir.toString());\n    return SnapshotTestHelper.getSnapshotRoot(snapshottedDir, snapshotName);\n  }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n    void modify() throws Exception {\n      assert fs.exists(file);\n      FSDataOutputStream out = fs.append(file);\n      byte[] buffer = new byte[appendLen];\n      random.nextBytes(buffer);\n      out.write(buffer);\n      out.close();\n    }","id":56275,"modified_method":"@Override\n    void modify() throws Exception {\n      assertTrue(fs.exists(file));\n      FSDataOutputStream out = fs.append(file);\n      byte[] buffer = new byte[appendLen];\n      random.nextBytes(buffer);\n      out.write(buffer);\n      out.close();\n    }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n    void checkSnapshots() throws Exception {\n      byte[] buffer = new byte[32];\n      for (Path snapshotRoot : snapshotList) {\n        Path snapshotFile = new Path(snapshotRoot, file.getName());\n        long currentSnapshotFileLen = -1L;\n        if (fs.exists(snapshotFile)) {\n          currentSnapshotFileLen = fs.getFileStatus(snapshotFile).getLen();\n        }\n        long originalSnapshotFileLen = snapshotFileLengthMap.get(snapshotFile);\n        assertEquals(currentSnapshotFileLen, originalSnapshotFileLen);\n        // Read the snapshot file out of the boundary\n        if (fs.exists(snapshotFile)) {\n          FSDataInputStream input = fs.open(snapshotFile);\n          int readLen = input.read(currentSnapshotFileLen, buffer, 0, 1);\n          assertEquals(readLen, -1);\n        }\n      }\n    }","id":56276,"modified_method":"@Override\n    void checkSnapshots() throws Exception {\n      byte[] buffer = new byte[32];\n      for (Path snapshotFile : snapshotFileLengthMap.keySet()) {        \n        long currentSnapshotFileLen = fs.exists(snapshotFile) ? fs\n            .getFileStatus(snapshotFile).getLen() : -1L;\n        long originalSnapshotFileLen = snapshotFileLengthMap.get(snapshotFile);\n        assertEquals(currentSnapshotFileLen, originalSnapshotFileLen);\n        // Read the snapshot file out of the boundary\n        if (currentSnapshotFileLen != -1L) {\n          FSDataInputStream input = fs.open(snapshotFile);\n          int readLen = input.read(currentSnapshotFileLen, buffer, 0, 1);\n          assertEquals(readLen, -1);\n        }\n      }\n    }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Make changes (modification, deletion, creation) to the current files/dir.\n   * Then check if the previous snapshots are still correct.\n   * \n   * @param modifications Modifications that to be applied to the current dir.\n   */\n  public void modifyCurrentDirAndCheckSnapshots(Modification[] modifications)\n      throws Exception {\n    for (Modification modification : modifications) {\n      modification.loadSnapshots();\n      modification.modify();\n      modification.checkSnapshots();\n    }\n  }","id":56277,"modified_method":"/**\n   * Make changes (modification, deletion, creation) to the current files/dir.\n   * Then check if the previous snapshots are still correct.\n   * \n   * @param modifications Modifications that to be applied to the current dir.\n   */\n  private void modifyCurrentDirAndCheckSnapshots(Modification[] modifications)\n      throws Exception {\n    for (Modification modification : modifications) {\n      modification.loadSnapshots();\n      modification.modify();\n      modification.checkSnapshots();\n    }\n  }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n    void checkSnapshots() throws Exception {\n      for (Path snapshotRoot : snapshotList) {\n        Path snapshotFile = new Path(snapshotRoot, file.getName());\n        boolean currentSnapshotFileExist = fs.exists(snapshotFile);\n        boolean originalSnapshotFileExist = snapshotFileExistenceMap\n            .get(snapshotFile);\n        assertEquals(currentSnapshotFileExist, originalSnapshotFileExist);\n      }\n    }","id":56278,"modified_method":"@Override\n    void checkSnapshots() throws Exception {\n      for (Path snapshotRoot : snapshotList) {\n        boolean currentSnapshotFileExist = SnapshotTestHelper.getSnapshotFile(\n            fs, snapshotRoot, file) != null;\n        boolean originalSnapshotFileExist = snapshotFileExistenceMap\n            .get(snapshotRoot);\n        assertEquals(currentSnapshotFileExist, originalSnapshotFileExist);\n      }\n    }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n    void loadSnapshots() throws Exception {\n      for (Path snapshotRoot : snapshotList) {\n        Path snapshotFile = new Path(snapshotRoot, file.getName());\n        boolean exist = fs.exists(snapshotFile);\n        if (exist) {\n          fileStatusMap.put(snapshotFile, fs.getFileStatus(snapshotFile));\n        } else {\n          fileStatusMap.put(snapshotFile, null);\n        }\n      }\n    }","id":56279,"modified_method":"@Override\n    void loadSnapshots() throws Exception {\n      for (Path snapshotRoot : snapshotList) {\n        Path snapshotFile = SnapshotTestHelper.getSnapshotFile(fs,\n            snapshotRoot, file);\n        if (snapshotFile != null) {\n          FileStatus status = \n              fs.exists(snapshotFile) ? fs.getFileStatus(snapshotFile) : null; \n          fileStatusMap.put(snapshotFile, status);\n        }\n      }\n    }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"FileAppend(Path file, FileSystem fs, int len) throws Exception {\n      super(file, fs, \"append\");\n      assert len >= 0;\n      this.appendLen = len;\n      this.snapshotFileLengthMap = new HashMap<Path, Long>();\n    }","id":56280,"modified_method":"FileAppend(Path file, FileSystem fs, int len) {\n      super(file, fs, \"append\");\n      this.appendLen = len;\n      this.snapshotFileLengthMap = new HashMap<Path, Long>();\n    }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n    void loadSnapshots() throws Exception {\n      for (Path snapshotRoot : snapshotList) {\n        Path snapshotFile = new Path(snapshotRoot, file.getName());\n        if (fs.exists(snapshotFile)) {\n          long snapshotFileLen = fs.getFileStatus(snapshotFile).getLen();\n          snapshotFileLengthMap.put(snapshotFile, snapshotFileLen);\n        } else {\n          snapshotFileLengthMap.put(snapshotFile, -1L);\n        }\n      }\n    }","id":56281,"modified_method":"@Override\n    void loadSnapshots() throws Exception {\n      for (Path snapshotRoot : snapshotList) {\n        Path snapshotFile = SnapshotTestHelper.getSnapshotFile(fs,\n            snapshotRoot, file);\n        if (snapshotFile != null) {\n          long snapshotFileLen = fs.exists(snapshotFile) ? fs.getFileStatus(\n              snapshotFile).getLen() : -1L;\n          snapshotFileLengthMap.put(snapshotFile, snapshotFileLen);\n        }\n      }\n    }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n    void checkSnapshots() throws Exception {\n      for (Path snapshotRoot : snapshotList) {\n        Path snapshotFile = new Path(snapshotRoot, file.getName());\n        boolean currentSnapshotFileExist = fs.exists(snapshotFile);\n        boolean originalSnapshotFileExist = !(fileStatusMap.get(snapshotFile) == null);\n        assertEquals(currentSnapshotFileExist, originalSnapshotFileExist);\n        if (currentSnapshotFileExist) {\n          FileStatus currentSnapshotStatus = fs.getFileStatus(snapshotFile);\n          FileStatus originalStatus = fileStatusMap.get(snapshotFile);\n          assertEquals(currentSnapshotStatus, originalStatus);\n        }\n      }\n    }","id":56282,"modified_method":"@Override\n    void checkSnapshots() throws Exception {\n      for (Path snapshotRoot : snapshotList) {\n        Path snapshotFile = SnapshotTestHelper.getSnapshotFile(fs,\n            snapshotRoot, file);\n        if (snapshotFile != null) {\n          boolean currentSnapshotFileExist = fs.exists(snapshotFile);\n          boolean originalSnapshotFileExist = \n              fileStatusMap.get(snapshotFile) != null;\n          assertEquals(currentSnapshotFileExist, originalSnapshotFileExist);\n          if (currentSnapshotFileExist) {\n            FileStatus currentSnapshotStatus = fs.getFileStatus(snapshotFile);\n            FileStatus originalStatus = fileStatusMap.get(snapshotFile);\n            // We compare the string because it contains all the information,\n            // while FileStatus#equals only compares the path\n            assertEquals(currentSnapshotStatus.toString(),\n                originalStatus.toString());\n          }\n        }\n      }\n    }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Creating snapshots for a directory that is not snapshottable must fail.\n   * \n   * TODO: Listing/Deleting snapshots for a directory that is not snapshottable\n   * should also fail.\n   */\n  @Test\n  public void testSnapshottableDirectory() throws Exception {\n    Path file0 = new Path(sub1, \"file0\");\n    Path file1 = new Path(sub1, \"file1\");\n    DFSTestUtil.createFile(hdfs, file0, BLOCKSIZE, REPLICATION, seed);\n    DFSTestUtil.createFile(hdfs, file1, BLOCKSIZE, REPLICATION, seed);\n\n    exception.expect(RemoteException.class);\n    hdfs.createSnapshot(\"s1\", sub1.toString());\n  }","id":56283,"modified_method":"/**\n   * Creating snapshots for a directory that is not snapshottable must fail.\n   * \n   * TODO: Listing/Deleting snapshots for a directory that is not snapshottable\n   * should also fail.\n   */\n  @Test\n  public void testSnapshottableDirectory() throws Exception {\n    Path dir = new Path(\"/TestSnapshot/sub\");\n    Path file0 = new Path(dir, \"file0\");\n    Path file1 = new Path(dir, \"file1\");\n    DFSTestUtil.createFile(hdfs, file0, BLOCKSIZE, REPLICATION, seed);\n    DFSTestUtil.createFile(hdfs, file1, BLOCKSIZE, REPLICATION, seed);\n\n    exception.expect(RemoteException.class);\n    exception.expectMessage(\"Directory is not a snapshottable directory: \"\n        + dir.toString());\n    hdfs.createSnapshot(\"s1\", dir.toString());\n  }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testSnapshot() throws Exception {\n    ArrayList<Modification[]> mList = prepareModifications(SNAPSHOTNUMBER);\n    testSnapshot(sub1, mList);\n  }","id":56284,"modified_method":"/**\n   * Main test, where we will go in the following loop:\n   * \n   *    Create snapshot and check the creation <--+  \n   * -> Change the current/live files/dir         | \n   * -> Check previous snapshots -----------------+\n   */\n  @Test\n  public void testSnapshot() throws Exception {\n    for (int i = 0; i < SNAPSHOT_ITERATION_NUMBER; i++) {\n      // create snapshot and check the creation\n      TestDirectoryTree.Node[] ssNodes = createSnapshots();\n      \n      // prepare the modifications for the snapshotted dirs\n      // we cover the following directories: top, new, and a random\n      ArrayList<TestDirectoryTree.Node> excludedList = \n          new ArrayList<TestDirectoryTree.Node>();\n      TestDirectoryTree.Node[] modNodes = \n          new TestDirectoryTree.Node[ssNodes.length + 1];\n      for (int n = 0; n < ssNodes.length; n++) {\n        modNodes[n] = ssNodes[n];\n        excludedList.add(ssNodes[n]);\n      }\n      modNodes[modNodes.length - 1] = dirTree.getRandomDirNode(random,\n          excludedList);\n      Modification[] mods = prepareModifications(modNodes);\n      // make changes to the current directory\n      modifyCurrentDirAndCheckSnapshots(mods);\n    }\n  }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"Modification(Path file, FileSystem fs, String type) {\n      this.file = file;\n      this.fs = fs;\n      this.type = type;\n      this.random = new Random();\n    }","id":56285,"modified_method":"Modification(Path file, FileSystem fs, String type) {\n      this.file = file;\n      this.fs = fs;\n      this.type = type;\n    }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n    void loadSnapshots() throws Exception {\n      for (Path snapshotRoot : snapshotList) {\n        Path snapshotFile = new Path(snapshotRoot, file.getName());\n        boolean existence = fs.exists(snapshotFile);\n        snapshotFileExistenceMap.put(snapshotFile, existence);\n      }\n    }","id":56286,"modified_method":"@Override\n    void loadSnapshots() throws Exception {\n      for (Path snapshotRoot : snapshotList) {\n        boolean existence = SnapshotTestHelper.getSnapshotFile(fs,\n            snapshotRoot, file) != null;\n        snapshotFileExistenceMap.put(snapshotRoot, existence);\n      }\n    }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Generate the snapshot name based on its index.\n   * \n   * @param snapshotIndex The index of the snapshot\n   * @return The snapshot name\n   */\n  private String genSnapshotName(int snapshotIndex) {\n    return \"s\" + snapshotIndex;\n  }","id":56287,"modified_method":"/**\n   * Generate a random snapshot name.\n   * @return The snapshot name\n   */\n  private String genSnapshotName() {\n    return \"s\" + Math.abs(random.nextLong());\n  }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"@Before\n  public void setUp() throws Exception {\n    conf = new Configuration();\n    cluster = new MiniDFSCluster.Builder(conf).numDataNodes(REPLICATION)\n        .build();\n    cluster.waitActive();\n\n    fsn = cluster.getNamesystem();\n    hdfs = cluster.getFileSystem();\n  }","id":56288,"modified_method":"@Before\n  public void setUp() throws Exception {\n    conf = new Configuration();\n    cluster = new MiniDFSCluster.Builder(conf).numDataNodes(REPLICATION)\n        .build();\n    cluster.waitActive();\n\n    fsn = cluster.getNamesystem();\n    hdfs = cluster.getFileSystem();\n    dirTree = new TestDirectoryTree(DIRECTORY_TREE_LEVEL, hdfs);\n  }","commit_id":"1253e02f6654bd05ab063225208dec0324691fc9","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public void recoverTask(TaskAttemptContext context)\n      throws IOException {\n    if(hasOutputPath()) {\n      context.progress();\n      TaskAttemptID attemptId = context.getTaskAttemptID();\n      int previousAttempt = getAppAttemptId(context) - 1;\n      if (previousAttempt < 0) {\n        throw new IOException (\"Cannot recover task output for first attempt...\");\n      }\n\n      Path previousCommittedTaskPath = getCommittedTaskPath(\n          previousAttempt, context);\n      FileSystem fs = previousCommittedTaskPath.getFileSystem(context.getConfiguration());\n\n      LOG.debug(\"Trying to recover task from \" + previousCommittedTaskPath);\n      if (algorithmVersion == 1) {\n        if (fs.exists(previousCommittedTaskPath)) {\n          Path committedTaskPath = getCommittedTaskPath(context);\n          if (fs.exists(committedTaskPath)) {\n            if (!fs.delete(committedTaskPath, true)) {\n              throw new IOException(\"Could not delete \"+committedTaskPath);\n            }\n          }\n          //Rename can fail if the parent directory does not yet exist.\n          Path committedParent = committedTaskPath.getParent();\n          fs.mkdirs(committedParent);\n          if (!fs.rename(previousCommittedTaskPath, committedTaskPath)) {\n            throw new IOException(\"Could not rename \" + previousCommittedTaskPath +\n                \" to \" + committedTaskPath);\n          }\n        } else {\n            LOG.warn(attemptId+\" had no output to recover.\");\n        }\n      } else {\n        // essentially a no-op, but for backwards compatibility\n        // after upgrade to the new fileOutputCommitter,\n        // check if there are any output left in committedTaskPath\n        if (fs.exists(previousCommittedTaskPath)) {\n          LOG.info(\"Recovering task for upgrading scenario, moving files from \"\n              + previousCommittedTaskPath + \" to \" + outputPath);\n          FileStatus from = fs.getFileStatus(previousCommittedTaskPath);\n          mergePaths(fs, from, outputPath);\n        }\n        LOG.info(\"Done recovering task \" + attemptId);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in recoverTask()\");\n    }\n  }","id":56289,"modified_method":"@Override\n  public void recoverTask(TaskAttemptContext context)\n      throws IOException {\n    if(hasOutputPath()) {\n      context.progress();\n      TaskAttemptID attemptId = context.getTaskAttemptID();\n      int previousAttempt = getAppAttemptId(context) - 1;\n      if (previousAttempt < 0) {\n        throw new IOException (\"Cannot recover task output for first attempt...\");\n      }\n\n      Path previousCommittedTaskPath = getCommittedTaskPath(\n          previousAttempt, context);\n      FileSystem fs = previousCommittedTaskPath.getFileSystem(context.getConfiguration());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Trying to recover task from \" + previousCommittedTaskPath);\n      }\n      if (algorithmVersion == 1) {\n        if (fs.exists(previousCommittedTaskPath)) {\n          Path committedTaskPath = getCommittedTaskPath(context);\n          if (fs.exists(committedTaskPath)) {\n            if (!fs.delete(committedTaskPath, true)) {\n              throw new IOException(\"Could not delete \"+committedTaskPath);\n            }\n          }\n          //Rename can fail if the parent directory does not yet exist.\n          Path committedParent = committedTaskPath.getParent();\n          fs.mkdirs(committedParent);\n          if (!fs.rename(previousCommittedTaskPath, committedTaskPath)) {\n            throw new IOException(\"Could not rename \" + previousCommittedTaskPath +\n                \" to \" + committedTaskPath);\n          }\n        } else {\n            LOG.warn(attemptId+\" had no output to recover.\");\n        }\n      } else {\n        // essentially a no-op, but for backwards compatibility\n        // after upgrade to the new fileOutputCommitter,\n        // check if there are any output left in committedTaskPath\n        if (fs.exists(previousCommittedTaskPath)) {\n          LOG.info(\"Recovering task for upgrading scenario, moving files from \"\n              + previousCommittedTaskPath + \" to \" + outputPath);\n          FileStatus from = fs.getFileStatus(previousCommittedTaskPath);\n          mergePaths(fs, from, outputPath);\n        }\n        LOG.info(\"Done recovering task \" + attemptId);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in recoverTask()\");\n    }\n  }","commit_id":"91baca145a6c16fe13f455d150c05bd73179531b","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Merge two paths together.  Anything in from will be moved into to, if there\n   * are any name conflicts while merging the files or directories in from win.\n   * @param fs the File System to use\n   * @param from the path data is coming from.\n   * @param to the path data is going to.\n   * @throws IOException on any error\n   */\n  private static void mergePaths(FileSystem fs, final FileStatus from,\n      final Path to)\n    throws IOException {\n     LOG.debug(\"Merging data from \"+from+\" to \"+to);\n     if(from.isFile()) {\n       if(fs.exists(to)) {\n         if(!fs.delete(to, true)) {\n           throw new IOException(\"Failed to delete \"+to);\n         }\n       }\n\n       if(!fs.rename(from.getPath(), to)) {\n         throw new IOException(\"Failed to rename \"+from+\" to \"+to);\n       }\n     } else if(from.isDirectory()) {\n       if(fs.exists(to)) {\n         FileStatus toStat = fs.getFileStatus(to);\n         if(!toStat.isDirectory()) {\n           if(!fs.delete(to, true)) {\n             throw new IOException(\"Failed to delete \"+to);\n           }\n           if(!fs.rename(from.getPath(), to)) {\n             throw new IOException(\"Failed to rename \"+from+\" to \"+to);\n           }\n         } else {\n           //It is a directory so merge everything in the directories\n           for(FileStatus subFrom: fs.listStatus(from.getPath())) {\n             Path subTo = new Path(to, subFrom.getPath().getName());\n             mergePaths(fs, subFrom, subTo);\n           }\n         }\n       } else {\n         //it does not exist just rename\n         if(!fs.rename(from.getPath(), to)) {\n           throw new IOException(\"Failed to rename \"+from+\" to \"+to);\n         }\n       }\n     }\n  }","id":56290,"modified_method":"/**\n   * Merge two paths together.  Anything in from will be moved into to, if there\n   * are any name conflicts while merging the files or directories in from win.\n   * @param fs the File System to use\n   * @param from the path data is coming from.\n   * @param to the path data is going to.\n   * @throws IOException on any error\n   */\n  private void mergePaths(FileSystem fs, final FileStatus from,\n      final Path to) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Merging data from \" + from + \" to \" + to);\n    }\n    FileStatus toStat;\n    try {\n      toStat = fs.getFileStatus(to);\n    } catch (FileNotFoundException fnfe) {\n      toStat = null;\n    }\n\n    if (from.isFile()) {\n      if (toStat != null) {\n        if (!fs.delete(to, true)) {\n          throw new IOException(\"Failed to delete \" + to);\n        }\n      }\n\n      if (!fs.rename(from.getPath(), to)) {\n        throw new IOException(\"Failed to rename \" + from + \" to \" + to);\n      }\n    } else if (from.isDirectory()) {\n      if (toStat != null) {\n        if (!toStat.isDirectory()) {\n          if (!fs.delete(to, true)) {\n            throw new IOException(\"Failed to delete \" + to);\n          }\n          renameOrMerge(fs, from, to);\n        } else {\n          //It is a directory so merge everything in the directories\n          for (FileStatus subFrom : fs.listStatus(from.getPath())) {\n            Path subTo = new Path(to, subFrom.getPath().getName());\n            mergePaths(fs, subFrom, subTo);\n          }\n        }\n      } else {\n        renameOrMerge(fs, from, to);\n      }\n    }\n  }","commit_id":"91baca145a6c16fe13f455d150c05bd73179531b","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n  public boolean canHandle(@NotNull HttpRequest request) {\n    if (!(init(request))) {\n      return false;\n    }\n\n    return this.file.endsWith(\".java\");\n  }","id":56291,"modified_method":"@Override\n  public boolean canHandle(@NotNull HttpRequest request) {\n    if (!(init(request))) {\n      return false;\n    }\n\n    return !(this.file.endsWith(\".java\"));\n  }","commit_id":"1a60d8000b4bcecb6d46ca4054f061bebcaae0c2","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void handle(@NotNull HttpRequest request) throws Exception {\n\n    if (this.project != null) {\n      final com.intellij.openapi.project.Project ideaProject = ((this.project instanceof MPSProject) ? ((MPSProject) this.project).getProject() : null);\n\n\n      int sourceGen = this.file.lastIndexOf(HandlerUtil.SOURCE_GEN);\n      int unitNamePosition = (sourceGen == -1 ? 0 : sourceGen + HandlerUtil.SOURCE_GEN.length());\n      int unitNameEndPostion = this.file.length() - \".java\".length();\n      final String unitName = this.file.substring(unitNamePosition, unitNameEndPostion).replace('/', '.');\n      final String namespace = unitName.substring(0, unitName.lastIndexOf(\".\"));\n\n      final String fileName = this.file.substring(this.file.lastIndexOf(\"/\") + 1);\n\n      this.project.getModelAccess().runWriteInEDT(new Runnable() {\n        public void run() {\n          Iterator<DebugInfo> it = new DefaultTraceInfoProvider(FileOpener_RequestHandler.this.project.getRepository()).debugInfo(namespace).iterator();\n          while (it.hasNext()) {\n            if (FileOpener_RequestHandler.this.line != null) {\n              final SNodeReference nodeReference = new BaseLanguageNodeLookup(it.next()).getNodeAt(fileName, FileOpener_RequestHandler.this.line);\n              if (nodeReference != null) {\n                HandlerUtil.openNode(FileOpener_RequestHandler.this.project, nodeReference);\n                FileOpener_RequestHandler.this.request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(HandlerUtil.SUCCESS_STREAM));\n                HandlerUtil.requestFocus(FileOpener_RequestHandler.this.project);\n                return;\n              }\n            } else {\n              Iterable<DebugInfoRoot> debugInfoRoots = it.next().getRoots();\n              SNodeReference nodeReference = Sequence.fromIterable(debugInfoRoots).where(new IWhereFilter<DebugInfoRoot>() {\n                public boolean accept(DebugInfoRoot debugInfoRoot) {\n                  return debugInfoRoot.getFileNames().contains(fileName);\n                }\n              }).first().getNodeRef();\n              if (nodeReference != null) {\n                HandlerUtil.openNode(FileOpener_RequestHandler.this.project, nodeReference);\n                FileOpener_RequestHandler.this.request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(HandlerUtil.SUCCESS_STREAM));\n                HandlerUtil.requestFocus(FileOpener_RequestHandler.this.project);\n                return;\n              }\n            }\n          }\n\n          final VirtualFile virtualFile = FileOpenUtil.findFile(ideaProject, unitName, fileName);\n          if (virtualFile != null) {\n            FileOpenUtil.openFile(ideaProject, virtualFile, (FileOpener_RequestHandler.this.line == null ? 1 : FileOpener_RequestHandler.this.line));\n            FileOpener_RequestHandler.this.request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(HandlerUtil.SUCCESS_STREAM));\n            HandlerUtil.requestFocus(FileOpener_RequestHandler.this.project);\n            return;\n          }\n          FileOpener_RequestHandler.this.request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(HandlerUtil.FAILURE_STREAM));\n        }\n      });\n    } else {\n      if (LOG.isEnabledFor(Level.ERROR)) {\n        LOG.error(\"No project is available.\");\n      }\n      this.request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(HandlerUtil.FAILURE_STREAM));\n    }\n  }","id":56292,"modified_method":"@Override\n  public void handle(@NotNull HttpRequest request) throws Exception {\n    if (this.project instanceof MPSProject) {\n      final com.intellij.openapi.project.Project ideaProject = as_tdoo4z_a0a0a0a0l(this.project, MPSProject.class).getProject();\n      VirtualFile projectFile = ideaProject.getBaseDir();\n      if (projectFile != null) {\n        final VirtualFile virtualFile = projectFile.findFileByRelativePath(this.file);\n        if (virtualFile != null) {\n          this.project.getModelAccess().runWriteInEDT(new Runnable() {\n            public void run() {\n              FileOpenUtil.openFile(ideaProject, virtualFile, 1);\n              FileOpener_RequestHandler.this.request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(HandlerUtil.SUCCESS_STREAM));\n              HandlerUtil.requestFocus(FileOpener_RequestHandler.this.project);\n            }\n          });\n          return;\n        }\n      }\n    }\n\n    this.request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(HandlerUtil.FAILURE_STREAM));\n  }","commit_id":"1a60d8000b4bcecb6d46ca4054f061bebcaae0c2","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected boolean initParameterValues() {\n\n    {\n      String file_serialized = ListSequence.fromList(request.getParameterValue(\"file\")).getElement(0);\n      if (file_serialized == null) {\n        return false;\n      }\n      this.file = file_serialized;\n\n    }\n    {\n      String line_serialized = ListSequence.fromList(request.getParameterValue(\"line\")).getElement(0);\n      this.line = HttpSupportUtil.silentParseInt(line_serialized);\n\n    }\n    {\n      String project_serialized = ListSequence.fromList(request.getParameterValue(\"project\")).getElement(0);\n      this.project = HttpSupportUtil.getProjectByName(project_serialized);\n\n    }\n    return true;\n  }","id":56293,"modified_method":"@Override\n  protected boolean initParameterValues() {\n\n    {\n      String file_serialized = ListSequence.fromList(request.getParameterValue(\"file\")).getElement(0);\n      if (file_serialized == null) {\n        return false;\n      }\n      this.file = file_serialized;\n\n    }\n    {\n      String project_serialized = ListSequence.fromList(request.getParameterValue(\"project\")).getElement(0);\n      this.project = HttpSupportUtil.getProjectByName(project_serialized);\n\n    }\n    return true;\n  }","commit_id":"1a60d8000b4bcecb6d46ca4054f061bebcaae0c2","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode openNode(final Project project, final SNodeReference nodeReference) {\n    final SRepository repository = project.getRepository();\n\n    SNode node = nodeReference.resolve(repository);\n    if (node == null) {\n      Messages.showErrorDialog(\"Can't find node  \" + nodeReference + \"\\nMaybe it has been deleted?\", \"Error\");\n    } else {\n      NavigationSupport.getInstance().openNode(project, node, true, true);\n    }\n    return node;\n  }","id":56294,"modified_method":"public static void openNode(HttpRequest request, final Project project, final SNodeReference nodeReference) {\n    final SRepository repository = project.getRepository();\n\n    SNode node = nodeReference.resolve(repository);\n    if (node == null) {\n      Messages.showErrorDialog(\"Can't find node  \" + nodeReference + \"\\nMaybe it has been deleted?\", \"Error\");\n      request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(FAILURE_STREAM));\n    } else {\n      NavigationSupport.getInstance().openNode(project, node, true, true);\n      request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(SUCCESS_STREAM));\n      requestFocus(project);\n    }\n  }","commit_id":"1a60d8000b4bcecb6d46ca4054f061bebcaae0c2","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void handle(@NotNull HttpRequest request) throws Exception {\n    if (this.project != null) {\n      this.project.getModelAccess().runWriteInEDT(new Runnable() {\n        public void run() {\n          SNode node = HandlerUtil.openNode(NodeOpener_RequestHandler.this.project, NodeOpener_RequestHandler.this.ref);\n          if (node == null) {\n            NodeOpener_RequestHandler.this.request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(HandlerUtil.FAILURE_STREAM));\n            return;\n          }\n          NodeOpener_RequestHandler.this.request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(HandlerUtil.SUCCESS_STREAM));\n          HandlerUtil.requestFocus(NodeOpener_RequestHandler.this.project);\n        }\n      });\n    } else {\n      if (LOG.isEnabledFor(Level.ERROR)) {\n        LOG.error(\"No project is available.\");\n      }\n      this.request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(HandlerUtil.FAILURE_STREAM));\n    }\n  }","id":56295,"modified_method":"@Override\n  public void handle(@NotNull HttpRequest request) throws Exception {\n    if (this.project != null) {\n      this.project.getModelAccess().runWriteInEDT(new Runnable() {\n        public void run() {\n          HandlerUtil.openNode(NodeOpener_RequestHandler.this.request, NodeOpener_RequestHandler.this.project, NodeOpener_RequestHandler.this.ref);\n        }\n      });\n    } else {\n      if (LOG.isEnabledFor(Level.ERROR)) {\n        LOG.error(\"No project is available.\");\n      }\n      this.request.sendResponse(HttpResponseStatus.OK, \"image/gif\", Unpooled.copiedBuffer(HandlerUtil.FAILURE_STREAM));\n    }\n  }","commit_id":"1a60d8000b4bcecb6d46ca4054f061bebcaae0c2","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      Project p = event.getData(CommonDataKeys.PROJECT);\n      if (p == null) {\n        return false;\n      }\n    }\n    {\n      SNode node = event.getData(MPSCommonDataKeys.NODE);\n      if (node == null) {\n        return false;\n      }\n    }\n    return true;\n  }","id":56296,"modified_method":"@Override\n  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      SNode node = event.getData(MPSCommonDataKeys.NODE);\n      if (node == null) {\n        return false;\n      }\n    }\n    {\n      MPSProject p = event.getData(MPSCommonDataKeys.MPS_PROJECT);\n    }\n    return true;\n  }","commit_id":"1a60d8000b4bcecb6d46ca4054f061bebcaae0c2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static String buildRequest_ftht21_a0a0a5(AnActionEvent event) {\n    QueryStringEncoder encoder = new QueryStringEncoder(\"http://127.0.0.1:\" + MPSRequestPortManager.getCurrentPort() + \"/node_ref\");\n\n    encoder.addParam(\"ref\", PersistenceFacade.getInstance().asString(event.getData(MPSCommonDataKeys.NODE).getReference()));\n    encoder.addParam(\"project\", event.getData(CommonDataKeys.PROJECT).getName());\n    encoder.addParam(\"project\", event.getData(CommonDataKeys.PROJECT).getName());\n\n    return encoder.toString();\n  }","id":56297,"modified_method":"private static String buildRequest_ftht21_a0a0a5(AnActionEvent event) {\n    QueryStringEncoder encoder = new QueryStringEncoder(\"http://127.0.0.1:\" + MPSRequestPortManager.getCurrentPort() + \"/node_ref\");\n\n    encoder.addParam(\"ref\", PersistenceFacade.getInstance().asString(event.getData(MPSCommonDataKeys.NODE).getReference()));\n    encoder.addParam(\"project\", event.getData(MPSCommonDataKeys.MPS_PROJECT).getName());\n\n    return encoder.toString();\n  }","commit_id":"1a60d8000b4bcecb6d46ca4054f061bebcaae0c2","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      SNode node = event.getData(MPSCommonDataKeys.NODE);\n      if (node == null) {\n        return false;\n      }\n    }\n    return true;\n  }","id":56298,"modified_method":"@Override\n  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {\n    if (!(super.collectActionData(event, _params))) {\n      return false;\n    }\n    {\n      SNode node = event.getData(MPSCommonDataKeys.NODE);\n      if (node == null) {\n        return false;\n      }\n    }\n    {\n      MPSProject p = event.getData(MPSCommonDataKeys.MPS_PROJECT);\n    }\n    return true;\n  }","commit_id":"1a60d8000b4bcecb6d46ca4054f061bebcaae0c2","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static String buildRequest_aha6g5_a0a0a5(AnActionEvent event) {\n    QueryStringEncoder encoder = new QueryStringEncoder(\"http://127.0.0.1:\" + MPSRequestPortManager.getCurrentPort() + \"/node\");\n\n    encoder.addParam(\"node\", new nodeByModelPersistence_Converter().toString(event.getData(MPSCommonDataKeys.NODE)));\n\n    return encoder.toString();\n  }","id":56299,"modified_method":"private static String buildRequest_aha6g5_a0a0a5(AnActionEvent event) {\n    QueryStringEncoder encoder = new QueryStringEncoder(\"http://127.0.0.1:\" + MPSRequestPortManager.getCurrentPort() + \"/node\");\n\n    encoder.addParam(\"node\", new nodeByModelPersistence_Converter().toString(event.getData(MPSCommonDataKeys.NODE)));\n    encoder.addParam(\"project\", event.getData(MPSCommonDataKeys.MPS_PROJECT).getName());\n\n    return encoder.toString();\n  }","commit_id":"1a60d8000b4bcecb6d46ca4054f061bebcaae0c2","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected void doubleClick(@NotNull MPSTreeNode node) {\n    final TracerNode tracerNode = ((GenerationTracerTreeNode) node).getTracerNode();\n    ModelAccess.instance().runWriteInEDT(new Runnable() {\n      @Override\n      public void run() {\n        SNodeReference nodePointer = tracerNode.getNodePointer();\n        if (nodePointer == null) return;\n        SNode node = nodePointer.resolve(MPSModuleRepository.getInstance());\n        if (node == null) {\n          return;\n        }\n        IOperationContext context = new ProjectOperationContext(ProjectHelper.toMPSProject(myProject));\n        NavigationSupport.getInstance().openNode(context, node, true, !(node.getModel() != null && node.getParent() == null));\n      }\n    });\n\n  }","id":56300,"modified_method":"@Override\n  protected void doubleClick(@NotNull MPSTreeNode node) {\n    TraceNodeUI traceNode = (TraceNodeUI) node.getUserObject();\n    ModelAccess.instance().runWriteInEDT(new Navigate(ProjectHelper.toMPSProject(myProject), traceNode.getNavigateTarget()));\n  }","commit_id":"300b1719aaf078fc67ebec107c231b53722d5581","url":"https://github.com/JetBrains/MPS"},{"original_method":"ActionGroup getTracerActionGroup(GenerationTracerTreeNode selected) {\n    final TracerNode tracerNode = selected.getTracerNode();\n    if (tracerNode.getNodePointer() == null) {\n      return null;\n    }\n    final boolean isInput = tracerNode.getKind() == Kind.INPUT || tracerNode.getKind() == Kind.APPROXIMATE_INPUT;\n    final boolean isOutput = tracerNode.getKind() == Kind.OUTPUT || tracerNode.getKind() == Kind.APPROXIMATE_OUTPUT;\n    if (isInput) {\n      return ModelAccess.instance().runReadAction(new InputNodeActionGroup(tracerNode));\n    }\n    if (isOutput) {\n      return ModelAccess.instance().runReadAction(new OutputNodeActionGroup(tracerNode));\n    }\n    return null;\n  }","id":56301,"modified_method":"ActionGroup getTracerActionGroup(TraceNodeUI selected) {\n    if (selected.getNavigateTarget() == null) {\n      return null;\n    }\n    if (selected.hasPrevStep() || selected.hasNextStep()) {\n      return ModelAccess.instance().runReadAction(new NodeActionGroup(selected));\n    }\n    return null;\n  }","commit_id":"300b1719aaf078fc67ebec107c231b53722d5581","url":"https://github.com/JetBrains/MPS"},{"original_method":"public GenerationTracerTree(TracerNode root, Project project) {\n    myRootTracerNode = root;\n    myProject = project;\n  }","id":56302,"modified_method":"public GenerationTracerTree(@NotNull GenerationTracerView view, @NotNull TraceNodeUI root, @NotNull Project project) {\n    myView = view;\n    myRootTracerNode = root;\n    myProject = project;\n  }","commit_id":"300b1719aaf078fc67ebec107c231b53722d5581","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected ActionGroup createPopupActionGroup(final MPSTreeNode node) {\n    if (!(node instanceof GenerationTracerTreeNode)) return null;\n    return getTracerActionGroup((GenerationTracerTreeNode) node);\n  }","id":56303,"modified_method":"@Override\n  protected ActionGroup createPopupActionGroup(final MPSTreeNode node) {\n    final Object userObject = node.getUserObject();\n    if (false == userObject instanceof TraceNodeUI) {\n      return null;\n    }\n    return getTracerActionGroup((TraceNodeUI) userObject);\n  }","commit_id":"300b1719aaf078fc67ebec107c231b53722d5581","url":"https://github.com/JetBrains/MPS"},{"original_method":"GenerationTracerViewTool getViewTool() {\n    return myProject.getComponent(GenerationTracerViewTool.class);\n  }","id":56304,"modified_method":"GenerationTracerViewTool getViewTool() {\n    return myView.getTool();\n  }","commit_id":"300b1719aaf078fc67ebec107c231b53722d5581","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected void autoscroll(@NotNull MPSTreeNode node) {\n    final TracerNode tracerNode = ((GenerationTracerTreeNode) node).getTracerNode();\n    ModelAccess.instance().runWriteInEDT(new Runnable() {\n      @Override\n      public void run() {\n        SNode nodeToOpen = tracerNode.getNodePointer().resolve(MPSModuleRepository.getInstance());\n        if (nodeToOpen == null) return;\n\n        IOperationContext context = new ProjectOperationContext(ProjectHelper.toMPSProject(myProject));\n        NavigationSupport.getInstance().openNode(context, nodeToOpen, true, true);\n      }\n    });\n  }","id":56305,"modified_method":"@Override\n  protected void autoscroll(@NotNull MPSTreeNode node) {\n    TraceNodeUI traceNode = (TraceNodeUI) node.getUserObject();\n    ModelAccess.instance().runWriteInEDT(new Navigate(ProjectHelper.toMPSProject(myProject), traceNode.getNavigateTarget()));\n  }","commit_id":"300b1719aaf078fc67ebec107c231b53722d5581","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected GenerationTracerTreeNode rebuild() {\n    return new GenerationTracerTreeNode(myRootTracerNode);\n  }","id":56306,"modified_method":"protected MPSTreeNode rebuild() {\n    return create(myRootTracerNode);\n  }","commit_id":"300b1719aaf078fc67ebec107c231b53722d5581","url":"https://github.com/JetBrains/MPS"},{"original_method":"public GenerationTracerView(GenerationTracerViewTool tool, TracerNode tracerNode, Project project) {\n    myTool = tool;\n    myRootTracerNode = tracerNode;\n    myPanel = new JPanel(new BorderLayout());\n    myTree = new GenerationTracerTree(tracerNode, project);\n    myPanel.add(ScrollPaneFactory.createScrollPane(myTree), BorderLayout.CENTER);\n    myPanel.add(createActionsToolbar(), BorderLayout.WEST);\n\n    myTree.rebuildLater();\n  }","id":56307,"modified_method":"public GenerationTracerView(GenerationTracerViewTool tool, Kind viewToken, TraceNodeUI tracerNode, Project project) {\n    myTool = tool;\n    myViewToken = viewToken;\n    myRootTracerNode = tracerNode;\n    myPanel = new JPanel(new BorderLayout());\n    myTree = new GenerationTracerTree(this, tracerNode, project);\n    myPanel.add(ScrollPaneFactory.createScrollPane(myTree), BorderLayout.CENTER);\n    myPanel.add(createActionsToolbar(), BorderLayout.WEST);\n\n    myTree.rebuildLater();\n  }","commit_id":"300b1719aaf078fc67ebec107c231b53722d5581","url":"https://github.com/JetBrains/MPS"},{"original_method":"boolean isViewFor(Kind kind, SNodeReference node) {\n    return myRootTracerNode.getKind() == kind && myRootTracerNode.getNodePointer().equals(node);\n  }","id":56308,"modified_method":"boolean isViewFor(Kind kind, SNodeReference node) {\n    return myViewToken == kind && myRootTracerNode.matches(node);\n  }","commit_id":"300b1719aaf078fc67ebec107c231b53722d5581","url":"https://github.com/JetBrains/MPS"},{"original_method":"int getTabIndex(Kind kind, SNodeReference node) {\n    int index = 0;\n    for (GenerationTracerView tracerView : myTracerViews) {\n      if (tracerView.isViewFor(kind, node)) {\n        return index;\n      }\n      index++;\n    }\n    return -1;\n  }","id":56309,"modified_method":"int getTabIndex(GenerationTracerView.Kind kind, SNodeReference node) {\n    int index = 0;\n    for (GenerationTracerView tracerView : myTracerViews) {\n      if (tracerView.isViewFor(kind, node)) {\n        return index;\n      }\n      index++;\n    }\n    return -1;\n  }","commit_id":"300b1719aaf078fc67ebec107c231b53722d5581","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean showTracebackData(SNode node) {\n    int index = getTabIndex(Kind.OUTPUT, node.getReference());\n    if (index > -1) {\n      selectIndex(index);\n      openToolLater(true);\n      return true;\n    }\n    TracerNode tracerNode = myTracer.buildTracebackTree(node);\n    if (tracerNode == null) {\n      return false;\n    }\n    showTraceView(tracerNode);\n    return true;\n  }","id":56310,"modified_method":"public boolean showTracebackData(SNode node) {\n    int index = getTabIndex(GenerationTracerView.Kind.TraceBackward, node.getReference());\n    if (index > -1) {\n      selectIndex(index);\n      openToolLater(true);\n      return true;\n    }\n    TracerNode tracerNode = myTracer.buildTracebackTree(node);\n    if (tracerNode == null) {\n      return false;\n    }\n    showTraceView(GenerationTracerView.Kind.TraceBackward, new TraceNodeUI(tracerNode));\n    return true;\n  }","commit_id":"300b1719aaf078fc67ebec107c231b53722d5581","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean showTraceInputData(@NotNull SNode node) {\n    int index = getTabIndex(Kind.INPUT, node.getReference());\n    if (index > -1) {\n      selectIndex(index);\n      openToolLater(true);\n      return true;\n    }\n\n    TracerNode tracerNode = myTracer.buildTraceInputTree(node);\n    if (tracerNode == null) {\n      return false;\n    }\n    showTraceView(tracerNode);\n    return true;\n  }","id":56311,"modified_method":"public boolean showTraceInputData(@NotNull SNode node) {\n    int index = getTabIndex(GenerationTracerView.Kind.TraceForward, node.getReference());\n    if (index > -1) {\n      selectIndex(index);\n      openToolLater(true);\n      return true;\n    }\n\n    TracerNode tracerNode = myTracer.buildTraceInputTree(node);\n    if (tracerNode == null) {\n      return false;\n    }\n    showTraceView(GenerationTracerView.Kind.TraceForward, new TraceNodeUI(tracerNode));\n    return true;\n  }","commit_id":"300b1719aaf078fc67ebec107c231b53722d5581","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Test\n    /**\n     * Test setup: 3 hosts which each having exactly one server defined - failover1, failover2, failover3\n     * Test scenario:\n     * 1) kill failover1 host controller\n     * 2) update failover2 configuration to act as the domain controller\n     * 3) reload failover2 without restarting server\n     * 4) update failover3 config to point to failover2 as a new domain controller\n     * 5) reload failover3\n     * 6) verify that failover2 is the new domain controller managing both failover2 and failover3 hosts\n     */\n    public void testDCFailover() throws Exception {\n        \n        // check that the failover1 is acting as domain controller and all three servers are registered\n        Set<String> hosts = getHosts(hostUtils[0]);\n        Assert.assertTrue(hosts.contains(HOSTS[0]));\n        Assert.assertTrue(hosts.contains(HOSTS[1]));\n        Assert.assertTrue(hosts.contains(HOSTS[2]));\n        \n        // kill the domain process controller on failover1\n        log.info(\"Stopping the domain controller on failover1.\");\n        hostUtils[0].stop();        \n        log.info(\"Domain controller on failover1 stopped.\");\n        \n        // check that the failover2 hc sees only its own server\n        hosts = getHosts(hostUtils[1]);\n        Assert.assertTrue(hosts.contains(HOSTS[1]));\n        Assert.assertEquals(hosts.size(), 1);\n        \n        // reload failover2 host so it acts as domain controller\n        ClassLoader tccl = Thread.currentThread().getContextClassLoader();        \n        URL url = tccl.getResource(\"host-configs/host-failover2-v2.xml\");\n        File cfgFile = new File(url.toURI());\n        FileUtils.copyFile(cfgFile, new File(getHostConfigDir(2), \"testing-host-failover2.xml\"));\n        \n        ModelNode restartOp = new ModelNode();\n        restartOp.get(ModelDescriptionConstants.ADDRESS).add(ModelDescriptionConstants.HOST, \"failover2\");\n        restartOp.get(ModelDescriptionConstants.OP).set(\"reload\");\n        restartOp.get(ModelDescriptionConstants.RESTART_SERVERS).set(false);\n        \n        log.info(\"Reloading failover2 to act as the domain controller.\");\n        hostUtils[1].executeAwaitConnectionClosed(restartOp);\n        \n        waitUntilHostControllerReady(hostUtils[1]);\n        \n        // reload failover3 to point to the new domain controller\n        url = tccl.getResource(\"host-configs/host-failover3-v2.xml\");\n        cfgFile = new File(url.toURI());\n        FileUtils.copyFile(cfgFile, new File(getHostConfigDir(3), \"testing-host-failover3.xml\"));\n        \n        restartOp = new ModelNode();\n        restartOp.get(ModelDescriptionConstants.ADDRESS).add(ModelDescriptionConstants.HOST, HOSTS[2]);\n        restartOp.get(ModelDescriptionConstants.OP).set(\"reload\");\n        restartOp.get(ModelDescriptionConstants.RESTART_SERVERS).set(false);\n\n        log.info(\"Reloading failover3 to register to new domain controller.\");\n        hostUtils[2].executeAwaitConnectionClosed(restartOp);\n\n        waitUntilHostControllerReady(hostUtils[2]);\n        \n        // test some management ops on failover3 using new domain controller on failover2\n        \n        Operation deployOp = buildDeployOperation();\n        hostUtils[1].executeForResult(deployOp);        \n        \n        hosts = getHosts(hostUtils[1]);\n        Assert.assertTrue(hosts.contains(HOSTS[1]));\n        Assert.assertTrue(hosts.contains(HOSTS[2]));\n        Assert.assertEquals(hosts.size(), 2);\n        \n        // stop failover3 server using new dc\n        String testUrl = new URL(\"http\", slaveAddress, 8080 + SERVER_PORT_OFFSETS[2], \"/SimpleServlet/SimpleServlet\").toString();\n        Assert.assertTrue(WebUtil.testHttpURL(testUrl));\n        ModelNode stopOp = new ModelNode();\n        stopOp.get(ModelDescriptionConstants.ADDRESS).add(ModelDescriptionConstants.HOST, HOSTS[2]);\n        stopOp.get(ModelDescriptionConstants.ADDRESS).add(ModelDescriptionConstants.SERVER_CONFIG, SERVERS[2]);\n        stopOp.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.STOP);\n        hostUtils[1].executeForResult(stopOp);\n        DomainTestUtils.waitUntilState(hostUtils[1].getDomainClient(), HOSTS[2], SERVERS[2], \"STOPPED\");\n        Assert.assertFalse(WebUtil.testHttpURL(testUrl));        \n    }","id":56312,"modified_method":"@Test\n    /**\n     * Test setup: 3 hosts which each having exactly one server defined - failover1, failover2, failover3\n     * Test scenario:\n     * 1) kill failover1 host controller\n     * 2) update failover2 configuration to act as the domain controller\n     * 3) reload failover2 without restarting server\n     * 4) update failover3 config to point to failover2 as a new domain controller\n     * 5) reload failover3\n     * 6) verify that failover2 is the new domain controller managing both failover2 and failover3 hosts\n     */\n    public void testDCFailover() throws Exception {\n\n        // check that the failover1 is acting as domain controller and all three servers are registered\n        Set<String> hosts = getHosts(hostUtils[0]);\n        Assert.assertTrue(hosts.contains(HOSTS[0]));\n        Assert.assertTrue(hosts.contains(HOSTS[1]));\n        Assert.assertTrue(hosts.contains(HOSTS[2]));\n\n        // kill the domain process controller on failover1\n        log.info(\"Stopping the domain controller on failover1.\");\n        hostUtils[0].stop();\n        log.info(\"Domain controller on failover1 stopped.\");\n\n        // check that the failover2 hc sees only itself\n        hosts = getHosts(hostUtils[1]);\n        Assert.assertTrue(hosts.contains(HOSTS[1]));\n        Assert.assertEquals(hosts.size(), 1);\n\n        // Reconfigure failover2 host so it acts as domain controller\n        ModelNode becomeMasterOp = new ModelNode();\n        becomeMasterOp.get(ModelDescriptionConstants.ADDRESS).add(ModelDescriptionConstants.HOST, \"failover2\");\n        becomeMasterOp.get(ModelDescriptionConstants.OP).set(\"write-local-domain-controller\");\n\n        hostUtils[1].executeForResult(becomeMasterOp);\n\n        ModelNode restartOp = new ModelNode();\n        restartOp.get(ModelDescriptionConstants.ADDRESS).add(ModelDescriptionConstants.HOST, \"failover2\");\n        restartOp.get(ModelDescriptionConstants.OP).set(\"reload\");\n        restartOp.get(ModelDescriptionConstants.RESTART_SERVERS).set(false);\n\n        log.info(\"Reloading failover2 to act as the domain controller.\");\n        hostUtils[1].executeAwaitConnectionClosed(restartOp);\n\n        waitUntilHostControllerReady(hostUtils[1]);\n\n        // Reconfigure failover3 to point to the new domain controller\n        ModelNode changeMasterOp = new ModelNode();\n        changeMasterOp.get(ModelDescriptionConstants.ADDRESS).add(ModelDescriptionConstants.HOST, HOSTS[2]);\n        changeMasterOp.get(ModelDescriptionConstants.OP).set(\"write-remote-domain-controller\");\n        changeMasterOp.get(ModelDescriptionConstants.HOST).set(\"${jboss.test.host.slave.address}\");\n        changeMasterOp.get(ModelDescriptionConstants.PORT).set(MGMT_PORTS[1]);\n        changeMasterOp.get(ModelDescriptionConstants.SECURITY_REALM).set(\"ManagementRealm\");\n\n        hostUtils[2].executeForResult(changeMasterOp);\n\n        restartOp = new ModelNode();\n        restartOp.get(ModelDescriptionConstants.ADDRESS).add(ModelDescriptionConstants.HOST, HOSTS[2]);\n        restartOp.get(ModelDescriptionConstants.OP).set(\"reload\");\n        restartOp.get(ModelDescriptionConstants.RESTART_SERVERS).set(false);\n\n        log.info(\"Reloading failover3 to register to new domain controller.\");\n        hostUtils[2].executeAwaitConnectionClosed(restartOp);\n\n        waitUntilHostControllerReady(hostUtils[2]);\n\n        // test some management ops on failover3 using new domain controller on failover2\n\n        Operation deployOp = buildDeployOperation();\n        hostUtils[1].executeForResult(deployOp);\n\n        hosts = getHosts(hostUtils[1]);\n        Assert.assertTrue(hosts.contains(HOSTS[1]));\n        Assert.assertTrue(hosts.contains(HOSTS[2]));\n        Assert.assertEquals(hosts.size(), 2);\n\n        // stop failover3 server using new dc\n        String testUrl = new URL(\"http\", slaveAddress, 8080 + SERVER_PORT_OFFSETS[2], \"/SimpleServlet/SimpleServlet\").toString();\n        Assert.assertTrue(WebUtil.testHttpURL(testUrl));\n        ModelNode stopOp = new ModelNode();\n        stopOp.get(ModelDescriptionConstants.ADDRESS).add(ModelDescriptionConstants.HOST, HOSTS[2]);\n        stopOp.get(ModelDescriptionConstants.ADDRESS).add(ModelDescriptionConstants.SERVER_CONFIG, SERVERS[2]);\n        stopOp.get(ModelDescriptionConstants.OP).set(ModelDescriptionConstants.STOP);\n        hostUtils[1].executeForResult(stopOp);\n        DomainTestUtils.waitUntilState(hostUtils[1].getDomainClient(), HOSTS[2], SERVERS[2], \"STOPPED\");\n        Assert.assertFalse(WebUtil.testHttpURL(testUrl));\n    }","commit_id":"219137c27ae5b3ba50955ee75eb5c31685b6397d","url":"https://github.com/wildfly/wildfly"},{"original_method":"private static JBossAsManagedConfiguration getHostConfiguration(int host) throws Exception {\n\n        final String testName = DomainControllerMigrationTestCase.class.getSimpleName();        \n        File domains = new File(\"target\" + File.separator + \"domains\" + File.separator + testName);\n        final File hostDir = new File(domains, \"failover\" + String.valueOf(host));\n        final String hostDirPath = hostDir.getAbsolutePath();\n        final File hostConfigDir = new File(hostDir, \"configuration\");\n        hostConfigDir.mkdirs();        \n\n        ClassLoader tccl = Thread.currentThread().getContextClassLoader();\n        final JBossAsManagedConfiguration hostConfig = new JBossAsManagedConfiguration();\n        hostConfig.setHostControllerManagementAddress(masterAddress);\n        hostConfig.setHostCommandLineProperties(\"-Djboss.test.host.master.address=\" + masterAddress + \" -Djboss.test.host.slave.address=\" + slaveAddress);\n        URL url = tccl.getResource(\"domain-configs/domain-standard.xml\");\n        hostConfig.setDomainConfigFile(new File(url.toURI()).getAbsolutePath());\n        System.out.println(hostConfig.getDomainConfigFile());\n        url = tccl.getResource(\"host-configs/host-failover\" + String.valueOf(host) + \".xml\");\n        hostConfig.setHostConfigFile(new File(url.toURI()).getAbsolutePath());\n        System.out.println(hostConfig.getHostConfigFile());\n        hostConfig.setDomainDirectory(hostDir.getAbsolutePath());\n        hostConfig.setHostName(\"failover\" + String.valueOf(host));\n        hostConfig.setHostControllerManagementPort(MGMT_PORTS[host - 1]);\n        hostConfig.setStartupTimeoutInSeconds(120);\n        File usersFile = new File(hostConfigDir, \"mgmt-users.properties\");\n        FileOutputStream fos = new FileOutputStream(usersFile);\n        PrintWriter pw = new PrintWriter(fos);\n        pw.println(\"slave=\" + new UsernamePasswordHashUtil().generateHashedHexURP(\"slave\", \"ManagementRealm\", \"slave_user_password\".toCharArray()));\n        pw.close();\n        fos.close();        \n\n        \n        return hostConfig;\n    }","id":56313,"modified_method":"private static JBossAsManagedConfiguration getHostConfiguration(int host) throws Exception {\n\n        final String testName = DomainControllerMigrationTestCase.class.getSimpleName();\n        File domains = new File(\"target\" + File.separator + \"domains\" + File.separator + testName);\n        final File hostDir = new File(domains, \"failover\" + String.valueOf(host));\n        final File hostConfigDir = new File(hostDir, \"configuration\");\n        hostConfigDir.mkdirs();\n\n        ClassLoader tccl = Thread.currentThread().getContextClassLoader();\n        final JBossAsManagedConfiguration hostConfig = new JBossAsManagedConfiguration();\n        hostConfig.setHostControllerManagementAddress(host == 1 ? masterAddress : slaveAddress);\n        hostConfig.setHostCommandLineProperties(\"-Djboss.test.host.master.address=\" + masterAddress + \" -Djboss.test.host.slave.address=\" + slaveAddress);\n        URL url = tccl.getResource(\"domain-configs/domain-standard.xml\");\n        hostConfig.setDomainConfigFile(new File(url.toURI()).getAbsolutePath());\n        System.out.println(hostConfig.getDomainConfigFile());\n        url = tccl.getResource(\"host-configs/host-failover\" + String.valueOf(host) + \".xml\");\n        hostConfig.setHostConfigFile(new File(url.toURI()).getAbsolutePath());\n        System.out.println(hostConfig.getHostConfigFile());\n        hostConfig.setDomainDirectory(hostDir.getAbsolutePath());\n        hostConfig.setHostName(\"failover\" + String.valueOf(host));\n        hostConfig.setHostControllerManagementPort(MGMT_PORTS[host - 1]);\n        hostConfig.setStartupTimeoutInSeconds(120);\n        File usersFile = new File(hostConfigDir, \"mgmt-users.properties\");\n        FileOutputStream fos = new FileOutputStream(usersFile);\n        PrintWriter pw = new PrintWriter(fos);\n        pw.println(\"slave=\" + new UsernamePasswordHashUtil().generateHashedHexURP(\"slave\", \"ManagementRealm\", \"slave_user_password\".toCharArray()));\n        pw.close();\n        fos.close();\n\n\n        return hostConfig;\n    }","commit_id":"219137c27ae5b3ba50955ee75eb5c31685b6397d","url":"https://github.com/wildfly/wildfly"},{"original_method":"@BeforeClass\n    public static void setupDomain() throws Exception {                \n        for (int k = 0; k<3; k++) {\n            hostUtils[k] = new DomainLifecycleUtil(getHostConfiguration(k+1));\n            hostUtils[k].start();\n        }\n        \n        war = ShrinkWrap.create(WebArchive.class, DEPLOYMENT_NAME);\n        war.addClass(SimpleServlet.class);\n        war.addAsWebResource(new StringAsset(\"Version1\"), \"page.html\");\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        warFile = new File(tempDir + File.separator + DEPLOYMENT_NAME);\n        new ZipExporterImpl(war).exportTo(warFile, true);\n        \n    }","id":56314,"modified_method":"@BeforeClass\n    public static void setupDomain() throws Exception {\n        for (int k = 0; k<3; k++) {\n            hostUtils[k] = new DomainLifecycleUtil(getHostConfiguration(k+1));\n            hostUtils[k].start();\n        }\n\n        WebArchive war = ShrinkWrap.create(WebArchive.class, DEPLOYMENT_NAME);\n        war.addClass(SimpleServlet.class);\n        war.addAsWebResource(new StringAsset(\"Version1\"), \"page.html\");\n        String tempDir = System.getProperty(\"java.io.tmpdir\");\n        warFile = new File(tempDir + File.separator + DEPLOYMENT_NAME);\n        new ZipExporterImpl(war).exportTo(warFile, true);\n\n    }","commit_id":"219137c27ae5b3ba50955ee75eb5c31685b6397d","url":"https://github.com/wildfly/wildfly"},{"original_method":"private boolean areServersStarted() {\n        try {\n            Map<ServerIdentity, ControlledProcessState.State> statuses = getServerStatuses();\n            for (Map.Entry<ServerIdentity, ControlledProcessState.State> entry : statuses.entrySet()) {\n                switch (entry.getValue()) {\n                    case RUNNING:\n                        continue;\n                    default:\n                        return false;\n                }\n            }\n            serverStatuses.putAll(statuses);\n            return true;\n        } catch (Exception ignored) {\n            // ignore, as we will get exceptions until the management comm services start\n        }\n        return false;\n    }","id":56315,"modified_method":"private boolean areServersStarted() {\n        try {\n            Map<ServerIdentity, ControlledProcessState.State> statuses = getServerStatuses();\n            for (Map.Entry<ServerIdentity, ControlledProcessState.State> entry : statuses.entrySet()) {\n                switch (entry.getValue()) {\n                    case RUNNING:\n                        continue;\n                    default:\n                        log.log(Level.INFO, entry.getKey() + \" status is \" + entry.getValue());\n                        return false;\n                }\n            }\n            serverStatuses.putAll(statuses);\n            return true;\n        } catch (Exception ignored) {\n            // ignore, as we will get exceptions until the management comm services start\n        }\n        return false;\n    }","commit_id":"219137c27ae5b3ba50955ee75eb5c31685b6397d","url":"https://github.com/wildfly/wildfly"},{"original_method":"public static ModelNode getRemoteDomainControllerAdd(Locale locale) {\n        final ResourceBundle bundle = getResourceBundle(locale);\n\n        final ModelNode result = new ModelNode();\n\n        result.get(OPERATION_NAME).set(RemoteDomainControllerAddHandler.OPERATION_NAME);\n        result.get(DESCRIPTION).set(bundle.getString(\"host.domain-controller.remote.add\"));\n\n        result.get(REQUEST_PROPERTIES, HOST, TYPE).set(ModelType.STRING);\n        result.get(REQUEST_PROPERTIES, HOST, DESCRIPTION).set(bundle.getString(\"host.domain-controller.remote.host\"));\n        result.get(REQUEST_PROPERTIES, HOST, REQUIRED).set(true);\n        result.get(REQUEST_PROPERTIES, HOST, EXPRESSIONS_ALLOWED).set(true);\n        result.get(REQUEST_PROPERTIES, HOST, MIN_LENGTH).set(1);\n        result.get(REQUEST_PROPERTIES, PORT, TYPE).set(ModelType.STRING);\n        result.get(REQUEST_PROPERTIES, PORT, DESCRIPTION).set(bundle.getString(\"host.domain-controller.remote.port\"));\n        result.get(REQUEST_PROPERTIES, PORT, REQUIRED).set(true);\n        result.get(REQUEST_PROPERTIES, PORT, EXPRESSIONS_ALLOWED).set(true);\n        result.get(REQUEST_PROPERTIES, PORT, MIN).set(1);\n        result.get(REQUEST_PROPERTIES, PORT, MAX).set(65535);\n\n        result.get(REPLY_PROPERTIES).setEmptyObject();\n        return result;\n    }","id":56316,"modified_method":"public static ModelNode getRemoteDomainControllerAdd(Locale locale) {\n        final ResourceBundle bundle = getResourceBundle(locale);\n\n        final ModelNode result = new ModelNode();\n\n        result.get(OPERATION_NAME).set(RemoteDomainControllerAddHandler.OPERATION_NAME);\n        result.get(DESCRIPTION).set(bundle.getString(\"host.domain-controller.remote.add\"));\n\n        result.get(REQUEST_PROPERTIES, HOST, TYPE).set(ModelType.STRING);\n        result.get(REQUEST_PROPERTIES, HOST, DESCRIPTION).set(bundle.getString(\"host.domain-controller.remote.host\"));\n        result.get(REQUEST_PROPERTIES, HOST, REQUIRED).set(true);\n        result.get(REQUEST_PROPERTIES, HOST, EXPRESSIONS_ALLOWED).set(true);\n        result.get(REQUEST_PROPERTIES, HOST, MIN_LENGTH).set(1);\n        result.get(REQUEST_PROPERTIES, PORT, TYPE).set(ModelType.STRING);\n        result.get(REQUEST_PROPERTIES, PORT, DESCRIPTION).set(bundle.getString(\"host.domain-controller.remote.port\"));\n        result.get(REQUEST_PROPERTIES, PORT, REQUIRED).set(true);\n        result.get(REQUEST_PROPERTIES, PORT, EXPRESSIONS_ALLOWED).set(true);\n        result.get(REQUEST_PROPERTIES, PORT, MIN).set(1);\n        result.get(REQUEST_PROPERTIES, PORT, MAX).set(65535);\n\n        result.get(REQUEST_PROPERTIES, USERNAME, TYPE).set(ModelType.STRING);\n        result.get(REQUEST_PROPERTIES, USERNAME, DESCRIPTION).set(bundle.getString(\"host.domain-controller.remote.username\"));\n        result.get(REQUEST_PROPERTIES, USERNAME, REQUIRED).set(false);\n        result.get(REQUEST_PROPERTIES, USERNAME, EXPRESSIONS_ALLOWED).set(true);\n        result.get(REQUEST_PROPERTIES, USERNAME, MIN_LENGTH).set(1);\n\n        result.get(REQUEST_PROPERTIES, SECURITY_REALM, TYPE).set(ModelType.STRING);\n        result.get(REQUEST_PROPERTIES, SECURITY_REALM, DESCRIPTION).set(bundle.getString(\"host.domain-controller.remote.security-realm\"));\n        result.get(REQUEST_PROPERTIES, SECURITY_REALM, REQUIRED).set(false);\n        result.get(REQUEST_PROPERTIES, SECURITY_REALM, EXPRESSIONS_ALLOWED).set(false);\n        result.get(REQUEST_PROPERTIES, SECURITY_REALM, MIN_LENGTH).set(1);\n\n        result.get(REPLY_PROPERTIES).setEmptyObject();\n        return result;\n    }","commit_id":"219137c27ae5b3ba50955ee75eb5c31685b6397d","url":"https://github.com/wildfly/wildfly"},{"original_method":"public static ModelNode getLocalDomainControllerAdd(Locale locale) {\n        final ResourceBundle bundle = getResourceBundle(locale);\n\n        final ModelNode result = new ModelNode();\n\n        result.get(OPERATION_NAME).set(RemoteDomainControllerAddHandler.OPERATION_NAME);\n        result.get(DESCRIPTION).set(bundle.getString(\"host.domain-controller.local.add\"));\n\n        result.get(REQUEST_PROPERTIES).setEmptyObject();\n        result.get(REPLY_PROPERTIES).setEmptyObject();\n        return result;\n    }","id":56317,"modified_method":"public static ModelNode getLocalDomainControllerAdd(Locale locale) {\n        final ResourceBundle bundle = getResourceBundle(locale);\n\n        final ModelNode result = new ModelNode();\n\n        result.get(OPERATION_NAME).set(LocalDomainControllerAddHandler.OPERATION_NAME);\n        result.get(DESCRIPTION).set(bundle.getString(\"host.domain-controller.local.add\"));\n\n        result.get(REQUEST_PROPERTIES).setEmptyObject();\n        result.get(REPLY_PROPERTIES).setEmptyObject();\n        return result;\n    }","commit_id":"219137c27ae5b3ba50955ee75eb5c31685b6397d","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void execute(OperationContext context, ModelNode operation) throws OperationFailedException {\n        final Resource resource = context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);\n        final ModelNode model = resource.getModel();\n\n        ModelNode dc = model.get(DOMAIN_CONTROLLER);\n        dc.get(LOCAL).setEmptyObject();\n\n        if (dc.has(REMOTE)) {\n            dc.remove(REMOTE);\n        }\n\n        initializeDomain();\n\n        context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);\n    }","id":56318,"modified_method":"@Override\n    public void execute(OperationContext context, ModelNode operation) throws OperationFailedException {\n        final Resource resource = context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);\n        final ModelNode model = resource.getModel();\n\n        ModelNode dc = model.get(DOMAIN_CONTROLLER);\n        dc.get(LOCAL).setEmptyObject();\n\n        if (dc.has(REMOTE)) {\n            dc.remove(REMOTE);\n        }\n\n        if (context.isBooting()) {\n            initializeDomain();\n        } else {\n            context.reloadRequired();\n        }\n\n        context.completeStep(new OperationContext.RollbackHandler() {\n            @Override\n            public void handleRollback(OperationContext context, ModelNode operation) {\n                if (!context.isBooting()) {\n                    context.revertReloadRequired();\n                }\n            }\n        });\n    }","commit_id":"219137c27ae5b3ba50955ee75eb5c31685b6397d","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void execute(OperationContext context, ModelNode operation) throws OperationFailedException {\n        final Resource resource = context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);\n        final ModelNode model = resource.getModel();\n        ModelNode dc = model.get(DOMAIN_CONTROLLER);\n        ModelNode remoteDC = dc.get(REMOTE);\n\n        PORT.validateAndSet(operation, remoteDC);\n        HOST.validateAndSet(operation, remoteDC);\n        USERNAME.validateAndSet(operation, remoteDC);\n        if (operation.has(SECURITY_REALM)) {\n            ModelNode securityRealm = operation.require(SECURITY_REALM);\n            dc.get(REMOTE, SECURITY_REALM).set(securityRealm);\n            hostControllerInfo.setRemoteDomainControllerSecurityRealm(securityRealm.resolve().asString());\n        }\n\n        if (dc.has(LOCAL)) {\n            dc.remove(LOCAL);\n        }\n\n        initializeDomain(context, remoteDC);\n\n        context.completeStep(OperationContext.RollbackHandler.NOOP_ROLLBACK_HANDLER);\n    }","id":56319,"modified_method":"@Override\n    public void execute(OperationContext context, ModelNode operation) throws OperationFailedException {\n        final Resource resource = context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);\n        final ModelNode model = resource.getModel();\n        ModelNode dc = model.get(DOMAIN_CONTROLLER);\n        ModelNode remoteDC = dc.get(REMOTE);\n\n        PORT.validateAndSet(operation, remoteDC);\n        HOST.validateAndSet(operation, remoteDC);\n        USERNAME.validateAndSet(operation, remoteDC);\n        if (operation.has(SECURITY_REALM)) {\n            ModelNode securityRealm = operation.require(SECURITY_REALM);\n            dc.get(REMOTE, SECURITY_REALM).set(securityRealm);\n            hostControllerInfo.setRemoteDomainControllerSecurityRealm(securityRealm.resolve().asString());\n        } else {\n            remoteDC.get(SECURITY_REALM).clear();\n        }\n\n        if (dc.has(LOCAL)) {\n            dc.remove(LOCAL);\n        }\n\n        if (context.isBooting()) {\n            initializeDomain(context, remoteDC);\n        } else {\n            context.reloadRequired();\n        }\n\n        context.completeStep(new OperationContext.RollbackHandler() {\n            @Override\n            public void handleRollback(OperationContext context, ModelNode operation) {\n                if (!context.isBooting()) {\n                    context.revertReloadRequired();\n                }\n            }\n        });\n    }","commit_id":"219137c27ae5b3ba50955ee75eb5c31685b6397d","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void execute(OperationContext context, ModelNode operation) throws OperationFailedException {\n        final Resource resource = context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);\n        final ModelNode model = resource.getModel();\n        model.get(DOMAIN_CONTROLLER).setEmptyObject();\n        context.completeStep();\n    }","id":56320,"modified_method":"@Override\n    public void execute(OperationContext context, ModelNode operation) throws OperationFailedException {\n        final Resource resource = context.readResourceForUpdate(PathAddress.EMPTY_ADDRESS);\n        final ModelNode model = resource.getModel();\n        model.get(DOMAIN_CONTROLLER).setEmptyObject();\n        context.reloadRequired();\n        context.completeStep(new OperationContext.RollbackHandler() {\n            @Override\n            public void handleRollback(OperationContext context, ModelNode operation) {\n                context.revertReloadRequired();\n            }\n        });\n    }","commit_id":"219137c27ae5b3ba50955ee75eb5c31685b6397d","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Create the InterfaceRemoveHandler\n     */\n    protected RemoteDomainControllerRemoveHandler() {\n    }","id":56321,"modified_method":"/**\n     * Create the RemoteDomainControllerRemoveHandler\n     */\n    private RemoteDomainControllerRemoveHandler() {\n    }","commit_id":"219137c27ae5b3ba50955ee75eb5c31685b6397d","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ModelNode getModelDescription(final Locale locale) {\n        // TODO - Add the ModelDescription\n        return new ModelNode();\n    }","id":56322,"modified_method":"@Override\n    public ModelNode getModelDescription(final Locale locale) {\n        return HostRootDescription.getRemoteDomainControllerRemove(locale);\n    }","commit_id":"219137c27ae5b3ba50955ee75eb5c31685b6397d","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * {@inheritDoc}\n     */\n    public void execute(NewOperationContext context, ModelNode operation) {\n        final ModelNode opAddr = operation.get(OP_ADDR);\n\n        final String nodeIdentifier = operation.get(CORE_ENVIRONMENT).hasDefined(NODE_IDENTIFIER) ? operation.get(CORE_ENVIRONMENT, NODE_IDENTIFIER).asString() : \"1\";\n        final ModelNode processId = operation.get(CORE_ENVIRONMENT).require(PROCESS_ID);\n        final String varDirPathRef = operation.get(CORE_ENVIRONMENT).hasDefined(RELATIVE_TO) ? operation.get(CORE_ENVIRONMENT).get(RELATIVE_TO).asString() : \"jboss.server.data.dir\";\n        final String varDirPath = operation.get(CORE_ENVIRONMENT).hasDefined(PATH) ? operation.get(CORE_ENVIRONMENT).get(PATH).asString() : \"var\";\n        final String recoveryBindingName = operation.get(RECOVERY_ENVIRONMENT).require(BINDING).asString();\n        final String recoveryStatusBindingName = operation.get(RECOVERY_ENVIRONMENT).require(STATUS_BINDING).asString();\n        final boolean recoveryListener = operation.get(RECOVERY_ENVIRONMENT, RECOVERY_LISTENER).asBoolean(false);\n        final boolean coordinatorEnableStatistics = operation.get(COORDINATOR_ENVIRONMENT, ENABLE_STATISTICS).asBoolean(false);\n        final boolean transactionStatusManagerEnable = operation.get(COORDINATOR_ENVIRONMENT, ENABLE_TSM_STATUS).asBoolean(false);\n        final ModelNode objectStore = operation.get(OBJECT_STORE);\n        final String objectStorePathRef = objectStore.hasDefined(RELATIVE_TO) ? objectStore.get(RELATIVE_TO).asString() : \"jboss.server.data.dir\";\n        final String objectStorePath = objectStore.hasDefined(PATH) ? objectStore.get(PATH).asString() : \"tx-object-store\";\n        final int maxPorts = 10;\n        final int coordinatorDefaultTimeout = operation.get(COORDINATOR_ENVIRONMENT, DEFAULT_TIMEOUT).asInt(300);\n        if(log.isDebugEnabled()) {\n            log.debugf(\"nodeIdentifier=%s\\n\", nodeIdentifier);\n            log.debugf(\"varDirPathRef=%s, varDirPath=%s\\n\", varDirPathRef, varDirPath);\n            log.debugf(\"objectStorePathRef=%s, objectStorePathRef=%s\\n\", objectStorePathRef, objectStorePath);\n            log.debugf(\"recoveryBindingName=%s, recoveryStatusBindingName=%s\\n\", recoveryBindingName, recoveryStatusBindingName);\n        }\n\n\n        final ModelNode subModel = context.readModelForUpdate(PathAddress.EMPTY_ADDRESS);\n        subModel.get(CORE_ENVIRONMENT, PROCESS_ID).set(operation.get(CORE_ENVIRONMENT).require(PROCESS_ID));\n        subModel.get(CORE_ENVIRONMENT, NODE_IDENTIFIER).set(operation.get(CORE_ENVIRONMENT, NODE_IDENTIFIER));\n        subModel.get(CORE_ENVIRONMENT, RELATIVE_TO).set(operation.get(CORE_ENVIRONMENT, RELATIVE_TO));\n        subModel.get(CORE_ENVIRONMENT, PATH).set(operation.get(CORE_ENVIRONMENT, PATH));\n        subModel.get(RECOVERY_ENVIRONMENT, BINDING).set(operation.get(RECOVERY_ENVIRONMENT).require(BINDING));\n        subModel.get(RECOVERY_ENVIRONMENT, STATUS_BINDING).set(operation.get(RECOVERY_ENVIRONMENT, STATUS_BINDING));\n        subModel.get(RECOVERY_ENVIRONMENT, RECOVERY_LISTENER).set(operation.get(RECOVERY_ENVIRONMENT, RECOVERY_LISTENER));\n        subModel.get(COORDINATOR_ENVIRONMENT, ENABLE_STATISTICS).set(operation.get(COORDINATOR_ENVIRONMENT, ENABLE_STATISTICS));\n        subModel.get(COORDINATOR_ENVIRONMENT, ENABLE_TSM_STATUS).set(operation.get(COORDINATOR_ENVIRONMENT, ENABLE_TSM_STATUS));\n        subModel.get(COORDINATOR_ENVIRONMENT, DEFAULT_TIMEOUT).set(operation.get(COORDINATOR_ENVIRONMENT, DEFAULT_TIMEOUT));\n        subModel.get(OBJECT_STORE, RELATIVE_TO).set(operation.get(OBJECT_STORE, RELATIVE_TO));\n        subModel.get(OBJECT_STORE,PATH).set(operation.get(OBJECT_STORE, PATH));\n\n        if (context.getType() == NewOperationContext.Type.SERVER) {\n            if(context.isBooting()) {\n                context.addStep(new AbstractDeploymentChainStep() {\n                    protected void execute(DeploymentProcessorTarget processorTarget) {\n                        processorTarget.addDeploymentProcessor(Phase.INSTALL, Phase.INSTALL_TRANSACTION_BINDINGS, new TransactionJndiBindingProcessor());\n                    }\n                }, NewOperationContext.Stage.RUNTIME);\n            }\n\n            context.addStep(new NewStepHandler() {\n                        public void execute(NewOperationContext context, ModelNode operation) {\n                            final List<ServiceController<?>> controllers = new ArrayList<ServiceController<?>>();\n                            final ServiceVerificationHandler verificationHandler = new ServiceVerificationHandler();\n                            final ServiceTarget target = context.getServiceTarget();\n\n                            // Configure the core configuration.\n                            String socketBindingName = null;\n                            final CoreEnvironmentService coreEnvironmentService = new CoreEnvironmentService(nodeIdentifier, varDirPath);\n                            if (processId.hasDefined(ProcessIdType.UUID.getName())) {\n                                // Use the UUID based id\n                                UuidProcessId id = new UuidProcessId();\n                                coreEnvironmentService.setProcessImplementation(id);\n                            } else if (processId.hasDefined(ProcessIdType.SOCKET.getName())) {\n                                // Use the socket process id\n                                coreEnvironmentService.setProcessImplementationClassName(ProcessIdType.SOCKET.getClazz());\n                                ModelNode socket = processId.get(ProcessIdType.SOCKET.getName());\n                                socketBindingName = socket.require(BINDING).asString();\n                                if (socket.hasDefined(SOCKET_PROCESS_ID_MAX_PORTS)) {\n                                    int ports = socket.get(SOCKET_PROCESS_ID_MAX_PORTS).asInt(maxPorts);\n                                    coreEnvironmentService.setSocketProcessIdMaxPorts(ports);\n                                }\n                            } else {\n                                // Default to UUID implementation\n                                UuidProcessId id = new UuidProcessId();\n                                coreEnvironmentService.setProcessImplementation(id);\n                            }\n                            ServiceBuilder<?> coreEnvBuilder = target.addService(TxnServices.JBOSS_TXN_CORE_ENVIRONMENT, coreEnvironmentService);\n                            if (socketBindingName != null) {\n                                // Add a dependency on the socket id binding\n                                ServiceName bindingName = SocketBinding.JBOSS_BINDING_NAME.append(socketBindingName);\n                                coreEnvBuilder.addDependency(bindingName, SocketBinding.class, coreEnvironmentService.getSocketProcessBindingInjector());\n                            }\n                            ServiceController<String> varDirRPS = RelativePathService.addService(INTERNAL_CORE_ENV_VAR_PATH, varDirPath, varDirPathRef, target);\n                            controllers.add(varDirRPS);\n                            controllers.add(coreEnvBuilder.addDependency(varDirRPS.getName(), String.class, coreEnvironmentService.getPathInjector())\n                                    .addListener(verificationHandler)\n                                    .setInitialMode(Mode.ACTIVE)\n                                    .install());\n\n                            // XATerminator has no deps, so just add it in there\n                            final XATerminatorService xaTerminatorService = new XATerminatorService();\n                            controllers.add(target.addService(TxnServices.JBOSS_TXN_XA_TERMINATOR, xaTerminatorService).setInitialMode(Mode.ACTIVE).install());\n\n                            // Configure the ObjectStoreEnvironmentBeans\n                            ServiceController<String> objectStoreRPS = RelativePathService.addService(INTERNAL_OBJECTSTORE_PATH, objectStorePath, objectStorePathRef, target);\n                            controllers.add(objectStoreRPS);\n                            final ArjunaObjectStoreEnvironmentService objStoreEnvironmentService = new ArjunaObjectStoreEnvironmentService();\n                            controllers.add(target.addService(TxnServices.JBOSS_TXN_ARJUNA_OBJECTSTORE_ENVIRONMENT, objStoreEnvironmentService)\n                                    .addDependency(objectStoreRPS.getName(), String.class, objStoreEnvironmentService.getPathInjector())\n                                    .addDependency(TxnServices.JBOSS_TXN_CORE_ENVIRONMENT)\n                                    .addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install());\n\n                            final ArjunaRecoveryManagerService recoveryManagerService = new ArjunaRecoveryManagerService(recoveryListener);\n                            controllers.add(target.addService(TxnServices.JBOSS_TXN_ARJUNA_RECOVERY_MANAGER, recoveryManagerService)\n                                    .addDependency(DependencyType.OPTIONAL, ServiceName.JBOSS.append(\"iiop\", \"orb\"), ORB.class, recoveryManagerService.getOrbInjector())\n                                    .addDependency(SocketBinding.JBOSS_BINDING_NAME.append(recoveryBindingName), SocketBinding.class, recoveryManagerService.getRecoveryBindingInjector())\n                                    .addDependency(SocketBinding.JBOSS_BINDING_NAME.append(recoveryStatusBindingName), SocketBinding.class, recoveryManagerService.getStatusBindingInjector())\n                                    .addDependency(TxnServices.JBOSS_TXN_CORE_ENVIRONMENT)\n                                    .addDependency(TxnServices.JBOSS_TXN_ARJUNA_OBJECTSTORE_ENVIRONMENT)\n                                    .addListener(verificationHandler)\n                                    .setInitialMode(Mode.ACTIVE)\n                                    .install());\n\n                            final ArjunaTransactionManagerService transactionManagerService = new ArjunaTransactionManagerService(coordinatorEnableStatistics, coordinatorDefaultTimeout, transactionStatusManagerEnable);\n                            controllers.add(target.addService(TxnServices.JBOSS_TXN_ARJUNA_TRANSACTION_MANAGER, transactionManagerService)\n                                    .addDependency(DependencyType.OPTIONAL, ServiceName.JBOSS.append(\"iiop\", \"orb\"), ORB.class, transactionManagerService.getOrbInjector())\n                                    .addDependency(TxnServices.JBOSS_TXN_XA_TERMINATOR, JBossXATerminator.class, transactionManagerService.getXaTerminatorInjector())\n                                    .addDependency(TxnServices.JBOSS_TXN_CORE_ENVIRONMENT)\n                                    .addDependency(TxnServices.JBOSS_TXN_ARJUNA_OBJECTSTORE_ENVIRONMENT)\n                                    .addDependency(TxnServices.JBOSS_TXN_ARJUNA_RECOVERY_MANAGER)\n                                    .addListener(verificationHandler)\n                                    .setInitialMode(Mode.ACTIVE)\n                                    .install());\n\n                            controllers.add(TransactionManagerService.addService(target, verificationHandler));\n                            controllers.add(UserTransactionService.addService(target, verificationHandler));\n                            controllers.add(target.addService(TxnServices.JBOSS_TXN_USER_TRANSACTION_REGISTRY, new UserTransactionRegistryService())\n                                    .addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install());\n                            controllers.add(TransactionSynchronizationRegistryService.addService(target, verificationHandler));\n\n                            //we need to initialize this class when we have the correct TCCL set\n                            //so we force it to be initialized here\n                            try {\n                                Class.forName(\"com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple\", true, getClass().getClassLoader());\n                            } catch (ClassNotFoundException e) {\n                                log.warn(\"Could not load com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple\", e);\n                            }\n\n                            context.addStep(verificationHandler, NewOperationContext.Stage.VERIFY);\n\n                            if (context.completeStep() == NewOperationContext.ResultAction.ROLLBACK) {\n                                for (ServiceController<?> controller : controllers) {\n                                    context.removeService(controller.getName());\n                                }\n                            }\n                        }\n                    }, NewOperationContext.Stage.RUNTIME);\n        }\n\n        context.completeStep();\n    }","id":56323,"modified_method":"/**\n     * {@inheritDoc}\n     */\n    public void execute(NewOperationContext context, ModelNode operation) {\n        final ModelNode opAddr = operation.get(OP_ADDR);\n\n        final String nodeIdentifier = operation.get(CORE_ENVIRONMENT).hasDefined(NODE_IDENTIFIER) ? operation.get(CORE_ENVIRONMENT, NODE_IDENTIFIER).asString() : \"1\";\n        final ModelNode processId = operation.get(CORE_ENVIRONMENT).require(PROCESS_ID);\n        final String varDirPathRef = operation.get(CORE_ENVIRONMENT).hasDefined(RELATIVE_TO) ? operation.get(CORE_ENVIRONMENT).get(RELATIVE_TO).asString() : \"jboss.server.data.dir\";\n        final String varDirPath = operation.get(CORE_ENVIRONMENT).hasDefined(PATH) ? operation.get(CORE_ENVIRONMENT).get(PATH).asString() : \"var\";\n        final String recoveryBindingName = operation.get(RECOVERY_ENVIRONMENT).require(BINDING).asString();\n        final String recoveryStatusBindingName = operation.get(RECOVERY_ENVIRONMENT).require(STATUS_BINDING).asString();\n        final boolean recoveryListener = operation.get(RECOVERY_ENVIRONMENT, RECOVERY_LISTENER).asBoolean(false);\n        final boolean coordinatorEnableStatistics = operation.get(COORDINATOR_ENVIRONMENT, ENABLE_STATISTICS).asBoolean(false);\n        final boolean transactionStatusManagerEnable = operation.get(COORDINATOR_ENVIRONMENT, ENABLE_TSM_STATUS).asBoolean(false);\n        final ModelNode objectStore = operation.get(OBJECT_STORE);\n        final String objectStorePathRef = objectStore.hasDefined(RELATIVE_TO) ? objectStore.get(RELATIVE_TO).asString() : \"jboss.server.data.dir\";\n        final String objectStorePath = objectStore.hasDefined(PATH) ? objectStore.get(PATH).asString() : \"tx-object-store\";\n        final int maxPorts = 10;\n        final int coordinatorDefaultTimeout = operation.get(COORDINATOR_ENVIRONMENT, DEFAULT_TIMEOUT).asInt(300);\n        if(log.isDebugEnabled()) {\n            log.debugf(\"nodeIdentifier=%s\\n\", nodeIdentifier);\n            log.debugf(\"varDirPathRef=%s, varDirPath=%s\\n\", varDirPathRef, varDirPath);\n            log.debugf(\"objectStorePathRef=%s, objectStorePathRef=%s\\n\", objectStorePathRef, objectStorePath);\n            log.debugf(\"recoveryBindingName=%s, recoveryStatusBindingName=%s\\n\", recoveryBindingName, recoveryStatusBindingName);\n        }\n\n\n        final ModelNode subModel = context.readModelForUpdate(PathAddress.EMPTY_ADDRESS);\n        subModel.get(CORE_ENVIRONMENT, PROCESS_ID).set(operation.get(CORE_ENVIRONMENT).require(PROCESS_ID));\n        subModel.get(CORE_ENVIRONMENT, NODE_IDENTIFIER).set(operation.get(CORE_ENVIRONMENT, NODE_IDENTIFIER));\n        subModel.get(CORE_ENVIRONMENT, RELATIVE_TO).set(operation.get(CORE_ENVIRONMENT, RELATIVE_TO));\n        subModel.get(CORE_ENVIRONMENT, PATH).set(operation.get(CORE_ENVIRONMENT, PATH));\n        subModel.get(RECOVERY_ENVIRONMENT, BINDING).set(operation.get(RECOVERY_ENVIRONMENT).require(BINDING));\n        subModel.get(RECOVERY_ENVIRONMENT, STATUS_BINDING).set(operation.get(RECOVERY_ENVIRONMENT, STATUS_BINDING));\n        subModel.get(RECOVERY_ENVIRONMENT, RECOVERY_LISTENER).set(operation.get(RECOVERY_ENVIRONMENT, RECOVERY_LISTENER));\n        subModel.get(COORDINATOR_ENVIRONMENT, ENABLE_STATISTICS).set(operation.get(COORDINATOR_ENVIRONMENT, ENABLE_STATISTICS));\n        subModel.get(COORDINATOR_ENVIRONMENT, ENABLE_TSM_STATUS).set(operation.get(COORDINATOR_ENVIRONMENT, ENABLE_TSM_STATUS));\n        subModel.get(COORDINATOR_ENVIRONMENT, DEFAULT_TIMEOUT).set(operation.get(COORDINATOR_ENVIRONMENT, DEFAULT_TIMEOUT));\n        subModel.get(OBJECT_STORE, RELATIVE_TO).set(operation.get(OBJECT_STORE, RELATIVE_TO));\n        subModel.get(OBJECT_STORE,PATH).set(operation.get(OBJECT_STORE, PATH));\n\n        boolean setReload = false;\n        if (context.getType() == NewOperationContext.Type.SERVER) {\n            if(!context.isBooting()) {\n                context.reloadRequired();\n                setReload = true;\n            } else {\n                context.addStep(new AbstractDeploymentChainStep() {\n                    protected void execute(DeploymentProcessorTarget processorTarget) {\n                        processorTarget.addDeploymentProcessor(Phase.INSTALL, Phase.INSTALL_TRANSACTION_BINDINGS, new TransactionJndiBindingProcessor());\n                    }\n                }, NewOperationContext.Stage.RUNTIME);\n\n\n                context.addStep(new NewStepHandler() {\n                        public void execute(NewOperationContext context, ModelNode operation) {\n                            final List<ServiceController<?>> controllers = new ArrayList<ServiceController<?>>();\n                            final ServiceVerificationHandler verificationHandler = new ServiceVerificationHandler();\n                            final ServiceTarget target = context.getServiceTarget();\n\n                            // Configure the core configuration.\n                            String socketBindingName = null;\n                            final CoreEnvironmentService coreEnvironmentService = new CoreEnvironmentService(nodeIdentifier, varDirPath);\n                            if (processId.hasDefined(ProcessIdType.UUID.getName())) {\n                                // Use the UUID based id\n                                UuidProcessId id = new UuidProcessId();\n                                coreEnvironmentService.setProcessImplementation(id);\n                            } else if (processId.hasDefined(ProcessIdType.SOCKET.getName())) {\n                                // Use the socket process id\n                                coreEnvironmentService.setProcessImplementationClassName(ProcessIdType.SOCKET.getClazz());\n                                ModelNode socket = processId.get(ProcessIdType.SOCKET.getName());\n                                socketBindingName = socket.require(BINDING).asString();\n                                if (socket.hasDefined(SOCKET_PROCESS_ID_MAX_PORTS)) {\n                                    int ports = socket.get(SOCKET_PROCESS_ID_MAX_PORTS).asInt(maxPorts);\n                                    coreEnvironmentService.setSocketProcessIdMaxPorts(ports);\n                                }\n                            } else {\n                                // Default to UUID implementation\n                                UuidProcessId id = new UuidProcessId();\n                                coreEnvironmentService.setProcessImplementation(id);\n                            }\n                            ServiceBuilder<?> coreEnvBuilder = target.addService(TxnServices.JBOSS_TXN_CORE_ENVIRONMENT, coreEnvironmentService);\n                            if (socketBindingName != null) {\n                                // Add a dependency on the socket id binding\n                                ServiceName bindingName = SocketBinding.JBOSS_BINDING_NAME.append(socketBindingName);\n                                coreEnvBuilder.addDependency(bindingName, SocketBinding.class, coreEnvironmentService.getSocketProcessBindingInjector());\n                            }\n                            ServiceController<String> varDirRPS = RelativePathService.addService(INTERNAL_CORE_ENV_VAR_PATH, varDirPath, varDirPathRef, target);\n                            controllers.add(varDirRPS);\n                            controllers.add(coreEnvBuilder.addDependency(varDirRPS.getName(), String.class, coreEnvironmentService.getPathInjector())\n                                    .addListener(verificationHandler)\n                                    .setInitialMode(Mode.ACTIVE)\n                                    .install());\n\n                            // XATerminator has no deps, so just add it in there\n                            final XATerminatorService xaTerminatorService = new XATerminatorService();\n                            controllers.add(target.addService(TxnServices.JBOSS_TXN_XA_TERMINATOR, xaTerminatorService).setInitialMode(Mode.ACTIVE).install());\n\n                            // Configure the ObjectStoreEnvironmentBeans\n                            ServiceController<String> objectStoreRPS = RelativePathService.addService(INTERNAL_OBJECTSTORE_PATH, objectStorePath, objectStorePathRef, target);\n                            controllers.add(objectStoreRPS);\n                            final ArjunaObjectStoreEnvironmentService objStoreEnvironmentService = new ArjunaObjectStoreEnvironmentService();\n                            controllers.add(target.addService(TxnServices.JBOSS_TXN_ARJUNA_OBJECTSTORE_ENVIRONMENT, objStoreEnvironmentService)\n                                    .addDependency(objectStoreRPS.getName(), String.class, objStoreEnvironmentService.getPathInjector())\n                                    .addDependency(TxnServices.JBOSS_TXN_CORE_ENVIRONMENT)\n                                    .addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install());\n\n                            final ArjunaRecoveryManagerService recoveryManagerService = new ArjunaRecoveryManagerService(recoveryListener);\n                            controllers.add(target.addService(TxnServices.JBOSS_TXN_ARJUNA_RECOVERY_MANAGER, recoveryManagerService)\n                                    .addDependency(DependencyType.OPTIONAL, ServiceName.JBOSS.append(\"iiop\", \"orb\"), ORB.class, recoveryManagerService.getOrbInjector())\n                                    .addDependency(SocketBinding.JBOSS_BINDING_NAME.append(recoveryBindingName), SocketBinding.class, recoveryManagerService.getRecoveryBindingInjector())\n                                    .addDependency(SocketBinding.JBOSS_BINDING_NAME.append(recoveryStatusBindingName), SocketBinding.class, recoveryManagerService.getStatusBindingInjector())\n                                    .addDependency(TxnServices.JBOSS_TXN_CORE_ENVIRONMENT)\n                                    .addDependency(TxnServices.JBOSS_TXN_ARJUNA_OBJECTSTORE_ENVIRONMENT)\n                                    .addListener(verificationHandler)\n                                    .setInitialMode(Mode.ACTIVE)\n                                    .install());\n\n                            final ArjunaTransactionManagerService transactionManagerService = new ArjunaTransactionManagerService(coordinatorEnableStatistics, coordinatorDefaultTimeout, transactionStatusManagerEnable);\n                            controllers.add(target.addService(TxnServices.JBOSS_TXN_ARJUNA_TRANSACTION_MANAGER, transactionManagerService)\n                                    .addDependency(DependencyType.OPTIONAL, ServiceName.JBOSS.append(\"iiop\", \"orb\"), ORB.class, transactionManagerService.getOrbInjector())\n                                    .addDependency(TxnServices.JBOSS_TXN_XA_TERMINATOR, JBossXATerminator.class, transactionManagerService.getXaTerminatorInjector())\n                                    .addDependency(TxnServices.JBOSS_TXN_CORE_ENVIRONMENT)\n                                    .addDependency(TxnServices.JBOSS_TXN_ARJUNA_OBJECTSTORE_ENVIRONMENT)\n                                    .addDependency(TxnServices.JBOSS_TXN_ARJUNA_RECOVERY_MANAGER)\n                                    .addListener(verificationHandler)\n                                    .setInitialMode(Mode.ACTIVE)\n                                    .install());\n\n                            controllers.add(TransactionManagerService.addService(target, verificationHandler));\n                            controllers.add(UserTransactionService.addService(target, verificationHandler));\n                            controllers.add(target.addService(TxnServices.JBOSS_TXN_USER_TRANSACTION_REGISTRY, new UserTransactionRegistryService())\n                                    .addListener(verificationHandler).setInitialMode(Mode.ACTIVE).install());\n                            controllers.add(TransactionSynchronizationRegistryService.addService(target, verificationHandler));\n\n                            //we need to initialize this class when we have the correct TCCL set\n                            //so we force it to be initialized here\n                            try {\n                                Class.forName(\"com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple\", true, getClass().getClassLoader());\n                            } catch (ClassNotFoundException e) {\n                                log.warn(\"Could not load com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple\", e);\n                            }\n\n                            context.addStep(verificationHandler, NewOperationContext.Stage.VERIFY);\n\n                            if (context.completeStep() == NewOperationContext.ResultAction.ROLLBACK) {\n                                for (ServiceController<?> controller : controllers) {\n                                    context.removeService(controller.getName());\n                                }\n                            }\n                        }\n                    }, NewOperationContext.Stage.RUNTIME);\n            }\n        }\n\n        if (context.completeStep() == NewOperationContext.ResultAction.ROLLBACK && setReload) {\n            context.revertReloadRequired();\n        }\n    }","commit_id":"85d9aaeca0e1a0343ea9837c49c2ec874a8e4d9a","url":"https://github.com/wildfly/wildfly"},{"original_method":"public AutoDeployDir(\n\t\tString name, File deployDir, File destDir, long interval,\n\t\tint blacklistThreshold, List<AutoDeployListener> autoDeployListeners) {\n\n\t\t_name = name;\n\t\t_deployDir = deployDir;\n\t\t_destDir = destDir;\n\t\t_interval = interval;\n\t\t_blacklistThreshold = blacklistThreshold;\n\t\t_autoDeployListeners = new CopyOnWriteArrayList<AutoDeployListener>(\n\t\t\tautoDeployListeners);\n\t\t_inProcessFiles = new HashMap<String, IntegerWrapper>();\n\t\t_blacklistFiles = new HashSet<String>();\n\t}","id":56324,"modified_method":"public AutoDeployDir(\n\t\tString name, File deployDir, File destDir, long interval,\n\t\tint blacklistThreshold, List<AutoDeployListener> autoDeployListeners) {\n\n\t\t_name = name;\n\t\t_deployDir = deployDir;\n\t\t_destDir = destDir;\n\t\t_interval = interval;\n\t\t_blacklistThreshold = blacklistThreshold;\n\t\t_autoDeployListeners = new CopyOnWriteArrayList<AutoDeployListener>(\n\t\t\tautoDeployListeners);\n\t\t_blacklistFiles = new HashMap<String, Long>();\n\t}","commit_id":"5ac89e526723f9b7fc9df56fd574d886af1007fd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void scanDirectory() {\n\t\tFile[] files = _deployDir.listFiles();\n\n\t\tfor (File file : files) {\n\t\t\tString fileName = file.getName().toLowerCase();\n\n\t\t\tif (file.isFile() &&\n\t\t\t\t(fileName.endsWith(\".jar\") || fileName.endsWith(\".lpkg\") ||\n\t\t\t\t fileName.endsWith(\".war\") || fileName.endsWith(\".xml\") ||\n\t\t\t\t fileName.endsWith(\".zip\"))) {\n\n\t\t\t\tprocessFile(file);\n\t\t\t}\n\t\t}\n\t}","id":56325,"modified_method":"protected void scanDirectory() {\n\t\tFile[] files = _deployDir.listFiles();\n\n\t\tfor (Iterator<String> it = _blacklistFiles.keySet().iterator();\n\t\t\tit.hasNext();) {\n\t\t\tString blacklistedFileName = it.next();\n\n\t\t\tboolean blacklistedFileExists = false;\n\n\t\t\tfor (File file : files) {\n\t\t\t\tif (blacklistedFileName.equalsIgnoreCase(file.getName())) {\n\t\t\t\t\tblacklistedFileExists = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!blacklistedFileExists) {\n\t\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t\t_log.debug(\n\t\t\t\t\t\t\"Remove blacklisted file \" + blacklistedFileName +\n\t\t\t\t\t\t\t\" because it was deleted.\");\n\t\t\t\t}\n\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\n\t\tfor (File file : files) {\n\t\t\tString fileName = file.getName().toLowerCase();\n\n\t\t\tif (file.isFile() &&\n\t\t\t\t(fileName.endsWith(\".jar\") || fileName.endsWith(\".lpkg\") ||\n\t\t\t\t fileName.endsWith(\".war\") || fileName.endsWith(\".xml\") ||\n\t\t\t\t fileName.endsWith(\".zip\"))) {\n\n\t\t\t\tprocessFile(file);\n\t\t\t}\n\t\t}\n\t}","commit_id":"5ac89e526723f9b7fc9df56fd574d886af1007fd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void processFile(File file) {\n\t\tString fileName = file.getName();\n\n\t\tif (!file.canRead()) {\n\t\t\t_log.error(\"Unable to read \" + fileName);\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!file.canWrite()) {\n\t\t\t_log.error(\"Unable to write \" + fileName);\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (_blacklistFiles.contains(fileName)) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Skip processing of \" + fileName + \" because it is \" +\n\t\t\t\t\t\t\"blacklisted. You must restart the server to remove \" +\n\t\t\t\t\t\t\t\"the file from the blacklist.\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tIntegerWrapper attempt = _inProcessFiles.get(fileName);\n\n\t\tif (attempt == null) {\n\t\t\tattempt = new IntegerWrapper(1);\n\n\t\t\t_inProcessFiles.put(fileName, attempt);\n\n\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t_log.info(\"Processing \" + fileName);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t_log.info(\n\t\t\t\t\t\"Processing \" + fileName + \". This is attempt \" +\n\t\t\t\t\t\tattempt.getValue() + \".\");\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tAutoDeploymentContext autoDeploymentContext =\n\t\t\t\tbuildAutoDeploymentContext(file);\n\n\t\t\tfor (AutoDeployListener autoDeployListener : _autoDeployListeners) {\n\t\t\t\tautoDeployListener.deploy(autoDeploymentContext);\n\t\t\t}\n\n\t\t\tif (file.delete()) {\n\t\t\t\t_inProcessFiles.remove(fileName);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.error(\"Auto deploy failed to remove \" + fileName);\n\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\"Add \" + fileName + \" to the blacklist\");\n\t\t\t\t}\n\n\t\t\t\t_blacklistFiles.add(fileName);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\n\t\t\tattempt.increment();\n\n\t\t\tif (attempt.getValue() >= _blacklistThreshold) {\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\"Add \" + fileName + \" to the blacklist\");\n\t\t\t\t}\n\n\t\t\t\t_blacklistFiles.add(fileName);\n\t\t\t}\n\t\t}\n\t}","id":56326,"modified_method":"protected void processFile(File file) {\n\t\tString fileName = file.getName();\n\n\t\tif (!file.canRead()) {\n\t\t\t_log.error(\"Unable to read \" + fileName);\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!file.canWrite()) {\n\t\t\t_log.error(\"Unable to write \" + fileName);\n\n\t\t\treturn;\n\t\t}\n\n\t\tlong lastModified = file.lastModified();\n\n\t\tif (_blacklistFiles.containsKey(fileName) &&\n\t\t\t(_blacklistFiles.get(fileName) == lastModified)) {\n\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\n\t\t\t\t\t\"Skip processing of \" + fileName + \" because it is \" +\n\t\t\t\t\t\t\"blacklisted.\");\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Processing \" + fileName);\n\t\t}\n\n\t\ttry {\n\t\t\tAutoDeploymentContext autoDeploymentContext =\n\t\t\t\tbuildAutoDeploymentContext(file);\n\n\t\t\tfor (AutoDeployListener autoDeployListener : _autoDeployListeners) {\n\t\t\t\tautoDeployListener.deploy(autoDeploymentContext);\n\t\t\t}\n\n\t\t\tif (file.delete()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_log.error(\"Auto deploy failed to remove \" + fileName);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e, e);\n\t\t}\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\"Add \" + fileName + \" to the blacklist\");\n\t\t}\n\n\t\t_blacklistFiles.put(fileName, lastModified);\n\t}","commit_id":"5ac89e526723f9b7fc9df56fd574d886af1007fd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public InfernoTrap(UUID ownerId) {\r\n        super(ownerId, 133, \"Inferno Trap\", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, \"{3}{R}\");\r\n        this.expansionSetCode = \"ZEN\";\r\n        this.subtype.add(\"Trap\");\r\n\r\n        // If you've been dealt damage by two or more creatures this turn, you may pay {R} rather than pay Inferno Trap's mana cost.\r\n        this.getSpellAbility().addAlternativeCost(new InfernoTrapAlternativeCost());\r\n        this.getSpellAbility().addWatcher(new ControllerDamagedByCreatureWatcher());\r\n\r\n        // Inferno Trap deals 4 damage to target creature.\r\n        this.getSpellAbility().addEffect(new DamageTargetEffect(4));\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent());\r\n    }","id":56327,"modified_method":"public InfernoTrap(UUID ownerId) {\r\n        super(ownerId, 133, \"Inferno Trap\", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, \"{3}{R}\");\r\n        this.expansionSetCode = \"ZEN\";\r\n        this.subtype.add(\"Trap\");\r\n\r\n        // If you've been dealt damage by two or more creatures this turn, you may pay {R} rather than pay Inferno Trap's mana cost.\r\n        this.addAbility(new AlternativeCostSourceAbility(new ManaCostsImpl(\"{R}\"), InfernoTrapCondition.getInstance()), new InfernoTrapWatcher());\r\n\r\n        // Inferno Trap deals 4 damage to target creature.\r\n        this.getSpellAbility().addEffect(new DamageTargetEffect(4));\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent());\r\n    }","commit_id":"29b37b046da76bf1490379989c04f85943a569c1","url":"https://github.com/magefree/mage"},{"original_method":"public NeedlebiteTrap(UUID ownerId) {\r\n        super(ownerId, 105, \"Needlebite Trap\", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, \"{5}{B}{B}\");\r\n        this.expansionSetCode = \"ZEN\";\r\n        this.subtype.add(\"Trap\");\r\n\r\n\r\n        // If an opponent gained life this turn, you may pay {B} rather than pay Needlebite Trap's mana cost.\r\n        this.getSpellAbility().addAlternativeCost(\r\n                new NeedlebiteTrapAlternativeCost());\r\n        this.getSpellAbility().addWatcher(new PlayerGainedLifeWatcher());\r\n\r\n        // Target player loses 5 life and you gain 5 life.\r\n        this.getSpellAbility().addEffect(new LoseLifeTargetEffect(5));\r\n        this.getSpellAbility().addEffect(new GainLifeEffect(5));\r\n        this.getSpellAbility().addTarget(new TargetPlayer());\r\n    }","id":56328,"modified_method":"public NeedlebiteTrap(UUID ownerId) {\r\n        super(ownerId, 105, \"Needlebite Trap\", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, \"{5}{B}{B}\");\r\n        this.expansionSetCode = \"ZEN\";\r\n        this.subtype.add(\"Trap\");\r\n\r\n        // If an opponent gained life this turn, you may pay {B} rather than pay Needlebite Trap's mana cost.\r\n        this.addAbility(new AlternativeCostSourceAbility(new ManaCostsImpl(\"{B}\"), NeedlebiteTrapCondition.getInstance()), new PlayerGainedLifeWatcher());\r\n\r\n        // Target player loses 5 life and you gain 5 life.\r\n        this.getSpellAbility().addEffect(new LoseLifeTargetEffect(5));\r\n        this.getSpellAbility().addEffect(new GainLifeEffect(5));\r\n        this.getSpellAbility().addTarget(new TargetPlayer());\r\n    }","commit_id":"29b37b046da76bf1490379989c04f85943a569c1","url":"https://github.com/magefree/mage"},{"original_method":"public RavenousTrap(UUID ownerId) {\r\n        super(ownerId, 109, \"Ravenous Trap\", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, \"{2}{B}{B}\");\r\n        this.expansionSetCode = \"ZEN\";\r\n        this.subtype.add(\"Trap\");\r\n\r\n        // If an opponent had three or more cards put into his or her graveyard from anywhere this turn, you may pay {0} rather than pay Ravenous Trap's mana cost.\r\n        this.getSpellAbility().addAlternativeCost(\r\n                new RavenousTrapAlternativeCost());\r\n        this.getSpellAbility().addWatcher(new CardsPutIntoGraveyardWatcher());\r\n\r\n        // Exile all cards from target player's graveyard.\r\n        this.getSpellAbility().addEffect(new ExileGraveyardAllTargetPlayerEffect());\r\n        this.getSpellAbility().addTarget(new TargetPlayer());\r\n    }","id":56329,"modified_method":"public RavenousTrap(UUID ownerId) {\r\n        super(ownerId, 109, \"Ravenous Trap\", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, \"{2}{B}{B}\");\r\n        this.expansionSetCode = \"ZEN\";\r\n        this.subtype.add(\"Trap\");\r\n\r\n        // If an opponent had three or more cards put into his or her graveyard from anywhere this turn, you may pay {0} rather than pay Ravenous Trap's mana cost.\r\n        this.addAbility(new AlternativeCostSourceAbility(new ManaCostsImpl(\"{0}\"), RavenousTrapCondition.getInstance()), new CardsPutIntoGraveyardWatcher());\r\n\r\n        // Exile all cards from target player's graveyard.\r\n        this.getSpellAbility().addEffect(new ExileGraveyardAllTargetPlayerEffect());\r\n        this.getSpellAbility().addTarget(new TargetPlayer());\r\n    }","commit_id":"29b37b046da76bf1490379989c04f85943a569c1","url":"https://github.com/magefree/mage"},{"original_method":"public RuneflareTrap(UUID ownerId) {\r\n        super(ownerId, 146, \"Runeflare Trap\", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, \"{4}{R}{R}\");\r\n        this.expansionSetCode = \"ZEN\";\r\n        this.subtype.add(\"Trap\");\r\n\r\n\r\n        // If an opponent drew three or more cards this turn, you may pay {R} rather than pay Runeflare Trap's mana cost.\r\n        this.getSpellAbility().addAlternativeCost(new RuneflareTrapAlternativeCost());\r\n        this.getSpellAbility().addWatcher(new CardsDrawnOpponentWatcher());\r\n\r\n        // Runeflare Trap deals damage to target player equal to the number of cards in that player's hand.\r\n        this.getSpellAbility().addEffect(new DamageTargetEffect(new TargetPlayerCardsInHandCount()));\r\n        this.getSpellAbility().addTarget(new TargetPlayer());\r\n\r\n    }","id":56330,"modified_method":"public RuneflareTrap(UUID ownerId) {\r\n        super(ownerId, 146, \"Runeflare Trap\", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, \"{4}{R}{R}\");\r\n        this.expansionSetCode = \"ZEN\";\r\n        this.subtype.add(\"Trap\");\r\n\r\n        // If an opponent drew three or more cards this turn, you may pay {R} rather than pay Runeflare Trap's mana cost.\r\n        this.addAbility(new AlternativeCostSourceAbility(new ManaCostsImpl(\"{R}\"), RavenousTrapCondition.getInstance()), new CardsDrawnWatcher());\r\n\r\n        // Runeflare Trap deals damage to target player equal to the number of cards in that player's hand.\r\n        this.getSpellAbility().addEffect(new DamageTargetEffect(new TargetPlayerCardsInHandCount()));\r\n        this.getSpellAbility().addTarget(new TargetPlayer());\r\n\r\n    }","commit_id":"29b37b046da76bf1490379989c04f85943a569c1","url":"https://github.com/magefree/mage"},{"original_method":"public SummoningTrapWatcher(final SummoningTrapWatcher watcher) {\n        super(watcher);\n    }","id":56331,"modified_method":"public SummoningTrapWatcher(final SummoningTrapWatcher watcher) {\n        super(watcher);\n        this.players.addAll(watcher.players);\n    }","commit_id":"29b37b046da76bf1490379989c04f85943a569c1","url":"https://github.com/magefree/mage"},{"original_method":"public SummoningTrap(UUID ownerId) {\n        super(ownerId, 184, \"Summoning Trap\", Rarity.RARE,\n                new CardType[]{CardType.INSTANT}, \"{4}{G}{G}\");\n        this.expansionSetCode = \"ZEN\";\n        this.subtype.add(\"Trap\");\n\n        // If a creature spell you cast this turn was countered by a spell or ability an opponent controlled, you may pay {0} rather than pay Summoning Trap's mana cost.\n        this.getSpellAbility().addAlternativeCost(new SummoningTrapAlternativeCost());\n        this.getSpellAbility().addWatcher(new SummoningTrapWatcher());\n        // Look at the top seven cards of your library. You may put a creature card from among them onto the battlefield. Put the rest on the bottom of your library in any order.\n        this.getSpellAbility().addEffect(new SummoningTrapEffect());\n    }","id":56332,"modified_method":"public SummoningTrap(UUID ownerId) {\n        super(ownerId, 184, \"Summoning Trap\", Rarity.RARE,\n                new CardType[]{CardType.INSTANT}, \"{4}{G}{G}\");\n        this.expansionSetCode = \"ZEN\";\n        this.subtype.add(\"Trap\");\n\n        // If a creature spell you cast this turn was countered by a spell or ability an opponent controlled, you may pay {0} rather than pay Summoning Trap's mana cost.\n        this.addAbility(new AlternativeCostSourceAbility(new ManaCostsImpl(\"{0}\"), SummoningTrapCondition.getInstance()), new SummoningTrapWatcher());\n\n        // Look at the top seven cards of your library. You may put a creature card from among them onto the battlefield. Put the rest on the bottom of your library in any order.\n        this.getSpellAbility().addEffect(new SummoningTrapEffect());\n    }","commit_id":"29b37b046da76bf1490379989c04f85943a569c1","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public void watch(GameEvent event, Game game) {\n        if (condition == true) {// no need to check - condition has already occured\n            return;\n        }\n        if (event.getType() == EventType.COUNTERED) {\n            StackObject stackObject = game.getStack().getStackObject(event.getTargetId());\n            if (stackObject == null) {\n                stackObject = (StackObject) game.getLastKnownInformation(event.getTargetId(), Zone.STACK);\n            }\n            StackObject counterObject = game.getStack().getStackObject(event.getSourceId());\n            if (counterObject == null) {\n                counterObject = (StackObject) game.getLastKnownInformation(event.getSourceId(), Zone.STACK);\n            }\n            if (stackObject != null && counterObject != null\n                    && stackObject.getCardType().contains(CardType.CREATURE)\n                    && game.getOpponents(controllerId).contains(counterObject.getControllerId())) {\n                condition = true;\n            }\n        }\n    }","id":56333,"modified_method":"@Override\n    public void watch(GameEvent event, Game game) {\n        if (event.getType() == EventType.COUNTERED) {\n            StackObject stackObject = game.getStack().getStackObject(event.getTargetId());\n            if (stackObject == null) {\n                stackObject = (StackObject) game.getLastKnownInformation(event.getTargetId(), Zone.STACK);\n            }\n            if (stackObject != null\n                    && !players.contains(stackObject.getControllerId())\n                    && stackObject.getCardType().contains(CardType.CREATURE)) {\n                StackObject counterObject = game.getStack().getStackObject(event.getSourceId());\n                if (counterObject == null) {\n                    counterObject = (StackObject) game.getLastKnownInformation(event.getSourceId(), Zone.STACK);\n                }\n                if (counterObject != null && game.getOpponents(stackObject.getControllerId()).contains(counterObject.getControllerId())) {\n                    players.add(stackObject.getControllerId());\n                }\n            }\n\n        }\n    }","commit_id":"29b37b046da76bf1490379989c04f85943a569c1","url":"https://github.com/magefree/mage"},{"original_method":"public SummoningTrapWatcher() {\n        super(\"CreatureSpellCountered\", WatcherScope.PLAYER);\n    }","id":56334,"modified_method":"public SummoningTrapWatcher() {\n        super(\"CreatureSpellCountered\", WatcherScope.GAME);\n    }","commit_id":"29b37b046da76bf1490379989c04f85943a569c1","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n  public void reloadRequired(GeneratorMappings mappings) throws GenerationFailureException {\n    if(myCache == null || myRequiredSet.isEmpty()) {\n      assert myRequiredSet.isEmpty();\n      return;\n    }\n\n    int stepsCount = myCache.getMinorCount(myMajorStep);\n    // TODO if(myMinorStep >= stepCount) copy from current input model\n    TransientModelWithMetainfo model = myCache.load(myMajorStep, myMinorStep >= stepsCount ? stepsCount - 1 : myMinorStep);\n    if(model == null) {\n      throw new GenerationFailureException(\"Cannot load required data from cache. Try to regenerate model.\");\n    }\n\n    List<SNode> toCopy = new ArrayList<SNode>(myRequiredSet.size()*2 + 16);\n    for(Iterator<SNode> it = model.getModel().roots(); it.hasNext(); ) {\n      SNode root = it.next();\n      String originalId = model.getOriginal(root);\n      if(myRequiredSet.contains(originalId)) {\n        toCopy.add(root);\n      }\n    }\n\n    for(SNode node : toCopy) {\n      currentOutputModel.addRoot(node);\n    }\n  }","id":56335,"modified_method":"@Override\n  public void reloadRequired(GeneratorMappings mappings) throws GenerationFailureException {\n    if(myCache == null || myRequiredSet.isEmpty()) {\n      assert myRequiredSet.isEmpty();\n      return;\n    }\n\n    int stepsCount = myCache.getMinorCount(myMajorStep);\n    // TODO if(myMinorStep >= stepCount) copy from current input model\n    TransientModelWithMetainfo model = myCache.load(myMajorStep, myMinorStep >= stepsCount ? stepsCount - 1 : myMinorStep);\n    if(model == null) {\n      throw new GenerationFailureException(\"Cannot load required data from cache. Try to regenerate model.\");\n    }\n\n    List<SNode> toCopy = new ArrayList<SNode>(myRequiredSet.size()*2 + 16);\n    for(Iterator<SNode> it = model.getModel().roots(); it.hasNext(); ) {\n      SNode root = it.next();\n      String originalId = model.getOriginal(root);\n      if(myRequiredSet.containsKey(originalId)) {\n        SNode originalRoot = myRequiredSet.get(originalId);\n        if (nextStepToOriginalMap == null) {\n          nextStepToOriginalMap = new HashMap<SNode, SNode>();\n        }\n        nextStepToOriginalMap.put(root, originalRoot);\n        toCopy.add(root);\n      }\n    }\n\n    for(SNode node : toCopy) {\n      currentOutputModel.addRoot(node);\n    }\n  }","commit_id":"3e09ef154c589bf841b3c4530a7ba0727402ce06","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public RootDependenciesBuilder getRootBuilder(SNode inputNode) {\n    if (inputNode == null || !inputNode.isRegistered()) {\n      return myConditionalsBuilder;\n    }\n    inputNode = inputNode.getTopmostAncestor();\n    SNode originalRoot = currentToOriginalMap.get(inputNode);\n    if (originalRoot != null) {\n      return myRootBuilders.get(originalRoot);\n    } else if (currentToOriginalMap.containsKey(inputNode)) {\n      return myConditionalsBuilder;\n    }\n    // shouldn't happen\n    return null;\n  }","id":56336,"modified_method":"@Override\n  public RootDependenciesBuilder getRootBuilder(SNode inputNode) {\n    if (inputNode == null || !inputNode.isRegistered()) {\n      return myConditionalsBuilder;\n    }\n    inputNode = inputNode.getTopmostAncestor();\n    SNode originalRoot = currentToOriginalMap.get(inputNode);\n    if (originalRoot != null) {\n      return myRootBuilders.get(originalRoot);\n    } else if (currentToOriginalMap.containsKey(inputNode)) {\n      return myConditionalsBuilder;\n    }\n    // shouldn't happen\n    LOG.error(\"consistency problem in dependencies map\");\n    return null;\n  }","commit_id":"3e09ef154c589bf841b3c4530a7ba0727402ce06","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void addRequired(RootDependenciesBuilder rootDependenciesBuilder) {\n    SNode root = rootDependenciesBuilder.getOriginalRoot();\n    myRequiredSet.add(root == null ? TransientModelWithMetainfo.CONDITIONALS_ID : root.getId());\n  }","id":56337,"modified_method":"public void addRequired(RootDependenciesBuilder rootDependenciesBuilder) {\n    SNode root = rootDependenciesBuilder.getOriginalRoot();\n    myRequiredSet.put(root == null ? TransientModelWithMetainfo.CONDITIONALS_ID : root.getId(), root);\n  }","commit_id":"3e09ef154c589bf841b3c4530a7ba0727402ce06","url":"https://github.com/JetBrains/MPS"},{"original_method":"public DefaultDependenciesBuilder(SModel originalInputModel, @Nullable Map<String, String> generationHashes, IntermediateModelsCache cache) {\n    currentInputModel = originalInputModel;\n    myCache = cache;\n    currentOutputModel = null;\n    myModelHash = generationHashes == null ? null : generationHashes.get(ModelDigestHelper.FILE);\n    initData(getRoots(originalInputModel), generationHashes);\n    myRequiredSet = new HashSet<String>();\n  }","id":56338,"modified_method":"public DefaultDependenciesBuilder(SModel originalInputModel, @Nullable Map<String, String> generationHashes, IntermediateModelsCache cache) {\n    currentInputModel = originalInputModel;\n    myCache = cache;\n    currentOutputModel = null;\n    myModelHash = generationHashes == null ? null : generationHashes.get(ModelDigestHelper.FILE);\n    initData(getRoots(originalInputModel), generationHashes);\n    myRequiredSet = new HashMap<String, SNode>();\n  }","commit_id":"3e09ef154c589bf841b3c4530a7ba0727402ce06","url":"https://github.com/JetBrains/MPS"},{"original_method":"public GenerationStatus generateModel() throws GenerationCanceledException {\n    if (myMajorStep != 0) {\n      throw new GenerationCanceledException();\n    }\n\n    // create a plan\n    myGenerationPlan = new GenerationPlan(myOriginalInputModel.getSModel());\n    if (!checkGenerationPlan(myGenerationPlan)) {\n      // throw new GenerationCanceledException();\n    }\n\n    GenerationFilter filter = new GenerationFilter(myOriginalInputModel, myInvocationContext, myGenerationOptions, myGenerationPlan.getSignature());\n    myDependenciesBuilder = filter.createDependenciesBuilder();\n\n    if (filter.canOptimize()) {\n      int ignored = filter.getIgnoredRoots().size();\n      int total = filter.getRootsCount();\n      myLogger.info((!filter.canIgnoreConditionals() ? \"\" : \"descriptors and \") + ignored + \" of \" + total + \" roots are unchanged\");\n\n      if (total > 0 && ignored == total && filter.canIgnoreConditionals()) {\n        myLogger.info(\"generated files are up-to-date\");\n        return new GenerationStatus(myOriginalInputModel.getSModel(), null,\n          myDependenciesBuilder.getResult(myInvocationContext), false, false, false);\n      }\n\n      if(!filter.getRequiredRoots().isEmpty() || filter.requireConditionals()) {\n        myLogger.info((!filter.requireConditionals() ? \"\" : \"descriptors and \") + filter.getRequiredRoots().size() + \" roots can be used from cache\");\n      }\n    }\n\n    boolean success = false;\n\n    myNewCache = filter.createNewCache();\n    try {\n      SModel currInputModel = myOriginalInputModel.getSModel();\n      SModel currOutput = null;\n\n      ttrace.push(\"steps\", false);\n      for (myMajorStep = 0; myMajorStep < myGenerationPlan.getStepCount(); myMajorStep++) {\n        if (myLogger.needsInfo()) {\n          myLogger.info(\"executing step \" + (myMajorStep + 1));\n        }\n        //ttrace.push(\"step \" + (myMajorStep + 1), false);\n        currOutput = executeMajorStep(currInputModel);\n        //ttrace.pop();\n        if (currOutput == null || myLogger.getErrorCount() > 0) {\n          break;\n        }\n        if (myGenerationPlan.getMappingConfigurations(myMajorStep).isEmpty()) {\n          break;\n        }\n        currInputModel = currOutput;\n      }\n      ttrace.pop();\n\n      // we need this in order to prevent memory leaks from nodes which are reported to message view\n      // since session objects might include objects with disposed class loaders\n      if (mySessionContext != null) {\n        mySessionContext.clearTransientObjects();\n      }\n\n      GenerationStatus generationStatus = new GenerationStatus(myOriginalInputModel.getSModel(), currOutput,\n        myDependenciesBuilder.getResult(myInvocationContext), myLogger.getErrorCount() > 0,\n        myLogger.getWarningCount() > 0, false);\n      success = generationStatus.isOk();\n      return generationStatus;\n    } catch (GenerationCanceledException gce) {\n      throw gce;\n    } catch (GenerationFailureException gfe) {\n      // FIXME\n      myLogger.error(gfe.getMessage());\n      myLogger.error(\"model \\\"\" + myOriginalInputModel.getSModelReference().getSModelFqName() + \"\\\" generation failed : \" + gfe);\n      return new GenerationStatus.ERROR(myOriginalInputModel.getSModel());\n    } catch (Throwable e) {\n      myLogger.handleException(e);\n      myLogger.error(\"model \\\"\" + myOriginalInputModel.getSModelReference().getSModelFqName() + \"\\\" generation failed : \" + e);\n      return new GenerationStatus.ERROR(myOriginalInputModel.getSModel());\n    } finally {\n      if(myNewCache != null) {\n        if(success) {\n          myNewCache.store();\n        } else {\n          myNewCache.remove();\n        }\n      }\n    }\n  }","id":56339,"modified_method":"public GenerationStatus generateModel() throws GenerationCanceledException {\n    if (myMajorStep != 0) {\n      throw new GenerationCanceledException();\n    }\n\n    // create a plan\n    ttrace.push(\"analyzing dependencies\", false);\n    myGenerationPlan = new GenerationPlan(myOriginalInputModel.getSModel());\n    if (!checkGenerationPlan(myGenerationPlan)) {\n      // throw new GenerationCanceledException();\n    }\n\n    GenerationFilter filter = new GenerationFilter(myOriginalInputModel, myInvocationContext, myGenerationOptions, myGenerationPlan.getSignature());\n    myDependenciesBuilder = filter.createDependenciesBuilder();\n\n    if (filter.canOptimize()) {\n      int ignored = filter.getIgnoredRoots().size();\n      int total = filter.getRootsCount();\n      myLogger.info((!filter.canIgnoreConditionals() ? \"\" : \"descriptors and \") + ignored + \" of \" + total + \" roots are unchanged\");\n\n      if (total > 0 && ignored == total && filter.canIgnoreConditionals()) {\n        myLogger.info(\"generated files are up-to-date\");\n        ttrace.pop();\n        return new GenerationStatus(myOriginalInputModel.getSModel(), null,\n          myDependenciesBuilder.getResult(myInvocationContext), false, false, false);\n      }\n\n      if(!filter.getRequiredRoots().isEmpty() || filter.requireConditionals()) {\n        myLogger.info((!filter.requireConditionals() ? \"\" : \"descriptors and \") + filter.getRequiredRoots().size() + \" roots can be used from cache\");\n      }\n    }\n\n    boolean success = false;\n\n    myNewCache = filter.createNewCache();\n    ttrace.pop();\n    try {\n      SModel currInputModel = myOriginalInputModel.getSModel();\n      SModel currOutput = null;\n\n      ttrace.push(\"steps\", false);\n      for (myMajorStep = 0; myMajorStep < myGenerationPlan.getStepCount(); myMajorStep++) {\n        if (myLogger.needsInfo()) {\n          myLogger.info(\"executing step \" + (myMajorStep + 1));\n        }\n        //ttrace.push(\"step \" + (myMajorStep + 1), false);\n        currOutput = executeMajorStep(currInputModel);\n        //ttrace.pop();\n        if (currOutput == null || myLogger.getErrorCount() > 0) {\n          break;\n        }\n        if (myGenerationPlan.getMappingConfigurations(myMajorStep).isEmpty()) {\n          break;\n        }\n        currInputModel = currOutput;\n      }\n      ttrace.pop();\n\n      // we need this in order to prevent memory leaks from nodes which are reported to message view\n      // since session objects might include objects with disposed class loaders\n      if (mySessionContext != null) {\n        mySessionContext.clearTransientObjects();\n      }\n\n      GenerationStatus generationStatus = new GenerationStatus(myOriginalInputModel.getSModel(), currOutput,\n        myDependenciesBuilder.getResult(myInvocationContext), myLogger.getErrorCount() > 0,\n        myLogger.getWarningCount() > 0, false);\n      success = generationStatus.isOk();\n      return generationStatus;\n    } catch (GenerationCanceledException gce) {\n      throw gce;\n    } catch (GenerationFailureException gfe) {\n      // FIXME\n      myLogger.error(gfe.getMessage());\n      myLogger.error(\"model \\\"\" + myOriginalInputModel.getSModelReference().getSModelFqName() + \"\\\" generation failed : \" + gfe);\n      return new GenerationStatus.ERROR(myOriginalInputModel.getSModel());\n    } catch (Throwable e) {\n      myLogger.handleException(e);\n      myLogger.error(\"model \\\"\" + myOriginalInputModel.getSModelReference().getSModelFqName() + \"\\\" generation failed : \" + e);\n      return new GenerationStatus.ERROR(myOriginalInputModel.getSModel());\n    } finally {\n      if(myNewCache != null) {\n        if(success) {\n          myNewCache.store();\n        } else {\n          myNewCache.remove();\n        }\n      }\n    }\n  }","commit_id":"3e09ef154c589bf841b3c4530a7ba0727402ce06","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean apply(boolean isPrimary) throws GenerationFailureException, GenerationCanceledException {\n    checkMonitorCanceled();\n    myAreMappingsReady = false;\n\n    ttrace.push(\"reductions\", false);\n    applyReductions(isPrimary);\n    ttrace.pop();\n\n    myAreMappingsReady = true;\n\n    // optimization: no changes? quit\n    if (!isPrimary && !myChanged && myDelayedChanges.isEmpty() && !myRuleManager.hasWeavings()) {\n      return false;\n    }\n\n    // publish roots\n    for (SNode outputRoot : myOutputRoots) {\n      myOutputModel.addRoot(outputRoot);\n    }\n\n    // reload \"required\" roots from cache\n    myDependenciesBuilder.reloadRequired(myMappings);\n\n    // weaving\n    ttrace.push(\"weavings\", false);\n    applyWeaving_MappingRules();\n    ttrace.pop();\n\n    // optimization: no changes? quit\n    if (!isPrimary && !myChanged && myDelayedChanges.isEmpty()) {\n      return false;\n    }\n\n    // execute mapper in all $MAP_SRC$/$MAP_SRCL$\n    ttrace.push(\"delayed mappings\", false);\n    myDelayedChanges.doAllChanges();\n    ttrace.pop();\n\n    if (myChanged || isPrimary) {\n      // new unresolved references could appear after applying reduction rules (all delayed changes should be done before this, like replacing children)\n      ttrace.push(\"restoring references\", false);\n      revalidateAllReferences();\n      ttrace.pop();\n      checkMonitorCanceled();\n\n      // advance blocked reduction data\n      getBlockedReductionsData().advanceStep();\n    }\n    return myChanged;\n  }","id":56340,"modified_method":"public boolean apply(boolean isPrimary) throws GenerationFailureException, GenerationCanceledException {\n    checkMonitorCanceled();\n    myAreMappingsReady = false;\n\n    ttrace.push(\"reductions\", false);\n    applyReductions(isPrimary);\n    ttrace.pop();\n\n    myAreMappingsReady = true;\n\n    // optimization: no changes? quit\n    if (!isPrimary && !myChanged && myDelayedChanges.isEmpty() && !myRuleManager.hasWeavings()) {\n      return false;\n    }\n\n    // publish roots\n    for (SNode outputRoot : myOutputRoots) {\n      myOutputModel.addRoot(outputRoot);\n    }\n\n    // reload \"required\" roots from cache\n    ttrace.push(\"reloading roots from cache\", false);\n    myDependenciesBuilder.reloadRequired(myMappings);\n    ttrace.pop();\n\n    // weaving\n    ttrace.push(\"weavings\", false);\n    applyWeaving_MappingRules();\n    ttrace.pop();\n\n    // optimization: no changes? quit\n    if (!isPrimary && !myChanged && myDelayedChanges.isEmpty()) {\n      return false;\n    }\n\n    // execute mapper in all $MAP_SRC$/$MAP_SRCL$\n    ttrace.push(\"delayed mappings\", false);\n    myDelayedChanges.doAllChanges();\n    ttrace.pop();\n\n    if (myChanged || isPrimary) {\n      // new unresolved references could appear after applying reduction rules (all delayed changes should be done before this, like replacing children)\n      ttrace.push(\"restoring references\", false);\n      revalidateAllReferences();\n      ttrace.pop();\n      checkMonitorCanceled();\n\n      // advance blocked reduction data\n      getBlockedReductionsData().advanceStep();\n    }\n    return myChanged;\n  }","commit_id":"3e09ef154c589bf841b3c4530a7ba0727402ce06","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n   public ContainerTranslationStatistics getStatistics(String projectSlug, String iterationSlug, boolean includeDetails, boolean includeWordStats, String[] locales)\n   {\n      LocaleId[] localeIds;\n\n      // if no locales are specified, search in all locales\n      if (locales.length == 0)\n      {\n         List<HLocale> iterationLocales = localeServiceImpl.getSupportedLangugeByProjectIteration(projectSlug, iterationSlug);\n         localeIds = new LocaleId[iterationLocales.size()];\n         for (int i = 0, iterationLocalesSize = iterationLocales.size(); i < iterationLocalesSize; i++)\n         {\n            HLocale loc = iterationLocales.get(i);\n            localeIds[i] = loc.getLocaleId();\n         }\n      }\n      else\n      {\n         localeIds = new LocaleId[locales.length];\n         for (int i = 0; i < locales.length; i++)\n         {\n            localeIds[i] = new LocaleId(locales[i]);\n         }\n      }\n\n      HProjectIteration iteration = projectIterationDAO.getBySlug(projectSlug, iterationSlug);\n\n      if (iteration == null)\n      {\n         throw new NoSuchEntityException(projectSlug + \"/\" + iterationSlug);\n      }\n\n      Map<String, TransUnitWords> wordIterationStats = projectIterationDAO.getAllWordStatsStatistics(iteration.getId());\n      Map<String, TransUnitCount> transUnitIterationStats = projectIterationDAO.getAllStatisticsForContainer(iteration.getId());\n\n      ContainerTranslationStatistics iterationStats = new ContainerTranslationStatistics();\n      iterationStats.setId(iterationSlug);\n      iterationStats.addRef(new Link(URI.create(zPathService.generatePathForProjectIteration(iteration)), \"statSource\", \"PROJ_ITER\"));\n      long iterationTotalMssgs = projectIterationDAO.getTotalCountForIteration(iteration.getId());\n      long iterationTotalWords = projectIterationDAO.getTotalWordCountForIteration(iteration.getId());\n\n      for (LocaleId locId : localeIds)\n      {\n         // word level stats\n         TransUnitWords wordCount = wordIterationStats.get(locId.getId());\n         TranslationStatistics wordStats;\n\n         if (wordCount == null)\n         {\n            wordCount = new TransUnitWords(0, 0, (int) iterationTotalWords);\n         }\n         wordStats = getWordsStats(wordCount, locId);\n         wordStats.setRemainingHours(getRemainingHours(wordCount.get(ContentState.NeedReview), wordCount.get(ContentState.New)));\n         iterationStats.addStats(wordStats);\n\n         // trans unit level stats\n         TransUnitCount count = transUnitIterationStats.get(locId.getId());\n         TranslationStatistics transUnitStats;\n\n         if (count == null)\n         {\n            count = new TransUnitCount(0, 0, (int) iterationTotalMssgs);\n         }\n         transUnitStats = getMessageStats(count, locId);\n         transUnitStats.setRemainingHours(getRemainingHours(wordCount.get(ContentState.NeedReview), wordCount.get(ContentState.New)));\n         iterationStats.addStats(transUnitStats);\n      }\n\n      // TODO Do in a single query\n      if (includeDetails)\n      {\n         for (String docId : iteration.getDocuments().keySet())\n         {\n            iterationStats.addDetailedStats(this.getStatistics(projectSlug, iterationSlug, docId, includeWordStats, locales));\n         }\n      }\n\n      return iterationStats;\n   }","id":56341,"modified_method":"@Override\n   public ContainerTranslationStatistics getStatistics(String projectSlug, String iterationSlug, boolean includeDetails, boolean includeWordStats, String[] locales)\n   {\n      LocaleId[] localeIds;\n\n      // if no locales are specified, search in all locales\n      if (locales.length == 0)\n      {\n         List<HLocale> iterationLocales = localeServiceImpl.getSupportedLangugeByProjectIteration(projectSlug, iterationSlug);\n         localeIds = new LocaleId[iterationLocales.size()];\n         for (int i = 0, iterationLocalesSize = iterationLocales.size(); i < iterationLocalesSize; i++)\n         {\n            HLocale loc = iterationLocales.get(i);\n            localeIds[i] = loc.getLocaleId();\n         }\n      }\n      else\n      {\n         localeIds = new LocaleId[locales.length];\n         for (int i = 0; i < locales.length; i++)\n         {\n            localeIds[i] = new LocaleId(locales[i]);\n         }\n      }\n\n      HProjectIteration iteration = projectIterationDAO.getBySlug(projectSlug, iterationSlug);\n\n      if (iteration == null)\n      {\n         throw new NoSuchEntityException(projectSlug + \"/\" + iterationSlug);\n      }\n\n      Map<String, TransUnitCount> transUnitIterationStats = projectIterationDAO.getAllStatisticsForContainer(iteration.getId());\n      Map<String, TransUnitWords> wordIterationStats = null;\n      if( includeWordStats )\n      {\n         wordIterationStats = projectIterationDAO.getAllWordStatsStatistics(iteration.getId());\n      }\n      ContainerTranslationStatistics iterationStats = new ContainerTranslationStatistics();\n      iterationStats.setId(iterationSlug);\n      iterationStats.addRef(new Link(URI.create(zPathService.generatePathForProjectIteration(iteration)), \"statSource\", \"PROJ_ITER\"));\n      long iterationTotalMssgs = projectIterationDAO.getTotalCountForIteration(iteration.getId());\n      long iterationTotalWords = projectIterationDAO.getTotalWordCountForIteration(iteration.getId());\n\n      for (LocaleId locId : localeIds)\n      {\n         // trans unit level stats\n         TransUnitCount count = transUnitIterationStats.get( locId.getId() );\n         // Stats might not return anything if nothing is translated\n         if( count == null )\n         {\n            count = new TransUnitCount(0, 0, (int) iterationTotalMssgs);\n         }\n         TranslationStatistics transUnitStats = getMessageStats(count, locId);\n         transUnitStats.setRemainingHours(getRemainingHours(count.get(ContentState.NeedReview), count.get(ContentState.New)));\n         iterationStats.addStats(transUnitStats);\n\n         // word level stats\n         if( includeWordStats )\n         {\n            TransUnitWords wordCount = wordIterationStats.get(locId.getId());\n            if( wordCount == null )\n            {\n               wordCount = new TransUnitWords(0, 0, (int) iterationTotalWords);\n            }\n            TranslationStatistics wordsStats = getWordsStats(wordCount, locId);\n            wordsStats.setRemainingHours(getRemainingHours(wordCount.get(ContentState.NeedReview), wordCount.get(ContentState.New)));\n            iterationStats.addStats(wordsStats);\n         }\n      }\n\n      // TODO Do in a single query\n      if( includeDetails )\n      {\n         for( String docId : iteration.getDocuments().keySet() )\n         {\n            iterationStats.addDetailedStats(\n                  this.getStatistics(projectSlug, iterationSlug, docId, includeWordStats, locales)\n            );\n         }\n      }\n\n      return iterationStats;\n   }","commit_id":"4ed20fea576d4dcd959e9a9b29d179442d5ffb0c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public ContainerTranslationStatistics getStatistics(String projectSlug, String iterationSlug, String docId, boolean includeWordStats, String[] locales)\n   {\n      LocaleId[] localeIds;\n\n      // if no locales are specified, search in all locales\n      if (locales.length == 0)\n      {\n         List<HLocale> iterationLocales = localeServiceImpl.getSupportedLangugeByProjectIteration(projectSlug, iterationSlug);\n         localeIds = new LocaleId[iterationLocales.size()];\n         for (int i = 0, iterationLocalesSize = iterationLocales.size(); i < iterationLocalesSize; i++)\n         {\n            HLocale loc = iterationLocales.get(i);\n            localeIds[i] = loc.getLocaleId();\n         }\n      }\n      else\n      {\n         localeIds = new LocaleId[locales.length];\n         for (int i = 0; i < locales.length; i++)\n         {\n            localeIds[i] = new LocaleId(locales[i]);\n         }\n      }\n\n      HDocument document = documentDAO.getByProjectIterationAndDocId(projectSlug, iterationSlug, docId);\n\n      if (document == null)\n      {\n         throw new NoSuchEntityException(projectSlug + \"/\" + iterationSlug + \"/\" + docId);\n      }\n\n      Map<LocaleId, TranslationStats> statsMap = documentDAO.getStatistics(document.getId(), localeIds);\n\n      ContainerTranslationStatistics docStats = new ContainerTranslationStatistics();\n      docStats.setId(docId);\n      docStats.addRef(new Link(URI.create(zPathService.generatePathForDocument(document)), \"statSource\", \"DOC\"));\n\n      long docTotalMssgs = documentDAO.getTotalCountForDocument(document);\n      long docTotalWords = documentDAO.getTotalWordCountForDocument(document);\n\n      for (LocaleId locale : localeIds)\n      {\n         TranslationStats stats = statsMap.get(locale);\n         TransUnitCount count;\n         TransUnitWords wordCount;\n\n         if (stats == null)\n         {\n            count = new TransUnitCount(0, 0, (int) docTotalMssgs);\n            wordCount = new TransUnitWords(0, 0, (int) docTotalWords);\n         }\n         else\n         {\n            count = stats.getUnitCount();\n            wordCount = stats.getWordCount();\n         }\n\n         // word level stats\n         TranslationStatistics wordStats = getWordsStats(wordCount, locale);\n         wordStats.setRemainingHours(getRemainingHours(wordCount.get(ContentState.NeedReview), wordCount.get(ContentState.New)));\n         docStats.addStats(wordStats);\n\n         // trans unit level stats\n         TranslationStatistics transUnitStats = getMessageStats(count, locale);\n         transUnitStats.setRemainingHours(getRemainingHours(wordCount.get(ContentState.NeedReview), wordCount.get(ContentState.New)));\n         docStats.addStats(transUnitStats);\n      }\n\n      return docStats;\n   }","id":56342,"modified_method":"@Override\n   public ContainerTranslationStatistics getStatistics(String projectSlug, String iterationSlug, String docId, boolean includeWordStats, String[] locales)\n   {\n      LocaleId[] localeIds;\n\n      // if no locales are specified, search in all locales\n      if (locales.length == 0)\n      {\n         List<HLocale> iterationLocales = localeServiceImpl.getSupportedLangugeByProjectIteration(projectSlug, iterationSlug);\n         localeIds = new LocaleId[iterationLocales.size()];\n         for (int i = 0, iterationLocalesSize = iterationLocales.size(); i < iterationLocalesSize; i++)\n         {\n            HLocale loc = iterationLocales.get(i);\n            localeIds[i] = loc.getLocaleId();\n         }\n      }\n      else\n      {\n         localeIds = new LocaleId[locales.length];\n         for (int i = 0; i < locales.length; i++)\n         {\n            localeIds[i] = new LocaleId(locales[i]);\n         }\n      }\n\n      HDocument document = documentDAO.getByProjectIterationAndDocId(projectSlug, iterationSlug, docId);\n\n      if (document == null)\n      {\n         throw new NoSuchEntityException(projectSlug + \"/\" + iterationSlug + \"/\" + docId);\n      }\n\n      Map<LocaleId, TranslationStats> statsMap = documentDAO.getStatistics(document.getId(), localeIds);\n\n      ContainerTranslationStatistics docStats = new ContainerTranslationStatistics();\n      docStats.setId(docId);\n      docStats.addRef(new Link(URI.create(zPathService.generatePathForDocument(document)), \"statSource\", \"DOC\"));\n\n      long docTotalMssgs = documentDAO.getTotalCountForDocument(document);\n\n      long docTotalWords = 0;\n      if (includeWordStats)\n      {\n         docTotalWords = documentDAO.getTotalWordCountForDocument(document);\n      }\n\n      for (LocaleId locale : localeIds)\n      {\n         TranslationStats stats = statsMap.get(locale);\n\n         // trans unit level stats\n         TransUnitCount count;\n         if (stats == null)\n         {\n            count = new TransUnitCount(0, 0, (int) docTotalMssgs);\n         }\n         else\n         {\n            count = stats.getUnitCount();\n         }\n         TranslationStatistics transUnitStats = getMessageStats(count, locale);\n         transUnitStats.setRemainingHours(getRemainingHours(count.get(ContentState.NeedReview), count.get(ContentState.New)));\n         docStats.addStats(transUnitStats);\n\n         // word level stats\n         if( includeWordStats )\n         {\n            TransUnitWords wordCount;\n            if (stats == null)\n            {\n               wordCount = new TransUnitWords(0, 0, (int) docTotalWords);\n            }\n            else\n            {\n               wordCount = stats.getWordCount();\n            }\n            TranslationStatistics wordsStats = getWordsStats(wordCount, locale);\n            wordsStats.setRemainingHours(getRemainingHours(wordCount.get(ContentState.NeedReview), wordCount.get(ContentState.New)));\n            docStats.addStats(wordsStats);\n         }\n      }\n\n      return docStats;\n   }","commit_id":"4ed20fea576d4dcd959e9a9b29d179442d5ffb0c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void getSimpleIterationStatisticsForAllLocales()\n   {\n      StatisticsServiceImpl statisticsService = seam.autowire(StatisticsServiceImpl.class);\n      ContainerTranslationStatistics stats =\n            statisticsService.getStatistics(\"sample-project\", \"1.0\", false, false, new String[]{});\n\n      // Make sure the id matches\n      assertThat(stats.getId(), is(\"1.0\"));\n      // Make sure there are links\n      assertThat(stats.getRefs().size(), greaterThan(0));\n\n      // No detailed stats\n      assertThat(stats.getDetailedStats(), nullValue());\n\n      assertThat(stats.getStats().get(0).getUnit(), is(TranslationStatistics.StatUnit.WORD));\n      assertThat(stats.getStats().get(1).getUnit(), is(TranslationStatistics.StatUnit.MESSAGE));\n\n      // No word level stats\n      for( TranslationStatistics transStat : stats.getStats() )\n      {\n         // make sure counts are sane\n         assertThat(transStat.getNeedReview() + transStat.getTranslated() + transStat.getUntranslated(), equalTo( transStat.getTotal() ));\n      }\n   }","id":56343,"modified_method":"@Test\n   public void getSimpleIterationStatisticsForAllLocales()\n   {\n      StatisticsServiceImpl statisticsService = seam.autowire(StatisticsServiceImpl.class);\n      ContainerTranslationStatistics stats =\n            statisticsService.getStatistics(\"sample-project\", \"1.0\", false, false, new String[]{});\n\n      // Make sure the id matches\n      assertThat(stats.getId(), is(\"1.0\"));\n      // Make sure there are links\n      assertThat(stats.getRefs().size(), greaterThan(0));\n\n      // No detailed stats\n      assertThat(stats.getDetailedStats(), nullValue());\n\n      assertThat(stats.getStats().get(0).getUnit(), is(TranslationStatistics.StatUnit.MESSAGE));\n\n      for( TranslationStatistics transStat : stats.getStats() )\n      {\n         // Check that there are no word level stats\n         assertThat(transStat.getUnit(), not(TranslationStatistics.StatUnit.WORD));\n\n         // make sure counts are sane\n         assertThat(transStat.getNeedReview() + transStat.getTranslated() + transStat.getUntranslated(), equalTo( transStat.getTotal() ));\n      }\n   }","commit_id":"4ed20fea576d4dcd959e9a9b29d179442d5ffb0c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void getSimpleDocumentStatisticsForAllLocales()\n   {\n      StatisticsServiceImpl statisticsService = seam.autowire(StatisticsServiceImpl.class);\n      ContainerTranslationStatistics stats =\n            statisticsService.getStatistics(\"sample-project\", \"1.0\", \"my/path/document.txt\", false, new String[]{});\n\n      // Make sure the id matches\n      assertThat(stats.getId(), is(\"my/path/document.txt\"));\n      // Make sure there are links\n      assertThat(stats.getRefs().size(), greaterThan(0));\n\n      // No detailed stats\n      assertThat(stats.getDetailedStats(), nullValue());\n\n      assertThat(stats.getStats().get(0).getUnit(), is(TranslationStatistics.StatUnit.WORD));\n      assertThat(stats.getStats().get(1).getUnit(), is(TranslationStatistics.StatUnit.MESSAGE));\n\n      // No word level stats\n      for( TranslationStatistics transStat : stats.getStats() )\n      {\n         // make sure counts are sane\n         assertThat(transStat.getNeedReview() + transStat.getTranslated() + transStat.getUntranslated(), equalTo( transStat.getTotal() ));\n      }\n   }","id":56344,"modified_method":"@Test\n   public void getSimpleDocumentStatisticsForAllLocales()\n   {\n      StatisticsServiceImpl statisticsService = seam.autowire(StatisticsServiceImpl.class);\n      ContainerTranslationStatistics stats =\n            statisticsService.getStatistics(\"sample-project\", \"1.0\", \"my/path/document.txt\", false, new String[]{});\n\n      // Make sure the id matches\n      assertThat(stats.getId(), is(\"my/path/document.txt\"));\n      // Make sure there are links\n      assertThat(stats.getRefs().size(), greaterThan(0));\n\n      // No detailed stats\n      assertThat(stats.getDetailedStats(), nullValue());\n\n      assertThat(stats.getStats().get(0).getUnit(), is(TranslationStatistics.StatUnit.MESSAGE));\n\n\n      for( TranslationStatistics transStat : stats.getStats() )\n      {\n         // Check that there are no word level stats\n         assertThat(transStat.getUnit(), not(TranslationStatistics.StatUnit.WORD));\n\n         // make sure counts are sane\n         assertThat(transStat.getNeedReview() + transStat.getTranslated() + transStat.getUntranslated(), equalTo( transStat.getTotal() ));\n      }\n   }","commit_id":"4ed20fea576d4dcd959e9a9b29d179442d5ffb0c","url":"https://github.com/zanata/zanata-server"},{"original_method":"private static void loadDirectoryProject(MockProject project, VirtualFile projectDir) throws IOException, JDOMException,\n                                                                                           InvalidDataException {\n    VirtualFile dotIdea = projectDir.findChild(Project.DIRECTORY_STORE_FOLDER);\n    if (dotIdea == null)\n      throw new FileNotFoundException(\"Missing '\" + Project.DIRECTORY_STORE_FOLDER + \"' in \" + projectDir.getPath());\n\n    VirtualFile modulesXml = dotIdea.findChild(\"modules.xml\");\n    if (modulesXml == null)\n      throw new FileNotFoundException(\"Missing 'modules.xml' in \" + dotIdea.getPath());\n\n    StateMap storageData = loadStorageFile(project, modulesXml);\n    final Element moduleManagerState = storageData.getState(\"ProjectModuleManager\");\n    if (moduleManagerState == null) {\n      throw new JDOMException(\"cannot find ProjectModuleManager state in modules.xml\");\n    }\n    final CoreModuleManager moduleManager = (CoreModuleManager)ModuleManager.getInstance(project);\n    moduleManager.loadState(moduleManagerState);\n\n    VirtualFile miscXml = dotIdea.findChild(\"misc.xml\");\n    if (miscXml == null)\n      throw new FileNotFoundException(\"Missing 'misc.xml' in \" + dotIdea.getPath());\n    storageData = loadStorageFile(project, miscXml);\n    final Element projectRootManagerState = storageData.getState(\"ProjectRootManager\");\n    if (projectRootManagerState == null) {\n      throw new JDOMException(\"cannot find ProjectRootManager state in misc.xml\");\n    }\n    ((ProjectRootManagerImpl) ProjectRootManager.getInstance(project)).loadState(projectRootManagerState);\n\n    VirtualFile libraries = dotIdea.findChild(\"libraries\");\n    if (libraries != null) {\n      DirectoryStorageData data = new DirectoryStorageData();\n      data.loadFrom(libraries, PathMacroManager.getInstance(project).createTrackingSubstitutor());\n      final Element libraryTable = DefaultStateSerializer.deserializeState(data.getCompositeStateAndArchive(\"libraryTable\", new ProjectLibraryTable.LibraryStateSplitter()), Element.class, null);\n      ((LibraryTableBase) ProjectLibraryTable.getInstance(project)).loadState(libraryTable);\n    }\n\n    moduleManager.loadModules();\n    project.projectOpened();\n  }","id":56345,"modified_method":"private static void loadDirectoryProject(MockProject project, VirtualFile projectDir) throws IOException, JDOMException,\n                                                                                           InvalidDataException {\n    VirtualFile dotIdea = projectDir.findChild(Project.DIRECTORY_STORE_FOLDER);\n    if (dotIdea == null)\n      throw new FileNotFoundException(\"Missing '\" + Project.DIRECTORY_STORE_FOLDER + \"' in \" + projectDir.getPath());\n\n    VirtualFile modulesXml = dotIdea.findChild(\"modules.xml\");\n    if (modulesXml == null)\n      throw new FileNotFoundException(\"Missing 'modules.xml' in \" + dotIdea.getPath());\n\n    StateMap storageData = loadStorageFile(project, modulesXml);\n    final Element moduleManagerState = storageData.getState(\"ProjectModuleManager\");\n    if (moduleManagerState == null) {\n      throw new JDOMException(\"cannot find ProjectModuleManager state in modules.xml\");\n    }\n    final CoreModuleManager moduleManager = (CoreModuleManager)ModuleManager.getInstance(project);\n    moduleManager.loadState(moduleManagerState);\n\n    VirtualFile miscXml = dotIdea.findChild(\"misc.xml\");\n    if (miscXml == null)\n      throw new FileNotFoundException(\"Missing 'misc.xml' in \" + dotIdea.getPath());\n    storageData = loadStorageFile(project, miscXml);\n    final Element projectRootManagerState = storageData.getState(\"ProjectRootManager\");\n    if (projectRootManagerState == null) {\n      throw new JDOMException(\"cannot find ProjectRootManager state in misc.xml\");\n    }\n    ((ProjectRootManagerImpl) ProjectRootManager.getInstance(project)).loadState(projectRootManagerState);\n\n    VirtualFile libraries = dotIdea.findChild(\"libraries\");\n    if (libraries != null) {\n      DirectoryStorageData data = DirectoryStorageData.loadFrom(libraries, PathMacroManager.getInstance(project).createTrackingSubstitutor());\n      final Element libraryTable = DefaultStateSerializer.deserializeState(data.getCompositeStateAndArchive(\"libraryTable\", new ProjectLibraryTable.LibraryStateSplitter()), Element.class, null);\n      ((LibraryTableBase) ProjectLibraryTable.getInstance(project)).loadState(libraryTable);\n    }\n\n    moduleManager.loadModules();\n    project.projectOpened();\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void save() throws IOException {\n      VirtualFile dir = storage.getVirtualFile();\n      if (copiedStorageData.isEmpty()) {\n        if (dir != null && dir.exists()) {\n          StorageUtil.deleteFile(this, dir);\n        }\n        storage.storageDataRef.set(copiedStorageData);\n        return;\n      }\n\n      if (dir == null || !dir.isValid()) {\n        dir = StorageUtil.createDir(storage.myDir, this);\n      }\n\n      if (!dirtyFileNames.isEmpty()) {\n        saveStates(dir);\n      }\n      if (dir.exists() && !removedFileNames.isEmpty()) {\n        deleteFiles(dir);\n      }\n\n      storage.myVirtualFile = dir;\n      storage.storageDataRef.set(copiedStorageData);\n    }","id":56346,"modified_method":"@Override\n    public void save() throws IOException {\n      VirtualFile dir = storage.getVirtualFile();\n      if (copiedStorageData.isEmpty()) {\n        if (dir != null && dir.exists()) {\n          StorageUtil.deleteFile(this, dir);\n        }\n        storage.storageDataRef.set(DirectoryStorageData.fromMap(copiedStorageData));\n        return;\n      }\n\n      if (dir == null || !dir.isValid()) {\n        dir = StorageUtil.createDir(storage.myDir, this);\n      }\n\n      if (!dirtyFileNames.isEmpty()) {\n        saveStates(dir);\n      }\n      if (dir.exists() && !removedFileNames.isEmpty()) {\n        deleteFiles(dir);\n      }\n\n      storage.myVirtualFile = dir;\n      storage.storageDataRef.set(DirectoryStorageData.fromMap(copiedStorageData));\n    }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doSetState(@NotNull String componentName, @Nullable String fileName, @Nullable Element subState) {\n      if (copiedStorageData == null) {\n        copiedStorageData = DirectoryStorageData.setStateAndCloneIfNeed(componentName, fileName, subState, originalStorageData);\n        if (copiedStorageData != null && fileName != null) {\n          dirtyFileNames.add(fileName);\n        }\n      }\n      else if (copiedStorageData.setState(componentName, fileName, subState) != null && fileName != null) {\n        dirtyFileNames.add(fileName);\n      }\n    }","id":56347,"modified_method":"private void doSetState(@NotNull String componentName, @Nullable String fileName, @Nullable Element subState) {\n      if (copiedStorageData == null) {\n        copiedStorageData = DirectoryStorageData.setStateAndCloneIfNeed(componentName, fileName, subState, originalStorageData);\n        if (copiedStorageData != null && fileName != null) {\n          dirtyFileNames.add(fileName);\n        }\n      }\n      else if (DirectoryStorageData.setState(copiedStorageData, componentName, fileName, subState) != null && fileName != null) {\n        dirtyFileNames.add(fileName);\n      }\n    }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    protected void setSerializedState(@NotNull Object component, @NotNull String componentName, @Nullable Element element) {\n      removedFileNames.addAll(originalStorageData.getFileNames(componentName));\n      if (JDOMUtil.isEmpty(element)) {\n        doSetState(componentName, null, null);\n      }\n      else {\n        for (Pair<Element, String> pair : storage.mySplitter.splitState(element)) {\n          removedFileNames.remove(pair.second);\n          doSetState(componentName, pair.second, pair.first);\n        }\n\n        if (!removedFileNames.isEmpty()) {\n          for (String fileName : removedFileNames) {\n            doSetState(componentName, fileName, null);\n          }\n        }\n      }\n    }","id":56348,"modified_method":"@Override\n    protected void setSerializedState(@NotNull Object component, @NotNull String componentName, @Nullable Element element) {\n      ContainerUtil.addAll(removedFileNames, originalStorageData.getFileNames(componentName));\n      if (JDOMUtil.isEmpty(element)) {\n        doSetState(componentName, null, null);\n      }\n      else {\n        for (Pair<Element, String> pair : storage.mySplitter.splitState(element)) {\n          removedFileNames.remove(pair.second);\n          doSetState(componentName, pair.second, pair.first);\n        }\n\n        if (!removedFileNames.isEmpty()) {\n          for (String fileName : removedFileNames) {\n            doSetState(componentName, fileName, null);\n          }\n        }\n      }\n    }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  protected DirectoryStorageData loadData() {\n    DirectoryStorageData storageData = new DirectoryStorageData();\n    storageData.loadFrom(getVirtualFile(), myPathMacroSubstitutor);\n    return storageData;\n  }","id":56349,"modified_method":"@NotNull\n  @Override\n  protected DirectoryStorageData loadData() {\n    return DirectoryStorageData.loadFrom(getVirtualFile(), myPathMacroSubstitutor);\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void saveStates(@NotNull final VirtualFile dir) {\n      final Element storeElement = new Element(StateMap.COMPONENT);\n\n      for (final String componentName : copiedStorageData.getComponentNames()) {\n        copiedStorageData.processComponent(componentName, new PairConsumer<String, Object>() {\n          @Override\n          public void consume(String fileName, Object state) {\n            if (!dirtyFileNames.contains(fileName)) {\n              return;\n            }\n\n            Element element = null;\n            try {\n              element = copiedStorageData.stateToElement(fileName, state);\n              if (storage.myPathMacroSubstitutor != null) {\n                storage.myPathMacroSubstitutor.collapsePaths(element);\n              }\n\n              storeElement.setAttribute(StateMap.NAME, componentName);\n              storeElement.addContent(element);\n\n              VirtualFile file = StorageUtil.getFile(fileName, dir, MySaveSession.this);\n              // we don't write xml prolog due to historical reasons (and should not in any case)\n              StorageUtil.writeFile(null, MySaveSession.this, file, storeElement,\n                                    LineSeparator.fromString(file.exists() ? StorageUtil.loadFile(file).second : SystemProperties.getLineSeparator()), false);\n            }\n            catch (IOException e) {\n              LOG.error(e);\n            }\n            finally {\n              if (element != null) {\n                element.detach();\n              }\n            }\n          }\n        });\n      }\n    }","id":56350,"modified_method":"private void saveStates(@NotNull final VirtualFile dir) {\n      final Element storeElement = new Element(StateMap.COMPONENT);\n\n      for (Map.Entry<String, Map<String, Object>> componentNameToFileNameToStates : copiedStorageData.entrySet()) {\n        for (Map.Entry<String, Object> entry : componentNameToFileNameToStates.getValue().entrySet()) {\n          String fileName = entry.getKey();\n          Object state = entry.getValue();\n\n          if (!dirtyFileNames.contains(fileName)) {\n            return;\n          }\n\n          Element element = null;\n          try {\n            element = StateMap.stateToElement(fileName, state, Collections.<String, Element>emptyMap());\n            if (storage.myPathMacroSubstitutor != null) {\n              storage.myPathMacroSubstitutor.collapsePaths(element);\n            }\n\n            storeElement.setAttribute(StateMap.NAME, componentNameToFileNameToStates.getKey());\n            storeElement.addContent(element);\n\n            VirtualFile file = StorageUtil.getFile(fileName, dir, this);\n            // we don't write xml prolog due to historical reasons (and should not in any case)\n            StorageUtil.writeFile(null, this, file, storeElement,\n                                  LineSeparator.fromString(file.exists() ? StorageUtil.loadFile(file).second : SystemProperties.getLineSeparator()), false);\n          }\n          catch (IOException e) {\n            LOG.error(e);\n          }\n          finally {\n            if (element != null) {\n              element.detach();\n            }\n          }\n        }\n      }\n    }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void loadFrom(@Nullable VirtualFile dir, @Nullable TrackingPathMacroSubstitutor pathMacroSubstitutor) {\n    if (dir == null || !dir.exists()) {\n      return;\n    }\n\n    StringInterner interner = new StringInterner();\n    for (VirtualFile file : dir.getChildren()) {\n      // ignore system files like .DS_Store on Mac\n      if (!StringUtilRt.endsWithIgnoreCase(file.getNameSequence(), StateMap.DEFAULT_EXT)) {\n        continue;\n      }\n\n      try {\n        if (file.getLength() == 0) {\n          LOG.warn(\"Ignore empty file \" + file.getPath());\n          continue;\n        }\n\n        Element element = JDOMUtil.load(file.getInputStream());\n        String name = StateMap.getComponentNameIfValid(element);\n        if (name == null) {\n          continue;\n        }\n\n        if (!element.getName().equals(StateMap.COMPONENT)) {\n          LOG.error(\"Incorrect root tag name (\" + element.getName() + \") in \" + file.getPresentableUrl());\n          continue;\n        }\n\n        List<Element> elementChildren = element.getChildren();\n        if (elementChildren.isEmpty()) {\n          continue;\n        }\n\n        Element state = (Element)elementChildren.get(0).detach();\n        JDOMUtil.internElement(state, interner);\n        if (pathMacroSubstitutor != null) {\n          pathMacroSubstitutor.expandPaths(state);\n          pathMacroSubstitutor.addUnknownMacros(name, PathMacrosCollector.getMacroNames(state));\n        }\n        setState(name, file.getName(), state);\n      }\n      catch (Throwable e) {\n        LOG.warn(\"Unable to load state\", e);\n      }\n    }\n  }","id":56351,"modified_method":"@NotNull\n  public static DirectoryStorageData loadFrom(@Nullable VirtualFile dir, @Nullable TrackingPathMacroSubstitutor pathMacroSubstitutor) {\n    if (dir == null || !dir.exists()) {\n      return new DirectoryStorageData();\n    }\n\n    StringInterner interner = new StringInterner();\n    Map<String, Map<String, Object>> map = new THashMap<String, Map<String, Object>>();\n    for (VirtualFile file : dir.getChildren()) {\n      // ignore system files like .DS_Store on Mac\n      if (!StringUtilRt.endsWithIgnoreCase(file.getNameSequence(), StateMap.DEFAULT_EXT)) {\n        continue;\n      }\n\n      try {\n        if (file.getLength() == 0) {\n          LOG.warn(\"Ignore empty file \" + file.getPath());\n          continue;\n        }\n\n        Element element = JDOMUtil.load(file.getInputStream());\n        String name = StateMap.getComponentNameIfValid(element);\n        if (name == null) {\n          continue;\n        }\n\n        if (!element.getName().equals(StateMap.COMPONENT)) {\n          LOG.error(\"Incorrect root tag name (\" + element.getName() + \") in \" + file.getPresentableUrl());\n          continue;\n        }\n\n        List<Element> elementChildren = element.getChildren();\n        if (elementChildren.isEmpty()) {\n          continue;\n        }\n\n        Element state = (Element)elementChildren.get(0).detach();\n        JDOMUtil.internElement(state, interner);\n        if (pathMacroSubstitutor != null) {\n          pathMacroSubstitutor.expandPaths(state);\n          pathMacroSubstitutor.addUnknownMacros(name, PathMacrosCollector.getMacroNames(state));\n        }\n        setState(map, name, file.getName(), state);\n      }\n      catch (Throwable e) {\n        LOG.warn(\"Unable to load state\", e);\n      }\n    }\n    return fromMap(map);\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void clear() {\n    myStates.clear();\n  }","id":56352,"modified_method":"public void clear() {\n    states.clear();\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public DirectoryStorageData() {\n    this(new THashMap<String, StateMap>());\n  }","id":56353,"modified_method":"public DirectoryStorageData() {\n    this.states = new THashMap<String, StateMap>();\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void put(@NotNull String componentName, @NotNull String fileName, @NotNull Object state) {\n    StateMap fileToState = myStates.get(componentName);\n    if (fileToState == null) {\n      fileToState = new StateMap();\n      myStates.put(componentName, fileToState);\n    }\n    fileToState.put(fileName, state);\n  }","id":56354,"modified_method":"private static void put(@NotNull Map<String, Map<String, Object>> states, @NotNull String componentName, @NotNull String fileName, @NotNull Object state) {\n    Map<String, Object> fileToState = states.get(componentName);\n    if (fileToState == null) {\n      fileToState = new THashMap<String, Object>();\n      states.put(componentName, fileToState);\n    }\n    fileToState.put(fileName, state);\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public Set<String> getComponentNames() {\n    return myStates.keySet();\n  }","id":56355,"modified_method":"@NotNull\n  public Set<String> getComponentNames() {\n    return states.keySet();\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public Object setState(@NotNull String componentName, @Nullable String fileName, @Nullable Element newState) {\n    StateMap fileToState = myStates.get(componentName);\n    if (fileName == null || newState == null || JDOMUtil.isEmpty(newState)) {\n      if (fileToState == null) {\n        return null;\n      }\n      else if (fileName == null) {\n        return myStates.remove(componentName);\n      }\n      else {\n        Object oldState = fileToState.remove(fileName);\n        if (fileToState.isEmpty()) {\n          myStates.remove(componentName);\n        }\n        return oldState;\n      }\n    }\n\n    if (fileToState == null) {\n      fileToState = new StateMap();\n      fileToState.put(fileName, newState);\n      myStates.put(componentName, fileToState);\n    }\n    else {\n      Object oldState = fileToState.get(fileName);\n\n      byte[] newBytes = null;\n      if (oldState instanceof Element) {\n        if (JDOMUtil.areElementsEqual((Element)oldState, newState)) {\n          return null;\n        }\n      }\n      else if (oldState != null) {\n        newBytes = getNewByteIfDiffers(fileName, newState, (byte[])oldState);\n        if (newBytes == null) {\n          return null;\n        }\n      }\n\n      fileToState.put(fileName, newBytes == null ? newState : newBytes);\n    }\n    return newState;\n  }","id":56356,"modified_method":"@Nullable\n  public static Object setState(@NotNull Map<String, Map<String, Object>> states, @NotNull String componentName, @Nullable String fileName, @Nullable Element newState) {\n    Map<String, Object> fileToState = states.get(componentName);\n    if (fileName == null || newState == null || JDOMUtil.isEmpty(newState)) {\n      if (fileToState == null) {\n        return null;\n      }\n      else if (fileName == null) {\n        return states.remove(componentName);\n      }\n      else {\n        Object oldState = fileToState.remove(fileName);\n        if (fileToState.isEmpty()) {\n          states.remove(componentName);\n        }\n        return oldState;\n      }\n    }\n\n    if (fileToState == null) {\n      fileToState = new THashMap<String, Object>();\n      fileToState.put(fileName, newState);\n      states.put(componentName, fileToState);\n    }\n    else {\n      Object oldState = fileToState.get(fileName);\n\n      byte[] newBytes = null;\n      if (oldState instanceof Element) {\n        if (JDOMUtil.areElementsEqual((Element)oldState, newState)) {\n          return null;\n        }\n      }\n      else if (oldState != null) {\n        newBytes = getNewByteIfDiffers(fileName, newState, (byte[])oldState);\n        if (newBytes == null) {\n          return null;\n        }\n      }\n\n      fileToState.put(fileName, newBytes == null ? newState : newBytes);\n    }\n    return newState;\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean hasState(@NotNull String componentName) {\n    StateMap fileToState = myStates.get(componentName);\n    return fileToState != null && fileToState.hasStates();\n  }","id":56357,"modified_method":"@Override\n  public boolean hasState(@NotNull String componentName) {\n    StateMap fileToState = states.get(componentName);\n    return fileToState != null && fileToState.hasStates();\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private DirectoryStorageData(@NotNull Map<String, StateMap> states) {\n    myStates = states;\n  }","id":56358,"modified_method":"private DirectoryStorageData(@NotNull Map<String, StateMap> states) {\n    this.states = states;\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"boolean isEmpty() {\n    return myStates.isEmpty();\n  }","id":56359,"modified_method":"boolean isEmpty() {\n    return states.isEmpty();\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static DirectoryStorageData setStateAndCloneIfNeed(@NotNull String componentName,\n                                                            @Nullable String fileName,\n                                                            @Nullable Element newState,\n                                                            @NotNull DirectoryStorageData storageData) {\n    StateMap fileToState = storageData.myStates.get(componentName);\n    Object oldState = fileToState == null || fileName == null ? null : fileToState.get(fileName);\n    if (fileName == null || newState == null || JDOMUtil.isEmpty(newState)) {\n      if (fileName == null) {\n        if (fileToState == null) {\n          return null;\n        }\n      }\n      else if (oldState == null) {\n        return null;\n      }\n\n      DirectoryStorageData newStorageData = storageData.clone();\n      if (fileName == null) {\n        newStorageData.myStates.remove(componentName);\n      }\n      else {\n        StateMap clonedFileToState = newStorageData.myStates.get(componentName);\n        if (clonedFileToState.size() == 1) {\n          newStorageData.myStates.remove(componentName);\n        }\n        else {\n          clonedFileToState.remove(fileName);\n          if (clonedFileToState.isEmpty()) {\n            newStorageData.myStates.remove(componentName);\n          }\n        }\n      }\n      return newStorageData;\n    }\n\n    byte[] newBytes = null;\n    if (oldState instanceof Element) {\n      if (JDOMUtil.areElementsEqual((Element)oldState, newState)) {\n        return null;\n      }\n    }\n    else if (oldState != null) {\n      newBytes = getNewByteIfDiffers(componentName, newState, (byte[])oldState);\n      if (newBytes == null) {\n        return null;\n      }\n    }\n\n    DirectoryStorageData newStorageData = storageData.clone();\n    newStorageData.put(componentName, fileName, newBytes == null ? newState : newBytes);\n    return newStorageData;\n  }","id":56360,"modified_method":"@Nullable\n  public static Map<String, Map<String, Object>> setStateAndCloneIfNeed(@NotNull String componentName,\n                                                                        @Nullable String fileName,\n                                                                        @Nullable Element newState,\n                                                                        @NotNull DirectoryStorageData storageData) {\n    StateMap fileToState = storageData.states.get(componentName);\n    Object oldState = fileToState == null || fileName == null ? null : fileToState.get(fileName);\n    if (fileName == null || newState == null || JDOMUtil.isEmpty(newState)) {\n      if (fileName == null) {\n        if (fileToState == null) {\n          return null;\n        }\n      }\n      else if (oldState == null) {\n        return null;\n      }\n\n      Map<String, Map<String, Object>> newStorageData = storageData.toMap();\n      if (fileName == null) {\n        newStorageData.remove(componentName);\n      }\n      else {\n        Map<String, Object> clonedFileToState = newStorageData.get(componentName);\n        if (clonedFileToState.size() == 1) {\n          newStorageData.remove(componentName);\n        }\n        else {\n          clonedFileToState.remove(fileName);\n          if (clonedFileToState.isEmpty()) {\n            newStorageData.remove(componentName);\n          }\n        }\n      }\n      return newStorageData;\n    }\n\n    byte[] newBytes = null;\n    if (oldState instanceof Element) {\n      if (JDOMUtil.areElementsEqual((Element)oldState, newState)) {\n        return null;\n      }\n    }\n    else if (oldState != null) {\n      newBytes = getNewByteIfDiffers(componentName, newState, (byte[])oldState);\n      if (newBytes == null) {\n        return null;\n      }\n    }\n\n    Map<String, Map<String, Object>> newStorageData = storageData.toMap();\n    put(newStorageData, componentName, fileName, newBytes == null ? newState : newBytes);\n    return newStorageData;\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public Set<String> getFileNames(@NotNull String componentName) {\n    StateMap fileToState = myStates.get(componentName);\n    return fileToState == null || fileToState.isEmpty() ? Collections.<String>emptySet() : fileToState.keys();\n  }","id":56361,"modified_method":"@NotNull\n  String[] getFileNames(@NotNull String componentName) {\n    StateMap fileToState = states.get(componentName);\n    return fileToState == null || fileToState.isEmpty() ? ArrayUtil.EMPTY_STRING_ARRAY : fileToState.keys();\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public Object get(@NotNull String key) {\n    return states.get(key);\n  }","id":56362,"modified_method":"@Nullable\n  public Object get(@NotNull String key) {\n    int index = Arrays.binarySearch(names, key);\n    return index < 0 ? null : states.get(index);\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public static Element unarchiveState(@NotNull byte[] state) throws IOException, JDOMException {\n    return JDOMUtil.load(new SnappyInputStream(new ByteArrayInputStream(state)));\n  }","id":56363,"modified_method":"@NotNull\n  private static Element unarchiveState(@NotNull byte[] state) throws IOException, JDOMException {\n    return JDOMUtil.load(new SnappyInputStream(new ByteArrayInputStream(state)));\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public StateMap() {\n    states = ContainerUtil.newConcurrentMap();\n  }","id":56364,"modified_method":"public StateMap() {\n    this(new String[]{}, new AtomicReferenceArray<Object>(0));\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public Element getElement(@NotNull String key, @NotNull Map<String, Element> newLiveStates) throws IOException {\n    Object state = states.get(key);\n    return stateToElement(key, state, newLiveStates);\n  }","id":56365,"modified_method":"@NotNull\n  public Element getElement(@NotNull String key, @NotNull Map<String, Element> newLiveStates) throws IOException {\n    return stateToElement(key, get(key), newLiveStates);\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public Element getState(@NotNull String key) {\n    Object state = states.get(key);\n    return state instanceof Element ? (Element)state : null;\n  }","id":56366,"modified_method":"@Nullable\n  public Element getState(@NotNull String key) {\n    Object state = get(key);\n    return state instanceof Element ? (Element)state : null;\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public Set<String> keys() {\n    return states.keySet();\n  }","id":56367,"modified_method":"@NotNull\n  /**\n   * Sorted by name.\n   */\n  public String[] keys() {\n    return names;\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean hasState(@NotNull String key) {\n    return states.get(key) instanceof Element;\n  }","id":56368,"modified_method":"@Override\n  public boolean hasState(@NotNull String key) {\n    return get(key) instanceof Element;\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public Element getStateAndArchive(@NotNull String key) {\n    Object state = states.get(key);\n    if (!(state instanceof Element)) {\n      return null;\n    }\n\n    if (states.replace(key, state, archiveState((Element)state))) {\n      return (Element)state;\n    }\n    else {\n      return getStateAndArchive(key);\n    }\n  }","id":56369,"modified_method":"@Nullable\n  public Element getStateAndArchive(@NotNull String key) {\n    int index = Arrays.binarySearch(names, key);\n    if (index < 0) {\n      return null;\n    }\n\n    Object state = states.get(index);\n    if (!(state instanceof Element)) {\n      return null;\n    }\n\n    if (states.compareAndSet(index, state, archiveState((Element)state))) {\n      return (Element)state;\n    }\n    else {\n      return getStateAndArchive(key);\n    }\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void compare(@NotNull String key, @NotNull StateMap newStates, @NotNull Set<String> diffs) {\n    Object oldState = states.get(key);\n    Object newState = newStates.get(key);\n    if (oldState instanceof Element) {\n      if (!JDOMUtil.areElementsEqual((Element)oldState, (Element)newState)) {\n        diffs.add(key);\n      }\n    }\n    else {\n      assert newState != null;\n      if (getNewByteIfDiffers(key, newState, (byte[])oldState) != null) {\n        diffs.add(key);\n      }\n    }\n  }","id":56370,"modified_method":"public void compare(@NotNull String key, @NotNull StateMap newStates, @NotNull Set<String> diffs) {\n    Object oldState = get(key);\n    Object newState = newStates.get(key);\n    if (oldState instanceof Element) {\n      if (!JDOMUtil.areElementsEqual((Element)oldState, (Element)newState)) {\n        diffs.add(key);\n      }\n    }\n    else {\n      assert newState != null;\n      assert oldState != null;\n      if (getNewByteIfDiffers(key, newState, (byte[])oldState) != null) {\n        diffs.add(key);\n      }\n    }\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public static StateMap load(@NotNull Element rootElement, @Nullable PathMacroSubstitutor pathMacroSubstitutor, boolean intern) {\n    if (pathMacroSubstitutor != null) {\n      pathMacroSubstitutor.expandPaths(rootElement);\n    }\n\n    StateMap stateMap = new StateMap();\n    StringInterner interner = intern ? new StringInterner() : null;\n    for (Iterator<Element> iterator = rootElement.getChildren(COMPONENT).iterator(); iterator.hasNext(); ) {\n      Element element = iterator.next();\n      String name = getComponentNameIfValid(element);\n      if (name == null || !(element.getAttributes().size() > 1 || !element.getChildren().isEmpty())) {\n        continue;\n      }\n\n      iterator.remove();\n      if (interner != null) {\n        JDOMUtil.internElement(element, interner);\n      }\n\n      stateMap.states.put(name, element);\n\n      if (pathMacroSubstitutor instanceof TrackingPathMacroSubstitutor) {\n        ((TrackingPathMacroSubstitutor)pathMacroSubstitutor).addUnknownMacros(name, PathMacrosCollector.getMacroNames(element));\n      }\n\n      // remove only after \"getMacroNames\" - some PathMacroFilter requires element name attribute\n      element.removeAttribute(NAME);\n    }\n    return stateMap;\n  }","id":56371,"modified_method":"@NotNull\n  public static StateMap load(@NotNull Element rootElement, @Nullable PathMacroSubstitutor pathMacroSubstitutor, boolean intern) {\n    if (pathMacroSubstitutor != null) {\n      pathMacroSubstitutor.expandPaths(rootElement);\n    }\n\n    StringInterner interner = intern ? new StringInterner() : null;\n    List<Element> children = rootElement.getChildren(COMPONENT);\n    TreeMap<String, Element> map = new TreeMap<String, Element>();\n    for (Element element : children) {\n      String name = getComponentNameIfValid(element);\n      if (name == null || !(element.getAttributes().size() > 1 || !element.getChildren().isEmpty())) {\n        continue;\n      }\n\n      if (interner != null) {\n        JDOMUtil.internElement(element, interner);\n      }\n\n      map.put(name, element);\n\n      if (pathMacroSubstitutor instanceof TrackingPathMacroSubstitutor) {\n        ((TrackingPathMacroSubstitutor)pathMacroSubstitutor).addUnknownMacros(name, PathMacrosCollector.getMacroNames(element));\n      }\n\n      // remove only after \"getMacroNames\" - some PathMacroFilter requires element name attribute\n      element.removeAttribute(NAME);\n    }\n    return fromMap(map);\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isEmpty() {\n    return states.isEmpty();\n  }","id":56372,"modified_method":"public boolean isEmpty() {\n    return names.length == 0;\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean hasStates() {\n    if (states.isEmpty()) {\n      return false;\n    }\n\n    for (Object value : states.values()) {\n      if (value instanceof Element) {\n        return true;\n      }\n    }\n    return false;\n  }","id":56373,"modified_method":"public boolean hasStates() {\n    if (isEmpty()) {\n      return false;\n    }\n\n    for (int i = 0; i < names.length; i++) {\n      if (states.get(i) instanceof Element) {\n        return true;\n      }\n    }\n    return false;\n  }","commit_id":"4b2cd3b8c9c20b0de19e15e512841770c72bf835","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void generate() {\n        Clock clock = new Clock();\n        Map<String, TestClassResult> results = testResultsProvider.provideResults();\n        for (Map.Entry<String, TestClassResult> entry : results.entrySet()) {\n            String className = entry.getKey();\n            TestClassResult result = entry.getValue();\n\n            File file = new File(testResultsDir, \"TEST-\" + className + \".xml\");\n            Writer output = null;\n            try {\n                output = new BufferedWriter(new FileWriter(file));\n                saxWriter.write(className, result, output);\n            } catch (IOException e) {\n                throw new GradleException(\"Problems writing xml test results to file: \" + file, e);\n            } finally {\n                IOUtils.closeQuietly(output);\n            }\n        }\n        LOG.info(\"Finished generating test xml results (\" + clock.getTime() + \")\");\n    }","id":56374,"modified_method":"public void generate() {\n        Clock clock = new Clock();\n        Map<String, TestClassResult> results = testResultsProvider.provideResults();\n        for (Map.Entry<String, TestClassResult> entry : results.entrySet()) {\n            String className = entry.getKey();\n            TestClassResult result = entry.getValue();\n\n            File file = new File(testResultsDir, \"TEST-\" + className + \".xml\");\n            Writer output = null;\n            try {\n                output = new OutputStreamWriter(new BufferedOutputStream(new FileOutputStream(file)), \"UTF-8\");\n                saxWriter.write(className, result, output);\n            } catch (IOException e) {\n                throw new GradleException(\"Problems writing xml test results to file: \" + file, e);\n            } finally {\n                IOUtils.closeQuietly(output);\n            }\n        }\n        LOG.info(\"Finished generating test xml results (\" + clock.getTime() + \")\");\n    }","commit_id":"5125152d8c1f8a1e8ed8fade2a1e299f9391ce49","url":"https://github.com/gradle/gradle"},{"original_method":"public SaxJUnitXmlResultWriter(String hostName, TestResultsProvider testResultsProvider, XMLOutputFactory xmlOutputFactory) {\n        this.hostName = hostName;\n        this.testResultsProvider = testResultsProvider;\n        this.xmlOutputFactory = xmlOutputFactory;\n    }","id":56375,"modified_method":"public SaxJUnitXmlResultWriter(String hostName, TestResultsProvider testResultsProvider, XMLOutputFactory xmlOutputFactory) {\n        this.hostName = hostName;\n        this.testResultsProvider = testResultsProvider;\n    }","commit_id":"5125152d8c1f8a1e8ed8fade2a1e299f9391ce49","url":"https://github.com/gradle/gradle"},{"original_method":"public void write(String className, TestClassResult result, Writer output) throws IOException {\n        try {\n            XMLStreamWriter writer = xmlOutputFactory.createXMLStreamWriter(output);\n            writer.writeStartDocument(\"UTF-8\", \"1.0\");\n            writer.writeCharacters(\"\\n  \");\n            writer.writeStartElement(\"testsuite\");\n            writer.writeAttribute(\"name\", className);\n            writer.writeAttribute(\"tests\", String.valueOf(result.getTestsCount()));\n            writer.writeAttribute(\"failures\", String.valueOf(result.getFailuresCount()));\n            writer.writeAttribute(\"errors\", \"0\");\n            writer.writeAttribute(\"timestamp\", DateUtils.format(result.getStartTime(), DateUtils.ISO8601_DATETIME_PATTERN));\n            writer.writeAttribute(\"hostname\", hostName);\n            writer.writeAttribute(\"time\", String.valueOf(result.getDuration() / 1000.0));\n\n            writer.writeCharacters(\"\\n  \");\n            writer.writeEmptyElement(\"properties\");\n\n            writeTests(writer, result.getResults(), className);\n\n            writer.writeCharacters(\"\\n  \");\n            output.write(\"<system-out><![CDATA[\");\n            testResultsProvider.provideOutputs(className, TestOutputEvent.Destination.StdOut, output, new EscapeCDATA());\n            output.write(\"]]><\/system-out>\");\n\n            writer.writeCharacters(\"\\n  \");\n            output.write(\"<system-err><![CDATA[\");\n            testResultsProvider.provideOutputs(className, TestOutputEvent.Destination.StdErr, output, new EscapeCDATA());\n            output.write(\"]]><\/system-err>\\n\");\n\n            writer.writeEndElement();\n            writer.writeEndDocument();\n        } catch (XMLStreamException e) {\n            throw new RuntimeException(\"Problems writing the xml results for class: \" + className, e);\n        }\n    }","id":56376,"modified_method":"public void write(String className, TestClassResult result, Writer output) {\n        try {\n            SimpleXmlWriter writer = new SimpleXmlWriter(output);\n            writer.writeXmlDeclaration(\"UTF-8\", \"1.0\");\n            writer.writeCharacters(\"\\n  \");\n            writer.writeStartElement(new SimpleXmlWriter.Element(\"testsuite\")\n                .attribute(\"name\", className)\n                .attribute(\"tests\", String.valueOf(result.getTestsCount()))\n                .attribute(\"failures\", String.valueOf(result.getFailuresCount()))\n                .attribute(\"errors\", \"0\")\n                .attribute(\"timestamp\", DateUtils.format(result.getStartTime(), DateUtils.ISO8601_DATETIME_PATTERN))\n                .attribute(\"hostname\", hostName)\n                .attribute(\"time\", String.valueOf(result.getDuration() / 1000.0)));\n\n            //TODO SF the indentation and cdata processing belongs elsewhere\n            writer.writeCharacters(\"\\n  \");\n            writer.writeEmptyElement(\"properties\");\n\n            writeTests(writer, result.getResults(), className);\n\n            writer.writeCharacters(\"\\n  \");\n            output.write(\"<system-out><![CDATA[\");\n            testResultsProvider.provideOutputs(className, TestOutputEvent.Destination.StdOut, output, new EscapeCDATA());\n            output.write(\"]]><\/system-out>\");\n\n            writer.writeCharacters(\"\\n  \");\n            output.write(\"<system-err><![CDATA[\");\n            testResultsProvider.provideOutputs(className, TestOutputEvent.Destination.StdErr, output, new EscapeCDATA());\n            output.write(\"]]><\/system-err>\\n\");\n\n            writer.writeEndElement();\n        } catch (IOException e) {\n            throw new RuntimeException(\"Problems writing the xml results for class: \" + className, e);\n        }\n    }","commit_id":"5125152d8c1f8a1e8ed8fade2a1e299f9391ce49","url":"https://github.com/gradle/gradle"},{"original_method":"private void writeTests(XMLStreamWriter writer, Set<TestMethodResult> methodResults, String className) throws XMLStreamException {\n        for (TestMethodResult methodResult : methodResults) {\n            writer.writeCharacters(\"\\n    \");\n            String testCase = methodResult.result.getResultType() == TestResult.ResultType.SKIPPED ? \"ignored-testcase\" : \"testcase\";\n            writer.writeStartElement(testCase);\n            writer.writeAttribute(\"name\", methodResult.name);\n            writer.writeAttribute(\"classname\", className);\n            writer.writeAttribute(\"time\", String.valueOf(methodResult.getDuration() / 1000.0));\n\n            for (Throwable failure : methodResult.result.getExceptions()) {\n                writer.writeCharacters(\"\\n      \");\n                writer.writeStartElement(\"failure\");\n                writer.writeAttribute(\"message\", failureMessage(failure));\n                writer.writeAttribute(\"type\", failure.getClass().getName());\n\n                writer.writeCharacters(stackTrace(failure));\n\n                writer.writeEndElement();\n            }\n\n            writer.writeEndElement();\n        }\n    }","id":56377,"modified_method":"private void writeTests(SimpleXmlWriter writer, Set<TestMethodResult> methodResults, String className) throws IOException {\n        for (TestMethodResult methodResult : methodResults) {\n            writer.writeCharacters(\"\\n    \");\n            String testCase = methodResult.result.getResultType() == TestResult.ResultType.SKIPPED ? \"ignored-testcase\" : \"testcase\";\n            writer.writeStartElement(new SimpleXmlWriter.Element(testCase)\n                    .attribute(\"name\", methodResult.name)\n                    .attribute(\"classname\", className)\n                    .attribute(\"time\", String.valueOf(methodResult.getDuration() / 1000.0)));\n\n            for (Throwable failure : methodResult.result.getExceptions()) {\n                writer.writeCharacters(\"\\n      \");\n                writer.writeStartElement(new SimpleXmlWriter.Element(\"failure\")\n                        .attribute(\"message\", failureMessage(failure))\n                        .attribute(\"type\", failure.getClass().getName()));\n\n                writer.writeCharacters(stackTrace(failure));\n\n                writer.writeEndElement();\n            }\n\n            writer.writeEndElement();\n        }\n    }","commit_id":"5125152d8c1f8a1e8ed8fade2a1e299f9391ce49","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n  public void processJournalEntry(JournalEntry entry) throws IOException {\n    if (entry instanceof BlockIdGeneratorEntry) {\n      mBlockIdGenerator.setNextContainerId(((BlockIdGeneratorEntry) entry).getNextContainerId());\n    } else if (entry instanceof WorkerIdGeneratorEntry) {\n      mNextWorkerId.set(((WorkerIdGeneratorEntry) entry).getNextWorkerId());\n    } else if (entry instanceof BlockInfoEntry) {\n      BlockInfoEntry bie = (BlockInfoEntry) entry;\n      mBlocks.put(bie.getBlockId(), new MasterBlockInfo(bie.getBlockId(), bie.getLength()));\n    } else {\n      throw new IOException(\"unexpected entry in checkpoint: \" + entry);\n    }\n  }","id":56378,"modified_method":"@Override\n  public void processJournalEntry(JournalEntry entry) throws IOException {\n    if (entry instanceof BlockIdGeneratorEntry) {\n      mBlockIdGenerator.setNextContainerId(((BlockIdGeneratorEntry) entry).getNextContainerId());\n    } else if (entry instanceof WorkerIdGeneratorEntry) {\n      mNextWorkerId.set(((WorkerIdGeneratorEntry) entry).getNextWorkerId());\n    } else if (entry instanceof BlockInfoEntry) {\n      BlockInfoEntry bie = (BlockInfoEntry) entry;\n      mBlocks.put(bie.getBlockId(), new MasterBlockInfo(bie.getBlockId(), bie.getLength()));\n    } else {\n      throw new IOException(\"unexpected entry in journal: \" + entry);\n    }\n  }","commit_id":"c90fea3ee6824e708234ccb047edf13f280f9525","url":"https://github.com/amplab/tachyon"},{"original_method":"public long getUserId() {\n    synchronized (mNextUserId) {\n      // TODO: journal\n      return mNextUserId.getAndIncrement();\n    }\n  }","id":56379,"modified_method":"public long getUserId() {\n    synchronized (mNextUserId) {\n      long userId = mNextUserId.getAndIncrement();\n      writeJournalEntry(new UserIdGeneratorEntry(userId));\n      flushJournal();\n      return userId;\n    }\n  }","commit_id":"c90fea3ee6824e708234ccb047edf13f280f9525","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void writeToJournal(JournalOutputStream outputStream) throws IOException {\n    // TODO(cc)\n  }","id":56380,"modified_method":"@Override\n  public void writeToJournal(JournalOutputStream outputStream) throws IOException {\n    outputStream.writeEntry(new UserIdGeneratorEntry(mNextUserId.get()));\n  }","commit_id":"c90fea3ee6824e708234ccb047edf13f280f9525","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void processJournalEntry(JournalEntry entry) throws IOException {\n    // TODO\n  }","id":56381,"modified_method":"@Override\n  public void processJournalEntry(JournalEntry entry) throws IOException {\n    if (entry instanceof UserIdGeneratorEntry) {\n      mNextUserId.set(((UserIdGeneratorEntry) entry).getNextUserId());\n    } else {\n      throw new IOException(\"unexpected entry in checkpoint: \" + entry);\n    }\n  }","commit_id":"c90fea3ee6824e708234ccb047edf13f280f9525","url":"https://github.com/amplab/tachyon"},{"original_method":"@Override\n  public void processJournalCheckpoint(JournalInputStream inputStream) throws IOException {\n    // TODO\n  }","id":56382,"modified_method":"@Override\n  public void processJournalCheckpoint(JournalInputStream inputStream) throws IOException {\n    JournalEntry entry;\n    while ((entry = inputStream.getNextEntry()) != null) {\n      processJournalEntry(entry);\n    }\n    inputStream.close();\n  }","commit_id":"c90fea3ee6824e708234ccb047edf13f280f9525","url":"https://github.com/amplab/tachyon"},{"original_method":"public String execute(Context context) {\r\n        ServiceManagerServer server = (ServiceManagerServer) context.get( ServiceManagerServer.SERVICE_MANAGER );\r\n        \r\n        String instanceId = (String ) server.getRoot().get( identifier );        \r\n        \r\n        if ( this.outIdentifier != null ) {\r\n            ((ExecutionResultImpl) ((KnowledgeCommandContext) context).getExecutionResults()).getResults().put( this.outIdentifier,\r\n                                                                                                                instanceId );\r\n        }\r\n        return instanceId;\r\n    }","id":56383,"modified_method":"public String execute(Context context) {\r\n        ServiceManagerData data = (ServiceManagerData) context.get( ServiceManagerData.SERVICE_MANAGER_DATA );\r\n\r\n        String instanceId = (String) data.getRoot().get( identifier );\r\n\r\n        if ( this.outIdentifier != null ) {\r\n            ((ExecutionResultImpl) ((KnowledgeCommandContext) context).getExecutionResults()).getResults().put( this.outIdentifier,\r\n                                                                                                                instanceId );\r\n        }\r\n        return instanceId;\r\n    }","commit_id":"d489f226db67e7cf747bfd874c13a9bb332fb0e8","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public Void execute(Context context) {\r\n        ServiceManagerServer server = (ServiceManagerServer) context.get( ServiceManagerServer.SERVICE_MANAGER );\r\n\r\n        server.getRoot().set( identifier,\r\n                              type + \":\" + instanceId );\r\n\r\n        return null;\r\n    }","id":56384,"modified_method":"public Void execute(Context context) {\r\n        ServiceManagerData data = (ServiceManagerData) context.get( ServiceManagerData.SERVICE_MANAGER_DATA );\r\n\r\n        data.getRoot().set( identifier,\r\n                            type + \":\" + instanceId );\r\n\r\n        return null;\r\n    }","commit_id":"d489f226db67e7cf747bfd874c13a9bb332fb0e8","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public Integer execute(Context context) {\r\n        ServiceManagerServer server = ( ServiceManagerServer ) ((ServiceManagerServerContext)context).getServiceManager();\r\n        return server.getSessionIdCounter().getAndIncrement();\r\n    }","id":56385,"modified_method":"public Integer execute(Context context) {\r\n        ServiceManagerData data = (ServiceManagerData) context.get( ServiceManagerData.SERVICE_MANAGER_DATA );\r\n        \r\n        Integer sessionId = data.getSessionIdCounter().getAndIncrement();\r\n        if ( this.outIdentifier != null ) {\r\n            ((ExecutionResultImpl)((KnowledgeCommandContext) context).getExecutionResults()).getResults().put( this.outIdentifier, sessionId );\r\n        } \r\n        \r\n        return sessionId;\r\n    }","commit_id":"d489f226db67e7cf747bfd874c13a9bb332fb0e8","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public ServiceManagerServer getServiceManager() {\r\n        return server;\r\n    }","id":56386,"modified_method":"public ServiceManagerData getServiceManagerData() {\r\n        return this.data;\r\n    }","commit_id":"d489f226db67e7cf747bfd874c13a9bb332fb0e8","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public ServiceManagerServerContext(Context context,\r\n                                       ServiceManagerServer server) {\r\n        this.server = server;\r\n    }","id":56387,"modified_method":"public ServiceManagerServerContext(Context context,\r\n                                       ServiceManagerData data) {\r\n        this.data = data;\r\n    }","commit_id":"d489f226db67e7cf747bfd874c13a9bb332fb0e8","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@Test\n  public void testRegisterAndStartOnLocalhostWithArguments() {\n    ApplicationSpec redis = createApplicationWithEntity(\n        new EntitySpec(\"redis\", \"brooklyn.entity.nosql.redis.RedisStore\",\n            ImmutableMap.of(\"redisPort\", \"61234\")));\n    manager.createInstanceAndStart(redis);\n\n    assertTrue(redis.isDeployed());\n\n    RedisStore entity = (RedisStore) redis.getDeployedContext().getOwnedChildren().iterator().next();\n    int port = entity.getAttribute(RedisStore.REDIS_PORT).intValue();\n    assertEquals(port, 61234);\n  }","id":56388,"modified_method":"@Test\n  public void testRegisterAndStartOnLocalhost() {\n    ApplicationSpec redis = createApplicationWithEntity(\n        new EntitySpec(\"redis\", \"brooklyn.entity.nosql.redis.RedisStore\"));\n    manager.createInstanceAndStart(redis);\n\n    assertTrue(redis.isDeployed());\n\n    RedisStore entity = (RedisStore) redis.getDeployedContext().getOwnedChildren().iterator().next();\n    int port = entity.getAttribute(RedisStore.REDIS_PORT).intValue();\n    assertEquals(port, 6379);\n  }","commit_id":"6f444a65792e6fb9d13c1b712769b2a09109bcf8","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@POST\n  public void add(@Valid Location location) {\n    store.put(location);\n  }","id":56389,"modified_method":"@POST\n  public Response add(@Valid Location location) {\n    int id = store.put(location);\n    return Response.created(URI.create(\"\" + id)).build();\n  }","commit_id":"6f444a65792e6fb9d13c1b712769b2a09109bcf8","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public void put(Location location) {\n    locations.put(ids.getAndIncrement(), location);\n  }","id":56390,"modified_method":"public int put(Location location) {\n    int id = ids.getAndIncrement();\n    locations.put(id, location);\n    return id;\n  }","commit_id":"6f444a65792e6fb9d13c1b712769b2a09109bcf8","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public static LocationStore withLocalhost() {\n    return new LocationStore(new Location(\"localhost\", \"\", \"\", \"localhost\"));\n  }","id":56391,"modified_method":"public static LocationStore withLocalhost() {\n    return new LocationStore(Location.localhost());\n  }","commit_id":"6f444a65792e6fb9d13c1b712769b2a09109bcf8","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public AllocatorPerContext(String contextCfgItemName) {\n      this.contextCfgItemName = contextCfgItemName;\n    }","id":56392,"modified_method":"public AllocatorPerContext(String contextCfgItemName) {\n      this.contextCfgItemName = contextCfgItemName;\n      this.currentContext = new AtomicReference<Context>(new Context());\n    }","commit_id":"c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b","url":"https://github.com/apache/hadoop"},{"original_method":"private Path createPath(String path, \n        boolean checkWrite) throws IOException {\n      Path file = new Path(new Path(localDirs[dirNumLastAccessed]),\n                                    path);\n      if (checkWrite) {\n        //check whether we are able to create a directory here. If the disk\n        //happens to be RDONLY we will fail\n        try {\n          DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n          return file;\n        } catch (DiskErrorException d) {\n          LOG.warn(\"Disk Error Exception: \", d);\n          return null;\n        }\n      }\n      return file;\n    }","id":56393,"modified_method":"private Path createPath(Path dir, String path,\n        boolean checkWrite) throws IOException {\n      Path file = new Path(dir, path);\n      if (checkWrite) {\n        //check whether we are able to create a directory here. If the disk\n        //happens to be RDONLY we will fail\n        try {\n          DiskChecker.checkDir(new File(file.getParent().toUri().getPath()));\n          return file;\n        } catch (DiskErrorException d) {\n          LOG.warn(\"Disk Error Exception: \", d);\n          return null;\n        }\n      }\n      return file;\n    }","commit_id":"c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b","url":"https://github.com/apache/hadoop"},{"original_method":"private PathIterator(FileSystem fs, String pathStr, String[] rootDirs)\n          throws IOException {\n        this.fs = fs;\n        this.pathStr = pathStr;\n        this.rootDirs = rootDirs;\n        advance();\n      }","id":56394,"modified_method":"private PathIterator(FileSystem fs, String pathStr, Path[] rootDirs)\n          throws IOException {\n        this.fs = fs;\n        this.pathStr = pathStr;\n        this.rootDirs = rootDirs;\n        advance();\n      }","commit_id":"c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n     * Get all of the paths that currently exist in the working directories.\n     * @param pathStr the path underneath the roots\n     * @param conf the configuration to look up the roots in\n     * @return all of the paths that exist under any of the roots\n     * @throws IOException\n     */\n    synchronized Iterable<Path> getAllLocalPathsToRead(String pathStr,\n        Configuration conf) throws IOException {\n      confChanged(conf);\n      if (pathStr.startsWith(\"/\")) {\n        pathStr = pathStr.substring(1);\n      }\n      return new PathIterator(localFS, pathStr, localDirs);\n    }","id":56395,"modified_method":"/**\n     * Get all of the paths that currently exist in the working directories.\n     * @param pathStr the path underneath the roots\n     * @param conf the configuration to look up the roots in\n     * @return all of the paths that exist under any of the roots\n     * @throws IOException\n     */\n    Iterable<Path> getAllLocalPathsToRead(String pathStr,\n        Configuration conf) throws IOException {\n      Context ctx = confChanged(conf);\n      if (pathStr.startsWith(\"/\")) {\n        pathStr = pathStr.substring(1);\n      }\n      return new PathIterator(ctx.localFS, pathStr, ctx.localDirs);\n    }","commit_id":"c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b","url":"https://github.com/apache/hadoop"},{"original_method":"/** This method gets called everytime before any read/write to make sure\n     * that any change to localDirs is reflected immediately.\n     */\n    private synchronized void confChanged(Configuration conf) \n        throws IOException {\n      String newLocalDirs = conf.get(contextCfgItemName);\n      if (null == newLocalDirs) {\n        throw new IOException(contextCfgItemName + \" not configured\");\n      }\n      if (!newLocalDirs.equals(savedLocalDirs)) {\n        localDirs = StringUtils.getTrimmedStrings(newLocalDirs);\n        localFS = FileSystem.getLocal(conf);\n        int numDirs = localDirs.length;\n        ArrayList<String> dirs = new ArrayList<String>(numDirs);\n        ArrayList<DF> dfList = new ArrayList<DF>(numDirs);\n        for (int i = 0; i < numDirs; i++) {\n          try {\n            // filter problematic directories\n            Path tmpDir = new Path(localDirs[i]);\n            if(localFS.mkdirs(tmpDir)|| localFS.exists(tmpDir)) {\n              try {\n\n                File tmpFile = tmpDir.isAbsolute()\n                  ? new File(localFS.makeQualified(tmpDir).toUri())\n                  : new File(localDirs[i]);\n\n                DiskChecker.checkDir(tmpFile);\n                dirs.add(tmpFile.getPath());\n                dfList.add(new DF(tmpFile, 30000));\n\n              } catch (DiskErrorException de) {\n                LOG.warn( localDirs[i] + \" is not writable\\n\", de);\n              }\n            } else {\n              LOG.warn( \"Failed to create \" + localDirs[i]);\n            }\n          } catch (IOException ie) { \n            LOG.warn( \"Failed to create \" + localDirs[i] + \": \" +\n                ie.getMessage() + \"\\n\", ie);\n          } //ignore\n        }\n        localDirs = dirs.toArray(new String[dirs.size()]);\n        dirDF = dfList.toArray(new DF[dirs.size()]);\n        savedLocalDirs = newLocalDirs;\n        \n        if (dirs.size() > 0) {\n          // randomize the first disk picked in the round-robin selection\n          dirNumLastAccessed = dirIndexRandomizer.nextInt(dirs.size());\n        }\n      }\n    }","id":56396,"modified_method":"/** This method gets called everytime before any read/write to make sure\n     * that any change to localDirs is reflected immediately.\n     */\n    private Context confChanged(Configuration conf)\n        throws IOException {\n      Context ctx = currentContext.get();\n      String newLocalDirs = conf.get(contextCfgItemName);\n      if (null == newLocalDirs) {\n        throw new IOException(contextCfgItemName + \" not configured\");\n      }\n      if (!newLocalDirs.equals(ctx.savedLocalDirs)) {\n        ctx = new Context();\n        String[] dirStrings = StringUtils.getTrimmedStrings(newLocalDirs);\n        ctx.localFS = FileSystem.getLocal(conf);\n        int numDirs = dirStrings.length;\n        ArrayList<Path> dirs = new ArrayList<Path>(numDirs);\n        ArrayList<DF> dfList = new ArrayList<DF>(numDirs);\n        for (int i = 0; i < numDirs; i++) {\n          try {\n            // filter problematic directories\n            Path tmpDir = new Path(dirStrings[i]);\n            if(ctx.localFS.mkdirs(tmpDir)|| ctx.localFS.exists(tmpDir)) {\n              try {\n                File tmpFile = tmpDir.isAbsolute()\n                    ? new File(ctx.localFS.makeQualified(tmpDir).toUri())\n                    : new File(dirStrings[i]);\n\n                DiskChecker.checkDir(tmpFile);\n                dirs.add(new Path(tmpFile.getPath()));\n                dfList.add(new DF(tmpFile, 30000));\n              } catch (DiskErrorException de) {\n                LOG.warn(dirStrings[i] + \" is not writable\\n\", de);\n              }\n            } else {\n              LOG.warn(\"Failed to create \" + dirStrings[i]);\n            }\n          } catch (IOException ie) { \n            LOG.warn(\"Failed to create \" + dirStrings[i] + \": \" +\n                ie.getMessage() + \"\\n\", ie);\n          } //ignore\n        }\n        ctx.localDirs = dirs.toArray(new Path[dirs.size()]);\n        ctx.dirDF = dfList.toArray(new DF[dirs.size()]);\n        ctx.savedLocalDirs = newLocalDirs;\n\n        if (dirs.size() > 0) {\n          // randomize the first disk picked in the round-robin selection\n          ctx.dirNumLastAccessed.set(dirIndexRandomizer.nextInt(dirs.size()));\n        }\n\n        currentContext.set(ctx);\n      }\n\n      return ctx;\n    }","commit_id":"c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b","url":"https://github.com/apache/hadoop"},{"original_method":"/** Get a path from the local FS. If size is known, we go\n     *  round-robin over the set of disks (via the configured dirs) and return\n     *  the first complete path which has enough space.\n     *  \n     *  If size is not known, use roulette selection -- pick directories\n     *  with probability proportional to their available space.\n     */\n    public synchronized Path getLocalPathForWrite(String pathStr, long size, \n        Configuration conf, boolean checkWrite) throws IOException {\n      confChanged(conf);\n      int numDirs = localDirs.length;\n      int numDirsSearched = 0;\n      //remove the leading slash from the path (to make sure that the uri\n      //resolution results in a valid path on the dir being checked)\n      if (pathStr.startsWith(\"/\")) {\n        pathStr = pathStr.substring(1);\n      }\n      Path returnPath = null;\n      \n      if(size == SIZE_UNKNOWN) {  //do roulette selection: pick dir with probability \n                    //proportional to available size\n        long[] availableOnDisk = new long[dirDF.length];\n        long totalAvailable = 0;\n        \n            //build the \"roulette wheel\"\n        for(int i =0; i < dirDF.length; ++i) {\n          availableOnDisk[i] = dirDF[i].getAvailable();\n          totalAvailable += availableOnDisk[i];\n        }\n\n        if (totalAvailable == 0){\n          throw new DiskErrorException(\"No space available in any of the local directories.\");\n        }\n\n        // Keep rolling the wheel till we get a valid path\n        Random r = new java.util.Random();\n        while (numDirsSearched < numDirs && returnPath == null) {\n          long randomPosition = (r.nextLong() >>> 1) % totalAvailable;\n          int dir = 0;\n          while (randomPosition > availableOnDisk[dir]) {\n            randomPosition -= availableOnDisk[dir];\n            dir++;\n          }\n          dirNumLastAccessed = dir;\n          returnPath = createPath(pathStr, checkWrite);\n          if (returnPath == null) {\n            totalAvailable -= availableOnDisk[dir];\n            availableOnDisk[dir] = 0; // skip this disk\n            numDirsSearched++;\n          }\n        }\n      } else {\n        while (numDirsSearched < numDirs && returnPath == null) {\n          long capacity = dirDF[dirNumLastAccessed].getAvailable();\n          if (capacity > size) {\n            returnPath = createPath(pathStr, checkWrite);\n          }\n          dirNumLastAccessed++;\n          dirNumLastAccessed = dirNumLastAccessed % numDirs; \n          numDirsSearched++;\n        } \n      }\n      if (returnPath != null) {\n        return returnPath;\n      }\n      \n      //no path found\n      throw new DiskErrorException(\"Could not find any valid local \" +\n          \"directory for \" + pathStr);\n    }","id":56397,"modified_method":"/** Get a path from the local FS. If size is known, we go\n     *  round-robin over the set of disks (via the configured dirs) and return\n     *  the first complete path which has enough space.\n     *  \n     *  If size is not known, use roulette selection -- pick directories\n     *  with probability proportional to their available space.\n     */\n    public Path getLocalPathForWrite(String pathStr, long size,\n        Configuration conf, boolean checkWrite) throws IOException {\n      Context ctx = confChanged(conf);\n      int numDirs = ctx.localDirs.length;\n      int numDirsSearched = 0;\n      //remove the leading slash from the path (to make sure that the uri\n      //resolution results in a valid path on the dir being checked)\n      if (pathStr.startsWith(\"/\")) {\n        pathStr = pathStr.substring(1);\n      }\n      Path returnPath = null;\n      \n      if(size == SIZE_UNKNOWN) {  //do roulette selection: pick dir with probability \n                    //proportional to available size\n        long[] availableOnDisk = new long[ctx.dirDF.length];\n        long totalAvailable = 0;\n        \n            //build the \"roulette wheel\"\n        for(int i =0; i < ctx.dirDF.length; ++i) {\n          availableOnDisk[i] = ctx.dirDF[i].getAvailable();\n          totalAvailable += availableOnDisk[i];\n        }\n\n        if (totalAvailable == 0){\n          throw new DiskErrorException(\"No space available in any of the local directories.\");\n        }\n\n        // Keep rolling the wheel till we get a valid path\n        Random r = new java.util.Random();\n        while (numDirsSearched < numDirs && returnPath == null) {\n          long randomPosition = (r.nextLong() >>> 1) % totalAvailable;\n          int dir = 0;\n          while (randomPosition > availableOnDisk[dir]) {\n            randomPosition -= availableOnDisk[dir];\n            dir++;\n          }\n          ctx.dirNumLastAccessed.set(dir);\n          returnPath = createPath(ctx.localDirs[dir], pathStr, checkWrite);\n          if (returnPath == null) {\n            totalAvailable -= availableOnDisk[dir];\n            availableOnDisk[dir] = 0; // skip this disk\n            numDirsSearched++;\n          }\n        }\n      } else {\n        int dirNum = ctx.getAndIncrDirNumLastAccessed();\n        while (numDirsSearched < numDirs) {\n          long capacity = ctx.dirDF[dirNum].getAvailable();\n          if (capacity > size) {\n            returnPath =\n                createPath(ctx.localDirs[dirNum], pathStr, checkWrite);\n            if (returnPath != null) {\n              ctx.getAndIncrDirNumLastAccessed(numDirsSearched);\n              break;\n            }\n          }\n          dirNum++;\n          dirNum = dirNum % numDirs;\n          numDirsSearched++;\n        }\n      }\n      if (returnPath != null) {\n        return returnPath;\n      }\n      \n      //no path found\n      throw new DiskErrorException(\"Could not find any valid local \" +\n          \"directory for \" + pathStr);\n    }","commit_id":"c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b","url":"https://github.com/apache/hadoop"},{"original_method":"/** We search through all the configured dirs for the file's existence\n     *  and return true when we find one \n     */\n    public synchronized boolean ifExists(String pathStr,Configuration conf) {\n      try {\n        int numDirs = localDirs.length;\n        int numDirsSearched = 0;\n        //remove the leading slash from the path (to make sure that the uri\n        //resolution results in a valid path on the dir being checked)\n        if (pathStr.startsWith(\"/\")) {\n          pathStr = pathStr.substring(1);\n        }\n        while (numDirsSearched < numDirs) {\n          Path file = new Path(localDirs[numDirsSearched], pathStr);\n          if (localFS.exists(file)) {\n            return true;\n          }\n          numDirsSearched++;\n        }\n      } catch (IOException e) {\n        // IGNORE and try again\n      }\n      return false;\n    }","id":56398,"modified_method":"/** We search through all the configured dirs for the file's existence\n     *  and return true when we find one \n     */\n    public boolean ifExists(String pathStr, Configuration conf) {\n      Context ctx = currentContext.get();\n      try {\n        int numDirs = ctx.localDirs.length;\n        int numDirsSearched = 0;\n        //remove the leading slash from the path (to make sure that the uri\n        //resolution results in a valid path on the dir being checked)\n        if (pathStr.startsWith(\"/\")) {\n          pathStr = pathStr.substring(1);\n        }\n        while (numDirsSearched < numDirs) {\n          Path file = new Path(ctx.localDirs[numDirsSearched], pathStr);\n          if (ctx.localFS.exists(file)) {\n            return true;\n          }\n          numDirsSearched++;\n        }\n      } catch (IOException e) {\n        // IGNORE and try again\n      }\n      return false;\n    }","commit_id":"c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n     * Get the current directory index.\n     * @return the current directory index.\n     */\n    int getCurrentDirectoryIndex() {\n      return dirNumLastAccessed;\n    }","id":56399,"modified_method":"/**\n     * Get the current directory index.\n     * @return the current directory index.\n     */\n    int getCurrentDirectoryIndex() {\n      return currentContext.get().dirNumLastAccessed.get();\n    }","commit_id":"c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b","url":"https://github.com/apache/hadoop"},{"original_method":"/** Get a path from the local FS for reading. We search through all the\n     *  configured dirs for the file's existence and return the complete\n     *  path to the file when we find one \n     */\n    public synchronized Path getLocalPathToRead(String pathStr, \n        Configuration conf) throws IOException {\n      confChanged(conf);\n      int numDirs = localDirs.length;\n      int numDirsSearched = 0;\n      //remove the leading slash from the path (to make sure that the uri\n      //resolution results in a valid path on the dir being checked)\n      if (pathStr.startsWith(\"/\")) {\n        pathStr = pathStr.substring(1);\n      }\n      while (numDirsSearched < numDirs) {\n        Path file = new Path(localDirs[numDirsSearched], pathStr);\n        if (localFS.exists(file)) {\n          return file;\n        }\n        numDirsSearched++;\n      }\n\n      //no path found\n      throw new DiskErrorException (\"Could not find \" + pathStr +\" in any of\" +\n      \" the configured local directories\");\n    }","id":56400,"modified_method":"/** Get a path from the local FS for reading. We search through all the\n     *  configured dirs for the file's existence and return the complete\n     *  path to the file when we find one \n     */\n    public Path getLocalPathToRead(String pathStr,\n        Configuration conf) throws IOException {\n      Context ctx = confChanged(conf);\n      int numDirs = ctx.localDirs.length;\n      int numDirsSearched = 0;\n      //remove the leading slash from the path (to make sure that the uri\n      //resolution results in a valid path on the dir being checked)\n      if (pathStr.startsWith(\"/\")) {\n        pathStr = pathStr.substring(1);\n      }\n      while (numDirsSearched < numDirs) {\n        Path file = new Path(ctx.localDirs[numDirsSearched], pathStr);\n        if (ctx.localFS.exists(file)) {\n          return file;\n        }\n        numDirsSearched++;\n      }\n\n      //no path found\n      throw new DiskErrorException (\"Could not find \" + pathStr +\" in any of\" +\n      \" the configured local directories\");\n    }","commit_id":"c14c1b298e29e799f7c8f15ff24d7eba6e0cd39b","url":"https://github.com/apache/hadoop"},{"original_method":"public void performPubAction(final @NotNull Module module, final @NotNull VirtualFile pubspecYamlFile, final boolean allowModalDialogs) {\n    DartSdk sdk = DartSdk.getGlobalDartSdk();\n\n    if (sdk == null && allowModalDialogs) {\n      final int answer = Messages.showDialog(module.getProject(), \"Dart SDK is not configured\",\n                                             getPresentableText(), new String[]{\"Configure SDK\", \"Cancel\"}, 0, Messages.getErrorIcon());\n      if (answer != 0) return;\n\n      ShowSettingsUtil.getInstance().showSettingsDialog(module.getProject(), DartBundle.message(\"dart.title\"));\n      sdk = DartSdk.getGlobalDartSdk();\n    }\n\n    if (sdk == null) return;\n\n    File pubFile = new File(sdk.getHomePath() + (SystemInfo.isWindows ? \"/bin/pub.bat\" : \"/bin/pub\"));\n    if (!pubFile.isFile() && allowModalDialogs) {\n      final int answer =\n        Messages.showDialog(module.getProject(), DartBundle.message(\"dart.sdk.bad.dartpub.path\", pubFile.getPath()),\n                            getPresentableText(), new String[]{\"Configure SDK\", \"Cancel\"}, 0, Messages.getErrorIcon());\n      if (answer != 0) return;\n\n      ShowSettingsUtil.getInstance().showSettingsDialog(module.getProject(), DartBundle.message(\"dart.title\"));\n\n      sdk = DartSdk.getGlobalDartSdk();\n      if (sdk == null) return;\n\n      pubFile = new File(sdk.getHomePath() + (SystemInfo.isWindows ? \"/bin/pub.bat\" : \"/bin/pub\"));\n    }\n\n    if (!pubFile.isFile()) return;\n\n    doExecute(module, pubspecYamlFile, sdk.getHomePath(), pubFile.getPath());\n  }","id":56401,"modified_method":"public void performPubAction(final @NotNull Module module, final @NotNull VirtualFile pubspecYamlFile, final boolean allowModalDialogs) {\n    DartSdk sdk = DartSdk.getGlobalDartSdk();\n\n    if (sdk == null && allowModalDialogs) {\n      final int answer = Messages.showDialog(module.getProject(), \"Dart SDK is not configured\",\n                                             getTitle(), new String[]{\"Configure SDK\", \"Cancel\"}, 0, Messages.getErrorIcon());\n      if (answer != 0) return;\n\n      ShowSettingsUtil.getInstance().showSettingsDialog(module.getProject(), DartBundle.message(\"dart.title\"));\n      sdk = DartSdk.getGlobalDartSdk();\n    }\n\n    if (sdk == null) return;\n\n    File pubFile = new File(sdk.getHomePath() + (SystemInfo.isWindows ? \"/bin/pub.bat\" : \"/bin/pub\"));\n    if (!pubFile.isFile() && allowModalDialogs) {\n      final int answer =\n        Messages.showDialog(module.getProject(), DartBundle.message(\"dart.sdk.bad.dartpub.path\", pubFile.getPath()),\n                            getTitle(), new String[]{\"Configure SDK\", \"Cancel\"}, 0, Messages.getErrorIcon());\n      if (answer != 0) return;\n\n      ShowSettingsUtil.getInstance().showSettingsDialog(module.getProject(), DartBundle.message(\"dart.title\"));\n\n      sdk = DartSdk.getGlobalDartSdk();\n      if (sdk == null) return;\n\n      pubFile = new File(sdk.getHomePath() + (SystemInfo.isWindows ? \"/bin/pub.bat\" : \"/bin/pub\"));\n    }\n\n    if (!pubFile.isFile()) return;\n\n    final String[] pubParameters = calculatePubParameters(module.getProject());\n    if (pubParameters != null) {\n      doExecute(module, pubspecYamlFile, pubFile.getPath(), pubParameters);\n    }\n  }","commit_id":"42b0906208a160d9f3a4eb16bebb041a47b63826","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private void doExecute(final Module module, final VirtualFile pubspecYamlFile, final String sdkPath, final String pubPath) {\n    final Task.Backgroundable task = new Task.Backgroundable(module.getProject(), getPresentableText(), true) {\n      public void run(@NotNull ProgressIndicator indicator) {\n        indicator.setText(DartBundle.message(\"dart.pub.0.in.progress\", getPubCommand()));\n        indicator.setIndeterminate(true);\n        final GeneralCommandLine command = new GeneralCommandLine();\n        command.setExePath(pubPath);\n        command.setWorkDirectory(pubspecYamlFile.getParent().getPath());\n        command.addParameter(getPubCommand());\n        command.getEnvironment().put(\"DART_SDK\", sdkPath);\n\n        ApplicationManager.getApplication().invokeAndWait(new Runnable() {\n          @Override\n          public void run() {\n            FileDocumentManager.getInstance().saveAllDocuments();\n          }\n        }, ModalityState.defaultModalityState());\n\n\n        try {\n          final ProcessOutput processOutput = new CapturingProcessHandler(command).runProcess();\n          final String err = processOutput.getStderr().trim();\n\n          LOG.debug(\"pub \" + getPubCommand() + \", exit code: \" + processOutput.getExitCode() + \", err:\\n\" +\n                    err + \"\\nout:\\n\" + processOutput.getStdout());\n\n          if (err.isEmpty()) {\n            Notifications.Bus.notify(new Notification(GROUP_DISPLAY_ID, getPresentableText(), getSuccessMessage(),\n                                                      NotificationType.INFORMATION));\n          }\n          else {\n            Notifications.Bus.notify(new Notification(GROUP_DISPLAY_ID, getPresentableText(), err, NotificationType.ERROR));\n          }\n\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            public void run() {\n              DartProjectComponent.excludePackagesFolders(module, pubspecYamlFile);\n              // refresh later than exclude, otherwise IDE may start indexing excluded folders\n              pubspecYamlFile.getParent().refresh(true, true);\n            }\n          });\n        }\n        catch (ExecutionException ex) {\n          LOG.error(ex);\n          Notifications.Bus.notify(new Notification(GROUP_DISPLAY_ID, getPresentableText(),\n                                                    DartBundle.message(\"dart.pub.exception\", ex.getMessage()),\n                                                    NotificationType.ERROR));\n        }\n      }\n    };\n\n    task.queue();\n  }","id":56402,"modified_method":"private void doExecute(final Module module, final VirtualFile pubspecYamlFile, final String pubPath, final String... pubParameters) {\n    final Task.Backgroundable task = new Task.Backgroundable(module.getProject(), getTitle(), true) {\n      public void run(@NotNull ProgressIndicator indicator) {\n        final String presentableCommandLine = \"pub \" + StringUtil.join(pubParameters, \" \");\n\n        indicator.setText(DartBundle.message(\"dart.0.in.progress\", presentableCommandLine));\n        indicator.setIndeterminate(true);\n        final GeneralCommandLine command = new GeneralCommandLine();\n        command.setExePath(pubPath);\n        command.setWorkDirectory(pubspecYamlFile.getParent().getPath());\n        command.addParameters(pubParameters);\n\n        ApplicationManager.getApplication().invokeAndWait(new Runnable() {\n          @Override\n          public void run() {\n            FileDocumentManager.getInstance().saveAllDocuments();\n          }\n        }, ModalityState.defaultModalityState());\n\n\n        try {\n          final ProcessOutput processOutput = new CapturingProcessHandler(command).runProcess();\n          final String err = processOutput.getStderr().trim();\n\n          LOG.debug(presentableCommandLine + \", exit code: \" + processOutput.getExitCode() + \", err:\\n\" +\n                    err + \"\\nout:\\n\" + processOutput.getStdout());\n\n          if (err.isEmpty()) {\n            Notifications.Bus.notify(new Notification(GROUP_DISPLAY_ID, DartPubActionBase.this.getTitle(), getSuccessMessage(),\n                                                      NotificationType.INFORMATION));\n          }\n          else {\n            Notifications.Bus.notify(new Notification(GROUP_DISPLAY_ID, DartPubActionBase.this.getTitle(), err, NotificationType.ERROR));\n          }\n\n          ApplicationManager.getApplication().invokeLater(new Runnable() {\n            public void run() {\n              DartProjectComponent.excludePackagesFolders(module, pubspecYamlFile);\n              // refresh later than exclude, otherwise IDE may start indexing excluded folders\n              pubspecYamlFile.getParent().refresh(true, true);\n            }\n          });\n        }\n        catch (ExecutionException ex) {\n          LOG.error(ex);\n          Notifications.Bus.notify(new Notification(GROUP_DISPLAY_ID, DartPubActionBase.this.getTitle(),\n                                                    DartBundle.message(\"dart.pub.exception\", ex.getMessage()),\n                                                    NotificationType.ERROR));\n        }\n      }\n    };\n\n    task.queue();\n  }","commit_id":"42b0906208a160d9f3a4eb16bebb041a47b63826","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public void update(AnActionEvent e) {\n    e.getPresentation().setText(getPresentableText());\n    final boolean enabled = getModuleAndPubspecYamlFile(e) != null;\n    e.getPresentation().setVisible(enabled);\n    e.getPresentation().setEnabled(enabled);\n  }","id":56403,"modified_method":"@Override\n  public void update(AnActionEvent e) {\n    //e.getPresentation().setText(getTitle());  \"Pub: Build...\" action name set in plugin.xml is different from its \"Pub: Build\" title\n    final boolean enabled = getModuleAndPubspecYamlFile(e) != null;\n    e.getPresentation().setVisible(enabled);\n    e.getPresentation().setEnabled(enabled);\n  }","commit_id":"42b0906208a160d9f3a4eb16bebb041a47b63826","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public void launchDebug(final IDevice device, final String debugPort) {\n      ApplicationManager.getApplication().invokeLater(new Runnable() {\n        @SuppressWarnings({\"IOResourceOpenedButNotSafelyClosed\"})\n        public void run() {\n          final DebuggerPanelsManager manager = DebuggerPanelsManager.getInstance(myProject);\n          RemoteState st =\n            new AndroidDebugState(myProject, new RemoteConnection(true, \"localhost\", debugPort, false), myEnvironment.getRunnerSettings(),\n                                  myEnvironment.getConfigurationSettings(), myRunningState, device);\n          RunContentDescriptor debugDescriptor = null;\n          final ProcessHandler processHandler = myRunningState.getProcessHandler();\n          try {\n            synchronized (myDebugLock) {\n              assert myRunDescriptor != null;\n              debugDescriptor = manager\n                .attachVirtualMachine(myExecutor, AndroidDebugRunner.this, myEnvironment, st, myRunDescriptor, st.getRemoteConnection(),\n                                      false);\n            }\n          }\n          catch (ExecutionException e) {\n            processHandler.notifyTextAvailable(\"ExecutionException: \" + e.getMessage() + '.', STDERR);\n          }\n          ProcessHandler newProcessHandler = debugDescriptor != null ? debugDescriptor.getProcessHandler() : null;\n          if (debugDescriptor == null || newProcessHandler == null) {\n            processHandler.notifyTextAvailable(\"Can't start debugging.\", STDERR);\n            processHandler.destroyProcess();\n            return;\n          }\n          processHandler.detachProcess();\n\n          myRunningState.getProcessHandler().putUserData(ANDROID_PROCESS_HANDLER, debugDescriptor);\n\n          final DebuggerSessionTab sessionTab = manager.getSessionTab();\n          assert sessionTab != null;\n          sessionTab.setEnvironment(myEnvironment);\n\n          /*final String contentId = \"Android Logcat\";\n          final AndroidLogcatTabComponent component = new AndroidLogcatTabComponent(myProject, device) {\n            @Override\n            public boolean isActivte() {\n              final Content content = sessionTab.getUi().findContent(contentId);\n              return content != null && content.isSelected();\n            }\n          };\n          sessionTab.getUi().addListener(new ContentManagerAdapter() {\n            public void selectionChanged(final ContentManagerEvent event) {\n              component.activate();\n            }\n          }, component);\n          component.getToolWindowView().getLogConsole().attachStopLogConsoleTrackingListener(newProcessHandler);\n          sessionTab.addAdditionalTabComponent(component, contentId, AllIcons.Debugger.Console);*/\n\n          RunProfile profile = myEnvironment.getRunProfile();\n          assert profile instanceof AndroidRunConfigurationBase;\n          RunContentManager runContentManager = ExecutionManager.getInstance(myProject).getContentManager();\n          runContentManager.showRunContent(myExecutor, debugDescriptor);\n          newProcessHandler.startNotify();\n        }\n      });\n    }","id":56404,"modified_method":"public void launchDebug(final IDevice device, final String debugPort) {\n      ApplicationManager.getApplication().invokeLater(new Runnable() {\n        @SuppressWarnings({\"IOResourceOpenedButNotSafelyClosed\"})\n        public void run() {\n          final DebuggerPanelsManager manager = DebuggerPanelsManager.getInstance(myProject);\n          AndroidDebugState st =\n            new AndroidDebugState(myProject, new RemoteConnection(true, \"localhost\", debugPort, false), myEnvironment.getRunnerSettings(),\n                                  myEnvironment.getConfigurationSettings(), myRunningState, device);\n          RunContentDescriptor debugDescriptor = null;\n          final ProcessHandler processHandler = myRunningState.getProcessHandler();\n          try {\n            synchronized (myDebugLock) {\n              assert myRunDescriptor != null;\n              debugDescriptor = manager\n                .attachVirtualMachine(myExecutor, AndroidDebugRunner.this, myEnvironment, st, myRunDescriptor, st.getRemoteConnection(),\n                                      false);\n            }\n          }\n          catch (ExecutionException e) {\n            processHandler.notifyTextAvailable(\"ExecutionException: \" + e.getMessage() + '.', STDERR);\n          }\n          ProcessHandler newProcessHandler = debugDescriptor != null ? debugDescriptor.getProcessHandler() : null;\n          if (debugDescriptor == null || newProcessHandler == null) {\n            processHandler.notifyTextAvailable(\"Can't start debugging.\", STDERR);\n            processHandler.destroyProcess();\n            return;\n          }\n          processHandler.detachProcess();\n          final AndroidProcessText oldText = AndroidProcessText.get(processHandler);\n          if (oldText != null) {\n            oldText.printTo(newProcessHandler);\n          }\n          AndroidProcessText.attach(newProcessHandler);\n\n          myRunningState.getProcessHandler().putUserData(ANDROID_SESSION_INFO, new AndroidSessionInfo(\n            debugDescriptor, st, myExecutor.getId()));\n\n          final DebuggerSessionTab sessionTab = manager.getSessionTab();\n          assert sessionTab != null;\n          sessionTab.setEnvironment(myEnvironment);\n\n          RunProfile profile = myEnvironment.getRunProfile();\n          assert profile instanceof AndroidRunConfigurationBase;\n          RunContentManager runContentManager = ExecutionManager.getInstance(myProject).getContentManager();\n          runContentManager.showRunContent(myExecutor, debugDescriptor);\n          newProcessHandler.startNotify();\n        }\n      });\n    }","commit_id":"ff8dbc16bd27705f926d29333c1246901db6fb5b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected RunContentDescriptor doExecute(final Project project,\n                                           final Executor executor,\n                                           final RunProfileState state,\n                                           final RunContentDescriptor contentToReuse,\n                                           final ExecutionEnvironment environment) throws ExecutionException {\n    assert state instanceof AndroidRunningState;\n    final RunProfile runProfile = environment.getRunProfile();\n    final AndroidRunningState runningState = (AndroidRunningState)state;\n    if (runProfile instanceof AndroidTestRunConfiguration) {\n      String targetPackage = getTargetPackage((AndroidTestRunConfiguration)runProfile, runningState);\n      if (targetPackage == null) {\n        throw new ExecutionException(AndroidBundle.message(\"target.package.not.specified.error\"));\n      }\n      runningState.setTargetPackageName(targetPackage);\n    }\n    runningState.setDebugMode(true);\n    RunContentDescriptor runDescriptor;\n    synchronized (myDebugLock) {\n      MyDebugLauncher launcher = new MyDebugLauncher(project, executor, runningState, environment);\n      runningState.setDebugLauncher(launcher);\n      runDescriptor = super.doExecute(project, executor, state, contentToReuse, environment);\n      launcher.setRunDescriptor(runDescriptor);\n    }\n    if (runDescriptor == null) {\n      return null;\n    }\n    tryToCloseOldSessions(executor, project);\n    runningState.getProcessHandler().putUserData(ANDROID_PROCESS_HANDLER, runDescriptor);\n    runningState.setRestarter(runDescriptor.getRestarter());\n    return runDescriptor;\n  }","id":56405,"modified_method":"@Override\n  protected RunContentDescriptor doExecute(final Project project,\n                                           final Executor executor,\n                                           final RunProfileState state,\n                                           final RunContentDescriptor contentToReuse,\n                                           final ExecutionEnvironment environment) throws ExecutionException {\n    assert state instanceof AndroidRunningState;\n\n    final RunProfile runProfile = environment.getRunProfile();\n    final AndroidRunningState runningState = (AndroidRunningState)state;\n    if (runProfile instanceof AndroidTestRunConfiguration) {\n      String targetPackage = getTargetPackage((AndroidTestRunConfiguration)runProfile, runningState);\n      if (targetPackage == null) {\n        throw new ExecutionException(AndroidBundle.message(\"target.package.not.specified.error\"));\n      }\n      runningState.setTargetPackageName(targetPackage);\n    }\n    runningState.setDebugMode(true);\n    RunContentDescriptor runDescriptor;\n    synchronized (myDebugLock) {\n      MyDebugLauncher launcher = new MyDebugLauncher(project, executor, runningState, environment);\n      runningState.setDebugLauncher(launcher);\n\n      final RunContentDescriptor descriptor = embedToExistingSession(project, executor, runningState);\n      runDescriptor = descriptor != null ? descriptor : super.doExecute(project, executor, state, contentToReuse, environment);\n      launcher.setRunDescriptor(runDescriptor);\n      if (descriptor != null) {\n        return null;\n      }\n    }\n    if (runDescriptor == null) {\n      return null;\n    }\n    tryToCloseOldSessions(executor, project);\n    final ProcessHandler handler = runningState.getProcessHandler();\n    handler.putUserData(ANDROID_SESSION_INFO, new AndroidSessionInfo(\n      runDescriptor, runningState, executor.getId()));\n    runningState.setRestarter(runDescriptor.getRestarter());\n    return runDescriptor;\n  }","commit_id":"ff8dbc16bd27705f926d29333c1246901db6fb5b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ExecutionResult execute(final Executor executor, @NotNull final ProgramRunner runner) throws ExecutionException {\n      RemoteDebugProcessHandler process = new RemoteDebugProcessHandler(myProject);\n      myState.setProcessHandler(process);\n      final ConsoleView c = myState.getConfiguration().attachConsole(myState, executor);\n      final boolean resetSelectedTab = myState.getConfiguration() instanceof AndroidRunConfiguration;\n      final MyLogcatExecutionConsole console = new MyLogcatExecutionConsole(myProject, myDevice, process, c, resetSelectedTab);\n      return new DefaultExecutionResult(console, process);\n    }","id":56406,"modified_method":"public ExecutionResult execute(final Executor executor, @NotNull final ProgramRunner runner) throws ExecutionException {\n      RemoteDebugProcessHandler process = new RemoteDebugProcessHandler(myProject);\n      myState.setProcessHandler(process);\n      myConsoleView = myState.getConfiguration().attachConsole(myState, executor);\n      final boolean resetSelectedTab = myState.getConfiguration() instanceof AndroidRunConfiguration;\n      final MyLogcatExecutionConsole console = new MyLogcatExecutionConsole(myProject, myDevice, process, myConsoleView, resetSelectedTab);\n      return new DefaultExecutionResult(console, process);\n    }","commit_id":"ff8dbc16bd27705f926d29333c1246901db6fb5b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void tryToCloseOldSessions(final Executor executor, Project project) {\n    final ExecutionManager manager = ExecutionManager.getInstance(project);\n    ProcessHandler[] processes = manager.getRunningProcesses();\n    for (ProcessHandler process : processes) {\n      final RunContentDescriptor descriptor = process.getUserData(ANDROID_PROCESS_HANDLER);\n      if (descriptor != null) {\n        process.addProcessListener(new ProcessAdapter() {\n          @Override\n          public void processTerminated(ProcessEvent event) {\n            ApplicationManager.getApplication().invokeLater(new Runnable() {\n              public void run() {\n                manager.getContentManager().removeRunContent(executor, descriptor);\n              }\n            });\n          }\n        });\n        process.detachProcess();\n      }\n    }\n  }","id":56407,"modified_method":"private static void tryToCloseOldSessions(final Executor executor, Project project) {\n    final ExecutionManager manager = ExecutionManager.getInstance(project);\n    ProcessHandler[] processes = manager.getRunningProcesses();\n    for (ProcessHandler process : processes) {\n      final AndroidSessionInfo info = process.getUserData(ANDROID_SESSION_INFO);\n      if (info != null) {\n        process.addProcessListener(new ProcessAdapter() {\n          @Override\n          public void processTerminated(ProcessEvent event) {\n            ApplicationManager.getApplication().invokeLater(new Runnable() {\n              public void run() {\n                manager.getContentManager().removeRunContent(executor, info.getDescriptor());\n              }\n            });\n          }\n        });\n        process.detachProcess();\n      }\n    }\n  }","commit_id":"ff8dbc16bd27705f926d29333c1246901db6fb5b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean askForClosingDebugSessions(@NotNull Project project) {\n    final List<Pair<ProcessHandler, RunContentDescriptor>> pairs = new ArrayList<Pair<ProcessHandler, RunContentDescriptor>>();\n\n    for (Project p : ProjectManager.getInstance().getOpenProjects()) {\n      final ProcessHandler[] processes = ExecutionManager.getInstance(p).getRunningProcesses();\n\n      for (ProcessHandler process : processes) {\n        if (!process.isProcessTerminated()) {\n          final RunContentDescriptor descriptor = process.getUserData(AndroidDebugRunner.ANDROID_PROCESS_HANDLER);\n          if (descriptor != null) {\n            pairs.add(Pair.create(process, descriptor));\n          }\n        }\n      }\n    }\n\n    if (pairs.size() == 0) {\n      return true;\n    }\n\n    final StringBuilder s = new StringBuilder();\n\n    for (Pair<ProcessHandler, RunContentDescriptor> pair : pairs) {\n      if (s.length() > 0) {\n        s.append('\\n');\n      }\n      s.append(pair.getSecond().getDisplayName());\n    }\n\n    final int r = Messages.showYesNoDialog(project, AndroidBundle.message(\"android.debug.sessions.will.be.closed\", s),\n                                           AndroidBundle.message(\"android.disable.adb.service.title\"), Messages.getQuestionIcon());\n    return r == Messages.YES;\n  }","id":56408,"modified_method":"private static boolean askForClosingDebugSessions(@NotNull Project project) {\n    final List<Pair<ProcessHandler, RunContentDescriptor>> pairs = new ArrayList<Pair<ProcessHandler, RunContentDescriptor>>();\n\n    for (Project p : ProjectManager.getInstance().getOpenProjects()) {\n      final ProcessHandler[] processes = ExecutionManager.getInstance(p).getRunningProcesses();\n\n      for (ProcessHandler process : processes) {\n        if (!process.isProcessTerminated()) {\n          final AndroidSessionInfo info = process.getUserData(AndroidDebugRunner.ANDROID_SESSION_INFO);\n          if (info != null) {\n            pairs.add(Pair.create(process, info.getDescriptor()));\n          }\n        }\n      }\n    }\n\n    if (pairs.size() == 0) {\n      return true;\n    }\n\n    final StringBuilder s = new StringBuilder();\n\n    for (Pair<ProcessHandler, RunContentDescriptor> pair : pairs) {\n      if (s.length() > 0) {\n        s.append('\\n');\n      }\n      s.append(pair.getSecond().getDisplayName());\n    }\n\n    final int r = Messages.showYesNoDialog(project, AndroidBundle.message(\"android.debug.sessions.will.be.closed\", s),\n                                           AndroidBundle.message(\"android.disable.adb.service.title\"), Messages.getQuestionIcon());\n    return r == Messages.YES;\n  }","commit_id":"ff8dbc16bd27705f926d29333c1246901db6fb5b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private Boolean isCompatibleDevice(@NotNull IDevice device) {\n    if (myTargetChooser instanceof EmulatorTargetChooser) {\n      if (device.isEmulator()) {\n        String avdName = device.isEmulator() ? device.getAvdName() : null;\n        if (myAvdName != null) {\n          return myAvdName.equals(avdName);\n        }\n        return myFacet.isCompatibleDevice(device);\n      }\n    }\n    else if (myTargetChooser instanceof UsbDeviceTargetChooser) {\n      return !device.isEmulator();\n    }\n    return false;\n  }","id":56409,"modified_method":"@Nullable\n  Boolean isCompatibleDevice(@NotNull IDevice device) {\n    if (myTargetChooser instanceof EmulatorTargetChooser) {\n      if (device.isEmulator()) {\n        String avdName = device.isEmulator() ? device.getAvdName() : null;\n        if (myAvdName != null) {\n          return myAvdName.equals(avdName);\n        }\n        return myFacet.isCompatibleDevice(device);\n      }\n    }\n    else if (myTargetChooser instanceof UsbDeviceTargetChooser) {\n      return !device.isEmulator();\n    }\n    return false;\n  }","commit_id":"ff8dbc16bd27705f926d29333c1246901db6fb5b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private IDevice[] chooseDevicesAutomaticaly() {\n    final AndroidDebugBridge bridge = AndroidDebugBridge.getBridge();\n    if (bridge == null) {\n      return EMPTY_DEVICE_ARRAY;\n    }\n    IDevice[] devices = bridge.getDevices();\n\n    boolean showChooserDialog = false;\n    IDevice targetDevice = null;\n    for (IDevice device : devices) {\n      if (isCompatibleDevice(device) != Boolean.FALSE) {\n        if (targetDevice == null) {\n          targetDevice = device;\n        }\n        else {\n          showChooserDialog = true;\n          break;\n        }\n      }\n    }\n\n    if (showChooserDialog) {\n      final IDevice[][] devicesWrapper = {null};\n      ApplicationManager.getApplication().invokeAndWait(new Runnable() {\n        @Override\n        public void run() {\n          devicesWrapper[0] = chooseDevicesManually(new Condition<IDevice>() {\n            @Override\n            public boolean value(IDevice device) {\n              return isCompatibleDevice(device) != Boolean.FALSE;\n            }\n          });\n        }\n      }, ModalityState.defaultModalityState());\n      return devicesWrapper[0].length > 0 ? devicesWrapper[0] : null;\n    }\n\n    return targetDevice != null ? new IDevice[] {targetDevice} : EMPTY_DEVICE_ARRAY;\n  }","id":56410,"modified_method":"@Nullable\n  private IDevice[] chooseDevicesAutomaticaly() {\n    final List<IDevice> compatibleDevices = getAllCompatibleDevices();\n\n    if (compatibleDevices.size() == 0) {\n      return EMPTY_DEVICE_ARRAY;\n    }\n    else if (compatibleDevices.size() == 1) {\n      return new IDevice[] {compatibleDevices.get(0)};\n    }\n    else {\n      final IDevice[][] devicesWrapper = {null};\n      ApplicationManager.getApplication().invokeAndWait(new Runnable() {\n        @Override\n        public void run() {\n          devicesWrapper[0] = chooseDevicesManually(new Condition<IDevice>() {\n            @Override\n            public boolean value(IDevice device) {\n              return isCompatibleDevice(device) != Boolean.FALSE;\n            }\n          });\n        }\n      }, ModalityState.defaultModalityState());\n      return devicesWrapper[0].length > 0 ? devicesWrapper[0] : null;\n    }\n  }","commit_id":"ff8dbc16bd27705f926d29333c1246901db6fb5b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ExecutionResult execute(@NotNull Executor executor, @NotNull ProgramRunner runner) throws ExecutionException {\n    myProcessHandler = new DefaultDebugProcessHandler();\n    ConsoleView console;\n    if (isDebugMode()) {\n      Project project = myFacet.getModule().getProject();\n      final TextConsoleBuilder builder = TextConsoleBuilderFactory.getInstance().createBuilder(project);\n      console = builder.getConsole();\n      if (console != null) {\n        console.attachToProcess(myProcessHandler);\n      }\n    }\n    else {\n      console = myConfiguration.attachConsole(this, executor);\n    }\n    myConsole = console;\n\n    if (myTargetChooser instanceof ManualTargetChooser) {\n\n      final ExtendedDeviceChooserDialog chooser = new ExtendedDeviceChooserDialog(myFacet, mySupportMultipleDevices);\n      chooser.show();\n      if (chooser.getExitCode() != DialogWrapper.OK_EXIT_CODE) {\n        return null;\n      }\n      \n      if (chooser.isToLaunchEmulator()) {\n        final String selectedAvd = chooser.getSelectedAvd();\n        if (selectedAvd == null) {\n          return null;\n        }\n        myTargetChooser = new EmulatorTargetChooser(selectedAvd);\n        myAvdName = selectedAvd;\n      }\n      else {\n        final IDevice[] selectedDevices = chooser.getSelectedDevices();\n        if (selectedDevices.length == 0) {\n          return null;\n        }\n        myTargetDevices = selectedDevices;\n      }\n    }\n\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      public void run() {\n        start();\n      }\n    });\n    return new DefaultExecutionResult(console, myProcessHandler);\n  }","id":56411,"modified_method":"public ExecutionResult execute(@NotNull Executor executor, @NotNull ProgramRunner runner) throws ExecutionException {\n    myProcessHandler = new DefaultDebugProcessHandler();\n    AndroidProcessText.attach(myProcessHandler);\n    ConsoleView console;\n    if (isDebugMode()) {\n      Project project = myFacet.getModule().getProject();\n      final TextConsoleBuilder builder = TextConsoleBuilderFactory.getInstance().createBuilder(project);\n      console = builder.getConsole();\n      if (console != null) {\n        console.attachToProcess(myProcessHandler);\n      }\n    }\n    else {\n      console = myConfiguration.attachConsole(this, executor);\n    }\n    myConsole = console;\n\n    if (myTargetChooser instanceof ManualTargetChooser) {\n\n      final ExtendedDeviceChooserDialog chooser = new ExtendedDeviceChooserDialog(myFacet, mySupportMultipleDevices);\n      chooser.show();\n      if (chooser.getExitCode() != DialogWrapper.OK_EXIT_CODE) {\n        return null;\n      }\n      \n      if (chooser.isToLaunchEmulator()) {\n        final String selectedAvd = chooser.getSelectedAvd();\n        if (selectedAvd == null) {\n          return null;\n        }\n        myTargetChooser = new EmulatorTargetChooser(selectedAvd);\n        myAvdName = selectedAvd;\n      }\n      else {\n        final IDevice[] selectedDevices = chooser.getSelectedDevices();\n        if (selectedDevices.length == 0) {\n          return null;\n        }\n        myTargetDevices = selectedDevices;\n      }\n    }\n\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      public void run() {\n        chooseTargetDeviceAndStart();\n      }\n    });\n    return new DefaultExecutionResult(console, myProcessHandler);\n  }","commit_id":"ff8dbc16bd27705f926d29333c1246901db6fb5b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void start() {\n    message(\"Waiting for device.\", STDOUT);\n    if (myTargetDevices.length == 0) {\n      if (!chooseOrLaunchDevice()) {\n        return;\n      }\n    }\n    if (myDebugMode) {\n      AndroidDebugBridge.addClientChangeListener(this);\n    }\n    final MyDeviceChangeListener[] deviceListener = {null};\n    getProcessHandler().addProcessListener(new ProcessAdapter() {\n      @Override\n      public void processWillTerminate(ProcessEvent event, boolean willBeDestroyed) {\n        if (myDebugMode) {\n          AndroidDebugBridge.removeClientChangeListener(AndroidRunningState.this);\n        }\n        if (deviceListener[0] != null) {\n          Disposer.dispose(deviceListener[0]);\n          AndroidDebugBridge.removeDeviceChangeListener(deviceListener[0]);\n        }\n        myStopped = true;\n        synchronized (myLock) {\n          myLock.notifyAll();\n        }\n      }\n    });\n    deviceListener[0] = prepareAndStartAppWhenDeviceIsOnline();\n  }","id":56412,"modified_method":"void start() {\n    if (myDebugMode) {\n      AndroidDebugBridge.addClientChangeListener(this);\n    }\n    final MyDeviceChangeListener[] deviceListener = {null};\n    getProcessHandler().addProcessListener(new ProcessAdapter() {\n      @Override\n      public void processWillTerminate(ProcessEvent event, boolean willBeDestroyed) {\n        if (myDebugMode) {\n          AndroidDebugBridge.removeClientChangeListener(AndroidRunningState.this);\n        }\n        if (deviceListener[0] != null) {\n          Disposer.dispose(deviceListener[0]);\n          AndroidDebugBridge.removeDeviceChangeListener(deviceListener[0]);\n        }\n        myStopped = true;\n        synchronized (myLock) {\n          myLock.notifyAll();\n        }\n      }\n    });\n    deviceListener[0] = prepareAndStartAppWhenDeviceIsOnline();\n  }","commit_id":"ff8dbc16bd27705f926d29333c1246901db6fb5b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void execute( MavenExecutionRequest request )\n        throws MavenExecutionException\n    {\n        EventDispatcher dispatcher = request.getEventDispatcher();\n\n        String event = MavenEvents.REACTOR_EXECUTION;\n\n        dispatcher.dispatchStart( event, request.getBaseDirectory() );\n\n        try\n        {\n            ReactorManager rm = doExecute( request, dispatcher );\n\n            // TODO: shoul all the logging be left to the CLI?\n            logReactorSummary( rm );\n\n            if ( rm.hasBuildFailures() )\n            {\n                logErrors( rm, request.isShowErrors() );\n            }\n            else\n            {\n                logSuccess( rm );\n            }\n\n            stats( request.getStartTime() );\n\n            line();\n\n            dispatcher.dispatchEnd( event, request.getBaseDirectory() );\n        }\n        catch ( LifecycleExecutionException e )\n        {\n            dispatcher.dispatchError( event, request.getBaseDirectory(), e );\n\n            logError( e, request.isShowErrors() );\n\n            stats( request.getStartTime() );\n\n            line();\n\n            throw new MavenExecutionException( e.getMessage(), e );\n        }\n        catch ( BuildFailureException e )\n        {\n            dispatcher.dispatchError( event, request.getBaseDirectory(), e );\n\n            logFailure( e, request.isShowErrors() );\n\n            stats( request.getStartTime() );\n\n            line();\n\n            throw new MavenExecutionException( e.getMessage(), e );\n        }\n        catch ( Throwable t )\n        {\n            dispatcher.dispatchError( event, request.getBaseDirectory(), t );\n\n            logFatal( t );\n\n            stats( request.getStartTime() );\n\n            line();\n\n            throw new MavenExecutionException( \"Error executing project within the reactor\", t );\n        }\n    }","id":56413,"modified_method":"public void execute( MavenExecutionRequest request )\n        throws MavenExecutionException\n    {\n        EventDispatcher dispatcher = request.getEventDispatcher();\n\n        String event = MavenEvents.REACTOR_EXECUTION;\n\n        dispatcher.dispatchStart( event, request.getBaseDirectory() );\n\n        ReactorManager rm;\n        try\n        {\n            rm = doExecute( request, dispatcher );\n        }\n        catch ( LifecycleExecutionException e )\n        {\n            dispatcher.dispatchError( event, request.getBaseDirectory(), e );\n\n            logError( e, request.isShowErrors() );\n\n            stats( request.getStartTime() );\n\n            line();\n\n            throw new MavenExecutionException( e.getMessage(), e );\n        }\n        catch ( BuildFailureException e )\n        {\n            dispatcher.dispatchError( event, request.getBaseDirectory(), e );\n\n            logFailure( e, request.isShowErrors() );\n\n            stats( request.getStartTime() );\n\n            line();\n\n            throw new MavenExecutionException( e.getMessage(), e );\n        }\n        catch ( Throwable t )\n        {\n            dispatcher.dispatchError( event, request.getBaseDirectory(), t );\n\n            logFatal( t );\n\n            stats( request.getStartTime() );\n\n            line();\n\n            throw new MavenExecutionException( \"Error executing project within the reactor\", t );\n        }\n\n        // Either the build was successful, or it was a fail_at_end/fail_never reactor build\n\n        // TODO: should all the logging be left to the CLI?\n        logReactorSummary( rm );\n\n        if ( rm.hasBuildFailures() )\n        {\n            logErrors( rm, request.isShowErrors() );\n\n            if ( !ReactorManager.FAIL_NEVER.equals( rm.getFailureBehavior() ) )\n            {\n                dispatcher.dispatchError( event, request.getBaseDirectory(), null );\n\n                getLogger().info( \"BUILD ERRORS\" );\n\n                line();\n\n                stats( request.getStartTime() );\n\n                line();\n\n                throw new MavenExecutionException( \"Some builds failed\" );\n            }\n            else\n            {\n                getLogger().info( \" + Ignoring failures\" );\n            }\n        }\n\n        logSuccess( rm );\n\n        stats( request.getStartTime() );\n\n        line();\n\n        dispatcher.dispatchEnd( event, request.getBaseDirectory() );\n    }","commit_id":"a9f4d9f1e588bd5e89c4af908d1dfc8b6e81e741","url":"https://github.com/apache/maven"},{"original_method":"protected void logFatal( Throwable error )\n    {\n        line();\n\n        getLogger().info( \"FATAL ERROR\" );\n\n        line();\n\n        logDiagnostics( error );\n\n        logTrace( error, true );\n    }","id":56414,"modified_method":"protected void logFatal( Throwable error )\n    {\n        line();\n\n        getLogger().error( \"FATAL ERROR\" );\n\n        line();\n\n        logDiagnostics( error );\n\n        logTrace( error, true );\n    }","commit_id":"a9f4d9f1e588bd5e89c4af908d1dfc8b6e81e741","url":"https://github.com/apache/maven"},{"original_method":"protected void logError( Exception e, boolean showErrors )\n    {\n        line();\n\n        getLogger().info( \"BUILD ERROR\" );\n\n        line();\n\n        logDiagnostics( e );\n\n        logTrace( e, showErrors );\n    }","id":56415,"modified_method":"protected void logError( Exception e, boolean showErrors )\n    {\n        line();\n\n        getLogger().error( \"BUILD ERROR\" );\n\n        line();\n\n        logDiagnostics( e );\n\n        logTrace( e, showErrors );\n    }","commit_id":"a9f4d9f1e588bd5e89c4af908d1dfc8b6e81e741","url":"https://github.com/apache/maven"},{"original_method":"private void logDiagnostics( Throwable t )\n    {\n        String message = null;\n        if ( errorDiagnostics != null )\n        {\n            message = errorDiagnostics.diagnose( t );\n        }\n\n        if ( message == null )\n        {\n            message = t.getMessage();\n        }\n\n        getLogger().error( message );\n\n        line();\n    }","id":56416,"modified_method":"private void logDiagnostics( Throwable t )\n    {\n        String message = null;\n        if ( errorDiagnostics != null )\n        {\n            message = errorDiagnostics.diagnose( t );\n        }\n\n        if ( message == null )\n        {\n            message = t.getMessage();\n        }\n\n        getLogger().info( message );\n\n        line();\n    }","commit_id":"a9f4d9f1e588bd5e89c4af908d1dfc8b6e81e741","url":"https://github.com/apache/maven"},{"original_method":"private void logTrace( Throwable t, boolean showErrors )\n    {\n        if ( getLogger().isDebugEnabled() )\n        {\n            getLogger().debug( \"Trace\", t );\n\n            line();\n        }\n        else if ( showErrors )\n        {\n            getLogger().error( \"Trace\", t );\n\n            line();\n        }\n        else\n        {\n            getLogger().info( \"For more information, run Maven with the -e switch\" );\n        }\n    }","id":56417,"modified_method":"private void logTrace( Throwable t, boolean showErrors )\n    {\n        if ( getLogger().isDebugEnabled() )\n        {\n            getLogger().info( \"Trace\", t );\n\n            line();\n        }\n        else if ( showErrors )\n        {\n            getLogger().info( \"Trace\", t );\n\n            line();\n        }\n        else\n        {\n            getLogger().info( \"For more information, run Maven with the -e switch\" );\n        }\n    }","commit_id":"a9f4d9f1e588bd5e89c4af908d1dfc8b6e81e741","url":"https://github.com/apache/maven"},{"original_method":"protected void logFailure( BuildFailureException e, boolean showErrors )\n    {\n        line();\n\n        getLogger().info( \"BUILD FAILURE\" );\n\n        line();\n\n        logDiagnostics( e );\n\n        if ( e.getLongMessage() != null )\n        {\n            getLogger().info( e.getLongMessage() );\n\n            line();\n        }\n\n        logTrace( e, showErrors );\n    }","id":56418,"modified_method":"protected void logFailure( BuildFailureException e, boolean showErrors )\n    {\n        line();\n\n        getLogger().error( \"BUILD FAILURE\" );\n\n        line();\n\n        logDiagnostics( e );\n\n        if ( e.getLongMessage() != null )\n        {\n            getLogger().info( e.getLongMessage() );\n\n            line();\n        }\n\n        logTrace( e, showErrors );\n    }","commit_id":"a9f4d9f1e588bd5e89c4af908d1dfc8b6e81e741","url":"https://github.com/apache/maven"},{"original_method":"@Test\n\tpublic void testLoadJDK6() throws Exception {\n\t\tif (JavaDetector.isJDK6()) {\n\t\t\tProperties properties = PropertiesUtil.loadJDK6(\n\t\t\t\tnew UnsyncStringReader(_PROPERTIES_STRING));\n\n\t\t\tfor (String[] property : _PROPERTIES_ARRAY) {\n\t\t\t\tAssert.assertEquals(property[1], properties.get(property[0]));\n\t\t\t}\n\t\t}\n\t}","id":56419,"modified_method":"@Test\n\tpublic void testLoadJDK6() throws Exception {\n\t\tif (JavaDetector.isJDK6() || JavaDetector.isJDK7()) {\n\t\t\tProperties properties = PropertiesUtil.loadJDK6(\n\t\t\t\tnew UnsyncStringReader(_PROPERTIES_STRING));\n\n\t\t\tfor (String[] property : _PROPERTIES_ARRAY) {\n\t\t\t\tAssert.assertEquals(property[1], properties.get(property[0]));\n\t\t\t}\n\t\t}\n\t}","commit_id":"f36ac9e30f05d2dd0ac7507b2248cb937ca69d93","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Properties load(InputStream is, String charsetName)\n\t\tthrows IOException {\n\n\t\tif (JavaDetector.isJDK6()) {\n\t\t\treturn loadJDK6(new InputStreamReader(is, charsetName));\n\t\t}\n\t\telse {\n\t\t\treturn loadJDK5(is, charsetName);\n\t\t}\n\t}","id":56420,"modified_method":"public static Properties load(InputStream is, String charsetName)\n\t\tthrows IOException {\n\n\t\tif (JavaDetector.isJDK6() || JavaDetector.isJDK7()) {\n\t\t\treturn loadJDK6(new InputStreamReader(is, charsetName));\n\t\t}\n\t\telse {\n\t\t\treturn loadJDK5(is, charsetName);\n\t\t}\n\t}","commit_id":"861d7cc1b8cfb8143ac90b29e059eba39fb4c195","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Properties load(String s, String charsetName)\n\t\tthrows IOException {\n\n\t\tif (JavaDetector.isJDK6()) {\n\t\t\treturn loadJDK6(new UnsyncStringReader(s));\n\t\t}\n\n\t\tByteBuffer byteBuffer = CharsetEncoderUtil.encode(charsetName, s);\n\n\t\tInputStream is = new UnsyncByteArrayInputStream(\n\t\t\tbyteBuffer.array(), byteBuffer.arrayOffset(), byteBuffer.limit());\n\n\t\treturn loadJDK5(is, charsetName);\n\t}","id":56421,"modified_method":"public static Properties load(String s, String charsetName)\n\t\tthrows IOException {\n\n\t\tif (JavaDetector.isJDK6() || JavaDetector.isJDK7()) {\n\t\t\treturn loadJDK6(new UnsyncStringReader(s));\n\t\t}\n\n\t\tByteBuffer byteBuffer = CharsetEncoderUtil.encode(charsetName, s);\n\n\t\tInputStream is = new UnsyncByteArrayInputStream(\n\t\t\tbyteBuffer.array(), byteBuffer.arrayOffset(), byteBuffer.limit());\n\n\t\treturn loadJDK5(is, charsetName);\n\t}","commit_id":"861d7cc1b8cfb8143ac90b29e059eba39fb4c195","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private AuthToken validateTenant(AuthToken authToken, String tenant) {\n       if (authToken == null || !roleIsServiceAdmin(authToken) && !authToken.getTenantId().equalsIgnoreCase(tenant)) {\n           LOG.error(\"Unable to validate token for tenant.  Invalid token.\");\n           return null;\n       } else {\n           return authToken;\n       }\n   }","id":56422,"modified_method":"private AuthToken validateTenant(AuthToken authToken, String tenantID) {\n       if (authToken != null && !roleIsServiceAdmin(authToken) && !authToken.getTenantId().equalsIgnoreCase(tenantID)) {\n           LOG.error(\"Unable to validate token for tenant.  Invalid token.\");\n           return null;\n       } else {\n           return authToken;\n       }\n   }","commit_id":"f555f69bbb05ec1acb58505b222d2da073f90b79","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n   public AuthToken validateToken(ExtractorResult<String> account, String token) {\n      if (account != null) {\n          AuthToken authToken = authenticationService.validateToken(account.getResult(), token);\n\n          return validateTenant(authToken, account.getResult());\n      } else {\n          return authenticationService.validateToken(null, token);\n      }\n   }","id":56423,"modified_method":"@Override\n   public AuthToken validateToken(ExtractorResult<String> account, String token) {\n      return account != null ? validateTenant(authenticationService.validateToken(account.getResult(), token), account.getResult())\n              : authenticationService.validateToken(null, token);\n   }","commit_id":"f555f69bbb05ec1acb58505b222d2da073f90b79","url":"https://github.com/rackerlabs/repose"},{"original_method":"private boolean roleIsServiceAdmin(AuthToken authToken) {\n       for (String role : Arrays.asList(authToken.getRoles().split(\",\"))) {\n           if (adminRoles.getRole().contains(role)) {\n               return true;\n           }\n       }\n\n       return false;\n   }","id":56424,"modified_method":"private boolean roleIsServiceAdmin(AuthToken authToken) {\n       for (String role : authToken.getRoles().split(\",\")) {\n           if (adminRoles.getRole().contains(role)) {\n               return true;\n           }\n       }\n\n       return false;\n   }","commit_id":"f555f69bbb05ec1acb58505b222d2da073f90b79","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Before\n        public void beforeAny() {\n            request = mock(HttpServletRequest.class);\n            response = mock(ReadableHttpServletResponse.class);\n\n            osauthConfig = new OpenstackAuth();\n            osauthConfig.setDelegable(delegable());\n            osauthConfig.setTenanted(isTenanted());\n\n            keyedRegexExtractor = new KeyedRegexExtractor();\n\n            final ClientMapping mapping = new ClientMapping();\n            mapping.setIdRegex(\"/start/(.*)/\");\n\n            final ClientMapping mapping2 = new ClientMapping();\n            mapping2.setIdRegex(\".*\\\\?.*username=(.+)\");\n\n            osauthConfig.getClientMapping().add(mapping);\n            osauthConfig.getClientMapping().add(mapping2);\n            keyedRegexExtractor.addPattern(mapping.getIdRegex());\n            keyedRegexExtractor.addPattern(mapping2.getIdRegex());\n\n            final OpenStackIdentityService openStackIdentityService = new OpenStackIdentityService();\n            openStackIdentityService.setUri(\"http://some.auth.endpoint\");\n            osauthConfig.setIdentityService(openStackIdentityService);\n\n            authService = mock(AuthenticationService.class);\n\n            whiteListRegexPatterns = new ArrayList<Pattern>();\n            whiteListRegexPatterns.add(Pattern.compile(\"/v1.0/application\\\\.wadl\"));\n\n            endpointsConfiguration = new EndpointsConfiguration(\"json\", AUTH_USER_CACHE_TTL, new Integer(\"1000\"));\n            Configurables configurables = new Configurables(delegable(), \"http://some.auth.endpoint\", keyedRegexExtractor, isTenanted(), AUTH_GROUP_CACHE_TTL,\n                    AUTH_TOKEN_CACHE_TTL,AUTH_USER_CACHE_TTL,requestGroups(), endpointsConfiguration);\n            handler = new OpenStackAuthenticationHandler(configurables, authService, null, null,null,null, new UriMatcher(whiteListRegexPatterns));\n\n\n            // Handler with cache\n            store = mock(Datastore.class);\n            AuthTokenCache cache = new AuthTokenCache(store, AUTH_TOKEN_CACHE_PREFIX);\n            AuthGroupCache grpCache = new AuthGroupCache(store, AUTH_GROUP_CACHE_PREFIX);\n            AuthUserCache usrCache = new AuthUserCache(store, AUTH_USER_CACHE_PREFIX);\n            EndpointsCache endpointsCache = new EndpointsCache(store, ENDPOINTS_CACHE_PREFIX);\n\n            handlerWithCache = new OpenStackAuthenticationHandler(configurables, authService, cache, grpCache,usrCache, endpointsCache, new UriMatcher(whiteListRegexPatterns));\n        }","id":56425,"modified_method":"@Before\n        public void beforeAny() {\n            request = mock(HttpServletRequest.class);\n            response = mock(ReadableHttpServletResponse.class);\n\n            osauthConfig = new OpenstackAuth();\n            osauthConfig.setDelegable(delegable());\n            osauthConfig.setTenanted(isTenanted());\n\n            keyedRegexExtractor = new KeyedRegexExtractor();\n\n            final ClientMapping mapping = new ClientMapping();\n            mapping.setIdRegex(\"/start/([^/]*)/\");\n\n            final ClientMapping mapping2 = new ClientMapping();\n            mapping2.setIdRegex(\".*\\\\?.*username=(.+)\");\n\n            osauthConfig.getClientMapping().add(mapping);\n            osauthConfig.getClientMapping().add(mapping2);\n            keyedRegexExtractor.addPattern(mapping.getIdRegex());\n            keyedRegexExtractor.addPattern(mapping2.getIdRegex());\n\n            final OpenStackIdentityService openStackIdentityService = new OpenStackIdentityService();\n            openStackIdentityService.setUri(\"http://some.auth.endpoint\");\n            osauthConfig.setIdentityService(openStackIdentityService);\n\n            authService = mock(AuthenticationService.class);\n\n            whiteListRegexPatterns = new ArrayList<Pattern>();\n            whiteListRegexPatterns.add(Pattern.compile(\"/v1.0/application\\\\.wadl\"));\n\n            endpointsConfiguration = new EndpointsConfiguration(\"json\", AUTH_USER_CACHE_TTL, new Integer(\"1000\"));\n            Configurables configurables = new Configurables(delegable(), \"http://some.auth.endpoint\", keyedRegexExtractor, isTenanted(), AUTH_GROUP_CACHE_TTL,\n                    AUTH_TOKEN_CACHE_TTL,AUTH_USER_CACHE_TTL,requestGroups(), endpointsConfiguration);\n            handler = new OpenStackAuthenticationHandler(configurables, authService, null, null,null,null, new UriMatcher(whiteListRegexPatterns));\n\n\n            // Handler with cache\n            store = mock(Datastore.class);\n            AuthTokenCache cache = new AuthTokenCache(store, AUTH_TOKEN_CACHE_PREFIX);\n            AuthGroupCache grpCache = new AuthGroupCache(store, AUTH_GROUP_CACHE_PREFIX);\n            AuthUserCache usrCache = new AuthUserCache(store, AUTH_USER_CACHE_PREFIX);\n            EndpointsCache endpointsCache = new EndpointsCache(store, ENDPOINTS_CACHE_PREFIX);\n\n            handlerWithCache = new OpenStackAuthenticationHandler(configurables, authService, cache, grpCache,usrCache, endpointsCache, new UriMatcher(whiteListRegexPatterns));\n        }","commit_id":"f555f69bbb05ec1acb58505b222d2da073f90b79","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n   public AuthToken validateToken(ExtractorResult<String> account, String token) {\n      return account != null ? validateTenant(authenticationService.validateToken(account.getResult(), token), account.getResult())\n              : authenticationService.validateToken(null, token);\n   }","id":56426,"modified_method":"@Override\n    public AuthToken validateToken(ExtractorResult<String> account, String token) {\n        AuthToken authToken = null;\n\n        if (account != null) {\n            authToken = validateTenant(authenticationService.validateToken(account.getResult(), token), account.getResult());\n        } else {\n            authToken = authenticationService.validateToken(null, token);\n        }\n\n        /**\n         * If any role in that token is in the BypassTenantRoles list, bypass the tenant check\n         */\n        boolean bypassTenantCheck = false;\n        for (String role : authToken.getRoles().split(\",\")) {\n            if (bypassTenantCheckRoles.contains(role))\n                bypassTenantCheck = true;\n        }\n\n        if (!bypassTenantCheck) {\n            if (authToken.getTenantId() == null || authToken.getTenantName() == null) {\n                //Moved this check from within the OpenStackToken into here\n                throw new IllegalArgumentException(\"Invalid Response from Auth. Token object must have a tenant\");\n            }\n        }\n        return authToken;\n    }","commit_id":"a3519b9c48ed840a0aaae9a41ab65d1aabb7c126","url":"https://github.com/rackerlabs/repose"},{"original_method":"public OpenStackAuthenticationHandler(Configurables cfg, AuthenticationService serviceClient, AuthTokenCache cache, AuthGroupCache grpCache, AuthUserCache usrCache, EndpointsCache endpointsCache, UriMatcher uriMatcher) {\n      super(cfg, cache, grpCache, usrCache, endpointsCache, uriMatcher);\n      this.authenticationService = serviceClient;\n      this.wwwAuthHeaderContents = WWW_AUTH_PREFIX + cfg.getAuthServiceUri();\n      this.serviceAdminRoles = cfg.getServiceAdminRoles();\n   }","id":56427,"modified_method":"public OpenStackAuthenticationHandler(Configurables cfg, AuthenticationService serviceClient, AuthTokenCache cache, AuthGroupCache grpCache, AuthUserCache usrCache, EndpointsCache endpointsCache, UriMatcher uriMatcher) {\n        super(cfg, cache, grpCache, usrCache, endpointsCache, uriMatcher);\n        this.authenticationService = serviceClient;\n        this.wwwAuthHeaderContents = WWW_AUTH_PREFIX + cfg.getAuthServiceUri();\n        this.serviceAdminRoles = cfg.getServiceAdminRoles();\n        this.bypassTenantCheckRoles = cfg.getBypassTenantCheckRoles();\n    }","commit_id":"a3519b9c48ed840a0aaae9a41ab65d1aabb7c126","url":"https://github.com/rackerlabs/repose"},{"original_method":"private List<AuthGroup> getAuthGroups(AuthToken token, int offset) throws AuthServiceException {\n        if (token != null && requestGroups) {\n\n            AuthGroups authGroups = checkGroupCache(token);\n\n            if (authGroups == null) {\n\n                authGroups = getGroups(token.getUserId());\n                cacheGroupInfo(token, authGroups, offset);\n            }\n\n            if (authGroups != null && authGroups.getGroups() != null) {\n                return authGroups.getGroups();\n            }\n        }\n        return new ArrayList<>();\n\n    }","id":56428,"modified_method":"private List<AuthGroup> getAuthGroups(AuthToken token, int offset, String requestGuid) throws AuthServiceException {\n        if (token != null && requestGroups) {\n\n            AuthGroups authGroups = checkGroupCache(token);\n\n            if (authGroups == null) {\n\n                authGroups = getGroups(token.getUserId(), requestGuid);\n                cacheGroupInfo(token, authGroups, offset);\n            }\n\n            if (authGroups != null && authGroups.getGroups() != null) {\n                return authGroups.getGroups();\n            }\n        }\n        return new ArrayList<>();\n\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"private FilterDirector authenticate(HttpServletRequest request) {\n        final FilterDirector filterDirector = new FilterDirectorImpl();\n        filterDirector.setResponseStatusCode(HttpServletResponse.SC_UNAUTHORIZED);\n        filterDirector.setFilterAction(FilterAction.RETURN);\n        int offset = getCacheOffset();\n\n        final String authToken = request.getHeader(CommonHttpHeader.AUTH_TOKEN.toString());\n        ExtractorResult<String> account = null;\n        AuthToken token = null;\n        String contactId = null;\n\n        if (tenanted) {\n            account = extractAccountIdentification(request);\n        }\n\n        final boolean allow = allowAccount(account);\n\n        String endpointsInBase64 = \"\";\n        List<AuthGroup> groups = new ArrayList<AuthGroup>();\n        try {\n            if (!StringUtilities.isBlank(authToken) && allow) {\n                token = checkToken(account, authToken);\n\n                if (token == null) {\n                    token = validateToken(account, StringUriUtilities.encodeUri(authToken));\n                    cacheUserInfo(token, offset);\n                }\n            }\n\n            if (token != null) {\n                groups = getAuthGroups(token, offset);\n                contactId = token.getContactId();\n\n                //getting the encoded endpoints to pass into the header, if the endpoints config is not null\n                if (endpointsConfiguration != null) {\n                    endpointsInBase64 = getEndpointsInBase64(token);\n                }\n            }\n        } catch (AuthServiceOverLimitException ex) {\n            LOG.error(FAILURE_AUTH_N + REASON + ex.getMessage());\n            LOG.trace(\"\", ex);\n            filterDirector.setResponseStatusCode(HttpServletResponse.SC_SERVICE_UNAVAILABLE); // (503)\n            String retry = ex.getRetryAfter();\n            if (retry == null) {\n                Calendar retryCalendar = new GregorianCalendar();\n                retryCalendar.add(Calendar.SECOND, 5);\n                retry = new HttpDate(retryCalendar.getTime()).toRFC1123();\n            }\n            filterDirector.responseHeaderManager().appendHeader(HttpHeaders.RETRY_AFTER, retry);\n            delegationMessage.set(FAILURE_AUTH_N);\n        } catch (AuthServiceException ex) {\n            LOG.error(FAILURE_AUTH_N + REASON + ex.getMessage());\n            LOG.trace(\"\", ex);\n            if (ex.getCause() instanceof AkkaServiceClientException && ex.getCause().getCause() instanceof TimeoutException) {\n                filterDirector.setResponseStatusCode(HttpServletResponse.SC_GATEWAY_TIMEOUT);\n            } else {\n                filterDirector.setResponseStatusCode(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n            }\n            delegationMessage.set(FAILURE_AUTH_N);\n        } catch (Exception ex) {\n            LOG.error(FAILURE_AUTH_N, ex);\n            filterDirector.setResponseStatusCode(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n            delegationMessage.set(FAILURE_AUTH_N + REASON + ex.getMessage());\n        }\n\n        setFilterDirectorValues(authToken, token, delegable, delegableQuality, delegationMessage.get(), filterDirector,\n                account == null ? \"\" : account.getResult(), groups, endpointsInBase64, contactId, tenanted, sendAllTenantIds,\n                sendTenantIdQuality);\n\n        delegationMessage.remove();\n\n        return filterDirector;\n    }","id":56429,"modified_method":"private FilterDirector authenticate(HttpServletRequest request) {\n        final FilterDirector filterDirector = new FilterDirectorImpl();\n        filterDirector.setResponseStatusCode(HttpServletResponse.SC_UNAUTHORIZED);\n        filterDirector.setFilterAction(FilterAction.RETURN);\n        int offset = getCacheOffset();\n\n        final String requestGuid = request.getHeader(CommonHttpHeader.REQUEST_GUID.toString());\n        final String authToken = request.getHeader(CommonHttpHeader.AUTH_TOKEN.toString());\n        ExtractorResult<String> account = null;\n        AuthToken token = null;\n        String contactId = null;\n\n        if (tenanted) {\n            account = extractAccountIdentification(request);\n        }\n\n        final boolean allow = allowAccount(account);\n\n        String endpointsInBase64 = \"\";\n        List<AuthGroup> groups = new ArrayList<AuthGroup>();\n        try {\n            if (!StringUtilities.isBlank(authToken) && allow) {\n                token = checkToken(account, authToken);\n\n                if (token == null) {\n                    token = validateToken(account, StringUriUtilities.encodeUri(authToken), requestGuid);\n                    cacheUserInfo(token, offset);\n                }\n            }\n\n            if (token != null) {\n                groups = getAuthGroups(token, offset, requestGuid);\n                contactId = token.getContactId();\n\n                //getting the encoded endpoints to pass into the header, if the endpoints config is not null\n                if (endpointsConfiguration != null) {\n                    endpointsInBase64 = getEndpointsInBase64(token, requestGuid);\n                }\n            }\n        } catch (AuthServiceOverLimitException ex) {\n            LOG.error(FAILURE_AUTH_N + REASON + ex.getMessage());\n            LOG.trace(\"\", ex);\n            filterDirector.setResponseStatusCode(HttpServletResponse.SC_SERVICE_UNAVAILABLE); // (503)\n            String retry = ex.getRetryAfter();\n            if (retry == null) {\n                Calendar retryCalendar = new GregorianCalendar();\n                retryCalendar.add(Calendar.SECOND, 5);\n                retry = new HttpDate(retryCalendar.getTime()).toRFC1123();\n            }\n            filterDirector.responseHeaderManager().appendHeader(HttpHeaders.RETRY_AFTER, retry);\n            delegationMessage.set(FAILURE_AUTH_N);\n        } catch (AuthServiceException ex) {\n            LOG.error(FAILURE_AUTH_N + REASON + ex.getMessage());\n            LOG.trace(\"\", ex);\n            if (ex.getCause() instanceof AkkaServiceClientException && ex.getCause().getCause() instanceof TimeoutException) {\n                filterDirector.setResponseStatusCode(HttpServletResponse.SC_GATEWAY_TIMEOUT);\n            } else {\n                filterDirector.setResponseStatusCode(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n            }\n            delegationMessage.set(FAILURE_AUTH_N);\n        } catch (Exception ex) {\n            LOG.error(FAILURE_AUTH_N, ex);\n            filterDirector.setResponseStatusCode(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n            delegationMessage.set(FAILURE_AUTH_N + REASON + ex.getMessage());\n        }\n\n        setFilterDirectorValues(authToken, token, delegable, delegableQuality, delegationMessage.get(), filterDirector,\n                account == null ? \"\" : account.getResult(), groups, endpointsInBase64, contactId, tenanted, sendAllTenantIds,\n                sendTenantIdQuality);\n\n        delegationMessage.remove();\n\n        return filterDirector;\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"private String getEndpointsInBase64(AuthToken token) throws AuthServiceException {\n        String tokenId = null;\n\n        if (token != null) {\n            tokenId = token.getTokenId();\n        }\n\n        String endpoints = checkEndpointsCache(tokenId);\n\n        //if endpoints are not already in the cache then make a call for them and cache what comes back\n        if (endpoints == null) {\n            endpoints = getEndpointsBase64(tokenId, endpointsConfiguration);\n            cacheEndpoints(tokenId, endpoints);\n        }\n\n        return endpoints;\n    }","id":56430,"modified_method":"private String getEndpointsInBase64(AuthToken token, String requestGuid) throws AuthServiceException {\n        String tokenId = null;\n\n        if (token != null) {\n            tokenId = token.getTokenId();\n        }\n\n        String endpoints = checkEndpointsCache(tokenId);\n\n        //if endpoints are not already in the cache then make a call for them and cache what comes back\n        if (endpoints == null) {\n            endpoints = getEndpointsBase64(tokenId, endpointsConfiguration, requestGuid);\n            cacheEndpoints(tokenId, endpoints);\n        }\n\n        return endpoints;\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public AuthenticateResponse validateToken(String tenant, String userToken) throws AuthServiceException { //this is where we ask auth service if token is valid\n\n        AuthenticateResponse authenticateResponse = null;\n        ServiceClientResponse serviceResponse = validateUser(userToken, tenant, false);\n\n        switch (serviceResponse.getStatus()) {\n            case HttpServletResponse.SC_OK:\n                authenticateResponse = openStackCoreResponseUnmarshaller.unmarshall(serviceResponse.getData(), AuthenticateResponse.class);\n                break;\n\n            case HttpServletResponse.SC_NOT_FOUND:\n                // User's token is bad\n                delegationMessage.set(\"Unable to validate token: \" + userToken + \". Invalid token.\");\n                LOG.error(\"Unable to validate token.  Invalid token. \" + serviceResponse.getStatus());\n                break;\n\n            case HttpServletResponse.SC_UNAUTHORIZED:\n                LOG.error(\"Unable to validate token: \" + userToken + \" due to status code: \" + serviceResponse.getStatus() + \" :admin token expired. Retrieving new admin token and retrying token validation...\");\n\n                serviceResponse = validateUser(userToken, tenant, true);\n\n                if (serviceResponse.getStatus() == HttpServletResponse.SC_OK) {\n                    authenticateResponse = openStackCoreResponseUnmarshaller.unmarshall(serviceResponse.getData(), AuthenticateResponse.class);\n                } else if (serviceResponse.getStatus() == HttpServletResponse.SC_NOT_FOUND) {\n                    delegationMessage.set(\"Unable to validate token: \" + userToken + \". Invalid token. Status Code: \" + serviceResponse.getStatus());\n                    LOG.error(\"Unable to validate token.  Invalid token. \" + serviceResponse.getStatus());\n                } else {\n                    delegationMessage.set(\"Unable to validate token: \" + userToken + \" with configured admin credentials.\");\n                    LOG.error(\"Still unable to validate token: \" + serviceResponse.getStatus());\n                    throw new AuthServiceException(\"Unable to authenticate user with configured Admin credentials\");\n                }\n                break;\n            case HttpServletResponse.SC_REQUEST_ENTITY_TOO_LARGE:\n            case FilterDirector.SC_TOO_MANY_REQUESTS: // (413 | 429)\n                delegationMessage.set(\"Unable to validate token: \" + userToken + \". Invalid token. Status Code: \" + serviceResponse.getStatus());\n                throw buildAuthServiceOverLimitException(serviceResponse);\n            default:\n                delegationMessage.set(\"Authentication Service returned an unexpected response status code: \" + serviceResponse.getStatus() + \" for token: \" + userToken);\n                LOG.error(\"Authentication Service returned an unexpected response status code: \" + serviceResponse.getStatus());\n                throw new AuthServiceException(\"Unable to validate token. Response from \" + targetHostUri + \": \" + serviceResponse.getStatus());\n        }\n\n        return authenticateResponse;\n    }","id":56431,"modified_method":"@Override\n    public AuthenticateResponse validateToken(String tenant, String userToken) throws AuthServiceException {\n        return validateToken(tenant, userToken, null);\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public String getBase64EndpointsStringForHeaders(String userToken, String format) throws AuthServiceException {\n        final Map<String, String> headers = new HashMap<>();\n\n        //defaulting to json format\n        if (\"xml\".equalsIgnoreCase(format)) {\n            format = MediaType.APPLICATION_XML;\n        } else {\n            format = MediaType.APPLICATION_JSON;\n        }\n\n        String rawEndpointsData;\n        try {\n            //telling the service what format to send the endpoints to us in\n            headers.put(ACCEPT_HEADER, format);\n            headers.put(AUTH_TOKEN_HEADER, getAdminToken(false));\n\n            ServiceClientResponse serviceClientResponse = akkaServiceClient.get(ENDPOINTS_PREFIX + userToken, targetHostUri + TOKENS + userToken + ENDPOINTS, headers);\n\n            switch (serviceClientResponse.getStatus()) {\n                case HttpServletResponse.SC_OK:\n                    rawEndpointsData = convertStreamToBase64String(serviceClientResponse.getData());\n                    break;\n                case HttpServletResponse.SC_UNAUTHORIZED:\n                    LOG.error(\"Unable to get endpoints for user: \" + serviceClientResponse.getStatus() + \" :admin token expired. Retrieving new admin token and retrying endpoints retrieval...\");\n\n                    headers.put(AUTH_TOKEN_HEADER, getAdminToken(true));\n                    serviceClientResponse = akkaServiceClient.get(ENDPOINTS_PREFIX + userToken, targetHostUri + TOKENS + userToken + ENDPOINTS, headers);\n\n                    if (serviceClientResponse.getStatus() == HttpServletResponse.SC_ACCEPTED) {\n                        rawEndpointsData = convertStreamToBase64String(serviceClientResponse.getData());\n                    } else {\n                        delegationMessage.set(\"Unable to get endpoints for user: \" + userToken + \" with configured admin credentials\");\n                        LOG.error(\"Still unable to get endpoints: \" + serviceClientResponse.getStatus());\n                        throw new AuthServiceException(\"Unable to retrieve service catalog for user with configured Admin credentials\");\n                    }\n                    break;\n                case HttpServletResponse.SC_REQUEST_ENTITY_TOO_LARGE:\n                case FilterDirector.SC_TOO_MANY_REQUESTS: // (413 | 429)\n                    delegationMessage.set(\"Unable to get endpoints for token: \" + userToken + \". Status code: \" + serviceClientResponse.getStatus());\n                    throw buildAuthServiceOverLimitException(serviceClientResponse);\n                default:\n                    delegationMessage.set(\"Unable to get endpoints for token: \" + userToken + \". Status code: \" + serviceClientResponse.getStatus());\n                    LOG.error(\"Unable to get endpoints for token. Status code: \" + serviceClientResponse.getStatus());\n                    throw new AuthServiceException(\"Unable to retrieve service catalog for user. Response from \" + targetHostUri + \": \" + serviceClientResponse.getStatus());\n            }\n        } catch (AkkaServiceClientException e) {\n            throw new AuthServiceException(\"Unable to get endpoints.\", e);\n        }\n\n        return rawEndpointsData;\n    }","id":56432,"modified_method":"@Override\n    public String getBase64EndpointsStringForHeaders(String userToken, String format) throws AuthServiceException {\n        return getBase64EndpointsStringForHeaders(userToken, format, null);\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public List<Endpoint> getEndpointsForToken(String userToken) throws AuthServiceException {\n        final Map<String, String> headers = new HashMap<>();\n\n        List<Endpoint> endpointList;\n\n        try {\n            headers.put(ACCEPT_HEADER, MediaType.APPLICATION_XML);\n            headers.put(AUTH_TOKEN_HEADER, getAdminToken(false));\n\n            ServiceClientResponse endpointListResponse = akkaServiceClient.get(ENDPOINTS_PREFIX + userToken, targetHostUri + TOKENS + userToken + ENDPOINTS, headers);\n\n            switch (endpointListResponse.getStatus()) {\n                case HttpServletResponse.SC_OK:\n                    endpointList = getEndpointList(endpointListResponse);\n                    break;\n                case HttpServletResponse.SC_UNAUTHORIZED:\n                    LOG.error(\"Unable to get endpoints for user: \" + endpointListResponse.getStatus() + \" :admin token expired. \" +\n                            \"Retrieving new admin token and retrying endpoints retrieval...\");\n\n                    headers.put(AUTH_TOKEN_HEADER, getAdminToken(true));\n                    endpointListResponse = akkaServiceClient.get(ENDPOINTS_PREFIX + userToken, targetHostUri + TOKENS + userToken + ENDPOINTS, headers);\n\n                    if (endpointListResponse.getStatus() == HttpServletResponse.SC_OK) {\n                        endpointList = getEndpointList(endpointListResponse);\n                    } else {\n                        delegationMessage.set(\"Unable to get endpoints for user: \" + userToken + \" with configured admin credentials\");\n                        LOG.error(\"Still unable to get endpoints: \" + endpointListResponse.getStatus());\n                        throw new AuthServiceException(\"Unable to retrieve service catalog for user with configured Admin credentials\");\n                    }\n                    break;\n                case HttpServletResponse.SC_REQUEST_ENTITY_TOO_LARGE:\n                case FilterDirector.SC_TOO_MANY_REQUESTS: // (413 | 429)\n                    delegationMessage.set(\"Unable to get endpoints for token: \" + userToken + \". Status code: \" + endpointListResponse.getStatus());\n                    throw buildAuthServiceOverLimitException(endpointListResponse);\n                default:\n                    delegationMessage.set(\"Unable to get endpoints for token: \" + userToken + \". Status code: \" + endpointListResponse.getStatus());\n                    LOG.error(\"Unable to get endpoints for token. Status code: \" + endpointListResponse.getStatus());\n                    throw new AuthServiceException(\"Unable to retrieve service catalog for user. Response from \" + targetHostUri + \": \" + endpointListResponse.getStatus());\n            }\n        } catch (AkkaServiceClientException e) {\n            throw new AuthServiceException(\"Unable to get endpoints.\", e);\n        }\n\n        return endpointList;\n    }","id":56433,"modified_method":"@Override\n    public List<Endpoint> getEndpointsForToken(String userToken) throws AuthServiceException {\n        return getEndpointsForToken(userToken, null);\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"private ServiceClientResponse validateUser(String userToken, String tenant, boolean force) throws AuthServiceException {\n        final Map<String, String> headers = new HashMap<>();\n        headers.put(ACCEPT_HEADER, MediaType.APPLICATION_XML);\n        headers.put(AUTH_TOKEN_HEADER, getAdminToken(force));\n        try {\n            return akkaServiceClient.get(TOKEN_PREFIX + userToken, targetHostUri + TOKENS + userToken, headers);\n        } catch (AkkaServiceClientException e) {\n            throw new AuthServiceException(\"Unable to validate user.\", e);\n        }\n    }","id":56434,"modified_method":"private ServiceClientResponse validateUser(String userToken, String tenant, boolean force) throws AuthServiceException {\n        return validateUser(userToken, tenant, force, null);\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public AuthGroups getGroups(String userId) throws AuthServiceException {\n        final Map<String, String> headers = new HashMap<>();\n\n        AuthGroups authGroups;\n\n        try {\n            headers.put(ACCEPT_HEADER, MediaType.APPLICATION_XML);\n            headers.put(AUTH_TOKEN_HEADER, getAdminToken(false));\n\n\n            ServiceClientResponse serviceResponse = akkaServiceClient.get(GROUPS_PREFIX + userId, targetHostUri + \"/users/\" + userId + \"/RAX-KSGRP\", headers);\n\n            switch (serviceResponse.getStatus()) {\n                case HttpServletResponse.SC_OK:\n                    authGroups = getAuthGroups(serviceResponse);\n                    break;\n                case HttpServletResponse.SC_UNAUTHORIZED:\n                    LOG.error(\"Unable to get groups for user: \" + serviceResponse.getStatus() + \" :admin token expired. Retrieving new admin token and retrying groups retrieval...\");\n\n                    headers.put(AUTH_TOKEN_HEADER, getAdminToken(true));\n\n                    serviceResponse = akkaServiceClient.get(GROUPS_PREFIX + userId, targetHostUri + \"/users/\" + userId + \"/RAX-KSGRP\", headers);\n\n                    if (serviceResponse.getStatus() == HttpServletResponse.SC_ACCEPTED) {\n                        authGroups = getAuthGroups(serviceResponse);\n                    } else {\n                        delegationMessage.set(\"Unable to get groups for user id: \" + userId + \". Status code: \" + serviceResponse.getStatus());\n                        LOG.error(\"Still unable to get groups: \" + serviceResponse.getStatus());\n                        throw new AuthServiceException(\"Unable to retrieve groups for user. Response from \" + targetHostUri + \": \" + serviceResponse.getStatus());\n\n                    }\n                    break;\n                case HttpServletResponse.SC_REQUEST_ENTITY_TOO_LARGE:\n                case FilterDirector.SC_TOO_MANY_REQUESTS: // (413 | 429)\n                    delegationMessage.set(\"Unable to get groups for user id: \" + userId + \". Status code: \" + serviceResponse.getStatus());\n                    throw buildAuthServiceOverLimitException(serviceResponse);\n                default:\n                    delegationMessage.set(\"Unable to get groups for user id: \" + userId + \". Status code: \" + serviceResponse.getStatus());\n                    LOG.error(\"Unable to get groups for user id: \" + userId + \" Status code: \" + serviceResponse.getStatus());\n                    throw new AuthServiceException(\"Unable to retrieve groups for user. Response from \" + targetHostUri + \": \" + serviceResponse.getStatus());\n            }\n        } catch (AkkaServiceClientException e) {\n            throw new AuthServiceException(\"Unable to get groups.\", e);\n        }\n\n        return authGroups;\n    }","id":56435,"modified_method":"@Override\n    public AuthGroups getGroups(String userId) throws AuthServiceException {\n        return getGroups(userId, null);\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override //getting the final encoded string\n    protected String getEndpointsBase64(String token, EndpointsConfiguration endpointsConfiguration) throws AuthServiceException {\n        return authenticationService.getBase64EndpointsStringForHeaders(token, endpointsConfiguration.getFormat());\n    }","id":56436,"modified_method":"@Override\n    protected String getEndpointsBase64(String token, EndpointsConfiguration endpointsConfiguration) throws AuthServiceException {\n        return getEndpointsBase64(token, endpointsConfiguration, null);\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public AuthToken validateToken(ExtractorResult<String> account, String token) throws AuthServiceException {\n        AuthToken authToken = null;\n\n        if (account != null) {\n            AuthenticateResponse authResponse = authenticationService.validateToken(account.getResult(), token);\n            delegationMessage.set(AuthenticationServiceClient.getDelegationMessage()); // Must be set before validateTenant call in case that call overwrites this value\n            authToken = validateTenant(authResponse, account.getResult());\n        } else {\n            AuthenticateResponse authResp = authenticationService.validateToken(null, token);\n            delegationMessage.set(AuthenticationServiceClient.getDelegationMessage());\n            if (authResp != null) {\n                authToken = new OpenStackToken(authResp);\n            }\n        }\n        AuthenticationServiceClient.removeDelegationMessage();\n\n        /**\n         * If any role in that token is in the BypassTenantRoles list, bypass the tenant check\n         */\n        if (authToken != null) { //authToken could still be null at this point :(\n            boolean ignoreTenantRequirement = false;\n            for (String role : authToken.getRoles().split(\",\")) {\n                if (ignoreTenantRoles.contains(role)) {\n                    ignoreTenantRequirement = true;\n                }\n            }\n\n            if (!ignoreTenantRequirement) {\n                if (authToken.getTenantId() == null || authToken.getTenantName() == null) {\n                    //Moved this check from within the OpenStackToken into here\n                    delegationMessage.set(\"Invalid Response from Auth for token: \" + authToken.getTokenId() + \". Token object must have a tenant\");\n                    throw new IllegalArgumentException(\"Invalid Response from Auth for token: \" + authToken.getTokenId() + \". Token object must have a tenant\");\n                }\n            }\n        }\n        return authToken;\n    }","id":56437,"modified_method":"@Override\n    public AuthToken validateToken(ExtractorResult<String> account, String token) throws AuthServiceException {\n        return validateToken(account, token, null);\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public AuthGroups getGroups(String group) throws AuthServiceException {\n        return authenticationService.getGroups(group);\n    }","id":56438,"modified_method":"@Override\n    public AuthGroups getGroups(String group) throws AuthServiceException {\n        return getGroups(group, null);\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        final long startTime = System.currentTimeMillis();\n        long streamLimit = containerConfigurationService.getContentBodyReadLimit();\n\n        final MutableHttpServletRequest mutableHttpRequest = MutableHttpServletRequest.wrap((HttpServletRequest) request, streamLimit);\n        final MutableHttpServletResponse mutableHttpResponse = MutableHttpServletResponse.wrap(mutableHttpRequest, (HttpServletResponse) response);\n\n        try {\n            new URI(mutableHttpRequest.getRequestURI()); // ensures that the request URI is a valid URI\n            final PowerFilterChain requestFilterChain = getRequestFilterChain(mutableHttpResponse, chain);\n            if (requestFilterChain != null) {\n                if (currentSystemModel.get().isTracingHeader() &&\n                        StringUtilities.isBlank(mutableHttpRequest.getHeader(PowerApiHeader.REQUEST_GUID.toString()))) { // todo: correct name\n                    mutableHttpRequest.addHeader(PowerApiHeader.REQUEST_GUID.toString(), UUID.randomUUID().toString());\n                }\n                requestFilterChain.startFilterChain(mutableHttpRequest, mutableHttpResponse);\n            }\n        } catch (URISyntaxException use) {\n            LOG.debug(\"{}:{} -- Invalid URI requested: {}\", clusterId, nodeId, mutableHttpRequest.getRequestURI(), use);\n            mutableHttpResponse.sendError(HttpServletResponse.SC_BAD_REQUEST, \"Error processing request\");\n            mutableHttpResponse.setLastException(use);\n        } catch (Exception ex) {\n            LOG.error(\"{}:{} -- Exception encountered while processing filter chain.\", clusterId, nodeId, ex);\n            mutableHttpResponse.sendError(HttpServletResponse.SC_BAD_GATEWAY, \"Error processing request\");\n            mutableHttpResponse.setLastException(ex);\n        } finally {\n            // In the case where we pass/route the request, there is a chance that\n            // the response will be committed by an underlying service, outside of repose\n            if (!mutableHttpResponse.isCommitted()) {\n                responseMessageService.handle(mutableHttpRequest, mutableHttpResponse);\n                responseHeaderService.setVia(mutableHttpRequest, mutableHttpResponse);\n            }\n\n            try {\n                mutableHttpResponse.writeHeadersToResponse();\n                mutableHttpResponse.commitBufferToServletOutputStream();\n            } catch (IOException ex) {\n                LOG.error(\"{}:{} -- Error committing output stream\", clusterId, nodeId, ex);\n            }\n            final long stopTime = System.currentTimeMillis();\n\n            markResponseCodeHelper(mbcResponseCodes, ((HttpServletResponse) response).getStatus(), LOG, null);\n\n            reportingService.incrementReposeStatusCodeCount(((HttpServletResponse) response).getStatus(), stopTime - startTime);\n        }\n    }","id":56439,"modified_method":"@Override\n    public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {\n        final long startTime = System.currentTimeMillis();\n        long streamLimit = containerConfigurationService.getContentBodyReadLimit();\n\n        final MutableHttpServletRequest mutableHttpRequest = MutableHttpServletRequest.wrap((HttpServletRequest) request, streamLimit);\n        final MutableHttpServletResponse mutableHttpResponse = MutableHttpServletResponse.wrap(mutableHttpRequest, (HttpServletResponse) response);\n\n        try {\n            new URI(mutableHttpRequest.getRequestURI()); // ensures that the request URI is a valid URI\n            final PowerFilterChain requestFilterChain = getRequestFilterChain(mutableHttpResponse, chain);\n            if (requestFilterChain != null) {\n                if (currentSystemModel.get().isTracingHeader() &&\n                        StringUtilities.isBlank(mutableHttpRequest.getHeader(CommonHttpHeader.REQUEST_GUID.toString()))) { // todo: correct name\n                    mutableHttpRequest.addHeader(CommonHttpHeader.REQUEST_GUID.toString(), UUID.randomUUID().toString());\n                }\n                requestFilterChain.startFilterChain(mutableHttpRequest, mutableHttpResponse);\n            }\n        } catch (URISyntaxException use) {\n            LOG.debug(\"{}:{} -- Invalid URI requested: {}\", clusterId, nodeId, mutableHttpRequest.getRequestURI(), use);\n            mutableHttpResponse.sendError(HttpServletResponse.SC_BAD_REQUEST, \"Error processing request\");\n            mutableHttpResponse.setLastException(use);\n        } catch (Exception ex) {\n            LOG.error(\"{}:{} -- Exception encountered while processing filter chain.\", clusterId, nodeId, ex);\n            mutableHttpResponse.sendError(HttpServletResponse.SC_BAD_GATEWAY, \"Error processing request\");\n            mutableHttpResponse.setLastException(ex);\n        } finally {\n            // In the case where we pass/route the request, there is a chance that\n            // the response will be committed by an underlying service, outside of repose\n            if (!mutableHttpResponse.isCommitted()) {\n                responseMessageService.handle(mutableHttpRequest, mutableHttpResponse);\n                responseHeaderService.setVia(mutableHttpRequest, mutableHttpResponse);\n            }\n\n            try {\n                mutableHttpResponse.writeHeadersToResponse();\n                mutableHttpResponse.commitBufferToServletOutputStream();\n            } catch (IOException ex) {\n                LOG.error(\"{}:{} -- Error committing output stream\", clusterId, nodeId, ex);\n            }\n            final long stopTime = System.currentTimeMillis();\n\n            markResponseCodeHelper(mbcResponseCodes, ((HttpServletResponse) response).getStatus(), LOG, null);\n\n            reportingService.incrementReposeStatusCodeCount(((HttpServletResponse) response).getStatus(), stopTime - startTime);\n        }\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public FilterDirector handleRequest(HttpServletRequest request, ReadableHttpServletResponse response) {\n        final FilterDirector myDirector = new FilterDirectorImpl();\n        myDirector.setFilterAction(FilterAction.RETURN);\n        myDirector.setResponseStatusCode(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n        String message = \"Failure in authorization component\";\n\n        final String authenticationToken = request.getHeader(CommonHttpHeader.AUTH_TOKEN.toString());\n\n        try {\n            if (StringUtilities.isBlank(authenticationToken)) {\n                // Reject if no token\n                message = \"Authentication token not found in X-Auth-Token header. Rejecting request.\";\n                LOG.debug(message);\n                myDirector.setResponseStatusCode(HttpServletResponse.SC_UNAUTHORIZED);\n            } else if (adminRoleMatchIgnoringCase(request.getHeaders(OpenStackServiceHeader.ROLES.toString())) ||\n                    isEndpointAuthorizedForToken(authenticationToken)) {\n                myDirector.setFilterAction(FilterAction.PASS);\n            } else {\n                message = \"User token: \" + authenticationToken +\n                        \": The user's service catalog does not contain an endpoint that matches \" +\n                        \"the endpoint configured in openstack-authorization.cfg.xml: \\\"\" +\n                        configuredEndpoint.getHref() + \"\\\".  User not authorized to access service.\";\n                LOG.info(message);\n                myDirector.setResponseStatusCode(HttpServletResponse.SC_FORBIDDEN);\n            }\n        } catch (AuthServiceOverLimitException ex) {\n            LOG.error(message);\n            LOG.trace(\"\", ex);\n            myDirector.setResponseStatusCode(HttpServletResponse.SC_SERVICE_UNAVAILABLE); // (503)\n            String retry = ex.getRetryAfter();\n            if (retry == null) {\n                Calendar retryCalendar = new GregorianCalendar();\n                retryCalendar.add(Calendar.SECOND, 5);\n                retry = new HttpDate(retryCalendar.getTime()).toRFC1123();\n            }\n            myDirector.responseHeaderManager().appendHeader(HttpHeaders.RETRY_AFTER, retry);\n        } catch (AuthServiceException ex) {\n            LOG.error(message);\n            LOG.trace(\"\", ex);\n            if (ex.getCause() instanceof AkkaServiceClientException && ex.getCause().getCause() instanceof TimeoutException) {\n                myDirector.setResponseStatusCode(HttpServletResponse.SC_GATEWAY_TIMEOUT);\n            } else {\n                myDirector.setResponseStatusCode(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n            }\n        } catch (Exception ex) {\n            LOG.error(message);\n            LOG.trace(\"\", ex);\n            myDirector.setResponseStatusCode(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n        }\n\n        if (delegating != null && myDirector.getFilterAction() != FilterAction.PASS) {\n            myDirector.setFilterAction(FilterAction.PASS);\n            for (Map.Entry<String, List<String>> mapHeaders : JavaDelegationManagerProxy.buildDelegationHeaders(myDirector.getResponseStatusCode(), CLIENT_AUTHORIZATION, message, delegating.getQuality()).entrySet()) {\n                List<String> value = mapHeaders.getValue();\n                myDirector.requestHeaderManager().appendHeader(mapHeaders.getKey(), value.toArray(new String[value.size()]));\n            }\n        }\n        return myDirector;\n    }","id":56440,"modified_method":"@Override\n    public FilterDirector handleRequest(HttpServletRequest request, ReadableHttpServletResponse response) {\n        final FilterDirector myDirector = new FilterDirectorImpl();\n        myDirector.setFilterAction(FilterAction.RETURN);\n        myDirector.setResponseStatusCode(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n        String message = \"Failure in authorization component\";\n\n        final String requestGuid = request.getHeader(CommonHttpHeader.REQUEST_GUID.toString());\n        final String authenticationToken = request.getHeader(CommonHttpHeader.AUTH_TOKEN.toString());\n\n        try {\n            if (StringUtilities.isBlank(authenticationToken)) {\n                // Reject if no token\n                message = \"Authentication token not found in X-Auth-Token header. Rejecting request.\";\n                LOG.debug(message);\n                myDirector.setResponseStatusCode(HttpServletResponse.SC_UNAUTHORIZED);\n            } else if (adminRoleMatchIgnoringCase(request.getHeaders(OpenStackServiceHeader.ROLES.toString())) ||\n                    isEndpointAuthorizedForToken(authenticationToken, requestGuid)) {\n                myDirector.setFilterAction(FilterAction.PASS);\n            } else {\n                message = \"User token: \" + authenticationToken +\n                        \": The user's service catalog does not contain an endpoint that matches \" +\n                        \"the endpoint configured in openstack-authorization.cfg.xml: \\\"\" +\n                        configuredEndpoint.getHref() + \"\\\".  User not authorized to access service.\";\n                LOG.info(message);\n                myDirector.setResponseStatusCode(HttpServletResponse.SC_FORBIDDEN);\n            }\n        } catch (AuthServiceOverLimitException ex) {\n            LOG.error(message);\n            LOG.trace(\"\", ex);\n            myDirector.setResponseStatusCode(HttpServletResponse.SC_SERVICE_UNAVAILABLE); // (503)\n            String retry = ex.getRetryAfter();\n            if (retry == null) {\n                Calendar retryCalendar = new GregorianCalendar();\n                retryCalendar.add(Calendar.SECOND, 5);\n                retry = new HttpDate(retryCalendar.getTime()).toRFC1123();\n            }\n            myDirector.responseHeaderManager().appendHeader(HttpHeaders.RETRY_AFTER, retry);\n        } catch (AuthServiceException ex) {\n            LOG.error(message);\n            LOG.trace(\"\", ex);\n            if (ex.getCause() instanceof AkkaServiceClientException && ex.getCause().getCause() instanceof TimeoutException) {\n                myDirector.setResponseStatusCode(HttpServletResponse.SC_GATEWAY_TIMEOUT);\n            } else {\n                myDirector.setResponseStatusCode(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n            }\n        } catch (Exception ex) {\n            LOG.error(message);\n            LOG.trace(\"\", ex);\n            myDirector.setResponseStatusCode(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n        }\n\n        if (delegating != null && myDirector.getFilterAction() != FilterAction.PASS) {\n            myDirector.setFilterAction(FilterAction.PASS);\n            for (Map.Entry<String, List<String>> mapHeaders : JavaDelegationManagerProxy.buildDelegationHeaders(myDirector.getResponseStatusCode(), CLIENT_AUTHORIZATION, message, delegating.getQuality()).entrySet()) {\n                List<String> value = mapHeaders.getValue();\n                myDirector.requestHeaderManager().appendHeader(mapHeaders.getKey(), value.toArray(new String[value.size()]));\n            }\n        }\n        return myDirector;\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"private List<CachedEndpoint> requestEndpointsForToken(String userToken) throws AuthServiceException {\n        List<CachedEndpoint> cachedEndpoints = endpointListCache.getCachedEndpointsForToken(userToken);\n\n        if (cachedEndpoints == null || cachedEndpoints.isEmpty()) {\n            List<Endpoint> authorizedEndpoints = authenticationService.getEndpointsForToken(userToken);\n            if (authorizedEndpoints != null) {\n                cachedEndpoints = new LinkedList<>();\n                for (Endpoint ep : authorizedEndpoints) {\n                    cachedEndpoints.add(new CachedEndpoint(ep.getPublicURL(), ep.getRegion(), ep.getName(), ep.getType()));\n                }\n                try {\n                    endpointListCache.cacheEndpointsForToken(userToken, cachedEndpoints);\n                } catch (IOException ioe) {\n                    LOG.error(\"Caching failure. Reason: \" + ioe.getMessage(), ioe);\n                }\n            }\n        }\n        return cachedEndpoints;\n    }","id":56441,"modified_method":"private List<CachedEndpoint> requestEndpointsForToken(String userToken, String requestGuid) throws AuthServiceException {\n        List<CachedEndpoint> cachedEndpoints = endpointListCache.getCachedEndpointsForToken(userToken);\n\n        if (cachedEndpoints == null || cachedEndpoints.isEmpty()) {\n            List<Endpoint> authorizedEndpoints = authenticationService.getEndpointsForToken(userToken, requestGuid);\n            if (authorizedEndpoints != null) {\n                cachedEndpoints = new LinkedList<>();\n                for (Endpoint ep : authorizedEndpoints) {\n                    cachedEndpoints.add(new CachedEndpoint(ep.getPublicURL(), ep.getRegion(), ep.getName(), ep.getType()));\n                }\n                try {\n                    endpointListCache.cacheEndpointsForToken(userToken, cachedEndpoints);\n                } catch (IOException ioe) {\n                    LOG.error(\"Caching failure. Reason: \" + ioe.getMessage(), ioe);\n                }\n            }\n        }\n        return cachedEndpoints;\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"private boolean isEndpointAuthorizedForToken(String userToken) throws AuthServiceException {\n        List<CachedEndpoint> cachedEndpoints = requestEndpointsForToken(userToken);\n        if (cachedEndpoints != null) {\n            return !Collections2.filter(cachedEndpoints, forMatchingEndpoint()).isEmpty();\n        }\n        return false;\n    }","id":56442,"modified_method":"private boolean isEndpointAuthorizedForToken(String userToken, String requestGuid) throws AuthServiceException {\n        List<CachedEndpoint> cachedEndpoints = requestEndpointsForToken(userToken, requestGuid);\n        if (cachedEndpoints != null) {\n            return !Collections2.filter(cachedEndpoints, forMatchingEndpoint()).isEmpty();\n        }\n        return false;\n    }","commit_id":"b7653b67b7e6bcfe445adb6ca210584011984954","url":"https://github.com/rackerlabs/repose"},{"original_method":"private ServiceClientResponse<AuthenticateResponse> validateUser(String userToken, String tenant, boolean force) {\n        ServiceClientResponse<AuthenticateResponse> serviceResponse;\n\n        final Map<String, String> headers = new HashMap<String, String>();\n        headers.put(ACCEPT_HEADER, MediaType.APPLICATION_XML);\n        headers.put(AUTH_TOKEN_HEADER, getAdminToken(force));\n        if (StringUtilities.isBlank(tenant) && currentAdminToken!=null) {\n            serviceResponse = serviceClient.get(targetHostUri + TOKENS + userToken, headers);\n        } else {\n            serviceResponse = serviceClient.get(targetHostUri + TOKENS + userToken, headers, \"belongsTo\", tenant);\n            // TODO Here?! What's the difference?\n        }\n\n        return serviceResponse;\n    }","id":56443,"modified_method":"private ServiceClientResponse<AuthenticateResponse> validateUser(String userToken, String tenant, boolean force) {\n        final Map<String, String> headers = new HashMap<String, String>();\n        headers.put(ACCEPT_HEADER, MediaType.APPLICATION_XML);\n        headers.put(AUTH_TOKEN_HEADER, getAdminToken(force));\n\n        return serviceClient.get(targetHostUri + TOKENS + userToken, headers);\n    }","commit_id":"a9518bbb5d33030e47149a667a099ed5a551985c","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public AuthToken validateToken(String tenant, String userToken) { //this is where we ask auth service if token is valid\n\n        OpenStackToken token = null;\n\n        ServiceClientResponse<AuthenticateResponse> serviceResponse = validateUser(userToken, tenant, false);\n        for (Role role : serviceResponse.getEntity().getUser().getRoles().getRole()) {\n            if (/*adminRoles.contains(role.getName())*/role.getName().equals(\"\")) {\n                // TODO admin role, do not validate with belongsTo\n            } else {\n                // TODO validate with belongsTo\n            }\n        }\n\n            switch (HttpStatusCode.fromInt(serviceResponse.getStatusCode())) {\n                case OK:\n                    token = getOpenStackToken(serviceResponse);\n                    break;\n\n                case NOT_FOUND:\n                    // User's token is bad\n                    LOG.error(\"Unable to validate token for tenant.  Invalid token. \" + serviceResponse.getStatusCode());\n                    break;\n\n                case UNAUTHORIZED:\n                    LOG.error(\"Unable to validate token for tenant: \" + serviceResponse.getStatusCode() + \" :admin token expired. Retrieving new admin token and retrying token validation...\");\n\n                    serviceResponse = validateUser(userToken, tenant, true);\n\n                    if (serviceResponse.getStatusCode() == HttpStatusCode.OK.intValue()) {\n                        token = getOpenStackToken(serviceResponse);\n                    } else {\n                        LOG.error(\"Still unable to validate token for tenant: \" + serviceResponse.getStatusCode());\n                        throw new AuthServiceException(\"Unable to authenticate user with configured Admin credentials\");\n                    }\n                    break;\n\n\n                default:\n                    LOG.error(\"Authentication Service returned an unexpected response status code: \" + serviceResponse.getStatusCode());\n                    throw new AuthServiceException(\"Unable to validate token. Response from \" + targetHostUri + \": \" + serviceResponse.getStatusCode());\n\n        }\n\n\n\n        return token;\n    }","id":56444,"modified_method":"@Override\n    public AuthToken validateToken(String tenant, String userToken) { //this is where we ask auth service if token is valid\n\n        OpenStackToken token = null;\n\n        ServiceClientResponse<AuthenticateResponse> serviceResponse = validateUser(userToken, tenant, false);\n\n            switch (HttpStatusCode.fromInt(serviceResponse.getStatusCode())) {\n                case OK:\n                    token = getOpenStackToken(serviceResponse);\n                    break;\n\n                case NOT_FOUND:\n                    // User's token is bad\n                    LOG.error(\"Unable to validate token.  Invalid token. \" + serviceResponse.getStatusCode());\n                    break;\n\n                case UNAUTHORIZED:\n                    LOG.error(\"Unable to validate token: \" + serviceResponse.getStatusCode() + \" :admin token expired. Retrieving new admin token and retrying token validation...\");\n\n                    serviceResponse = validateUser(userToken, tenant, true);\n\n                    if (serviceResponse.getStatusCode() == HttpStatusCode.OK.intValue()) {\n                        token = getOpenStackToken(serviceResponse);\n                    } else {\n                        LOG.error(\"Still unable to validate token: \" + serviceResponse.getStatusCode());\n                        throw new AuthServiceException(\"Unable to authenticate user with configured Admin credentials\");\n                    }\n                    break;\n\n\n                default:\n                    LOG.error(\"Authentication Service returned an unexpected response status code: \" + serviceResponse.getStatusCode());\n                    throw new AuthServiceException(\"Unable to validate token. Response from \" + targetHostUri + \": \" + serviceResponse.getStatusCode());\n        }\n\n        return token;\n    }","commit_id":"a9518bbb5d33030e47149a667a099ed5a551985c","url":"https://github.com/rackerlabs/repose"},{"original_method":"public Configurables(boolean delegable, String authServiceUri, KeyedRegexExtractor<String> keyedRegexExtractor,\n            boolean tenanted, long groupCacheTtl, long tokenCacheTtl, long usrCacheTtl, boolean requestGroups,\n            EndpointsConfiguration endpointsConfiguration) {\n        this.delegable = delegable;\n        this.authServiceUri = authServiceUri;\n        this.keyedRegexExtractor = keyedRegexExtractor;\n        this.tenanted = tenanted;\n        this.groupCacheTtl = groupCacheTtl;\n        this.userCacheTtl = usrCacheTtl;\n        this.tokenCacheTtl = tokenCacheTtl;\n        this.requestGroups=requestGroups;\n        this.endpointsConfiguration = endpointsConfiguration;\n    }","id":56445,"modified_method":"public Configurables(boolean delegable, String authServiceUri, KeyedRegexExtractor<String> keyedRegexExtractor,\n                         boolean tenanted, long groupCacheTtl, long tokenCacheTtl, long usrCacheTtl, boolean requestGroups,\n                         EndpointsConfiguration endpointsConfiguration) {\n        this.delegable = delegable;\n        this.authServiceUri = authServiceUri;\n        this.keyedRegexExtractor = keyedRegexExtractor;\n        this.tenanted = tenanted;\n        this.groupCacheTtl = groupCacheTtl;\n        this.userCacheTtl = usrCacheTtl;\n        this.tokenCacheTtl = tokenCacheTtl;\n        this.requestGroups=requestGroups;\n        this.endpointsConfiguration = endpointsConfiguration;\n        this.adminRoles = null;\n    }","commit_id":"a9518bbb5d33030e47149a667a099ed5a551985c","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n   public AuthToken validateToken(ExtractorResult<String> account, String token) {\n      return account != null ? authenticationService.validateToken(account.getResult(), token) : authenticationService.validateToken(null, token);\n   }","id":56446,"modified_method":"@Override\n   public AuthToken validateToken(ExtractorResult<String> account, String token) {\n      if (account != null) {\n          AuthToken authToken = authenticationService.validateToken(account.getResult(), token);\n\n          return validateTenant(authToken, account.getResult());\n      } else {\n          return authenticationService.validateToken(null, token);\n      }\n   }","commit_id":"a9518bbb5d33030e47149a667a099ed5a551985c","url":"https://github.com/rackerlabs/repose"},{"original_method":"public OpenStackAuthenticationHandler(Configurables cfg, AuthenticationService serviceClient, AuthTokenCache cache, AuthGroupCache grpCache, AuthUserCache usrCache, EndpointsCache endpointsCache, UriMatcher uriMatcher) {\n      super(cfg, cache, grpCache, usrCache, endpointsCache, uriMatcher);\n      this.authenticationService = serviceClient;\n      this.wwwAuthHeaderContents = WWW_AUTH_PREFIX + cfg.getAuthServiceUri();\n   }","id":56447,"modified_method":"public OpenStackAuthenticationHandler(Configurables cfg, AuthenticationService serviceClient, AuthTokenCache cache, AuthGroupCache grpCache, AuthUserCache usrCache, EndpointsCache endpointsCache, UriMatcher uriMatcher) {\n      super(cfg, cache, grpCache, usrCache, endpointsCache, uriMatcher);\n      this.authenticationService = serviceClient;\n      this.wwwAuthHeaderContents = WWW_AUTH_PREFIX + cfg.getAuthServiceUri();\n      this.adminRoles = cfg.getAdminRoles();\n   }","commit_id":"a9518bbb5d33030e47149a667a099ed5a551985c","url":"https://github.com/rackerlabs/repose"},{"original_method":"public static AuthenticationHandler newInstance(ClientAuthConfig config, KeyedRegexExtractor accountRegexExtractor, Datastore datastore, UriMatcher uriMatcher) {\n        final AuthTokenCache cache = new AuthTokenCache(datastore, OsAuthCachePrefix.TOKEN.toString());\n        final AuthGroupCache grpCache = new AuthGroupCache(datastore, OsAuthCachePrefix.GROUP.toString());\n        final AuthUserCache usrCache = new AuthUserCache(datastore, OsAuthCachePrefix.USER.toString());\n        final EndpointsCache endpointsCache = new EndpointsCache(datastore, OsAuthCachePrefix.USER.toString());\n        final OpenstackAuth authConfig = config.getOpenstackAuth();\n        final OpenStackIdentityService ids = authConfig.getIdentityService();\n        final EndpointsConfiguration endpointsConfiguration;\n        final AuthenticationService authService = new AuthenticationServiceFactory().build(ids.getUri(),\n                                                                                           ids.getUsername(),\n                                                                                           ids.getPassword(),\n                                                                                           ids.getTenantId());\n\n        //null check to prevent NPE when accessing config element attributes\n        if (authConfig.getEndpointsInHeader() != null) {\n            endpointsConfiguration = new EndpointsConfiguration(authConfig.getEndpointsInHeader().getFormat().toString(),\n                                                                authConfig.getEndpointsInHeader().getCacheTimeout(),\n                                                                authConfig.getEndpointsInHeader()\n                                                                        .getIdentityContractVersion().intValue());\n        } else {\n            endpointsConfiguration = null;\n        }\n\n        final Configurables configurables = new Configurables(authConfig.isDelegable(),\n                ids.getUri(),\n                accountRegexExtractor,\n                authConfig.isTenanted(), \n                authConfig.getGroupCacheTimeout(),\n                authConfig.getTokenCacheTimeout(),\n                authConfig.getUserCacheTimeout(),\n                authConfig.isRequestGroups(),\n                endpointsConfiguration);\n\n        return new OpenStackAuthenticationHandler(configurables, authService, cache, grpCache, usrCache, endpointsCache, uriMatcher);\n    }","id":56448,"modified_method":"public static AuthenticationHandler newInstance(ClientAuthConfig config, KeyedRegexExtractor accountRegexExtractor, Datastore datastore, UriMatcher uriMatcher) {\n        final AuthTokenCache cache = new AuthTokenCache(datastore, OsAuthCachePrefix.TOKEN.toString());\n        final AuthGroupCache grpCache = new AuthGroupCache(datastore, OsAuthCachePrefix.GROUP.toString());\n        final AuthUserCache usrCache = new AuthUserCache(datastore, OsAuthCachePrefix.USER.toString());\n        final EndpointsCache endpointsCache = new EndpointsCache(datastore, OsAuthCachePrefix.USER.toString());\n        final OpenstackAuth authConfig = config.getOpenstackAuth();\n        final OpenStackIdentityService ids = authConfig.getIdentityService();\n        final EndpointsConfiguration endpointsConfiguration;\n        final AuthenticationService authService = new AuthenticationServiceFactory().build(ids.getUri(),\n                                                                                           ids.getUsername(),\n                                                                                           ids.getPassword(),\n                                                                                           ids.getTenantId());\n\n        //null check to prevent NPE when accessing config element attributes\n        if (authConfig.getEndpointsInHeader() != null) {\n            endpointsConfiguration = new EndpointsConfiguration(authConfig.getEndpointsInHeader().getFormat().toString(),\n                                                                authConfig.getEndpointsInHeader().getCacheTimeout(),\n                                                                authConfig.getEndpointsInHeader()\n                                                                        .getIdentityContractVersion().intValue());\n        } else {\n            endpointsConfiguration = null;\n        }\n\n        final Configurables configurables = new Configurables(authConfig.isDelegable(),\n                ids.getUri(),\n                accountRegexExtractor,\n                authConfig.isTenanted(), \n                authConfig.getGroupCacheTimeout(),\n                authConfig.getTokenCacheTimeout(),\n                authConfig.getUserCacheTimeout(),\n                authConfig.isRequestGroups(),\n                endpointsConfiguration,\n                authConfig.getAdminRoles());\n\n        return new OpenStackAuthenticationHandler(configurables, authService, cache, grpCache, usrCache, endpointsCache, uriMatcher);\n    }","commit_id":"a9518bbb5d33030e47149a667a099ed5a551985c","url":"https://github.com/rackerlabs/repose"},{"original_method":"private void checkTokenInfo(AuthenticateResponse response) {\n        if (response == null || response.getToken() == null || response.getToken().getExpires() == null) {\n            throw new IllegalArgumentException(\"Invalid token\");\n        }\n\n        if (response.getToken().getTenant() == null) {\n            throw new IllegalArgumentException(\"Invalid Response from Auth. Token object must have a tenant\");\n        }\n\n        if (response.getUser() == null) {\n            throw new IllegalArgumentException(\"Invalid Response from Auth: Response must have a user object\");\n        }\n\n        if (response.getUser().getRoles() == null) {\n            throw new IllegalArgumentException(\"Invalid Response from Auth: User must have a list of roles\");\n        }\n\n    }","id":56449,"modified_method":"private void checkTokenInfo(AuthenticateResponse response) {\n        if (response == null || response.getToken() == null || response.getToken().getExpires() == null) {\n            throw new IllegalArgumentException(\"Invalid token\");\n        }\n\n        // TODO look at this?\n        /*if (response.getToken().getTenant() == null) {\n            throw new IllegalArgumentException(\"Invalid Response from Auth. Token object must have a tenant\");\n        }*/\n\n        if (response.getUser() == null) {\n            throw new IllegalArgumentException(\"Invalid Response from Auth: Response must have a user object\");\n        }\n\n        if (response.getUser().getRoles() == null) {\n            throw new IllegalArgumentException(\"Invalid Response from Auth: User must have a list of roles\");\n        }\n\n    }","commit_id":"a9518bbb5d33030e47149a667a099ed5a551985c","url":"https://github.com/rackerlabs/repose"},{"original_method":"private String appsTableInit() {\n    return tableInit().\n        // applicationid, applicationstate\n        append(\", aoColumns:[null, null]} \").toString();\n  }","id":56450,"modified_method":"private String appsTableInit() {\n    return tableInit().\n        // Sort by id upon page load\n        append(\", aaSorting: [[0, 'asc']]\").\n        // applicationid, applicationstate\n        append(\", aoColumns:[null, null]} \").toString();\n  }","commit_id":"cc4a468113831e502b26c571d04e31b475bca5c1","url":"https://github.com/apache/hadoop"},{"original_method":"private String jobsTableInit() {\n    return tableInit().\n        append(\",aoColumns:[{sType:'title-numeric'},\").\n        append(\"null,null,{sType:'title-numeric', bSearchable:false},null,\").\n        append(\"null,{sType:'title-numeric',bSearchable:false}, null, null]}\").\n        toString();\n  }","id":56451,"modified_method":"private String jobsTableInit() {\n    return tableInit().\n        // Sort by id upon page load\n        append(\", aaSorting: [[0, 'asc']]\").\n        append(\",aoColumns:[{sType:'title-numeric'},\").\n        append(\"null,null,{sType:'title-numeric', bSearchable:false},null,\").\n        append(\"null,{sType:'title-numeric',bSearchable:false}, null, null]}\").\n        toString();\n  }","commit_id":"cc4a468113831e502b26c571d04e31b475bca5c1","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * @return The end of the JS map that is the jquery datatable config for the\n   * attempts table. \n   */\n  private String attemptsTableInit() {\n    TaskType type = null;\n    String symbol = $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type = MRApps.taskType(symbol);\n    } else {\n      TaskId taskID = MRApps.toTaskID($(TASK_ID));\n      type = taskID.getTaskType();\n    }\n    StringBuilder b = tableInit().\n      append(\",aoColumnDefs:[\");\n\n    b.append(\"{'sType':'title-numeric', 'aTargets': [ 0\");\n    if(type == TaskType.REDUCE) {\n      b.append(\", 7, 8, 9, 10\");\n    } else { //MAP\n      b.append(\", 5\");\n    }\n    b.append(\" ] }\");\n    b.append(\"]}\");\n    return b.toString();\n  }","id":56452,"modified_method":"/**\n   * @return The end of the JS map that is the jquery datatable config for the\n   * attempts table. \n   */\n  private String attemptsTableInit() {\n    TaskType type = null;\n    String symbol = $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type = MRApps.taskType(symbol);\n    } else {\n      TaskId taskID = MRApps.toTaskID($(TASK_ID));\n      type = taskID.getTaskType();\n    }\n    StringBuilder b = tableInit().\n      append(\",aoColumnDefs:[\");\n\n    b.append(\"{'sType':'title-numeric', 'aTargets': [ 0\");\n    if(type == TaskType.REDUCE) {\n      b.append(\", 7, 8, 9, 10\");\n    } else { //MAP\n      b.append(\", 5\");\n    }\n    b.append(\" ] }]\");\n\n    // Sort by id upon page load\n    b.append(\", aaSorting: [[0, 'asc']]\");\n\n    b.append(\"}\");\n    return b.toString();\n  }","commit_id":"cc4a468113831e502b26c571d04e31b475bca5c1","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * @return the end of the JS map that is the jquery datatable configuration\n   * for the tasks table.\n   */\n  private String tasksTableInit() {\n    TaskType type = null;\n    String symbol = $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type = MRApps.taskType(symbol);\n    }\n    StringBuilder b = tableInit().\n    append(\",aoColumnDefs:[\");\n    b.append(\"{'sType':'title-numeric', 'aTargets': [ 0, 4\");\n    if(type == TaskType.REDUCE) {\n      b.append(\", 9, 10, 11, 12\");\n    } else { //MAP\n      b.append(\", 7\");\n    }\n    b.append(\" ] }\");\n    b.append(\"]}\");\n    return b.toString();\n  }","id":56453,"modified_method":"/**\n   * @return the end of the JS map that is the jquery datatable configuration\n   * for the tasks table.\n   */\n  private String tasksTableInit() {\n    TaskType type = null;\n    String symbol = $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type = MRApps.taskType(symbol);\n    }\n    StringBuilder b = tableInit().\n    append(\",aoColumnDefs:[\");\n    b.append(\"{'sType':'title-numeric', 'aTargets': [ 0, 4\");\n    if(type == TaskType.REDUCE) {\n      b.append(\", 9, 10, 11, 12\");\n    } else { //MAP\n      b.append(\", 7\");\n    }\n    b.append(\" ] }]\");\n\n    // Sort by id upon page load\n    b.append(\", aaSorting: [[0, 'asc']]\");\n\n    b.append(\"}\");\n    return b.toString();\n  }","commit_id":"cc4a468113831e502b26c571d04e31b475bca5c1","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * @return The end of a javascript map that is the jquery datatable \n   * configuration for the jobs table.  the Jobs table is assumed to be\n   * rendered by the class returned from {@link #content()} \n   */\n  private String jobsTableInit() {\n    return tableInit().\n        append(\",aoColumnDefs:[\").\n        append(\"{'sType':'numeric', 'bSearchable': false, 'aTargets': [ 6 ] }\").\n        append(\",{'sType':'numeric', 'bSearchable': false, 'aTargets': [ 7 ] }\").\n        append(\",{'sType':'numeric', 'bSearchable': false, 'aTargets': [ 8 ] }\").\n        append(\",{'sType':'numeric', 'bSearchable': false, 'aTargets': [ 9 ] }\").\n        append(\"]}\").\n        toString();\n  }","id":56454,"modified_method":"/**\n   * @return The end of a javascript map that is the jquery datatable \n   * configuration for the jobs table.  the Jobs table is assumed to be\n   * rendered by the class returned from {@link #content()} \n   */\n  private String jobsTableInit() {\n    return tableInit().\n        // Sort by id upon page load\n        append(\", aaSorting: [[2, 'asc']]\").\n        append(\", aoColumnDefs:[\").\n        // Maps Total\n        append(\"{'sType':'numeric', 'bSearchable': false, 'aTargets': [ 7 ] }\").\n        // Maps Completed\n        append(\",{'sType':'numeric', 'bSearchable': false, 'aTargets': [ 8 ] }\").\n        // Reduces Total\n        append(\",{'sType':'numeric', 'bSearchable': false, 'aTargets': [ 9 ] }\").\n        // Reduces Completed\n        append(\",{'sType':'numeric', 'bSearchable': false, 'aTargets': [ 10 ] }\").\n        append(\"]}\").\n        toString();\n  }","commit_id":"cc4a468113831e502b26c571d04e31b475bca5c1","url":"https://github.com/apache/hadoop"},{"original_method":"public static StringBuilder tableInit() {\n    return new StringBuilder(\"{bJQueryUI:true, aaSorting:[], \").\n        append(\"sPaginationType: 'full_numbers', iDisplayLength:20, \").\n        append(\"aLengthMenu:[20, 40, 60, 80, 100]\");\n  }","id":56455,"modified_method":"public static StringBuilder tableInit() {\n    return new StringBuilder(\"{bJQueryUI:true, \").\n        append(\"sPaginationType: 'full_numbers', iDisplayLength:20, \").\n        append(\"aLengthMenu:[20, 40, 60, 80, 100]\");\n  }","commit_id":"cc4a468113831e502b26c571d04e31b475bca5c1","url":"https://github.com/apache/hadoop"},{"original_method":"private String appsTableInit() {\n    AppsList list = getInstance(AppsList.class);\n    // id, user, name, queue, state, progress, ui, note\n    StringBuilder init = tableInit().\n        append(\", aoColumns:[{sType:'title-numeric'}, null, null, null, null,\").\n        append(\"null,{sType:'title-numeric', bSearchable:false}, null, null]\");\n    String rows = $(\"rowlimit\");\n    int rowLimit = rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n    if (list.apps.size() < rowLimit) {\n      list.rendering = Render.HTML;\n      return init.append('}').toString();\n    }\n    if (list.apps.size() > MAX_FAST_ROWS) {\n      tableInitProgress(init, list.apps.size() * 6);\n    }\n    if (list.apps.size() > MAX_INLINE_ROWS) {\n      list.rendering = Render.JS_LOAD;\n      return init.append(\", sAjaxSource:'\").append(url(\"apps\", \"json\")).\n          append(\"'}\").toString();\n    }\n    list.rendering = Render.JS_ARRAY;\n    return init.append(\", aaData:appsData}\").toString();\n  }","id":56456,"modified_method":"private String appsTableInit() {\n    AppsList list = getInstance(AppsList.class);\n    // id, user, name, queue, state, progress, ui, note\n    StringBuilder init = tableInit().\n        append(\", aoColumns:[{sType:'title-numeric'}, null, null, null, null,\").\n        append(\"null,{sType:'title-numeric', bSearchable:false}, null, null]\");\n\n    // Sort by id upon page load\n    init.append(\", aaSorting: [[0, 'asc']]\");\n\n    String rows = $(\"rowlimit\");\n    int rowLimit = rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n    if (list.apps.size() < rowLimit) {\n      list.rendering = Render.HTML;\n      return init.append('}').toString();\n    }\n    if (list.apps.size() > MAX_FAST_ROWS) {\n      tableInitProgress(init, list.apps.size() * 6);\n    }\n    if (list.apps.size() > MAX_INLINE_ROWS) {\n      list.rendering = Render.JS_LOAD;\n      return init.append(\", sAjaxSource:'\").append(url(\"apps\", \"json\")).\n          append(\"'}\").toString();\n    }\n    list.rendering = Render.JS_ARRAY;\n    return init.append(\", aaData:appsData}\").toString();\n  }","commit_id":"cc4a468113831e502b26c571d04e31b475bca5c1","url":"https://github.com/apache/hadoop"},{"original_method":"private String attemptsTableInit() {\n    return tableInit().append(\"}\").toString();\n  }","id":56457,"modified_method":"private String attemptsTableInit() {\n    return tableInit().\n        // Sort by id upon page load\n        append(\", aaSorting: [[0, 'asc']]\").\n        append(\"}\").toString();\n  }","commit_id":"cc4a468113831e502b26c571d04e31b475bca5c1","url":"https://github.com/apache/hadoop"},{"original_method":"private String tasksTableInit() {\n    return tableInit().\n        append(\",aoColumns:[{sType:'title-numeric'},{sType:'title-numeric',\").\n        append(\"bSearchable:false},null,{sType:'title-numeric'},\").\n        append(\"{sType:'title-numeric'},{sType:'title-numeric'}]}\").toString();\n  }","id":56458,"modified_method":"private String tasksTableInit() {\n    return tableInit().\n        // Sort by id upon page load\n        append(\", aaSorting: [[0, 'asc']]\").\n        append(\",aoColumns:[{sType:'title-numeric'},{sType:'title-numeric',\").\n        append(\"bSearchable:false},null,{sType:'title-numeric'},\").\n        append(\"{sType:'title-numeric'},{sType:'title-numeric'}]}\").toString();\n  }","commit_id":"cc4a468113831e502b26c571d04e31b475bca5c1","url":"https://github.com/apache/hadoop"},{"original_method":"public AlternativeJREPanel() {\n    myCbEnabled = new JBCheckBox(ExecutionBundle.message(\"run.configuration.use.alternate.jre.checkbox\"));\n\n    myFieldWithHistory = new TextFieldWithHistory();\n    final ArrayList<String> foundJDKs = new ArrayList<String>();\n    for (JreProvider provider : JreProvider.EP_NAME.getExtensions()) {\n      String path = provider.getJrePath();\n      if (!StringUtil.isEmpty(path)) {\n        foundJDKs.add(path);\n      }\n    }\n    final Sdk[] allJDKs = ProjectJdkTable.getInstance().getAllJdks();\n    for (Sdk jdk : allJDKs) {\n      foundJDKs.add(jdk.getHomePath());\n    }\n    myFieldWithHistory.setHistory(foundJDKs);\n    myPathField = new ComponentWithBrowseButton<TextFieldWithHistory>(myFieldWithHistory, null);\n    myPathField.addBrowseFolderListener(ExecutionBundle.message(\"run.configuration.select.alternate.jre.label\"),\n                                        ExecutionBundle.message(\"run.configuration.select.jre.dir.label\"),\n                                        null, BrowseFilesListener.SINGLE_DIRECTORY_DESCRIPTOR,\n                                        TextComponentAccessor.TEXT_FIELD_WITH_HISTORY_WHOLE_TEXT);\n\n    setLayout(new MigLayout(\"ins 0, gap 10, fill, flowx\"));\n    add(myCbEnabled, \"shrinkx\");\n    add(myPathField, \"growx, pushx\");\n\n    InsertPathAction.addTo(myFieldWithHistory.getTextEditor());\n\n    myCbEnabled.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        enabledChanged();\n      }\n    });\n    enabledChanged();\n\n    setAnchor(myCbEnabled);\n\n    updateUI();\n  }","id":56459,"modified_method":"public AlternativeJREPanel() {\n    myCbEnabled = new JBCheckBox(ExecutionBundle.message(\"run.configuration.use.alternate.jre.checkbox\"));\n\n    myFieldWithHistory = new TextFieldWithHistory();\n    myFieldWithHistory.setHistorySize(-1);\n    final ArrayList<String> foundJDKs = new ArrayList<String>();\n    final Sdk[] allJDKs = ProjectJdkTable.getInstance().getAllJdks();\n\n    for (Sdk sdk : allJDKs) {\n      foundJDKs.add(sdk.getName());\n    }\n\n    for (JreProvider provider : JreProvider.EP_NAME.getExtensions()) {\n      String path = provider.getJrePath();\n      if (!StringUtil.isEmpty(path)) {\n        foundJDKs.add(path);\n      }\n    }\n\n    for (Sdk jdk : allJDKs) {\n      String homePath = jdk.getHomePath();\n\n      if (!SystemInfo.isMac) {\n        final File jre = new File(jdk.getHomePath(), \"jre\");\n        if (jre.isDirectory()) {\n          homePath = jre.getPath();\n        }\n      }\n\n      if (!foundJDKs.contains(homePath)) {\n        foundJDKs.add(homePath);\n      }\n    }\n    myFieldWithHistory.setHistory(foundJDKs);\n    myPathField = new ComponentWithBrowseButton<TextFieldWithHistory>(myFieldWithHistory, null);\n    myPathField.addBrowseFolderListener(ExecutionBundle.message(\"run.configuration.select.alternate.jre.label\"),\n                                        ExecutionBundle.message(\"run.configuration.select.jre.dir.label\"),\n                                        null, BrowseFilesListener.SINGLE_DIRECTORY_DESCRIPTOR,\n                                        TextComponentAccessor.TEXT_FIELD_WITH_HISTORY_WHOLE_TEXT);\n\n    setLayout(new MigLayout(\"ins 0, gap 10, fill, flowx\"));\n    add(myCbEnabled, \"shrinkx\");\n    add(myPathField, \"growx, pushx\");\n\n    InsertPathAction.addTo(myFieldWithHistory.getTextEditor());\n\n    myCbEnabled.addActionListener(new ActionListener() {\n      public void actionPerformed(ActionEvent e) {\n        enabledChanged();\n      }\n    });\n    enabledChanged();\n\n    setAnchor(myCbEnabled);\n\n    updateUI();\n  }","commit_id":"f72b9ff33cf55fe7abd367ae9c621d51e6826b6a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static Sdk createAlternativeJdk(final String jreHome) throws CantRunException {\n    final Sdk jdk = JavaSdk.getInstance().createJdk(\"\", jreHome);\n    if (jdk == null) throw CantRunException.noJdkConfigured();\n    return jdk;\n  }","id":56460,"modified_method":"private static Sdk createAlternativeJdk(final String jreHome) throws CantRunException {\n    final Sdk configuredJdk = ProjectJdkTable.getInstance().findJdk(jreHome);\n    if (configuredJdk != null) {\n      return configuredJdk;\n    }\n    final boolean isJdk = JavaSdk.checkForJdk(new File(jreHome));\n    if (isJdk) {\n      throw new CantRunException(\"Jre expected but jdk found\");\n    }\n    final Sdk jdk = JavaSdk.getInstance().createJdk(\"\", jreHome);\n    if (jdk == null) throw CantRunException.noJdkConfigured();\n    return jdk;\n  }","commit_id":"f72b9ff33cf55fe7abd367ae9c621d51e6826b6a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void checkAlternativeJRE(CommonJavaRunConfigurationParameters configuration) throws RuntimeConfigurationWarning {\n    if (configuration.isAlternativeJrePathEnabled()) {\n      if (configuration.getAlternativeJrePath() == null ||\n          configuration.getAlternativeJrePath().length() == 0 ||\n          !JavaSdk.checkForJre(configuration.getAlternativeJrePath())) {\n        throw new RuntimeConfigurationWarning(\n          ExecutionBundle.message(\"jre.path.is.not.valid.jre.home.error.mesage\", configuration.getAlternativeJrePath()));\n      }\n    }\n  }","id":56461,"modified_method":"public static void checkAlternativeJRE(CommonJavaRunConfigurationParameters configuration) throws RuntimeConfigurationWarning {\n    if (configuration.isAlternativeJrePathEnabled()) {\n      final String alternativeJrePath = configuration.getAlternativeJrePath();\n      if (alternativeJrePath == null ||\n          alternativeJrePath.length() == 0 ||\n          ProjectJdkTable.getInstance().findJdk(alternativeJrePath) == null && !JavaSdk.checkForJre(alternativeJrePath)) {\n        throw new RuntimeConfigurationWarning(\n          ExecutionBundle.message(\"jre.path.is.not.valid.jre.home.error.mesage\", alternativeJrePath));\n      }\n    }\n  }","commit_id":"f72b9ff33cf55fe7abd367ae9c621d51e6826b6a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static Sdk createAlternativeJdk(@NotNull String jreHome) throws CantRunException {\n    final Sdk configuredJdk = ProjectJdkTable.getInstance().findJdk(jreHome);\n    if (configuredJdk != null) {\n      return configuredJdk;\n    }\n    final boolean isJdk = JavaSdk.checkForJdk(new File(jreHome));\n    if (isJdk) {\n      throw new CantRunException(\"Alternative JRE path needs to point to a JRE, not to a complete JDK installation\");\n    }\n    final Sdk jdk = JavaSdk.getInstance().createJdk(\"\", jreHome);\n    if (jdk == null) throw CantRunException.noJdkConfigured();\n    return jdk;\n  }","id":56462,"modified_method":"private static Sdk createAlternativeJdk(@NotNull String jreHome) throws CantRunException {\n    final Sdk configuredJdk = ProjectJdkTable.getInstance().findJdk(jreHome);\n    if (configuredJdk != null) {\n      return configuredJdk;\n    }\n\n    if (JdkUtil.checkForJdk(jreHome)) {\n      throw new CantRunException(ExecutionBundle.message(\"jre.path.is.jdk.error.message\"));\n    }\n    if (!JdkUtil.checkForJre(jreHome)) {\n      throw new CantRunException(ExecutionBundle.message(\"jre.path.is.not.valid.jre.home.error.message\", jreHome));\n    }\n\n    final Sdk jdk = JavaSdk.getInstance().createJdk(\"\", jreHome);\n    if (jdk == null) throw CantRunException.noJdkConfigured();\n    return jdk;\n  }","commit_id":"9a600ba6e31bfe90f45c9bae432050ad96a09244","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void checkAlternativeJRE(CommonJavaRunConfigurationParameters configuration) throws RuntimeConfigurationWarning {\n    if (configuration.isAlternativeJrePathEnabled()) {\n      String alternativeJrePath = configuration.getAlternativeJrePath();\n      if (StringUtil.isEmpty(alternativeJrePath) ||\n          ProjectJdkTable.getInstance().findJdk(alternativeJrePath) == null && !JavaSdk.checkForJre(alternativeJrePath)) {\n        throw new RuntimeConfigurationWarning(\n          ExecutionBundle.message(\"jre.path.is.not.valid.jre.home.error.mesage\", alternativeJrePath));\n      }\n    }\n  }","id":56463,"modified_method":"public static void checkAlternativeJRE(@NotNull CommonJavaRunConfigurationParameters configuration) throws RuntimeConfigurationWarning {\n    if (configuration.isAlternativeJrePathEnabled()) {\n      checkAlternativeJRE(configuration.getAlternativeJrePath());\n    }\n  }","commit_id":"9a600ba6e31bfe90f45c9bae432050ad96a09244","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean checkForJre(@NotNull String homePath) {\n    homePath = new File(FileUtil.toSystemDependentName(homePath)).getAbsolutePath();\n    File binPath = new File(homePath + File.separator + \"bin\");\n    if (!binPath.exists()) return false;\n\n    FileFilter fileFilter = new FileFilter() {\n      @Override\n      public boolean accept(@NotNull File f) {\n        return !f.isDirectory() && \"java\".equals(FileUtil.getNameWithoutExtension(f));\n      }\n    };\n    File[] children = binPath.listFiles(fileFilter);\n\n    return children != null && children.length >= 1 &&\n           checkForRuntime(homePath);\n  }","id":56464,"modified_method":"public static boolean checkForJre(@NotNull String homePath) {\n    return checkForJre(new File(FileUtil.toSystemDependentName(homePath)));\n  }","commit_id":"9a600ba6e31bfe90f45c9bae432050ad96a09244","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean checkForJdk(@NotNull File homePath) {\n    File binPath = new File(homePath.getAbsolutePath() + File.separator + \"bin\");\n    if (!binPath.exists()) return false;\n\n    FileFilter fileFilter = new FileFilter() {\n      @Override\n      public boolean accept(@NotNull File f) {\n        if (f.isDirectory()) return false;\n        String name = FileUtil.getNameWithoutExtension(f);\n        return \"javac\".equals(name) || \"javah\".equals(name);\n      }\n    };\n    File[] children = binPath.listFiles(fileFilter);\n\n    return children != null && children.length >= 2 &&\n           checkForRuntime(homePath.getAbsolutePath());\n  }","id":56465,"modified_method":"public static boolean checkForJdk(@NotNull File homePath) {\n    File binPath = new File(homePath, \"bin\");\n    if (!binPath.exists()) return false;\n\n    FileFilter fileFilter = new FileFilter() {\n      @Override\n      public boolean accept(@NotNull File f) {\n        if (f.isDirectory()) return false;\n        String name = FileUtil.getNameWithoutExtension(f);\n        return \"javac\".equals(name) || \"javah\".equals(name);\n      }\n    };\n    File[] children = binPath.listFiles(fileFilter);\n\n    return children != null && children.length >= 2 &&\n           checkForRuntime(homePath.getAbsolutePath());\n  }","commit_id":"9a600ba6e31bfe90f45c9bae432050ad96a09244","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public JavaParameters createJavaParameters(@NotNull OsgiRunConfiguration runConfiguration,\n                                             @NotNull List<SelectedBundle> bundles) throws ExecutionException {\n    myRunConfiguration = runConfiguration;\n    myInstance = myRunConfiguration.getInstanceToUse();\n    assert myInstance != null : myRunConfiguration;\n    myIntegrator = FrameworkIntegratorRegistry.getInstance().findIntegratorByInstanceDefinition(myInstance);\n    assert myIntegrator != null : myInstance;\n    myInstanceManager = myIntegrator.getFrameworkInstanceManager();\n    myAdditionalProperties = myRunConfiguration.getAdditionalProperties();\n    myBundles = bundles;\n\n    // validation\n\n    Sdk jdkForRun;\n    if (myRunConfiguration.isUseAlternativeJre()) {\n      String path = myRunConfiguration.getAlternativeJrePath();\n      if (StringUtil.isEmpty(path) || !JdkUtil.checkForJre(path)) {\n        jdkForRun = null;\n      }\n      else {\n        jdkForRun = JavaSdk.getInstance().createJdk(\"\", myRunConfiguration.getAlternativeJrePath());\n      }\n    }\n    else {\n      jdkForRun = ProjectRootManager.getInstance(myRunConfiguration.getProject()).getProjectSdk();\n    }\n    if (jdkForRun == null) {\n      throw CantRunException.noJdkConfigured();\n    }\n\n    JavaParameters params = new JavaParameters();\n\n    // working directory and JVM\n\n    if (myRunConfiguration.isGenerateWorkingDir()) {\n      myWorkingDir = new File(PathManager.getSystemPath(), \"osmorc/run.\" + System.currentTimeMillis());\n    }\n    else {\n      myWorkingDir = new File(myRunConfiguration.getWorkingDir());\n    }\n    if (!myWorkingDir.isDirectory() && !myWorkingDir.mkdirs()) {\n      throw new CantRunException(\"Cannot create work directory '\" + myWorkingDir.getPath() + \"'\");\n    }\n    params.setWorkingDirectory(myWorkingDir);\n\n    // only add JDK classes to the classpath, the rest is to be provided by bundles\n    params.configureByProject(myRunConfiguration.getProject(), JavaParameters.JDK_ONLY, jdkForRun);\n\n    // class path\n\n    Collection<SelectedBundle> systemBundles = myInstanceManager.getFrameworkBundles(myInstance, FrameworkBundleType.SYSTEM);\n    if (systemBundles.isEmpty()) {\n      throw new CantRunException(\"Libraries required to start the framework not found - please check the installation\");\n    }\n    for (SelectedBundle bundle : systemBundles) {\n      String path = bundle.getBundlePath();\n      assert path != null : bundle;\n      params.getClassPath().add(path);\n    }\n\n    if (GenericRunProperties.isStartConsole(myAdditionalProperties)) {\n      Collection<SelectedBundle> shellBundles = myInstanceManager.getFrameworkBundles(myInstance, FrameworkBundleType.SHELL);\n      if (shellBundles.isEmpty()) {\n        throw new CantRunException(\"Console requested but no shell bundles can be found - please check the installation\");\n      }\n      List<SelectedBundle> allBundles = ContainerUtil.newArrayList(shellBundles);\n      allBundles.addAll(myBundles);\n      myBundles = allBundles;\n    }\n\n    if (myRunConfiguration.isIncludeAllBundlesInClassPath()) {\n      for (SelectedBundle bundle : myBundles) {\n        String path = bundle.getBundlePath();\n        if (path != null) {\n          params.getClassPath().add(path);\n        }\n      }\n    }\n\n    // runner options\n\n    params.setUseDynamicVMOptions(!myBundles.isEmpty());\n\n    params.getVMParametersList().addAll(HttpConfigurable.convertArguments(HttpConfigurable.getJvmPropertiesList(false, null)));\n    params.getVMParametersList().addParametersString(myRunConfiguration.getVmParameters());\n\n    String additionalProgramParams = myRunConfiguration.getProgramParameters();\n    if (!StringUtil.isEmptyOrSpaces(additionalProgramParams)) {\n      params.getProgramParametersList().addParametersString(additionalProgramParams);\n    }\n\n    String bootDelegation = GenericRunProperties.getBootDelegation(myAdditionalProperties);\n    if (!StringUtil.isEmptyOrSpaces(bootDelegation)) {\n      params.getVMParametersList().addProperty(\"org.osgi.framework.bootdelegation\", bootDelegation);\n    }\n\n    String systemPackages = GenericRunProperties.getSystemPackages(myAdditionalProperties);\n    if (!StringUtil.isEmptyOrSpaces(systemPackages)) {\n      params.getVMParametersList().addProperty(\"org.osgi.framework.system.packages.extra\", systemPackages);\n    }\n\n    // framework-specific options\n\n    setupParameters(params);\n\n    return params;\n  }","id":56466,"modified_method":"@Override\n  public JavaParameters createJavaParameters(@NotNull OsgiRunConfiguration runConfiguration,\n                                             @NotNull List<SelectedBundle> bundles) throws ExecutionException {\n    myRunConfiguration = runConfiguration;\n    myInstance = myRunConfiguration.getInstanceToUse();\n    assert myInstance != null : myRunConfiguration;\n    myIntegrator = FrameworkIntegratorRegistry.getInstance().findIntegratorByInstanceDefinition(myInstance);\n    assert myIntegrator != null : myInstance;\n    myInstanceManager = myIntegrator.getFrameworkInstanceManager();\n    myAdditionalProperties = myRunConfiguration.getAdditionalProperties();\n    myBundles = bundles;\n\n    JavaParameters params = new JavaParameters();\n\n    // working directory and JVM\n\n    if (myRunConfiguration.isGenerateWorkingDir()) {\n      myWorkingDir = new File(PathManager.getSystemPath(), \"osmorc/run.\" + System.currentTimeMillis());\n    }\n    else {\n      myWorkingDir = new File(myRunConfiguration.getWorkingDir());\n    }\n    if (!myWorkingDir.isDirectory() && !myWorkingDir.mkdirs()) {\n      throw new CantRunException(\"Cannot create work directory '\" + myWorkingDir.getPath() + \"'\");\n    }\n    params.setWorkingDirectory(myWorkingDir);\n\n    // only add JDK classes to the classpath, the rest is to be provided by bundles\n    String jreHome = myRunConfiguration.isUseAlternativeJre() ? myRunConfiguration.getAlternativeJrePath() : null;\n    JavaParametersUtil.configureProject(myRunConfiguration.getProject(), params, JavaParameters.JDK_ONLY, jreHome);\n\n    // class path\n\n    Collection<SelectedBundle> systemBundles = myInstanceManager.getFrameworkBundles(myInstance, FrameworkBundleType.SYSTEM);\n    if (systemBundles.isEmpty()) {\n      throw new CantRunException(\"Libraries required to start the framework not found - please check the installation\");\n    }\n    for (SelectedBundle bundle : systemBundles) {\n      String path = bundle.getBundlePath();\n      assert path != null : bundle;\n      params.getClassPath().add(path);\n    }\n\n    if (GenericRunProperties.isStartConsole(myAdditionalProperties)) {\n      Collection<SelectedBundle> shellBundles = myInstanceManager.getFrameworkBundles(myInstance, FrameworkBundleType.SHELL);\n      if (shellBundles.isEmpty()) {\n        throw new CantRunException(\"Console requested but no shell bundles can be found - please check the installation\");\n      }\n      List<SelectedBundle> allBundles = ContainerUtil.newArrayList(shellBundles);\n      allBundles.addAll(myBundles);\n      myBundles = allBundles;\n    }\n\n    if (myRunConfiguration.isIncludeAllBundlesInClassPath()) {\n      for (SelectedBundle bundle : myBundles) {\n        String path = bundle.getBundlePath();\n        if (path != null) {\n          params.getClassPath().add(path);\n        }\n      }\n    }\n\n    // runner options\n\n    params.setUseDynamicVMOptions(!myBundles.isEmpty());\n\n    params.getVMParametersList().addAll(HttpConfigurable.convertArguments(HttpConfigurable.getJvmPropertiesList(false, null)));\n    params.getVMParametersList().addParametersString(myRunConfiguration.getVmParameters());\n\n    String additionalProgramParams = myRunConfiguration.getProgramParameters();\n    if (!StringUtil.isEmptyOrSpaces(additionalProgramParams)) {\n      params.getProgramParametersList().addParametersString(additionalProgramParams);\n    }\n\n    String bootDelegation = GenericRunProperties.getBootDelegation(myAdditionalProperties);\n    if (!StringUtil.isEmptyOrSpaces(bootDelegation)) {\n      params.getVMParametersList().addProperty(\"org.osgi.framework.bootdelegation\", bootDelegation);\n    }\n\n    String systemPackages = GenericRunProperties.getSystemPackages(myAdditionalProperties);\n    if (!StringUtil.isEmptyOrSpaces(systemPackages)) {\n      params.getVMParametersList().addProperty(\"org.osgi.framework.system.packages.extra\", systemPackages);\n    }\n\n    // framework-specific options\n\n    setupParameters(params);\n\n    return params;\n  }","commit_id":"6e70855f13b25a56dba0bc0ae9219154b50442b2","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n  public void checkConfiguration() throws RuntimeConfigurationException {\n    if (getInstanceToUse() == null) {\n      throw new RuntimeConfigurationError(OsmorcBundle.message(\"run.configuration.no.instance\"));\n    }\n    if (isUseAlternativeJre()) {\n      String jrePath = this.getAlternativeJrePath();\n      if (jrePath == null || jrePath.length() == 0 || !JavaSdk.checkForJre(jrePath)) {\n        throw new RuntimeConfigurationError(ExecutionBundle.message(\"jre.not.valid.error.message\", jrePath));\n      }\n    }\n    if (checker != null) {\n      checker.checkConfiguration(this);\n    }\n  }","id":56467,"modified_method":"@Override\n  public void checkConfiguration() throws RuntimeConfigurationException {\n    if (getInstanceToUse() == null) {\n      throw new RuntimeConfigurationError(OsmorcBundle.message(\"run.configuration.no.instance\"));\n    }\n    if (isUseAlternativeJre()) {\n      JavaParametersUtil.checkAlternativeJRE(getAlternativeJrePath());\n    }\n    if (checker != null) {\n      checker.checkConfiguration(this);\n    }\n  }","commit_id":"6e70855f13b25a56dba0bc0ae9219154b50442b2","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public void sawOpcode(int seen) {\n\t\tint[] switchOffsets = null;\n\t\tint[] switchLabels = null;\n\n\t\tswitch (seen) {\n\t\tcase TABLESWITCH:\n\t\tcase LOOKUPSWITCH:\n\t\t\tswitchPC = getPC();\n\t\t\tswitchOffsets = getSwitchOffsets();\n\t\t\tswitchLabels = getSwitchLabels();\n\t\t\tinSwitch = true;\n\t\t\treachable = false;\n\t\t\tnextIndex = 0;\n\t\t\tbreak;\n\t\tdefault:\n\t\t}\n\t\tif (inSwitch && nextIndex >= switchOffsets.length)\n\t\t\tinSwitch = false;\n\t\tif (inSwitch) {\n\t\t\tif (getPC() == switchPC + switchOffsets[nextIndex]\n\t\t\t        && switchOffsets[nextIndex] != getDefaultSwitchOffset()\n\t\t\t) {\n\t\t\t\tif (nextIndex > 0 && reachable) {\n\t\t\t\t\tint endOfPreviousCase = lineNumbers.getSourceLine(getPC() - 1);\n\t\t\t\t\tint startOfNextCase = lineNumbers.getSourceLine(getPC());\n\t\t\t\t\tint previousLabel = switchLabels[nextIndex - 1];\n\t\t\t\t\tint nextLabel = switchLabels[nextIndex];\n\t\t\t\t\tif (!(previousLabel == 10 && nextLabel == 13)\n\t\t\t\t\t        && !(previousLabel == 13 && nextLabel == 10)\n\t\t\t\t\t        && startOfNextCase - endOfPreviousCase <= 2) {\n\t\t\t\t\t\tSystem.out.println(\"Reached the switch for \" + switchLabels[nextIndex]\n\t\t\t\t\t\t        + \" at line number \" + startOfNextCase\n\t\t\t\t\t\t        + \" in \" + getFullyQualifiedMethodName());\n\t\t\t\t\t}\n\t\t\t\t\t/*\n\t\t\t\t\tSystem.out.println(\"switchPC: \" + switchPC);\n\t\t\t\t\tSystem.out.println(\"nextIndex: \" + nextIndex);\n\t\t\t\t\tSystem.out.println(\"switchOffset[nextIndex]: \" + switchOffsets[nextIndex]);\n\t\t\t\t\tfor(int i = 0; i < switchOffsets.length; i++)\n\t\t\t\t\t\tSystem.out.println(\"\t\" + switchLabels[i] + \"\t\" +\n\t\t\t\t\t\t\t(switchPC + switchOffsets[i]));\n\t\t\t\t\t*/\n\t\t\t\t}\n\t\t\t\tdo {\n\t\t\t\t\tnextIndex++;\n\t\t\t\t\tif (nextIndex >= switchOffsets.length) {\n\t\t\t\t\t\tinSwitch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} while (getPC() == switchPC + switchOffsets[nextIndex]);\n\t\t\t}\n\t\t}\n\n\t\tswitch (seen) {\n\t\tcase TABLESWITCH:\n\t\tcase LOOKUPSWITCH:\n\t\tcase ATHROW:\n\t\tcase RETURN:\n\t\tcase ARETURN:\n\t\tcase IRETURN:\n\t\tcase LRETURN:\n\t\tcase DRETURN:\n\t\tcase FRETURN:\n\t\tcase GOTO_W:\n\t\tcase GOTO:\n\t\t\treachable = false;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treachable = true;\n\t\t}\n\t}","id":56468,"modified_method":"public void sawOpcode(int seen) {\n\t\t\n\t\tswitch (seen) {\n\t\tcase TABLESWITCH:\n\t\tcase LOOKUPSWITCH:\n\t\t\tswitchPC = getPC();\n\t\t\tinSwitch = true;\n\t\t\tswOffsets = getSwitchOffsets();\n\t\t\tswLabels = getSwitchLabels();\n\t\t\tdefSwOffset = getDefaultSwitchOffset();\n\t\t\treachable = false;\n\t\t\tnextIndex = 0;\n\t\t\tbreak;\t\t\n\t\tdefault:\n\t\t}\n\t\t\n\t\tif (inSwitch) {\n\t\t\tif (nextIndex >= swOffsets.length)\n\t\t\t\tinSwitch = false;\n\n\t\t\tif (inSwitch) {\n\t\t\t\tif ((getPC() == (switchPC + swOffsets[nextIndex]))\n\t\t\t\t&&  (swOffsets[nextIndex] != defSwOffset)) {\n\t\t\t\t\tif (nextIndex > 0 && reachable) {\n\t\t\t\t\t\tif ((lastSeen != GOTO) && (lastSeen != GOTO_W)) {\n\t\t\t\t\t\t\tbugReporter.reportBug(new BugInstance(\"SF_SWITCH_FALLTHROUGH\", NORMAL_PRIORITY)\n\t\t\t        \t\t\t.addClassAndMethod(this)\n\t\t\t        \t\t\t.addSourceLineRange(this, lastPC, getPC()));\n\t\t\t        \t}\n\n/*\tNot sure why this is here, isn't lack of goto enough? \t\t\t\t\n\t\t\t\t\t\tint endOfPreviousCase = lineNumbers.getSourceLine(getPC() - 1);\n\t\t\t\t\t\tint startOfNextCase = lineNumbers.getSourceLine(getPC());\n\t\t\t\t\t\tint previousLabel = swLabels[nextIndex - 1];\n\t\t\t\t\t\tint nextLabel = swLabels[nextIndex];\n\t\t\t\t\t\tif (!(previousLabel == 10 && nextLabel == 13)\n\t\t\t\t\t\t        && !(previousLabel == 13 && nextLabel == 10)\n\t\t\t\t\t\t        && startOfNextCase - endOfPreviousCase <= 2) {\n\t\t\t\t\t\t\tSystem.out.println(\"Reached the switch for \" + swLabels[nextIndex]\n\t\t\t\t\t\t\t        + \" at line number \" + startOfNextCase\n\t\t\t\t\t\t\t        + \" in \" + getFullyQualifiedMethodName());\n\t\t\t\t\t\t}\n*/\n\t\t\t\t\t}\n\t\t\t\t\tdo {\n\t\t\t\t\t\tnextIndex++;\n\t\t\t\t\t\tif (nextIndex >= swOffsets.length) {\n\t\t\t\t\t\t\tinSwitch = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (getPC() == switchPC + swOffsets[nextIndex]);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tswitch (seen) {\n\t\t\tcase TABLESWITCH:\n\t\t\tcase LOOKUPSWITCH:\n\t\t\tcase ATHROW:\n\t\t\tcase RETURN:\n\t\t\tcase ARETURN:\n\t\t\tcase IRETURN:\n\t\t\tcase LRETURN:\n\t\t\tcase DRETURN:\n\t\t\tcase FRETURN:\n\t\t\tcase GOTO_W:\n\t\t\tcase GOTO:\n\t\t\t\treachable = false;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treachable = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tlastSeen = seen;\n\t\tlastPC = getPC();\n\t}","commit_id":"a2acee8949174ffced5b56e232ddbc6d7cb522f4","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void visit(Code obj) {\n\t\tinSwitch = false;\n\t\treachable = true;\n\t\tlineNumbers = obj.getLineNumberTable();\n\t\tif (lineNumbers != null)\n\t\t\tsuper.visit(obj);\n\t}","id":56469,"modified_method":"public void visit(Code obj) {\n\t\tinSwitch = false;\n\t\treachable = true;\n\t\tswOffsets = null;\n\t\tswLabels = null;\n\t\tdefSwOffset = 0;\n\t\tlastSeen = 0;\n\t\tlastPC = 0;\n/*\t\tlineNumbers = obj.getLineNumberTable();\n\t\tif (lineNumbers != null)\n*/\t\t\tsuper.visit(obj);\n\t}","commit_id":"a2acee8949174ffced5b56e232ddbc6d7cb522f4","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void visitClassContext(ClassContext classContext) {\n\t\t// DHH - 6/25/04\n\t\t// People have been reporting NPEs from this\n\t\t// detector.  For now, I am hacking it so it doesn't\n\t\t// actually do anything.\n\n\t\t/* DO NOTHING - no visitation methods will be called */\n\t}","id":56470,"modified_method":"public void visitClassContext(ClassContext classContext) {\n\t\tclassContext.getJavaClass().accept(this);\n\t}","commit_id":"a2acee8949174ffced5b56e232ddbc6d7cb522f4","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Factory method for creating a source line annotation describing the\n\t * source line number for the instruction being visited by given visitor.\n\t * @param visitor a DismantleBytecode visitor which is visiting the method\n\t * @return the SourceLineAnnotation, or null if we do not have line number information\n\t *   for the instruction\n\t */\n\tpublic static SourceLineAnnotation fromVisitedInstruction(DismantleBytecode visitor) {\n\t\tLineNumberTable lineNumberTable = getLineNumberTable(visitor);\n\t\tif (lineNumberTable == null)\n\t\t\treturn null;\n\n\t\tint pc = visitor.getPC();\n\t\tint lineNumber = lineNumberTable.getSourceLine(pc);\n\t\treturn new SourceLineAnnotation(visitor.getBetterClassName(), lineNumber, lineNumber);\n\t}","id":56471,"modified_method":"/**\n\t * Factory method for creating a source line annotation describing the\n\t * source line number for the instruction being visited by given visitor.\n\t * @param visitor a DismantleBytecode visitor which is visiting the method\n\t * @return the SourceLineAnnotation, or null if we do not have line number information\n\t *   for the instruction\n\t */\n\tpublic static SourceLineAnnotation fromVisitedInstruction(DismantleBytecode visitor) {\n\t\treturn fromVisitedInstruction(visitor, visitor.getPC());\n\t}","commit_id":"969c8869444972b18ff11d389f459871c18f450a","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta=(CubeInputMeta)smi;\n\t\tdata=(CubeInputData)sdi;\n\n\t\ttry\n\t\t{\n\t\t\tRow r = new Row(data.dis, data.meta.size(), data.meta);\n\t\t\tlinesInput++;\n\t\t\tputRow(r);        // fill the rowset(s). (wait for empty)\n\t\t\t\n\t\t\tif (meta.getRowLimit()>0 && linesInput>=meta.getRowLimit()) // finished!\n\t\t\t{\n\t\t\t\tsetOutputDone();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcatch(KettleEOFException eof)\n\t\t{\n\t\t\tsetOutputDone();\n\t\t\treturn false;\n\t\t}\n\n        if (checkFeedback(linesInput)) logBasic(Messages.getString(\"CubeInput.Log.LineNumber\")+linesInput); //$NON-NLS-1$\n\n\t\treturn true;\n\t}","id":56472,"modified_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta=(CubeInputMeta)smi;\n\t\tdata=(CubeInputData)sdi;\n\n\t\ttry\n\t\t{\n            Row r;\n            if (first)\n            {\n                first=false;\n                r= data.meta;\n            }\n            else\n            {\n    \t\t\tr = new Row(data.dis, data.meta.size(), data.meta);\n    \t\t\t\n            }\n            putRow(r);  // fill the rowset(s). (sleeps if full)\n            linesInput++;\n\t\t\t\n\t\t\tif (meta.getRowLimit()>0 && linesInput>=meta.getRowLimit()) // finished!\n\t\t\t{\n\t\t\t\tsetOutputDone();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tcatch(KettleEOFException eof)\n\t\t{\n\t\t\tsetOutputDone();\n\t\t\treturn false;\n\t\t}\n\n        if (checkFeedback(linesInput)) logBasic(Messages.getString(\"CubeInput.Log.LineNumber\")+linesInput); //$NON-NLS-1$\n\n\t\treturn true;\n\t}","commit_id":"cb409047bf66420872b47c49e4d4c091fa0e1881","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private synchronized boolean writeRowToFile(Row r)\n\t{\n\t\ttry\n\t\t{\t\n\t\t\tif (first)\n\t\t\t{\t\n\t\t\t\t// Write data + meta-data to the cube file...\n\t\t\t\tr.write(data.dos);\n\t\t\t\tfirst=false;\n\t\t\t}\n            \n\t\t\t// Write data to the cube file...\n\t\t\tr.writeData(data.dos);\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tlogError(Messages.getString(\"CubeOutput.Log.ErrorWritingLine\")+e.toString()); //$NON-NLS-1$\n\t\t\treturn false;\n\t\t}\n\n\t\tlinesOutput++;\n\t\t\n\t\treturn true;\n\t}","id":56473,"modified_method":"private synchronized boolean writeRowToFile(Row r)\n\t{\n\t\ttry\n\t\t{\t\n\t\t\tif (first)\n\t\t\t{\t\n\t\t\t\t// Write data + meta-data to the cube file...\n\t\t\t\tr.write(data.dos);\n\t\t\t\tfirst=false;\n\t\t\t}\n            else\n            {\n    \t\t\t// Write data to the cube file...\n    \t\t\tr.writeData(data.dos);\n            }\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tlogError(Messages.getString(\"CubeOutput.Log.ErrorWritingLine\")+e.toString()); //$NON-NLS-1$\n\t\t\treturn false;\n\t\t}\n\n\t\tlinesOutput++;\n\t\t\n\t\treturn true;\n\t}","commit_id":"cb409047bf66420872b47c49e4d4c091fa0e1881","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta=(SynchronizeAfterMergeMeta)smi;\n\t\tdata=(SynchronizeAfterMergeData)sdi;\n\n\t\tObject[] r=getRow();       // Get row from input rowset & set row busy!\n\t\tif (r==null)          // no more input to be expected...\n\t\t{\n\t\t\tsetOutputDone();\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (first)\n\t\t{\n\t\t\tfirst=false;\n\t\t\tdata.outputRowMeta = getInputRowMeta().clone();\n\t\t\tdata.inputRowMeta=data.outputRowMeta;\n\t        meta.getFields(data.outputRowMeta, getStepname(), null, null, this);\n\t       \n\t            \n\t\t\tif(meta.istablenameInField())\n\t\t\t{\n\t\t\t\t// Cache the position of the table name field\n\t            if (data.indexOfTableNameField<0)\n\t            {\n\t                data.indexOfTableNameField = data.inputRowMeta.indexOfValue(meta.gettablenameField());\n\t                if (data.indexOfTableNameField<0)\n\t                {\n\t                    String message = \"It was not possible to find table [\"+meta.gettablenameField()+\"] in the input fields.\";\n\t                    logError(message);\n\t                    throw new KettleStepException(message);\n\t                }\n\t            } \n\t\t\t}else\n\t\t\t{\n\t\t\t\tdata.realTableName = environmentSubstitute(meta.getTableName());\n\t\t\t    if (Const.isEmpty(data.realTableName))  throw new KettleStepException(\"The table name is not specified (or the input field is empty)\");\n\t\t\t\tdata.realSchemaTable = data.db.getDatabaseMeta().getQuotedSchemaTableCombination(data.realSchemaName, data.realTableName);\t\n\t\t\t}\n\n\t\t\t// Cache the position of the operation order field\n            if (data.indexOfOperationOrderField<0)\n            {\n                data.indexOfOperationOrderField = data.inputRowMeta.indexOfValue(meta.getOperationOrderField());\n                if (data.indexOfOperationOrderField<0)\n                {\n                    String message = \"It was not possible to find operation field [\"+meta.getOperationOrderField()+\"] in the input stream!\";\n                    logError(message);\n                    throw new KettleStepException(message);\n                }\n            } \n\n            data.insertValue=environmentSubstitute(meta.getOrderInsert());\n            data.updateValue=environmentSubstitute(meta.getOrderUpdate());\n            data.deleteValue=environmentSubstitute(meta.getOrderDelete());\n            \n            \n            data.insertRowMeta = new RowMeta();\n        \n\n\t\t\t// lookup the values!\n\t\t\tif (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.CheckingRow\")+r.toString()); //$NON-NLS-1$\n\t\t\t\n\t\t\tdata.keynrs  = new int[meta.getKeyStream().length];\n\t\t\tdata.keynrs2 = new int[meta.getKeyStream().length];\n\t\t\tfor (int i=0;i<meta.getKeyStream().length;i++)\n\t\t\t{\n\t\t\t   data.keynrs[i]=data.inputRowMeta.indexOfValue(meta.getKeyStream()[i]);\n\t\t\t\tif (data.keynrs[i]<0 &&  // couldn't find field!\n                    !\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) &&   // No field needed! //$NON-NLS-1$\n\t\t\t\t    !\"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])  // No field needed! //$NON-NLS-1$\n                   )\n\t\t\t\t{\n\t\t\t\t\tthrow new KettleStepException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Exception.FieldRequired\",meta.getKeyStream()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}\n\t\t\t\tdata.keynrs2[i]=data.inputRowMeta.indexOfValue(meta.getKeyStream2()[i]);\n\t\t\t\tif (data.keynrs2[i]<0 &&  // couldn't find field!\n\t\t\t\t    \"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i])   // 2 fields needed! //$NON-NLS-1$\n\t\t\t\t   )\n\t\t\t\t{\n\t\t\t\t\tthrow new KettleStepException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Exception.FieldRequired\",meta.getKeyStream2()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.FieldHasDataNumbers\",meta.getKeyStream()[i])+data.keynrs[i]); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t}\n\t\t\t\n            // Insert the update fields: just names.  Type doesn't matter!\n            for (int i=0;i<meta.getUpdateLookup().length;i++) \n            {\n                ValueMetaInterface insValue = data.insertRowMeta.searchValueMeta( meta.getUpdateLookup()[i]); \n                if (insValue==null) // Don't add twice!\n                {\n                    // we already checked that this value exists so it's probably safe to ignore lookup failure...\n                    ValueMetaInterface insertValue = data.inputRowMeta.searchValueMeta( meta.getUpdateStream()[i] ).clone();\n                    insertValue.setName(meta.getUpdateLookup()[i]);\n                    data.insertRowMeta.addValueMeta( insertValue );\n                }\n                else\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Error.SameColumnInsertedTwice\",insValue.getName())); \n                 }\n            }\n            \n\t\t\t// Cache the position of the compare fields in Row row\n\t\t\t//\n\t\t\tdata.valuenrs = new int[meta.getUpdateLookup().length];\n\t\t\tfor (int i=0;i<meta.getUpdateLookup().length;i++)\n\t\t\t{\n\t\t\t\tdata.valuenrs[i]=data.inputRowMeta.indexOfValue(meta.getUpdateStream()[i]);\n\t\t\t\tif (data.valuenrs[i]<0)  // couldn't find field!\n\t\t\t\t{\n\t\t\t\t\tthrow new KettleStepException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Exception.FieldRequired\",meta.getUpdateStream()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}\n\t\t\t\tif (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.FieldHasDataNumbers\",meta.getUpdateStream()[i])+data.valuenrs[i]); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t}\n\t\t\t\n\t\t\tif(!meta.istablenameInField())\n\t\t\t{\n\t\t\t\t// Prepare Lookup statement\n\t\t\t\tif(meta.isPerformLookup())\n\t\t\t\t{\n\t\t\t\t\tdata.lookupStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"lookup\");\n\t\t            if (data.lookupStatement==null)\n\t\t            {\n\t\t                String sql = getLookupStatement(data.inputRowMeta);\n\t\t                if(log.isDebug()) logDebug(\"Preparation of the lookup SQL statement : \"+sql);\n\t\t\n\t\t                data.lookupStatement = data.db.prepareSQL(sql);\n\t\t                data.preparedStatements.put(data.realSchemaTable+\"lookup\", data.lookupStatement);\n\t\t            }\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\t// Prepare Insert statement\n\t\t\t\tdata.insertStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"insert\");\n\t            if (data.insertStatement==null)\n\t            {\n\t                String sql = data.db.getInsertStatement(data.realSchemaName,data.realTableName, data.insertRowMeta);\n\t                \n\t                if(log.isDebug()) logDebug(\"Preparation of the Insert SQL statement : \"+sql);\n\t\n\t                data.insertStatement = data.db.prepareSQL(sql);\n\t                data.preparedStatements.put(data.realSchemaTable+\"insert\", data.insertStatement);\n\t            }\n\t            \n\t            // Prepare Update Statement\n\t        \t\n\t\t\t\tdata.updateStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"update\");\n\t            if(data.updateStatement==null)\n\t            {\n\t            \tString sql =getUpdateStatement(data.inputRowMeta);\n\t            \t\n\t            \tdata.updateStatement= data.db.prepareSQL(sql);\n\t            \tdata.preparedStatements.put(data.realSchemaTable+\"update\", data.updateStatement);\n\t                if(log.isDebug()) logDebug(\"Preparation of the Update SQL statement : \"+sql);\n\t            }\n\t\t\t\t\n\t\t\t\t// Prepare delete statement\n\t            data.deleteStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"delete\");\n\t\t        if(data.deleteStatement==null)\n\t\t        {\n\t\t        \tString sql =getDeleteStatement(data.inputRowMeta);\n\t\n\t        \t\tdata.deleteStatement= data.db.prepareSQL(sql);\n\t        \t\tdata.preparedStatements.put(data.realSchemaTable+\"delete\", data.deleteStatement);\n\t        \t\tif(log.isDebug()) logDebug(\"Preparation of the Delete SQL statement : \"+sql);\t\n\t\t        }\n\t\t\t}\n\t\t\t\n\t\t}// end if first\n\t\t\n\t\ttry\n\t\t{\n\t\t\tlookupValues(r); // add new values to the row in rowset[0].\n\t\t\tputRow(data.outputRowMeta, r);       // copy row to output rowset(s);\n\t\t\t\n\t\t\tif (checkFeedback(getLinesRead())) \n\t\t\t{\n\t\t\t\tif(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.LineNumber\")+getLinesRead()); //$NON-NLS-1$\n\t\t\t}\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tlogError(\"Because of an error, this step can't continue: \", e);\n\t\t\tsetErrors(1);\n\t\t\tstopAll();\n\t\t\tsetOutputDone();  // signal end to receiver(s)\n\t\t\treturn false;\n\t\t}\t\t\n\t\treturn true;\n\t}","id":56474,"modified_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\n\t{\n\t\tmeta=(SynchronizeAfterMergeMeta)smi;\n\t\tdata=(SynchronizeAfterMergeData)sdi;\n\n\t\tObject[] r=getRow();       // Get row from input rowset & set row busy!\n\t\tif (r==null)          // no more input to be expected...\n\t\t{\n\t\t\tsetOutputDone();\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (first)\n\t\t{\n\t\t\tfirst=false;\n\t\t\tdata.outputRowMeta = getInputRowMeta().clone();\n\t\t\tdata.inputRowMeta=data.outputRowMeta;\n\t        meta.getFields(data.outputRowMeta, getStepname(), null, null, this);\n\t       \n\t            \n\t\t\tif(meta.istablenameInField())\n\t\t\t{\n\t\t\t\t// Cache the position of the table name field\n\t            if (data.indexOfTableNameField<0)\n\t            {\n\t                data.indexOfTableNameField = data.inputRowMeta.indexOfValue(meta.gettablenameField());\n\t                if (data.indexOfTableNameField<0)\n\t                {\n\t                    String message = \"It was not possible to find table [\"+meta.gettablenameField()+\"] in the input fields.\";\n\t                    logError(message);\n\t                    throw new KettleStepException(message);\n\t                }\n\t            } \n\t\t\t}else\n\t\t\t{\n\t\t\t\tdata.realTableName = environmentSubstitute(meta.getTableName());\n\t\t\t    if (Const.isEmpty(data.realTableName))  throw new KettleStepException(\"The table name is not specified (or the input field is empty)\");\n\t\t\t\tdata.realSchemaTable = data.db.getDatabaseMeta().getQuotedSchemaTableCombination(data.realSchemaName, data.realTableName);\t\n\t\t\t}\n\n\t\t\t// Cache the position of the operation order field\n            if (data.indexOfOperationOrderField<0)\n            {\n                data.indexOfOperationOrderField = data.inputRowMeta.indexOfValue(meta.getOperationOrderField());\n                if (data.indexOfOperationOrderField<0)\n                {\n                    String message = \"It was not possible to find operation field [\"+meta.getOperationOrderField()+\"] in the input stream!\";\n                    logError(message);\n                    throw new KettleStepException(message);\n                }\n            } \n\n            data.insertValue=environmentSubstitute(meta.getOrderInsert());\n            data.updateValue=environmentSubstitute(meta.getOrderUpdate());\n            data.deleteValue=environmentSubstitute(meta.getOrderDelete());\n            \n            \n            data.insertRowMeta = new RowMeta();\n        \n\n\t\t\t// lookup the values!\n\t\t\tif (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.CheckingRow\")+r.toString()); //$NON-NLS-1$\n\t\t\t\n\t\t\tdata.keynrs  = new int[meta.getKeyStream().length];\n\t\t\tdata.keynrs2 = new int[meta.getKeyStream().length];\n\t\t\tfor (int i=0;i<meta.getKeyStream().length;i++)\n\t\t\t{\n\t\t\t   data.keynrs[i]=data.inputRowMeta.indexOfValue(meta.getKeyStream()[i]);\n\t\t\t\tif (data.keynrs[i]<0 &&  // couldn't find field!\n                    !\"IS NULL\".equalsIgnoreCase(meta.getKeyCondition()[i]) &&   // No field needed! //$NON-NLS-1$\n\t\t\t\t    !\"IS NOT NULL\".equalsIgnoreCase(meta.getKeyCondition()[i])  // No field needed! //$NON-NLS-1$\n                   )\n\t\t\t\t{\n\t\t\t\t\tthrow new KettleStepException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Exception.FieldRequired\",meta.getKeyStream()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}\n\t\t\t\tdata.keynrs2[i]=data.inputRowMeta.indexOfValue(meta.getKeyStream2()[i]);\n\t\t\t\tif (data.keynrs2[i]<0 &&  // couldn't find field!\n\t\t\t\t    \"BETWEEN\".equalsIgnoreCase(meta.getKeyCondition()[i])   // 2 fields needed! //$NON-NLS-1$\n\t\t\t\t   )\n\t\t\t\t{\n\t\t\t\t\tthrow new KettleStepException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Exception.FieldRequired\",meta.getKeyStream2()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.FieldHasDataNumbers\",meta.getKeyStream()[i])+data.keynrs[i]); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t}\n\t\t\t\n            // Insert the update fields: just names.  Type doesn't matter!\n            for (int i=0;i<meta.getUpdateLookup().length;i++) \n            {\n                ValueMetaInterface insValue = data.insertRowMeta.searchValueMeta( meta.getUpdateLookup()[i]); \n                if (insValue==null) // Don't add twice!\n                {\n                    // we already checked that this value exists so it's probably safe to ignore lookup failure...\n                    ValueMetaInterface insertValue = data.inputRowMeta.searchValueMeta( meta.getUpdateStream()[i] ).clone();\n                    insertValue.setName(meta.getUpdateLookup()[i]);\n                    data.insertRowMeta.addValueMeta( insertValue );\n                }\n                else\n                {\n                    throw new KettleStepException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Error.SameColumnInsertedTwice\",insValue.getName())); \n                 }\n            }\n            \n\t\t\t// Cache the position of the compare fields in Row row\n\t\t\t//\n\t\t\tdata.valuenrs = new int[meta.getUpdateLookup().length];\n\t\t\tfor (int i=0;i<meta.getUpdateLookup().length;i++)\n\t\t\t{\n\t\t\t\tdata.valuenrs[i]=data.inputRowMeta.indexOfValue(meta.getUpdateStream()[i]);\n\t\t\t\tif (data.valuenrs[i]<0)  // couldn't find field!\n\t\t\t\t{\n\t\t\t\t\tthrow new KettleStepException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Exception.FieldRequired\",meta.getUpdateStream()[i])); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t\t}\n\t\t\t\tif (log.isDebug()) logDebug(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.FieldHasDataNumbers\",meta.getUpdateStream()[i])+data.valuenrs[i]); //$NON-NLS-1$ //$NON-NLS-2$\n\t\t\t}\n\t\t\t\n\t\t\tif(!meta.istablenameInField())\n\t\t\t{\n\t\t\t\t// Prepare Lookup statement\n\t\t\t\tif(meta.isPerformLookup())\n\t\t\t\t{\n\t\t\t\t\tdata.lookupStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"lookup\");\n\t\t            if (data.lookupStatement==null)\n\t\t            {\n\t\t                String sql = getLookupStatement(data.inputRowMeta);\n\t\t                if(log.isDebug()) logDebug(\"Preparation of the lookup SQL statement : \"+sql);\n\t\t\n\t\t                data.lookupStatement = data.db.prepareSQL(sql);\n\t\t                data.preparedStatements.put(data.realSchemaTable+\"lookup\", data.lookupStatement);\n\t\t            }\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\t// Prepare Insert statement\n\t\t\t\tdata.insertStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"insert\");\n\t            if (data.insertStatement==null)\n\t            {\n\t                String sql = data.db.getInsertStatement(data.realSchemaName,data.realTableName, data.insertRowMeta);\n\t                \n\t                if(log.isDebug()) logDebug(\"Preparation of the Insert SQL statement : \"+sql);\n\t\n\t                data.insertStatement = data.db.prepareSQL(sql);\n\t                data.preparedStatements.put(data.realSchemaTable+\"insert\", data.insertStatement);\n\t            }\n\t            \n\t            // Prepare Update Statement\n\t        \t\n\t\t\t\tdata.updateStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"update\");\n\t            if(data.updateStatement==null)\n\t            {\n\t            \tString sql =getUpdateStatement(data.inputRowMeta);\n\t            \t\n\t            \tdata.updateStatement= data.db.prepareSQL(sql);\n\t            \tdata.preparedStatements.put(data.realSchemaTable+\"update\", data.updateStatement);\n\t                if(log.isDebug()) logDebug(\"Preparation of the Update SQL statement : \"+sql);\n\t            }\n\t\t\t\t\n\t\t\t\t// Prepare delete statement\n\t            data.deleteStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"delete\");\n\t\t        if(data.deleteStatement==null)\n\t\t        {\n\t\t        \tString sql =getDeleteStatement(data.inputRowMeta);\n\t\n\t        \t\tdata.deleteStatement= data.db.prepareSQL(sql);\n\t        \t\tdata.preparedStatements.put(data.realSchemaTable+\"delete\", data.deleteStatement);\n\t        \t\tif(log.isDebug()) logDebug(\"Preparation of the Delete SQL statement : \"+sql);\t\n\t\t        }\n\t\t\t}\n\t\t\t\n\t\t}// end if first\n\t\t\n\t\ttry\n\t\t{\n\t\t\tlookupValues(r); // add new values to the row in rowset[0].\n\t\t\tif (!data.batchMode) {\n\t\t\t  putRow(data.outputRowMeta, r);       // copy row to output rowset(s);\n\t\t\t}\n\t\t\t\n\t\t\tif (checkFeedback(getLinesRead())) \n\t\t\t{\n\t\t\t\tif(log.isDetailed()) logDetailed(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.LineNumber\")+getLinesRead()); //$NON-NLS-1$\n\t\t\t}\n\t\t}\n\t\tcatch(KettleException e)\n\t\t{\n\t\t\tlogError(\"Because of an error, this step can't continue: \", e);\n\t\t\tsetErrors(1);\n\t\t\tstopAll();\n\t\t\tsetOutputDone();  // signal end to receiver(s)\n\t\t\treturn false;\n\t\t}\t\t\n\t\treturn true;\n\t}","commit_id":"a3013b00fb0c5d9888185f777ef0f4d03d3c8fc1","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private synchronized void lookupValues(Object[] row) throws KettleException\n\t{\n\n\t\t// get operation for the current\n\t\t// do we insert, update or delete ?\n\t\tString operation=data.inputRowMeta.getString(row,data.indexOfOperationOrderField);\t\n\t\t\n\t\tboolean rowIsSafe = false;\n        boolean sendToErrorRow=false;\n        String errorMessage = null;\n        int[] updateCounts = null;\n        List<Exception> exceptionsList = null;\n        boolean batchProblem = false;\n        \n\t\tdata.lookupFailure=false;\n\t\tboolean performInsert=false;\n\t\tboolean performUpdate=false;\n\t\tboolean performDelete=false;\n        \n\t\ttry{\n\t\t\tif(operation==null) throw new KettleException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.OperationFieldEmpty\",meta.getOperationOrderField()));\n\t\t\t\n\t\t\tif(meta.istablenameInField())\t\n\t\t\t{\n\t\t\t\t// get dynamic table name\n\t\t\t\tdata.realTableName = data.inputRowMeta.getString(row,data.indexOfTableNameField);\t\n\t\t       if (Const.isEmpty(data.realTableName))  throw new KettleStepException(\"The name of the table is not specified!\");\n\t\t\t\tdata.realSchemaTable = data.db.getDatabaseMeta().getQuotedSchemaTableCombination(data.realSchemaName, data.realTableName);\n\t\t\t}\n\t\t\t\n\t\t\tincrementLinesInput();\n\t\t\t\n\t\t\tif(operation.equals(data.insertValue))\n\t\t\t{\n\t\t\t\t// directly insert data into table\n\t\t\t\t/* \n\t\t\t\t *  \n\t\t\t\t * INSERT ROW\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\tif(log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.InsertRow\",row.toString())); //$NON-NLS-1$\n\t\n\t\t\t\t// The values to insert are those in the update section\n\t            //\n\t            Object[] insertRowData = new Object[data.valuenrs.length];\n\t            for (int i=0;i<data.valuenrs.length;i++)\n\t            {\n\t            \tinsertRowData[i]=row[data.valuenrs[i]];\n\t            }\n\t            \n\t            if(meta.istablenameInField())\t\n\t            {\n\t\t            data.insertStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"insert\");\n\t\t            if (data.insertStatement==null)\n\t\t            {\n\t\t                String sql = data.db.getInsertStatement(data.realSchemaName,data.realTableName, data.insertRowMeta);\n\t\t                \n\t\t                if(log.isDebug()) logDebug(\"Preparation of the insert SQL statement: \"+sql);\n\t\t\n\t\t                data.insertStatement = data.db.prepareSQL(sql);\n\t\t                data.preparedStatements.put(data.realSchemaTable+\"insert\", data.insertStatement);\n\t\t            }\n\t            }\n\t            \n\t\t\t\t// For PG & GP, we add a savepoint before the row.\n\t\t\t\t// Then revert to the savepoint afterwards... (not a transaction, so hopefully still fast)\n\t\t\t\t//\n\t\t\t\tif (data.specialErrorHandling) {\n\t\t\t\t\tdata.savepoint = data.db.setSavepoint();\n\t\t\t\t}\n\t\t\t\t\n\t            // Set the values on the prepared statement...\n\t\t\t\tdata.db.setValues(data.insertRowMeta, insertRowData, data.insertStatement);\n\t\t\t\tdata.db.insertRow(data.insertStatement,data.batchMode);\n\t\t\t\tperformInsert=true;\n\t\t\t\tincrementLinesOutput();\n\t\t\t\tif (log.isRowLevel()) logRowlevel(\"Written row: \"+data.insertRowMeta.getString(insertRowData));\n\t\t\t\t\n\t\t\t}else\n\t\t\t{\t\n\t\t\t\n\t\t\t   Object[] lookupRow = new Object[data.keynrs.length];\n\t\t\t   int lookupIndex = 0;\n\t\t\t   for (int i=0;i<meta.getKeyStream().length;i++)\n\t\t\t\t{\n\t\t\t\t\t if (data.keynrs[i]>=0)\n\t\t\t         {\n\t\t\t\t\t\t lookupRow[lookupIndex] = row[ data.keynrs[i] ];\n\t\t\t             lookupIndex++;\n\t\t\t         }\n\t\t            if (data.keynrs2[i]>=0)\n\t\t            {\n\t\t            \tlookupRow[lookupIndex] = row[ data.keynrs2[i] ];\n\t\t                lookupIndex++;\n\t\t            }\n\t\t\t\t}\n\t\t\t\tboolean updateorDelete = false;\n\t\t\t\tif(meta.isPerformLookup())\n\t\t\t\t{\n\t\t\t\t\t \n\t\t\t\t\t // LOOKUP\n\t\t\t\t\t \n\t\t            if(meta.istablenameInField())\t\n\t\t\t        {\n\t\t\t\t\t\t// Prepare Lookup statement\n\t\t\t\t\t\tdata.lookupStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"lookup\");\n\t\t\t            if (data.lookupStatement==null)\n\t\t\t            {\n\t\t\t                String sql = getLookupStatement(data.inputRowMeta);\n\t\t\t                \n\t\t\t                if(log.isDebug()) logDebug(\"Preparating SQL for insert: \"+sql);\n\t\t\t\n\t\t\t                data.lookupStatement = data.db.prepareSQL(sql);\n\t\t\t                data.preparedStatements.put(data.realSchemaTable+\"lookup\", data.lookupStatement);\n\t\t\t            }\n\t\t\t        }\n\t\n\t\n\t\t    \t\tdata.db.setValues(data.lookupParameterRowMeta, lookupRow, data.lookupStatement);\n\t\t    \t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.ValuesSetForLookup\",data.lookupParameterRowMeta.getString(lookupRow))); //$NON-NLS-1$\n\t\t    \t\tObject[] add = data.db.getLookup(data.lookupStatement);\n\t\t    \t\t\n\t\t    \t\t\n\t\t\t        if (add==null) \n\t\t\t\t\t{\n\t\t\t\t\t\t// nothing was found:\n\t\n\t                    if (data.stringErrorKeyNotFound==null)\n\t                    {\n\t                        data.stringErrorKeyNotFound=BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Exception.KeyCouldNotFound\")+data.lookupParameterRowMeta.getString(lookupRow);\n\t                        data.stringFieldnames=\"\";\n\t                        for (int i=0;i<data.lookupParameterRowMeta.size();i++) \n\t                        {\n\t                            if (i>0) data.stringFieldnames+=\", \";\n\t                            data.stringFieldnames+=data.lookupParameterRowMeta.getValueMeta(i).getName();\n\t                        }\n\t                    }\n\t                    data.lookupFailure=true;\n\t                    throw new KettleDatabaseException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Exception.KeyCouldNotFound\",data.lookupParameterRowMeta.getString(lookupRow)));\n\t\t\t\t\t}else\n\t\t\t\t\t{\n\t\t\t\t\t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.FoundRowForUpdate\",data.insertRowMeta.getString(row))); //$NON-NLS-1$\n\t\t\t\t\t\t\n\t\t                \n\t\t\t\t\t\tfor (int i=0;i<data.valuenrs.length;i++)\n\t\t                {\n\t\t            \t\tif ( meta.getUpdate()[i].booleanValue() ) \n\t\t            \t\t{\n\t\t                        ValueMetaInterface valueMeta = data.inputRowMeta.getValueMeta( data.valuenrs[i] );\n\t\t                        ValueMetaInterface retMeta = data.db.getReturnRowMeta().getValueMeta(i);\n\t\t                        \n\t\t                        Object rowvalue = row[ data.valuenrs[i] ];\n\t\t                        Object retvalue = add[ i ];\n\t\t                    \n\t\t                        if ( valueMeta.compare(rowvalue, retMeta, retvalue)!=0 )\n\t\t                        {\n\t\t                        \tupdateorDelete=true;\n\t\t                        }\n\t\t            \t\t}\n\t\t                }\n\t\t\t\t\t}\n\t\t\t\t} // end if perform lookup\n\n\t\t\t\tif(operation.equals(data.updateValue))\n\t\t\t\t{\n\t\t\t\t\tif(!meta.isPerformLookup() || updateorDelete)\n\t\t\t\t\t{\n\t\t\t\t\t\t// UPDATE :\n\t\t\t\t\t\t\n\t\t\t\t\t    if(meta.istablenameInField())\t\n\t\t\t\t\t    {\n\t\t\t\t\t\t\tdata.updateStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"update\");\n\t\t\t\t            if(data.updateStatement==null)\n\t\t\t\t            {\n\t\t\t\t            \tString sql =getUpdateStatement(data.inputRowMeta);\n\t\t\t\t            \t\n\t\t\t\t            \tdata.updateStatement= data.db.prepareSQL(sql);\n\t\t\t\t            \tdata.preparedStatements.put(data.realSchemaTable+\"update\", data.updateStatement);\n\t\t\t\t                if(log.isDebug()) logDebug(\"Preparation of the Update SQL statement : \"+sql);\n\t\t\t\t            }\n\t\t\t\t\t    }\n\t\t\t            \n\t\t                // Create the update row...\n\t\t                Object[] updateRow = new Object[data.updateParameterRowMeta.size()];\n\t\t                int j = 0;\n\t\t                for (int i=0;i<data.valuenrs.length;i++)\n\t\t                {\n\t\t            \t\tif( meta.getUpdate()[i].booleanValue() ) \n\t\t            \t\t{\n\t\t            \t\t\tupdateRow[j] = row[ data.valuenrs[i] ]; // the setters\n\t\t                        j++;\n\t\t            \t\t}\n\t\t                }\n\n\t\t                // add the where clause parameters, they are exactly the same for lookup and update\n\t                    for (int i=0;i<lookupRow.length;i++)\n\t                    {\n\t                        updateRow[j+i] = lookupRow[i];\n\t                    }\n\n\t\t                // For PG & GP, we add a savepoint before the row.\n\t\t    \t\t\t// Then revert to the savepoint afterwards... (not a transaction, so hopefully still fast)\n\t\t    \t\t\t//\n\t\t    \t\t\tif (data.specialErrorHandling) {\n\t\t    \t\t\t\tdata.savepoint = data.db.setSavepoint();\n\t\t    \t\t\t}\n\t\t                data.db.setValues(data.updateParameterRowMeta, updateRow, data.updateStatement);\n\t\t                if (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.SetValuesForUpdate\",data.updateParameterRowMeta.getString(updateRow),data.inputRowMeta.getString(row)));\n\t\t                data.db.insertRow(data.updateStatement,data.batchMode);\n\t\t                performUpdate=true;\n\t\t                incrementLinesUpdated();\n\t\t\t\t\t    \n\t\t\t\t\t\t\n\t\t\t\t\t} // end if operation update\n\t\t\t\t\telse\n\t\t\t\t\t\tincrementLinesSkipped();\n\t\t\t\t}\n\t\t\t\telse if(operation.equals(data.deleteValue))\n\t\t\t\t{\n\t\t\t\t\t// DELETE\n\t\t\t\t\t\n\t\t\t\t\tif(meta.istablenameInField())\n\t\t\t\t\t{\n\t\t\t\t        data.deleteStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"delete\");\n\t\t\t\t        \n\t\t\t\t        if(data.deleteStatement==null)\n\t\t\t\t        {\n\t\t\t\t        \tString sql =getDeleteStatement(data.inputRowMeta);\n\t\t\t        \t\tdata.deleteStatement= data.db.prepareSQL(sql);\n\t\t\t        \t\tdata.preparedStatements.put(data.realSchemaTable+\"delete\", data.deleteStatement);\n\t\t\t        \t\tif(log.isDebug()) logDebug(\"Preparation of the Delete SQL statement : \"+sql);\n\t\t\t\t        }\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t Object[] deleteRow = new Object[data.deleteParameterRowMeta.size()];\n\t\t\t\t     int deleteIndex = 0;\n\t\t\t\t        \n\t\t\t         for (int i=0;i<meta.getKeyStream().length;i++)\n\t\t\t         {\n\t\t\t            if (data.keynrs[i]>=0)\n\t\t\t            {\n\t\t\t                deleteRow[deleteIndex] = row[ data.keynrs[i] ];\n\t\t\t                deleteIndex++;\n\t\t\t            }\n\t\t\t            if (data.keynrs2[i]>=0)\n\t\t\t            {\n\t\t\t                deleteRow[deleteIndex] = row[ data.keynrs2[i] ];\n\t\t\t                deleteIndex++;\n\t\t\t            }\n\t\t\t         }\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// For PG & GP, we add a savepoint before the row.\n\t\t\t\t\t// Then revert to the savepoint afterwards... (not a transaction, so hopefully still fast)\n\t\t\t\t\t//\n\t\t\t\t\tif (data.specialErrorHandling) {\n\t\t\t\t\t\tdata.savepoint = data.db.setSavepoint();\n\t\t\t\t\t}\n\t\t\t        data.db.setValues(data.deleteParameterRowMeta, deleteRow, data.deleteStatement);\n\t\t\t        if (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.SetValuesForDelete\",data.deleteParameterRowMeta.getString(deleteRow),data.inputRowMeta.getString(row))); //$NON-NLS-1$\n\t\t\t\t\tdata.db.insertRow(data.deleteStatement,data.batchMode);\n\t\t\t\t\tperformDelete=true;\n\t\t\t\t\tincrementLinesUpdated();\n\t\t\t\t} // endif operation delete\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tincrementLinesSkipped();\n\t\t\t\t}\n\t\t\t} // endif operation insert\n\t\t\t\n\t\t\tif(performInsert || performUpdate || performDelete)\n\t\t\t{\n\t\t\t\t// Get a commit counter per prepared statement to keep track of separate tables, etc. \n\t\t\t    //\n\t\t\t\tString tableName=data.realTableName;\n\t\t\t\tif(performInsert) tableName+=\"insert\";\n\t\t\t\telse if(performUpdate) tableName+=\"update\";\n\t\t\t\tif(performDelete) tableName+=\"delete\";\n\t\t\t\t\n\t\t\t\tInteger commitCounter = data.commitCounterMap.get(tableName);\n\t\t\t    if (commitCounter==null) commitCounter=Integer.valueOf(0);\n\t\t\t    data.commitCounterMap.put(tableName, Integer.valueOf(commitCounter.intValue()+1));\n\t\t\n\t\t\t    // Release the savepoint if needed\n\t\t\t    //\n\t\t\t\tif (data.specialErrorHandling) {\n\t\t\t\t\tdata.db.releaseSavepoint(data.savepoint);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Perform a commit if needed\n\t\t\t\t//\n\t\t\t\tif (commitCounter>0 && (commitCounter%data.commitSize)==0) \n\t\t\t\t{\n\t\t\t\t\tif (data.batchMode)\n\t\t\t\t\t{\n\t\t\t\t\t\ttry {\n\t\t\t                if(performInsert) \n\t\t\t                {\n\t\t\t                \tdata.insertStatement.executeBatch();\n\t\t\t\t\t\t\t\tdata.db.commit();\n\t\t\t\t\t\t\t\tdata.insertStatement.clearBatch();\n\t\t\t                }\n\t\t\t                else if(performUpdate) \n\t\t\t                {\n\t\t\t                \tdata.updateStatement.executeBatch();\n\t\t\t\t\t\t\t\tdata.db.commit();\n\t\t\t\t\t\t\t\tdata.updateStatement.clearBatch();\n\t\t\t                }\n\t\t\t                else if(performDelete)\n\t\t\t                {\n\t\t\t                \tdata.deleteStatement.executeBatch();\n\t\t\t\t\t\t\t\tdata.db.commit();\n\t\t\t\t\t\t\t\tdata.deleteStatement.clearBatch();\n\t\t\t                }  \n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(BatchUpdateException ex) {\n\t\t\t\t\t\t\tKettleDatabaseBatchException kdbe = new KettleDatabaseBatchException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Error.UpdatingBatch\"), ex);\n\t\t\t\t\t\t    kdbe.setUpdateCounts(ex.getUpdateCounts());\n\t\t\t\t            List<Exception> exceptions = new ArrayList<Exception>();\n\t\t\t\t            \n\t\t\t\t            // 'seed' the loop with the root exception\n\t\t\t\t            SQLException nextException = ex;\n\t\t\t\t            do \n\t\t\t\t            {\n\t\t\t\t                exceptions.add(nextException);\n\t\t\t\t                // while current exception has next exception, add to list\n\t\t\t\t            } \n\t\t\t\t            while ((nextException = nextException.getNextException())!=null);            \n\t\t\t\t            kdbe.setExceptionsList(exceptions);\n\t\t\t\t\t\t    throw kdbe;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(SQLException ex) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthrow new KettleDatabaseException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Error.InsertingRow\"), ex);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(Exception ex)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthrow new KettleDatabaseException(\"Unexpected error inserting row\", ex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t    //  insertRow normal commit\n\t\t                data.db.commit();\n\t\t\t\t\t}\n\t\t\t\t\t// Clear the batch/commit counter...\n\t\t\t\t\t//\n\t\t\t\t\tdata.commitCounterMap.put(tableName, Integer.valueOf(0));\n\t\t            rowIsSafe=true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\trowIsSafe=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t\tcatch(KettleDatabaseBatchException be)\n\t\t{\n            errorMessage = be.toString();\n            batchProblem = true;\n            sendToErrorRow = true;\n            updateCounts = be.getUpdateCounts();\n            exceptionsList = be.getExceptionsList();\n            \n        \tif(data.insertStatement!=null) data.db.clearBatch(data.insertStatement);\n\t\t    if(data.updateStatement!=null) data.db.clearBatch(data.updateStatement);\n\t\t    if(data.deleteStatement!=null) data.db.clearBatch(data.deleteStatement);\n\t\t    \n            if (getStepMeta().isDoingErrorHandling())\n            {\n                data.db.commit(true);\n            }\n            else\n            {\n    \t\t    data.db.rollback();\n    \t\t    StringBuffer msg = new StringBuffer(\"Error batch inserting rows into table [\"+data.realTableName+\"].\");\n    \t\t    msg.append(Const.CR);\n    \t\t    msg.append(\"Errors encountered (first 10):\").append(Const.CR);\n    \t\t    for (int x = 0 ; x < be.getExceptionsList().size() && x < 10 ; x++)\n    \t\t    {\n    \t\t    \tException exception = be.getExceptionsList().get(x);\n    \t\t    \tif (exception.getMessage()!=null) msg.append(exception.getMessage()).append(Const.CR);\n    \t\t    }\n    \t\t    throw new KettleException(msg.toString(), be);\n            }\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n            if (getStepMeta().isDoingErrorHandling())\n            {\n    \t\t\tif (log.isRowLevel()) {\n    \t\t\t\tlogRowlevel(\"Written row to error handling : \"+getInputRowMeta().getString(row));\n    \t\t\t}\n    \t\t\t\n            \tif (data.specialErrorHandling) {\n            \t\tdata.db.rollback(data.savepoint);\n            \t\tdata.db.releaseSavepoint(data.savepoint);\n            \t}\n                sendToErrorRow = true;\n                errorMessage = dbe.toString();\n            }\n            else\n            {\n    \t\t    setErrors(getErrors()+1);\n    \t\t    data.db.rollback();\n    \t\t    throw new KettleException(\"Error inserting row into table [\"+data.realTableName+\"] with values: \"+data.inputRowMeta.getString(row), dbe);\n            }\n\t\t}\n\t\t\n        if (data.batchMode)\n        {\n            if (sendToErrorRow) \n            {\n                if (batchProblem)\n                {\n                    data.batchBuffer.add(row);\n                    processBatchException(errorMessage, updateCounts, exceptionsList);\n                }\n                else\n                {\n                    // Simply add this row to the error row\n                    putError(data.inputRowMeta, row, 1L, errorMessage, null, \"SUYNC002\");\n                }\n            }\n            else\n            {\n                data.batchBuffer.add(row);\n                \n                if (rowIsSafe) // A commit was done and the rows are all safe (no error)\n                {\n                    for (int i=0;i<data.batchBuffer.size();i++)\n                    {\n                        Object[] rowb = (Object[]) data.batchBuffer.get(i);\n                        putRow(data.outputRowMeta, rowb);\n                        incrementLinesOutput();\n                    }\n                    // Clear the buffer\n                    data.batchBuffer.clear();\n                }\n            }\n        }\n        else\n        {\n            if (sendToErrorRow)\n            {\n                if(data.lookupFailure)\n                \tputError(data.inputRowMeta, row, 1, data.stringErrorKeyNotFound,  data.stringFieldnames, \"SUYNC001\");\n                else\n                \tputError(data.inputRowMeta, row, 1, errorMessage, null, \"SUYNC001\");\n            }\t\n        }\n\t}","id":56475,"modified_method":"private synchronized void lookupValues(Object[] row) throws KettleException\n\t{\n\n\t\t// get operation for the current\n\t\t// do we insert, update or delete ?\n\t\tString operation=data.inputRowMeta.getString(row,data.indexOfOperationOrderField);\t\n\t\t\n\t\tboolean rowIsSafe = false;\n        boolean sendToErrorRow=false;\n        String errorMessage = null;\n        int[] updateCounts = null;\n        List<Exception> exceptionsList = null;\n        boolean batchProblem = false;\n        \n\t\tdata.lookupFailure=false;\n\t\tboolean performInsert=false;\n\t\tboolean performUpdate=false;\n\t\tboolean performDelete=false;\n\t\tboolean lineSkipped=false;\n        \n\t\ttry{\n\t\t\tif(operation==null) throw new KettleException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.OperationFieldEmpty\",meta.getOperationOrderField()));\n\t\t\t\n\t\t\tif(meta.istablenameInField())\t\n\t\t\t{\n\t\t\t\t// get dynamic table name\n\t\t\t\tdata.realTableName = data.inputRowMeta.getString(row,data.indexOfTableNameField);\t\n\t\t       if (Const.isEmpty(data.realTableName))  throw new KettleStepException(\"The name of the table is not specified!\");\n\t\t\t\tdata.realSchemaTable = data.db.getDatabaseMeta().getQuotedSchemaTableCombination(data.realSchemaName, data.realTableName);\n\t\t\t}\n\t\t\t\n\t\t\tif(operation.equals(data.insertValue))\n\t\t\t{\n\t\t\t\t// directly insert data into table\n\t\t\t\t/* \n\t\t\t\t *  \n\t\t\t\t * INSERT ROW\n\t\t\t\t *\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\tif(log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.InsertRow\",row.toString())); //$NON-NLS-1$\n\t\n\t\t\t\t// The values to insert are those in the update section\n\t            //\n\t            Object[] insertRowData = new Object[data.valuenrs.length];\n\t            for (int i=0;i<data.valuenrs.length;i++)\n\t            {\n\t            \tinsertRowData[i]=row[data.valuenrs[i]];\n\t            }\n\t            \n\t            if(meta.istablenameInField())\t\n\t            {\n\t\t            data.insertStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"insert\");\n\t\t            if (data.insertStatement==null)\n\t\t            {\n\t\t                String sql = data.db.getInsertStatement(data.realSchemaName,data.realTableName, data.insertRowMeta);\n\t\t                \n\t\t                if(log.isDebug()) logDebug(\"Preparation of the insert SQL statement: \"+sql);\n\t\t\n\t\t                data.insertStatement = data.db.prepareSQL(sql);\n\t\t                data.preparedStatements.put(data.realSchemaTable+\"insert\", data.insertStatement);\n\t\t            }\n\t            }\n\t            \n\t\t\t\t// For PG & GP, we add a savepoint before the row.\n\t\t\t\t// Then revert to the savepoint afterwards... (not a transaction, so hopefully still fast)\n\t\t\t\t//\n\t\t\t\tif (data.specialErrorHandling) {\n\t\t\t\t\tdata.savepoint = data.db.setSavepoint();\n\t\t\t\t}\n\t\t\t\t\n\t            // Set the values on the prepared statement...\n\t\t\t\tdata.db.setValues(data.insertRowMeta, insertRowData, data.insertStatement);\n\t\t\t\tdata.db.insertRow(data.insertStatement,data.batchMode);\n\t\t\t\tperformInsert=true;\n\t\t\t\tincrementLinesOutput();\n\t\t\t\tif (log.isRowLevel()) logRowlevel(\"Written row: \"+data.insertRowMeta.getString(insertRowData));\n\t\t\t\t\n\t\t\t}else\n\t\t\t{\t\n\t\t\t\n\t\t\t   Object[] lookupRow = new Object[data.keynrs.length];\n\t\t\t   int lookupIndex = 0;\n\t\t\t   for (int i=0;i<meta.getKeyStream().length;i++)\n\t\t\t\t{\n\t\t\t\t\t if (data.keynrs[i]>=0)\n\t\t\t         {\n\t\t\t\t\t\t lookupRow[lookupIndex] = row[ data.keynrs[i] ];\n\t\t\t             lookupIndex++;\n\t\t\t         }\n\t\t            if (data.keynrs2[i]>=0)\n\t\t            {\n\t\t            \tlookupRow[lookupIndex] = row[ data.keynrs2[i] ];\n\t\t                lookupIndex++;\n\t\t            }\n\t\t\t\t}\n\t\t\t\tboolean updateorDelete = false;\n\t\t\t\tif(meta.isPerformLookup())\n\t\t\t\t{\n\t\t\t\t\t \n\t\t\t\t\t // LOOKUP\n\t\t\t\t\t \n\t\t            if(meta.istablenameInField())\t\n\t\t\t        {\n\t\t\t\t\t\t// Prepare Lookup statement\n\t\t\t\t\t\tdata.lookupStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"lookup\");\n\t\t\t            if (data.lookupStatement==null)\n\t\t\t            {\n\t\t\t                String sql = getLookupStatement(data.inputRowMeta);\n\t\t\t                \n\t\t\t                if(log.isDebug()) logDebug(\"Preparating SQL for insert: \"+sql);\n\t\t\t\n\t\t\t                data.lookupStatement = data.db.prepareSQL(sql);\n\t\t\t                data.preparedStatements.put(data.realSchemaTable+\"lookup\", data.lookupStatement);\n\t\t\t            }\n\t\t\t        }\n\t\n\t\n\t\t    \t\tdata.db.setValues(data.lookupParameterRowMeta, lookupRow, data.lookupStatement);\n\t\t    \t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.ValuesSetForLookup\",data.lookupParameterRowMeta.getString(lookupRow))); //$NON-NLS-1$\n\t\t    \t\tObject[] add = data.db.getLookup(data.lookupStatement);\n\t\t            incrementLinesInput();\n\t\t    \t\t\n\t\t\t        if (add==null) \n\t\t\t\t\t{\n\t\t\t\t\t\t// nothing was found:\n\t\n\t                    if (data.stringErrorKeyNotFound==null)\n\t                    {\n\t                        data.stringErrorKeyNotFound=BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Exception.KeyCouldNotFound\")+data.lookupParameterRowMeta.getString(lookupRow);\n\t                        data.stringFieldnames=\"\";\n\t                        for (int i=0;i<data.lookupParameterRowMeta.size();i++) \n\t                        {\n\t                            if (i>0) data.stringFieldnames+=\", \";\n\t                            data.stringFieldnames+=data.lookupParameterRowMeta.getValueMeta(i).getName();\n\t                        }\n\t                    }\n\t                    data.lookupFailure=true;\n\t                    throw new KettleDatabaseException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Exception.KeyCouldNotFound\",data.lookupParameterRowMeta.getString(lookupRow)));\n\t\t\t\t\t}else\n\t\t\t\t\t{\n\t\t\t\t\t\tif (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.FoundRowForUpdate\",data.insertRowMeta.getString(row))); //$NON-NLS-1$\n\t\t\t\t\t\t\n\t\t                \n\t\t\t\t\t\tfor (int i=0;i<data.valuenrs.length;i++)\n\t\t                {\n\t\t            \t\tif ( meta.getUpdate()[i].booleanValue() ) \n\t\t            \t\t{\n\t\t                        ValueMetaInterface valueMeta = data.inputRowMeta.getValueMeta( data.valuenrs[i] );\n\t\t                        ValueMetaInterface retMeta = data.db.getReturnRowMeta().getValueMeta(i);\n\t\t                        \n\t\t                        Object rowvalue = row[ data.valuenrs[i] ];\n\t\t                        Object retvalue = add[ i ];\n\t\t                    \n\t\t                        if ( valueMeta.compare(rowvalue, retMeta, retvalue)!=0 )\n\t\t                        {\n\t\t                        \tupdateorDelete=true;\n\t\t                        }\n\t\t            \t\t}\n\t\t                }\n\t\t\t\t\t}\n\t\t\t\t} // end if perform lookup\n\n\t\t\t\tif(operation.equals(data.updateValue))\n\t\t\t\t{\n\t\t\t\t\tif(!meta.isPerformLookup() || updateorDelete)\n\t\t\t\t\t{\n\t\t\t\t\t\t// UPDATE :\n\t\t\t\t\t\t\n\t\t\t\t\t    if(meta.istablenameInField())\t\n\t\t\t\t\t    {\n\t\t\t\t\t\t\tdata.updateStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"update\");\n\t\t\t\t            if(data.updateStatement==null)\n\t\t\t\t            {\n\t\t\t\t            \tString sql =getUpdateStatement(data.inputRowMeta);\n\t\t\t\t            \t\n\t\t\t\t            \tdata.updateStatement= data.db.prepareSQL(sql);\n\t\t\t\t            \tdata.preparedStatements.put(data.realSchemaTable+\"update\", data.updateStatement);\n\t\t\t\t                if(log.isDebug()) logDebug(\"Preparation of the Update SQL statement : \"+sql);\n\t\t\t\t            }\n\t\t\t\t\t    }\n\t\t\t            \n\t\t                // Create the update row...\n\t\t                Object[] updateRow = new Object[data.updateParameterRowMeta.size()];\n\t\t                int j = 0;\n\t\t                for (int i=0;i<data.valuenrs.length;i++)\n\t\t                {\n\t\t            \t\tif( meta.getUpdate()[i].booleanValue() ) \n\t\t            \t\t{\n\t\t            \t\t\tupdateRow[j] = row[ data.valuenrs[i] ]; // the setters\n\t\t                        j++;\n\t\t            \t\t}\n\t\t                }\n\n\t\t                // add the where clause parameters, they are exactly the same for lookup and update\n\t                    for (int i=0;i<lookupRow.length;i++)\n\t                    {\n\t                        updateRow[j+i] = lookupRow[i];\n\t                    }\n\n\t\t                // For PG & GP, we add a savepoint before the row.\n\t\t    \t\t\t// Then revert to the savepoint afterwards... (not a transaction, so hopefully still fast)\n\t\t    \t\t\t//\n\t\t    \t\t\tif (data.specialErrorHandling) {\n\t\t    \t\t\t\tdata.savepoint = data.db.setSavepoint();\n\t\t    \t\t\t}\n\t\t                data.db.setValues(data.updateParameterRowMeta, updateRow, data.updateStatement);\n\t\t                if (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.SetValuesForUpdate\",data.updateParameterRowMeta.getString(updateRow),data.inputRowMeta.getString(row)));\n\t\t                data.db.insertRow(data.updateStatement,data.batchMode);\n\t\t                performUpdate=true;\n\t\t                incrementLinesUpdated();\n\t\t\t\t\t    \n\t\t\t\t\t\t\n\t\t\t\t\t} // end if operation update\n\t\t\t\t\telse {\n\t\t\t\t\t\tincrementLinesSkipped();\n\t\t\t\t\t\tlineSkipped=true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(operation.equals(data.deleteValue))\n\t\t\t\t{\n\t\t\t\t\t// DELETE\n\t\t\t\t\t\n\t\t\t\t\tif(meta.istablenameInField())\n\t\t\t\t\t{\n\t\t\t\t        data.deleteStatement = (PreparedStatement) data.preparedStatements.get(data.realSchemaTable+\"delete\");\n\t\t\t\t        \n\t\t\t\t        if(data.deleteStatement==null)\n\t\t\t\t        {\n\t\t\t\t        \tString sql =getDeleteStatement(data.inputRowMeta);\n\t\t\t        \t\tdata.deleteStatement= data.db.prepareSQL(sql);\n\t\t\t        \t\tdata.preparedStatements.put(data.realSchemaTable+\"delete\", data.deleteStatement);\n\t\t\t        \t\tif(log.isDebug()) logDebug(\"Preparation of the Delete SQL statement : \"+sql);\n\t\t\t\t        }\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t Object[] deleteRow = new Object[data.deleteParameterRowMeta.size()];\n\t\t\t\t     int deleteIndex = 0;\n\t\t\t\t        \n\t\t\t         for (int i=0;i<meta.getKeyStream().length;i++)\n\t\t\t         {\n\t\t\t            if (data.keynrs[i]>=0)\n\t\t\t            {\n\t\t\t                deleteRow[deleteIndex] = row[ data.keynrs[i] ];\n\t\t\t                deleteIndex++;\n\t\t\t            }\n\t\t\t            if (data.keynrs2[i]>=0)\n\t\t\t            {\n\t\t\t                deleteRow[deleteIndex] = row[ data.keynrs2[i] ];\n\t\t\t                deleteIndex++;\n\t\t\t            }\n\t\t\t         }\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// For PG & GP, we add a savepoint before the row.\n\t\t\t\t\t// Then revert to the savepoint afterwards... (not a transaction, so hopefully still fast)\n\t\t\t\t\t//\n\t\t\t\t\tif (data.specialErrorHandling) {\n\t\t\t\t\t\tdata.savepoint = data.db.setSavepoint();\n\t\t\t\t\t}\n\t\t\t        data.db.setValues(data.deleteParameterRowMeta, deleteRow, data.deleteStatement);\n\t\t\t        if (log.isRowLevel()) logRowlevel(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Log.SetValuesForDelete\",data.deleteParameterRowMeta.getString(deleteRow),data.inputRowMeta.getString(row))); //$NON-NLS-1$\n\t\t\t\t\tdata.db.insertRow(data.deleteStatement,data.batchMode);\n\t\t\t\t\tperformDelete=true;\n\t\t\t\t\tincrementLinesUpdated();\n\t\t\t\t} // endif operation delete\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tincrementLinesSkipped();\n\t\t\t\t\tlineSkipped=true;\n\t\t\t\t}\n\t\t\t} // endif operation insert\n\t\t\t\n\t\t\t// If we skip a line we need to empty the buffer and skip the line in question.\n\t\t\t// The skipped line is never added to the buffer!\n\t\t\t//\n\t\t\tif(performInsert || performUpdate || performDelete || (data.batchBuffer.size()>0 && lineSkipped))\n\t\t\t{\n\t\t\t\t// Get a commit counter per prepared statement to keep track of separate tables, etc. \n\t\t\t    //\n\t\t\t\tString tableName=data.realTableName;\n\t\t\t\tif(performInsert) tableName+=\"insert\";\n\t\t\t\telse if(performUpdate) tableName+=\"update\";\n\t\t\t\tif(performDelete) tableName+=\"delete\";\n\t\t\t\t\n\t\t\t\tInteger commitCounter = data.commitCounterMap.get(tableName);\n\t\t\t    if (commitCounter==null) commitCounter=Integer.valueOf(0);\n\t\t\t    data.commitCounterMap.put(tableName, Integer.valueOf(commitCounter.intValue()+1));\n\t\t\n\t\t\t    // Release the savepoint if needed\n\t\t\t    //\n\t\t\t\tif (data.specialErrorHandling) {\n\t\t\t\t\tdata.db.releaseSavepoint(data.savepoint);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Perform a commit if needed\n\t\t\t\t//\n\t\t\t\tif (commitCounter>0 && (commitCounter%data.commitSize)==0) \n\t\t\t\t{\n\t\t\t\t\tif (data.batchMode)\n\t\t\t\t\t{\n\t\t\t\t\t\ttry {\n\t\t\t                if(performInsert) \n\t\t\t                {\n\t\t\t                \tdata.insertStatement.executeBatch();\n\t\t\t\t\t\t\t\tdata.db.commit();\n\t\t\t\t\t\t\t\tdata.insertStatement.clearBatch();\n\t\t\t                }\n\t\t\t                else if(performUpdate) \n\t\t\t                {\n\t\t\t                \tdata.updateStatement.executeBatch();\n\t\t\t\t\t\t\t\tdata.db.commit();\n\t\t\t\t\t\t\t\tdata.updateStatement.clearBatch();\n\t\t\t                }\n\t\t\t                else if(performDelete)\n\t\t\t                {\n\t\t\t                \tdata.deleteStatement.executeBatch();\n\t\t\t\t\t\t\t\tdata.db.commit();\n\t\t\t\t\t\t\t\tdata.deleteStatement.clearBatch();\n\t\t\t                }  \n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(BatchUpdateException ex) {\n\t\t\t\t\t\t\tKettleDatabaseBatchException kdbe = new KettleDatabaseBatchException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Error.UpdatingBatch\"), ex);\n\t\t\t\t\t\t    kdbe.setUpdateCounts(ex.getUpdateCounts());\n\t\t\t\t            List<Exception> exceptions = new ArrayList<Exception>();\n\t\t\t\t            \n\t\t\t\t            // 'seed' the loop with the root exception\n\t\t\t\t            SQLException nextException = ex;\n\t\t\t\t            do \n\t\t\t\t            {\n\t\t\t\t                exceptions.add(nextException);\n\t\t\t\t                // while current exception has next exception, add to list\n\t\t\t\t            } \n\t\t\t\t            while ((nextException = nextException.getNextException())!=null);            \n\t\t\t\t            kdbe.setExceptionsList(exceptions);\n\t\t\t\t\t\t    throw kdbe;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(SQLException ex) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthrow new KettleDatabaseException(BaseMessages.getString(PKG, \"SynchronizeAfterMerge.Error.InsertingRow\"), ex);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(Exception ex)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthrow new KettleDatabaseException(\"Unexpected error inserting row\", ex);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t    //  insertRow normal commit\n\t\t                data.db.commit();\n\t\t\t\t\t}\n\t\t\t\t\t// Clear the batch/commit counter...\n\t\t\t\t\t//\n\t\t\t\t\tdata.commitCounterMap.put(tableName, Integer.valueOf(0));\n\t\t            rowIsSafe=true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\trowIsSafe=false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\t\n\t\tcatch(KettleDatabaseBatchException be)\n\t\t{\n            errorMessage = be.toString();\n            batchProblem = true;\n            sendToErrorRow = true;\n            updateCounts = be.getUpdateCounts();\n            exceptionsList = be.getExceptionsList();\n            \n        \tif(data.insertStatement!=null) data.db.clearBatch(data.insertStatement);\n\t\t    if(data.updateStatement!=null) data.db.clearBatch(data.updateStatement);\n\t\t    if(data.deleteStatement!=null) data.db.clearBatch(data.deleteStatement);\n\t\t    \n            if (getStepMeta().isDoingErrorHandling())\n            {\n                data.db.commit(true);\n            }\n            else\n            {\n    \t\t    data.db.rollback();\n    \t\t    StringBuffer msg = new StringBuffer(\"Error batch inserting rows into table [\"+data.realTableName+\"].\");\n    \t\t    msg.append(Const.CR);\n    \t\t    msg.append(\"Errors encountered (first 10):\").append(Const.CR);\n    \t\t    for (int x = 0 ; x < be.getExceptionsList().size() && x < 10 ; x++)\n    \t\t    {\n    \t\t    \tException exception = be.getExceptionsList().get(x);\n    \t\t    \tif (exception.getMessage()!=null) msg.append(exception.getMessage()).append(Const.CR);\n    \t\t    }\n    \t\t    throw new KettleException(msg.toString(), be);\n            }\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n            if (getStepMeta().isDoingErrorHandling())\n            {\n    \t\t\tif (log.isRowLevel()) {\n    \t\t\t\tlogRowlevel(\"Written row to error handling : \"+getInputRowMeta().getString(row));\n    \t\t\t}\n    \t\t\t\n            \tif (data.specialErrorHandling) {\n            \t\tdata.db.rollback(data.savepoint);\n            \t\tdata.db.releaseSavepoint(data.savepoint);\n            \t}\n                sendToErrorRow = true;\n                errorMessage = dbe.toString();\n            }\n            else\n            {\n    \t\t    setErrors(getErrors()+1);\n    \t\t    data.db.rollback();\n    \t\t    throw new KettleException(\"Error inserting row into table [\"+data.realTableName+\"] with values: \"+data.inputRowMeta.getString(row), dbe);\n            }\n\t\t}\n\t\t\n        if (data.batchMode)\n        {\n            if (sendToErrorRow) \n            {\n                if (batchProblem)\n                {\n                    data.batchBuffer.add(row);\n                    processBatchException(errorMessage, updateCounts, exceptionsList);\n                }\n                else\n                {\n                    // Simply add this row to the error row\n                    putError(data.inputRowMeta, row, 1L, errorMessage, null, \"SUYNC002\");\n                }\n            }\n            else\n            {\n                if (!lineSkipped) {\n                  data.batchBuffer.add(row);\n                }\n                \n                if (rowIsSafe) // A commit was done and the rows are all safe (no error)\n                {\n                    for (int i=0;i<data.batchBuffer.size();i++)\n                    {\n                        Object[] rowb = (Object[]) data.batchBuffer.get(i);\n                        putRow(data.outputRowMeta, rowb);\n                        incrementLinesOutput();\n                    }\n                    // Clear the buffer\n                    data.batchBuffer.clear();\n                }\n                \n                // Don't forget to pass this line to the following steps\n                //\n                if (lineSkipped) {\n                  putRow(data.outputRowMeta, row);\n                }\n            }\n        }\n        else\n        {\n            if (sendToErrorRow)\n            {\n                if(data.lookupFailure)\n                \tputError(data.inputRowMeta, row, 1, data.stringErrorKeyNotFound,  data.stringFieldnames, \"SUYNC001\");\n                else\n                \tputError(data.inputRowMeta, row, 1, errorMessage, null, \"SUYNC001\");\n            }\t\n        }\n\t}","commit_id":"a3013b00fb0c5d9888185f777ef0f4d03d3c8fc1","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi)\n\t\t\tthrows KettleException {\n\t\tRow r = null;\n\t\tboolean retval = true;\n\t\tboolean putrow = false;\n\n\t\tdebug = \"start of readRowOfData\";\n\n\t\tif (first) // we just got started\n\t\t{\n\t\t\thandleMissingFiles();\n\t\t\tdebug = \"first\";\n\n\t\t\tfirst = false;\n\n\t\t\t// Open the first file & read the required rows in the buffer, stop\n\t\t\t// if it fails...\n\t\t\tif (!openNextFile()) {\n\t\t\t\tcloseLastFile();\n\t\t\t\tsetOutputDone();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tdebug = \"first repeat fields\";\n\t\t\t// Count the number of repeat fields...\n\t\t\tfor (int i = 0; i < meta.getInputFields().length; i++) {\n\t\t\t\tif (meta.getInputFields()[i].isRepeated())\n\t\t\t\t\tdata.nr_repeats++;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!data.doneReading) {\n\t\t\t\tint repeats = 1;\n\t\t\t\tif (meta.isLineWrapped())\n\t\t\t\t\trepeats = meta.getNrWraps() > 0 ? meta.getNrWraps()\n\t\t\t\t\t\t\t: repeats;\n\n\t\t\t\t// Read a number of lines...\n\t\t\t\tfor (int i = 0; i < repeats && !data.doneReading; i++) {\n\t\t\t\t\tdebug = \"get a new line of data\";\n\t\t\t\t\tString line = getLine(log, data.isr, meta.getFileFormat()); // Get\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// one\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// line\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// of\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// data;\n\t\t\t\t\tif (line != null) {\n\t\t\t\t\t\tlinesInput++;\n\t\t\t\t\t\tlineNumberInFile++;\n\t\t\t\t\t\tboolean filterOK = true;\n\n\t\t\t\t\t\t// Filter row?\n\t\t\t\t\t\tfor (int f = 0; f < meta.getFilter().length && filterOK; f++) {\n\t\t\t\t\t\t\tTextFileFilter filter = meta.getFilter()[f];\n\t\t\t\t\t\t\tif (filter.getFilterString() != null\n\t\t\t\t\t\t\t\t\t&& filter.getFilterString().length() > 0) {\n\t\t\t\t\t\t\t\tint from = filter.getFilterPosition();\n\t\t\t\t\t\t\t\tif (from >= 0) {\n\t\t\t\t\t\t\t\t\tint to = from\n\t\t\t\t\t\t\t\t\t\t\t+ filter.getFilterString().length();\n\t\t\t\t\t\t\t\t\tdebug = \"verify filter : get substring(\"\n\t\t\t\t\t\t\t\t\t\t\t+ from + \", \" + to\n\t\t\t\t\t\t\t\t\t\t\t+ \") line length=\" + line.length();\n\t\t\t\t\t\t\t\t\tif (line.length() >= from\n\t\t\t\t\t\t\t\t\t\t\t&& line.length() >= to) {\n\t\t\t\t\t\t\t\t\t\tString sub = line.substring(filter\n\t\t\t\t\t\t\t\t\t\t\t\t.getFilterPosition(), to);\n\t\t\t\t\t\t\t\t\t\tif (sub.equalsIgnoreCase(filter\n\t\t\t\t\t\t\t\t\t\t\t\t.getFilterString())) {\n\t\t\t\t\t\t\t\t\t\t\tfilterOK = false; // skip this\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// one!\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else // anywhere on the line\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tint idx = line.indexOf(filter\n\t\t\t\t\t\t\t\t\t\t\t.getFilterString());\n\t\t\t\t\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\t\t\t\t\tfilterOK = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (!filterOK) {\n\t\t\t\t\t\t\t\t\tif (filter.isFilterLastLine()) {\n\t\t\t\t\t\t\t\t\t\tdata.doneReading = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\trepeats++; // grab another line, this one\n\t\t\t\t\t\t\t\t\t\t\t\t// got filtered\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (filterOK) {\n\t\t\t\t\t\t\t// logRowlevel(\"LINE READ: \"+line);\n\t\t\t\t\t\t\tdata.lineBuffer.add(new TextFileLine(line,\n\t\t\t\t\t\t\t\t\tlineNumberInFile, data.file));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.doneReading = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If the buffer is empty: open the next file. (if nothing in there,\n\t\t// open the next, etc.)\n\t\twhile (data.lineBuffer.size() == 0) {\n\t\t\tdebug = \"empty buffer: open next file\";\n\t\t\tif (!openNextFile()) // Open fails: done processing!\n\t\t\t{\n\t\t\t\tdebug = \"empty buffer: close last file\";\n\t\t\t\tcloseLastFile();\n\t\t\t\tsetOutputDone(); // signal end to receiver(s)\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Take the first line available in the buffer & remove the line from\n\t\t// the buffer\n\t\tdebug = \"take first line of buffer\";\n\t\tTextFileLine textLine = (TextFileLine) data.lineBuffer.get(0);\n\n\t\tdebug = \"remove first line of buffer\";\n\t\tdata.lineBuffer.remove(0);\n\n\t\tif (meta.isLayoutPaged()) {\n\t\t\tdebug = \"paged layout\";\n\n\t\t\t// Different rules apply: on each page:\n\t\t\t// a header\n\t\t\t// a number of data lines\n\t\t\t// a footer\n\t\t\t// \n\t\t\tif (!data.doneWithHeader && data.pageLinesRead == 0) // We are\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reading\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// header\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// lines\n\t\t\t{\n\t\t\t\tdebug = \"paged layout : header line \" + data.headerLinesRead;\n\t\t\t\tlogRowlevel(\"P-HEADER (\" + data.headerLinesRead + \") : \"\n\t\t\t\t\t\t+ textLine.line);\n\t\t\t\tdata.headerLinesRead++;\n\t\t\t\tif (data.headerLinesRead >= meta.getNrHeaderLines()) {\n\t\t\t\t\tdata.doneWithHeader = true;\n\t\t\t\t}\n\t\t\t} else // data lines or footer on a page\n\t\t\t{\n\t\t\t\tdebug = \"paged layout : data or footer\";\n\t\t\t\tif (data.pageLinesRead < meta.getNrLinesPerPage()) {\n\t\t\t\t\t// See if we are dealing with wrapped lines:\n\t\t\t\t\tif (meta.isLineWrapped()) {\n\t\t\t\t\t\tfor (int i = 0; i < meta.getNrWraps(); i++) {\n\t\t\t\t\t\t\tString extra = \"\";\n\t\t\t\t\t\t\tif (data.lineBuffer.size() > 0) {\n\t\t\t\t\t\t\t\textra = ((TextFileLine) data.lineBuffer.get(0)).line;\n\t\t\t\t\t\t\t\tdata.lineBuffer.remove(0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttextLine.line += extra;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdebug = \"paged layout : data line\";\n\t\t\t\t\tlogRowlevel(\"P-DATA: \" + textLine.line);\n\t\t\t\t\t// Read a normal line on a page of data.\n\t\t\t\t\tdata.pageLinesRead++;\n\t\t\t\t\tr = convertLineToRow(log, textLine, meta, data.df,\n\t\t\t\t\t\t\tdata.dfs, data.daf, data.dafs, data.filename,\n\t\t\t\t\t\t\tlinesWritten + 1, data.dataErrorLineHandler);\n\t\t\t\t\tif (r != null)\n\t\t\t\t\t\tputrow = true;\n\t\t\t\t} else // done reading the data lines, skip the footer lines\n\t\t\t\t{\n\t\t\t\t\tdebug = \"paged layout : footer line\";\n\t\t\t\t\tif (meta.hasFooter()\n\t\t\t\t\t\t\t&& data.footerLinesRead < meta.getNrFooterLines()) {\n\t\t\t\t\t\tlogRowlevel(\"P-FOOTER: \" + textLine.line);\n\t\t\t\t\t\tdata.footerLinesRead++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!meta.hasFooter()\n\t\t\t\t\t\t\t|| data.footerLinesRead >= meta.getNrFooterLines()) {\n\t\t\t\t\t\tdebug = \"paged layout : end of page: restart\";\n\n\t\t\t\t\t\t// OK, we are done reading the footer lines, start again\n\t\t\t\t\t\t// on 'next page' with the header\n\t\t\t\t\t\tdata.doneWithHeader = false;\n\t\t\t\t\t\tdata.headerLinesRead = 0;\n\t\t\t\t\t\tdata.pageLinesRead = 0;\n\t\t\t\t\t\tdata.footerLinesRead = 0;\n\t\t\t\t\t\tlogRowlevel(\"RESTART PAGE\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else // A normal data line, can also be a header or a footer line\n\t\t{\n\t\t\tdebug = \"normal\";\n\n\t\t\tif (!data.doneWithHeader) // We are reading header lines\n\t\t\t{\n\t\t\t\tdebug = \"normal : header line\";\n\t\t\t\tdata.headerLinesRead++;\n\t\t\t\tif (data.headerLinesRead >= meta.getNrHeaderLines()) {\n\t\t\t\t\tdata.doneWithHeader = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdebug = \"normal : data and footer\";\n\t\t\t\t// IF we are done reading and we have a footer\n\t\t\t\t// AND the number of lines in the buffer is smaller or equal to\n\t\t\t\t// the number of footer lines\n\t\t\t\t// THEN we can remove the remaining rows from the buffer: they\n\t\t\t\t// are all footer rows.\n\t\t\t\tif (data.doneReading && meta.hasFooter()\n\t\t\t\t\t\t&& data.lineBuffer.size() <= meta.getNrFooterLines()) {\n\t\t\t\t\tdebug = \"normal : footer\";\n\t\t\t\t\tdata.lineBuffer.clear();\n\t\t\t\t} else // Not yet a footer line: it's a normal data line.\n\t\t\t\t{\n\t\t\t\t\t// See if we are dealing with wrapped lines:\n\t\t\t\t\tif (meta.isLineWrapped()) {\n\t\t\t\t\t\tfor (int i = 0; i < meta.getNrWraps(); i++) {\n\t\t\t\t\t\t\tString extra = \"\";\n\t\t\t\t\t\t\tif (data.lineBuffer.size() > 0) {\n\t\t\t\t\t\t\t\textra = ((TextFileLine) data.lineBuffer.get(0)).line;\n\t\t\t\t\t\t\t\tdata.lineBuffer.remove(0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttextLine.line += extra;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdebug = \"normal : data\";\n\t\t\t\t\tif (data.filePlayList.isProcessingNeeded(textLine.file, textLine.lineNumber, AbstractFileErrorHandler.NO_PARTS)) {\n\t\t\t\t\t\tr = convertLineToRow(log, textLine, meta, data.df,\n\t\t\t\t\t\t\t\tdata.dfs, data.daf, data.dafs, data.filename,\n\t\t\t\t\t\t\t\tlinesWritten + 1, data.dataErrorLineHandler);\n\t\t\t\t\t\tif (r != null) {\n\t\t\t\t\t\t\t// System.out.println(\"Found data row: \"+r);\n\t\t\t\t\t\t\tputrow = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tputrow = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (putrow && r != null && !r.isIgnored()) {\n\t\t\t// See if the previous values need to be repeated!\n\t\t\tif (data.nr_repeats > 0) {\n\t\t\t\tdebug = \"repeats\";\n\n\t\t\t\tif (data.previous_row == null) // First invocation...\n\t\t\t\t{\n\t\t\t\t\tdebug = \"init repeats\";\n\n\t\t\t\t\tdata.previous_row = new Row();\n\t\t\t\t\tfor (int i = 0; i < meta.getInputFields().length; i++) {\n\t\t\t\t\t\tif (meta.getInputFields()[i].isRepeated()) {\n\t\t\t\t\t\t\tValue value = r.getValue(i);\n\t\t\t\t\t\t\tdata.previous_row.addValue(new Value(value)); // Copy\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// first\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// row\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdebug = \"check repeats\";\n\n\t\t\t\t\tint repnr = 0;\n\t\t\t\t\tfor (int i = 0; i < meta.getInputFields().length; i++) {\n\t\t\t\t\t\tif (meta.getInputFields()[i].isRepeated()) {\n\t\t\t\t\t\t\tValue value = r.getValue(i);\n\t\t\t\t\t\t\tif (value.isNull()) // if it is empty: take the\n\t\t\t\t\t\t\t\t\t\t\t\t// previous value!\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tValue prev = data.previous_row.getValue(repnr);\n\t\t\t\t\t\t\t\tr.removeValue(i);\n\t\t\t\t\t\t\t\tr.addValue(i, prev);\n\t\t\t\t\t\t\t} else // not empty: change the previous_row entry!\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdata.previous_row.removeValue(repnr);\n\t\t\t\t\t\t\t\tdata.previous_row.addValue(repnr, new Value(\n\t\t\t\t\t\t\t\t\t\tvalue));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trepnr++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlogRowlevel(\"Putting row: \" + r.toString());\n\t\t\tputRow(r);\n\n\t\t}\n\n\t\tif ((linesInput > 0) && (linesInput % Const.ROWS_UPDATE) == 0)\n\t\t\tlogBasic(\"linenr \" + linesInput);\n\n\t\tdebug = \"end of readRowOfData\";\n\n\t\treturn retval;\n\t}","id":56476,"modified_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi)\n\t\t\tthrows KettleException {\n\t\tRow r = null;\n\t\tboolean retval = true;\n\t\tboolean putrow = false;\n\n\t\tdebug = \"start of readRowOfData\";\n\n\t\tif (first) // we just got started\n\t\t{\n\t\t\thandleMissingFiles();\n\t\t\tdebug = \"first\";\n\n\t\t\tfirst = false;\n\n\t\t\t// Open the first file & read the required rows in the buffer, stop\n\t\t\t// if it fails...\n\t\t\tif (!openNextFile()) {\n\t\t\t\tcloseLastFile();\n\t\t\t\tsetOutputDone();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tdebug = \"first repeat fields\";\n\t\t\t// Count the number of repeat fields...\n\t\t\tfor (int i = 0; i < meta.getInputFields().length; i++) {\n\t\t\t\tif (meta.getInputFields()[i].isRepeated())\n\t\t\t\t\tdata.nr_repeats++;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!data.doneReading) {\n\t\t\t\tint repeats = 1;\n\t\t\t\tif (meta.isLineWrapped())\n\t\t\t\t\trepeats = meta.getNrWraps() > 0 ? meta.getNrWraps()\n\t\t\t\t\t\t\t: repeats;\n\n\t\t\t\t// Read a number of lines...\n\t\t\t\tfor (int i = 0; i < repeats && !data.doneReading; i++) {\n\t\t\t\t\tdebug = \"get a new line of data\";\n\t\t\t\t\tString line = getLine(log, data.isr, meta.getFileFormat()); // Get\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// one\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// line\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// of\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// data;\n\t\t\t\t\tif (line != null) {\n\t\t\t\t\t\tlinesInput++;\n\t\t\t\t\t\tlineNumberInFile++;\n\t\t\t\t\t\tboolean filterOK = true;\n\n\t\t\t\t\t\t// Filter row?\n\t\t\t\t\t\tfor (int f = 0; f < meta.getFilter().length && filterOK; f++) {\n\t\t\t\t\t\t\tTextFileFilter filter = meta.getFilter()[f];\n\t\t\t\t\t\t\tif (filter.getFilterString() != null\n\t\t\t\t\t\t\t\t\t&& filter.getFilterString().length() > 0) {\n\t\t\t\t\t\t\t\tint from = filter.getFilterPosition();\n\t\t\t\t\t\t\t\tif (from >= 0) {\n\t\t\t\t\t\t\t\t\tint to = from\n\t\t\t\t\t\t\t\t\t\t\t+ filter.getFilterString().length();\n\t\t\t\t\t\t\t\t\tdebug = \"verify filter : get substring(\"\n\t\t\t\t\t\t\t\t\t\t\t+ from + \", \" + to\n\t\t\t\t\t\t\t\t\t\t\t+ \") line length=\" + line.length();\n\t\t\t\t\t\t\t\t\tif (line.length() >= from\n\t\t\t\t\t\t\t\t\t\t\t&& line.length() >= to) {\n\t\t\t\t\t\t\t\t\t\tString sub = line.substring(filter\n\t\t\t\t\t\t\t\t\t\t\t\t.getFilterPosition(), to);\n\t\t\t\t\t\t\t\t\t\tif (sub.equalsIgnoreCase(filter\n\t\t\t\t\t\t\t\t\t\t\t\t.getFilterString())) {\n\t\t\t\t\t\t\t\t\t\t\tfilterOK = false; // skip this\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// one!\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else // anywhere on the line\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tint idx = line.indexOf(filter\n\t\t\t\t\t\t\t\t\t\t\t.getFilterString());\n\t\t\t\t\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\t\t\t\t\tfilterOK = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (!filterOK) {\n\t\t\t\t\t\t\t\t\tif (filter.isFilterLastLine()) {\n\t\t\t\t\t\t\t\t\t\tdata.doneReading = true;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\trepeats++; // grab another line, this one\n\t\t\t\t\t\t\t\t\t\t\t\t// got filtered\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (filterOK) {\n\t\t\t\t\t\t\t// logRowlevel(\"LINE READ: \"+line);\n\t\t\t\t\t\t\tdata.lineBuffer.add(new TextFileLine(line,\n\t\t\t\t\t\t\t\t\tlineNumberInFile, data.file));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.doneReading = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If the buffer is empty: open the next file. (if nothing in there,\n\t\t// open the next, etc.)\n\t\twhile (data.lineBuffer.size() == 0) {\n\t\t\tdebug = \"empty buffer: open next file\";\n\t\t\tif (!openNextFile()) // Open fails: done processing!\n\t\t\t{\n\t\t\t\tdebug = \"empty buffer: close last file\";\n\t\t\t\tcloseLastFile();\n\t\t\t\tsetOutputDone(); // signal end to receiver(s)\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Take the first line available in the buffer & remove the line from\n\t\t// the buffer\n\t\tdebug = \"take first line of buffer\";\n\t\tTextFileLine textLine = (TextFileLine) data.lineBuffer.get(0);\n\n\t\tdebug = \"remove first line of buffer\";\n\t\tdata.lineBuffer.remove(0);\n\n\t\tif (meta.isLayoutPaged()) {\n\t\t\tdebug = \"paged layout\";\n\n\t\t\t// Different rules apply: on each page:\n\t\t\t// a header\n\t\t\t// a number of data lines\n\t\t\t// a footer\n\t\t\t// \n\t\t\tif (!data.doneWithHeader && data.pageLinesRead == 0) // We are\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// reading\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// header\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// lines\n\t\t\t{\n\t\t\t\tdebug = \"paged layout : header line \" + data.headerLinesRead;\n\t\t\t\tlogRowlevel(\"P-HEADER (\" + data.headerLinesRead + \") : \"\n\t\t\t\t\t\t+ textLine.line);\n\t\t\t\tdata.headerLinesRead++;\n\t\t\t\tif (data.headerLinesRead >= meta.getNrHeaderLines()) {\n\t\t\t\t\tdata.doneWithHeader = true;\n\t\t\t\t}\n\t\t\t} else // data lines or footer on a page\n\t\t\t{\n\t\t\t\tdebug = \"paged layout : data or footer\";\n\t\t\t\tif (data.pageLinesRead < meta.getNrLinesPerPage()) {\n\t\t\t\t\t// See if we are dealing with wrapped lines:\n\t\t\t\t\tif (meta.isLineWrapped()) {\n\t\t\t\t\t\tfor (int i = 0; i < meta.getNrWraps(); i++) {\n\t\t\t\t\t\t\tString extra = \"\";\n\t\t\t\t\t\t\tif (data.lineBuffer.size() > 0) {\n\t\t\t\t\t\t\t\textra = ((TextFileLine) data.lineBuffer.get(0)).line;\n\t\t\t\t\t\t\t\tdata.lineBuffer.remove(0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttextLine.line += extra;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tdebug = \"paged layout : data line\";\n\t\t\t\t\tlogRowlevel(\"P-DATA: \" + textLine.line);\n\t\t\t\t\t// Read a normal line on a page of data.\n\t\t\t\t\tdata.pageLinesRead++;\n\t\t\t\t\tr = convertLineToRow(log, textLine, meta, data.df,\n\t\t\t\t\t\t\tdata.dfs, data.daf, data.dafs, data.filename,\n\t\t\t\t\t\t\tlinesWritten + 1, data.dataErrorLineHandler);\n\t\t\t\t\tif (r != null)\n\t\t\t\t\t\tputrow = true;\n\t\t\t\t} else // done reading the data lines, skip the footer lines\n\t\t\t\t{\n\t\t\t\t\tdebug = \"paged layout : footer line\";\n\t\t\t\t\tif (meta.hasFooter()\n\t\t\t\t\t\t\t&& data.footerLinesRead < meta.getNrFooterLines()) {\n\t\t\t\t\t\tlogRowlevel(\"P-FOOTER: \" + textLine.line);\n\t\t\t\t\t\tdata.footerLinesRead++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!meta.hasFooter()\n\t\t\t\t\t\t\t|| data.footerLinesRead >= meta.getNrFooterLines()) {\n\t\t\t\t\t\tdebug = \"paged layout : end of page: restart\";\n\n\t\t\t\t\t\t// OK, we are done reading the footer lines, start again\n\t\t\t\t\t\t// on 'next page' with the header\n\t\t\t\t\t\tdata.doneWithHeader = false;\n\t\t\t\t\t\tdata.headerLinesRead = 0;\n\t\t\t\t\t\tdata.pageLinesRead = 0;\n\t\t\t\t\t\tdata.footerLinesRead = 0;\n\t\t\t\t\t\tlogRowlevel(\"RESTART PAGE\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else // A normal data line, can also be a header or a footer line\n\t\t{\n\t\t\tdebug = \"normal\";\n\n\t\t\tif (!data.doneWithHeader) // We are reading header lines\n\t\t\t{\n\t\t\t\tdebug = \"normal : header line\";\n\t\t\t\tdata.headerLinesRead++;\n\t\t\t\tif (data.headerLinesRead >= meta.getNrHeaderLines()) {\n\t\t\t\t\tdata.doneWithHeader = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdebug = \"normal : data and footer\";\n\t\t\t\t// IF we are done reading and we have a footer\n\t\t\t\t// AND the number of lines in the buffer is smaller or equal to\n\t\t\t\t// the number of footer lines\n\t\t\t\t// THEN we can remove the remaining rows from the buffer: they\n\t\t\t\t// are all footer rows.\n\t\t\t\tif (data.doneReading && meta.hasFooter()\n\t\t\t\t\t\t&& data.lineBuffer.size() <= meta.getNrFooterLines()) {\n\t\t\t\t\tdebug = \"normal : footer\";\n\t\t\t\t\tdata.lineBuffer.clear();\n\t\t\t\t} else // Not yet a footer line: it's a normal data line.\n\t\t\t\t{\n\t\t\t\t\t// See if we are dealing with wrapped lines:\n\t\t\t\t\tif (meta.isLineWrapped()) {\n\t\t\t\t\t\tfor (int i = 0; i < meta.getNrWraps(); i++) {\n\t\t\t\t\t\t\tString extra = \"\";\n\t\t\t\t\t\t\tif (data.lineBuffer.size() > 0) {\n\t\t\t\t\t\t\t\textra = ((TextFileLine) data.lineBuffer.get(0)).line;\n\t\t\t\t\t\t\t\tdata.lineBuffer.remove(0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttextLine.line += extra;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdebug = \"normal : data\";\n\t\t\t\t\tif (data.filePlayList.isProcessingNeeded(textLine.file, textLine.lineNumber, AbstractFileErrorHandler.NO_PARTS)) {\n\t\t\t\t\t\tr = convertLineToRow(log, textLine, meta, data.df,\n\t\t\t\t\t\t\t\tdata.dfs, data.daf, data.dafs, data.filename,\n\t\t\t\t\t\t\t\tlinesWritten + 1, data.dataErrorLineHandler);\n\t\t\t\t\t\tif (r != null) {\n\t\t\t\t\t\t\t// System.out.println(\"Found data row: \"+r);\n\t\t\t\t\t\t\tputrow = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else\n\t\t\t\t\t\tputrow = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (putrow && r != null && !r.isIgnored()) {\n\t\t\t// See if the previous values need to be repeated!\n\t\t\tif (data.nr_repeats > 0) {\n\t\t\t\tdebug = \"repeats\";\n\n\t\t\t\tif (data.previous_row == null) // First invocation...\n\t\t\t\t{\n\t\t\t\t\tdebug = \"init repeats\";\n\n\t\t\t\t\tdata.previous_row = new Row();\n\t\t\t\t\tfor (int i = 0; i < meta.getInputFields().length; i++) {\n\t\t\t\t\t\tif (meta.getInputFields()[i].isRepeated()) {\n\t\t\t\t\t\t\tValue value = r.getValue(i);\n\t\t\t\t\t\t\tdata.previous_row.addValue(new Value(value)); // Copy\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// the\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// first\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// row\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdebug = \"check repeats\";\n\n\t\t\t\t\tint repnr = 0;\n\t\t\t\t\tfor (int i = 0; i < meta.getInputFields().length; i++) {\n\t\t\t\t\t\tif (meta.getInputFields()[i].isRepeated()) {\n\t\t\t\t\t\t\tValue value = r.getValue(i);\n\t\t\t\t\t\t\tif (value.isNull()) // if it is empty: take the\n\t\t\t\t\t\t\t\t\t\t\t\t// previous value!\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tValue prev = data.previous_row.getValue(repnr);\n\t\t\t\t\t\t\t\tr.removeValue(i);\n\t\t\t\t\t\t\t\tr.addValue(i, prev);\n\t\t\t\t\t\t\t} else // not empty: change the previous_row entry!\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdata.previous_row.removeValue(repnr);\n\t\t\t\t\t\t\t\tdata.previous_row.addValue(repnr, new Value(\n\t\t\t\t\t\t\t\t\t\tvalue));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\trepnr++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n            // Don't put empty rows out if we don't want those...\n            if (meta.noEmptyLines() && r.size()==0)\n            {\n                logRowlevel(\"Empty row skipped\");\n            }\n            else\n            {\n                logRowlevel(\"Putting row: \" + r.toString());\n                putRow(r);\n            }\n\t\t}\n\n\t\tif ((linesInput > 0) && (linesInput % Const.ROWS_UPDATE) == 0)\n\t\t\tlogBasic(\"linenr \" + linesInput);\n\n\t\tdebug = \"end of readRowOfData\";\n\n\t\treturn retval;\n\t}","commit_id":"f3cb734342632749f4839635ce78924b2a494d58","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\r\n\t{\r\n\t\tboolean err=true;\r\n\t\tint i;\r\n\t\t\r\n\t\tObject[] r=getRow();   // get row from rowset, wait for our turn, indicate busy!\r\n\r\n\t\t// initialize \r\n\t\tif (first && r!=null)\r\n\t\t{\r\n\t\t\tfirst=false;\r\n\t\t\tdata.fieldnrs=new int[meta.getFieldName().length];\r\n\t\t\tfor (i=0;i<meta.getFieldName().length;i++)\r\n\t\t\t{\r\n\t\t\t\tdata.fieldnrs[i]=getInputRowMeta().indexOfValue( meta.getFieldName()[i] );\r\n\t\t\t\tif (data.fieldnrs[i]<0)\r\n\t\t\t\t{\r\n\t\t\t\t\tlogError(\"Sort field [\"+meta.getFieldName()[i]+\"] not found!\");\r\n\t\t\t\t\tsetOutputDone();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n \t\t\t}\r\n            \r\n            // Metadata\r\n            data.outputRowMeta = (RowMetaInterface)getInputRowMeta().clone();\r\n            meta.getFields(data.outputRowMeta, getStepname(), null);\r\n\t\t}\r\n\t\t\r\n\t\terr=addBuffer(getInputRowMeta(), r);\r\n\t\tif (!err) \r\n\t\t{\r\n\t\t\tsetOutputDone(); // signal receiver we're finished.\r\n\t\t\treturn false;\r\n\t\t}\t\t\r\n\t\t\r\n\t\tif (r==null)  // no more input to be expected...\r\n\t\t{\r\n\t\t\t// Now we can start the output!\r\n\t\t\tr=getBuffer();\r\n\t\t\twhile (r!=null  && !isStopped())\r\n\t\t\t{\r\n\t\t\t\tif (log.isRowLevel()) logRowlevel(\"Read row: \"+r.toString());\r\n\t\t\t\t\r\n\t\t\t\tputRow(data.outputRowMeta, r); // copy row to possible alternate rowset(s).\r\n\r\n\t\t\t\tr=getBuffer();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsetOutputDone(); // signal receiver we're finished.\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n        if (checkFeedback(linesRead)) logBasic(\"Linenr \"+linesRead);\r\n\r\n\t\treturn true;\r\n\t}","id":56477,"modified_method":"public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException\r\n\t{\r\n\t\tboolean err=true;\r\n\t\tint i;\r\n\t\t\r\n\t\tObject[] r=getRow();   // get row from rowset, wait for our turn, indicate busy!\r\n\r\n\t\t// initialize \r\n\t\tif (first && r!=null)\r\n\t\t{\r\n\t\t\tfirst=false;\r\n\t\t\tdata.fieldnrs=new int[meta.getFieldName().length];\r\n\t\t\tfor (i=0;i<meta.getFieldName().length;i++)\r\n\t\t\t{\r\n\t\t\t\tdata.fieldnrs[i]=getInputRowMeta().indexOfValue( meta.getFieldName()[i] );\r\n\t\t\t\tif (data.fieldnrs[i]<0)\r\n\t\t\t\t{\r\n\t\t\t\t\tlogError(\"Sort field [\"+meta.getFieldName()[i]+\"] not found!\");\r\n\t\t\t\t\tsetOutputDone();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n \t\t\t}\r\n            \r\n            // Metadata\r\n            data.outputRowMeta = (RowMetaInterface)getInputRowMeta().clone();\r\n            meta.getFields(data.outputRowMeta, getStepname(), null);\r\n\t\t}\r\n\t\t\r\n\t\terr=addBuffer(getInputRowMeta(), r);\r\n\t\tif (!err) \r\n\t\t{\r\n\t\t\tsetOutputDone(); // signal receiver we're finished.\r\n\t\t\treturn false;\r\n\t\t}\t\t\r\n\t\t\r\n\t\tif (r==null)  // no more input to be expected...\r\n\t\t{\r\n\t\t\t// Now we can start the output!\r\n\t\t\tr=getBuffer();\r\n\t\t\tObject[] previousRow = null;\r\n\t\t\twhile (r!=null  && !isStopped())\r\n\t\t\t{\r\n\t\t\t\tif (log.isRowLevel()) logRowlevel(\"Read row: \"+r.toString());\r\n\t\t\t\t\r\n\t\t\t\t// Do another verification pass for unique rows...\r\n\t\t\t\t//\r\n\t\t\t\tif (meta.isOnlyPassingUniqueRows())\r\n\t\t\t\t{\r\n\t\t\t\t\tif (previousRow!=null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// See if this row is the same as the previous one as far as the keys are concerned.\r\n\t\t\t\t\t\t// If so, we don't put forward this row.\r\n                        int result = data.outputRowMeta.compare(r, previousRow, data.fieldnrs);\r\n                        if (result!=0)\r\n                        {\r\n    \t\t\t\t\t\tputRow(data.outputRowMeta, r); // copy row to possible alternate rowset(s).\r\n                        }\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tputRow(data.outputRowMeta, r); // copy row to possible alternate rowset(s).\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpreviousRow = r;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tputRow(data.outputRowMeta, r); // copy row to possible alternate rowset(s).\r\n\t\t\t\t}\r\n\r\n\t\t\t\tr=getBuffer();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsetOutputDone(); // signal receiver we're finished.\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n        if (checkFeedback(linesRead)) logBasic(\"Linenr \"+linesRead);\r\n\r\n\t\treturn true;\r\n\t}","commit_id":"1fd7dbf5c264190aaf8f30ddcf087d11acb26480","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean addBuffer(RowMetaInterface rowMeta, Object[] r)\r\n\t{\r\n\t\tif (r!=null)\r\n\t\t{\r\n\t\t\tdata.buffer.add( r );     // Save row\r\n\t\t}\r\n\t\tif (data.files.size()==0 && r==null) // No more records: sort buffer\r\n\t\t{\r\n\t\t\tquickSort(data.buffer);\r\n\t\t}\r\n\t\t\r\n\t\t// time to write to disk: buffer is full!\r\n\t\tif ( data.buffer.size()==meta.getSortSize()     // Buffer is full: sort & dump to disk \r\n\t\t   || (data.files.size()>0 && r==null && data.buffer.size()>0) // No more records: join from disk \r\n\t\t   )\r\n\t\t{\r\n\t\t\t// First sort the rows in buffer[]\r\n\t\t\tquickSort(data.buffer);\r\n\t\t\t\r\n\t\t\t// Then write them to disk...\r\n\t\t\tDataOutputStream dos;\r\n\t\t\tGZIPOutputStream gzos;\r\n\t\t\tint p;\r\n            Object[] previousRow = null;\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tFileObject fileObject=KettleVFS.createTempFile(meta.getPrefix(), \".tmp\", StringUtil.environmentSubstitute(meta.getDirectory()));\r\n\t\t\t\t\r\n\t\t\t\tdata.files.add(fileObject); // Remember the files!\r\n\t\t\t\tOutputStream outputStream = fileObject.getContent().getOutputStream();\r\n\t\t\t\tif (meta.getCompress())\r\n\t\t\t\t{\r\n\t\t\t\t\tgzos = new GZIPOutputStream(new BufferedOutputStream(outputStream));\r\n\t\t\t\t\tdos=new DataOutputStream(gzos);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tdos = new DataOutputStream(outputStream);\r\n\t\t\t\t\tgzos = null;\r\n\t\t\t\t}\r\n                \r\n                // Just write the data, nothing else\r\n                if (meta.isOnlyPassingUniqueRows())\r\n                {\r\n                    int index=0;\r\n                    while (index<data.buffer.size())\r\n                    {\r\n                        Object[] row = data.buffer.get(index);\r\n                        if (previousRow!=null)\r\n                        {\r\n                            int result = data.outputRowMeta.compare(row, previousRow, data.fieldnrs);\r\n                            if (result==0)\r\n                            {\r\n                                data.buffer.remove(index); // remove this duplicate element as requested\r\n                                logBasic(\"Duplicate row removed: \"+data.outputRowMeta.getString(row));\r\n                            }\r\n                            else\r\n                            {\r\n                                index++;\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            index++;\r\n                        }\r\n                        previousRow = row; \r\n                    }\r\n                }\r\n\t\t\t\r\n\t\t\t\t// How many records do we have left?\r\n\t\t\t\tdata.bufferSizes.add( data.buffer.size() );\r\n                \r\n                for (p=0;p<data.buffer.size();p++)\r\n\t\t\t\t{\r\n                    rowMeta.writeData(dos, data.buffer.get(p));\r\n\t\t\t\t}\r\n                \r\n\t\t\t\t// Close temp-file\r\n\t\t\t\tdos.close();  // close data stream\r\n\t\t\t\tif (gzos != null)\r\n                {\r\n\t\t\t\t\tgzos.close(); // close gzip stream\r\n                }\r\n                outputStream.close();  // close file stream\r\n\t\t\t}\r\n\t\t\tcatch(Exception e)\r\n\t\t\t{\r\n\t\t\t\tlogError(\"Error processing temp-file: \"+e.toString());\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n            data.getBufferIndex=0;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\treturn true; \r\n\t}","id":56478,"modified_method":"private boolean addBuffer(RowMetaInterface rowMeta, Object[] r)\r\n\t{\r\n\t\tif (r!=null)\r\n\t\t{\r\n\t\t\tdata.buffer.add( r );     // Save row\r\n\t\t}\r\n\t\tif (data.files.size()==0 && r==null) // No more records: sort buffer\r\n\t\t{\r\n\t\t\tquickSort(data.buffer);\r\n\t\t}\r\n\t\t\r\n\t\t// time to write to disk: buffer is full!\r\n\t\tif ( data.buffer.size()==meta.getSortSize()     // Buffer is full: sort & dump to disk \r\n\t\t   || (data.files.size()>0 && r==null && data.buffer.size()>0) // No more records: join from disk \r\n\t\t   )\r\n\t\t{\r\n\t\t\t// First sort the rows in buffer[]\r\n\t\t\tquickSort(data.buffer);\r\n\t\t\t\r\n\t\t\t// Then write them to disk...\r\n\t\t\tDataOutputStream dos;\r\n\t\t\tGZIPOutputStream gzos;\r\n\t\t\tint p;\r\n            Object[] previousRow = null;\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tFileObject fileObject=KettleVFS.createTempFile(meta.getPrefix(), \".tmp\", StringUtil.environmentSubstitute(meta.getDirectory()));\r\n\t\t\t\t\r\n\t\t\t\tdata.files.add(fileObject); // Remember the files!\r\n\t\t\t\tOutputStream outputStream = fileObject.getContent().getOutputStream();\r\n\t\t\t\tif (meta.getCompress())\r\n\t\t\t\t{\r\n\t\t\t\t\tgzos = new GZIPOutputStream(new BufferedOutputStream(outputStream));\r\n\t\t\t\t\tdos=new DataOutputStream(gzos);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tdos = new DataOutputStream(outputStream);\r\n\t\t\t\t\tgzos = null;\r\n\t\t\t\t}\r\n                \r\n                // Just write the data, nothing else\r\n                if (meta.isOnlyPassingUniqueRows())\r\n                {\r\n                    int index=0;\r\n                    while (index<data.buffer.size())\r\n                    {\r\n                        Object[] row = data.buffer.get(index);\r\n                        if (previousRow!=null)\r\n                        {\r\n                            int result = data.outputRowMeta.compare(row, previousRow, data.fieldnrs);\r\n                            if (result==0)\r\n                            {\r\n                                data.buffer.remove(index); // remove this duplicate element as requested\r\n                                if (log.isRowLevel()) logRowlevel(\"Duplicate row removed: \"+data.outputRowMeta.getString(row));\r\n                            }\r\n                            else\r\n                            {\r\n                                index++;\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            index++;\r\n                        }\r\n                        previousRow = row; \r\n                    }\r\n                }\r\n\t\t\t\r\n\t\t\t\t// How many records do we have left?\r\n\t\t\t\tdata.bufferSizes.add( data.buffer.size() );\r\n                \r\n                for (p=0;p<data.buffer.size();p++)\r\n\t\t\t\t{\r\n                    rowMeta.writeData(dos, data.buffer.get(p));\r\n\t\t\t\t}\r\n                \r\n                // Clear the list\r\n                data.buffer.clear();\r\n                \r\n\t\t\t\t// Close temp-file\r\n\t\t\t\tdos.close();  // close data stream\r\n\t\t\t\tif (gzos != null)\r\n                {\r\n\t\t\t\t\tgzos.close(); // close gzip stream\r\n                }\r\n                outputStream.close();  // close file stream\r\n\t\t\t}\r\n\t\t\tcatch(Exception e)\r\n\t\t\t{\r\n\t\t\t\tlogError(\"Error processing temp-file: \"+e.toString());\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n            data.getBufferIndex=0;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\treturn true; \r\n\t}","commit_id":"1fd7dbf5c264190aaf8f30ddcf087d11acb26480","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void testMethodsFromSuper() throws Exception {\n\t\tsetShowInherited(false);\n\t\tworkbenchHelper.createFile(\"test/Super.java\", \n\t\t\t\t\"package test; \" + \n\t\t\t\t\"public class Super {\" + \n\t\t\t\t\"  protected int foo(String x) { return 1; }\" + \n\t\t\t\t\"  private String bar() { return null; }\" + \n\t\t\t\t\"}\");\n\t\twaitForAutoBuild();\n\t\tString model = \n\t\t\t\t\"package test \" + \n\t\t\t\t\"class Foo extends Super {\" + \n\t\t\t\t\"  def Number baz() { null }\" +\n\t\t\t\t\"}\";\n\t\tAssertBuilder assertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tAssertBuilder sub = assertBuilder.child(1, \"Foo\").numChildren(1);\n\t\tsub.child(0, \"baz() : Number\").numChildren(0);\n\n\t\tsetShowInherited(true);\n\t\tassertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tsub = assertBuilder.child(1, \"Foo\").numChildren(15);\n\t\tsub.child(0, \"new() - java.lang.Object\");\n\t\tsub.child(1, \"new() - test.Super\");\n\t\tsub.child(2, \"baz() : Number\").numChildren(0);\n\t\tsub.child(3, \"clone() : Object - java.lang.Object\");\n\t\tsub.child(4, \"equals(Object) : boolean - java.lang.Object\");\n\t\tsub.child(5, \"finalize() : void - java.lang.Object\");\n\t\tsub.child(6, \"foo(String) : int - test.Super\").numChildren(0);\n\t\tsub.child(7, \"getClass() : Class<?> - java.lang.Object\");\n\t\tsub.child(8, \"hashCode() : int - java.lang.Object\");\n\t\tsub.child(9, \"notify() : void - java.lang.Object\");\n\t\tsub.child(10, \"notifyAll() : void - java.lang.Object\");\n\t\tsub.child(11, \"toString() : String - java.lang.Object\");\n\t\tsub.child(12, \"wait() : void - java.lang.Object\");\n\t\tsub.child(13, \"wait(long) : void - java.lang.Object\");\n\t\tsub.child(14, \"wait(long, int) : void - java.lang.Object\");\n\t\t// private method bar() stays invisible\n\t}","id":56479,"modified_method":"public void testMethodsFromSuper() throws Exception {\n\t\tsetShowInherited(false);\n\t\tworkbenchHelper.createFile(\"test/Super.java\", \n\t\t\t\t\"package test; \" + \n\t\t\t\t\"public class Super {\" + \n\t\t\t\t\"  protected int foo(String x) { return 1; }\" + \n\t\t\t\t\"  private String bar() { return null; }\" + \n\t\t\t\t\"}\");\n\t\twaitForAutoBuild();\n\t\tString model = \n\t\t\t\t\"package test \" + \n\t\t\t\t\"class Foo extends Super {\" + \n\t\t\t\t\"  def Number baz() { null }\" +\n\t\t\t\t\"}\";\n\t\tAssertBuilder assertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tAssertBuilder sub = assertBuilder.child(1, \"Foo\").numChildren(1).hasTextRegion(true);\n\t\tsub.child(0, \"baz() : Number\").numChildren(0).hasTextRegion(true);\n\n\t\tsetShowInherited(true);\n\t\tassertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tsub = assertBuilder.child(1, \"Foo\").numChildren(15);\n\t\tsub.child(0, \"new() - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(1, \"new() - test.Super\").hasTextRegion(false);\n\t\tsub.child(2, \"baz() : Number\").numChildren(0).hasTextRegion(true);\n\t\tsub.child(3, \"clone() : Object - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(4, \"equals(Object) : boolean - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(5, \"finalize() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(6, \"foo(String) : int - test.Super\").numChildren(0).hasTextRegion(false);\n\t\tsub.child(7, \"getClass() : Class<?> - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(8, \"hashCode() : int - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(9, \"notify() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(10, \"notifyAll() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(11, \"toString() : String - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(12, \"wait() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(13, \"wait(long) : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(14, \"wait(long, int) : void - java.lang.Object\").hasTextRegion(false);\n\t\t// private method bar() stays invisible\n\t}","commit_id":"bb41204967a4cd8f745858887937b1ce8e798fb5","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testFieldsFromSuper() throws Exception {\n\t\tsetShowInherited(false);\n\t\tworkbenchHelper.createFile(\"test/Super.java\", \n\t\t\t\t\"package test; \" + \n\t\t\t\t\"public class Super {\" + \n\t\t\t\t\"  protected int foo;\" + \n\t\t\t\t\"  private String bar;\" + \n\t\t\t\t\"}\");\n\t\twaitForAutoBuild();\n\t\tString model =\n\t\t\t\t\"package test \" + \n\t\t\t\t\"class Foo extends Super {\" + \n\t\t\t\t\"  Number baz\" +\n\t\t\t\t\"}\";\n\t\tAssertBuilder assertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tAssertBuilder sub = assertBuilder.child(1, \"Foo\").numChildren(1);\n\t\tsub.child(0, \"baz : Number\").numChildren(0);\n\n\t\tsetShowInherited(true);\n\t\tassertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tsub = assertBuilder.child(1, \"Foo\").numChildren(15);\n\t\tsub.child(0, \"baz : Number\").numChildren(0);\n\t\tsub.child(1, \"foo : int - test.Super\").numChildren(0);\n\t\tsub.child(2, \"new() - java.lang.Object\");\n\t\tsub.child(3, \"new() - test.Super\");\n\t\tsub.child(4, \"clone() : Object - java.lang.Object\");\n\t\tsub.child(5, \"equals(Object) : boolean - java.lang.Object\");\n\t\tsub.child(6, \"finalize() : void - java.lang.Object\");\n\t\tsub.child(7, \"getClass() : Class<?> - java.lang.Object\");\n\t\tsub.child(8, \"hashCode() : int - java.lang.Object\");\n\t\tsub.child(9, \"notify() : void - java.lang.Object\");\n\t\tsub.child(10, \"notifyAll() : void - java.lang.Object\");\n\t\tsub.child(11, \"toString() : String - java.lang.Object\");\n\t\tsub.child(12, \"wait() : void - java.lang.Object\");\n\t\tsub.child(13, \"wait(long) : void - java.lang.Object\");\n\t\tsub.child(14, \"wait(long, int) : void - java.lang.Object\");\n\t\t// private field bar stays invisible\n\t}","id":56480,"modified_method":"public void testFieldsFromSuper() throws Exception {\n\t\tsetShowInherited(false);\n\t\tworkbenchHelper.createFile(\"test/Super.java\", \n\t\t\t\t\"package test; \" + \n\t\t\t\t\"public class Super {\" + \n\t\t\t\t\"  protected int foo;\" + \n\t\t\t\t\"  private String bar;\" + \n\t\t\t\t\"}\");\n\t\twaitForAutoBuild();\n\t\tString model =\n\t\t\t\t\"package test \" + \n\t\t\t\t\"class Foo extends Super {\" + \n\t\t\t\t\"  Number baz\" +\n\t\t\t\t\"}\";\n\t\tAssertBuilder assertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tAssertBuilder sub = assertBuilder.child(1, \"Foo\").numChildren(1).hasTextRegion(true);\n\t\tsub.child(0, \"baz : Number\").numChildren(0).hasTextRegion(true);\n\n\t\tsetShowInherited(true);\n\t\tassertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tsub = assertBuilder.child(1, \"Foo\").numChildren(15);\n\t\tsub.child(0, \"baz : Number\").numChildren(0).hasTextRegion(true);\n\t\tsub.child(1, \"foo : int - test.Super\").numChildren(0).hasTextRegion(false);\n\t\tsub.child(2, \"new() - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(3, \"new() - test.Super\").hasTextRegion(false);\n\t\tsub.child(4, \"clone() : Object - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(5, \"equals(Object) : boolean - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(6, \"finalize() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(7, \"getClass() : Class<?> - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(8, \"hashCode() : int - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(9, \"notify() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(10, \"notifyAll() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(11, \"toString() : String - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(12, \"wait() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(13, \"wait(long) : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(14, \"wait(long, int) : void - java.lang.Object\").hasTextRegion(false);\n\t\t// private field bar stays invisible\n\t}","commit_id":"bb41204967a4cd8f745858887937b1ce8e798fb5","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testMixedDispatch_0() throws Exception {\n\t\tsetShowInherited(false);\n\t\tworkbenchHelper.createFile(\"test/Super.java\", \n\t\t\t\t\"package test; \" + \n\t\t\t\t\"public class Super {\" + \n\t\t\t\t\"  protected void _foo(String x) { }\" + \n\t\t\t\t\"}\");\n\t\twaitForAutoBuild();\n\t\tString model = \n\t\t\t\t\"package test \" + \n\t\t\t\t\"class Foo extends Super {\" + \n\t\t\t\t\"  def dispatch void foo(Number x) { }\" +\n\t\t\t\t\"}\";\n\t\tAssertBuilder assertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tAssertBuilder sub = assertBuilder.child(1, \"Foo\").numChildren(1);\n\t\tsub.child(0, \"foo(Serializable) : void\").numChildren(1).child(0, \"foo(Number) : void\").numChildren(0);\n\n\t\tsetShowInherited(true);\n\t\tassertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tsub = assertBuilder.child(1, \"Foo\").numChildren(14);\n\t\tsub.child(0, \"new() - java.lang.Object\");\n\t\tsub.child(1, \"new() - test.Super\");\n\t\tAssertBuilder foo = sub.child(2, \"foo(Serializable) : void\").numChildren(2);\n\t\tfoo.child(0, \"_foo(String) : void - test.Super\").numChildren(0);\n\t\tfoo.child(1, \"foo(Number) : void\").numChildren(0);\n\t\tsub.child(3, \"clone() : Object - java.lang.Object\");\n\t\tsub.child(4, \"equals(Object) : boolean - java.lang.Object\");\n\t\tsub.child(5, \"finalize() : void - java.lang.Object\");\n\t\tsub.child(6, \"getClass() : Class<?> - java.lang.Object\");\n\t\tsub.child(7, \"hashCode() : int - java.lang.Object\");\n\t\tsub.child(8, \"notify() : void - java.lang.Object\");\n\t\tsub.child(9, \"notifyAll() : void - java.lang.Object\");\n\t\tsub.child(10, \"toString() : String - java.lang.Object\");\n\t\tsub.child(11, \"wait() : void - java.lang.Object\");\n\t\tsub.child(12, \"wait(long) : void - java.lang.Object\");\n\t\tsub.child(13, \"wait(long, int) : void - java.lang.Object\");\n\n\t}","id":56481,"modified_method":"public void testMixedDispatch_0() throws Exception {\n\t\tsetShowInherited(false);\n\t\tworkbenchHelper.createFile(\"test/Super.java\", \n\t\t\t\t\"package test; \" + \n\t\t\t\t\"public class Super {\" + \n\t\t\t\t\"  protected void _foo(String x) { }\" + \n\t\t\t\t\"}\");\n\t\twaitForAutoBuild();\n\t\tString model = \n\t\t\t\t\"package test \" + \n\t\t\t\t\"class Foo extends Super {\" + \n\t\t\t\t\"  def dispatch void foo(Number x) { }\" +\n\t\t\t\t\"}\";\n\t\tAssertBuilder assertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tAssertBuilder sub = assertBuilder.child(1, \"Foo\").numChildren(1).hasTextRegion(true);\n\t\tsub.child(0, \"foo(Serializable) : void\").numChildren(1).child(0, \"foo(Number) : void\").numChildren(0).hasTextRegion(true);\n\n\t\tsetShowInherited(true);\n\t\tassertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tsub = assertBuilder.child(1, \"Foo\").numChildren(14).hasTextRegion(true);\n\t\tsub.child(0, \"new() - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(1, \"new() - test.Super\").hasTextRegion(false);\n\t\tAssertBuilder foo = sub.child(2, \"foo(Serializable) : void\").numChildren(2).hasTextRegion(true);\n\t\tfoo.child(0, \"_foo(String) : void - test.Super\").numChildren(0).hasTextRegion(false);\n\t\tfoo.child(1, \"foo(Number) : void\").numChildren(0).hasTextRegion(true);\n\t\tsub.child(3, \"clone() : Object - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(4, \"equals(Object) : boolean - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(5, \"finalize() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(6, \"getClass() : Class<?> - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(7, \"hashCode() : int - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(8, \"notify() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(9, \"notifyAll() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(10, \"toString() : String - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(11, \"wait() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(12, \"wait(long) : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(13, \"wait(long, int) : void - java.lang.Object\").hasTextRegion(false);\n\n\t}","commit_id":"bb41204967a4cd8f745858887937b1ce8e798fb5","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void createFeatureNodes(IOutlineNode parentNode, XtendClass xtendClass) {\n\t\tfinal JvmGenericType inferredType = associations.getInferredType(xtendClass);\n\t\tif (inferredType != null) {\n\t\t\tMultimap<JvmOperation, JvmOperation> dispatcher2dispatched = dispatchingSupport.getDispatcher2dispatched(\n\t\t\t\t\txtendClass, getCurrentMode() == HIDE_INHERITED_MODE);\n\t\t\tSet<JvmFeature> processedFeatures = newHashSet();\n\t\t\tfor (JvmOperation dispatcher : dispatcher2dispatched.keySet()) {\n\t\t\t\tXtendFeatureNode dispatcherNode = createNodeForFeature(parentNode, inferredType, dispatcher, dispatcher);\n\t\t\t\tdispatcherNode.setDispatch(true);\n\t\t\t\tprocessedFeatures.add(dispatcher);\n\t\t\t\tfor (JvmOperation dispatchCase : dispatcher2dispatched.get(dispatcher)) {\n\t\t\t\t\tXtendFunction xtendFunction = associations.getXtendFunction(dispatchCase);\n\t\t\t\t\tif (xtendFunction == null) {\n\t\t\t\t\t\tcreateNodeForFeature(dispatcherNode, inferredType, dispatchCase, dispatchCase);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateNodeForFeature(dispatcherNode, inferredType, dispatchCase, xtendFunction);\n\t\t\t\t\t}\n\t\t\t\t\tprocessedFeatures.add(dispatchCase);\n\t\t\t\t}\n\t\t\t}\n\t\t\tIterable<JvmFeature> remainingFeatures;\n\t\t\tif (getCurrentMode() == SHOW_INHERITED_MODE) {\n\t\t\t\tremainingFeatures = filter(\n\t\t\t\t\t\tfeatureOverridesService.getAllJvmFeatures(typeReferences.createTypeRef(inferredType)),\n\t\t\t\t\t\tnew Predicate<JvmMember>() {\n\t\t\t\t\t\t\tpublic boolean apply(JvmMember input) {\n\t\t\t\t\t\t\t\treturn visibilityService.isVisible(input, inferredType);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tremainingFeatures = filter(inferredType.getMembers(), JvmFeature.class);\n\t\t\t}\n\t\t\tfor (JvmConstructor constructor : inferredType.getDeclaredConstructors()) {\n\t\t\t\tif (associations.getXtendConstructor(constructor) == null)\n\t\t\t\t\tprocessedFeatures.add(constructor);\n\t\t\t}\n\t\t\tfor (JvmFeature feature : remainingFeatures) {\n\t\t\t\tif (!processedFeatures.contains(feature)) {\n\t\t\t\t\tcreateNodeForFeature(parentNode, inferredType, feature, feature);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (XtendMember member : xtendClass.getMembers())\n\t\t\t\tcreateEObjectNode(parentNode, member);\n\t\t}\n\t}","id":56482,"modified_method":"protected void createFeatureNodes(IOutlineNode parentNode, XtendClass xtendClass) {\n\t\tfinal JvmGenericType inferredType = associations.getInferredType(xtendClass);\n\t\tif (inferredType != null) {\n\t\t\tMultimap<JvmOperation, JvmOperation> dispatcher2dispatched = dispatchingSupport.getDispatcher2dispatched(\n\t\t\t\t\txtendClass, getCurrentMode() == HIDE_INHERITED_MODE);\n\t\t\tSet<JvmFeature> processedFeatures = newHashSet();\n\t\t\tfor (JvmOperation dispatcher : dispatcher2dispatched.keySet()) {\n\t\t\t\tXtendFeatureNode dispatcherNode = createNodeForFeature(parentNode, inferredType, dispatcher, dispatcher);\n\t\t\t\tdispatcherNode.setDispatch(true);\n\t\t\t\tprocessedFeatures.add(dispatcher);\n\t\t\t\tfor (JvmOperation dispatchCase : dispatcher2dispatched.get(dispatcher)) {\n\t\t\t\t\tXtendFunction xtendFunction = associations.getXtendFunction(dispatchCase);\n\t\t\t\t\tif (xtendFunction == null) {\n\t\t\t\t\t\tcreateNodeForFeature(dispatcherNode, inferredType, dispatchCase, dispatchCase);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateNodeForFeature(dispatcherNode, inferredType, dispatchCase, xtendFunction);\n\t\t\t\t\t}\n\t\t\t\t\tprocessedFeatures.add(dispatchCase);\n\t\t\t\t}\n\t\t\t}\n\t\t\tIterable<JvmFeature> remainingFeatures;\n\t\t\tif (getCurrentMode() == SHOW_INHERITED_MODE) {\n\t\t\t\tremainingFeatures = filter(\n\t\t\t\t\t\tfeatureOverridesService.getAllJvmFeatures(typeReferences.createTypeRef(inferredType)),\n\t\t\t\t\t\tnew Predicate<JvmMember>() {\n\t\t\t\t\t\t\tpublic boolean apply(JvmMember input) {\n\t\t\t\t\t\t\t\treturn visibilityService.isVisible(input, inferredType);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tremainingFeatures = filter(inferredType.getMembers(), JvmFeature.class);\n\t\t\t}\n\t\t\tfor (JvmConstructor constructor : inferredType.getDeclaredConstructors()) {\n\t\t\t\tif (associations.getXtendConstructor(constructor) == null)\n\t\t\t\t\tprocessedFeatures.add(constructor);\n\t\t\t}\n\t\t\tfor (JvmFeature feature : remainingFeatures) {\n\t\t\t\tif (!processedFeatures.contains(feature)) {\n\t\t\t\t\tEObject primarySourceElement = associations.getPrimarySourceElement(feature);\n\t\t\t\t\tcreateNodeForFeature(parentNode, inferredType, feature, \n\t\t\t\t\t\t\tprimarySourceElement != null ? primarySourceElement : feature);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (XtendMember member : xtendClass.getMembers())\n\t\t\t\tcreateEObjectNode(parentNode, member);\n\t\t}\n\t}","commit_id":"bb41204967a4cd8f745858887937b1ce8e798fb5","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testMixedDispatch_0() throws Exception {\n\t\tsetShowInherited(false);\n\t\tworkbenchHelper.createFile(\"test/Super.java\", \n\t\t\t\t\"package test; \" + \n\t\t\t\t\"public class Super {\" + \n\t\t\t\t\"  protected void _foo(String x) { }\" + \n\t\t\t\t\"}\");\n\t\twaitForAutoBuild();\n\t\tString model = \n\t\t\t\t\"package test \" + \n\t\t\t\t\"class Foo extends Super {\" + \n\t\t\t\t\"  def dispatch void foo(Number x) { }\" +\n\t\t\t\t\"}\";\n\t\tAssertBuilder assertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tAssertBuilder sub = assertBuilder.child(1, \"Foo\").numChildren(1);\n\t\tsub.child(0, \"foo(Serializable) : void\").numChildren(1).child(0, \"foo(Number) : void\").numChildren(0);\n\n\t\tsetShowInherited(true);\n\t\tassertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tsub = assertBuilder.child(1, \"Foo\").numChildren(14);\n\t\tsub.child(0, \"new() - java.lang.Object\");\n\t\tsub.child(1, \"new() - test.Super\");\n\t\tAssertBuilder foo = sub.child(2, \"foo(Serializable) : void\").numChildren(2);\n\t\tfoo.child(0, \"_foo(String) : void - test.Super\").numChildren(0);\n\t\tfoo.child(1, \"foo(Number) : void\").numChildren(0);\n\t\tsub.child(3, \"clone() : Object - java.lang.Object\");\n\t\tsub.child(4, \"equals(Object) : boolean - java.lang.Object\");\n\t\tsub.child(5, \"finalize() : void - java.lang.Object\");\n\t\tsub.child(6, \"getClass() : Class<?> - java.lang.Object\");\n\t\tsub.child(7, \"hashCode() : int - java.lang.Object\");\n\t\tsub.child(8, \"notify() : void - java.lang.Object\");\n\t\tsub.child(9, \"notifyAll() : void - java.lang.Object\");\n\t\tsub.child(10, \"toString() : String - java.lang.Object\");\n\t\tsub.child(11, \"wait() : void - java.lang.Object\");\n\t\tsub.child(12, \"wait(long) : void - java.lang.Object\");\n\t\tsub.child(13, \"wait(long, int) : void - java.lang.Object\");\n\n\t}","id":56483,"modified_method":"public void testMixedDispatch_0() throws Exception {\n\t\tsetShowInherited(false);\n\t\tworkbenchHelper.createFile(\"test/Super.java\", \n\t\t\t\t\"package test; \" + \n\t\t\t\t\"public class Super {\" + \n\t\t\t\t\"  protected void _foo(String x) { }\" + \n\t\t\t\t\"}\");\n\t\twaitForAutoBuild();\n\t\tString model = \n\t\t\t\t\"package test \" + \n\t\t\t\t\"class Foo extends Super {\" + \n\t\t\t\t\"  def dispatch void foo(Number x) { }\" +\n\t\t\t\t\"}\";\n\t\tAssertBuilder assertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tAssertBuilder sub = assertBuilder.child(1, \"Foo\").numChildren(1).hasTextRegion(true);\n\t\tsub.child(0, \"foo(Serializable) : void\").numChildren(1).child(0, \"foo(Number) : void\").numChildren(0).hasTextRegion(true);\n\n\t\tsetShowInherited(true);\n\t\tassertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tsub = assertBuilder.child(1, \"Foo\").numChildren(14).hasTextRegion(true);\n\t\tsub.child(0, \"new() - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(1, \"new() - test.Super\").hasTextRegion(false);\n\t\tAssertBuilder foo = sub.child(2, \"foo(Serializable) : void\").numChildren(2).hasTextRegion(true);\n\t\tfoo.child(0, \"_foo(String) : void - test.Super\").numChildren(0).hasTextRegion(false);\n\t\tfoo.child(1, \"foo(Number) : void\").numChildren(0).hasTextRegion(true);\n\t\tsub.child(3, \"clone() : Object - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(4, \"equals(Object) : boolean - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(5, \"finalize() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(6, \"getClass() : Class<?> - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(7, \"hashCode() : int - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(8, \"notify() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(9, \"notifyAll() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(10, \"toString() : String - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(11, \"wait() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(12, \"wait(long) : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(13, \"wait(long, int) : void - java.lang.Object\").hasTextRegion(false);\n\n\t}","commit_id":"7bc23bc0ad46d07a3135023a2fc8f0122a313e06","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testMethodsFromSuper() throws Exception {\n\t\tsetShowInherited(false);\n\t\tworkbenchHelper.createFile(\"test/Super.java\", \n\t\t\t\t\"package test; \" + \n\t\t\t\t\"public class Super {\" + \n\t\t\t\t\"  protected int foo(String x) { return 1; }\" + \n\t\t\t\t\"  private String bar() { return null; }\" + \n\t\t\t\t\"}\");\n\t\twaitForAutoBuild();\n\t\tString model = \n\t\t\t\t\"package test \" + \n\t\t\t\t\"class Foo extends Super {\" + \n\t\t\t\t\"  def Number baz() { null }\" +\n\t\t\t\t\"}\";\n\t\tAssertBuilder assertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tAssertBuilder sub = assertBuilder.child(1, \"Foo\").numChildren(1);\n\t\tsub.child(0, \"baz() : Number\").numChildren(0);\n\n\t\tsetShowInherited(true);\n\t\tassertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tsub = assertBuilder.child(1, \"Foo\").numChildren(15);\n\t\tsub.child(0, \"new() - java.lang.Object\");\n\t\tsub.child(1, \"new() - test.Super\");\n\t\tsub.child(2, \"baz() : Number\").numChildren(0);\n\t\tsub.child(3, \"clone() : Object - java.lang.Object\");\n\t\tsub.child(4, \"equals(Object) : boolean - java.lang.Object\");\n\t\tsub.child(5, \"finalize() : void - java.lang.Object\");\n\t\tsub.child(6, \"foo(String) : int - test.Super\").numChildren(0);\n\t\tsub.child(7, \"getClass() : Class<?> - java.lang.Object\");\n\t\tsub.child(8, \"hashCode() : int - java.lang.Object\");\n\t\tsub.child(9, \"notify() : void - java.lang.Object\");\n\t\tsub.child(10, \"notifyAll() : void - java.lang.Object\");\n\t\tsub.child(11, \"toString() : String - java.lang.Object\");\n\t\tsub.child(12, \"wait() : void - java.lang.Object\");\n\t\tsub.child(13, \"wait(long) : void - java.lang.Object\");\n\t\tsub.child(14, \"wait(long, int) : void - java.lang.Object\");\n\t\t// private method bar() stays invisible\n\t}","id":56484,"modified_method":"public void testMethodsFromSuper() throws Exception {\n\t\tsetShowInherited(false);\n\t\tworkbenchHelper.createFile(\"test/Super.java\", \n\t\t\t\t\"package test; \" + \n\t\t\t\t\"public class Super {\" + \n\t\t\t\t\"  protected int foo(String x) { return 1; }\" + \n\t\t\t\t\"  private String bar() { return null; }\" + \n\t\t\t\t\"}\");\n\t\twaitForAutoBuild();\n\t\tString model = \n\t\t\t\t\"package test \" + \n\t\t\t\t\"class Foo extends Super {\" + \n\t\t\t\t\"  def Number baz() { null }\" +\n\t\t\t\t\"}\";\n\t\tAssertBuilder assertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tAssertBuilder sub = assertBuilder.child(1, \"Foo\").numChildren(1).hasTextRegion(true);\n\t\tsub.child(0, \"baz() : Number\").numChildren(0).hasTextRegion(true);\n\n\t\tsetShowInherited(true);\n\t\tassertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tsub = assertBuilder.child(1, \"Foo\").numChildren(15);\n\t\tsub.child(0, \"new() - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(1, \"new() - test.Super\").hasTextRegion(false);\n\t\tsub.child(2, \"baz() : Number\").numChildren(0).hasTextRegion(true);\n\t\tsub.child(3, \"clone() : Object - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(4, \"equals(Object) : boolean - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(5, \"finalize() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(6, \"foo(String) : int - test.Super\").numChildren(0).hasTextRegion(false);\n\t\tsub.child(7, \"getClass() : Class<?> - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(8, \"hashCode() : int - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(9, \"notify() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(10, \"notifyAll() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(11, \"toString() : String - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(12, \"wait() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(13, \"wait(long) : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(14, \"wait(long, int) : void - java.lang.Object\").hasTextRegion(false);\n\t\t// private method bar() stays invisible\n\t}","commit_id":"7bc23bc0ad46d07a3135023a2fc8f0122a313e06","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testFieldsFromSuper() throws Exception {\n\t\tsetShowInherited(false);\n\t\tworkbenchHelper.createFile(\"test/Super.java\", \n\t\t\t\t\"package test; \" + \n\t\t\t\t\"public class Super {\" + \n\t\t\t\t\"  protected int foo;\" + \n\t\t\t\t\"  private String bar;\" + \n\t\t\t\t\"}\");\n\t\twaitForAutoBuild();\n\t\tString model =\n\t\t\t\t\"package test \" + \n\t\t\t\t\"class Foo extends Super {\" + \n\t\t\t\t\"  Number baz\" +\n\t\t\t\t\"}\";\n\t\tAssertBuilder assertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tAssertBuilder sub = assertBuilder.child(1, \"Foo\").numChildren(1);\n\t\tsub.child(0, \"baz : Number\").numChildren(0);\n\n\t\tsetShowInherited(true);\n\t\tassertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tsub = assertBuilder.child(1, \"Foo\").numChildren(15);\n\t\tsub.child(0, \"baz : Number\").numChildren(0);\n\t\tsub.child(1, \"foo : int - test.Super\").numChildren(0);\n\t\tsub.child(2, \"new() - java.lang.Object\");\n\t\tsub.child(3, \"new() - test.Super\");\n\t\tsub.child(4, \"clone() : Object - java.lang.Object\");\n\t\tsub.child(5, \"equals(Object) : boolean - java.lang.Object\");\n\t\tsub.child(6, \"finalize() : void - java.lang.Object\");\n\t\tsub.child(7, \"getClass() : Class<?> - java.lang.Object\");\n\t\tsub.child(8, \"hashCode() : int - java.lang.Object\");\n\t\tsub.child(9, \"notify() : void - java.lang.Object\");\n\t\tsub.child(10, \"notifyAll() : void - java.lang.Object\");\n\t\tsub.child(11, \"toString() : String - java.lang.Object\");\n\t\tsub.child(12, \"wait() : void - java.lang.Object\");\n\t\tsub.child(13, \"wait(long) : void - java.lang.Object\");\n\t\tsub.child(14, \"wait(long, int) : void - java.lang.Object\");\n\t\t// private field bar stays invisible\n\t}","id":56485,"modified_method":"public void testFieldsFromSuper() throws Exception {\n\t\tsetShowInherited(false);\n\t\tworkbenchHelper.createFile(\"test/Super.java\", \n\t\t\t\t\"package test; \" + \n\t\t\t\t\"public class Super {\" + \n\t\t\t\t\"  protected int foo;\" + \n\t\t\t\t\"  private String bar;\" + \n\t\t\t\t\"}\");\n\t\twaitForAutoBuild();\n\t\tString model =\n\t\t\t\t\"package test \" + \n\t\t\t\t\"class Foo extends Super {\" + \n\t\t\t\t\"  Number baz\" +\n\t\t\t\t\"}\";\n\t\tAssertBuilder assertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tAssertBuilder sub = assertBuilder.child(1, \"Foo\").numChildren(1).hasTextRegion(true);\n\t\tsub.child(0, \"baz : Number\").numChildren(0).hasTextRegion(true);\n\n\t\tsetShowInherited(true);\n\t\tassertBuilder = newAssertBuilder(model).numChildren(2);\n\t\tsub = assertBuilder.child(1, \"Foo\").numChildren(15);\n\t\tsub.child(0, \"baz : Number\").numChildren(0).hasTextRegion(true);\n\t\tsub.child(1, \"foo : int - test.Super\").numChildren(0).hasTextRegion(false);\n\t\tsub.child(2, \"new() - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(3, \"new() - test.Super\").hasTextRegion(false);\n\t\tsub.child(4, \"clone() : Object - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(5, \"equals(Object) : boolean - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(6, \"finalize() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(7, \"getClass() : Class<?> - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(8, \"hashCode() : int - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(9, \"notify() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(10, \"notifyAll() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(11, \"toString() : String - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(12, \"wait() : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(13, \"wait(long) : void - java.lang.Object\").hasTextRegion(false);\n\t\tsub.child(14, \"wait(long, int) : void - java.lang.Object\").hasTextRegion(false);\n\t\t// private field bar stays invisible\n\t}","commit_id":"7bc23bc0ad46d07a3135023a2fc8f0122a313e06","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void createFeatureNodes(IOutlineNode parentNode, XtendClass xtendClass) {\n\t\tfinal JvmGenericType inferredType = associations.getInferredType(xtendClass);\n\t\tif (inferredType != null) {\n\t\t\tMultimap<JvmOperation, JvmOperation> dispatcher2dispatched = dispatchingSupport.getDispatcher2dispatched(\n\t\t\t\t\txtendClass, getCurrentMode() == HIDE_INHERITED_MODE);\n\t\t\tSet<JvmFeature> processedFeatures = newHashSet();\n\t\t\tfor (JvmOperation dispatcher : dispatcher2dispatched.keySet()) {\n\t\t\t\tXtendFeatureNode dispatcherNode = createNodeForFeature(parentNode, inferredType, dispatcher, dispatcher);\n\t\t\t\tdispatcherNode.setDispatch(true);\n\t\t\t\tprocessedFeatures.add(dispatcher);\n\t\t\t\tfor (JvmOperation dispatchCase : dispatcher2dispatched.get(dispatcher)) {\n\t\t\t\t\tXtendFunction xtendFunction = associations.getXtendFunction(dispatchCase);\n\t\t\t\t\tif (xtendFunction == null) {\n\t\t\t\t\t\tcreateNodeForFeature(dispatcherNode, inferredType, dispatchCase, dispatchCase);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateNodeForFeature(dispatcherNode, inferredType, dispatchCase, xtendFunction);\n\t\t\t\t\t}\n\t\t\t\t\tprocessedFeatures.add(dispatchCase);\n\t\t\t\t}\n\t\t\t}\n\t\t\tIterable<JvmFeature> remainingFeatures;\n\t\t\tif (getCurrentMode() == SHOW_INHERITED_MODE) {\n\t\t\t\tremainingFeatures = filter(\n\t\t\t\t\t\tfeatureOverridesService.getAllJvmFeatures(typeReferences.createTypeRef(inferredType)),\n\t\t\t\t\t\tnew Predicate<JvmMember>() {\n\t\t\t\t\t\t\tpublic boolean apply(JvmMember input) {\n\t\t\t\t\t\t\t\treturn visibilityService.isVisible(input, inferredType);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tremainingFeatures = filter(inferredType.getMembers(), JvmFeature.class);\n\t\t\t}\n\t\t\tfor (JvmConstructor constructor : inferredType.getDeclaredConstructors()) {\n\t\t\t\tif (associations.getXtendConstructor(constructor) == null)\n\t\t\t\t\tprocessedFeatures.add(constructor);\n\t\t\t}\n\t\t\tfor (JvmFeature feature : remainingFeatures) {\n\t\t\t\tif (!processedFeatures.contains(feature)) {\n\t\t\t\t\tcreateNodeForFeature(parentNode, inferredType, feature, feature);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (XtendMember member : xtendClass.getMembers())\n\t\t\t\tcreateEObjectNode(parentNode, member);\n\t\t}\n\t}","id":56486,"modified_method":"protected void createFeatureNodes(IOutlineNode parentNode, XtendClass xtendClass) {\n\t\tfinal JvmGenericType inferredType = associations.getInferredType(xtendClass);\n\t\tif (inferredType != null) {\n\t\t\tMultimap<JvmOperation, JvmOperation> dispatcher2dispatched = dispatchingSupport.getDispatcher2dispatched(\n\t\t\t\t\txtendClass, getCurrentMode() == HIDE_INHERITED_MODE);\n\t\t\tSet<JvmFeature> processedFeatures = newHashSet();\n\t\t\tfor (JvmOperation dispatcher : dispatcher2dispatched.keySet()) {\n\t\t\t\tXtendFeatureNode dispatcherNode = createNodeForFeature(parentNode, inferredType, dispatcher, dispatcher);\n\t\t\t\tdispatcherNode.setDispatch(true);\n\t\t\t\tprocessedFeatures.add(dispatcher);\n\t\t\t\tfor (JvmOperation dispatchCase : dispatcher2dispatched.get(dispatcher)) {\n\t\t\t\t\tXtendFunction xtendFunction = associations.getXtendFunction(dispatchCase);\n\t\t\t\t\tif (xtendFunction == null) {\n\t\t\t\t\t\tcreateNodeForFeature(dispatcherNode, inferredType, dispatchCase, dispatchCase);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateNodeForFeature(dispatcherNode, inferredType, dispatchCase, xtendFunction);\n\t\t\t\t\t}\n\t\t\t\t\tprocessedFeatures.add(dispatchCase);\n\t\t\t\t}\n\t\t\t}\n\t\t\tIterable<JvmFeature> remainingFeatures;\n\t\t\tif (getCurrentMode() == SHOW_INHERITED_MODE) {\n\t\t\t\tremainingFeatures = filter(\n\t\t\t\t\t\tfeatureOverridesService.getAllJvmFeatures(typeReferences.createTypeRef(inferredType)),\n\t\t\t\t\t\tnew Predicate<JvmMember>() {\n\t\t\t\t\t\t\tpublic boolean apply(JvmMember input) {\n\t\t\t\t\t\t\t\treturn visibilityService.isVisible(input, inferredType);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tremainingFeatures = filter(inferredType.getMembers(), JvmFeature.class);\n\t\t\t}\n\t\t\tfor (JvmConstructor constructor : inferredType.getDeclaredConstructors()) {\n\t\t\t\tif (associations.getXtendConstructor(constructor) == null)\n\t\t\t\t\tprocessedFeatures.add(constructor);\n\t\t\t}\n\t\t\tfor (JvmFeature feature : remainingFeatures) {\n\t\t\t\tif (!processedFeatures.contains(feature)) {\n\t\t\t\t\tEObject primarySourceElement = associations.getPrimarySourceElement(feature);\n\t\t\t\t\tcreateNodeForFeature(parentNode, inferredType, feature, \n\t\t\t\t\t\t\tprimarySourceElement != null ? primarySourceElement : feature);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (XtendMember member : xtendClass.getMembers())\n\t\t\t\tcreateEObjectNode(parentNode, member);\n\t\t}\n\t}","commit_id":"7bc23bc0ad46d07a3135023a2fc8f0122a313e06","url":"https://github.com/eclipse/xtext"},{"original_method":"public String getProtocol()\n    {\n        return \"QUARTZ\";\n    }","id":56487,"modified_method":"public String getProtocol()\n    {\n        return \"quartz\";\n    }","commit_id":"cdcfff2773064c9fde9d41d718a6acd45dd1c928","url":"https://github.com/mulesoft/mule"},{"original_method":"public Object getValidMessage() throws Exception\n    {\n        // TODO Auto-generated method stub\n        return null;\n    }","id":56488,"modified_method":"public Object getValidMessage() throws Exception\n    {\n        return \"test\";\n    }","commit_id":"cdcfff2773064c9fde9d41d718a6acd45dd1c928","url":"https://github.com/mulesoft/mule"},{"original_method":"public QuartzMessageReceiver(UMOConnector connector, UMOComponent component, UMOEndpoint endpoint)\n            throws InitialisationException\n    {\n        super(connector, component, endpoint);\n    }","id":56489,"modified_method":"public QuartzMessageReceiver(UMOConnector connector, UMOComponent component, UMOEndpoint endpoint)\n            throws InitialisationException\n    {\n        super(connector, component, endpoint);\n        this.connector = (QuartzConnector)connector;\n    }","commit_id":"cdcfff2773064c9fde9d41d718a6acd45dd1c928","url":"https://github.com/mulesoft/mule"},{"original_method":"public void doStart() throws UMOException\n    {\n        try {\n            QuartzConnector connector = (QuartzConnector) this.connector;\n            Scheduler s = connector.getScheduler();\n\n            JobDetail jb = new JobDetail();\n            jb.setName(endpoint.getEndpointURI().toString());\n            jb.setGroup(\"mule\");\n            jb.setJobClass(MuleJob.class);\n            JobDataMap map = new JobDataMap();\n            map.put(PROP_DISPATCHER, this);\n            jb.setJobDataMap(map);\n\n            Trigger trigger = null;\n            String cron = getStringProperty(QuartzConnector.PROPERTY_CRON_EXPRESSION);\n            String itv = getStringProperty(QuartzConnector.PROPERTY_REPEAT_INTERVAL);\n            String cnt = getStringProperty(QuartzConnector.PROPERTY_REPEAT_COUNT);\n            String del = getStringProperty(QuartzConnector.PROPERTY_START_DELAY);\n            if (cron != null) {\n                CronTrigger ctrigger = new CronTrigger();\n                ctrigger.setCronExpression(cron);\n                trigger = ctrigger;\n            } else if (itv != null) {\n                SimpleTrigger strigger = new SimpleTrigger();\n                strigger.setRepeatInterval(Long.parseLong(itv));\n                if (cnt != null) {\n                    strigger.setRepeatCount(Integer.parseInt(cnt));\n                } else {\n                    strigger.setRepeatCount(-1);\n                }\n                trigger = strigger;\n            } else {\n                throw new IllegalArgumentException(\"One of cron or interval property must be set\");\n            }\n            long start = System.currentTimeMillis();\n            if (del != null) {\n                start += Long.parseLong(del);\n            }\n            trigger.setStartTime(new Date(start));\n            trigger.setName(endpoint.getEndpointURI().toString());\n            trigger.setGroup(\"mule\");\n            trigger.setJobName(endpoint.getEndpointURI().toString());\n            trigger.setJobGroup(\"mule\");\n\n            s.scheduleJob(jb, trigger);\n            s.start();\n        } catch (Exception e) {\n            throw new EndpointException(new Message(Messages.FAILED_TO_START_X, \"Quartz receiver\"), e);\n        }\n    }","id":56490,"modified_method":"public void doStart() throws UMOException\n    {\n        try {\n            Scheduler scheduler = connector.getScheduler();\n\n            JobDetail jobDetail = new JobDetail();\n            jobDetail.setName(endpoint.getEndpointURI().toString());\n            jobDetail.setJobClass(MuleReceiverJob.class);\n            JobDataMap jobDataMap = new JobDataMap();\n            jobDataMap.put(QUARTZ_RECEIVER_PROPERTY, this);\n            jobDataMap.putAll(endpoint.getProperties());\n            jobDetail.setJobDataMap(jobDataMap);\n\n            Trigger trigger = null;\n            String cronExpression = jobDataMap.getString(QuartzConnector.PROPERTY_CRON_EXPRESSION);\n            String repeatInterval = jobDataMap.getString(QuartzConnector.PROPERTY_REPEAT_INTERVAL);\n            String repeatCount = jobDataMap.getString(QuartzConnector.PROPERTY_REPEAT_COUNT);\n            String startDelay = jobDataMap.getString(QuartzConnector.PROPERTY_START_DELAY);\n            String groupName = jobDataMap.getString(QuartzConnector.PROPERTY_GROUP_NAME);\n            String jobGroupName = jobDataMap.getString(QuartzConnector.PROPERTY_JOB_GROUP_NAME);\n\n            if(groupName==null) groupName = QuartzConnector.DEFUALT_GROUP_NAME;\n            if(jobGroupName==null) jobGroupName = groupName;\n\n            jobDetail.setGroup(groupName);\n\n            if (cronExpression != null) {\n                CronTrigger ctrigger = new CronTrigger();\n                ctrigger.setCronExpression(cronExpression);\n                trigger = ctrigger;\n            } else if (repeatInterval != null) {\n                SimpleTrigger strigger = new SimpleTrigger();\n                strigger.setRepeatInterval(Long.parseLong(repeatInterval));\n                if (repeatCount != null) {\n                    strigger.setRepeatCount(Integer.parseInt(repeatCount));\n                } else {\n                    strigger.setRepeatCount(-1);\n                }\n                trigger = strigger;\n            } else {\n                throw new IllegalArgumentException(new Message(\"quartz\", 1).getMessage());\n            }\n            long start = System.currentTimeMillis();\n            if (startDelay != null) {\n                start += Long.parseLong(startDelay);\n            }\n            trigger.setStartTime(new Date(start));\n            trigger.setName(endpoint.getEndpointURI().toString());\n            trigger.setGroup(groupName);\n            trigger.setJobName(endpoint.getEndpointURI().toString());\n            trigger.setJobGroup(jobGroupName);\n\n            scheduler.scheduleJob(jobDetail, trigger);\n            scheduler.start();\n        } catch (Exception e) {\n            throw new EndpointException(new Message(Messages.FAILED_TO_START_X, \"Quartz receiver\"), e);\n        }\n    }","commit_id":"cdcfff2773064c9fde9d41d718a6acd45dd1c928","url":"https://github.com/mulesoft/mule"},{"original_method":"public Object onCall(UMOEventContext eventContext) throws Exception\n    {\n        if (QuartzFunctionalTestCase.countDown != null) {\n            QuartzFunctionalTestCase.countDown.unlock();\n        }\n        return null;\n    }","id":56491,"modified_method":"public Object onCall(UMOEventContext eventContext) throws Exception\n    {\n       if (eventContext.getMessageAsString().equals(\"quartz test\")) {\n            if (QuartzFunctionalTestCase.countDown != null) {\n                QuartzFunctionalTestCase.countDown.unlock();\n            }\n        } else {\n            throw new IllegalArgumentException(\"Unrecognised event payload\");\n        }\n        return null;\n    }","commit_id":"cdcfff2773064c9fde9d41d718a6acd45dd1c928","url":"https://github.com/mulesoft/mule"},{"original_method":"public void execute(ProjectInternal project) {\n        TaskContainerInternal tasks = project.getImplicitTasks();\n        Task task = tasks.add(\"help\");\n        task.setDescription(\"Displays a help message\");\n        task.setGroup(\"help\");\n        task.doFirst(new Action<Task>() {\n            public void execute(Task task) {\n                System.out.println();\n                System.out.println(\"This is the help message.\");\n            }\n        });\n        task = tasks.add(\"projects\", ProjectReportTask.class);\n        task.setDescription(\"Displays a list of the projects in this build.\");\n        task.setGroup(\"help\");\n        task = tasks.add(\"tasks\", TaskReportTask.class);\n        task.setDescription(String.format(\"Displays a list of the tasks in %s.\", project));\n        task.setGroup(\"help\");\n        task = tasks.add(\"dependencies\", DependencyReportTask.class);\n        task.setDescription(String.format(\"Displays a list of the dependencies of %s.\", project));\n        task.setGroup(\"help\");\n        task = tasks.add(\"properties\", PropertyReportTask.class);\n        task.setDescription(String.format(\"Displays a list of the properties of %s.\", project));\n        task.setGroup(\"help\");\n    }","id":56492,"modified_method":"public void execute(ProjectInternal project) {\n        TaskContainerInternal tasks = project.getImplicitTasks();\n\n        Task task = tasks.add(HELP_TASK, Help.class);\n        task.setDescription(\"Displays a help message\");\n        task.setGroup(HELP_GROUP);\n\n        task = tasks.add(\"projects\", ProjectReportTask.class);\n        task.setDescription(\"Displays a list of the projects in this build.\");\n        task.setGroup(HELP_GROUP);\n\n        task = tasks.add(\"tasks\", TaskReportTask.class);\n        task.setDescription(String.format(\"Displays a list of the tasks in %s.\", project));\n        task.setGroup(HELP_GROUP);\n\n        task = tasks.add(\"dependencies\", DependencyReportTask.class);\n        task.setDescription(String.format(\"Displays a list of the dependencies of %s.\", project));\n        task.setGroup(HELP_GROUP);\n\n        task = tasks.add(\"properties\", PropertyReportTask.class);\n        task.setDescription(String.format(\"Displays a list of the properties of %s.\", project));\n        task.setGroup(HELP_GROUP);\n    }","commit_id":"6b90ba1221213b8fe3364864def9b2714b08e1cf","url":"https://github.com/gradle/gradle"},{"original_method":"private void showUsage(PrintStream out) {\n        String appName = System.getProperty(\"org.gradle.appname\", \"gradle\");\n        out.println();\n        out.format(\"USAGE: %s [option...] [task...]%n\", appName);\n        out.println();\n        parameterConverter.showHelp(out);\n    }","id":56493,"modified_method":"private void showUsage(PrintStream out) {\n        String appName = System.getProperty(\"org.gradle.appname\", \"gradle\");\n        out.println();\n        out.print(\"USAGE: \");\n        new GradleLauncherMetaData().describeCommand(out, \"[option...]\", \"[task...]\");\n        out.println();\n        out.println();\n        parameterConverter.showHelp(out);\n    }","commit_id":"6b90ba1221213b8fe3364864def9b2714b08e1cf","url":"https://github.com/gradle/gradle"},{"original_method":"public void select(GradleInternal gradle) {\n        if (getDelegate() == null) {\n            // Gather the default tasks from this first group project\n            ProjectInternal project = gradle.getDefaultProject();\n            defaultTasks = project.getDefaultTasks();\n            if (defaultTasks.size() == 0) {\n                throw new TaskSelectionException(String.format(\n                        \"No tasks have been specified and %s has not defined any default tasks.\", project));\n            }\n            setDelegate(new TaskNameResolvingBuildExecuter(defaultTasks));\n        }\n\n        super.select(gradle);\n    }","id":56494,"modified_method":"public void select(GradleInternal gradle) {\n        if (getDelegate() == null) {\n            // Gather the default tasks from this first group project\n            ProjectInternal project = gradle.getDefaultProject();\n            defaultTasks = project.getDefaultTasks();\n            displayName = String.format(\"project default tasks %s\", GUtil.toString(defaultTasks));\n            if (defaultTasks.size() == 0) {\n                defaultTasks = Arrays.asList(ImplicitTasksConfigurer.HELP_TASK);\n                displayName = String.format(\"default task %s\", GUtil.toString(defaultTasks));\n            }\n            setDelegate(new TaskNameResolvingBuildExecuter(defaultTasks));\n        }\n\n        super.select(gradle);\n    }","commit_id":"6b90ba1221213b8fe3364864def9b2714b08e1cf","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public String getDisplayName() {\n        return String.format(\"project default tasks %s\", GUtil.toString(defaultTasks));\n    }","id":56495,"modified_method":"@Override\n    public String getDisplayName() {\n        return displayName;\n    }","commit_id":"6b90ba1221213b8fe3364864def9b2714b08e1cf","url":"https://github.com/gradle/gradle"},{"original_method":"protected void commit (MetaData.Response info)\n    {\n        _committedMetaData=info;\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"Commit {} to {}\",info,this);\n    }","id":56496,"modified_method":"protected void commit (MetaData.Response info)\n    {\n        _committedMetaData=info;\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"COMMIT for {} on {}{}{} {} {}{}{}\",getRequest().getRequestURI(),this,System.lineSeparator(),\n                info.getStatus(),info.getReason(),info.getVersion(),System.lineSeparator(),\n                info.getFields());\n    }","commit_id":"23cb28e856fb61155ccdd577ec5ff9011c6c4676","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void onRequest(MetaData.Request request)\n    {\n        _requests.incrementAndGet();\n        _request.setTimeStamp(System.currentTimeMillis());\n        HttpFields fields = _response.getHttpFields();\n        if (_configuration.getSendDateHeader() && !fields.contains(HttpHeader.DATE))\n            fields.put(_connector.getServer().getDateField());\n\n        _request.setMetaData(request);\n    }","id":56497,"modified_method":"public void onRequest(MetaData.Request request)\n    {\n        _requests.incrementAndGet();\n        _request.setTimeStamp(System.currentTimeMillis());\n        HttpFields fields = _response.getHttpFields();\n        if (_configuration.getSendDateHeader() && !fields.contains(HttpHeader.DATE))\n            fields.put(_connector.getServer().getDateField());\n\n        _request.setMetaData(request);\n\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"REQUEST for {} on {}{}{} {} {}{}{}\",request.getURIString(),this,System.lineSeparator(),\n                request.getMethod(),request.getURIString(),request.getVersion(),System.lineSeparator(),\n                request.getFields());\n    }","commit_id":"23cb28e856fb61155ccdd577ec5ff9011c6c4676","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void onCompleted()\n    {\n        if (_requestLog!=null )\n            _requestLog.log(_request, _response);\n\n        _transport.onCompleted();\n    }","id":56498,"modified_method":"public void onCompleted()\n    {\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"COMPLETE for {} written={}\",getRequest().getRequestURI(),getBytesWritten());\n        \n        if (_requestLog!=null )\n            _requestLog.log(_request, _response);\n\n        _transport.onCompleted();\n    }","commit_id":"23cb28e856fb61155ccdd577ec5ff9011c6c4676","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public static void main( String[] args ) throws Exception\n    {\n        // Path to as-built jetty-distribution directory\n        String jettyHomeBuild = \"../../jetty-distribution/target/distribution\";\n        \n        // Find jetty home and base directories\n        String homePath = System.getProperty(\"jetty.home\", jettyHomeBuild);\n        File start_jar = new File(homePath,\"start.jar\");\n        if (!start_jar.exists())\n        {\n            homePath = jettyHomeBuild = \"jetty-distribution/target/distribution\";\n            start_jar = new File(homePath,\"start.jar\");\n            if (!start_jar.exists())\n                throw new FileNotFoundException(start_jar.toString());\n        }\n\n        File homeDir = new File(homePath);\n\n        String basePath = System.getProperty(\"jetty.base\", homeDir + \"/demo-base\");\n        File baseDir = new File(basePath);\n        if(!baseDir.exists())\n        {\n            throw new FileNotFoundException(baseDir.getAbsolutePath());\n        }\n        \n        // Configure jetty.home and jetty.base system properties\n        String jetty_home = homeDir.getAbsolutePath();\n        String jetty_base = baseDir.getAbsolutePath();\n        System.setProperty(\"jetty.home\", jetty_home);\n        System.setProperty(\"jetty.base\", jetty_base);\n\n\n        // === jetty.xml ===\n        // Setup Threadpool\n        QueuedThreadPool threadPool = new QueuedThreadPool();\n        threadPool.setMaxThreads(500);\n\n        // Server\n        Server server = new Server(threadPool);\n\n        // Scheduler\n        server.addBean(new ScheduledExecutorScheduler());\n\n        // HTTP Configuration\n        HttpConfiguration http_config = new HttpConfiguration();\n        http_config.setSecureScheme(\"https\");\n        http_config.setSecurePort(8443);\n        http_config.setOutputBufferSize(32768);\n        http_config.setRequestHeaderSize(8192);\n        http_config.setResponseHeaderSize(8192);\n        http_config.setSendServerVersion(true);\n        http_config.setSendDateHeader(false);\n        // httpConfig.addCustomizer(new ForwardedRequestCustomizer());\n\n        // Handler Structure\n        HandlerCollection handlers = new HandlerCollection();\n        ContextHandlerCollection contexts = new ContextHandlerCollection();\n        handlers.setHandlers(new Handler[] { contexts, new DefaultHandler() });\n        server.setHandler(handlers);\n\n        // Extra options\n        server.setDumpAfterStart(false);\n        server.setDumpBeforeStop(false);\n        server.setStopAtShutdown(true);\n\n        // === jetty-jmx.xml ===\n        MBeanContainer mbContainer = new MBeanContainer(\n                ManagementFactory.getPlatformMBeanServer());\n        server.addBean(mbContainer);\n\n\n        // === jetty-http.xml ===\n        ServerConnector http = new ServerConnector(server,\n                new HttpConnectionFactory(http_config));\n        http.setPort(8080);\n        http.setIdleTimeout(30000);\n        server.addConnector(http);\n\n\n        // === jetty-https.xml ===\n        // SSL Context Factory\n        SslContextFactory sslContextFactory = new SslContextFactory();\n        sslContextFactory.setKeyStorePath(jetty_home + \"/../../../jetty-server/src/test/config/etc/keystore\");\n        sslContextFactory.setKeyStorePassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        sslContextFactory.setKeyManagerPassword(\"OBF:1u2u1wml1z7s1z7a1wnl1u2g\");\n        sslContextFactory.setTrustStorePath(jetty_home + \"/../../../jetty-server/src/test/config/etc/keystore\");\n        sslContextFactory.setTrustStorePassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        sslContextFactory.setExcludeCipherSuites(\"SSL_RSA_WITH_DES_CBC_SHA\",\n                \"SSL_DHE_RSA_WITH_DES_CBC_SHA\", \"SSL_DHE_DSS_WITH_DES_CBC_SHA\",\n                \"SSL_RSA_EXPORT_WITH_RC4_40_MD5\",\n                \"SSL_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n                \"SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n                \"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\");\n\n        // SSL HTTP Configuration\n        HttpConfiguration https_config = new HttpConfiguration(http_config);\n        https_config.addCustomizer(new SecureRequestCustomizer());\n\n        // SSL Connector\n        ServerConnector sslConnector = new ServerConnector(server,\n            new SslConnectionFactory(sslContextFactory,HttpVersion.HTTP_1_1.asString()),\n            new HttpConnectionFactory(https_config));\n        sslConnector.setPort(8443);\n        server.addConnector(sslConnector);\n\n\n        // === jetty-deploy.xml ===\n        DeploymentManager deployer = new DeploymentManager();\n        DebugListener debug = new DebugListener(System.out,true,true,true);\n        server.addBean(debug);        \n        deployer.addLifeCycleBinding(new DebugListenerBinding(debug));\n        deployer.setContexts(contexts);\n        deployer.setContextAttribute(\n                \"org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern\",\n                \".*/servlet-api-[^/]*\\\\.jar$\");\n\n        WebAppProvider webapp_provider = new WebAppProvider();\n        webapp_provider.setMonitoredDirName(jetty_base + \"/webapps\");\n        webapp_provider.setDefaultsDescriptor(jetty_home + \"/etc/webdefault.xml\");\n        webapp_provider.setScanInterval(1);\n        webapp_provider.setExtractWars(true);\n        webapp_provider.setConfigurationManager(new PropertiesConfigurationManager());\n\n        deployer.addAppProvider(webapp_provider);\n        server.addBean(deployer);\n        \n        // === setup jetty plus ==\n        Configuration.ClassList.setServerDefault(server).addAfter(\n                \"org.eclipse.jetty.webapp.FragmentConfiguration\",\n                \"org.eclipse.jetty.plus.webapp.EnvConfiguration\",\n                \"org.eclipse.jetty.plus.webapp.PlusConfiguration\");\n\n        // === jetty-stats.xml ===\n        StatisticsHandler stats = new StatisticsHandler();\n        stats.setHandler(server.getHandler());\n        server.setHandler(stats);\n        ConnectorStatistics.addToAllConnectors(server);\n\n        // === Rewrite Handler\n        RewriteHandler rewrite = new RewriteHandler();\n        rewrite.setHandler(server.getHandler());\n        server.setHandler(rewrite);\n\n        // === jetty-requestlog.xml ===\n        NCSARequestLog requestLog = new NCSARequestLog();\n        requestLog.setFilename(jetty_home + \"/logs/yyyy_mm_dd.request.log\");\n        requestLog.setFilenameDateFormat(\"yyyy_MM_dd\");\n        requestLog.setRetainDays(90);\n        requestLog.setAppend(true);\n        requestLog.setExtended(true);\n        requestLog.setLogCookies(false);\n        requestLog.setLogTimeZone(\"GMT\");\n        RequestLogHandler requestLogHandler = new RequestLogHandler();\n        requestLogHandler.setRequestLog(requestLog);\n        handlers.addHandler(requestLogHandler);\n\n\n        // === jetty-lowresources.xml ===\n        LowResourceMonitor lowResourcesMonitor=new LowResourceMonitor(server);\n        lowResourcesMonitor.setPeriod(1000);\n        lowResourcesMonitor.setLowResourcesIdleTimeout(200);\n        lowResourcesMonitor.setMonitorThreads(true);\n        lowResourcesMonitor.setMaxConnections(0);\n        lowResourcesMonitor.setMaxMemory(0);\n        lowResourcesMonitor.setMaxLowResourcesTime(5000);\n        server.addBean(lowResourcesMonitor);\n\n\n        // === test-realm.xml ===\n        HashLoginService login = new HashLoginService();\n        login.setName(\"Test Realm\");\n        login.setConfig(jetty_base + \"/etc/realm.properties\");\n        login.setHotReload(false);\n        server.addBean(login);\n        \n        // Start the server\n        server.start();\n        server.join();\n    }","id":56499,"modified_method":"public static void main( String[] args ) throws Exception\n    {\n        // Path to as-built jetty-distribution directory\n        String jettyHomeBuild = \"../../jetty-distribution/target/distribution\";\n        \n        // Find jetty home and base directories\n        String homePath = System.getProperty(\"jetty.home\", jettyHomeBuild);\n        File start_jar = new File(homePath,\"start.jar\");\n        if (!start_jar.exists())\n        {\n            homePath = jettyHomeBuild = \"jetty-distribution/target/distribution\";\n            start_jar = new File(homePath,\"start.jar\");\n            if (!start_jar.exists())\n                throw new FileNotFoundException(start_jar.toString());\n        }\n\n        File homeDir = new File(homePath);\n\n        String basePath = System.getProperty(\"jetty.base\", homeDir + \"/demo-base\");\n        File baseDir = new File(basePath);\n        if(!baseDir.exists())\n        {\n            throw new FileNotFoundException(baseDir.getAbsolutePath());\n        }\n        \n        // Configure jetty.home and jetty.base system properties\n        String jetty_home = homeDir.getAbsolutePath();\n        String jetty_base = baseDir.getAbsolutePath();\n        System.setProperty(\"jetty.home\", jetty_home);\n        System.setProperty(\"jetty.base\", jetty_base);\n\n\n        // === jetty.xml ===\n        // Setup Threadpool\n        QueuedThreadPool threadPool = new QueuedThreadPool();\n        threadPool.setMaxThreads(500);\n\n        // Server\n        Server server = new Server(threadPool);\n\n        // Scheduler\n        server.addBean(new ScheduledExecutorScheduler());\n\n        // HTTP Configuration\n        HttpConfiguration http_config = new HttpConfiguration();\n        http_config.setSecureScheme(\"https\");\n        http_config.setSecurePort(8443);\n        http_config.setOutputBufferSize(32768);\n        http_config.setRequestHeaderSize(8192);\n        http_config.setResponseHeaderSize(8192);\n        http_config.setSendServerVersion(true);\n        http_config.setSendDateHeader(false);\n        // httpConfig.addCustomizer(new ForwardedRequestCustomizer());\n\n        // Handler Structure\n        HandlerCollection handlers = new HandlerCollection();\n        ContextHandlerCollection contexts = new ContextHandlerCollection();\n        handlers.setHandlers(new Handler[] { contexts, new DefaultHandler() });\n        server.setHandler(handlers);\n\n        // Extra options\n        server.setDumpAfterStart(false);\n        server.setDumpBeforeStop(false);\n        server.setStopAtShutdown(true);\n\n        // === jetty-jmx.xml ===\n        MBeanContainer mbContainer = new MBeanContainer(\n                ManagementFactory.getPlatformMBeanServer());\n        server.addBean(mbContainer);\n\n\n        // === jetty-http.xml ===\n        ServerConnector http = new ServerConnector(server,\n                new HttpConnectionFactory(http_config));\n        http.setPort(8080);\n        http.setIdleTimeout(30000);\n        server.addConnector(http);\n\n\n        // === jetty-https.xml ===\n        // SSL Context Factory\n        SslContextFactory sslContextFactory = new SslContextFactory();\n        sslContextFactory.setKeyStorePath(jetty_home + \"/../../../jetty-server/src/test/config/etc/keystore\");\n        sslContextFactory.setKeyStorePassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        sslContextFactory.setKeyManagerPassword(\"OBF:1u2u1wml1z7s1z7a1wnl1u2g\");\n        sslContextFactory.setTrustStorePath(jetty_home + \"/../../../jetty-server/src/test/config/etc/keystore\");\n        sslContextFactory.setTrustStorePassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        sslContextFactory.setExcludeCipherSuites(\"SSL_RSA_WITH_DES_CBC_SHA\",\n                \"SSL_DHE_RSA_WITH_DES_CBC_SHA\", \"SSL_DHE_DSS_WITH_DES_CBC_SHA\",\n                \"SSL_RSA_EXPORT_WITH_RC4_40_MD5\",\n                \"SSL_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n                \"SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n                \"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\");\n\n        // SSL HTTP Configuration\n        HttpConfiguration https_config = new HttpConfiguration(http_config);\n        https_config.addCustomizer(new SecureRequestCustomizer());\n\n        // SSL Connector\n        ServerConnector sslConnector = new ServerConnector(server,\n            new SslConnectionFactory(sslContextFactory,HttpVersion.HTTP_1_1.asString()),\n            new HttpConnectionFactory(https_config));\n        sslConnector.setPort(8443);\n        server.addConnector(sslConnector);\n\n\n        // === jetty-deploy.xml ===\n        DeploymentManager deployer = new DeploymentManager();\n        DebugListener debug = new DebugListener(System.err,true,true,true);\n        server.addBean(debug);        \n        deployer.addLifeCycleBinding(new DebugListenerBinding(debug));\n        deployer.setContexts(contexts);\n        deployer.setContextAttribute(\n                \"org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern\",\n                \".*/servlet-api-[^/]*\\\\.jar$\");\n\n        WebAppProvider webapp_provider = new WebAppProvider();\n        webapp_provider.setMonitoredDirName(jetty_base + \"/webapps\");\n        webapp_provider.setDefaultsDescriptor(jetty_home + \"/etc/webdefault.xml\");\n        webapp_provider.setScanInterval(1);\n        webapp_provider.setExtractWars(true);\n        webapp_provider.setConfigurationManager(new PropertiesConfigurationManager());\n\n        deployer.addAppProvider(webapp_provider);\n        server.addBean(deployer);\n        \n        // === setup jetty plus ==\n        Configuration.ClassList.setServerDefault(server).addAfter(\n                \"org.eclipse.jetty.webapp.FragmentConfiguration\",\n                \"org.eclipse.jetty.plus.webapp.EnvConfiguration\",\n                \"org.eclipse.jetty.plus.webapp.PlusConfiguration\");\n\n        // === jetty-stats.xml ===\n        StatisticsHandler stats = new StatisticsHandler();\n        stats.setHandler(server.getHandler());\n        server.setHandler(stats);\n        ConnectorStatistics.addToAllConnectors(server);\n\n        // === Rewrite Handler\n        RewriteHandler rewrite = new RewriteHandler();\n        rewrite.setHandler(server.getHandler());\n        server.setHandler(rewrite);\n\n        // === jetty-requestlog.xml ===\n        NCSARequestLog requestLog = new NCSARequestLog();\n        requestLog.setFilename(jetty_home + \"/logs/yyyy_mm_dd.request.log\");\n        requestLog.setFilenameDateFormat(\"yyyy_MM_dd\");\n        requestLog.setRetainDays(90);\n        requestLog.setAppend(true);\n        requestLog.setExtended(true);\n        requestLog.setLogCookies(false);\n        requestLog.setLogTimeZone(\"GMT\");\n        RequestLogHandler requestLogHandler = new RequestLogHandler();\n        requestLogHandler.setRequestLog(requestLog);\n        handlers.addHandler(requestLogHandler);\n\n\n        // === jetty-lowresources.xml ===\n        LowResourceMonitor lowResourcesMonitor=new LowResourceMonitor(server);\n        lowResourcesMonitor.setPeriod(1000);\n        lowResourcesMonitor.setLowResourcesIdleTimeout(200);\n        lowResourcesMonitor.setMonitorThreads(true);\n        lowResourcesMonitor.setMaxConnections(0);\n        lowResourcesMonitor.setMaxMemory(0);\n        lowResourcesMonitor.setMaxLowResourcesTime(5000);\n        server.addBean(lowResourcesMonitor);\n\n\n        // === test-realm.xml ===\n        HashLoginService login = new HashLoginService();\n        login.setName(\"Test Realm\");\n        login.setConfig(jetty_base + \"/etc/realm.properties\");\n        login.setHotReload(false);\n        server.addBean(login);\n        \n        // Start the server\n        server.start();\n        server.join();\n    }","commit_id":"23cb28e856fb61155ccdd577ec5ff9011c6c4676","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void handleAsync(HttpChannel connection) throws IOException, ServletException\n    {\n        final HttpChannelState state = connection.getRequest().getHttpChannelState();\n        final AsyncContextEvent event = state.getAsyncContextEvent();\n\n        final Request baseRequest=connection.getRequest();\n        final String path=event.getPath();\n\n        if (path!=null)\n        {\n            // this is a dispatch with a path\n            ServletContext context=event.getServletContext();\n            String query=baseRequest.getQueryString();\n            baseRequest.setURIPathQuery(URIUtil.addPaths(context==null?null:context.getContextPath(), path));\n            HttpURI uri = baseRequest.getHttpURI();\n            baseRequest.setPathInfo(uri.getDecodedPath());\n            if (uri.getQuery()!=null)\n                baseRequest.mergeQueryParameters(query,uri.getQuery(), true); //we have to assume dispatch path and query are UTF8\n        }\n\n        final String target=baseRequest.getPathInfo();\n        final HttpServletRequest request=(HttpServletRequest)event.getSuppliedRequest();\n        final HttpServletResponse response=(HttpServletResponse)event.getSuppliedResponse();\n\n        if (LOG.isDebugEnabled())\n        {\n            LOG.debug(request.getDispatcherType()+\" \"+request.getMethod()+\" \"+target+\" on \"+connection);\n            handle(target, baseRequest, request, response);\n            LOG.debug(\"RESPONSE \"+target+\"  \"+connection.getResponse().getStatus());\n        }\n        else\n            handle(target, baseRequest, request, response);\n\n    }","id":56500,"modified_method":"public void handleAsync(HttpChannel channel) throws IOException, ServletException\n    {\n        final HttpChannelState state = channel.getRequest().getHttpChannelState();\n        final AsyncContextEvent event = state.getAsyncContextEvent();\n\n        final Request baseRequest=channel.getRequest();\n        final String path=event.getPath();\n\n        if (path!=null)\n        {\n            // this is a dispatch with a path\n            ServletContext context=event.getServletContext();\n            String query=baseRequest.getQueryString();\n            baseRequest.setURIPathQuery(URIUtil.addPaths(context==null?null:context.getContextPath(), path));\n            HttpURI uri = baseRequest.getHttpURI();\n            baseRequest.setPathInfo(uri.getDecodedPath());\n            if (uri.getQuery()!=null)\n                baseRequest.mergeQueryParameters(query,uri.getQuery(), true); //we have to assume dispatch path and query are UTF8\n        }\n\n        final String target=baseRequest.getPathInfo();\n        final HttpServletRequest request=(HttpServletRequest)event.getSuppliedRequest();\n        final HttpServletResponse response=(HttpServletResponse)event.getSuppliedResponse();\n\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"{} {} {} on {}\", request.getDispatcherType(), request.getMethod(), target, channel);\n        handle(target, baseRequest, request, response);\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"handledAsync={} async={} committed={} on {}\", channel.getRequest().isHandled(),request.isAsyncStarted(),response.isCommitted(),channel);\n    }","commit_id":"23cb28e856fb61155ccdd577ec5ff9011c6c4676","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void handle(HttpChannel connection) throws IOException, ServletException\n    {\n        final String target=connection.getRequest().getPathInfo();\n        final Request request=connection.getRequest();\n        final Response response=connection.getResponse();\n\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"{} on {}{}{} {} {}{}{}\", request.getDispatcherType(), connection, System.lineSeparator(),\n                    request.getMethod(), target, request.getProtocol(), System.lineSeparator(), request.getHttpFields());\n\n        if (HttpMethod.OPTIONS.is(request.getMethod()) || \"*\".equals(target))\n        {\n            if (!HttpMethod.OPTIONS.is(request.getMethod()))\n                response.sendError(HttpStatus.BAD_REQUEST_400);\n            handleOptions(request,response);\n            if (!request.isHandled())\n                handle(target, request, request, response);\n        }\n        else\n            handle(target, request, request, response);\n\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"RESPONSE for {} h={}{}{} {}{}{}\", target, request.isHandled(), System.lineSeparator(),\n                    response.getStatus(), response.getReason(), System.lineSeparator(), response.getHttpFields());\n    }","id":56501,"modified_method":"public void handle(HttpChannel channel) throws IOException, ServletException\n    {\n        final String target=channel.getRequest().getPathInfo();\n        final Request request=channel.getRequest();\n        final Response response=channel.getResponse();\n\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"{} {} {} on {}\", request.getDispatcherType(), request.getMethod(), target, channel);\n\n        if (HttpMethod.OPTIONS.is(request.getMethod()) || \"*\".equals(target))\n        {\n            if (!HttpMethod.OPTIONS.is(request.getMethod()))\n                response.sendError(HttpStatus.BAD_REQUEST_400);\n            handleOptions(request,response);\n            if (!request.isHandled())\n                handle(target, request, request, response);\n        }\n        else\n            handle(target, request, request, response);\n\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"handled={} async={} committed={} on {}\", request.isHandled(),request.isAsyncStarted(),response.isCommitted(),channel);\n    }","commit_id":"23cb28e856fb61155ccdd577ec5ff9011c6c4676","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testNormal() throws Exception\n    {\n        String response=process(null,null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n                \"history: REQUEST\\r\\n\"+\n                \"history: initial\\r\\n\",response);\n        assertContains(\"NORMAL\",response);\n        assertNotContains(\"history: onTimeout\",response);\n        assertNotContains(\"history: onComplete\",response);\n    }","id":56502,"modified_method":"@Test\n    public void testNormal() throws Exception\n    {\n        String response=process(null,null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n                \"history: REQUEST /path\\r\\n\"+\n                \"history: initial\\r\\n\",response);\n        assertContains(\"NORMAL\",response);\n        assertNotContains(\"history: onTimeout\",response);\n        assertNotContains(\"history: onComplete\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspendResume() throws Exception\n    {\n        String response=process(\"suspend=200&resume=0\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"history: onComplete\",response);\n    }","id":56503,"modified_method":"@Test\n    public void testSuspendResume() throws Exception\n    {\n        String response=process(\"suspend=200&resume=0\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"history: onComplete\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspendWaitResumeSuspendComplete() throws Exception\n    {\n        String response=process(\"suspend=1000&resume=10&suspend2=1000&complete2=10\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: complete\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"COMPLETED\",response);\n    }","id":56504,"modified_method":"@Test\n    public void testSuspendWaitResumeSuspendComplete() throws Exception\n    {\n        String response=process(\"suspend=1000&resume=10&suspend2=1000&complete2=10\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: complete\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"COMPLETED\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspendWaitResumeSuspendWaitResume() throws Exception\n    {\n        String response=process(\"suspend=1000&resume=10&suspend2=1000&resume2=10\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"DISPATCHED\",response);\n    }","id":56505,"modified_method":"@Test\n    public void testSuspendWaitResumeSuspendWaitResume() throws Exception\n    {\n        String response=process(\"suspend=1000&resume=10&suspend2=1000&resume2=10\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"DISPATCHED\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n        public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws ServletException, IOException\n        {\n            // System.err.println(request.getDispatcherType()+\" \"+request.getRequestURI());\n            response.addHeader(\"history\",request.getDispatcherType().toString());\n\n            int read_before=0;\n            long sleep_for=-1;\n            long suspend_for=-1;\n            long suspend2_for=-1;\n            long resume_after=-1;\n            long resume2_after=-1;\n            long complete_after=-1;\n            long complete2_after=-1;\n\n            if (request.getParameter(\"read\")!=null)\n                read_before=Integer.parseInt(request.getParameter(\"read\"));\n            if (request.getParameter(\"sleep\")!=null)\n                sleep_for=Integer.parseInt(request.getParameter(\"sleep\"));\n            if (request.getParameter(\"suspend\")!=null)\n                suspend_for=Integer.parseInt(request.getParameter(\"suspend\"));\n            if (request.getParameter(\"suspend2\")!=null)\n                suspend2_for=Integer.parseInt(request.getParameter(\"suspend2\"));\n            if (request.getParameter(\"resume\")!=null)\n                resume_after=Integer.parseInt(request.getParameter(\"resume\"));\n            if (request.getParameter(\"resume2\")!=null)\n                resume2_after=Integer.parseInt(request.getParameter(\"resume2\"));\n            if (request.getParameter(\"complete\")!=null)\n                complete_after=Integer.parseInt(request.getParameter(\"complete\"));\n            if (request.getParameter(\"complete2\")!=null)\n                complete2_after=Integer.parseInt(request.getParameter(\"complete2\"));\n\n            if (request.getDispatcherType()==DispatcherType.REQUEST)\n            {\n                response.addHeader(\"history\",\"initial\");\n                if (read_before>0)\n                {\n                    byte[] buf=new byte[read_before];\n                    request.getInputStream().read(buf);\n                }\n                else if (read_before<0)\n                {\n                    InputStream in = request.getInputStream();\n                    int b=in.read();\n                    while(b!=-1)\n                        b=in.read();\n                }\n                else if (request.getContentLength()>0)\n                {\n                    new Thread()\n                    {\n                        @Override\n                        public void run()\n                        {\n                            int c=0;\n                            try\n                            {\n                                InputStream in=request.getInputStream();\n                                int b=0;\n                                while(b!=-1)\n                                    if((b=in.read())>=0)\n                                        c++;\n                                response.addHeader(\"history\",\"async-read=\"+c);\n                            }\n                            catch(Exception e)\n                            {\n                                e.printStackTrace();\n                            }\n                        }\n                    }.start();\n                }\n\n                if (suspend_for>=0)\n                {\n                    final AsyncContext async=request.startAsync();\n                    if (suspend_for>0)\n                        async.setTimeout(suspend_for);\n                    async.addListener(__listener);\n                    response.addHeader(\"history\",\"suspend\");\n\n                    if (complete_after>0)\n                    {\n                        TimerTask complete = new TimerTask()\n                        {\n                            @Override\n                            public void run()\n                            {\n                                try\n                                {\n                                    response.setStatus(200);\n                                    response.getOutputStream().println(\"COMPLETED\\n\");\n                                    response.addHeader(\"history\",\"complete\");\n                                    async.complete();\n                                }\n                                catch(Exception e)\n                                {\n                                    e.printStackTrace();\n                                }\n                            }\n                        };\n                        synchronized (_timer)\n                        {\n                            _timer.schedule(complete,complete_after);\n                        }\n                    }\n                    else if (complete_after==0)\n                    {\n                        response.setStatus(200);\n                        response.getOutputStream().println(\"COMPLETED\\n\");\n                        response.addHeader(\"history\",\"complete\");\n                        async.complete();\n                    }\n                    else if (resume_after>0)\n                    {\n                        TimerTask resume = new TimerTask()\n                        {\n                            @Override\n                            public void run()\n                            {\n                                ((HttpServletResponse)async.getResponse()).addHeader(\"history\",\"resume\");\n                                async.dispatch();\n                            }\n                        };\n                        synchronized (_timer)\n                        {\n                            _timer.schedule(resume,resume_after);\n                        }\n                    }\n                    else if (resume_after==0)\n                    {\n                        ((HttpServletResponse)async.getResponse()).addHeader(\"history\",\"resume\");\n                        async.dispatch();\n                    }\n\n                }\n                else if (sleep_for>=0)\n                {\n                    try\n                    {\n                        Thread.sleep(sleep_for);\n                    }\n                    catch (InterruptedException e)\n                    {\n                        e.printStackTrace();\n                    }\n                    response.setStatus(200);\n                    response.getOutputStream().println(\"SLEPT\\n\");\n                }\n                else\n                {\n                    response.setStatus(200);\n                    response.getOutputStream().println(\"NORMAL\\n\");\n                }\n            }\n            else\n            {\n                response.addHeader(\"history\",\"!initial\");\n\n                if (suspend2_for>=0 && request.getAttribute(\"2nd\")==null)\n                {\n                    final AsyncContext async=request.startAsync();\n                    async.addListener(__listener);\n                    request.setAttribute(\"2nd\",\"cycle\");\n\n                    if (suspend2_for>0)\n                    {\n                        async.setTimeout(suspend2_for);\n                    }\n                    // continuation.addContinuationListener(__listener);\n                    response.addHeader(\"history\",\"suspend\");\n\n                    if (complete2_after>0)\n                    {\n                        TimerTask complete = new TimerTask()\n                        {\n                            @Override\n                            public void run()\n                            {\n                                try\n                                {\n                                    response.setStatus(200);\n                                    response.getOutputStream().println(\"COMPLETED\\n\");\n                                    response.addHeader(\"history\",\"complete\");\n                                    async.complete();\n                                }\n                                catch(Exception e)\n                                {\n                                    e.printStackTrace();\n                                }\n                            }\n                        };\n                        synchronized (_timer)\n                        {\n                            _timer.schedule(complete,complete2_after);\n                        }\n                    }\n                    else if (complete2_after==0)\n                    {\n                        response.setStatus(200);\n                        response.getOutputStream().println(\"COMPLETED\\n\");\n                        response.addHeader(\"history\",\"complete\");\n                        async.complete();\n                    }\n                    else if (resume2_after>0)\n                    {\n                        TimerTask resume = new TimerTask()\n                        {\n                            @Override\n                            public void run()\n                            {\n                                response.addHeader(\"history\",\"resume\");\n                                async.dispatch();\n                            }\n                        };\n                        synchronized (_timer)\n                        {\n                            _timer.schedule(resume,resume2_after);\n                        }\n                    }\n                    else if (resume2_after==0)\n                    {\n                        response.addHeader(\"history\",\"dispatch\");\n                        async.dispatch();\n                    }\n                }\n                else if(request.getDispatcherType()==DispatcherType.ERROR)\n                {\n                    response.getOutputStream().println(\"ERROR: \"+request.getContextPath()+request.getServletPath()+request.getPathInfo());\n                }\n                else\n                {\n                    response.setStatus(200);\n                    response.getOutputStream().println(\"DISPATCHED\");\n                }\n            }\n        }","id":56506,"modified_method":"@Override\n        public void doGet(final HttpServletRequest request, final HttpServletResponse response) throws ServletException, IOException\n        {\n            // System.err.println(request.getDispatcherType()+\" \"+request.getRequestURI());\n            response.addHeader(\"history\",request.getDispatcherType()+\" \"+request.getServletPath());\n            if (request instanceof ServletRequestWrapper || response instanceof ServletResponseWrapper)\n                response.addHeader(\"history\",\"wrapped\"+((request instanceof ServletRequestWrapper)?\" REQ\":\"\")+((response instanceof ServletResponseWrapper)?\" RSP\":\"\"));\n                \n            boolean wrap=\"true\".equals(request.getParameter(\"wrap\"));\n            int read_before=0;\n            long sleep_for=-1;\n            long suspend_for=-1;\n            long suspend2_for=-1;\n            long resume_after=-1;\n            long resume2_after=-1;\n            long complete_after=-1;\n            long complete2_after=-1;\n\n            \n            if (request.getParameter(\"read\")!=null)\n                read_before=Integer.parseInt(request.getParameter(\"read\"));\n            if (request.getParameter(\"sleep\")!=null)\n                sleep_for=Integer.parseInt(request.getParameter(\"sleep\"));\n            if (request.getParameter(\"suspend\")!=null)\n                suspend_for=Integer.parseInt(request.getParameter(\"suspend\"));\n            if (request.getParameter(\"suspend2\")!=null)\n                suspend2_for=Integer.parseInt(request.getParameter(\"suspend2\"));\n            if (request.getParameter(\"resume\")!=null)\n                resume_after=Integer.parseInt(request.getParameter(\"resume\"));\n            final String path=request.getParameter(\"path\");\n            if (request.getParameter(\"resume2\")!=null)\n                resume2_after=Integer.parseInt(request.getParameter(\"resume2\"));\n            if (request.getParameter(\"complete\")!=null)\n                complete_after=Integer.parseInt(request.getParameter(\"complete\"));\n            if (request.getParameter(\"complete2\")!=null)\n                complete2_after=Integer.parseInt(request.getParameter(\"complete2\"));\n\n            if (request.getAttribute(\"State\")==null)\n            {\n                request.setAttribute(\"State\",new Integer(1));\n                response.addHeader(\"history\",\"initial\");\n                if (read_before>0)\n                {\n                    byte[] buf=new byte[read_before];\n                    request.getInputStream().read(buf);\n                }\n                else if (read_before<0)\n                {\n                    InputStream in = request.getInputStream();\n                    int b=in.read();\n                    while(b!=-1)\n                        b=in.read();\n                }\n                else if (request.getContentLength()>0)\n                {\n                    new Thread()\n                    {\n                        @Override\n                        public void run()\n                        {\n                            int c=0;\n                            try\n                            {\n                                InputStream in=request.getInputStream();\n                                int b=0;\n                                while(b!=-1)\n                                    if((b=in.read())>=0)\n                                        c++;\n                                response.addHeader(\"history\",\"async-read=\"+c);\n                            }\n                            catch(Exception e)\n                            {\n                                e.printStackTrace();\n                            }\n                        }\n                    }.start();\n                }\n\n                if (suspend_for>=0)\n                {\n                    final AsyncContext async=wrap?request.startAsync(new HttpServletRequestWrapper(request),new HttpServletResponseWrapper(response)):request.startAsync();\n                    if (suspend_for>0)\n                        async.setTimeout(suspend_for);\n                    async.addListener(__listener);\n                    response.addHeader(\"history\",\"suspend\");\n\n                    if (complete_after>0)\n                    {\n                        TimerTask complete = new TimerTask()\n                        {\n                            @Override\n                            public void run()\n                            {\n                                try\n                                {\n                                    response.setStatus(200);\n                                    response.getOutputStream().println(\"COMPLETED\\n\");\n                                    response.addHeader(\"history\",\"complete\");\n                                    async.complete();\n                                }\n                                catch(Exception e)\n                                {\n                                    e.printStackTrace();\n                                }\n                            }\n                        };\n                        synchronized (_timer)\n                        {\n                            _timer.schedule(complete,complete_after);\n                        }\n                    }\n                    else if (complete_after==0)\n                    {\n                        response.setStatus(200);\n                        response.getOutputStream().println(\"COMPLETED\\n\");\n                        response.addHeader(\"history\",\"complete\");\n                        async.complete();\n                    }\n                    else if (resume_after>0)\n                    {\n                        TimerTask resume = new TimerTask()\n                        {\n                            @Override\n                            public void run()\n                            {\n                                ((HttpServletResponse)async.getResponse()).addHeader(\"history\",\"resume\");\n                                if (path!=null)             \n                                    async.dispatch(path);\n                                else\n                                    async.dispatch();\n                            }\n                        };\n                        synchronized (_timer)\n                        {\n                            _timer.schedule(resume,resume_after);\n                        }\n                    }\n                    else if (resume_after==0)\n                    {\n                        ((HttpServletResponse)async.getResponse()).addHeader(\"history\",\"resume\");\n                        if (path!=null)             \n                            async.dispatch(path);\n                        else\n                            async.dispatch();\n                    }\n\n                }\n                else if (sleep_for>=0)\n                {\n                    try\n                    {\n                        Thread.sleep(sleep_for);\n                    }\n                    catch (InterruptedException e)\n                    {\n                        e.printStackTrace();\n                    }\n                    response.setStatus(200);\n                    response.getOutputStream().println(\"SLEPT\\n\");\n                }\n                else\n                {\n                    response.setStatus(200);\n                    response.getOutputStream().println(\"NORMAL\\n\");\n                }\n            }\n            else\n            {\n                response.addHeader(\"history\",\"!initial\");\n\n                if (suspend2_for>=0 && request.getAttribute(\"2nd\")==null)\n                {\n                    final AsyncContext async=wrap?request.startAsync(new HttpServletRequestWrapper(request),new HttpServletResponseWrapper(response)):request.startAsync();\n                    async.addListener(__listener);\n                    request.setAttribute(\"2nd\",\"cycle\");\n\n                    if (suspend2_for>0)\n                    {\n                        async.setTimeout(suspend2_for);\n                    }\n                    // continuation.addContinuationListener(__listener);\n                    response.addHeader(\"history\",\"suspend\");\n\n                    if (complete2_after>0)\n                    {\n                        TimerTask complete = new TimerTask()\n                        {\n                            @Override\n                            public void run()\n                            {\n                                try\n                                {\n                                    response.setStatus(200);\n                                    response.getOutputStream().println(\"COMPLETED\\n\");\n                                    response.addHeader(\"history\",\"complete\");\n                                    async.complete();\n                                }\n                                catch(Exception e)\n                                {\n                                    e.printStackTrace();\n                                }\n                            }\n                        };\n                        synchronized (_timer)\n                        {\n                            _timer.schedule(complete,complete2_after);\n                        }\n                    }\n                    else if (complete2_after==0)\n                    {\n                        response.setStatus(200);\n                        response.getOutputStream().println(\"COMPLETED\\n\");\n                        response.addHeader(\"history\",\"complete\");\n                        async.complete();\n                    }\n                    else if (resume2_after>0)\n                    {\n                        TimerTask resume = new TimerTask()\n                        {\n                            @Override\n                            public void run()\n                            {\n                                response.addHeader(\"history\",\"resume\");\n                                async.dispatch();\n                            }\n                        };\n                        synchronized (_timer)\n                        {\n                            _timer.schedule(resume,resume2_after);\n                        }\n                    }\n                    else if (resume2_after==0)\n                    {\n                        response.addHeader(\"history\",\"dispatch\");\n                        async.dispatch();\n                    }\n                }\n                else if(request.getDispatcherType()==DispatcherType.ERROR)\n                {\n                    response.getOutputStream().println(\"ERROR: \"+request.getContextPath()+request.getServletPath()+request.getPathInfo());\n                }\n                else\n                {\n                    response.setStatus(200);\n                    response.getOutputStream().println(\"DISPATCHED\");\n                }\n            }\n        }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspendTimeoutSuspend() throws Exception\n    {\n        _expectedCode=\"500 \";\n        String response=process(\"suspend=10&suspend2=10\",null);\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: ERROR\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: ERROR\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"ERROR: /ctx/path/info\",response);\n    }","id":56507,"modified_method":"@Test\n    public void testSuspendTimeoutSuspend() throws Exception\n    {\n        _expectedCode=\"500 \";\n        String response=process(\"suspend=10&suspend2=10\",null);\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: ERROR /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: ERROR /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"ERROR: /ctx/path/info\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspendWaitResumeSuspend() throws Exception\n    {\n        _expectedCode=\"500 \";\n        String response=process(\"suspend=1000&resume=10&suspend2=10\",null);\n        assertEquals(\"HTTP/1.1 500 Async Timeout\",response.substring(0,26));\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: ERROR\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"ERROR: /ctx/path/info\",response);\n    }","id":56508,"modified_method":"@Test\n    public void testSuspendWaitResumeSuspend() throws Exception\n    {\n        _expectedCode=\"500 \";\n        String response=process(\"suspend=1000&resume=10&suspend2=10\",null);\n        assertEquals(\"HTTP/1.1 500 Async Timeout\",response.substring(0,26));\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: ERROR /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"ERROR: /ctx/path/info\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Before\n    public void setUp() throws Exception\n    {\n        _connector = new ServerConnector(_server);\n        _server.setConnectors(new Connector[]{ _connector });\n        \n        _log=new ArrayList<>();\n        RequestLog log=new Log();\n        RequestLogHandler logHandler = new RequestLogHandler();\n        logHandler.setRequestLog(log);\n        _server.setHandler(logHandler);\n        _expectedLogs=1;\n        _expectedCode=\"200 \";\n\n        ServletContextHandler context = new ServletContextHandler(ServletContextHandler.NO_SESSIONS);\n        context.setContextPath(\"/ctx\");\n        logHandler.setHandler(context);\n        \n        _servletHandler=context.getServletHandler();\n        ServletHolder holder=new ServletHolder(_servlet);\n        holder.setAsyncSupported(true);\n        _servletHandler.addServletWithMapping(holder,\"/path/*\");\n        _server.start();\n        _port=_connector.getLocalPort();\n    }","id":56509,"modified_method":"@Before\n    public void setUp() throws Exception\n    {\n        _connector = new ServerConnector(_server);\n        _server.setConnectors(new Connector[]{ _connector });\n        \n        _log=new ArrayList<>();\n        RequestLog log=new Log();\n        RequestLogHandler logHandler = new RequestLogHandler();\n        logHandler.setRequestLog(log);\n        _server.setHandler(logHandler);\n        _expectedLogs=1;\n        _expectedCode=\"200 \";\n\n        ServletContextHandler context = new ServletContextHandler(ServletContextHandler.NO_SESSIONS);\n        context.setContextPath(\"/ctx\");\n        logHandler.setHandler(context);\n        \n        _servletHandler=context.getServletHandler();\n        ServletHolder holder=new ServletHolder(_servlet);\n        holder.setAsyncSupported(true);\n        _servletHandler.addServletWithMapping(holder,\"/path/*\");\n        _servletHandler.addServletWithMapping(holder,\"/path1/*\");\n        _servletHandler.addServletWithMapping(holder,\"/path2/*\");\n        _servletHandler.addServletWithMapping(new ServletHolder(new FwdServlet()),\"/fwd/*\");\n        _server.start();\n        _port=_connector.getLocalPort();\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspendWaitResume() throws Exception\n    {\n        String response=process(\"suspend=200&resume=10\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertNotContains(\"history: onTimeout\",response);\n    }","id":56510,"modified_method":"@Test\n    public void testSuspendWaitResume() throws Exception\n    {\n        String response=process(\"suspend=200&resume=10\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertNotContains(\"history: onTimeout\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspendOnTimeoutComplete() throws Exception\n    {\n        String response=process(\"suspend=200&timeout=complete\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: complete\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n\n        assertContains(\"COMPLETED\",response);\n    }","id":56511,"modified_method":"@Test\n    public void testSuspendOnTimeoutComplete() throws Exception\n    {\n        String response=process(\"suspend=200&timeout=complete\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: complete\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n\n        assertContains(\"COMPLETED\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspendTimeoutSuspendComplete() throws Exception\n    {\n        String response=process(\"suspend=10&suspend2=1000&complete2=10\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: ERROR\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: complete\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"COMPLETED\",response);\n    }","id":56512,"modified_method":"@Test\n    public void testSuspendTimeoutSuspendComplete() throws Exception\n    {\n        String response=process(\"suspend=10&suspend2=1000&complete2=10\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: ERROR /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: complete\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"COMPLETED\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspendWaitComplete() throws Exception\n    {\n        String response=process(\"suspend=200&complete=50\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: complete\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"COMPLETED\",response);\n        assertNotContains(\"history: onTimeout\",response);\n        assertNotContains(\"history: !initial\",response);\n    }","id":56513,"modified_method":"@Test\n    public void testSuspendWaitComplete() throws Exception\n    {\n        String response=process(\"suspend=200&complete=50\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: complete\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"COMPLETED\",response);\n        assertNotContains(\"history: onTimeout\",response);\n        assertNotContains(\"history: !initial\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSleep() throws Exception\n    {\n        String response=process(\"sleep=200\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n                \"history: REQUEST\\r\\n\"+\n                \"history: initial\\r\\n\",response);\n        assertContains(\"SLEPT\",response);\n        assertNotContains(\"history: onTimeout\",response);\n        assertNotContains(\"history: onComplete\",response);\n    }","id":56514,"modified_method":"@Test\n    public void testSleep() throws Exception\n    {\n        String response=process(\"sleep=200\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n                \"history: REQUEST /path\\r\\n\"+\n                \"history: initial\\r\\n\",response);\n        assertContains(\"SLEPT\",response);\n        assertNotContains(\"history: onTimeout\",response);\n        assertNotContains(\"history: onComplete\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspendOnTimeoutDispatch() throws Exception\n    {\n        String response=process(\"suspend=200&timeout=dispatch\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: dispatch\\r\\n\"+\n            \"history: ASYNC\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n\n        assertContains(\"DISPATCHED\",response);\n    }","id":56515,"modified_method":"@Test\n    public void testSuspendOnTimeoutDispatch() throws Exception\n    {\n        String response=process(\"suspend=200&timeout=dispatch\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: dispatch\\r\\n\"+\n            \"history: ASYNC /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n\n        assertContains(\"DISPATCHED\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspend() throws Exception\n    {\n        _expectedCode=\"500 \";\n        String response=process(\"suspend=200\",null);\n        assertEquals(\"HTTP/1.1 500 Async Timeout\",response.substring(0,26));\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: ERROR\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n\n        assertContains(\"ERROR: /ctx/path/info\",response);\n    }","id":56516,"modified_method":"@Test\n    public void testSuspend() throws Exception\n    {\n        _expectedCode=\"500 \";\n        String response=process(\"suspend=200\",null);\n        assertEquals(\"HTTP/1.1 500 Async Timeout\",response.substring(0,26));\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: ERROR /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n\n        assertContains(\"ERROR: /ctx/path/info\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public synchronized String process(String query,String content) throws Exception\n    {\n        String request = \"GET /ctx/path/info\";\n\n        if (query!=null)\n            request+=\"?\"+query;\n        request+=\" HTTP/1.1\\r\\n\"+\n        \"Host: localhost\\r\\n\"+\n        \"Connection: close\\r\\n\";\n        if (content==null)\n            request+=\"\\r\\n\";\n        else\n        {\n            request+=\"Content-Length: \"+content.length()+\"\\r\\n\";\n            request+=\"\\r\\n\" + content;\n        }\n\n        int port=_port;\n        try (Socket socket = new Socket(\"localhost\",port))\n        {\n            socket.setSoTimeout(1000000);\n            socket.getOutputStream().write(request.getBytes(StandardCharsets.UTF_8));\n            return IO.toString(socket.getInputStream());\n        }\n        catch(Exception e)\n        {\n            System.err.println(\"failed on port \"+port);\n            e.printStackTrace();\n            throw e;\n        }\n    }","id":56517,"modified_method":"public synchronized String process(String query,String content) throws Exception\n    {\n        return process(\"path\",query,content);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspendComplete() throws Exception\n    {\n        String response=process(\"suspend=200&complete=0\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: complete\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"COMPLETED\",response);\n        assertNotContains(\"history: onTimeout\",response);\n        assertNotContains(\"history: !initial\",response);\n    }","id":56518,"modified_method":"@Test\n    public void testSuspendComplete() throws Exception\n    {\n        String response=process(\"suspend=200&complete=0\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: complete\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"COMPLETED\",response);\n        assertNotContains(\"history: onTimeout\",response);\n        assertNotContains(\"history: !initial\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSuspendTimeoutSuspendResume() throws Exception\n    {\n        String response=process(\"suspend=10&suspend2=1000&resume2=10\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: ERROR\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"DISPATCHED\",response);\n    }","id":56519,"modified_method":"@Test\n    public void testSuspendTimeoutSuspendResume() throws Exception\n    {\n        String response=process(\"suspend=10&suspend2=1000&resume2=10\",null);\n        assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n        assertContains(\n            \"history: REQUEST /path\\r\\n\"+\n            \"history: initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: onTimeout\\r\\n\"+\n            \"history: ERROR /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: suspend\\r\\n\"+\n            \"history: resume\\r\\n\"+\n            \"history: ASYNC /path\\r\\n\"+\n            \"history: !initial\\r\\n\"+\n            \"history: onComplete\\r\\n\",response);\n        assertContains(\"DISPATCHED\",response);\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testAsyncRead() throws Exception\n    {\n        _expectedLogs=2;\n        String header=\"GET /ctx/path/info?suspend=2000&resume=1500 HTTP/1.1\\r\\n\"+\n            \"Host: localhost\\r\\n\"+\n            \"Content-Length: 10\\r\\n\"+\n            \"\\r\\n\";\n        String body=\"12345678\\r\\n\";\n        String close=\"GET /ctx/path/info HTTP/1.1\\r\\n\"+\n            \"Host: localhost\\r\\n\"+\n            \"Connection: close\\r\\n\"+\n            \"\\r\\n\";\n\n        try (Socket socket = new Socket(\"localhost\",_port))\n        {\n            socket.setSoTimeout(10000);\n            socket.getOutputStream().write(header.getBytes(StandardCharsets.ISO_8859_1));\n            Thread.sleep(500);\n            socket.getOutputStream().write(body.getBytes(StandardCharsets.ISO_8859_1),0,2);\n            Thread.sleep(500);\n            socket.getOutputStream().write(body.getBytes(StandardCharsets.ISO_8859_1),2,8);\n            socket.getOutputStream().write(close.getBytes(StandardCharsets.ISO_8859_1));\n\n            String response = IO.toString(socket.getInputStream());\n            assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n            assertContains(\n                \"history: REQUEST\\r\\n\"+\n                \"history: initial\\r\\n\"+\n                \"history: suspend\\r\\n\"+\n                \"history: async-read=10\\r\\n\"+\n                \"history: resume\\r\\n\"+\n                \"history: ASYNC\\r\\n\"+\n                \"history: !initial\\r\\n\"+\n                \"history: onComplete\\r\\n\",response);\n        }\n    }","id":56520,"modified_method":"@Test\n    public void testAsyncRead() throws Exception\n    {\n        _expectedLogs=2;\n        String header=\"GET /ctx/path/info?suspend=2000&resume=1500 HTTP/1.1\\r\\n\"+\n            \"Host: localhost\\r\\n\"+\n            \"Content-Length: 10\\r\\n\"+\n            \"\\r\\n\";\n        String body=\"12345678\\r\\n\";\n        String close=\"GET /ctx/path/info HTTP/1.1\\r\\n\"+\n            \"Host: localhost\\r\\n\"+\n            \"Connection: close\\r\\n\"+\n            \"\\r\\n\";\n\n        try (Socket socket = new Socket(\"localhost\",_port))\n        {\n            socket.setSoTimeout(10000);\n            socket.getOutputStream().write(header.getBytes(StandardCharsets.ISO_8859_1));\n            Thread.sleep(500);\n            socket.getOutputStream().write(body.getBytes(StandardCharsets.ISO_8859_1),0,2);\n            Thread.sleep(500);\n            socket.getOutputStream().write(body.getBytes(StandardCharsets.ISO_8859_1),2,8);\n            socket.getOutputStream().write(close.getBytes(StandardCharsets.ISO_8859_1));\n\n            String response = IO.toString(socket.getInputStream());\n            assertEquals(\"HTTP/1.1 200 OK\",response.substring(0,15));\n            assertContains(\n                \"history: REQUEST /path\\r\\n\"+\n                \"history: initial\\r\\n\"+\n                \"history: suspend\\r\\n\"+\n                \"history: async-read=10\\r\\n\"+\n                \"history: resume\\r\\n\"+\n                \"history: ASYNC /path\\r\\n\"+\n                \"history: !initial\\r\\n\"+\n                \"history: onComplete\\r\\n\",response);\n        }\n    }","commit_id":"5c188e02b74b40dc90ddff883051a4efb4453433","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void handle(HttpChannel connection) throws IOException, ServletException\n    {\n        final String target=connection.getRequest().getPathInfo();\n        final Request request=connection.getRequest();\n        final Response response=connection.getResponse();\n\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"{} on {}{}\",request.getDispatcherType(),connection,\"\\n\"+request.getMethod()+\" \"+request.getHttpURI()+\"\\n\"+request.getHttpFields());\n\n        if (HttpMethod.OPTIONS.is(request.getMethod()) || \"*\".equals(target))\n        {\n            if (!HttpMethod.OPTIONS.is(request.getMethod()))\n                response.sendError(HttpStatus.BAD_REQUEST_400);\n            handleOptions(request,response);\n            if (!request.isHandled())\n                handle(target, request, request, response);\n        }\n        else\n            handle(target, request, request, response);\n\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"RESPONSE for {} h={}{}\",target,request.isHandled(),\"\\n\"+response.getStatus()+\" \"+response.getReason()+\"\\n\"+response.getHttpFields());\n    }","id":56521,"modified_method":"public void handle(HttpChannel connection) throws IOException, ServletException\n    {\n        final String target=connection.getRequest().getPathInfo();\n        final Request request=connection.getRequest();\n        final Response response=connection.getResponse();\n\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"{} on {}{}{} {} {}{}{}\", request.getDispatcherType(), connection, System.lineSeparator(),\n                    request.getMethod(), target, request.getProtocol(), System.lineSeparator(), request.getHttpFields());\n\n        if (HttpMethod.OPTIONS.is(request.getMethod()) || \"*\".equals(target))\n        {\n            if (!HttpMethod.OPTIONS.is(request.getMethod()))\n                response.sendError(HttpStatus.BAD_REQUEST_400);\n            handleOptions(request,response);\n            if (!request.isHandled())\n                handle(target, request, request, response);\n        }\n        else\n            handle(target, request, request, response);\n\n        if (LOG.isDebugEnabled())\n            LOG.debug(\"RESPONSE for {} h={}{}{} {}{}{}\", target, request.isHandled(), System.lineSeparator(),\n                    response.getStatus(), response.getReason(), System.lineSeparator(), response.getHttpFields());\n    }","commit_id":"c0bc2182028719b7ce07c2ca626a90bc6f5a3058","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n   * should be called in AtomicAction\n   */\n  public static void invoke(@NotNull final Project project, final Editor editor, final PsiLocalVariable local, PsiReferenceExpression refExpr) {\n    if (!CommonRefactoringUtil.checkReadOnlyStatus(project, local)) return;\n\n    final HighlightManager highlightManager = HighlightManager.getInstance(project);\n\n    final String localName = local.getName();\n\n    final Query<PsiReference> query = ReferencesSearch.search(local, GlobalSearchScope.allScope(project), false);\n    if (query.findFirst() == null){\n      LOG.assertTrue(refExpr == null);\n      String message = RefactoringBundle.message(\"variable.is.never.used\", localName);\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n\n    final PsiClass containingClass = PsiTreeUtil.getParentOfType(local, PsiClass.class);\n    final List<PsiElement> innerClassesWithUsages = Collections.synchronizedList(new ArrayList<PsiElement>());\n    final List<PsiElement> innerClassUsages = Collections.synchronizedList(new ArrayList<PsiElement>());\n    query.forEach(new Processor<PsiReference>() {\n      public boolean process(final PsiReference psiReference) {\n        final PsiElement element = psiReference.getElement();\n        PsiElement innerClass = PsiTreeUtil.getParentOfType(element, PsiClass.class, PsiLambdaExpression.class);\n        while (innerClass != containingClass && innerClass != null) {\n          final PsiClass parentPsiClass = PsiTreeUtil.getParentOfType(innerClass, PsiClass.class, true);\n          if (parentPsiClass == containingClass) {\n            if (innerClass instanceof PsiLambdaExpression) {\n              if (PsiTreeUtil.isAncestor(innerClass, local, false)) {\n                innerClassesWithUsages.add(element);\n              } else {\n                innerClassesWithUsages.add(innerClass);\n              }\n              innerClass = parentPsiClass;\n              continue;\n            }\n            innerClassesWithUsages.add(innerClass);\n            innerClassUsages.add(element);\n          }\n          innerClass = parentPsiClass;\n        }\n        return true;\n      }\n    });\n\n    final PsiCodeBlock containerBlock = PsiTreeUtil.getParentOfType(local, PsiCodeBlock.class);\n    if (containerBlock == null) {\n      final String message = RefactoringBundle.getCannotRefactorMessage(\"Variable is declared outside a code block\");\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n\n    final PsiExpression defToInline = innerClassesWithUsages.isEmpty()\n                                      ? getDefToInline(local, refExpr, containerBlock)\n                                      : getDefToInline(local, innerClassesWithUsages.get(0), containerBlock);\n    if (defToInline == null){\n      final String key = refExpr == null ? \"variable.has.no.initializer\" : \"variable.has.no.dominating.definition\";\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(key, localName));\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n\n    final List<PsiElement> refsToInlineList = new ArrayList<PsiElement>();\n    Collections.addAll(refsToInlineList, DefUseUtil.getRefs(containerBlock, local, defToInline));\n    for (PsiElement innerClassUsage : innerClassUsages) {\n      if (!refsToInlineList.contains(innerClassUsage)) {\n        refsToInlineList.add(innerClassUsage);\n      }\n    }\n    if (refsToInlineList.size() == 0) {\n      String message = RefactoringBundle.message(\"variable.is.never.used.before.modification\", localName);\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n    final PsiElement[] refsToInline = PsiUtilCore.toPsiElementArray(refsToInlineList);\n\n    EditorColorsManager manager = EditorColorsManager.getInstance();\n    final TextAttributes attributes = manager.getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);\n    final TextAttributes writeAttributes = manager.getGlobalScheme().getAttributes(EditorColors.WRITE_SEARCH_RESULT_ATTRIBUTES);\n    if (refExpr != null && PsiUtil.isAccessedForReading(refExpr) && ArrayUtil.find(refsToInline, refExpr) < 0) {\n      final PsiElement[] defs = DefUseUtil.getDefs(containerBlock, local, refExpr);\n      LOG.assertTrue(defs.length > 0);\n      highlightManager.addOccurrenceHighlights(editor, defs, attributes, true, null);\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"variable.is.accessed.for.writing\", localName));\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n      return;\n    }\n\n    PsiTryStatement tryStatement = PsiTreeUtil.getParentOfType(defToInline, PsiTryStatement.class);\n    if (tryStatement != null) {\n      if (ExceptionUtil.getThrownExceptions(defToInline).isEmpty()) {\n        tryStatement = null;\n      }\n    }\n    PsiFile workingFile = local.getContainingFile();\n    for (PsiElement ref : refsToInline) {\n      final PsiFile otherFile = ref.getContainingFile();\n      if (!otherFile.equals(workingFile)) {\n        String message = RefactoringBundle.message(\"variable.is.referenced.in.multiple.files\", localName);\n        CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n        return;\n      }\n      if (tryStatement != null && !PsiTreeUtil.isAncestor(tryStatement, ref, false)) {\n        CommonRefactoringUtil.showErrorHint(project, editor, \"Unable to inline outside try/catch statement\", REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n        return;\n      }\n    }\n\n    for (final PsiElement ref : refsToInline) {\n      final PsiElement[] defs = DefUseUtil.getDefs(containerBlock, local, ref);\n      boolean isSameDefinition = true;\n      for (PsiElement def : defs) {\n        isSameDefinition &= isSameDefinition(def, defToInline);\n      }\n      if (!isSameDefinition) {\n        highlightManager.addOccurrenceHighlights(editor, defs, writeAttributes, true, null);\n        highlightManager.addOccurrenceHighlights(editor, new PsiElement[]{ref}, attributes, true, null);\n        String message =\n          RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"variable.is.accessed.for.writing.and.used.with.inlined\", localName));\n        CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n        WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n        return;\n      }\n    }\n\n    final PsiElement writeAccess = checkRefsInAugmentedAssignmentOrUnaryModified(refsToInline, defToInline);\n    if (writeAccess != null) {\n      HighlightManager.getInstance(project).addOccurrenceHighlights(editor, new PsiElement[]{writeAccess}, writeAttributes, true, null);\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"variable.is.accessed.for.writing\", localName));\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n      return;\n    }\n\n    if (editor != null && !ApplicationManager.getApplication().isUnitTestMode()) {\n      // TODO : check if initializer uses fieldNames that possibly will be hidden by other\n      // locals with the same names after inlining\n      highlightManager.addOccurrenceHighlights(\n        editor,\n        refsToInline,\n        attributes, true, null\n      );\n      int occurrencesCount = refsToInline.length;\n      String occurencesString = RefactoringBundle.message(\"occurences.string\", occurrencesCount);\n      final String promptKey = isInliningVariableInitializer(defToInline)\n                               ? \"inline.local.variable.prompt\" : \"inline.local.variable.definition.prompt\";\n      final String question = RefactoringBundle.message(promptKey, localName) + \" \" + occurencesString;\n      RefactoringMessageDialog dialog = new RefactoringMessageDialog(\n        REFACTORING_NAME,\n        question,\n        HelpID.INLINE_VARIABLE,\n        \"OptionPane.questionIcon\",\n        true,\n        project);\n      dialog.show();\n      if (!dialog.isOK()){\n        WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n        return;\n      }\n    }\n\n    final Runnable runnable = new Runnable() {\n      public void run() {\n        final String refactoringId = \"refactoring.inline.local.variable\";\n        try{\n          SmartPsiElementPointer<PsiExpression>[] exprs = new SmartPsiElementPointer[refsToInline.length];\n\n          RefactoringEventData beforeData = new RefactoringEventData();\n          beforeData.addElements(refsToInline);\n          project.getMessageBus().syncPublisher(RefactoringEventListener.REFACTORING_EVENT_TOPIC).refactoringStarted(refactoringId, beforeData);\n\n          final SmartPointerManager pointerManager = SmartPointerManager.getInstance(project);\n          for(int idx = 0; idx < refsToInline.length; idx++){\n            PsiJavaCodeReferenceElement refElement = (PsiJavaCodeReferenceElement)refsToInline[idx];\n            exprs[idx] = pointerManager.createSmartPsiElementPointer(InlineUtil.inlineVariable(local, defToInline, refElement));\n          }\n\n          if (!isInliningVariableInitializer(defToInline)) {\n            defToInline.getParent().delete();\n          } else {\n            defToInline.delete();\n          }\n\n          if (ReferencesSearch.search(local).findFirst() == null) {\n            QuickFixFactory.getInstance().createRemoveUnusedVariableFix(local).invoke(project, editor, local.getContainingFile());\n          }\n\n          if (editor != null && !ApplicationManager.getApplication().isUnitTestMode()) {\n            highlightManager.addOccurrenceHighlights(editor, ContainerUtil.convert(exprs, new PsiExpression[refsToInline.length], new Function<SmartPsiElementPointer<PsiExpression>, PsiExpression>() {\n              @Override\n              public PsiExpression fun(SmartPsiElementPointer<PsiExpression> pointer) {\n                return pointer.getElement();\n              }\n            }), attributes, true, null);\n            WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n          }\n\n          for (final SmartPsiElementPointer<PsiExpression> expr : exprs) {\n            InlineUtil.tryToInlineArrayCreationForVarargs(expr.getElement());\n          }\n        }\n        catch (IncorrectOperationException e){\n          LOG.error(e);\n        }\n        finally {\n          final RefactoringEventData afterData = new RefactoringEventData();\n          afterData.addElement(containingClass);\n          project.getMessageBus().syncPublisher(RefactoringEventListener.REFACTORING_EVENT_TOPIC).refactoringStarted(refactoringId, afterData);\n        }\n      }\n    };\n\n    CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n      public void run() {\n        ApplicationManager.getApplication().runWriteAction(runnable);\n      }\n    }, RefactoringBundle.message(\"inline.command\", localName), null);\n  }","id":56522,"modified_method":"/**\n   * should be called in AtomicAction\n   */\n  public static void invoke(@NotNull final Project project, final Editor editor, final PsiLocalVariable local, PsiReferenceExpression refExpr) {\n    if (!CommonRefactoringUtil.checkReadOnlyStatus(project, local)) return;\n\n    final HighlightManager highlightManager = HighlightManager.getInstance(project);\n\n    final String localName = local.getName();\n\n    final Query<PsiReference> query = ReferencesSearch.search(local, GlobalSearchScope.allScope(project), false);\n    if (query.findFirst() == null){\n      LOG.assertTrue(refExpr == null);\n      String message = RefactoringBundle.message(\"variable.is.never.used\", localName);\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n\n    final PsiClass containingClass = PsiTreeUtil.getParentOfType(local, PsiClass.class);\n    final List<PsiElement> innerClassesWithUsages = Collections.synchronizedList(new ArrayList<PsiElement>());\n    final List<PsiElement> innerClassUsages = Collections.synchronizedList(new ArrayList<PsiElement>());\n    query.forEach(new Processor<PsiReference>() {\n      public boolean process(final PsiReference psiReference) {\n        final PsiElement element = psiReference.getElement();\n        PsiElement innerClass = PsiTreeUtil.getParentOfType(element, PsiClass.class, PsiLambdaExpression.class);\n        while (innerClass != containingClass && innerClass != null) {\n          final PsiClass parentPsiClass = PsiTreeUtil.getParentOfType(innerClass, PsiClass.class, true);\n          if (parentPsiClass == containingClass) {\n            if (innerClass instanceof PsiLambdaExpression) {\n              if (PsiTreeUtil.isAncestor(innerClass, local, false)) {\n                innerClassesWithUsages.add(element);\n              } else {\n                innerClassesWithUsages.add(innerClass);\n              }\n              innerClass = parentPsiClass;\n              continue;\n            }\n            innerClassesWithUsages.add(innerClass);\n            innerClassUsages.add(element);\n          }\n          innerClass = parentPsiClass;\n        }\n        return true;\n      }\n    });\n\n    final PsiCodeBlock containerBlock = PsiTreeUtil.getParentOfType(local, PsiCodeBlock.class);\n    if (containerBlock == null) {\n      final String message = RefactoringBundle.getCannotRefactorMessage(\"Variable is declared outside a code block\");\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n\n    final PsiExpression defToInline = innerClassesWithUsages.isEmpty()\n                                      ? getDefToInline(local, refExpr, containerBlock)\n                                      : getDefToInline(local, innerClassesWithUsages.get(0), containerBlock);\n    if (defToInline == null){\n      final String key = refExpr == null ? \"variable.has.no.initializer\" : \"variable.has.no.dominating.definition\";\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(key, localName));\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n\n    List<PsiElement> refsToInlineList = new ArrayList<PsiElement>();\n    Collections.addAll(refsToInlineList, DefUseUtil.getRefs(containerBlock, local, defToInline));\n    for (PsiElement innerClassUsage : innerClassUsages) {\n      if (!refsToInlineList.contains(innerClassUsage)) {\n        refsToInlineList.add(innerClassUsage);\n      }\n    }\n    if (refsToInlineList.size() == 0) {\n      String message = RefactoringBundle.message(\"variable.is.never.used.before.modification\", localName);\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      return;\n    }\n\n    final Ref<Boolean> inlineAll = new Ref<Boolean>(true);\n    if (editor != null && !ApplicationManager.getApplication().isUnitTestMode()) {\n      int occurrencesCount = refsToInlineList.size();\n      final InlineLocalDialog inlineLocalDialog = new InlineLocalDialog(project, local, refExpr, occurrencesCount);\n      inlineLocalDialog.show();\n      if (!inlineLocalDialog.isOK()){\n        WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n        return;\n      }\n      if (inlineLocalDialog.isInlineThis()) {\n        refsToInlineList = Collections.singletonList(refExpr);\n        inlineAll.set(false);\n      }\n    }\n\n    final PsiElement[] refsToInline = PsiUtilCore.toPsiElementArray(refsToInlineList);\n\n    final EditorColorsManager manager = EditorColorsManager.getInstance();\n    final TextAttributes attributes = manager.getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);\n    final TextAttributes writeAttributes = manager.getGlobalScheme().getAttributes(EditorColors.WRITE_SEARCH_RESULT_ATTRIBUTES);\n\n    if (editor != null && !ApplicationManager.getApplication().isUnitTestMode()) {\n      // TODO : check if initializer uses fieldNames that possibly will be hidden by other\n      // locals with the same names after inlining\n      highlightManager.addOccurrenceHighlights(\n        editor,\n        refsToInline,\n        attributes, true, null\n      );\n    }\n\n    if (refExpr != null && PsiUtil.isAccessedForReading(refExpr) && ArrayUtil.find(refsToInline, refExpr) < 0) {\n      final PsiElement[] defs = DefUseUtil.getDefs(containerBlock, local, refExpr);\n      LOG.assertTrue(defs.length > 0);\n      highlightManager.addOccurrenceHighlights(editor, defs, attributes, true, null);\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"variable.is.accessed.for.writing\", localName));\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n      return;\n    }\n\n    PsiTryStatement tryStatement = PsiTreeUtil.getParentOfType(defToInline, PsiTryStatement.class);\n    if (tryStatement != null) {\n      if (ExceptionUtil.getThrownExceptions(defToInline).isEmpty()) {\n        tryStatement = null;\n      }\n    }\n    PsiFile workingFile = local.getContainingFile();\n    for (PsiElement ref : refsToInline) {\n      final PsiFile otherFile = ref.getContainingFile();\n      if (!otherFile.equals(workingFile)) {\n        String message = RefactoringBundle.message(\"variable.is.referenced.in.multiple.files\", localName);\n        CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n        return;\n      }\n      if (tryStatement != null && !PsiTreeUtil.isAncestor(tryStatement, ref, false)) {\n        CommonRefactoringUtil.showErrorHint(project, editor, \"Unable to inline outside try/catch statement\", REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n        return;\n      }\n    }\n\n    for (final PsiElement ref : refsToInline) {\n      final PsiElement[] defs = DefUseUtil.getDefs(containerBlock, local, ref);\n      boolean isSameDefinition = true;\n      for (PsiElement def : defs) {\n        isSameDefinition &= isSameDefinition(def, defToInline);\n      }\n      if (!isSameDefinition) {\n        highlightManager.addOccurrenceHighlights(editor, defs, writeAttributes, true, null);\n        highlightManager.addOccurrenceHighlights(editor, new PsiElement[]{ref}, attributes, true, null);\n        String message =\n          RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"variable.is.accessed.for.writing.and.used.with.inlined\", localName));\n        CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n        WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n        return;\n      }\n    }\n\n    final PsiElement writeAccess = checkRefsInAugmentedAssignmentOrUnaryModified(refsToInline, defToInline);\n    if (writeAccess != null) {\n      HighlightManager.getInstance(project).addOccurrenceHighlights(editor, new PsiElement[]{writeAccess}, writeAttributes, true, null);\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"variable.is.accessed.for.writing\", localName));\n      CommonRefactoringUtil.showErrorHint(project, editor, message, REFACTORING_NAME, HelpID.INLINE_VARIABLE);\n      WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n      return;\n    }\n\n    final Runnable runnable = new Runnable() {\n      public void run() {\n        final String refactoringId = \"refactoring.inline.local.variable\";\n        try{\n          SmartPsiElementPointer<PsiExpression>[] exprs = new SmartPsiElementPointer[refsToInline.length];\n\n          RefactoringEventData beforeData = new RefactoringEventData();\n          beforeData.addElements(refsToInline);\n          project.getMessageBus().syncPublisher(RefactoringEventListener.REFACTORING_EVENT_TOPIC).refactoringStarted(refactoringId, beforeData);\n\n          final SmartPointerManager pointerManager = SmartPointerManager.getInstance(project);\n          for(int idx = 0; idx < refsToInline.length; idx++){\n            PsiJavaCodeReferenceElement refElement = (PsiJavaCodeReferenceElement)refsToInline[idx];\n            exprs[idx] = pointerManager.createSmartPsiElementPointer(InlineUtil.inlineVariable(local, defToInline, refElement));\n          }\n\n          if (inlineAll.get()) {\n            if (!isInliningVariableInitializer(defToInline)) {\n              defToInline.getParent().delete();\n            } else {\n              defToInline.delete();\n            }\n          }\n\n          if (ReferencesSearch.search(local).findFirst() == null) {\n            QuickFixFactory.getInstance().createRemoveUnusedVariableFix(local).invoke(project, editor, local.getContainingFile());\n          }\n\n          if (editor != null && !ApplicationManager.getApplication().isUnitTestMode()) {\n            highlightManager.addOccurrenceHighlights(editor, ContainerUtil.convert(exprs, new PsiExpression[refsToInline.length], new Function<SmartPsiElementPointer<PsiExpression>, PsiExpression>() {\n              @Override\n              public PsiExpression fun(SmartPsiElementPointer<PsiExpression> pointer) {\n                return pointer.getElement();\n              }\n            }), attributes, true, null);\n            WindowManager.getInstance().getStatusBar(project).setInfo(RefactoringBundle.message(\"press.escape.to.remove.the.highlighting\"));\n          }\n\n          for (final SmartPsiElementPointer<PsiExpression> expr : exprs) {\n            InlineUtil.tryToInlineArrayCreationForVarargs(expr.getElement());\n          }\n        }\n        catch (IncorrectOperationException e){\n          LOG.error(e);\n        }\n        finally {\n          final RefactoringEventData afterData = new RefactoringEventData();\n          afterData.addElement(containingClass);\n          project.getMessageBus().syncPublisher(RefactoringEventListener.REFACTORING_EVENT_TOPIC).refactoringStarted(refactoringId, afterData);\n        }\n      }\n    };\n\n    CommandProcessor.getInstance().executeCommand(project, new Runnable() {\n      public void run() {\n        ApplicationManager.getApplication().runWriteAction(runnable);\n      }\n    }, RefactoringBundle.message(\"inline.command\", localName), null);\n  }","commit_id":"e5a647598af6c76695598aa0b35387d5709ed914","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean doCopy(final PsiElement element, final Project project) {\n    String fqn = elementToFqn(element);\n    if (fqn == null) return false;\n\n    CopyPasteManager.getInstance().setContents(new MyTransferable(fqn));\n\n    final StatusBarEx statusBar = (StatusBarEx)WindowManager.getInstance().getStatusBar(project);\n    statusBar.setInfo(IdeBundle.message(\"message.reference.to.fqn.has.been.copied\", fqn));\n    return true;\n  }","id":56523,"modified_method":"public static boolean doCopy(final PsiElement element, final Project project) {\n    return doCopy(element, project, null);\n  }","commit_id":"6be917deb1e0ee9af975a158148a9269a57ed3a6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(AnActionEvent e) {\n    DataContext dataContext = e.getDataContext();\n    Editor editor = PlatformDataKeys.EDITOR.getData(dataContext);\n    Project project = PlatformDataKeys.PROJECT.getData(dataContext);\n    PsiElement element = getElementToCopy(editor, dataContext);\n\n    if (!doCopy(element, project)) return;\n    HighlightManager highlightManager = HighlightManager.getInstance(project);\n    EditorColorsManager manager = EditorColorsManager.getInstance();\n    TextAttributes attributes = manager.getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);\n    if (editor != null) {\n      PsiElement toHighlight = HighlightUsagesHandler.getNameIdentifier(element);\n      if (toHighlight == null) toHighlight = element;\n      highlightManager.addOccurrenceHighlights(editor, new PsiElement[]{toHighlight}, attributes, true, null);\n    }\n  }","id":56524,"modified_method":"public void actionPerformed(AnActionEvent e) {\n    DataContext dataContext = e.getDataContext();\n    Editor editor = PlatformDataKeys.EDITOR.getData(dataContext);\n    Project project = PlatformDataKeys.PROJECT.getData(dataContext);\n    PsiElement element = getElementToCopy(editor, dataContext);\n\n    if (!doCopy(element, project, editor)) return;\n    HighlightManager highlightManager = HighlightManager.getInstance(project);\n    EditorColorsManager manager = EditorColorsManager.getInstance();\n    TextAttributes attributes = manager.getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);\n    if (editor != null) {\n      PsiElement nameIdentifier = HighlightUsagesHandler.getNameIdentifier(element);\n      if (nameIdentifier != null) {\n        highlightManager.addOccurrenceHighlights(editor, new PsiElement[]{nameIdentifier}, attributes, true, null);\n      } else {\n        PsiReference reference = TargetElementUtilBase.findReference(editor, editor.getCaretModel().getOffset());\n        if (reference != null) {\n          highlightManager.addOccurrenceHighlights(editor, new PsiReference[]{reference}, attributes, true, null);\n        } else {\n          highlightManager.addOccurrenceHighlights(editor, new PsiElement[]{element}, attributes, true, null);\n        }\n      }\n    }\n  }","commit_id":"6be917deb1e0ee9af975a158148a9269a57ed3a6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean isEnabled(final DataContext dataContext) {\n    Editor editor = PlatformDataKeys.EDITOR.getData(dataContext);\n    PsiElement element = getElementToCopy(editor, dataContext);\n    return elementToFqn(element) != null;\n  }","id":56525,"modified_method":"private static boolean isEnabled(final DataContext dataContext) {\n    Editor editor = PlatformDataKeys.EDITOR.getData(dataContext);\n    PsiElement element = getElementToCopy(editor, dataContext);\n    return elementToFqn(element, editor) != null;\n  }","commit_id":"6be917deb1e0ee9af975a158148a9269a57ed3a6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static String elementToFqn(final PsiElement element) {\n    for(QualifiedNameProvider provider: Extensions.getExtensions(QualifiedNameProvider.EP_NAME)) {\n      String result = provider.getQualifiedName(element);\n      if (result != null) return result;\n    }\n\n    String fqn = null;\n    if (element instanceof PsiFile) {\n      final PsiFile file = (PsiFile)element;\n      fqn = FileUtil.toSystemIndependentName(getFileFqn(file));\n    }\n    return fqn;\n  }","id":56526,"modified_method":"@Nullable\n  public static String elementToFqn(final PsiElement element) {\n    return elementToFqn(element, null);\n  }","commit_id":"6be917deb1e0ee9af975a158148a9269a57ed3a6","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(AnActionEvent e) {\n    DataContext dataContext = e.getDataContext();\n    Editor editor = (Editor)dataContext.getData(DataConstants.EDITOR);\n    Project project = (Project)dataContext.getData(DataConstants.PROJECT);\n    PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());\n    PsiElement element = file.findElementAt(editor.getCaretModel().getOffset());\n\n    PsiMember member = findMemberToCopy(element);\n\n    if (member != null) {\n      doCopy(member, project);\n\n      HighlightManager highlightManager = HighlightManager.getInstance(project);\n      EditorColorsManager manager = EditorColorsManager.getInstance();\n      TextAttributes attributes = manager.getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);\n      highlightManager.addOccurrenceHighlights(editor, new PsiElement[]{element}, attributes, true, null);\n    }\n  }","id":56527,"modified_method":"public void actionPerformed(AnActionEvent e) {\n    DataContext dataContext = e.getDataContext();\n    Editor editor = (Editor)dataContext.getData(DataConstants.EDITOR);\n    Project project = (Project)dataContext.getData(DataConstants.PROJECT);\n    PsiElement element;\n    if (editor == null) {\n      element = (PsiElement)dataContext.getData(DataConstants.PSI_ELEMENT);\n    }\n    else {\n      PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());\n      element = file.findElementAt(editor.getCaretModel().getOffset());\n    }\n\n    PsiElement member = findElementToCopy(element);\n    if (member == null) return;\n\n    doCopy(member, project);\n    HighlightManager highlightManager = HighlightManager.getInstance(project);\n    EditorColorsManager manager = EditorColorsManager.getInstance();\n    TextAttributes attributes = manager.getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES);\n    if (editor != null) {\n      highlightManager.addOccurrenceHighlights(editor, new PsiElement[]{element}, attributes, true, null);\n    }\n  }","commit_id":"38b084d9a54ff3b3edcf2ad202c87f426b4fc503","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(AnActionEvent e) {\n    DataContext dataContext = e.getDataContext();\n    Editor editor = (Editor)dataContext.getData(DataConstants.EDITOR);\n    Project project = (Project)dataContext.getData(DataConstants.PROJECT);\n    boolean enabled = editor != null && project != null;\n    if (enabled) {\n      PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(editor.getDocument());\n      if (file == null) {\n        enabled = false;\n      }\n      else {\n        PsiElement element = file.findElementAt(editor.getCaretModel().getOffset());\n\n        PsiMember member = findMemberToCopy(element);\n        enabled = member != null;\n      }\n    }\n    e.getPresentation().setEnabled(enabled);\n  }","id":56528,"modified_method":"public void update(AnActionEvent e) {\n    DataContext dataContext = e.getDataContext();\n    boolean enabled = isEnabled(dataContext);\n    e.getPresentation().setEnabled(enabled);\n  }","commit_id":"38b084d9a54ff3b3edcf2ad202c87f426b4fc503","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static PsiMember findMemberToCopy(final PsiElement element) {\n    if (!(element instanceof PsiIdentifier)) return null;\n    final PsiElement parent = element.getParent();\n    PsiMember member = null;\n    if (parent instanceof PsiJavaCodeReferenceElement) {\n      PsiElement resolved = ((PsiJavaCodeReferenceElement)parent).resolve();\n      if (resolved instanceof PsiMember) {\n        member = (PsiMember)resolved;\n      }\n    }\n    else if (parent instanceof PsiMember) {\n      member = (PsiMember)parent;\n    }\n    else {\n      //todo show error\n      //return;\n    }\n    return member;\n  }","id":56529,"modified_method":"private static PsiElement findElementToCopy(final PsiElement element) {\n    if (element instanceof PsiMember || element instanceof PsiFile) return element;\n    if (!(element instanceof PsiIdentifier)) return null;\n    final PsiElement parent = element.getParent();\n    PsiMember member = null;\n    if (parent instanceof PsiJavaCodeReferenceElement) {\n      PsiElement resolved = ((PsiJavaCodeReferenceElement)parent).resolve();\n      if (resolved instanceof PsiMember) {\n        member = (PsiMember)resolved;\n      }\n    }\n    else if (parent instanceof PsiMember) {\n      member = (PsiMember)parent;\n    }\n    else {\n      //todo show error\n      //return;\n    }\n    return member;\n  }","commit_id":"38b084d9a54ff3b3edcf2ad202c87f426b4fc503","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/** Closes all open sockets, the server socket and all threads waiting for incoming messages */\n\tpublic void stop()\n\t{\n\t\tIterator it = null;\n\t\tConnection conn;\n\t\tServerSocketChannel tmp;\n\n\t\t// 1. close the server socket (this also stops the acceptor thread)\n\t\tif (srv_sock != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\ttmp = srv_sock;\n\t\t\t\tsrv_sock = null;\n\t\t\t\ttmp.close();\n\t\t\t}\n\t\t\tcatch (Exception e)\n\t\t\t{\n\t\t\t}\n\t\t}\n\n\t\t// 2. then close the connections\n\t\tsynchronized (conns)\n\t\t{\n\t\t\tit = conns.values().iterator();\n\t\t\twhile (it.hasNext())\n\t\t\t{\n\t\t\t\tconn = (Connection) it.next();\n\t\t\t\tconn.destroy();\n\t\t\t}\n\t\t\tconns.clear();\n\t\t}\n\t\tlocal_addr = null;\n\t}","id":56530,"modified_method":"/** Closes all open sockets, the server socket and all threads waiting for incoming messages */\n    public void stop() {\n        Iterator it=null;\n        Connection conn;\n        ServerSocket tmp;\n\n        // 1. close the server socket (this also stops the acceptor thread)\n        if(srv_sock != null) {\n            try {\n                tmp=srv_sock;\n                srv_sock=null;\n                tmp.close();\n            }\n            catch(Exception e) {\n            \te.printStackTrace();\n            }\n        }\n\n\n        // 2. then close the connections\n        synchronized(conns) {\n            it=conns.values().iterator();\n            while(it.hasNext()) {\n                conn=(Connection)it.next();\n                conn.destroy();\n            }\n            conns.clear();\n        }\n        local_addr=null;\n    }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"void closeSocket()\n\t\t{\n\t\t\tif (sock != null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tsock.close();\n\t\t\t\t\t// should actually close in/out (so we don't need to close them explicitly)\n\t\t\t\t}\n\t\t\t\tcatch (Exception e)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tsock = null;\n\t\t\t}\n\t\t\tif (out != null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tout.close(); // flushes data\n\t\t\t\t}\n\t\t\t\tcatch (Exception e)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\t// removed 4/22/2003 (request by Roland Kurmann)\n\t\t\t\t// out=null;\n\t\t\t}\n\t\t\tif (in != null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tin.close();\n\t\t\t\t}\n\t\t\t\tcatch (Exception ex)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tin = null;\n\t\t\t}\n\t\t}","id":56531,"modified_method":"void closeSocket() {\n            if(sock != null) {\n                try {\n                    sock_ch.close();\n                }\n                catch(Exception e) {\n                \te.printStackTrace();\n                }\n                sock=null;\n            }\n        }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"public void start() throws Exception\n\t{\n\t\tsrv_sock = createServerSocket(srv_port);\n\n\t\tif (bind_addr != null)\n\t\t\tlocal_addr =\n\t\t\t\tnew IpAddress(bind_addr, srv_sock.socket().getLocalPort());\n\t\telse\n\t\t\tlocal_addr = new IpAddress(srv_sock.socket().getLocalPort());\n\n\t\tif (Trace.trace)\n\t\t{\n\t\t\tTrace.info(\n\t\t\t\t\"ConnectionTable.start()\",\n\t\t\t\t\"server socket created \" + \"on \" + local_addr);\n\t\t}\n\t\tacceptor = new Thread(this, \"ConnectionTable.AcceptorThread\");\n\t\tacceptor.setDaemon(true);\n\t\tacceptor.start();\n\n\t\t// start the connection reaper - will periodically remove unused connections\n\t\tif (use_reaper && reaper == null)\n\t\t{\n\t\t\treaper = new Reaper();\n\t\t\treaper.start();\n\t\t}\n\t}","id":56532,"modified_method":"public void start() throws Exception {\n\t\tthis.selector = Selector.open();\n        srv_sock=createServerSocket(srv_port);\n\n        if(bind_addr != null)\n            local_addr=new IpAddress(bind_addr, srv_sock.getLocalPort());\n        else\n            local_addr=new IpAddress(srv_sock.getLocalPort());\n\n        if(Trace.trace) {\n            Trace.info(\"ConnectionTable1_4.start()\", \"server socket created \" +\n                                                  \"on \" + local_addr);\n        }\n\n        //Roland Kurmann 4/7/2003, build new thread group\n        thread_group = new ThreadGroup(Thread.currentThread().getThreadGroup(), \"ConnectionTableGroup\");\n        //Roland Kurmann 4/7/2003, put in thread_group\n        acceptor=new Thread(thread_group, this, \"ConnectionTable1_4.AcceptorThread\");\n        acceptor.setDaemon(true);\n        acceptor.start();\n\n        // start the connection reaper - will periodically remove unused connections\n        if(use_reaper && reaper == null) {\n            reaper=new Reaper();\n            reaper.start();\n        }\n        pendingSocksList = new ArrayList();\n    }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Sends a message to a unicast destination. The destination has to be set */\n\tpublic void send(Message msg)\n\t{\n\t\tAddress dest = msg != null ? msg.getDest() : null;\n\t\tConnection conn;\n\n\t\tif (dest == null)\n\t\t{\n\t\t\tTrace.error(\n\t\t\t\t\"ConnectionTable.send()\",\n\t\t\t\t\"msg is null or message's destination is null\");\n\t\t\treturn;\n\t\t}\n\n\t\t// 1. Try to obtain correct Connection (or create one if not yet existent)\n\t\ttry\n\t\t{\n\t\t\tconn = getConnection(dest);\n\t\t\tif (conn == null)\n\t\t\t\treturn;\n\t\t}\n\t\tcatch (Throwable ex)\n\t\t{\n\t\t\tTrace.info(\n\t\t\t\t\"ConnectionTable.send()\",\n\t\t\t\t\"connection to \" + dest + \" could not be established: \" + ex);\n\t\t\treturn;\n\t\t}\n\n\t\t// 2. Send the message using that connection\n\t\ttry\n\t\t{\n\t\t\tconn.send(msg);\n\t\t}\n\t\tcatch (Throwable ex)\n\t\t{\n\t\t\tif (Trace.trace)\n\t\t\t\tTrace.info(\n\t\t\t\t\t\"ConnectionTable.send()\",\n\t\t\t\t\t\"sending message to \"\n\t\t\t\t\t\t+ dest\n\t\t\t\t\t\t+ \" failed (ex=\"\n\t\t\t\t\t\t+ ex.getClass().getName()\n\t\t\t\t\t\t+ \"); removing from connection table\");\n\t\t\tremove(dest);\n\t\t}\n\t}","id":56533,"modified_method":"/** Sends a message to a unicast destination. The destination has to be set */\n    public void send(Message msg) {\n        Address dest=msg != null ? msg.getDest() : null;\n        Connection conn;\n\n        if(dest == null) {\n            Trace.error(\"ConnectionTable1_4.send()\", \"msg is null or message's destination is null\");\n            return;\n        }\n\n        // 1. Try to obtain correct Connection (or create one if not yet existent)\n        try {\n            conn=getConnection(dest);\n            if(conn == null) return;\n        }\n        catch(Throwable ex) {\n            Trace.info(\"ConnectionTable1_4.send()\", \"connection to \" + dest + \" could not be established: \" + ex);\n            return;\n        }\n\n        // 2. Send the message using that connection\n        try {\n            conn.send(msg);\n        }\n        catch(Throwable ex) {\n            if(Trace.trace)\n                Trace.info(\"ConnectionTable1_4.send()\", \"sending message to \" + dest + \" failed (ex=\" +\n                                                     ex.getClass().getName() + \"); removing from connection table\");\n            remove(dest);\n        }\n    }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Try to obtain correct Connection (or create one if not yet existent) */\n\tConnection getConnection(Address dest) throws Exception\n\t{\n\t\tConnection conn = null;\n\t\tSocket sock;\n\n\t\tsynchronized (conns)\n\t\t{\n\t\t\tconn = (Connection) conns.get(dest);\n\t\t\tif (conn == null)\n\t\t\t{\n\t\t\t\tsock =\n\t\t\t\t\tnew Socket(\n\t\t\t\t\t\t((IpAddress) dest).getIpAddress(),\n\t\t\t\t\t\t((IpAddress) dest).getPort());\n\t\t\t\tconn = new Connection(sock, dest);\n\t\t\t\tconn.sendLocalAddress(local_addr);\n\t\t\t\tnotifyConnectionOpened(dest);\n\t\t\t\t// conns.put(dest, conn);\n\t\t\t\taddConnection(dest, conn);\n\t\t\t\tconn.init();\n\t\t\t\tif (Trace.trace)\n\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\"ConnectionTable.getConnection()\",\n\t\t\t\t\t\t\"created socket to \" + dest);\n\t\t\t}\n\t\t\treturn conn;\n\t\t}\n\t}","id":56534,"modified_method":"/** Try to obtain correct Connection (or create one if not yet existent) */\n    Connection getConnection(Address dest) throws Exception {\n        Connection conn=null;\n        SocketChannel sock_ch;\n\n        synchronized(conns) {\n            conn=(Connection)conns.get(dest);\n            if(conn == null) {\n\t\t\t\tInetSocketAddress destAddress =\n\t\t\t\t\tnew InetSocketAddress(\n\t\t\t\t\t\t((IpAddress) dest).getIpAddress(),\n\t\t\t\t\t\t((IpAddress) dest).getPort());\n\t\t\t\tsock_ch = SocketChannel.open(destAddress);\n                conn=new Connection(sock_ch, dest);\n                conn.sendLocalAddress(local_addr);\n                // conns.put(dest, conn);\n                addConnection(dest, conn);\n                pendingSocksList.add(conn);\n                selector.wakeup();\n                notifyConnectionOpened(dest);\n                if(Trace.trace) Trace.info(\"ConnectionTable1_4.getConnection()\", \"created socket to \" + dest);\n            }\n            return conn;\n        }\n    }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n\t\t * Reads the peer's address. First a cookie has to be sent which has to match my own cookie, otherwise\n\t\t * the connection will be refused\n\t\t */\n\t\tAddress readPeerAddress(Socket client_sock) throws Exception\n\t\t{\n\t\t\tAddress peer_addr = null;\n\t\t\tbyte[] version, buf, input_cookie = new byte[cookie.length];\n\t\t\tint len = 0,\n\t\t\t\tclient_port = client_sock != null ? client_sock.getPort() : 0;\n\t\t\tInetAddress client_addr =\n\t\t\t\tclient_sock != null ? client_sock.getInetAddress() : null;\n\n\t\t\tif (in != null)\n\t\t\t{\n\t\t\t\tinitCookie(input_cookie);\n\n\t\t\t\t// read the cookie first\n\t\t\t\tin.read(input_cookie, 0, input_cookie.length);\n\t\t\t\tif (!matchCookie(input_cookie))\n\t\t\t\t\tthrow new SocketException(\n\t\t\t\t\t\t\"ConnectionTable.Connection.readPeerAddress(): cookie sent by \"\n\t\t\t\t\t\t\t+ peer_addr\n\t\t\t\t\t\t\t+ \" does not match own cookie; terminating connection\");\n\t\t\t\t// then read the version\n\t\t\t\tversion = new byte[Version.version_id.length];\n\t\t\t\tin.read(version, 0, version.length);\n\n\t\t\t\tif (Version.compareTo(version) == false)\n\t\t\t\t{\n\t\t\t\t\tTrace.warn(\n\t\t\t\t\t\t\"ConnectionTable.readPeerAddress()\",\n\t\t\t\t\t\t\"packet from \"\n\t\t\t\t\t\t\t+ client_addr\n\t\t\t\t\t\t\t+ \":\"\n\t\t\t\t\t\t\t+ client_port\n\t\t\t\t\t\t\t+ \" has different version (\"\n\t\t\t\t\t\t\t+ Version.printVersionId(\n\t\t\t\t\t\t\t\tversion,\n\t\t\t\t\t\t\t\tVersion.version_id.length)\n\t\t\t\t\t\t\t+ \") from ours (\"\n\t\t\t\t\t\t\t+ Version.printVersionId(Version.version_id)\n\t\t\t\t\t\t\t+ \"). This may cause problems\");\n\t\t\t\t}\n\n\t\t\t\t// read the length of the address\n\t\t\t\tlen = in.readInt();\n\n\t\t\t\t// finally read the address itself\n\t\t\t\tbuf = new byte[len];\n\t\t\t\tin.readFully(buf, 0, len);\n\t\t\t\tpeer_addr = (Address) Util.objectFromByteBuffer(buf);\n\t\t\t\tupdateLastAccessed();\n\t\t\t}\n\t\t\treturn peer_addr;\n\t\t}","id":56535,"modified_method":"/**\n         * Reads the peer's address. First a cookie has to be sent which has to match my own cookie, otherwise\n         * the connection will be refused\n         */\n        Address readPeerAddress(Socket client_sock) throws Exception {\n            Address     peer_addr=null;\n            byte[]      version, buf, input_cookie=new byte[cookie.length];\n            int         len=0, client_port=client_sock != null? client_sock.getPort() : 0;\n            InetAddress client_addr=client_sock != null? client_sock.getInetAddress() : null;\n\n            if(in != null) {\n                initCookie(input_cookie);\n\n                // read the cookie first\n                in.read(input_cookie, 0, input_cookie.length);\n                if(!matchCookie(input_cookie))\n                    throw new SocketException(\"ConnectionTable1_4.Connection.readPeerAddress(): cookie sent by \" +\n                                              peer_addr + \" does not match own cookie; terminating connection\");\n                // then read the version\n                version=new byte[Version.version_id.length];\n                in.read(version, 0, version.length);\n\n                if(Version.compareTo(version) == false) {\n                    Trace.warn(\"ConnectionTable1_4.readPeerAddress()\",\n                               \"packet from \" + client_addr + \":\" + client_port +\n                               \" has different version (\" +\n                               Version.printVersionId(version, Version.version_id.length) +\n                               \") from ours (\" + Version.printVersionId(Version.version_id) +\n                               \"). This may cause problems\");\n                }\n\n                // read the length of the address\n                len=in.readInt();\n\n                // finally read the address itself\n                buf=new byte[len];\n                in.readFully(buf, 0, len);\n                peer_addr=(Address)Util.objectFromByteBuffer(buf);                \n                updateLastAccessed();\n            }\n            return peer_addr;\n        }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"public void start()\n\t\t{\n\t\t\tif (conns.size() == 0)\n\t\t\t\treturn;\n\t\t\tif (t != null && !t.isAlive())\n\t\t\t\tt = null;\n\t\t\tif (t == null)\n\t\t\t{\n\t\t\t\t//RKU 7.4.2003, put in threadgroup\n\t\t\t\tt =\n\t\t\t\t\tnew Thread(\n\t\t\t\t\t\tthread_group,\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\"ConnectionTable.ReaperThread\");\n\t\t\t\tt.setDaemon(true);\n\t\t\t\t// will allow us to terminate if all remaining threads are daemons\n\t\t\t\tt.start();\n\t\t\t}\n\t\t}","id":56536,"modified_method":"public void start() {\n            if(conns.size() == 0)\n                return;\n            if(t != null && !t.isAlive())\n                t=null;\n            if(t == null) {\n                //RKU 7.4.2003, put in threadgroup\n                t=new Thread(thread_group, this, \"ConnectionTable1_4.ReaperThread\");\n                t.setDaemon(true); // will allow us to terminate if all remaining threads are daemons\n                t.start();\n            }\n        }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n\t * Calls the receiver callback. We serialize access to this method because it may be called concurrently\n\t * by several Connection handler threads. Therefore the receiver doesn't need to synchronize.\n\t */\n\tpublic void receive(Message msg)\n\t{\n\t\tif (receiver != null)\n\t\t{\n\t\t\tsynchronized (recv_mutex)\n\t\t\t{\n\t\t\t\treceiver.receive(msg);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tTrace.error(\n\t\t\t\t\"ConnectionTable.receive()\",\n\t\t\t\t\"receiver is null (not set) !\");\n\t}","id":56537,"modified_method":"/**\n     * Calls the receiver callback. We serialize access to this method because it may be called concurrently\n     * by several Connection handler threads. Therefore the receiver doesn't need to synchronize.\n     */\n    public void receive(Message msg) {\n        if(receiver != null) {\n            synchronized(recv_mutex) {\n                receiver.receive(msg);\n            }\n        }\n        else\n            Trace.error(\"ConnectionTable1_4.receive()\", \"receiver is null (not set) !\");\n    }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n\t\t * Send the cookie first, then the our port number. If the cookie doesn't match the receiver's cookie,\n\t\t * the receiver will reject the connection and close it.\n\t\t */\n\t\tvoid sendLocalAddress(Address local_addr)\n\t\t{\n\t\t\tbyte[] buf;\n\n\t\t\tif (local_addr == null)\n\t\t\t{\n\t\t\t\tTrace.warn(\n\t\t\t\t\t\"ConnectionTable.Connection.sendLocalAddress()\",\n\t\t\t\t\t\"local_addr is null\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (out != null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tbuf = Util.objectToByteBuffer(local_addr);\n\n\t\t\t\t\t// write the cookie\n\t\t\t\t\tout.write(cookie, 0, cookie.length);\n\n\t\t\t\t\t// write the version\n\t\t\t\t\tout.write(Version.version_id, 0, Version.version_id.length);\n\n\t\t\t\t\t// write the length of the buffer\n\t\t\t\t\tout.writeInt(buf.length);\n\n\t\t\t\t\t// and finally write the buffer itself\n\t\t\t\t\tout.write(buf, 0, buf.length);\n\t\t\t\t\tout.flush(); // needed ?\n\t\t\t\t\tupdateLastAccessed();\n\t\t\t\t}\n\t\t\t\tcatch (Throwable t)\n\t\t\t\t{\n\t\t\t\t\tTrace.error(\n\t\t\t\t\t\t\"ConnectionTable.Connection.sendLocalAddress()\",\n\t\t\t\t\t\t\"exception is \" + t);\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":56538,"modified_method":"/**\n         * Send the cookie first, then the our port number. If the cookie doesn't match the receiver's cookie,\n         * the receiver will reject the connection and close it.\n         */\n        void sendLocalAddress(Address local_addr) {\n            byte[] buf;\n\n            if(local_addr == null) {\n                Trace.warn(\"ConnectionTable1_4.Connection.sendLocalAddress()\", \"local_addr is null\");\n                return;\n            }\n            if(out != null) {\n                try {\n                    buf=Util.objectToByteBuffer(local_addr);\n\n                    // write the cookie\n                    out.write(cookie, 0, cookie.length);\n\n                    // write the version\n                    out.write(Version.version_id, 0, Version.version_id.length);\n\n                    // write the length of the buffer\n                    out.writeInt(buf.length);\n\n                    // and finally write the buffer itself\n                    out.write(buf, 0, buf.length);\n                    out.flush(); // needed ?\n                    updateLastAccessed();\n                }\n                catch(Throwable t) {\n                    Trace.error(\"ConnectionTable1_4.Connection.sendLocalAddress()\", \"exception is \" + t);\n                }\n            }\n        }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"void init()\n\t\t{\n\t\t\tif (Trace.trace)\n\t\t\t\tTrace.info(\n\t\t\t\t\t\"ConnectionTable.Connection.init()\",\n\t\t\t\t\t\"connection was created to \" + peer_addr);\n\t\t\t// TODO register channel with selector or creater should.\n\t\t}","id":56539,"modified_method":"void init() {\n        \ttry\n        \t{\n        \t\tin = null;\n        \t\tout = null;\n        \t}\n        \tcatch(Exception ex)\n        \t{\n        \t\tex.printStackTrace();\n        \t}\n        \t\n        \ttry\n\t\t\t{\n\t\t\t\tsock_ch.configureBlocking(false);\n\t\t\t\tnioMsgReader = new NBMessageForm1_4(DEFAULT_BUFF_SIZE,sock_ch);\n\t\t\t\tsock_ch.register(selector, SelectionKey.OP_READ, this);\n\t\t\t}\n\t\t\tcatch (IOException e)\n\t\t\t{\n\t\t\t\te.printStackTrace();\n\t\t\t}\n            if(Trace.trace)\n                Trace.info(\"ConnectionTable1_4.Connection.init()\", \"connection was created to \" + peer_addr);\n\n        }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Finds first available port starting at start_port and returns server socket. Sets srv_port */\n\tServerSocketChannel createServerSocket(int start_port) throws Exception\n\t{\n\t\tServerSocketChannel ret = ServerSocketChannel.open();\n\t\tret.configureBlocking(false);\n\n\t\twhile (true)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (bind_addr == null)\n\t\t\t\t\tret.socket().bind(new InetSocketAddress(start_port));\n\t\t\t\telse\n\t\t\t\t\tret.socket().bind(\n\t\t\t\t\t\tnew InetSocketAddress(bind_addr, start_port),\n\t\t\t\t\t\tbacklog);\n\t\t\t}\n\t\t\tcatch (BindException bind_ex)\n\t\t\t{\n\t\t\t\tstart_port++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcatch (IOException io_ex)\n\t\t\t{\n\t\t\t\tTrace.error(\n\t\t\t\t\t\"ConnectionTable.createServerSocket()\",\n\t\t\t\t\t\"exception is \" + io_ex);\n\t\t\t}\n\t\t\tsrv_port = start_port;\n\t\t\tbreak;\n\t\t}\n\t\tret.register(this.connectSelector, SelectionKey.OP_ACCEPT);\n\t\treturn ret;\n\t}","id":56540,"modified_method":"/** Finds first available port starting at start_port and returns server socket. Sets srv_port */\n    ServerSocket createServerSocket(int start_port) throws Exception {\n        srv_sock_ch = ServerSocketChannel.open();\n\t\tsrv_sock_ch.configureBlocking(false);\n        while(true) {\n            try {\n                if(bind_addr == null)\n\t\t\t\tsrv_sock_ch.socket().bind(new InetSocketAddress(start_port));\n                else\n\t\t\t\tsrv_sock_ch.socket().bind(new InetSocketAddress( bind_addr,start_port), backlog);\n            }\n            catch(BindException bind_ex) {\n                start_port++;\n                continue;\n            }\n            catch(IOException io_ex) {\n                Trace.error(\"ConnectionTable1_4.createServerSocket()\", \"exception is \" + io_ex);\n            }\n            srv_port=start_port;\n            break;\n        }\n\t\tsrv_sock_ch.register(this.selector, SelectionKey.OP_ACCEPT);\n\t\treturn srv_sock_ch.socket();\n    }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"boolean matchCookie(byte[] input)\n\t\t{\n\t\t\tif (input == null || input.length < cookie.length)\n\t\t\t\treturn false;\n\t\t\tif (Trace.trace)\n\t\t\t\tTrace.info(\n\t\t\t\t\t\"ConnectionTable.Connection.matchCookie()\",\n\t\t\t\t\t\"input_cookie is \" + printCookie(input));\n\t\t\tfor (int i = 0; i < cookie.length; i++)\n\t\t\t\tif (cookie[i] != input[i])\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}","id":56541,"modified_method":"boolean matchCookie(byte[] input) {\n            if(input == null || input.length < cookie.length) return false;\n            if(Trace.trace)\n                Trace.info(\"ConnectionTable1_4.Connection.matchCookie()\", \"input_cookie is \" + printCookie(input));\n            for(int i=0; i < cookie.length; i++)\n                if(cookie[i] != input[i]) return false;\n            return true;\n        }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n\t Remove <code>addr<\/code>from connection table. This is typically triggered when a member is suspected.\n\t */\n\tpublic void remove(Address addr)\n\t{\n\t\tConnection conn;\n\n\t\tsynchronized (conns)\n\t\t{\n\t\t\tconn = (Connection) conns.get(addr);\n\n\t\t\tif (conn != null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tconn.destroy(); // won't do anything if already destroyed\n\t\t\t\t}\n\t\t\t\tcatch (Exception e)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tconns.remove(addr);\n\t\t\t}\n\t\t\tif (Trace.trace)\n\t\t\t\tTrace.info(\n\t\t\t\t\t\"ConnectionTable.remove()\",\n\t\t\t\t\t\"addr=\" + addr + \", connections are \" + toString());\n\t\t}\n\t}","id":56542,"modified_method":"/**\n     Remove <code>addr<\/code>from connection table. This is typically triggered when a member is suspected.\n     */\n    public void remove(Address addr) {\n        Connection conn;\n\n        synchronized(conns) {\n            conn=(Connection)conns.get(addr);\n\n            if(conn != null) {\n                try {\n                    conn.destroy();  // won't do anything if already destroyed\n                }\n                catch(Exception e) {\n                \te.printStackTrace();\n                }\n                conns.remove(addr);\n            }\n            if(Trace.trace)\n                Trace.info(\"ConnectionTable1_4.remove()\", \"addr=\" + addr + \", connections are \" + toString());\n        }\n    }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"void doSend(Message msg) throws Exception\n\t\t{\n\t\t\tIpAddress dst_addr = (IpAddress) msg.getDest();\n\t\t\tbyte[] buffie = null;\n\n\t\t\tif (dst_addr == null || dst_addr.getIpAddress() == null)\n\t\t\t{\n\t\t\t\tTrace.error(\n\t\t\t\t\t\"ConnectionTable.Connection.doSend()\",\n\t\t\t\t\t\"the destination address is null; aborting send\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// set the source address if not yet set\n\t\t\t\tif (msg.getSrc() == null)\n\t\t\t\t\tmsg.setSrc(local_addr);\n\n\t\t\t\tbuffie = Util.objectToByteBuffer(msg);\n\t\t\t\tif (buffie.length <= 0)\n\t\t\t\t{\n\t\t\t\t\tTrace.error(\n\t\t\t\t\t\t\"ConnectionTable.Connection.doSend()\",\n\t\t\t\t\t\t\"buffer.length is 0. Will not send message\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// we're using 'double-writes', sending the buffer to the destination twice. this would\n\t\t\t\t// ensure that, if the peer closed the connection while we were idle, we would get an exception.\n\t\t\t\t// this won't happen if we use a single write (see Stevens, ch. 5.13).\n\t\t\t\tif (out != null)\n\t\t\t\t{\n\t\t\t\t\tout.writeInt(buffie.length);\n\t\t\t\t\t// write the length of the data buffer first\n\t\t\t\t\tUtil.doubleWrite(buffie, out);\n\t\t\t\t\tout.flush(); // may not be very efficient (but safe)\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\tif (Trace.trace)\n\t\t\t\t\tTrace.error(\n\t\t\t\t\t\t\"ConnectionTable.Connection.doSend()\",\n\t\t\t\t\t\t\"to \"\n\t\t\t\t\t\t\t+ dst_addr\n\t\t\t\t\t\t\t+ \", exception is \"\n\t\t\t\t\t\t\t+ ex\n\t\t\t\t\t\t\t+ \", stack trace:\\n\"\n\t\t\t\t\t\t\t+ Util.printStackTrace(ex));\n\t\t\t\tremove(dst_addr);\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t}","id":56543,"modified_method":"void doSend(Message msg) throws Exception {\n            IpAddress dst_addr=(IpAddress)msg.getDest();\n            byte[]    buffie=null;\n\n            if(dst_addr == null || dst_addr.getIpAddress() == null) {\n                Trace.error(\"ConnectionTable1_4.Connection.doSend()\", \"the destination address is null; aborting send\");\n                return;\n            }\n\n            try {\n                // set the source address if not yet set\n                if(msg.getSrc() == null)\n                    msg.setSrc(local_addr);\n\n                buffie=Util.objectToByteBuffer(msg);\n                if(buffie.length <= 0) {\n                    Trace.error(\"ConnectionTable1_4.Connection.doSend()\", \"buffer.length is 0. Will not send message\");\n                    return;\n                }\n\n\n                // we're using 'double-writes', sending the buffer to the destination twice. this would\n                // ensure that, if the peer closed the connection while we were idle, we would get an exception.\n                // this won't happen if we use a single write (see Stevens, ch. 5.13).\n\t\t\t\theaderBuffer.clear();\n\t\t\t\theaderBuffer.putInt(buffie.length);\n\t\t\t\theaderBuffer.flip();\n\t\t\t\tUtil1_4.writeFully(headerBuffer,sock_ch);\n\t\t\t\tByteBuffer sendBuffer = ByteBuffer.wrap(buffie);\n\t\t\t\tUtil1_4.writeFully(sendBuffer, sock_ch);\n            }\n            catch(Exception ex) {\n                if(Trace.trace)\n                    Trace.error(\"ConnectionTable1_4.Connection.doSend()\",\n                                \"to \" + dst_addr + \", exception is \" + ex + \", stack trace:\\n\" +\n                                Util.printStackTrace(ex));\n                ex.printStackTrace();\n                remove(dst_addr);\n                throw ex;\n            }\n        }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"public void run()\n\t\t{\n\t\t\tConnection value;\n\t\t\tMap.Entry entry;\n\t\t\tlong curr_time;\n\n\t\t\tif (Trace.trace)\n\t\t\t\tTrace.info(\n\t\t\t\t\t\"ConnectionTable.Reaper.run()\",\n\t\t\t\t\t\"connection reaper thread was started. Number of connections=\"\n\t\t\t\t\t\t+ conns.size()\n\t\t\t\t\t\t+ \", reaper_interval=\"\n\t\t\t\t\t\t+ reaper_interval\n\t\t\t\t\t\t+ \", conn_expire_time=\"\n\t\t\t\t\t\t+ conn_expire_time);\n\n\t\t\twhile (conns.size() > 0 && t != null)\n\t\t\t{\n\t\t\t\t// first sleep\n\t\t\t\tUtil.sleep(reaper_interval);\n\t\t\t\tsynchronized (conns)\n\t\t\t\t{\n\t\t\t\t\tcurr_time = System.currentTimeMillis();\n\t\t\t\t\tfor (Iterator it = conns.entrySet().iterator();\n\t\t\t\t\t\tit.hasNext();\n\t\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\tentry = (Map.Entry) it.next();\n\t\t\t\t\t\tvalue = (Connection) entry.getValue();\n\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\t\t\"ConnectionTable.Reaper.run()\",\n\t\t\t\t\t\t\t\t\"connection is \"\n\t\t\t\t\t\t\t\t\t+ ((curr_time - value.last_access) / 1000)\n\t\t\t\t\t\t\t\t\t+ \" seconds old (curr-time=\"\n\t\t\t\t\t\t\t\t\t+ curr_time\n\t\t\t\t\t\t\t\t\t+ \", last_access=\"\n\t\t\t\t\t\t\t\t\t+ value.last_access\n\t\t\t\t\t\t\t\t\t+ \")\");\n\t\t\t\t\t\tif (value.last_access + conn_expire_time < curr_time)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\t\t\t\"ConnectionTable.Reaper.run()\",\n\t\t\t\t\t\t\t\t\t\"connection \"\n\t\t\t\t\t\t\t\t\t\t+ value\n\t\t\t\t\t\t\t\t\t\t+ \" has been idle for too long (conn_expire_time=\"\n\t\t\t\t\t\t\t\t\t\t+ conn_expire_time\n\t\t\t\t\t\t\t\t\t\t+ \"), will be removed\");\n\n\t\t\t\t\t\t\tvalue.destroy();\n\t\t\t\t\t\t\tit.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Trace.trace)\n\t\t\t\tTrace.info(\"ConnectionTable.Reaper.run()\", \"reaper terminated\");\n\t\t\tt = null;\n\t\t}","id":56544,"modified_method":"public void run() {\n            Connection value;\n            Map.Entry entry;\n            long curr_time;\n\n            if(Trace.trace)\n                Trace.info(\"ConnectionTable1_4.Reaper.run()\", \"connection reaper thread was started. Number of connections=\" +\n                                                           conns.size() + \", reaper_interval=\" + reaper_interval + \", conn_expire_time=\" +\n                                                           conn_expire_time);\n\n            while(conns.size() > 0 && t != null) {\n                // first sleep\n                Util.sleep(reaper_interval);\n                synchronized(conns) {\n                    curr_time=System.currentTimeMillis();\n                    for(Iterator it=conns.entrySet().iterator(); it.hasNext();) {\n                        entry=(Map.Entry)it.next();\n                        value=(Connection)entry.getValue();\n                        if(Trace.trace)\n                            Trace.info(\"ConnectionTable1_4.Reaper.run()\", \"connection is \" +\n                                                                       ((curr_time - value.last_access) / 1000) + \" seconds old (curr-time=\" +\n                                                                       curr_time + \", last_access=\" + value.last_access + \")\");\n                        if(value.last_access + conn_expire_time < curr_time) {\n                            if(Trace.trace)\n                                Trace.info(\"ConnectionTable1_4.Reaper.run()\", \"connection \" + value +\n                                                                           \" has been idle for too long (conn_expire_time=\" + conn_expire_time +\n                                                                           \"), will be removed\");\n\n                            value.destroy();\n                            it.remove();\n                        }\n                    }\n                }\n            }\n            if(Trace.trace)\n                Trace.info(\"ConnectionTable1_4.Reaper.run()\", \"reaper terminated\");\n            t=null;\n        }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"void destroy()\n\t\t{\n\t\t\tcloseSocket(); // should terminate handler as well\n\t\t}","id":56545,"modified_method":"void destroy() {\n            closeSocket();\n            nioMsgReader = null;\n        }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"Connection(Socket s, Address peer_addr)\n\t\t{\n\t\t\tsock = s;\n\t\t\tthis.peer_addr = peer_addr;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tout = new DataOutputStream(sock.getOutputStream());\n\t\t\t\tin = new DataInputStream(sock.getInputStream());\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\tTrace.error(\n\t\t\t\t\t\"ConnectionTable.Connection()\",\n\t\t\t\t\t\"exception is \" + ex);\n\t\t\t}\n\t\t}","id":56546,"modified_method":"Connection(SocketChannel s, Address peer_addr) {\n\t\t\tsock_ch=s;\n\t\t\tsock = sock_ch.socket();\n            this.peer_addr=peer_addr;\n            try {\n                out=new DataOutputStream(sock.getOutputStream());\n                in=new DataInputStream(sock.getInputStream());\n            }\n            catch(Exception ex) {\n                Trace.error(\"ConnectionTable1_4.Connection()\", \"exception is \" + ex);\n            }\n        }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"void send(Message msg)\n\t\t{\n\t\t\tsynchronized (send_mutex)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tdoSend(msg);\n\t\t\t\t\tupdateLastAccessed();\n\t\t\t\t}\n\t\t\t\tcatch (IOException io_ex)\n\t\t\t\t{\n\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\tTrace.warn(\n\t\t\t\t\t\t\t\"ConnectionTable.Connection.send()\",\n\t\t\t\t\t\t\t\"peer closed connection, \"\n\t\t\t\t\t\t\t\t+ \"trying to re-establish connection and re-send msg.\");\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tdoSend(msg);\n\t\t\t\t\t\tupdateLastAccessed();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (IOException io_ex2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\tTrace.error(\n\t\t\t\t\t\t\t\t\"ConnectionTable.Connection.send()\",\n\t\t\t\t\t\t\t\t\"2nd attempt to send data failed too\");\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception ex2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\tTrace.error(\n\t\t\t\t\t\t\t\t\"ConnectionTable.Connection.send()\",\n\t\t\t\t\t\t\t\t\"exception is \" + ex2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (Exception ex)\n\t\t\t\t{\n\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\tTrace.error(\n\t\t\t\t\t\t\t\"ConnectionTable.Connection.send()\",\n\t\t\t\t\t\t\t\"exception is \" + ex);\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":56547,"modified_method":"void send(Message msg) {\n            synchronized(send_mutex) {\n                try {\n                    doSend(msg);\n                    updateLastAccessed();\n                }\n                catch(IOException io_ex) {\n                    if(Trace.trace)\n                        Trace.warn(\"ConnectionTable1_4.Connection.send()\", \"peer closed connection, \" +\n                                                                        \"trying to re-establish connection and re-send msg.\");\n                    try {\n                        doSend(msg);\n                        updateLastAccessed();\n                    }\n                    catch(IOException io_ex2) {\n                        if(Trace.trace) Trace.error(\"ConnectionTable1_4.Connection.send()\", \"2nd attempt to send data failed too\");\n\t\t\t\t\t\tio_ex2.printStackTrace();\n                    }\n                    catch(Exception ex2) {\n                        if(Trace.trace) Trace.error(\"ConnectionTable1_4.Connection.send()\", \"exception is \" + ex2);\n                        ex2.printStackTrace();\n                    }\n                }\n                catch(Exception ex) {\n                    if(Trace.trace) Trace.error(\"ConnectionTable1_4.Connection.send()\", \"exception is \" + ex);\n                    ex.printStackTrace();\n                }\n            }\n        }","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n\t * Acceptor thread. Continuously accept new connections. Create a new thread for each new\n\t * connection and put it in conns. When the thread should stop, it is\n\t * interrupted by the thread creator.\n\t */\n\tpublic void run()\n\t{\n\t\tSocket client_sock;\n\t\tConnection conn = null;\n\t\tAddress peer_addr;\n\n\t\twhile (srv_sock != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tconnectSelector.select();\n\t\t\t\tSet readyKeys = connectSelector.selectedKeys();\n\n\t\t\t\tfor (Iterator i = readyKeys.iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tSelectionKey key = (SelectionKey) i.next();\n\t\t\t\t\ti.remove();\n\n\t\t\t\t\tServerSocketChannel readyChannel =\n\t\t\t\t\t\t(ServerSocketChannel) key.channel();\n\n\t\t\t\t\tSocketChannel incomingChannel = readyChannel.accept();\n\t\t\t\t\tincomingChannel.configureBlocking(false);\n\t\t\t\t\tclient_sock = incomingChannel.socket();\n\n\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\t\"ConnectionTable.run()\",\n\t\t\t\t\t\t\t\"accepted connection, client_sock=\" + client_sock);\n\n\t\t\t\t\t// create new thread and add to conn table\n\t\t\t\t\tconn = new Connection(client_sock, null);\n\t\t\t\t\t// will call receive(msg)\n\t\t\t\t\t// get peer's address\n\t\t\t\t\tpeer_addr = conn.readPeerAddress(client_sock);\n\n\t\t\t\t\t// client_addr=new IpAddress(client_sock.getInetAddress(), client_port);\n\t\t\t\t\tconn.setPeerAddress(peer_addr);\n\n\t\t\t\t\tsynchronized (conns)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (conns.contains(peer_addr))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\t\tTrace.warn(\n\t\t\t\t\t\t\t\t\t\"ConnectionTable.run()\",\n\t\t\t\t\t\t\t\t\tpeer_addr\n\t\t\t\t\t\t\t\t\t\t+ \" is already there, will terminate connection\");\n\t\t\t\t\t\t\tconn.destroy();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// conns.put(peer_addr, conn);\n\t\t\t\t\t\taddConnection(peer_addr, conn);\n\t\t\t\t\t}\n\t\t\t\t\tnotifyConnectionOpened(peer_addr);\n\t\t\t\t\tconn.init(); // starts handler thread on this socket\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (SocketException sock_ex)\n\t\t\t{\n\t\t\t\tif (Trace.trace)\n\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\"ConnectionTable.run()\",\n\t\t\t\t\t\t\"exception is \" + sock_ex);\n\t\t\t\tif (conn != null)\n\t\t\t\t\tconn.destroy();\n\t\t\t\tif (srv_sock == null)\n\t\t\t\t\tbreak; // socket was closed, therefore stop\n\t\t\t}\n\t\t\tcatch (Throwable ex)\n\t\t\t{\n\t\t\t\tif (Trace.trace)\n\t\t\t\t\tTrace.warn(\"ConnectionTable.run()\", \"exception is \" + ex);\n\t\t\t}\n\t\t}\n\t}","id":56548,"modified_method":"/**\n\t * Acceptor thread. Continuously accept new connections. Create a new\n\t * thread for each new connection and put it in conns. When the thread\n\t * should stop, it is interrupted by the thread creator.\n\t */\n\tpublic void run()\n\t{\n\t\tSocket client_sock;\n\t\tConnection conn = null;\n\t\tAddress peer_addr;\n\n\t\twhile (srv_sock_ch != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (selector.select() > 0)\n\t\t\t\t{\n\t\t\t\t\tSet readyKeys = selector.selectedKeys();\n\t\t\t\t\tfor (Iterator i = readyKeys.iterator(); i.hasNext();)\n\t\t\t\t\t{\n\t\t\t\t\t\tSelectionKey key = (SelectionKey) i.next();\n\t\t\t\t\t\ti.remove();\n\t\t\t\t\t\tif ((key.readyOps() & SelectionKey.OP_ACCEPT)\n\t\t\t\t\t\t\t== SelectionKey.OP_ACCEPT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tServerSocketChannel readyChannel =\n\t\t\t\t\t\t\t\t(ServerSocketChannel) key.channel();\n\n\t\t\t\t\t\t\tSocketChannel client_sock_ch=\n\t\t\t\t\t\t\t\treadyChannel.accept();\n\t\t\t\t\t\t\tclient_sock = client_sock_ch.socket();\n\t\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\t\t\t\"ConnectionTable1_4.run()\",\n\t\t\t\t\t\t\t\t\t\"accepted connection, client_sock=\"\n\t\t\t\t\t\t\t\t\t\t+ client_sock);\n\n\t\t\t\t\t\t\tconn = new Connection(client_sock_ch, null);\n\t\t\t\t\t\t\t// will call receive(msg)\n\t\t\t\t\t\t\t// get peer's address\n\t\t\t\t\t\t\tpeer_addr = conn.readPeerAddress(client_sock);\n\n\t\t\t\t\t\t\tconn.setPeerAddress(peer_addr);\n\n\t\t\t\t\t\t\tsynchronized (conns)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (conns.contains(peer_addr))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\t\t\t\tTrace.warn(\n\t\t\t\t\t\t\t\t\t\t\t\"ConnectionTable1_4.run()\",\n\t\t\t\t\t\t\t\t\t\t\tpeer_addr\n\t\t\t\t\t\t\t\t\t\t\t\t+ \" is already there, will terminate connection\");\n\t\t\t\t\t\t\t\t\tconn.destroy();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taddConnection(peer_addr, conn);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconn.init();\n\t\t\t\t\t\t\tnotifyConnectionOpened(peer_addr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (\n\t\t\t\t\t\t\t(key.readyOps() & SelectionKey.OP_READ)\n\t\t\t\t\t\t\t\t== SelectionKey.OP_READ)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSocketChannel incomingChannel =\n\t\t\t\t\t\t\t(SocketChannel) key.channel();\n\t\t\t\t\t\t\tconn = (Connection) key.attachment();\n\t\t\t\t\t\t\tByteBuffer buff = conn.getNIOMsgReader().readCompleteMsgBuffer();\n\t\t\t\t\t\t\tif(buff != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treceive((Message)Util.objectFromByteBuffer(buff.array()));\n\t\t\t\t\t\t\t\tconn.getNIOMsgReader().reset();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t/*In addition to the accepted Sockets, we must registe \n\t\t\t\t\t * sockets opend by this for OP_READ, because peer may\n\t\t\t\t\t * use the same socket to sends data using the same socket,\n\t\t\t\t\t * instead of opening a new connection. We can not register \n\t\t\t\t\t * with this selectior from a different thread. set pending\n\t\t\t\t\t * and wakeup this selector.\n\t\t\t\t\t */\n\t\t\t\t\tsynchronized (conns)\n\t\t\t\t\t{\n\t\t\t\t\t\tConnection pendingConnection;\n\t\t\t\t\t\twhile( (pendingSocksList.size()>0) && (null != (pendingConnection = (Connection)pendingSocksList.remove(0))) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpendingConnection.init();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (SocketException sock_ex)\n\t\t\t{\n\t\t\t\tif (Trace.trace)\n\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\"ConnectionTable1_4.run()\",\n\t\t\t\t\t\t\"exception is \" + sock_ex);\n\t\t\t\tif (conn != null)\n\t\t\t\t\tconn.destroy();\n\t\t\t\tif (srv_sock == null)\n\t\t\t\t\tbreak; // socket was closed, therefore stop\n\t\t\t}\n\t\t\tcatch (Throwable ex)\n\t\t\t{\n\t\t\t\tif (Trace.trace)\n\t\t\t\t\tTrace.warn(\n\t\t\t\t\t\t\"ConnectionTable1_4.run()\",\n\t\t\t\t\t\t\"exception is \" + ex);\n\t\t\t}\n\t\t}\n\t}","commit_id":"35c5faa642a497729746e958d1c3d84e4234270c","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Finds first available port starting at start_port and returns server socket. Sets srv_port */\n\tServerSocketChannel createServerSocket(int start_port) throws Exception\n\t{\n\t\tServerSocketChannel ret = ServerSocketChannel.open();\n\t\tret.configureBlocking(false);\n\n\t\twhile (true)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (bind_addr == null)\n\t\t\t\t\tret.socket().bind(new InetSocketAddress(start_port));\n\t\t\t\telse\n\t\t\t\t\tret.socket().bind(\n\t\t\t\t\t\tnew InetSocketAddress(bind_addr, start_port),\n\t\t\t\t\t\tbacklog);\n\t\t\t}\n\t\t\tcatch (BindException bind_ex)\n\t\t\t{\n\t\t\t\tstart_port++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcatch (IOException io_ex)\n\t\t\t{\n\t\t\t\tTrace.error(\n\t\t\t\t\t\"ConnectionTable.createServerSocket()\",\n\t\t\t\t\t\"exception is \" + io_ex);\n\t\t\t}\n\t\t\tsrv_port = start_port;\n\t\t\tbreak;\n\t\t}\n\t\tret.register(this.connectSelector, SelectionKey.OP_ACCEPT);\n\t\treturn ret;\n\t}","id":56549,"modified_method":"/** Finds first available port starting at start_port and returns server socket. Sets srv_port */\n    ServerSocket createServerSocket(int start_port) throws Exception {\n        srv_sock_ch = ServerSocketChannel.open();\n\t\tsrv_sock_ch.configureBlocking(false);\n        while(true) {\n            try {\n                if(bind_addr == null)\n\t\t\t\tsrv_sock_ch.socket().bind(new InetSocketAddress(start_port));\n                else\n\t\t\t\tsrv_sock_ch.socket().bind(new InetSocketAddress( bind_addr,start_port), backlog);\n            }\n            catch(BindException bind_ex) {\n                start_port++;\n                continue;\n            }\n            catch(IOException io_ex) {\n                Trace.error(\"ConnectionTable1_4.createServerSocket()\", \"exception is \" + io_ex);\n            }\n            srv_port=start_port;\n            break;\n        }\n\t\tsrv_sock_ch.register(this.selector, SelectionKey.OP_ACCEPT);\n\t\treturn srv_sock_ch.socket();\n    }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"void closeSocket()\n\t\t{\n\t\t\tif (sock != null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tsock.close();\n\t\t\t\t\t// should actually close in/out (so we don't need to close them explicitly)\n\t\t\t\t}\n\t\t\t\tcatch (Exception e)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tsock = null;\n\t\t\t}\n\t\t\tif (out != null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tout.close(); // flushes data\n\t\t\t\t}\n\t\t\t\tcatch (Exception e)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\t// removed 4/22/2003 (request by Roland Kurmann)\n\t\t\t\t// out=null;\n\t\t\t}\n\t\t\tif (in != null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tin.close();\n\t\t\t\t}\n\t\t\t\tcatch (Exception ex)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tin = null;\n\t\t\t}\n\t\t}","id":56550,"modified_method":"void closeSocket() {\n            if(sock != null) {\n                try {\n                    sock_ch.close();\n                }\n                catch(Exception e) {\n                \te.printStackTrace();\n                }\n                sock=null;\n            }\n        }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Try to obtain correct Connection (or create one if not yet existent) */\n\tConnection getConnection(Address dest) throws Exception\n\t{\n\t\tConnection conn = null;\n\t\tSocket sock;\n\n\t\tsynchronized (conns)\n\t\t{\n\t\t\tconn = (Connection) conns.get(dest);\n\t\t\tif (conn == null)\n\t\t\t{\n\t\t\t\tsock =\n\t\t\t\t\tnew Socket(\n\t\t\t\t\t\t((IpAddress) dest).getIpAddress(),\n\t\t\t\t\t\t((IpAddress) dest).getPort());\n\t\t\t\tconn = new Connection(sock, dest);\n\t\t\t\tconn.sendLocalAddress(local_addr);\n\t\t\t\tnotifyConnectionOpened(dest);\n\t\t\t\t// conns.put(dest, conn);\n\t\t\t\taddConnection(dest, conn);\n\t\t\t\tconn.init();\n\t\t\t\tif (Trace.trace)\n\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\"ConnectionTable.getConnection()\",\n\t\t\t\t\t\t\"created socket to \" + dest);\n\t\t\t}\n\t\t\treturn conn;\n\t\t}\n\t}","id":56551,"modified_method":"/** Try to obtain correct Connection (or create one if not yet existent) */\n    Connection getConnection(Address dest) throws Exception {\n        Connection conn=null;\n        SocketChannel sock_ch;\n\n        synchronized(conns) {\n            conn=(Connection)conns.get(dest);\n            if(conn == null) {\n\t\t\t\tInetSocketAddress destAddress =\n\t\t\t\t\tnew InetSocketAddress(\n\t\t\t\t\t\t((IpAddress) dest).getIpAddress(),\n\t\t\t\t\t\t((IpAddress) dest).getPort());\n\t\t\t\tsock_ch = SocketChannel.open(destAddress);\n                conn=new Connection(sock_ch, dest);\n                conn.sendLocalAddress(local_addr);\n                // conns.put(dest, conn);\n                addConnection(dest, conn);\n                pendingSocksList.add(conn);\n                selector.wakeup();\n                notifyConnectionOpened(dest);\n                if(Trace.trace) Trace.info(\"ConnectionTable1_4.getConnection()\", \"created socket to \" + dest);\n            }\n            return conn;\n        }\n    }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"void init()\n\t\t{\n\t\t\tif (Trace.trace)\n\t\t\t\tTrace.info(\n\t\t\t\t\t\"ConnectionTable.Connection.init()\",\n\t\t\t\t\t\"connection was created to \" + peer_addr);\n\t\t\t// TODO register channel with selector or creater should.\n\t\t}","id":56552,"modified_method":"void init() {\n        \ttry\n        \t{\n        \t\tin = null;\n        \t\tout = null;\n        \t}\n        \tcatch(Exception ex)\n        \t{\n        \t\tex.printStackTrace();\n        \t}\n        \t\n        \ttry\n\t\t\t{\n\t\t\t\tsock_ch.configureBlocking(false);\n\t\t\t\tnioMsgReader = new NBMessageForm1_4(DEFAULT_BUFF_SIZE,sock_ch);\n\t\t\t\tsock_ch.register(selector, SelectionKey.OP_READ, this);\n\t\t\t}\n\t\t\tcatch (IOException e)\n\t\t\t{\n\t\t\t\te.printStackTrace();\n\t\t\t}\n            if(Trace.trace)\n                Trace.info(\"ConnectionTable1_4.Connection.init()\", \"connection was created to \" + peer_addr);\n\n        }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"Connection(Socket s, Address peer_addr)\n\t\t{\n\t\t\tsock = s;\n\t\t\tthis.peer_addr = peer_addr;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tout = new DataOutputStream(sock.getOutputStream());\n\t\t\t\tin = new DataInputStream(sock.getInputStream());\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\tTrace.error(\n\t\t\t\t\t\"ConnectionTable.Connection()\",\n\t\t\t\t\t\"exception is \" + ex);\n\t\t\t}\n\t\t}","id":56553,"modified_method":"Connection(SocketChannel s, Address peer_addr) {\n\t\t\tsock_ch=s;\n\t\t\tsock = sock_ch.socket();\n            this.peer_addr=peer_addr;\n            try {\n                out=new DataOutputStream(sock.getOutputStream());\n                in=new DataInputStream(sock.getInputStream());\n            }\n            catch(Exception ex) {\n                Trace.error(\"ConnectionTable1_4.Connection()\", \"exception is \" + ex);\n            }\n        }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"void send(Message msg)\n\t\t{\n\t\t\tsynchronized (send_mutex)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tdoSend(msg);\n\t\t\t\t\tupdateLastAccessed();\n\t\t\t\t}\n\t\t\t\tcatch (IOException io_ex)\n\t\t\t\t{\n\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\tTrace.warn(\n\t\t\t\t\t\t\t\"ConnectionTable.Connection.send()\",\n\t\t\t\t\t\t\t\"peer closed connection, \"\n\t\t\t\t\t\t\t\t+ \"trying to re-establish connection and re-send msg.\");\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tdoSend(msg);\n\t\t\t\t\t\tupdateLastAccessed();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (IOException io_ex2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\tTrace.error(\n\t\t\t\t\t\t\t\t\"ConnectionTable.Connection.send()\",\n\t\t\t\t\t\t\t\t\"2nd attempt to send data failed too\");\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception ex2)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\tTrace.error(\n\t\t\t\t\t\t\t\t\"ConnectionTable.Connection.send()\",\n\t\t\t\t\t\t\t\t\"exception is \" + ex2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (Exception ex)\n\t\t\t\t{\n\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\tTrace.error(\n\t\t\t\t\t\t\t\"ConnectionTable.Connection.send()\",\n\t\t\t\t\t\t\t\"exception is \" + ex);\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":56554,"modified_method":"void send(Message msg) {\n            synchronized(send_mutex) {\n                try {\n                    doSend(msg);\n                    updateLastAccessed();\n                }\n                catch(IOException io_ex) {\n                    if(Trace.trace)\n                        Trace.warn(\"ConnectionTable1_4.Connection.send()\", \"peer closed connection, \" +\n                                                                        \"trying to re-establish connection and re-send msg.\");\n                    try {\n                        doSend(msg);\n                        updateLastAccessed();\n                    }\n                    catch(IOException io_ex2) {\n                        if(Trace.trace) Trace.error(\"ConnectionTable1_4.Connection.send()\", \"2nd attempt to send data failed too\");\n\t\t\t\t\t\tio_ex2.printStackTrace();\n                    }\n                    catch(Exception ex2) {\n                        if(Trace.trace) Trace.error(\"ConnectionTable1_4.Connection.send()\", \"exception is \" + ex2);\n                        ex2.printStackTrace();\n                    }\n                }\n                catch(Exception ex) {\n                    if(Trace.trace) Trace.error(\"ConnectionTable1_4.Connection.send()\", \"exception is \" + ex);\n                    ex.printStackTrace();\n                }\n            }\n        }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n\t\t * Reads the peer's address. First a cookie has to be sent which has to match my own cookie, otherwise\n\t\t * the connection will be refused\n\t\t */\n\t\tAddress readPeerAddress(Socket client_sock) throws Exception\n\t\t{\n\t\t\tAddress peer_addr = null;\n\t\t\tbyte[] version, buf, input_cookie = new byte[cookie.length];\n\t\t\tint len = 0,\n\t\t\t\tclient_port = client_sock != null ? client_sock.getPort() : 0;\n\t\t\tInetAddress client_addr =\n\t\t\t\tclient_sock != null ? client_sock.getInetAddress() : null;\n\n\t\t\tif (in != null)\n\t\t\t{\n\t\t\t\tinitCookie(input_cookie);\n\n\t\t\t\t// read the cookie first\n\t\t\t\tin.read(input_cookie, 0, input_cookie.length);\n\t\t\t\tif (!matchCookie(input_cookie))\n\t\t\t\t\tthrow new SocketException(\n\t\t\t\t\t\t\"ConnectionTable.Connection.readPeerAddress(): cookie sent by \"\n\t\t\t\t\t\t\t+ peer_addr\n\t\t\t\t\t\t\t+ \" does not match own cookie; terminating connection\");\n\t\t\t\t// then read the version\n\t\t\t\tversion = new byte[Version.version_id.length];\n\t\t\t\tin.read(version, 0, version.length);\n\n\t\t\t\tif (Version.compareTo(version) == false)\n\t\t\t\t{\n\t\t\t\t\tTrace.warn(\n\t\t\t\t\t\t\"ConnectionTable.readPeerAddress()\",\n\t\t\t\t\t\t\"packet from \"\n\t\t\t\t\t\t\t+ client_addr\n\t\t\t\t\t\t\t+ \":\"\n\t\t\t\t\t\t\t+ client_port\n\t\t\t\t\t\t\t+ \" has different version (\"\n\t\t\t\t\t\t\t+ Version.printVersionId(\n\t\t\t\t\t\t\t\tversion,\n\t\t\t\t\t\t\t\tVersion.version_id.length)\n\t\t\t\t\t\t\t+ \") from ours (\"\n\t\t\t\t\t\t\t+ Version.printVersionId(Version.version_id)\n\t\t\t\t\t\t\t+ \"). This may cause problems\");\n\t\t\t\t}\n\n\t\t\t\t// read the length of the address\n\t\t\t\tlen = in.readInt();\n\n\t\t\t\t// finally read the address itself\n\t\t\t\tbuf = new byte[len];\n\t\t\t\tin.readFully(buf, 0, len);\n\t\t\t\tpeer_addr = (Address) Util.objectFromByteBuffer(buf);\n\t\t\t\tupdateLastAccessed();\n\t\t\t}\n\t\t\treturn peer_addr;\n\t\t}","id":56555,"modified_method":"/**\n         * Reads the peer's address. First a cookie has to be sent which has to match my own cookie, otherwise\n         * the connection will be refused\n         */\n        Address readPeerAddress(Socket client_sock) throws Exception {\n            Address     peer_addr=null;\n            byte[]      version, buf, input_cookie=new byte[cookie.length];\n            int         len=0, client_port=client_sock != null? client_sock.getPort() : 0;\n            InetAddress client_addr=client_sock != null? client_sock.getInetAddress() : null;\n\n            if(in != null) {\n                initCookie(input_cookie);\n\n                // read the cookie first\n                in.read(input_cookie, 0, input_cookie.length);\n                if(!matchCookie(input_cookie))\n                    throw new SocketException(\"ConnectionTable1_4.Connection.readPeerAddress(): cookie sent by \" +\n                                              peer_addr + \" does not match own cookie; terminating connection\");\n                // then read the version\n                version=new byte[Version.version_id.length];\n                in.read(version, 0, version.length);\n\n                if(Version.compareTo(version) == false) {\n                    Trace.warn(\"ConnectionTable1_4.readPeerAddress()\",\n                               \"packet from \" + client_addr + \":\" + client_port +\n                               \" has different version (\" +\n                               Version.printVersionId(version, Version.version_id.length) +\n                               \") from ours (\" + Version.printVersionId(Version.version_id) +\n                               \"). This may cause problems\");\n                }\n\n                // read the length of the address\n                len=in.readInt();\n\n                // finally read the address itself\n                buf=new byte[len];\n                in.readFully(buf, 0, len);\n                peer_addr=(Address)Util.objectFromByteBuffer(buf);                \n                updateLastAccessed();\n            }\n            return peer_addr;\n        }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n\t * Acceptor thread. Continuously accept new connections. Create a new thread for each new\n\t * connection and put it in conns. When the thread should stop, it is\n\t * interrupted by the thread creator.\n\t */\n\tpublic void run()\n\t{\n\t\tSocket client_sock;\n\t\tConnection conn = null;\n\t\tAddress peer_addr;\n\n\t\twhile (srv_sock != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tconnectSelector.select();\n\t\t\t\tSet readyKeys = connectSelector.selectedKeys();\n\n\t\t\t\tfor (Iterator i = readyKeys.iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tSelectionKey key = (SelectionKey) i.next();\n\t\t\t\t\ti.remove();\n\n\t\t\t\t\tServerSocketChannel readyChannel =\n\t\t\t\t\t\t(ServerSocketChannel) key.channel();\n\n\t\t\t\t\tSocketChannel incomingChannel = readyChannel.accept();\n\t\t\t\t\tincomingChannel.configureBlocking(false);\n\t\t\t\t\tclient_sock = incomingChannel.socket();\n\n\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\t\"ConnectionTable.run()\",\n\t\t\t\t\t\t\t\"accepted connection, client_sock=\" + client_sock);\n\n\t\t\t\t\t// create new thread and add to conn table\n\t\t\t\t\tconn = new Connection(client_sock, null);\n\t\t\t\t\t// will call receive(msg)\n\t\t\t\t\t// get peer's address\n\t\t\t\t\tpeer_addr = conn.readPeerAddress(client_sock);\n\n\t\t\t\t\t// client_addr=new IpAddress(client_sock.getInetAddress(), client_port);\n\t\t\t\t\tconn.setPeerAddress(peer_addr);\n\n\t\t\t\t\tsynchronized (conns)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (conns.contains(peer_addr))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\t\tTrace.warn(\n\t\t\t\t\t\t\t\t\t\"ConnectionTable.run()\",\n\t\t\t\t\t\t\t\t\tpeer_addr\n\t\t\t\t\t\t\t\t\t\t+ \" is already there, will terminate connection\");\n\t\t\t\t\t\t\tconn.destroy();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// conns.put(peer_addr, conn);\n\t\t\t\t\t\taddConnection(peer_addr, conn);\n\t\t\t\t\t}\n\t\t\t\t\tnotifyConnectionOpened(peer_addr);\n\t\t\t\t\tconn.init(); // starts handler thread on this socket\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (SocketException sock_ex)\n\t\t\t{\n\t\t\t\tif (Trace.trace)\n\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\"ConnectionTable.run()\",\n\t\t\t\t\t\t\"exception is \" + sock_ex);\n\t\t\t\tif (conn != null)\n\t\t\t\t\tconn.destroy();\n\t\t\t\tif (srv_sock == null)\n\t\t\t\t\tbreak; // socket was closed, therefore stop\n\t\t\t}\n\t\t\tcatch (Throwable ex)\n\t\t\t{\n\t\t\t\tif (Trace.trace)\n\t\t\t\t\tTrace.warn(\"ConnectionTable.run()\", \"exception is \" + ex);\n\t\t\t}\n\t\t}\n\t}","id":56556,"modified_method":"/**\n\t * Acceptor thread. Continuously accept new connections. Create a new\n\t * thread for each new connection and put it in conns. When the thread\n\t * should stop, it is interrupted by the thread creator.\n\t */\n\tpublic void run()\n\t{\n\t\tSocket client_sock;\n\t\tConnection conn = null;\n\t\tAddress peer_addr;\n\n\t\twhile (srv_sock_ch != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tif (selector.select() > 0)\n\t\t\t\t{\n\t\t\t\t\tSet readyKeys = selector.selectedKeys();\n\t\t\t\t\tfor (Iterator i = readyKeys.iterator(); i.hasNext();)\n\t\t\t\t\t{\n\t\t\t\t\t\tSelectionKey key = (SelectionKey) i.next();\n\t\t\t\t\t\ti.remove();\n\t\t\t\t\t\tif ((key.readyOps() & SelectionKey.OP_ACCEPT)\n\t\t\t\t\t\t\t== SelectionKey.OP_ACCEPT)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tServerSocketChannel readyChannel =\n\t\t\t\t\t\t\t\t(ServerSocketChannel) key.channel();\n\n\t\t\t\t\t\t\tSocketChannel client_sock_ch=\n\t\t\t\t\t\t\t\treadyChannel.accept();\n\t\t\t\t\t\t\tclient_sock = client_sock_ch.socket();\n\t\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\t\t\t\"ConnectionTable1_4.run()\",\n\t\t\t\t\t\t\t\t\t\"accepted connection, client_sock=\"\n\t\t\t\t\t\t\t\t\t\t+ client_sock);\n\n\t\t\t\t\t\t\tconn = new Connection(client_sock_ch, null);\n\t\t\t\t\t\t\t// will call receive(msg)\n\t\t\t\t\t\t\t// get peer's address\n\t\t\t\t\t\t\tpeer_addr = conn.readPeerAddress(client_sock);\n\n\t\t\t\t\t\t\tconn.setPeerAddress(peer_addr);\n\n\t\t\t\t\t\t\tsynchronized (conns)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (conns.contains(peer_addr))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\t\t\t\tTrace.warn(\n\t\t\t\t\t\t\t\t\t\t\t\"ConnectionTable1_4.run()\",\n\t\t\t\t\t\t\t\t\t\t\tpeer_addr\n\t\t\t\t\t\t\t\t\t\t\t\t+ \" is already there, will terminate connection\");\n\t\t\t\t\t\t\t\t\tconn.destroy();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taddConnection(peer_addr, conn);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconn.init();\n\t\t\t\t\t\t\tnotifyConnectionOpened(peer_addr);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (\n\t\t\t\t\t\t\t(key.readyOps() & SelectionKey.OP_READ)\n\t\t\t\t\t\t\t\t== SelectionKey.OP_READ)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tSocketChannel incomingChannel =\n\t\t\t\t\t\t\t(SocketChannel) key.channel();\n\t\t\t\t\t\t\tconn = (Connection) key.attachment();\n\t\t\t\t\t\t\tByteBuffer buff = conn.getNIOMsgReader().readCompleteMsgBuffer();\n\t\t\t\t\t\t\tif(buff != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treceive((Message)Util.objectFromByteBuffer(buff.array()));\n\t\t\t\t\t\t\t\tconn.getNIOMsgReader().reset();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t/*In addition to the accepted Sockets, we must registe \n\t\t\t\t\t * sockets opend by this for OP_READ, because peer may\n\t\t\t\t\t * use the same socket to sends data using the same socket,\n\t\t\t\t\t * instead of opening a new connection. We can not register \n\t\t\t\t\t * with this selectior from a different thread. set pending\n\t\t\t\t\t * and wakeup this selector.\n\t\t\t\t\t */\n\t\t\t\t\tsynchronized (conns)\n\t\t\t\t\t{\n\t\t\t\t\t\tConnection pendingConnection;\n\t\t\t\t\t\twhile( (pendingSocksList.size()>0) && (null != (pendingConnection = (Connection)pendingSocksList.remove(0))) )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpendingConnection.init();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (SocketException sock_ex)\n\t\t\t{\n\t\t\t\tif (Trace.trace)\n\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\"ConnectionTable1_4.run()\",\n\t\t\t\t\t\t\"exception is \" + sock_ex);\n\t\t\t\tif (conn != null)\n\t\t\t\t\tconn.destroy();\n\t\t\t\tif (srv_sock == null)\n\t\t\t\t\tbreak; // socket was closed, therefore stop\n\t\t\t}\n\t\t\tcatch (Throwable ex)\n\t\t\t{\n\t\t\t\tif (Trace.trace)\n\t\t\t\t\tTrace.warn(\n\t\t\t\t\t\t\"ConnectionTable1_4.run()\",\n\t\t\t\t\t\t\"exception is \" + ex);\n\t\t\t}\n\t\t}\n\t}","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"void doSend(Message msg) throws Exception\n\t\t{\n\t\t\tIpAddress dst_addr = (IpAddress) msg.getDest();\n\t\t\tbyte[] buffie = null;\n\n\t\t\tif (dst_addr == null || dst_addr.getIpAddress() == null)\n\t\t\t{\n\t\t\t\tTrace.error(\n\t\t\t\t\t\"ConnectionTable.Connection.doSend()\",\n\t\t\t\t\t\"the destination address is null; aborting send\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\t// set the source address if not yet set\n\t\t\t\tif (msg.getSrc() == null)\n\t\t\t\t\tmsg.setSrc(local_addr);\n\n\t\t\t\tbuffie = Util.objectToByteBuffer(msg);\n\t\t\t\tif (buffie.length <= 0)\n\t\t\t\t{\n\t\t\t\t\tTrace.error(\n\t\t\t\t\t\t\"ConnectionTable.Connection.doSend()\",\n\t\t\t\t\t\t\"buffer.length is 0. Will not send message\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// we're using 'double-writes', sending the buffer to the destination twice. this would\n\t\t\t\t// ensure that, if the peer closed the connection while we were idle, we would get an exception.\n\t\t\t\t// this won't happen if we use a single write (see Stevens, ch. 5.13).\n\t\t\t\tif (out != null)\n\t\t\t\t{\n\t\t\t\t\tout.writeInt(buffie.length);\n\t\t\t\t\t// write the length of the data buffer first\n\t\t\t\t\tUtil.doubleWrite(buffie, out);\n\t\t\t\t\tout.flush(); // may not be very efficient (but safe)\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\tif (Trace.trace)\n\t\t\t\t\tTrace.error(\n\t\t\t\t\t\t\"ConnectionTable.Connection.doSend()\",\n\t\t\t\t\t\t\"to \"\n\t\t\t\t\t\t\t+ dst_addr\n\t\t\t\t\t\t\t+ \", exception is \"\n\t\t\t\t\t\t\t+ ex\n\t\t\t\t\t\t\t+ \", stack trace:\\n\"\n\t\t\t\t\t\t\t+ Util.printStackTrace(ex));\n\t\t\t\tremove(dst_addr);\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t}","id":56557,"modified_method":"void doSend(Message msg) throws Exception {\n            IpAddress dst_addr=(IpAddress)msg.getDest();\n            byte[]    buffie=null;\n\n            if(dst_addr == null || dst_addr.getIpAddress() == null) {\n                Trace.error(\"ConnectionTable1_4.Connection.doSend()\", \"the destination address is null; aborting send\");\n                return;\n            }\n\n            try {\n                // set the source address if not yet set\n                if(msg.getSrc() == null)\n                    msg.setSrc(local_addr);\n\n                buffie=Util.objectToByteBuffer(msg);\n                if(buffie.length <= 0) {\n                    Trace.error(\"ConnectionTable1_4.Connection.doSend()\", \"buffer.length is 0. Will not send message\");\n                    return;\n                }\n\n\n                // we're using 'double-writes', sending the buffer to the destination twice. this would\n                // ensure that, if the peer closed the connection while we were idle, we would get an exception.\n                // this won't happen if we use a single write (see Stevens, ch. 5.13).\n\t\t\t\theaderBuffer.clear();\n\t\t\t\theaderBuffer.putInt(buffie.length);\n\t\t\t\theaderBuffer.flip();\n\t\t\t\tUtil1_4.writeFully(headerBuffer,sock_ch);\n\t\t\t\tByteBuffer sendBuffer = ByteBuffer.wrap(buffie);\n\t\t\t\tUtil1_4.writeFully(sendBuffer, sock_ch);\n            }\n            catch(Exception ex) {\n                if(Trace.trace)\n                    Trace.error(\"ConnectionTable1_4.Connection.doSend()\",\n                                \"to \" + dst_addr + \", exception is \" + ex + \", stack trace:\\n\" +\n                                Util.printStackTrace(ex));\n                ex.printStackTrace();\n                remove(dst_addr);\n                throw ex;\n            }\n        }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n\t Remove <code>addr<\/code>from connection table. This is typically triggered when a member is suspected.\n\t */\n\tpublic void remove(Address addr)\n\t{\n\t\tConnection conn;\n\n\t\tsynchronized (conns)\n\t\t{\n\t\t\tconn = (Connection) conns.get(addr);\n\n\t\t\tif (conn != null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tconn.destroy(); // won't do anything if already destroyed\n\t\t\t\t}\n\t\t\t\tcatch (Exception e)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tconns.remove(addr);\n\t\t\t}\n\t\t\tif (Trace.trace)\n\t\t\t\tTrace.info(\n\t\t\t\t\t\"ConnectionTable.remove()\",\n\t\t\t\t\t\"addr=\" + addr + \", connections are \" + toString());\n\t\t}\n\t}","id":56558,"modified_method":"/**\n     Remove <code>addr<\/code>from connection table. This is typically triggered when a member is suspected.\n     */\n    public void remove(Address addr) {\n        Connection conn;\n\n        synchronized(conns) {\n            conn=(Connection)conns.get(addr);\n\n            if(conn != null) {\n                try {\n                    conn.destroy();  // won't do anything if already destroyed\n                }\n                catch(Exception e) {\n                \te.printStackTrace();\n                }\n                conns.remove(addr);\n            }\n            if(Trace.trace)\n                Trace.info(\"ConnectionTable1_4.remove()\", \"addr=\" + addr + \", connections are \" + toString());\n        }\n    }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n\t\t * Send the cookie first, then the our port number. If the cookie doesn't match the receiver's cookie,\n\t\t * the receiver will reject the connection and close it.\n\t\t */\n\t\tvoid sendLocalAddress(Address local_addr)\n\t\t{\n\t\t\tbyte[] buf;\n\n\t\t\tif (local_addr == null)\n\t\t\t{\n\t\t\t\tTrace.warn(\n\t\t\t\t\t\"ConnectionTable.Connection.sendLocalAddress()\",\n\t\t\t\t\t\"local_addr is null\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (out != null)\n\t\t\t{\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tbuf = Util.objectToByteBuffer(local_addr);\n\n\t\t\t\t\t// write the cookie\n\t\t\t\t\tout.write(cookie, 0, cookie.length);\n\n\t\t\t\t\t// write the version\n\t\t\t\t\tout.write(Version.version_id, 0, Version.version_id.length);\n\n\t\t\t\t\t// write the length of the buffer\n\t\t\t\t\tout.writeInt(buf.length);\n\n\t\t\t\t\t// and finally write the buffer itself\n\t\t\t\t\tout.write(buf, 0, buf.length);\n\t\t\t\t\tout.flush(); // needed ?\n\t\t\t\t\tupdateLastAccessed();\n\t\t\t\t}\n\t\t\t\tcatch (Throwable t)\n\t\t\t\t{\n\t\t\t\t\tTrace.error(\n\t\t\t\t\t\t\"ConnectionTable.Connection.sendLocalAddress()\",\n\t\t\t\t\t\t\"exception is \" + t);\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":56559,"modified_method":"/**\n         * Send the cookie first, then the our port number. If the cookie doesn't match the receiver's cookie,\n         * the receiver will reject the connection and close it.\n         */\n        void sendLocalAddress(Address local_addr) {\n            byte[] buf;\n\n            if(local_addr == null) {\n                Trace.warn(\"ConnectionTable1_4.Connection.sendLocalAddress()\", \"local_addr is null\");\n                return;\n            }\n            if(out != null) {\n                try {\n                    buf=Util.objectToByteBuffer(local_addr);\n\n                    // write the cookie\n                    out.write(cookie, 0, cookie.length);\n\n                    // write the version\n                    out.write(Version.version_id, 0, Version.version_id.length);\n\n                    // write the length of the buffer\n                    out.writeInt(buf.length);\n\n                    // and finally write the buffer itself\n                    out.write(buf, 0, buf.length);\n                    out.flush(); // needed ?\n                    updateLastAccessed();\n                }\n                catch(Throwable t) {\n                    Trace.error(\"ConnectionTable1_4.Connection.sendLocalAddress()\", \"exception is \" + t);\n                }\n            }\n        }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"boolean matchCookie(byte[] input)\n\t\t{\n\t\t\tif (input == null || input.length < cookie.length)\n\t\t\t\treturn false;\n\t\t\tif (Trace.trace)\n\t\t\t\tTrace.info(\n\t\t\t\t\t\"ConnectionTable.Connection.matchCookie()\",\n\t\t\t\t\t\"input_cookie is \" + printCookie(input));\n\t\t\tfor (int i = 0; i < cookie.length; i++)\n\t\t\t\tif (cookie[i] != input[i])\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}","id":56560,"modified_method":"boolean matchCookie(byte[] input) {\n            if(input == null || input.length < cookie.length) return false;\n            if(Trace.trace)\n                Trace.info(\"ConnectionTable1_4.Connection.matchCookie()\", \"input_cookie is \" + printCookie(input));\n            for(int i=0; i < cookie.length; i++)\n                if(cookie[i] != input[i]) return false;\n            return true;\n        }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"public void start() throws Exception\n\t{\n\t\tsrv_sock = createServerSocket(srv_port);\n\n\t\tif (bind_addr != null)\n\t\t\tlocal_addr =\n\t\t\t\tnew IpAddress(bind_addr, srv_sock.socket().getLocalPort());\n\t\telse\n\t\t\tlocal_addr = new IpAddress(srv_sock.socket().getLocalPort());\n\n\t\tif (Trace.trace)\n\t\t{\n\t\t\tTrace.info(\n\t\t\t\t\"ConnectionTable.start()\",\n\t\t\t\t\"server socket created \" + \"on \" + local_addr);\n\t\t}\n\t\tacceptor = new Thread(this, \"ConnectionTable.AcceptorThread\");\n\t\tacceptor.setDaemon(true);\n\t\tacceptor.start();\n\n\t\t// start the connection reaper - will periodically remove unused connections\n\t\tif (use_reaper && reaper == null)\n\t\t{\n\t\t\treaper = new Reaper();\n\t\t\treaper.start();\n\t\t}\n\t}","id":56561,"modified_method":"public void start() throws Exception {\n\t\tthis.selector = Selector.open();\n        srv_sock=createServerSocket(srv_port);\n\n        if(bind_addr != null)\n            local_addr=new IpAddress(bind_addr, srv_sock.getLocalPort());\n        else\n            local_addr=new IpAddress(srv_sock.getLocalPort());\n\n        if(Trace.trace) {\n            Trace.info(\"ConnectionTable1_4.start()\", \"server socket created \" +\n                                                  \"on \" + local_addr);\n        }\n\n        //Roland Kurmann 4/7/2003, build new thread group\n        thread_group = new ThreadGroup(Thread.currentThread().getThreadGroup(), \"ConnectionTableGroup\");\n        //Roland Kurmann 4/7/2003, put in thread_group\n        acceptor=new Thread(thread_group, this, \"ConnectionTable1_4.AcceptorThread\");\n        acceptor.setDaemon(true);\n        acceptor.start();\n\n        // start the connection reaper - will periodically remove unused connections\n        if(use_reaper && reaper == null) {\n            reaper=new Reaper();\n            reaper.start();\n        }\n        pendingSocksList = new ArrayList();\n    }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"void destroy()\n\t\t{\n\t\t\tcloseSocket(); // should terminate handler as well\n\t\t}","id":56562,"modified_method":"void destroy() {\n            closeSocket();\n            nioMsgReader = null;\n        }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"public void start()\n\t\t{\n\t\t\tif (conns.size() == 0)\n\t\t\t\treturn;\n\t\t\tif (t != null && !t.isAlive())\n\t\t\t\tt = null;\n\t\t\tif (t == null)\n\t\t\t{\n\t\t\t\t//RKU 7.4.2003, put in threadgroup\n\t\t\t\tt =\n\t\t\t\t\tnew Thread(\n\t\t\t\t\t\tthread_group,\n\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\"ConnectionTable.ReaperThread\");\n\t\t\t\tt.setDaemon(true);\n\t\t\t\t// will allow us to terminate if all remaining threads are daemons\n\t\t\t\tt.start();\n\t\t\t}\n\t\t}","id":56563,"modified_method":"public void start() {\n            if(conns.size() == 0)\n                return;\n            if(t != null && !t.isAlive())\n                t=null;\n            if(t == null) {\n                //RKU 7.4.2003, put in threadgroup\n                t=new Thread(thread_group, this, \"ConnectionTable1_4.ReaperThread\");\n                t.setDaemon(true); // will allow us to terminate if all remaining threads are daemons\n                t.start();\n            }\n        }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Sends a message to a unicast destination. The destination has to be set */\n\tpublic void send(Message msg)\n\t{\n\t\tAddress dest = msg != null ? msg.getDest() : null;\n\t\tConnection conn;\n\n\t\tif (dest == null)\n\t\t{\n\t\t\tTrace.error(\n\t\t\t\t\"ConnectionTable.send()\",\n\t\t\t\t\"msg is null or message's destination is null\");\n\t\t\treturn;\n\t\t}\n\n\t\t// 1. Try to obtain correct Connection (or create one if not yet existent)\n\t\ttry\n\t\t{\n\t\t\tconn = getConnection(dest);\n\t\t\tif (conn == null)\n\t\t\t\treturn;\n\t\t}\n\t\tcatch (Throwable ex)\n\t\t{\n\t\t\tTrace.info(\n\t\t\t\t\"ConnectionTable.send()\",\n\t\t\t\t\"connection to \" + dest + \" could not be established: \" + ex);\n\t\t\treturn;\n\t\t}\n\n\t\t// 2. Send the message using that connection\n\t\ttry\n\t\t{\n\t\t\tconn.send(msg);\n\t\t}\n\t\tcatch (Throwable ex)\n\t\t{\n\t\t\tif (Trace.trace)\n\t\t\t\tTrace.info(\n\t\t\t\t\t\"ConnectionTable.send()\",\n\t\t\t\t\t\"sending message to \"\n\t\t\t\t\t\t+ dest\n\t\t\t\t\t\t+ \" failed (ex=\"\n\t\t\t\t\t\t+ ex.getClass().getName()\n\t\t\t\t\t\t+ \"); removing from connection table\");\n\t\t\tremove(dest);\n\t\t}\n\t}","id":56564,"modified_method":"/** Sends a message to a unicast destination. The destination has to be set */\n    public void send(Message msg) {\n        Address dest=msg != null ? msg.getDest() : null;\n        Connection conn;\n\n        if(dest == null) {\n            Trace.error(\"ConnectionTable1_4.send()\", \"msg is null or message's destination is null\");\n            return;\n        }\n\n        // 1. Try to obtain correct Connection (or create one if not yet existent)\n        try {\n            conn=getConnection(dest);\n            if(conn == null) return;\n        }\n        catch(Throwable ex) {\n            Trace.info(\"ConnectionTable1_4.send()\", \"connection to \" + dest + \" could not be established: \" + ex);\n            return;\n        }\n\n        // 2. Send the message using that connection\n        try {\n            conn.send(msg);\n        }\n        catch(Throwable ex) {\n            if(Trace.trace)\n                Trace.info(\"ConnectionTable1_4.send()\", \"sending message to \" + dest + \" failed (ex=\" +\n                                                     ex.getClass().getName() + \"); removing from connection table\");\n            remove(dest);\n        }\n    }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n\t * Calls the receiver callback. We serialize access to this method because it may be called concurrently\n\t * by several Connection handler threads. Therefore the receiver doesn't need to synchronize.\n\t */\n\tpublic void receive(Message msg)\n\t{\n\t\tif (receiver != null)\n\t\t{\n\t\t\tsynchronized (recv_mutex)\n\t\t\t{\n\t\t\t\treceiver.receive(msg);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tTrace.error(\n\t\t\t\t\"ConnectionTable.receive()\",\n\t\t\t\t\"receiver is null (not set) !\");\n\t}","id":56565,"modified_method":"/**\n     * Calls the receiver callback. We serialize access to this method because it may be called concurrently\n     * by several Connection handler threads. Therefore the receiver doesn't need to synchronize.\n     */\n    public void receive(Message msg) {\n        if(receiver != null) {\n            synchronized(recv_mutex) {\n                receiver.receive(msg);\n            }\n        }\n        else\n            Trace.error(\"ConnectionTable1_4.receive()\", \"receiver is null (not set) !\");\n    }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"/** Closes all open sockets, the server socket and all threads waiting for incoming messages */\n\tpublic void stop()\n\t{\n\t\tIterator it = null;\n\t\tConnection conn;\n\t\tServerSocketChannel tmp;\n\n\t\t// 1. close the server socket (this also stops the acceptor thread)\n\t\tif (srv_sock != null)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\ttmp = srv_sock;\n\t\t\t\tsrv_sock = null;\n\t\t\t\ttmp.close();\n\t\t\t}\n\t\t\tcatch (Exception e)\n\t\t\t{\n\t\t\t}\n\t\t}\n\n\t\t// 2. then close the connections\n\t\tsynchronized (conns)\n\t\t{\n\t\t\tit = conns.values().iterator();\n\t\t\twhile (it.hasNext())\n\t\t\t{\n\t\t\t\tconn = (Connection) it.next();\n\t\t\t\tconn.destroy();\n\t\t\t}\n\t\t\tconns.clear();\n\t\t}\n\t\tlocal_addr = null;\n\t}","id":56566,"modified_method":"/** Closes all open sockets, the server socket and all threads waiting for incoming messages */\n    public void stop() {\n        Iterator it=null;\n        Connection conn;\n        ServerSocket tmp;\n\n        // 1. close the server socket (this also stops the acceptor thread)\n        if(srv_sock != null) {\n            try {\n                tmp=srv_sock;\n                srv_sock=null;\n                tmp.close();\n            }\n            catch(Exception e) {\n            \te.printStackTrace();\n            }\n        }\n\n\n        // 2. then close the connections\n        synchronized(conns) {\n            it=conns.values().iterator();\n            while(it.hasNext()) {\n                conn=(Connection)it.next();\n                conn.destroy();\n            }\n            conns.clear();\n        }\n        local_addr=null;\n    }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"public void run()\n\t\t{\n\t\t\tConnection value;\n\t\t\tMap.Entry entry;\n\t\t\tlong curr_time;\n\n\t\t\tif (Trace.trace)\n\t\t\t\tTrace.info(\n\t\t\t\t\t\"ConnectionTable.Reaper.run()\",\n\t\t\t\t\t\"connection reaper thread was started. Number of connections=\"\n\t\t\t\t\t\t+ conns.size()\n\t\t\t\t\t\t+ \", reaper_interval=\"\n\t\t\t\t\t\t+ reaper_interval\n\t\t\t\t\t\t+ \", conn_expire_time=\"\n\t\t\t\t\t\t+ conn_expire_time);\n\n\t\t\twhile (conns.size() > 0 && t != null)\n\t\t\t{\n\t\t\t\t// first sleep\n\t\t\t\tUtil.sleep(reaper_interval);\n\t\t\t\tsynchronized (conns)\n\t\t\t\t{\n\t\t\t\t\tcurr_time = System.currentTimeMillis();\n\t\t\t\t\tfor (Iterator it = conns.entrySet().iterator();\n\t\t\t\t\t\tit.hasNext();\n\t\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\tentry = (Map.Entry) it.next();\n\t\t\t\t\t\tvalue = (Connection) entry.getValue();\n\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\t\t\"ConnectionTable.Reaper.run()\",\n\t\t\t\t\t\t\t\t\"connection is \"\n\t\t\t\t\t\t\t\t\t+ ((curr_time - value.last_access) / 1000)\n\t\t\t\t\t\t\t\t\t+ \" seconds old (curr-time=\"\n\t\t\t\t\t\t\t\t\t+ curr_time\n\t\t\t\t\t\t\t\t\t+ \", last_access=\"\n\t\t\t\t\t\t\t\t\t+ value.last_access\n\t\t\t\t\t\t\t\t\t+ \")\");\n\t\t\t\t\t\tif (value.last_access + conn_expire_time < curr_time)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (Trace.trace)\n\t\t\t\t\t\t\t\tTrace.info(\n\t\t\t\t\t\t\t\t\t\"ConnectionTable.Reaper.run()\",\n\t\t\t\t\t\t\t\t\t\"connection \"\n\t\t\t\t\t\t\t\t\t\t+ value\n\t\t\t\t\t\t\t\t\t\t+ \" has been idle for too long (conn_expire_time=\"\n\t\t\t\t\t\t\t\t\t\t+ conn_expire_time\n\t\t\t\t\t\t\t\t\t\t+ \"), will be removed\");\n\n\t\t\t\t\t\t\tvalue.destroy();\n\t\t\t\t\t\t\tit.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (Trace.trace)\n\t\t\t\tTrace.info(\"ConnectionTable.Reaper.run()\", \"reaper terminated\");\n\t\t\tt = null;\n\t\t}","id":56567,"modified_method":"public void run() {\n            Connection value;\n            Map.Entry entry;\n            long curr_time;\n\n            if(Trace.trace)\n                Trace.info(\"ConnectionTable1_4.Reaper.run()\", \"connection reaper thread was started. Number of connections=\" +\n                                                           conns.size() + \", reaper_interval=\" + reaper_interval + \", conn_expire_time=\" +\n                                                           conn_expire_time);\n\n            while(conns.size() > 0 && t != null) {\n                // first sleep\n                Util.sleep(reaper_interval);\n                synchronized(conns) {\n                    curr_time=System.currentTimeMillis();\n                    for(Iterator it=conns.entrySet().iterator(); it.hasNext();) {\n                        entry=(Map.Entry)it.next();\n                        value=(Connection)entry.getValue();\n                        if(Trace.trace)\n                            Trace.info(\"ConnectionTable1_4.Reaper.run()\", \"connection is \" +\n                                                                       ((curr_time - value.last_access) / 1000) + \" seconds old (curr-time=\" +\n                                                                       curr_time + \", last_access=\" + value.last_access + \")\");\n                        if(value.last_access + conn_expire_time < curr_time) {\n                            if(Trace.trace)\n                                Trace.info(\"ConnectionTable1_4.Reaper.run()\", \"connection \" + value +\n                                                                           \" has been idle for too long (conn_expire_time=\" + conn_expire_time +\n                                                                           \"), will be removed\");\n\n                            value.destroy();\n                            it.remove();\n                        }\n                    }\n                }\n            }\n            if(Trace.trace)\n                Trace.info(\"ConnectionTable1_4.Reaper.run()\", \"reaper terminated\");\n            t=null;\n        }","commit_id":"e0fb2658af7d8604dd2256048972fc0ae175b5fd","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * This is a hook for concrete daemons to initialize themselves suitably.\n     *\n     * Subclasses should override this to finish the job (listening on ports, etc.)\n     *\n     * @throws IOException\n     */\n    protected void setup() throws IOException\n    {\n    \tlogger.info(\"JVM vendor/version: {}/{}\", System.getProperty(\"java.vm.name\"), System.getProperty(\"java.version\") );\n        logger.info(\"Heap size: {}/{}\", Runtime.getRuntime().totalMemory(), Runtime.getRuntime().maxMemory());\n\t\tlogger.info(\"Classpath: {}\", System.getProperty(\"java.class.path\"));\n    \tCLibrary.tryMlockall();\n\n        listenPort = DatabaseDescriptor.getRpcPort();\n        listenAddr = DatabaseDescriptor.getRpcAddress();\n\n        Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler()\n        {\n            public void uncaughtException(Thread t, Throwable e)\n            {\n                exceptions.incrementAndGet();\n                logger.error(\"Fatal exception in thread \" + t, e);\n                for (Throwable e2 = e; e2 != null; e2 = e2.getCause())\n                {\n                    // some code, like FileChannel.map, will wrap an OutOfMemoryError in another exception\n                    if (e2 instanceof OutOfMemoryError)\n                        System.exit(100);\n                }\n            }\n        });\n        \n        // check the system table to keep user from shooting self in foot by changing partitioner, cluster name, etc.\n        // we do a one-off scrub of the system table first; we can't load the list of the rest of the tables,\n        // until system table is opened.\n        for (CFMetaData cfm : Schema.instance.getTableMetaData(Table.SYSTEM_TABLE).values())\n            ColumnFamilyStore.scrubDataDirectories(Table.SYSTEM_TABLE, cfm.cfName);\n        try\n        {\n            SystemTable.checkHealth();\n        }\n        catch (ConfigurationException e)\n        {\n            logger.error(\"Fatal exception during initialization\", e);\n            System.exit(100);\n        }\n        \n        // load keyspace descriptions.\n        try\n        {\n            DatabaseDescriptor.loadSchemas();\n        }\n        catch (IOException e)\n        {\n            logger.error(\"Fatal exception during initialization\", e);\n            System.exit(100);\n        }\n        \n        // clean up debris in the rest of the tables\n        for (String table : Schema.instance.getTables())\n        {\n            for (CFMetaData cfm : Schema.instance.getTableMetaData(table).values())\n            {\n                ColumnFamilyStore.scrubDataDirectories(table, cfm.cfName);\n            }\n        }\n\n        // initialize keyspaces\n        for (String table : Schema.instance.getTables())\n        {\n            if (logger.isDebugEnabled())\n                logger.debug(\"opening keyspace \" + table);\n            Table.open(table);\n        }\n\n        try\n        {\n            GCInspector.instance.start();\n        }\n        catch (Throwable t)\n        {\n            logger.warn(\"Unable to start GCInspector (currently only supported on the Sun JVM)\");\n        }\n\n        // replay the log if necessary\n        CommitLog.recover();\n\n        // check to see if CL.recovery modified the lastMigrationId. if it did, we need to re apply migrations. this isn't\n        // the same as merely reloading the schema (which wouldn't perform file deletion after a DROP). The solution\n        // is to read those migrations from disk and apply them.\n        UUID currentMigration = Schema.instance.getVersion();\n        UUID lastMigration = Migration.getLastMigrationId();\n        if ((lastMigration != null) && (lastMigration.timestamp() > currentMigration.timestamp()))\n        {\n            Gossiper.instance.maybeInitializeLocalState(SystemTable.incrementAndGetGeneration());\n            MigrationManager.applyMigrations(currentMigration, lastMigration);\n        }\n        \n        SystemTable.finishStartup();\n\n        // start server internals\n        StorageService.instance.registerDaemon(this);\n        try\n        {\n            StorageService.instance.initServer();\n        }\n        catch (ConfigurationException e)\n        {\n            logger.error(\"Fatal configuration error\", e);\n            System.err.println(e.getMessage() + \"\\nFatal configuration error; unable to start server.  See log for stacktrace.\");\n            System.exit(1);\n        }\n\n        Mx4jTool.maybeLoad();\n    }","id":56568,"modified_method":"/**\n     * This is a hook for concrete daemons to initialize themselves suitably.\n     *\n     * Subclasses should override this to finish the job (listening on ports, etc.)\n     *\n     * @throws IOException\n     */\n    protected void setup() throws IOException\n    {\n    \tlogger.info(\"JVM vendor/version: {}/{}\", System.getProperty(\"java.vm.name\"), System.getProperty(\"java.version\") );\n        logger.info(\"Heap size: {}/{}\", Runtime.getRuntime().totalMemory(), Runtime.getRuntime().maxMemory());\n\t\tlogger.info(\"Classpath: {}\", System.getProperty(\"java.class.path\"));\n    \tCLibrary.tryMlockall();\n\n        listenPort = DatabaseDescriptor.getRpcPort();\n        listenAddr = DatabaseDescriptor.getRpcAddress();\n\n        Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler()\n        {\n            public void uncaughtException(Thread t, Throwable e)\n            {\n                exceptions.incrementAndGet();\n                logger.error(\"Fatal exception in thread \" + t, e);\n                for (Throwable e2 = e; e2 != null; e2 = e2.getCause())\n                {\n                    // some code, like FileChannel.map, will wrap an OutOfMemoryError in another exception\n                    if (e2 instanceof OutOfMemoryError)\n                        System.exit(100);\n                }\n            }\n        });\n        \n        // check the system table to keep user from shooting self in foot by changing partitioner, cluster name, etc.\n        // we do a one-off scrub of the system table first; we can't load the list of the rest of the tables,\n        // until system table is opened.\n        for (CFMetaData cfm : Schema.instance.getTableMetaData(Table.SYSTEM_TABLE).values())\n            ColumnFamilyStore.scrubDataDirectories(Table.SYSTEM_TABLE, cfm.cfName);\n        try\n        {\n            SystemTable.checkHealth();\n        }\n        catch (ConfigurationException e)\n        {\n            logger.error(\"Fatal exception during initialization\", e);\n            System.exit(100);\n        }\n        \n        // load keyspace descriptions.\n        try\n        {\n            DatabaseDescriptor.loadSchemas();\n        }\n        catch (IOException e)\n        {\n            logger.error(\"Fatal exception during initialization\", e);\n            System.exit(100);\n        }\n        \n        // clean up debris in the rest of the tables\n        for (String table : Schema.instance.getTables())\n        {\n            for (CFMetaData cfm : Schema.instance.getTableMetaData(table).values())\n            {\n                ColumnFamilyStore.scrubDataDirectories(table, cfm.cfName);\n            }\n        }\n\n        // initialize keyspaces\n        for (String table : Schema.instance.getTables())\n        {\n            if (logger.isDebugEnabled())\n                logger.debug(\"opening keyspace \" + table);\n            Table.open(table);\n        }\n\n        try\n        {\n            GCInspector.instance.start();\n        }\n        catch (Throwable t)\n        {\n            logger.warn(\"Unable to start GCInspector (currently only supported on the Sun JVM)\");\n        }\n\n        // replay the log if necessary\n        CommitLog.instance.recover();\n\n        // check to see if CL.recovery modified the lastMigrationId. if it did, we need to re apply migrations. this isn't\n        // the same as merely reloading the schema (which wouldn't perform file deletion after a DROP). The solution\n        // is to read those migrations from disk and apply them.\n        UUID currentMigration = Schema.instance.getVersion();\n        UUID lastMigration = Migration.getLastMigrationId();\n        if ((lastMigration != null) && (lastMigration.timestamp() > currentMigration.timestamp()))\n        {\n            Gossiper.instance.maybeInitializeLocalState(SystemTable.incrementAndGetGeneration());\n            MigrationManager.applyMigrations(currentMigration, lastMigration);\n        }\n        \n        SystemTable.finishStartup();\n\n        // start server internals\n        StorageService.instance.registerDaemon(this);\n        try\n        {\n            StorageService.instance.initServer();\n        }\n        catch (ConfigurationException e)\n        {\n            logger.error(\"Fatal configuration error\", e);\n            System.err.println(e.getMessage() + \"\\nFatal configuration error; unable to start server.  See log for stacktrace.\");\n            System.exit(1);\n        }\n\n        Mx4jTool.maybeLoad();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public void shutdownBlocking() throws InterruptedException\n    {\n        executor.shutdown();\n        executor.awaitTermination();\n    }","id":56569,"modified_method":"/**\n     * Shuts down the threads used by the commit log, blocking until completion.\n     */\n    public void shutdownBlocking() throws InterruptedException\n    {\n        executor.shutdown();\n        executor.awaitTermination();\n        allocator.shutdown();\n        allocator.awaitTermination();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public static int recover() throws IOException\n    {\n        String directory = DatabaseDescriptor.getCommitLogLocation();\n        File[] files = new File(directory).listFiles(new FilenameFilter()\n        {\n            public boolean accept(File dir, String name)\n            {\n                // we used to try to avoid instantiating commitlog (thus creating an empty segment ready for writes)\n                // until after recover was finished.  this turns out to be fragile; it is less error-prone to go\n                // ahead and allow writes before recover(), and just skip active segments when we do.\n                return CommitLogSegment.possibleCommitLogFile(name) && !instance.manages(name);\n            }\n        });\n        if (files.length == 0)\n        {\n            logger.info(\"No commitlog files found; skipping replay\");\n            return 0;\n        }\n\n        Arrays.sort(files, new FileUtils.FileComparator());\n        logger.info(\"Replaying \" + StringUtils.join(files, \", \"));\n        int replayed = recover(files);\n        for (File f : files)\n        {\n            if (!f.delete())\n                logger.error(\"Unable to remove \" + f + \"; you should remove it manually or next restart will replay it again (harmless, but time-consuming)\");\n        }\n        logger.info(\"Log replay complete, \" + replayed + \" replayed mutations\");\n        return replayed;\n    }","id":56570,"modified_method":"/**\n     * Perform recovery on commit logs located in the directory specified by the config file.\n     *\n     * @return the number of mutations replayed\n     */\n    public int recover() throws IOException\n    {\n        File[] files = new File(DatabaseDescriptor.getCommitLogLocation()).listFiles(new FilenameFilter()\n        {\n            public boolean accept(File dir, String name)\n            {\n                // we used to try to avoid instantiating commitlog (thus creating an empty segment ready for writes)\n                // until after recover was finished.  this turns out to be fragile; it is less error-prone to go\n                // ahead and allow writes before recover(), and just skip active segments when we do.\n                return CommitLogSegment.possibleCommitLogFile(name) && !instance.allocator.manages(name);\n            }\n        });\n\n        if (files.length == 0)\n        {\n            logger.info(\"No commitlog files found; skipping replay\");\n            return 0;\n        }\n        \n        Arrays.sort(files, new FileUtils.FileComparator());\n        logger.info(\"Replaying \" + StringUtils.join(files, \", \"));\n        int replayed = recover(files);\n        logger.info(\"Log replay complete, \" + replayed + \" replayed mutations\");\n\n        for (File f : files)\n            CommitLog.instance.allocator.recycleSegment(f);\n        return replayed;\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public ReplayPosition getContext()\n    {\n        Callable<ReplayPosition> task = new Callable<ReplayPosition>()\n        {\n            public ReplayPosition call() throws Exception\n            {\n                return currentSegment().getContext();\n            }\n        };\n        try\n        {\n            return executor.submit(task).get();\n        }\n        catch (InterruptedException e)\n        {\n            throw new RuntimeException(e);\n        }\n        catch (ExecutionException e)\n        {\n            throw new RuntimeException(e);\n        }\n    }","id":56571,"modified_method":"/**\n     * @return the current ReplayPosition of the current segment file\n     */\n    public ReplayPosition getContext()\n    {\n        Callable<ReplayPosition> task = new Callable<ReplayPosition>()\n        {\n            public ReplayPosition call() throws Exception\n            {\n                return activeSegment.getContext();\n            }\n        };\n        try\n        {\n            return executor.submit(task).get();\n        }\n        catch (InterruptedException e)\n        {\n            throw new RuntimeException(e);\n        }\n        catch (ExecutionException e)\n        {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"private void createNewSegment() throws IOException\n    {\n        assert !segments.isEmpty();\n        sync();\n        segments.getLast().close();\n        segments.add(new CommitLogSegment());\n\n        // Maintain desired CL size cap\n        if (getSize() >= DatabaseDescriptor.getTotalCommitlogSpaceInMB() * 1024 * 1024)\n        {\n            // Force a flush on all CFs keeping the oldest segment from being removed\n            CommitLogSegment oldestSegment = segments.peek();\n            assert oldestSegment != null; // has to be at least the one we just added\n            for (Integer dirtyCFId : oldestSegment.cfLastWrite.keySet())\n            {\n                String keypace = Schema.instance.getCF(dirtyCFId).left;\n                final ColumnFamilyStore cfs = Table.open(keypace).getColumnFamilyStore(dirtyCFId);\n                // flush shouldn't run on the commitlog executor, since it acquires Table.switchLock,\n                // which may already be held by a thread waiting for the CL executor (via getContext),\n                // causing deadlock\n                Runnable runnable = new Runnable()\n                {\n                    public void run()\n                    {\n                        cfs.forceFlush();\n                    }\n                };\n                StorageService.optionalTasks.execute(runnable);\n            }\n        }\n    }","id":56572,"modified_method":"/**\n     * Fetches a new segment file from the allocator and activates it.\n     * \n     * @return the newly activated segment\n     */\n    private void activateNextSegment() throws IOException\n    {\n        activeSegment = allocator.fetchSegment();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * param @ table - name of table for which we are maintaining\n     *                 this commit log.\n     * param @ recoverymode - is commit log being instantiated in\n     *                        in recovery mode.\n    */\n    private CommitLog()\n    {\n        try\n        {\n            DatabaseDescriptor.createAllDirectories();\n        }\n        catch (IOException e)\n        {\n            throw new IOError(e);\n        }\n\n        // all old segments are recovered and deleted before CommitLog is instantiated.\n        // All we need to do is create a new one.\n        segments.add(new CommitLogSegment());\n\n        executor = DatabaseDescriptor.getCommitLogSync() == Config.CommitLogSync.batch\n                 ? new BatchCommitLogExecutorService()\n                 : new PeriodicCommitLogExecutorService(this);\n\n        MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n        try\n        {\n            mbs.registerMBean(this, new ObjectName(\"org.apache.cassandra.db:type=Commitlog\"));\n        }\n        catch (Exception e)\n        {\n            throw new RuntimeException(e);\n        }\n    }","id":56573,"modified_method":"private CommitLog()\n    {\n        try\n        {\n            DatabaseDescriptor.createAllDirectories();\n\n            allocator = new CommitLogAllocator();\n            activateNextSegment();\n        }\n        catch (IOException e)\n        {\n            throw new IOError(e);\n        }\n\n        executor = DatabaseDescriptor.getCommitLogSync() == Config.CommitLogSync.batch\n                 ? new BatchCommitLogExecutorService()\n                 : new PeriodicCommitLogExecutorService(this);\n\n        MBeanServer mbs = ManagementFactory.getPlatformMBeanServer();\n        try\n        {\n            mbs.registerMBean(this, new ObjectName(\"org.apache.cassandra.db:type=Commitlog\"));\n        }\n        catch (Exception e)\n        {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public void discardCompletedSegments(final Integer cfId, final ReplayPosition context) throws IOException\n    {\n        Callable task = new Callable()\n        {\n            public Object call() throws IOException\n            {\n                discardCompletedSegmentsInternal(context, cfId);\n                return null;\n            }\n        };\n        try\n        {\n            executor.submit(task).get();\n        }\n        catch (InterruptedException e)\n        {\n            throw new RuntimeException(e);\n        }\n        catch (ExecutionException e)\n        {\n            throw new RuntimeException(e);\n        }\n    }","id":56574,"modified_method":"/**\n     * Modifies the per-CF dirty cursors of any commit log segments for the column family according to the position\n     * given. Discards any commit log segments that are no longer used.\n     *\n     * @param cfId    the column family ID that was flushed\n     * @param context the replay position of the flush\n     */\n    public void discardCompletedSegments(final Integer cfId, final ReplayPosition context) throws IOException\n    {\n        Callable task = new Callable()\n        {\n            public Object call() throws IOException\n            {\n                logger.debug(\"discard completed log segments for {}, column family {}\", context, cfId);\n\n                // Go thru the active segment files, which are ordered oldest to newest, marking the\n                // flushed CF as clean, until we reach the segment file containing the ReplayPosition passed\n                // in the arguments. Any segments that become unused after they are marked clean will be\n                // recycled or discarded.\n                for (Iterator<CommitLogSegment> iter = allocator.activeSegments.iterator(); iter.hasNext(); )\n                {\n                    CommitLogSegment segment = iter.next();\n                    segment.markClean(cfId, context);\n\n                    // If the segment is no longer needed, and we have another spare segment in the hopper\n                    // (to keep the last segment from getting discarded), pursue either recycling or deleting\n                    // this segment file.\n                    if (segment.isUnused() && iter.hasNext())\n                    {\n                        logger.debug(\"Commit log segment {} is unused\", segment);\n                        iter.remove();\n                        allocator.recycleSegment(segment);\n                    }\n                    else\n                    {\n                        if (logger.isDebugEnabled())\n                            logger.debug(String.format(\"Not safe to delete commit log %s; dirty is %s; hasNext: %s\",\n                                                       segment, segment.dirtyString(), iter.hasNext()));\n                    }\n\n                    // Don't mark or try to delete any newer segments once we've reached the one containing the\n                    // position of the flush.\n                    if (segment.contains(context))\n                        break;\n                }\n                \n                return null;\n            }\n        };\n        \n        try\n        {\n            executor.submit(task).get();\n        }\n        catch (InterruptedException e)\n        {\n            throw new RuntimeException(e);\n        }\n        catch (ExecutionException e)\n        {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public long getPendingTasks()\n    {\n        return executor.getPendingTasks();\n    }","id":56575,"modified_method":"/**\n     * @return the depth of pending commit log executor queue\n     */\n    public long getPendingTasks()\n    {\n        return executor.getPendingTasks();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public long getCompletedTasks()\n    {\n        return executor.getCompletedTasks();\n    }","id":56576,"modified_method":"/**\n     * @return the number of tasks completed by the commit log executor\n     */\n    public long getCompletedTasks()\n    {\n        return executor.getCompletedTasks();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public void run()\n        {\n            try\n            {\n                currentSegment().write(rowMutation);\n                // roll log if necessary\n                if (currentSegment().length() >= SEGMENT_SIZE)\n                    createNewSegment();\n            }\n            catch (IOException e)\n            {\n                throw new IOError(e);\n            }\n        }","id":56577,"modified_method":"public void run()\n        {\n            try\n            {\n                if (!activeSegment.hasCapacityFor(rowMutation))\n                    activateNextSegment();\n                activeSegment.write(rowMutation);\n            }\n            catch (IOException e)\n            {\n                throw new IOError(e);\n            }\n        }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"void sync() throws IOException\n    {\n        currentSegment().sync();\n    }","id":56578,"modified_method":"/**\n     * Forces a disk flush on the commit log files that need it.\n     */\n    public void sync() throws IOException\n    {\n        for (CommitLogSegment segment : allocator.activeSegments)\n        {\n            if (segment.needsSync())\n            {\n                segment.sync();\n            }\n        }\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public void resetUnsafe()\n    {\n        for (CommitLogSegment segment : segments)\n            segment.close();\n        segments.clear();\n        segments.add(new CommitLogSegment());\n    }","id":56579,"modified_method":"/**\n     * FOR TESTING PURPOSES. See CommitLogAllocator.\n     */\n    public void resetUnsafe() throws IOException\n    {\n        allocator.resetUnsafe();\n        activateNextSegment();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public void add(RowMutation rowMutation) throws IOException\n    {\n        executor.add(new LogRecordAdder(rowMutation));\n    }","id":56580,"modified_method":"/**\n     * Add a RowMutation to the commit log.\n     *\n     * @param rm the RowMutation to add to the log\n     */\n    public void add(RowMutation rm) throws IOException\n    {\n        long totalSize = RowMutation.serializer().serializedSize(rm, MessagingService.version_) + CommitLogSegment.ENTRY_OVERHEAD_SIZE;\n        if (totalSize > CommitLog.SEGMENT_SIZE)\n        {\n            logger.warn(\"Skipping commitlog append of extremely large mutation ({} bytes)\", totalSize);\n            return;\n        }\n\n        executor.add(new LogRecordAdder(rm));\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public long getTotalCommitlogSize()\n    {\n        return getSize();\n    }","id":56581,"modified_method":"/**\n     * @return the total size occupied by commitlo segments expressed in bytes. (used by MBean)\n     */\n    public long getTotalCommitlogSize()\n    {\n        return allocator.bytesUsed();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public void forceNewSegment() throws ExecutionException, InterruptedException\n    {\n        Callable<?> task = new Callable()\n        {\n            public Object call() throws IOException\n            {\n                if (currentSegment().length() > 0)\n                    createNewSegment();\n                return null;\n            }\n        };\n\n        executor.submit(task).get();\n    }","id":56582,"modified_method":"/**\n     * Forces a new segment file to be allocated and activated. Used mainly by truncate. \n     */\n    public void forceNewSegment() throws ExecutionException, InterruptedException\n    {\n        Callable<?> task = new Callable()\n        {\n            public Object call() throws IOException\n            {\n                if (activeSegment.position() > 0)\n                    activateNextSegment();\n                return null;\n            }\n        };\n\n        executor.submit(task).get();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public static int recover(File[] clogs) throws IOException\n    {\n        final Set<Table> tablesRecovered = new HashSet<Table>();\n        List<Future<?>> futures = new ArrayList<Future<?>>();\n        byte[] bytes = new byte[4096];\n        Map<Integer, AtomicInteger> invalidMutations = new HashMap<Integer, AtomicInteger>();\n\n        // count the number of replayed mutation. We don't really care about atomicity, but we need it to be a reference.\n        final AtomicInteger replayedCount = new AtomicInteger();\n\n        // compute per-CF and global replay positions\n        final Map<Integer, ReplayPosition> cfPositions = new HashMap<Integer, ReplayPosition>();\n        for (ColumnFamilyStore cfs : ColumnFamilyStore.all())\n        {\n            // it's important to call RP.gRP per-cf, before aggregating all the positions w/ the Ordering.min call\n            // below: gRP will return NONE if there are no flushed sstables, which is important to have in the\n            // list (otherwise we'll just start replay from the first flush position that we do have, which is not correct).\n            ReplayPosition rp = ReplayPosition.getReplayPosition(cfs.getSSTables());\n            cfPositions.put(cfs.metadata.cfId, rp);\n        }\n        final ReplayPosition globalPosition = Ordering.from(ReplayPosition.comparator).min(cfPositions.values());\n\n        Checksum checksum = new CRC32();\n        for (final File file : clogs)\n        {\n            final long segment = CommitLogSegment.idFromFilename(file.getName());\n\n            RandomAccessReader reader = RandomAccessReader.open(new File(file.getAbsolutePath()), true);\n            assert reader.length() <= Integer.MAX_VALUE;\n\n            try\n            {\n                int replayPosition;\n                if (globalPosition.segment < segment)\n                    replayPosition = 0;\n                else if (globalPosition.segment == segment)\n                    replayPosition = globalPosition.position;\n                else\n                    replayPosition = (int) reader.length();\n\n                if (replayPosition < 0 || replayPosition >= reader.length())\n                {\n                    // replayPosition > reader.length() can happen if some data gets flushed before it is written to the commitlog\n                    // (see https://issues.apache.org/jira/browse/CASSANDRA-2285)\n                    logger.debug(\"skipping replay of fully-flushed {}\", file);\n                    continue;\n                }\n\n                reader.seek(replayPosition);\n\n                if (logger.isDebugEnabled())\n                    logger.debug(\"Replaying \" + file + \" starting at \" + reader.getFilePointer());\n\n                /* read the logs populate RowMutation and apply */\n                while (!reader.isEOF())\n                {\n                    if (logger.isDebugEnabled())\n                        logger.debug(\"Reading mutation at \" + reader.getFilePointer());\n\n                    long claimedCRC32;\n                    int serializedSize;\n                    try\n                    {\n                        // any of the reads may hit EOF\n                        serializedSize = reader.readInt();\n                        // RowMutation must be at LEAST 10 bytes:\n                        // 3 each for a non-empty Table and Key (including the 2-byte length from\n                        // writeUTF/writeWithShortLength) and 4 bytes for column count.\n                        // This prevents CRC by being fooled by special-case garbage in the file; see CASSANDRA-2128\n                        if (serializedSize < 10)\n                            break;\n                        long claimedSizeChecksum = reader.readLong();\n                        checksum.reset();\n                        checksum.update(serializedSize);\n                        if (checksum.getValue() != claimedSizeChecksum)\n                            break; // entry wasn't synced correctly/fully.  that's ok.\n\n                        if (serializedSize > bytes.length)\n                            bytes = new byte[(int) (1.2 * serializedSize)];\n                        reader.readFully(bytes, 0, serializedSize);\n                        claimedCRC32 = reader.readLong();\n                    }\n                    catch(EOFException eof)\n                    {\n                        break; // last CL entry didn't get completely written.  that's ok.\n                    }\n\n                    checksum.update(bytes, 0, serializedSize);\n                    if (claimedCRC32 != checksum.getValue())\n                    {\n                        // this entry must not have been fsynced.  probably the rest is bad too,\n                        // but just in case there is no harm in trying them (since we still read on an entry boundary)\n                        continue;\n                    }\n\n                    /* deserialize the commit log entry */\n                    FastByteArrayInputStream bufIn = new FastByteArrayInputStream(bytes, 0, serializedSize);\n                    RowMutation rm = null;\n                    try\n                    {\n                        // assuming version here. We've gone to lengths to make sure what gets written to the CL is in\n                        // the current version.  so do make sure the CL is drained prior to upgrading a node.\n                        rm = RowMutation.serializer().deserialize(new DataInputStream(bufIn), MessagingService.version_, IColumnSerializer.Flag.LOCAL);\n                    }\n                    catch (UnserializableColumnFamilyException ex)\n                    {\n                        AtomicInteger i = invalidMutations.get(ex.cfId);\n                        if (i == null)\n                        {\n                            i = new AtomicInteger(1);\n                            invalidMutations.put(ex.cfId, i);\n                        }\n                        else\n                            i.incrementAndGet();\n                        continue;\n                    }\n                    \n                    if (logger.isDebugEnabled())\n                        logger.debug(String.format(\"replaying mutation for %s.%s: %s\",\n                                                    rm.getTable(),\n                                                    ByteBufferUtil.bytesToHex(rm.key()),\n                                                    \"{\" + StringUtils.join(rm.getColumnFamilies(), \", \") + \"}\"));\n\n                    final long entryLocation = reader.getFilePointer();\n                    final RowMutation frm = rm;\n                    Runnable runnable = new WrappedRunnable()\n                    {\n                        public void runMayThrow() throws IOException\n                        {\n                            if (Schema.instance.getKSMetaData(frm.getTable()) == null)\n                                return;\n                            final Table table = Table.open(frm.getTable());\n                            RowMutation newRm = new RowMutation(frm.getTable(), frm.key());\n\n                            // Rebuild the row mutation, omitting column families that a) have already been flushed,\n                            // b) are part of a cf that was dropped. Keep in mind that the cf.name() is suspect. do every\n                            // thing based on the cfid instead.\n                            for (ColumnFamily columnFamily : frm.getColumnFamilies())\n                            {\n                                if (Schema.instance.getCF(columnFamily.id()) == null)\n                                    // null means the cf has been dropped\n                                    continue;\n\n                                ReplayPosition rp = cfPositions.get(columnFamily.id());\n\n                                // replay if current segment is newer than last flushed one or, if it is the last known\n                                // segment, if we are after the replay position\n                                if (segment > rp.segment || (segment == rp.segment && entryLocation > rp.position))\n                                {\n                                    newRm.add(columnFamily);\n                                    replayedCount.incrementAndGet();\n                                }\n                            }\n                            if (!newRm.isEmpty())\n                            {\n                                Table.open(newRm.getTable()).apply(newRm, false);\n                                tablesRecovered.add(table);\n                            }\n                        }\n                    };\n                    futures.add(StageManager.getStage(Stage.MUTATION).submit(runnable));\n                    if (futures.size() > MAX_OUTSTANDING_REPLAY_COUNT)\n                    {\n                        FBUtilities.waitOnFutures(futures);\n                        futures.clear();\n                    }\n                }\n            }\n            finally\n            {\n                FileUtils.closeQuietly(reader);\n                logger.info(\"Finished reading \" + file);\n            }\n        }\n        \n        for (Map.Entry<Integer, AtomicInteger> entry : invalidMutations.entrySet())\n            logger.info(String.format(\"Skipped %d mutations from unknown (probably removed) CF with id %d\", entry.getValue().intValue(), entry.getKey()));\n\n        // wait for all the writes to finish on the mutation stage\n        FBUtilities.waitOnFutures(futures);\n        logger.debug(\"Finished waiting on mutations from recovery\");\n\n        // flush replayed tables\n        futures.clear();\n        for (Table table : tablesRecovered)\n            futures.addAll(table.flush());\n        FBUtilities.waitOnFutures(futures);\n\n        return replayedCount.get();\n    }","id":56583,"modified_method":"/**\n     * Perform recovery on a list of commit log files.\n     *\n     * @param clogs   the list of commit log files to replay\n     * @return the number of mutations replayed\n     */\n    public int recover(File[] clogs) throws IOException\n    {\n        final Set<Table> tablesRecovered = new HashSet<Table>();\n        List<Future<?>> futures = new ArrayList<Future<?>>();\n        byte[] bytes = new byte[4096];\n        Map<Integer, AtomicInteger> invalidMutations = new HashMap<Integer, AtomicInteger>();\n\n        // count the number of replayed mutation. We don't really care about atomicity, but we need it to be a reference.\n        final AtomicInteger replayedCount = new AtomicInteger();\n\n        // compute per-CF and global replay positions\n        final Map<Integer, ReplayPosition> cfPositions = new HashMap<Integer, ReplayPosition>();\n        for (ColumnFamilyStore cfs : ColumnFamilyStore.all())\n        {\n            // it's important to call RP.gRP per-cf, before aggregating all the positions w/ the Ordering.min call\n            // below: gRP will return NONE if there are no flushed sstables, which is important to have in the\n            // list (otherwise we'll just start replay from the first flush position that we do have, which is not correct).\n            ReplayPosition rp = ReplayPosition.getReplayPosition(cfs.getSSTables());\n            cfPositions.put(cfs.metadata.cfId, rp);\n        }\n        final ReplayPosition globalPosition = Ordering.from(ReplayPosition.comparator).min(cfPositions.values());\n\n        Checksum checksum = new CRC32();\n        for (final File file : clogs)\n        {\n            logger.info(\"Replaying \" + file.getPath());\n\n            final long segment = CommitLogSegment.idFromFilename(file.getName());\n\n            RandomAccessReader reader = RandomAccessReader.open(new File(file.getAbsolutePath()), true);\n            assert reader.length() <= Integer.MAX_VALUE;\n\n            try\n            {\n                int replayPosition;\n                if (globalPosition.segment < segment)\n                    replayPosition = 0;\n                else if (globalPosition.segment == segment)\n                    replayPosition = globalPosition.position;\n                else\n                    replayPosition = (int) reader.length();\n\n                if (replayPosition < 0 || replayPosition >= reader.length())\n                {\n                    // replayPosition > reader.length() can happen if some data gets flushed before it is written to the commitlog\n                    // (see https://issues.apache.org/jira/browse/CASSANDRA-2285)\n                    logger.debug(\"skipping replay of fully-flushed {}\", file);\n                    continue;\n                }\n\n                reader.seek(replayPosition);\n\n                if (logger.isDebugEnabled())\n                    logger.debug(\"Replaying \" + file + \" starting at \" + reader.getFilePointer());\n\n                /* read the logs populate RowMutation and apply */\n                while (!reader.isEOF())\n                {\n                    if (logger.isDebugEnabled())\n                        logger.debug(\"Reading mutation at \" + reader.getFilePointer());\n\n                    long claimedCRC32;\n                    int serializedSize;\n                    try\n                    {\n                        // any of the reads may hit EOF\n                        serializedSize = reader.readInt();\n                        if (serializedSize == CommitLog.END_OF_SEGMENT_MARKER)\n                        {\n                            logger.debug(\"Encountered end of segment marker at \" + reader.getFilePointer());\n                            break;\n                        }\n\n                        // RowMutation must be at LEAST 10 bytes:\n                        // 3 each for a non-empty Table and Key (including the 2-byte length from\n                        // writeUTF/writeWithShortLength) and 4 bytes for column count.\n                        // This prevents CRC by being fooled by special-case garbage in the file; see CASSANDRA-2128\n                        if (serializedSize < 10)\n                            break;\n                        long claimedSizeChecksum = reader.readLong();\n                        checksum.reset();\n                        checksum.update(serializedSize);\n                        if (checksum.getValue() != claimedSizeChecksum)\n                            break; // entry wasn't synced correctly/fully.  that's ok.\n\n                        if (serializedSize > bytes.length)\n                            bytes = new byte[(int) (1.2 * serializedSize)];\n                        reader.readFully(bytes, 0, serializedSize);\n                        claimedCRC32 = reader.readLong();\n                    }\n                    catch(EOFException eof)\n                    {\n                        break; // last CL entry didn't get completely written.  that's ok.\n                    }\n\n                    checksum.update(bytes, 0, serializedSize);\n                    if (claimedCRC32 != checksum.getValue())\n                    {\n                        // this entry must not have been fsynced.  probably the rest is bad too,\n                        // but just in case there is no harm in trying them (since we still read on an entry boundary)\n                        continue;\n                    }\n\n                    /* deserialize the commit log entry */\n                    FastByteArrayInputStream bufIn = new FastByteArrayInputStream(bytes, 0, serializedSize);\n                    RowMutation rm = null;\n                    try\n                    {\n                        // assuming version here. We've gone to lengths to make sure what gets written to the CL is in\n                        // the current version.  so do make sure the CL is drained prior to upgrading a node.\n                        rm = RowMutation.serializer().deserialize(new DataInputStream(bufIn), MessagingService.version_, IColumnSerializer.Flag.LOCAL);\n                    }\n                    catch (UnserializableColumnFamilyException ex)\n                    {\n                        AtomicInteger i = invalidMutations.get(ex.cfId);\n                        if (i == null)\n                        {\n                            i = new AtomicInteger(1);\n                            invalidMutations.put(ex.cfId, i);\n                        }\n                        else\n                            i.incrementAndGet();\n                        continue;\n                    }\n                    \n                    if (logger.isDebugEnabled())\n                        logger.debug(String.format(\"replaying mutation for %s.%s: %s\",\n                                                    rm.getTable(),\n                                                    ByteBufferUtil.bytesToHex(rm.key()),\n                                                    \"{\" + StringUtils.join(rm.getColumnFamilies().iterator(), \", \") + \"}\"));\n\n                    final long entryLocation = reader.getFilePointer();\n                    final RowMutation frm = rm;\n                    Runnable runnable = new WrappedRunnable()\n                    {\n                        public void runMayThrow() throws IOException\n                        {\n                            if (Schema.instance.getKSMetaData(frm.getTable()) == null)\n                                return;\n                            final Table table = Table.open(frm.getTable());\n                            RowMutation newRm = new RowMutation(frm.getTable(), frm.key());\n\n                            // Rebuild the row mutation, omitting column families that a) have already been flushed,\n                            // b) are part of a cf that was dropped. Keep in mind that the cf.name() is suspect. do every\n                            // thing based on the cfid instead.\n                            for (ColumnFamily columnFamily : frm.getColumnFamilies())\n                            {\n                                if (Schema.instance.getCF(columnFamily.id()) == null)\n                                    // null means the cf has been dropped\n                                    continue;\n\n                                ReplayPosition rp = cfPositions.get(columnFamily.id());\n\n                                // replay if current segment is newer than last flushed one or, if it is the last known\n                                // segment, if we are after the replay position\n                                if (segment > rp.segment || (segment == rp.segment && entryLocation > rp.position))\n                                {\n                                    newRm.add(columnFamily);\n                                    replayedCount.incrementAndGet();\n                                }\n                            }\n                            if (!newRm.isEmpty())\n                            {\n                                Table.open(newRm.getTable()).apply(newRm, false);\n                                tablesRecovered.add(table);\n                            }\n                        }\n                    };\n                    futures.add(StageManager.getStage(Stage.MUTATION).submit(runnable));\n                    if (futures.size() > MAX_OUTSTANDING_REPLAY_COUNT)\n                    {\n                        FBUtilities.waitOnFutures(futures);\n                        futures.clear();\n                    }\n                }\n            }\n            finally\n            {\n                FileUtils.closeQuietly(reader);\n                logger.info(\"Finished reading \" + file);\n            }\n        }\n        \n        for (Map.Entry<Integer, AtomicInteger> entry : invalidMutations.entrySet())\n            logger.info(String.format(\"Skipped %d mutations from unknown (probably removed) CF with id %d\", entry.getValue().intValue(), entry.getKey()));\n\n        // wait for all the writes to finish on the mutation stage\n        FBUtilities.waitOnFutures(futures);\n        logger.debug(\"Finished waiting on mutations from recovery\");\n\n        // flush replayed tables\n        futures.clear();\n        for (Table table : tablesRecovered)\n            futures.addAll(table.flush());\n        FBUtilities.waitOnFutures(futures);\n\n        allocator.enableReserveSegmentCreation();\n\n        return replayedCount.get();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"@Override\n    public String toString()\n    {\n        return \"CommitLogSegment(\" + logWriter.getPath() + ')';\n    }","id":56584,"modified_method":"@Override\n    public String toString()\n    {\n        return \"CommitLogSegment(\" + getPath() + ')';\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public static long idFromFilename(String filename)\n    {\n        Matcher matcher = COMMIT_LOG_FILE_PATTERN.matcher(filename);\n        try\n        {\n            if (matcher.matches())\n                return Long.valueOf(matcher.group(1));\n            else\n                return -1L;\n        }\n        catch (NumberFormatException e)\n        {\n            return -1L;\n        }\n    }","id":56585,"modified_method":"/**\n     * Extracts the commit log ID from filename\n     *\n     * @param   filename  the filename of the commit log file\n     * @returns the extracted commit log ID\n     */\n    public static long idFromFilename(String filename)\n    {\n        Matcher matcher = COMMIT_LOG_FILE_PATTERN.matcher(filename);\n        try\n        {\n            if (matcher.matches())\n                return Long.valueOf(matcher.group(1));\n            else\n                return -1L;\n        }\n        catch (NumberFormatException e)\n        {\n            return -1L;\n        }\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public ReplayPosition getContext()\n    {\n        long position = logWriter.getFilePointer();\n        assert position <= Integer.MAX_VALUE;\n        return new ReplayPosition(id, (int) position);\n    }","id":56586,"modified_method":"/**\n     * @return the current ReplayPosition for this log segment\n     */\n    public ReplayPosition getContext()\n    {\n        return new ReplayPosition(id, buffer.position());\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public String getPath()\n    {\n        return logWriter.getPath();\n    }","id":56587,"modified_method":"/**\n     * @return the file path to this segment\n     */\n    public String getPath()\n    {\n        return logFile.getPath();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public ReplayPosition write(RowMutation rowMutation) throws IOException\n    {\n        ReplayPosition cLogCtx = getContext();\n\n        try\n        {\n            for (ColumnFamily columnFamily : rowMutation.getColumnFamilies())\n            {\n                // check for null cfm in case a cl write goes through after the cf is\n                // defined but before a new segment is created.\n                CFMetaData cfm = Schema.instance.getCFMetaData(columnFamily.id());\n                if (cfm == null)\n                {\n                    logger.error(\"Attempted to write commit log entry for unrecognized column family: \" + columnFamily.id());\n                }\n                else\n                {\n                    turnOn(cfm.cfId, cLogCtx.position);\n                }\n            }\n\n            // write mutation, w/ checksum on the size and data\n            Checksum checksum = new CRC32();\n            byte[] serializedRow = rowMutation.getSerializedBuffer(MessagingService.version_);\n            checksum.update(serializedRow.length);\n            logWriter.stream.writeInt(serializedRow.length);\n            logWriter.stream.writeLong(checksum.getValue());\n            logWriter.write(serializedRow);\n            checksum.update(serializedRow, 0, serializedRow.length);\n            logWriter.stream.writeLong(checksum.getValue());\n\n            return cLogCtx;\n        }\n        catch (IOException e)\n        {\n            logWriter.truncate(cLogCtx.position);\n            throw e;\n        }\n    }","id":56588,"modified_method":"/**\n     * Appends a row mutation onto the commit log.  Requres that hasCapacityFor has already been checked.\n     *\n     * @param   rowMutation   the mutation to append to the commit log. \n     * @return  the position of the appended mutation\n     */\n    public ReplayPosition write(RowMutation rowMutation) throws IOException\n    {\n        assert !closed;\n        ReplayPosition repPos = getContext();\n        markDirty(rowMutation, repPos);\n\n        CRC32 checksum = new CRC32();\n        byte[] serializedRow = rowMutation.getSerializedBuffer(MessagingService.version_);\n\n        checksum.update(serializedRow.length);\n        buffer.putInt(serializedRow.length);\n        buffer.putLong(checksum.getValue());\n\n        buffer.put(serializedRow);\n        checksum.update(serializedRow);\n        buffer.putLong(checksum.getValue());\n\n        // writes end of segment marker and rewinds back to position where it starts\n        buffer.putInt(CommitLog.END_OF_SEGMENT_MARKER);\n        buffer.position(buffer.position() - CommitLog.END_OF_SEGMENT_MARKER_SIZE);\n\n        needsSync = true;\n        return repPos;\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public void sync() throws IOException\n    {\n        logWriter.sync();\n    }","id":56589,"modified_method":"/**\n     * Forces a disk flush for this segment file.\n     */\n    public void sync() throws IOException\n    {\n        buffer.force();\n        needsSync = false;\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"String dirtyString()\n    {\n        StringBuilder sb = new StringBuilder();\n        for (Integer cfId : cfLastWrite.keySet())\n        {\n            CFMetaData m = Schema.instance.getCFMetaData(cfId);\n            sb.append(m == null ? \"<deleted>\" : m.cfName).append(\" (\").append(cfId).append(\"), \");\n        }\n        return sb.toString();\n    }","id":56590,"modified_method":"public String dirtyString()\n    {\n        StringBuilder sb = new StringBuilder();\n        for (Integer cfId : cfLastWrite.keySet())\n        {\n            CFMetaData m = Schema.instance.getCFMetaData(cfId);\n            sb.append(m == null ? \"<deleted>\" : m.cfName).append(\" (\").append(cfId).append(\"), \");\n        }\n        return sb.toString();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public static boolean possibleCommitLogFile(String filename)\n    {\n        return COMMIT_LOG_FILE_PATTERN.matcher(filename).matches();\n    }","id":56591,"modified_method":"/**\n     * @param   filename  the filename to check\n     * @returns true if filename could be a commit log based on it's filename\n     */\n    public static boolean possibleCommitLogFile(String filename)\n    {\n        return COMMIT_LOG_FILE_PATTERN.matcher(filename).matches();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public String getName()\n    {\n        return logWriter.getPath().substring(logWriter.getPath().lastIndexOf(File.separator) + 1);\n    }","id":56592,"modified_method":"/**\n     * @return the file name of this segment\n     */\n    public String getName()\n    {\n        return logFile.getName();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public CommitLogSegment()\n    {\n        id = System.currentTimeMillis();\n        String logFile = DatabaseDescriptor.getCommitLogLocation() + File.separator + \"CommitLog-\" + id + \".log\";\n        logger.info(\"Creating new commitlog segment \" + logFile);\n\n        try\n        {\n            logWriter = createWriter(logFile);\n        }\n        catch (IOException e)\n        {\n            throw new IOError(e);\n        }\n    }","id":56593,"modified_method":"/**\n     * Constructs a new segment file.\n     *\n     * @param filePath  if not null, recycles the existing file by renaming it and truncating it to CommitLog.SEGMENT_SIZE.\n     */\n    CommitLogSegment(String filePath)\n    {\n        id = System.nanoTime();\n        logFile = new File(DatabaseDescriptor.getCommitLogLocation(), FILENAME_PREFIX + id + FILENAME_EXTENSION);\n        boolean isCreating = true;\n\n        try\n        {\n            if (filePath != null)\n            {\n                File oldFile = new File(filePath);\n\n                if (oldFile.exists())\n                {\n                    logger.debug(\"Re-using discarded CommitLog segment for \" + id + \" from \" + filePath);\n                    oldFile.renameTo(logFile);\n                    isCreating = false;\n                }\n            }\n\n            // Open the initial the segment file\n            logFileAccessor = new RandomAccessFile(logFile, \"rw\");\n\n            if (isCreating)\n            {\n                logger.debug(\"Creating new commit log segment \" + logFile.getPath());\n            }\n\n            // Map the segment, extending or truncating it to the standard segment size\n            logFileAccessor.setLength(CommitLog.SEGMENT_SIZE);\n\n            buffer = logFileAccessor.getChannel().map(FileChannel.MapMode.READ_WRITE, (long) 0, (long) CommitLog.SEGMENT_SIZE);\n            buffer.putInt(CommitLog.END_OF_SEGMENT_MARKER);\n            buffer.position(0);\n        }\n        catch (IOException e)\n        {\n            throw new IOError(e);\n        } \n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public void close()\n    {\n        if (finalSize >= 0)\n            return;\n\n        try\n        {\n            finalSize = logWriter.length();\n            logWriter.close();\n        }\n        catch (IOException e)\n        {\n            throw new IOError(e);\n        }\n    }","id":56594,"modified_method":"/**\n     * Close the segment file.\n     */\n    public void close()\n    {\n        if (closed)\n            return;\n\n        try\n        {\n            logFileAccessor.close();\n            closed = true;\n        }\n        catch (IOException e)\n        {\n            throw new IOError(e);\n        }\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void testDontDeleteIfDirty() throws Exception\n    {\n        CommitLog.instance.resetUnsafe();\n        // Roughly 32 MB mutation\n        RowMutation rm = new RowMutation(\"Keyspace1\", bytes(\"k\"));\n        rm.add(new QueryPath(\"Standard1\", null, bytes(\"c1\")), ByteBuffer.allocate(32 * 1024 * 1024), 0);\n\n        // Adding it 5 times\n        CommitLog.instance.add(rm);\n        CommitLog.instance.add(rm);\n        CommitLog.instance.add(rm);\n        CommitLog.instance.add(rm);\n        CommitLog.instance.add(rm);\n\n        // Adding new mutation on another CF\n        RowMutation rm2 = new RowMutation(\"Keyspace1\", bytes(\"k\"));\n        rm2.add(new QueryPath(\"Standard2\", null, bytes(\"c1\")), ByteBuffer.allocate(4), 0);\n        CommitLog.instance.add(rm2);\n\n        assert CommitLog.instance.segmentsCount() == 2 : \"Expecting 2 segments, got \" + CommitLog.instance.segmentsCount();\n\n        int cfid2 = rm2.getColumnFamilyIds().iterator().next();\n        CommitLog.instance.discardCompletedSegments(cfid2, CommitLog.instance.getContext());\n\n        // Assert we still have both our segment\n        assert CommitLog.instance.segmentsCount() == 2 : \"Expecting 2 segments, got \" + CommitLog.instance.segmentsCount();\n    }","id":56595,"modified_method":"@Test\n    public void testDontDeleteIfDirty() throws Exception\n    {\n        CommitLog.instance.resetUnsafe();\n        // Roughly 32 MB mutation\n        RowMutation rm = new RowMutation(\"Keyspace1\", bytes(\"k\"));\n        rm.add(new QueryPath(\"Standard1\", null, bytes(\"c1\")), ByteBuffer.allocate(32 * 1024 * 1024), 0);\n\n        // Adding it 5 times\n        CommitLog.instance.add(rm);\n        CommitLog.instance.add(rm);\n        CommitLog.instance.add(rm);\n        CommitLog.instance.add(rm);\n        CommitLog.instance.add(rm);\n\n        // Adding new mutation on another CF\n        RowMutation rm2 = new RowMutation(\"Keyspace1\", bytes(\"k\"));\n        rm2.add(new QueryPath(\"Standard2\", null, bytes(\"c1\")), ByteBuffer.allocate(4), 0);\n        CommitLog.instance.add(rm2);\n\n        assert CommitLog.instance.activeSegments() == 2 : \"Expecting 2 segments, got \" + CommitLog.instance.activeSegments();\n\n        int cfid2 = rm2.getColumnFamilyIds().iterator().next();\n        CommitLog.instance.discardCompletedSegments(cfid2, CommitLog.instance.getContext());\n\n        // Assert we still have both our segment\n        assert CommitLog.instance.activeSegments() == 2 : \"Expecting 2 segments, got \" + CommitLog.instance.activeSegments();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void testDeleteIfNotDirty() throws Exception\n    {\n        CommitLog.instance.resetUnsafe();\n        // Roughly 32 MB mutation\n        RowMutation rm = new RowMutation(\"Keyspace1\", bytes(\"k\"));\n        rm.add(new QueryPath(\"Standard1\", null, bytes(\"c1\")), ByteBuffer.allocate(32 * 1024 * 1024), 0);\n\n        // Adding it twice (won't change segment)\n        CommitLog.instance.add(rm);\n        CommitLog.instance.add(rm);\n\n        assert CommitLog.instance.segmentsCount() == 1 : \"Expecting 1 segment, got \" + CommitLog.instance.segmentsCount();\n\n        // \"Flush\": this won't delete anything\n        int cfid1 = rm.getColumnFamilyIds().iterator().next();\n        CommitLog.instance.discardCompletedSegments(cfid1, CommitLog.instance.getContext());\n\n        assert CommitLog.instance.segmentsCount() == 1 : \"Expecting 1 segment, got \" + CommitLog.instance.segmentsCount();\n\n        // Adding new mutation on another CF so that a new segment is created\n        RowMutation rm2 = new RowMutation(\"Keyspace1\", bytes(\"k\"));\n        rm2.add(new QueryPath(\"Standard2\", null, bytes(\"c1\")), ByteBuffer.allocate(64 * 1024 * 1024), 0);\n        CommitLog.instance.add(rm2);\n        CommitLog.instance.add(rm2);\n\n        assert CommitLog.instance.segmentsCount() == 2 : \"Expecting 2 segments, got \" + CommitLog.instance.segmentsCount();\n\n\n        // \"Flush\" second cf: The first segment should be deleted since we\n        // didn't write anything on cf1 since last flush (and we flush cf2)\n\n        int cfid2 = rm2.getColumnFamilyIds().iterator().next();\n        CommitLog.instance.discardCompletedSegments(cfid2, CommitLog.instance.getContext());\n\n        // Assert we still have both our segment\n        assert CommitLog.instance.segmentsCount() == 1 : \"Expecting 1 segment, got \" + CommitLog.instance.segmentsCount();\n    }","id":56596,"modified_method":"@Test\n    public void testDeleteIfNotDirty() throws Exception\n    {\n        CommitLog.instance.resetUnsafe();\n        // Roughly 32 MB mutation\n        RowMutation rm = new RowMutation(\"Keyspace1\", bytes(\"k\"));\n        rm.add(new QueryPath(\"Standard1\", null, bytes(\"c1\")), ByteBuffer.allocate(32 * 1024 * 1024), 0);\n\n        // Adding it twice (won't change segment)\n        CommitLog.instance.add(rm);\n        CommitLog.instance.add(rm);\n\n        assert CommitLog.instance.activeSegments() == 1 : \"Expecting 1 segment, got \" + CommitLog.instance.activeSegments();\n\n        // \"Flush\": this won't delete anything\n        int cfid1 = rm.getColumnFamilyIds().iterator().next();\n        CommitLog.instance.discardCompletedSegments(cfid1, CommitLog.instance.getContext());\n\n        assert CommitLog.instance.activeSegments() == 1 : \"Expecting 1 segment, got \" + CommitLog.instance.activeSegments();\n\n        // Adding new mutation on another CF, large enough (including CL entry overhead) that a new segment is created\n        RowMutation rm2 = new RowMutation(\"Keyspace1\", bytes(\"k\"));\n        rm2.add(new QueryPath(\"Standard2\", null, bytes(\"c1\")), ByteBuffer.allocate(64 * 1024 * 1024), 0);\n        CommitLog.instance.add(rm2);\n        // also forces a new segment, since each entry-with-overhead is just over half the CL size\n        CommitLog.instance.add(rm2);\n\n        assert CommitLog.instance.activeSegments() == 3 : \"Expecting 3 segments, got \" + CommitLog.instance.activeSegments();\n\n\n        // \"Flush\" second cf: The first segment should be deleted since we\n        // didn't write anything on cf1 since last flush (and we flush cf2)\n\n        int cfid2 = rm2.getColumnFamilyIds().iterator().next();\n        CommitLog.instance.discardCompletedSegments(cfid2, CommitLog.instance.getContext());\n\n        // Assert we still have both our segment\n        assert CommitLog.instance.activeSegments() == 1 : \"Expecting 1 segment, got \" + CommitLog.instance.activeSegments();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void testRecoveryWithEmptyLog() throws Exception\n    {\n        CommitLog.recover(new File[] {tmpFile()});\n    }","id":56597,"modified_method":"@Test\n    public void testRecoveryWithEmptyLog() throws Exception\n    {\n        CommitLog.instance.recover(new File[]{ tmpFile() });\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"protected void testRecovery(byte[] logData) throws Exception\n    {\n        File logFile = tmpFile();\n        OutputStream lout = new FileOutputStream(logFile);\n        lout.write(logData);\n        //statics make it annoying to test things correctly\n        CommitLog.recover(new File[] {logFile}); //CASSANDRA-1119 / CASSANDRA-1179 throw on failure*/\n    }","id":56598,"modified_method":"protected void testRecovery(byte[] logData) throws Exception\n    {\n        File logFile = tmpFile();\n        OutputStream lout = new FileOutputStream(logFile);\n        lout.write(logData);\n        //statics make it annoying to test things correctly\n        CommitLog.instance.recover(new File[]{ logFile }); //CASSANDRA-1119 / CASSANDRA-1179 throw on failure*/\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    /* test that commit logs do not replay flushed data */\n    public void testWithFlush() throws Exception\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        // add a row to another CF so we test skipping mutations within a not-entirely-flushed CF\n        insertRow(\"Standard2\", \"key\");\n\n        for (int i = 0; i < 100; i++)\n        {\n            String key = \"key\" + i;\n            insertRow(\"Standard1\", key);\n        }\n\n        Table table1 = Table.open(\"Keyspace1\");\n        ColumnFamilyStore cfs = table1.getColumnFamilyStore(\"Standard1\");\n        logger.debug(\"forcing flush\");\n        cfs.forceBlockingFlush();\n\n        logger.debug(\"begin manual replay\");\n        // replay the commit log (nothing on Standard1 should be replayed since everything was flushed, so only the row on Standard2\n        // will be replayed)\n        CommitLog.instance.resetUnsafe();\n        int replayed = CommitLog.recover();\n        assert replayed == 1 : \"Expecting only 1 replayed mutation, got \" + replayed;\n    }","id":56599,"modified_method":"@Test\n    /* test that commit logs do not replay flushed data */\n    public void testWithFlush() throws Exception\n    {\n        CompactionManager.instance.disableAutoCompaction();\n\n        // add a row to another CF so we test skipping mutations within a not-entirely-flushed CF\n        insertRow(\"Standard2\", \"key\");\n\n        for (int i = 0; i < 100; i++)\n        {\n            String key = \"key\" + i;\n            insertRow(\"Standard1\", key);\n        }\n\n        Table table1 = Table.open(\"Keyspace1\");\n        ColumnFamilyStore cfs = table1.getColumnFamilyStore(\"Standard1\");\n        logger.debug(\"forcing flush\");\n        cfs.forceBlockingFlush();\n\n        logger.debug(\"begin manual replay\");\n        // replay the commit log (nothing on Standard1 should be replayed since everything was flushed, so only the row on Standard2\n        // will be replayed)\n        CommitLog.instance.resetUnsafe();\n        int replayed = CommitLog.instance.recover();\n        assert replayed == 1 : \"Expecting only 1 replayed mutation, got \" + replayed;\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void testMissingHeader() throws IOException, ExecutionException, InterruptedException\n    {\n        Table table1 = Table.open(\"Keyspace1\");\n        Table table2 = Table.open(\"Keyspace2\");\n\n        RowMutation rm;\n        DecoratedKey dk = Util.dk(\"keymulti\");\n        ColumnFamily cf;\n\n        rm = new RowMutation(\"Keyspace1\", dk.key);\n        cf = ColumnFamily.create(\"Keyspace1\", \"Standard1\");\n        cf.addColumn(column(\"col1\", \"val1\", 1L));\n        rm.add(cf);\n        rm.apply();\n\n        rm = new RowMutation(\"Keyspace2\", dk.key);\n        cf = ColumnFamily.create(\"Keyspace2\", \"Standard3\");\n        cf.addColumn(column(\"col2\", \"val2\", 1L));\n        rm.add(cf);\n        rm.apply();\n\n        table1.getColumnFamilyStore(\"Standard1\").clearUnsafe();\n        table2.getColumnFamilyStore(\"Standard3\").clearUnsafe();\n\n        // nuke the header\n        for (File file : new File(DatabaseDescriptor.getCommitLogLocation()).listFiles())\n        {\n            if (file.getName().endsWith(\".header\"))\n                FileUtils.deleteWithConfirm(file);\n        }\n\n        CommitLog.instance.resetUnsafe(); // disassociate segments from live CL\n        CommitLog.recover();\n\n        assertColumns(Util.getColumnFamily(table1, dk, \"Standard1\"), \"col1\");\n        assertColumns(Util.getColumnFamily(table2, dk, \"Standard3\"), \"col2\");\n    }","id":56600,"modified_method":"@Test\n    public void testMissingHeader() throws IOException, ExecutionException, InterruptedException\n    {\n        Table table1 = Table.open(\"Keyspace1\");\n        Table table2 = Table.open(\"Keyspace2\");\n\n        RowMutation rm;\n        DecoratedKey dk = Util.dk(\"keymulti\");\n        ColumnFamily cf;\n\n        rm = new RowMutation(\"Keyspace1\", dk.key);\n        cf = ColumnFamily.create(\"Keyspace1\", \"Standard1\");\n        cf.addColumn(column(\"col1\", \"val1\", 1L));\n        rm.add(cf);\n        rm.apply();\n\n        rm = new RowMutation(\"Keyspace2\", dk.key);\n        cf = ColumnFamily.create(\"Keyspace2\", \"Standard3\");\n        cf.addColumn(column(\"col2\", \"val2\", 1L));\n        rm.add(cf);\n        rm.apply();\n\n        table1.getColumnFamilyStore(\"Standard1\").clearUnsafe();\n        table2.getColumnFamilyStore(\"Standard3\").clearUnsafe();\n\n        // nuke the header\n        for (File file : new File(DatabaseDescriptor.getCommitLogLocation()).listFiles())\n        {\n            if (file.getName().endsWith(\".header\"))\n                FileUtils.deleteWithConfirm(file);\n        }\n\n        CommitLog.instance.resetUnsafe(); // disassociate segments from live CL\n        CommitLog.instance.recover();\n\n        assertColumns(Util.getColumnFamily(table1, dk, \"Standard1\"), \"col1\");\n        assertColumns(Util.getColumnFamily(table2, dk, \"Standard3\"), \"col2\");\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void testOne() throws IOException, ExecutionException, InterruptedException\n    {\n        Table table1 = Table.open(\"Keyspace1\");\n        Table table2 = Table.open(\"Keyspace2\");\n\n        RowMutation rm;\n        DecoratedKey dk = Util.dk(\"keymulti\");\n        ColumnFamily cf;\n\n        rm = new RowMutation(\"Keyspace1\", dk.key);\n        cf = ColumnFamily.create(\"Keyspace1\", \"Standard1\");\n        cf.addColumn(column(\"col1\", \"val1\", 1L));\n        rm.add(cf);\n        rm.apply();\n\n        rm = new RowMutation(\"Keyspace2\", dk.key);\n        cf = ColumnFamily.create(\"Keyspace2\", \"Standard3\");\n        cf.addColumn(column(\"col2\", \"val2\", 1L));\n        rm.add(cf);\n        rm.apply();\n\n        table1.getColumnFamilyStore(\"Standard1\").clearUnsafe();\n        table2.getColumnFamilyStore(\"Standard3\").clearUnsafe();\n\n        CommitLog.instance.resetUnsafe(); // disassociate segments from live CL\n        CommitLog.recover();\n\n        assertColumns(Util.getColumnFamily(table1, dk, \"Standard1\"), \"col1\");\n        assertColumns(Util.getColumnFamily(table2, dk, \"Standard3\"), \"col2\");\n    }","id":56601,"modified_method":"@Test\n    public void testOne() throws IOException, ExecutionException, InterruptedException\n    {\n        Table table1 = Table.open(\"Keyspace1\");\n        Table table2 = Table.open(\"Keyspace2\");\n\n        RowMutation rm;\n        DecoratedKey dk = Util.dk(\"keymulti\");\n        ColumnFamily cf;\n\n        rm = new RowMutation(\"Keyspace1\", dk.key);\n        cf = ColumnFamily.create(\"Keyspace1\", \"Standard1\");\n        cf.addColumn(column(\"col1\", \"val1\", 1L));\n        rm.add(cf);\n        rm.apply();\n\n        rm = new RowMutation(\"Keyspace2\", dk.key);\n        cf = ColumnFamily.create(\"Keyspace2\", \"Standard3\");\n        cf.addColumn(column(\"col2\", \"val2\", 1L));\n        rm.add(cf);\n        rm.apply();\n\n        table1.getColumnFamilyStore(\"Standard1\").clearUnsafe();\n        table2.getColumnFamilyStore(\"Standard3\").clearUnsafe();\n\n        CommitLog.instance.resetUnsafe(); // disassociate segments from live CL\n        CommitLog.instance.recover();\n\n        assertColumns(Util.getColumnFamily(table1, dk, \"Standard1\"), \"col1\");\n        assertColumns(Util.getColumnFamily(table2, dk, \"Standard3\"), \"col2\");\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void testNothingToRecover() throws IOException {\n        CommitLog.recover();\n    }","id":56602,"modified_method":"@Test\n    public void testNothingToRecover() throws IOException {\n        CommitLog.instance.recover();\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void testRecoverCounter() throws IOException, ExecutionException, InterruptedException\n    {\n        Table table1 = Table.open(\"Keyspace1\");\n\n        RowMutation rm;\n        DecoratedKey dk = Util.dk(\"key\");\n        ColumnFamily cf;\n\n        for (int i = 0; i < 10; ++i)\n        {\n            rm = new RowMutation(\"Keyspace1\", dk.key);\n            cf = ColumnFamily.create(\"Keyspace1\", \"Counter1\");\n            cf.addColumn(new CounterColumn(ByteBufferUtil.bytes(\"col\"), 1L, 1L));\n            rm.add(cf);\n            rm.apply();\n        }\n\n        table1.getColumnFamilyStore(\"Counter1\").clearUnsafe();\n\n        CommitLog.instance.resetUnsafe(); // disassociate segments from live CL\n        CommitLog.recover();\n\n        cf = Util.getColumnFamily(table1, dk, \"Counter1\");\n\n        assert cf.getColumnCount() == 1;\n        IColumn c = cf.getColumn(ByteBufferUtil.bytes(\"col\"));\n\n        assert c != null;\n        assert ((CounterColumn)c).total() == 10L;\n    }","id":56603,"modified_method":"@Test\n    public void testRecoverCounter() throws IOException, ExecutionException, InterruptedException\n    {\n        Table table1 = Table.open(\"Keyspace1\");\n\n        RowMutation rm;\n        DecoratedKey dk = Util.dk(\"key\");\n        ColumnFamily cf;\n\n        for (int i = 0; i < 10; ++i)\n        {\n            rm = new RowMutation(\"Keyspace1\", dk.key);\n            cf = ColumnFamily.create(\"Keyspace1\", \"Counter1\");\n            cf.addColumn(new CounterColumn(ByteBufferUtil.bytes(\"col\"), 1L, 1L));\n            rm.add(cf);\n            rm.apply();\n        }\n\n        table1.getColumnFamilyStore(\"Counter1\").clearUnsafe();\n\n        CommitLog.instance.resetUnsafe(); // disassociate segments from live CL\n        CommitLog.instance.recover();\n\n        cf = Util.getColumnFamily(table1, dk, \"Counter1\");\n\n        assert cf.getColumnCount() == 1;\n        IColumn c = cf.getColumn(ByteBufferUtil.bytes(\"col\"));\n\n        assert c != null;\n        assert ((CounterColumn)c).total() == 10L;\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n\tpublic void testTruncate() throws IOException, ExecutionException, InterruptedException\n\t{\n\t\tTable table = Table.open(\"Keyspace1\");\n\t\tColumnFamilyStore cfs = table.getColumnFamilyStore(\"Standard1\");\n\n\t\tRowMutation rm;\n\t\tColumnFamily cf;\n\n\t\t// add a single cell\n\t\trm = new RowMutation(\"Keyspace1\", ByteBufferUtil.bytes(\"keymulti\"));\n\t\tcf = ColumnFamily.create(\"Keyspace1\", \"Standard1\");\n\t\tcf.addColumn(column(\"col1\", \"val1\", 1L));\n\t\trm.add(cf);\n\t\trm.apply();\n\n\t\t// Make sure data was written\n\t\tassertNotNull(getFromTable(table, \"Standard1\", \"keymulti\", \"col1\"));\n\n\t\t// and now truncate it\n\t\tcfs.truncate().get();\n        CommitLog.instance.resetUnsafe();\n\t\tCommitLog.recover();\n\n\t\t// and validate truncation.\n\t\tassertNull(getFromTable(table, \"Standard1\", \"keymulti\", \"col1\"));\n\t}","id":56604,"modified_method":"@Test\n\tpublic void testTruncate() throws IOException, ExecutionException, InterruptedException\n\t{\n\t\tTable table = Table.open(\"Keyspace1\");\n\t\tColumnFamilyStore cfs = table.getColumnFamilyStore(\"Standard1\");\n\n\t\tRowMutation rm;\n\t\tColumnFamily cf;\n\n\t\t// add a single cell\n\t\trm = new RowMutation(\"Keyspace1\", ByteBufferUtil.bytes(\"keymulti\"));\n\t\tcf = ColumnFamily.create(\"Keyspace1\", \"Standard1\");\n\t\tcf.addColumn(column(\"col1\", \"val1\", 1L));\n\t\trm.add(cf);\n\t\trm.apply();\n\n\t\t// Make sure data was written\n\t\tassertNotNull(getFromTable(table, \"Standard1\", \"keymulti\", \"col1\"));\n\n\t\t// and now truncate it\n\t\tcfs.truncate().get();\n        CommitLog.instance.resetUnsafe();\n\t\tCommitLog.instance.recover();\n\n\t\t// and validate truncation.\n\t\tassertNull(getFromTable(table, \"Standard1\", \"keymulti\", \"col1\"));\n\t}","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"public static RowMutation fromBytes(byte[] raw, int version) throws IOException\n    {\n        RowMutation rm = serializer_.deserialize(new DataInputStream(new FastByteArrayInputStream(raw)), version);\n        boolean hasCounters = false;\n        for (Map.Entry<Integer, ColumnFamily> entry : rm.modifications_.entrySet())\n        {\n            if (entry.getValue().metadata().getDefaultValidator().isCommutative())\n            {\n                hasCounters = true;\n                break;\n            }\n        }\n\n        // We need to deserialize at least once for counters to cleanup the delta\n        if (!hasCounters)\n            rm.preserializedBuffers.put(version, raw);\n        return rm;\n    }","id":56605,"modified_method":"public static RowMutation fromBytes(byte[] raw, int version) throws IOException\n    {\n        RowMutation rm = serializer_.deserialize(new DataInputStream(new FastByteArrayInputStream(raw)), version);\n        boolean hasCounters = false;\n        for (Map.Entry<Integer, ColumnFamily> entry : rm.modifications_.entrySet())\n        {\n            if (entry.getValue().metadata().getDefaultValidator().isCommutative())\n            {\n                hasCounters = true;\n                break;\n            }\n        }\n\n        // We need to deserialize at least once for counters to cleanup the delta\n        if (!hasCounters && version == MessagingService.version_)\n            rm.preserializedBuffers.put(version, raw);\n        return rm;\n    }","commit_id":"babc10530621c6f380abb738b1c548c50d5b7bed","url":"https://github.com/apache/cassandra"},{"original_method":"@Override\n  protected void publish(MetricsScope scope, Iterator<MetricsRecord> metrics) throws Exception {\n    while (metrics.hasNext()) {\n      MetricsRecord record = metrics.next();\n      String context = record.getContext();\n      boolean increment = false;\n\n      // Context is expected to look like appId.b.programId.[m|r].[taskId]\n      String counterGroup;\n      String contextParts[] = splitPattern.split(context);\n      //TODO: Refactor to support any context\n      if (context.equals(Constants.Metrics.DATASET_CONTEXT)) {\n        counterGroup = \"cdap.dataset\";\n      } else if (\"m\".equals(contextParts[3])) {\n        counterGroup = \"cdap.mapper\";\n      } else if (\"r\".equals(contextParts[3])) {\n        counterGroup = \"cdap.reducer\";\n      } else {\n        LOG.error(\"could not determine if the metric is a map or reduce metric from context {}, skipping...\", context);\n        continue;\n      }\n\n      counterGroup += \".\" + scope.name();\n\n      if (record.getType() == MetricType.COUNTER) {\n        increment = true;\n      }\n\n      String counterName = getCounterName(record.getName());\n      if (increment) {\n        taskContext.getCounter(counterGroup, counterName).increment(record.getValue());\n      } else {\n        taskContext.getCounter(counterGroup, counterName).setValue(record.getValue());\n      }\n\n      for (TagMetric tag : record.getTags()) {\n        counterName = getCounterName(record.getName(), tag.getTag());\n        if (counterName != null) {\n          if (increment) {\n            taskContext.getCounter(counterGroup, counterName).increment(tag.getValue());\n          } else {\n            taskContext.getCounter(counterGroup, counterName).setValue(tag.getValue());\n          }\n        }\n      }\n    }\n  }","id":56606,"modified_method":"@Override\n  protected void publish(MetricsScope scope, Iterator<MetricsRecord> metrics) throws Exception {\n    while (metrics.hasNext()) {\n      MetricsRecord record = metrics.next();\n      String context = record.getContext();\n      boolean increment = false;\n\n      // Context is expected to look like appId.b.programId.[m|r].[taskId]\n      String counterGroup;\n      String contextParts[] = splitPattern.split(context);\n      //TODO: Refactor to support any context\n      if (context.equals(Constants.Metrics.DATASET_CONTEXT)) {\n        counterGroup = \"cdap.dataset\";\n      } else if (\"m\".equals(contextParts[3])) {\n        counterGroup = \"cdap.mapper\";\n      } else if (\"r\".equals(contextParts[3])) {\n        counterGroup = \"cdap.reducer\";\n      } else {\n        LOG.error(\"could not determine if the metric is a map or reduce metric from context {}, skipping...\", context);\n        continue;\n      }\n\n      counterGroup += \".\" + record.getType().toString();\n      counterGroup += \".\" + scope.name();\n\n      if (record.getType() == MetricType.COUNTER) {\n        increment = true;\n      }\n\n      String counterName = getCounterName(record.getName());\n      if (increment) {\n        taskContext.getCounter(counterGroup, counterName).increment(record.getValue());\n      } else {\n        taskContext.getCounter(counterGroup, counterName).setValue(record.getValue());\n      }\n\n      for (TagMetric tag : record.getTags()) {\n        counterName = getCounterName(record.getName(), tag.getTag());\n        if (counterName != null) {\n          if (increment) {\n            taskContext.getCounter(counterGroup, counterName).increment(tag.getValue());\n          } else {\n            taskContext.getCounter(counterGroup, counterName).setValue(tag.getValue());\n          }\n        }\n      }\n    }\n  }","commit_id":"b3ea1a8860a4f7e0163c22a3a9d29110a4b9f9e8","url":"https://github.com/caskdata/cdap"},{"original_method":"public MapReduceMetricsWriter(Job jobConf, BasicMapReduceContext context) {\n    this.jobConf = jobConf;\n    this.context = context;\n  }","id":56607,"modified_method":"public MapReduceMetricsWriter(Job jobConf, BasicMapReduceContext context) {\n    this.jobConf = jobConf;\n    this.context = context;\n    this.previousMapStats = HashBasedTable.create();\n    this.previousReduceStats = HashBasedTable.create();\n    this.previousDatasetStats = HashBasedTable.create();\n  }","commit_id":"b3ea1a8860a4f7e0163c22a3a9d29110a4b9f9e8","url":"https://github.com/caskdata/cdap"},{"original_method":"private void reportSystemStats() throws IOException, InterruptedException {\n    Counters counters = jobConf.getCounters();\n    for (String group : counters.getGroupNames()) {\n      if (group.startsWith(\"cdap.\")) {\n        String[] parts = group.split(\"\\\\.\");\n        String scopePart = parts[parts.length - 1];\n        // last one should be scope\n        MetricsScope scope;\n        try {\n          scope = MetricsScope.valueOf(scopePart);\n        } catch (IllegalArgumentException e) {\n          // SHOULD NEVER happen, simply skip if happens\n          continue;\n        }\n\n        //TODO: Refactor to support any context\n        String programPart = parts[1];\n        if (programPart.equals(\"mapper\")) {\n          reportSystemStats(counters.getGroup(group), context.getSystemMapperMetrics(scope));\n        } else if (programPart.equals(\"reducer\")) {\n          reportSystemStats(counters.getGroup(group), context.getSystemReducerMetrics(scope));\n        } else if (programPart.equals(\"dataset\")) {\n          reportSystemStats(counters.getGroup(group), context.getMetricsCollectionService().getCollector(\n            scope, Constants.Metrics.DATASET_CONTEXT, context.getRunId().getId()));\n        }\n      }\n    }\n  }","id":56608,"modified_method":"private void reportSystemStats() throws IOException, InterruptedException {\n    Counters counters = jobConf.getCounters();\n    for (String group : counters.getGroupNames()) {\n      if (group.startsWith(\"cdap.\")) {\n        String[] parts = group.split(\"\\\\.\");\n        MetricType metricType = MetricType.valueOf(parts[parts.length - 2]);\n        String scopePart = parts[parts.length - 1];\n        // last one should be scope\n        MetricsScope scope;\n        try {\n          scope = MetricsScope.valueOf(scopePart);\n        } catch (IllegalArgumentException e) {\n          // SHOULD NEVER happen, simply skip if happens\n          continue;\n        }\n\n        //TODO: Refactor to support any context\n        String programPart = parts[1];\n        if (programPart.equals(\"mapper\")) {\n          reportSystemStats(counters.getGroup(group), context.getSystemMapperMetrics(scope), scope,\n                            previousMapStats, metricType);\n        } else if (programPart.equals(\"reducer\")) {\n          reportSystemStats(counters.getGroup(group), context.getSystemReducerMetrics(scope), scope,\n                            previousReduceStats, metricType);\n        } else if (programPart.equals(\"dataset\")) {\n          reportSystemStats(counters.getGroup(group), context.getMetricsCollectionService().getCollector(\n                              scope, Constants.Metrics.DATASET_CONTEXT, context.getRunId().getId()),\n                            scope, previousDatasetStats, metricType);\n        }\n      }\n    }\n  }","commit_id":"b3ea1a8860a4f7e0163c22a3a9d29110a4b9f9e8","url":"https://github.com/caskdata/cdap"},{"original_method":"private void reportMapredStats() throws IOException, InterruptedException {\n    // map stats\n    float mapProgress = jobConf.getStatus().getMapProgress();\n    int runningMappers = 0;\n    int runningReducers = 0;\n    for (TaskReport tr : jobConf.getTaskReports(TaskType.MAP)) {\n      runningMappers += tr.getRunningTaskAttemptIds().size();\n    }\n    for (TaskReport tr : jobConf.getTaskReports(TaskType.REDUCE)) {\n      runningReducers += tr.getRunningTaskAttemptIds().size();\n    }\n    int memoryPerMapper = jobConf.getConfiguration().getInt(Job.MAP_MEMORY_MB, Job.DEFAULT_MAP_MEMORY_MB);\n    int memoryPerReducer = jobConf.getConfiguration().getInt(Job.REDUCE_MEMORY_MB, Job.DEFAULT_REDUCE_MEMORY_MB);\n\n    long mapInputRecords = getTaskCounter(TaskCounter.MAP_INPUT_RECORDS);\n    long mapOutputRecords = getTaskCounter(TaskCounter.MAP_OUTPUT_RECORDS);\n    long mapOutputBytes = getTaskCounter(TaskCounter.MAP_OUTPUT_BYTES);\n\n    context.getSystemMapperMetrics().gauge(METRIC_COMPLETION, (long) (mapProgress * 100));\n    context.getSystemMapperMetrics().gauge(METRIC_INPUT_RECORDS, mapInputRecords);\n    context.getSystemMapperMetrics().gauge(METRIC_OUTPUT_RECORDS, mapOutputRecords);\n    context.getSystemMapperMetrics().gauge(METRIC_BYTES, mapOutputBytes);\n    context.getSystemMapperMetrics().gauge(METRIC_USED_CONTAINERS, runningMappers);\n    context.getSystemMapperMetrics().gauge(METRIC_USED_MEMORY, runningMappers * memoryPerMapper);\n\n    LOG.trace(\"Reporting mapper stats: (completion, ins, outs, bytes, containers, memory) = ({}, {}, {}, {}, {}, {})\",\n              (int) (mapProgress * 100), mapInputRecords, mapOutputRecords, mapOutputBytes, runningMappers,\n              runningMappers * memoryPerMapper);\n\n    // reduce stats\n    float reduceProgress = jobConf.getStatus().getReduceProgress();\n    long reduceInputRecords = getTaskCounter(TaskCounter.REDUCE_INPUT_RECORDS);\n    long reduceOutputRecords = getTaskCounter(TaskCounter.REDUCE_OUTPUT_RECORDS);\n\n    context.getSystemReducerMetrics().gauge(METRIC_COMPLETION, (long) (reduceProgress * 100));\n    context.getSystemReducerMetrics().gauge(METRIC_INPUT_RECORDS, reduceInputRecords);\n    context.getSystemReducerMetrics().gauge(METRIC_OUTPUT_RECORDS, reduceOutputRecords);\n    context.getSystemReducerMetrics().gauge(METRIC_USED_CONTAINERS, runningReducers);\n    context.getSystemReducerMetrics().gauge(METRIC_USED_MEMORY, runningReducers * memoryPerReducer);\n\n    LOG.trace(\"Reporting reducer stats: (completion, ins, outs, containers, memory) = ({}, {}, {}, {}, {})\",\n              (int) (reduceProgress * 100), reduceInputRecords, reduceOutputRecords, runningReducers,\n              runningReducers * memoryPerReducer);\n  }","id":56609,"modified_method":"private void reportMapredStats() throws IOException, InterruptedException {\n    // map stats\n    float mapProgress = jobConf.getStatus().getMapProgress();\n    int runningMappers = 0;\n    int runningReducers = 0;\n    for (TaskReport tr : jobConf.getTaskReports(TaskType.MAP)) {\n      runningMappers += tr.getRunningTaskAttemptIds().size();\n    }\n    for (TaskReport tr : jobConf.getTaskReports(TaskType.REDUCE)) {\n      runningReducers += tr.getRunningTaskAttemptIds().size();\n    }\n    int memoryPerMapper = jobConf.getConfiguration().getInt(Job.MAP_MEMORY_MB, Job.DEFAULT_MAP_MEMORY_MB);\n    int memoryPerReducer = jobConf.getConfiguration().getInt(Job.REDUCE_MEMORY_MB, Job.DEFAULT_REDUCE_MEMORY_MB);\n\n    // mapred counters are running counters whereas our metrics timeseries and aggregates make more\n    // sense as incremental numbers.  So we want to subtract the current counter value from the previous before\n    // emitting to the metrics system.\n    int mapInputRecords = calcDiffAndSetMapStat(METRIC_INPUT_RECORDS, getTaskCounter(TaskCounter.MAP_INPUT_RECORDS));\n    int mapOutputRecords = calcDiffAndSetMapStat(METRIC_OUTPUT_RECORDS, getTaskCounter(TaskCounter.MAP_OUTPUT_RECORDS));\n    int mapOutputBytes = calcDiffAndSetMapStat(METRIC_BYTES, getTaskCounter(TaskCounter.MAP_OUTPUT_BYTES));\n\n    context.getSystemMapperMetrics().gauge(METRIC_COMPLETION, (long) (mapProgress * 100));\n    context.getSystemMapperMetrics().increment(METRIC_INPUT_RECORDS, mapInputRecords);\n    context.getSystemMapperMetrics().increment(METRIC_OUTPUT_RECORDS, mapOutputRecords);\n    context.getSystemMapperMetrics().increment(METRIC_BYTES, mapOutputBytes);\n    context.getSystemMapperMetrics().gauge(METRIC_USED_CONTAINERS, runningMappers);\n    context.getSystemMapperMetrics().gauge(METRIC_USED_MEMORY, runningMappers * memoryPerMapper);\n\n    LOG.trace(\"Reporting mapper stats: (completion, ins, outs, bytes, containers, memory) = ({}, {}, {}, {}, {}, {})\",\n              (int) (mapProgress * 100), mapInputRecords, mapOutputRecords, mapOutputBytes, runningMappers,\n              runningMappers * memoryPerMapper);\n\n    // reduce stats\n    float reduceProgress = jobConf.getStatus().getReduceProgress();\n    int reduceInputRecords =\n      calcDiffAndSetReduceStat(METRIC_INPUT_RECORDS, getTaskCounter(TaskCounter.REDUCE_INPUT_RECORDS));\n    int reduceOutputRecords =\n      calcDiffAndSetReduceStat(METRIC_OUTPUT_RECORDS, getTaskCounter(TaskCounter.REDUCE_OUTPUT_RECORDS));\n\n    context.getSystemReducerMetrics().gauge(METRIC_COMPLETION, (long) (reduceProgress * 100));\n    context.getSystemReducerMetrics().increment(METRIC_INPUT_RECORDS, reduceInputRecords);\n    context.getSystemReducerMetrics().increment(METRIC_OUTPUT_RECORDS, reduceOutputRecords);\n    context.getSystemReducerMetrics().gauge(METRIC_USED_CONTAINERS, runningReducers);\n    context.getSystemReducerMetrics().gauge(METRIC_USED_MEMORY, runningReducers * memoryPerReducer);\n\n    LOG.trace(\"Reporting reducer stats: (completion, ins, outs, containers, memory) = ({}, {}, {}, {}, {})\",\n              (int) (reduceProgress * 100), reduceInputRecords, reduceOutputRecords, runningReducers,\n              runningReducers * memoryPerReducer);\n  }","commit_id":"b3ea1a8860a4f7e0163c22a3a9d29110a4b9f9e8","url":"https://github.com/caskdata/cdap"},{"original_method":"private void reportSystemStats(Iterable<Counter> counters, MetricsCollector collector) {\n\n    for (Counter counter : counters) {\n      // \"<metric>\" or \"<metric>,<tag>\" if tag is present\n      String[] parts = counter.getName().split(\",\", 2);\n      String metric = parts[0];\n      if (parts.length == 2) {\n        // has tag\n        String tag = parts[1];\n        collector.gauge(metric, counter.getValue(), tag);\n      } else {\n        collector.gauge(metric, counter.getValue());\n      }\n    }\n  }","id":56610,"modified_method":"private void reportGaugeSystemStats(Iterable<Counter> counters, MetricsCollector collector) {\n    for (Counter counter : counters) {\n      // \"<metric>\" or \"<metric>,<tag>\" if tag is present\n      String[] parts = counter.getName().split(\",\", 2);\n      String metric = parts[0];\n      if (parts.length == 2) {\n        // has tag\n        String tag = parts[1];\n        collector.gauge(metric, counter.getValue(), tag);\n      } else {\n        collector.gauge(metric, counter.getValue());\n      }\n    }\n  }","commit_id":"b3ea1a8860a4f7e0163c22a3a9d29110a4b9f9e8","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public void paint(Editor editor, Graphics g, Rectangle r) {\n    if (!myCondition.get()) return;\n\n    // FIXME: painting of hundreds of AA lines lead to heavy UI slowdown. Each line is drew by ~(DISPLAY_WIDTH / 2) lines.\n    // TODO: We should paint somehow else, faster. Dotlines?\n\n    GraphicsUtil.setupAAPainting(g);\n\n    int y = r.y;\n    final int gutterWidth = ((EditorEx)editor).getGutterComponentEx().getWidth();\n    final int editorWidth = editor.getScrollingModel().getVisibleArea().width;\n    int lineHeight = myEditor.getLineHeight();\n\n    myTornLine.ensureLastX(editorWidth + gutterWidth);\n\n    TIntArrayList pointsX = myTornLine.getPointsX();\n    TIntArrayList pointsY = myTornLine.getPointsY();\n    g.setColor(getOuterColor());\n    drawCurved(g, pointsX, pointsY, 0, gutterWidth, 0, y, lineHeight, TornLine.ourOuterRadius);\n    g.setColor(getInnerColor());\n    drawCurved(g, pointsX, pointsY, 0, gutterWidth, 0, y, lineHeight, TornLine.ourInnerRadius);\n  }","id":56611,"modified_method":"@Override\n  public void paint(Editor editor, Graphics g, Rectangle r) {\n    if (!myCondition.get()) return;\n\n    // FIXME: painting of hundreds of AA lines lead to heavy UI slowdown. Each line is drew by ~(DISPLAY_WIDTH / 2) lines.\n    // TODO: We should paint somehow else, faster. Dotlines?\n\n    int y = r.y;\n    final int gutterWidth = ((EditorEx)editor).getGutterComponentEx().getWidth();\n    final int editorWidth = editor.getScrollingModel().getVisibleArea().width;\n    int lineHeight = myEditor.getLineHeight();\n\n    myTornLine.ensureLastX(editorWidth + gutterWidth);\n    TIntArrayList pointsX = myTornLine.getPointsX();\n    TIntArrayList pointsY = myTornLine.getPointsY();\n\n    GraphicsConfig config = GraphicsUtil.setupAAPainting(g);\n\n    g.setColor(getOuterColor());\n    drawCurved(g, pointsX, pointsY, 0, gutterWidth, 0, y, lineHeight, TornLine.ourOuterRadius);\n    g.setColor(getInnerColor());\n    drawCurved(g, pointsX, pointsY, 0, gutterWidth, 0, y, lineHeight, TornLine.ourInnerRadius);\n\n    config.restore();\n  }","commit_id":"675e26210b4f45b0cb07117e290d17a0e8ac9e7c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void drawLine(Graphics g, int x1, int x2, int y) {\n    if (!myCondition.get()) return;\n\n    y++; // we want y to be line's top position\n\n    GraphicsUtil.setupAAPainting(g);\n\n    Rectangle clip = g.getClipBounds();\n    x2 = clip.x + clip.width;\n\n    final int lineWidth = x2 - x1;\n    final int gutterWidth = ((EditorEx)myEditor).getGutterComponentEx().getWidth();\n    int lineHeight = myEditor.getLineHeight();\n\n    myTornLine.ensureLastX(lineWidth + gutterWidth);\n\n    TIntArrayList pointsX = myTornLine.getPointsX();\n    TIntArrayList pointsY = myTornLine.getPointsY();\n    g.setColor(getOuterColor());\n    drawCurved(g, pointsX, pointsY, x1, x2, -gutterWidth, y, lineHeight, TornLine.ourOuterRadius);\n    g.setColor(getInnerColor());\n    drawCurved(g, pointsX, pointsY, x1, x2, -gutterWidth, y, lineHeight, TornLine.ourInnerRadius);\n  }","id":56612,"modified_method":"@Override\n  public void drawLine(Graphics g, int x1, int x2, int y) {\n    if (!myCondition.get()) return;\n\n    y++; // we want y to be line's top position\n\n    Rectangle clip = g.getClipBounds();\n    x2 = clip.x + clip.width;\n\n    final int lineWidth = x2 - x1;\n    final int gutterWidth = ((EditorEx)myEditor).getGutterComponentEx().getWidth();\n    int lineHeight = myEditor.getLineHeight();\n\n    myTornLine.ensureLastX(lineWidth + gutterWidth);\n    TIntArrayList pointsX = myTornLine.getPointsX();\n    TIntArrayList pointsY = myTornLine.getPointsY();\n\n    GraphicsConfig config = GraphicsUtil.setupAAPainting(g);\n\n    g.setColor(getOuterColor());\n    drawCurved(g, pointsX, pointsY, x1, x2, -gutterWidth, y, lineHeight, TornLine.ourOuterRadius);\n    g.setColor(getInnerColor());\n    drawCurved(g, pointsX, pointsY, x1, x2, -gutterWidth, y, lineHeight, TornLine.ourInnerRadius);\n\n    config.restore();\n  }","commit_id":"675e26210b4f45b0cb07117e290d17a0e8ac9e7c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void paintSeparatorsOnScrollbar(@NotNull Graphics2D gg,\n                                                int width,\n                                                @NotNull Editor editor1,\n                                                @NotNull Editor editor2,\n                                                @NotNull DividerSeparatorPaintable paintable) {\n    List<DividerSeparator> polygons = createVisibleSeparators(editor1, editor2, paintable);\n\n    GraphicsUtil.setupAAPainting(gg);\n    for (DividerSeparator polygon : polygons) {\n      polygon.paintOnScrollbar(gg, width);\n    }\n  }","id":56613,"modified_method":"public static void paintSeparatorsOnScrollbar(@NotNull Graphics2D gg,\n                                                int width,\n                                                @NotNull Editor editor1,\n                                                @NotNull Editor editor2,\n                                                @NotNull DividerSeparatorPaintable paintable) {\n    List<DividerSeparator> polygons = createVisibleSeparators(editor1, editor2, paintable);\n\n    GraphicsConfig config = GraphicsUtil.setupAAPainting(gg);\n    for (DividerSeparator polygon : polygons) {\n      polygon.paintOnScrollbar(gg, width);\n    }\n    config.restore();\n  }","commit_id":"675e26210b4f45b0cb07117e290d17a0e8ac9e7c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void paintSimplePolygons(@NotNull Graphics2D gg,\n                                         int width,\n                                         @NotNull Editor editor1,\n                                         @NotNull Editor editor2,\n                                         @NotNull DividerPaintable paintable) {\n    List<DividerPolygon> polygons = createVisiblePolygons(editor1, editor2, paintable);\n\n    GraphicsUtil.setupAAPainting(gg);\n    for (DividerPolygon polygon : polygons) {\n      polygon.paintSimple(gg, width);\n    }\n  }","id":56614,"modified_method":"public static void paintSimplePolygons(@NotNull Graphics2D gg,\n                                         int width,\n                                         @NotNull Editor editor1,\n                                         @NotNull Editor editor2,\n                                         @NotNull DividerPaintable paintable) {\n    List<DividerPolygon> polygons = createVisiblePolygons(editor1, editor2, paintable);\n\n    GraphicsConfig config = GraphicsUtil.setupAAPainting(gg);\n    for (DividerPolygon polygon : polygons) {\n      polygon.paintSimple(gg, width);\n    }\n    config.restore();\n  }","commit_id":"675e26210b4f45b0cb07117e290d17a0e8ac9e7c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void paintPolygons(@NotNull Graphics2D gg,\n                                   int width,\n                                   @NotNull Editor editor1,\n                                   @NotNull Editor editor2,\n                                   @NotNull DividerPaintable paintable) {\n    List<DividerPolygon> polygons = createVisiblePolygons(editor1, editor2, paintable);\n\n    GraphicsUtil.setupAAPainting(gg);\n    for (DividerPolygon polygon : polygons) {\n      polygon.paint(gg, width);\n    }\n  }","id":56615,"modified_method":"public static void paintPolygons(@NotNull Graphics2D gg,\n                                   int width,\n                                   @NotNull Editor editor1,\n                                   @NotNull Editor editor2,\n                                   @NotNull DividerPaintable paintable) {\n    List<DividerPolygon> polygons = createVisiblePolygons(editor1, editor2, paintable);\n\n    GraphicsConfig config = GraphicsUtil.setupAAPainting(gg);\n    for (DividerPolygon polygon : polygons) {\n      polygon.paint(gg, width);\n    }\n    config.restore();\n  }","commit_id":"675e26210b4f45b0cb07117e290d17a0e8ac9e7c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void paintSeparators(@NotNull Graphics2D gg,\n                                     int width,\n                                     @NotNull Editor editor1,\n                                     @NotNull Editor editor2,\n                                     @NotNull DividerSeparatorPaintable paintable) {\n    List<DividerSeparator> polygons = createVisibleSeparators(editor1, editor2, paintable);\n\n    GraphicsUtil.setupAAPainting(gg);\n    for (DividerSeparator polygon : polygons) {\n      polygon.paint(gg, width);\n    }\n  }","id":56616,"modified_method":"public static void paintSeparators(@NotNull Graphics2D gg,\n                                     int width,\n                                     @NotNull Editor editor1,\n                                     @NotNull Editor editor2,\n                                     @NotNull DividerSeparatorPaintable paintable) {\n    List<DividerSeparator> polygons = createVisibleSeparators(editor1, editor2, paintable);\n\n    GraphicsConfig config = GraphicsUtil.setupAAPainting(gg);\n    for (DividerSeparator polygon : polygons) {\n      polygon.paint(gg, width);\n    }\n    config.restore();\n  }","commit_id":"675e26210b4f45b0cb07117e290d17a0e8ac9e7c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void paintIndeterminate(Graphics g, JComponent c) {\n    if (!(g instanceof Graphics2D)) {\n      return;\n    }\n\n    Insets b = progressBar.getInsets(); // area for border\n    int barRectWidth = progressBar.getWidth() - (b.right + b.left);\n    int barRectHeight = progressBar.getHeight() - (b.top + b.bottom);\n\n    if (barRectWidth <= 0 || barRectHeight <= 0) {\n      return;\n    }\n    //boxRect = getBox(boxRect);\n    g.setColor(new JBColor(Gray._240, Gray._128));\n    int w = c.getWidth();\n    int h = c.getPreferredSize().height;\n    if (c.isOpaque()) {\n      g.fillRect(0, (c.getHeight() - h)/2, w, h);\n    }\n    g.setColor(new JBColor(Gray._165, Gray._88));\n    GraphicsUtil.setupAAPainting(g);\n    g.translate(0, (c.getHeight() - h) / 2);\n    int x = -offset;\n    final int R = h - 1;\n    final int R2 = h;\n    final int off = JBUI.scale(1);\n    final Area aaa = new Area(new RoundRectangle2D.Double(off, off, w - 2*off-1, h - 2*off-1, R, R));\n    while (x < Math.max(c.getWidth(), c.getHeight())) {\n      Path2D.Double path = new Path2D.Double();\n      int ww = getPeriodLength() / 2;\n      path.moveTo(x, 0);\n      path.lineTo(x+ww, 0);\n      path.lineTo(x+ww - h / 2, h);\n      path.lineTo(x-h / 2, h);\n      path.lineTo(x, 0);\n      path.closePath();\n\n      final Area area = new Area(path);\n      area.intersect(aaa);\n      ((Graphics2D)g).fill(area);\n      x+= getPeriodLength();\n    }\n    offset = (offset + 1) % getPeriodLength();\n    Area area = new Area(new Rectangle2D.Double(0, 0, w, h));\n    area.subtract(new Area(new RoundRectangle2D.Double(off, off, w - 2*off - 1, h - 2*off - 1, R, R)));\n    ((Graphics2D)g).setPaint(Gray._128);\n    if (c.isOpaque()) {\n      ((Graphics2D)g).fill(area);\n    }\n    area.subtract(new Area(new RoundRectangle2D.Double(0, 0, w-1, h-1, R2, R2)));\n    ((Graphics2D)g).setPaint(c.getParent().getBackground());\n    if (c.isOpaque()) {\n      ((Graphics2D)g).fill(area);\n    }\n    g.drawRoundRect(off, off, w - 2*off - 1, h - 2*off - 1, R, R);\n    g.translate(0, -(c.getHeight() - h)/2);\n\n    // Deal with possible text painting\n    if (progressBar.isStringPainted()) {\n      if (progressBar.getOrientation() == SwingConstants.HORIZONTAL) {\n        paintString(g, b.left, b.top, barRectWidth, barRectHeight, boxRect.x, boxRect.width);\n      }\n      else {\n        paintString(g, b.left, b.top, barRectWidth, barRectHeight, boxRect.y, boxRect.height);\n      }\n    }\n  }","id":56617,"modified_method":"@Override\n  protected void paintIndeterminate(Graphics g, JComponent c) {\n    if (!(g instanceof Graphics2D)) {\n      return;\n    }\n\n    Insets b = progressBar.getInsets(); // area for border\n    int barRectWidth = progressBar.getWidth() - (b.right + b.left);\n    int barRectHeight = progressBar.getHeight() - (b.top + b.bottom);\n\n    if (barRectWidth <= 0 || barRectHeight <= 0) {\n      return;\n    }\n    //boxRect = getBox(boxRect);\n    g.setColor(new JBColor(Gray._240, Gray._128));\n    int w = c.getWidth();\n    int h = c.getPreferredSize().height;\n    if (c.isOpaque()) {\n      g.fillRect(0, (c.getHeight() - h)/2, w, h);\n    }\n    g.setColor(new JBColor(Gray._165, Gray._88));\n    final GraphicsConfig config = GraphicsUtil.setupAAPainting(g);\n    g.translate(0, (c.getHeight() - h) / 2);\n    int x = -offset;\n    final int R = JBUI.scale(8);\n    final int R2 = JBUI.scale(9);\n    final int off = JBUI.scale(1);\n    final Area aaa = new Area(new RoundRectangle2D.Double(off, off, w - 2*off, h - 2*off, R, R));\n    while (x < Math.max(c.getWidth(), c.getHeight())) {\n      Path2D.Double path = new Path2D.Double();\n      int ww = getPeriodLength() / 2;\n      path.moveTo(x, 0);\n      path.lineTo(x+ww, 0);\n      path.lineTo(x+ww - h / 2, h);\n      path.lineTo(x-h / 2, h);\n      path.lineTo(x, 0);\n      path.closePath();\n\n      final Area area = new Area(path);\n      area.intersect(aaa);\n      ((Graphics2D)g).fill(area);\n      x+= getPeriodLength();\n    }\n    offset = (offset + 1) % getPeriodLength();\n    Area area = new Area(new Rectangle2D.Double(0, 0, w, h));\n    area.subtract(new Area(new RoundRectangle2D.Double(off, off, w - 2*off, h - 2*off, R, R)));\n    ((Graphics2D)g).setPaint(Gray._128);\n    if (c.isOpaque()) {\n      ((Graphics2D)g).fill(area);\n    }\n    area.subtract(new Area(new RoundRectangle2D.Double(0, 0, w, h, R2, R2)));\n    ((Graphics2D)g).setPaint(c.getParent().getBackground());\n    if (c.isOpaque()) {\n      ((Graphics2D)g).fill(area);\n    }\n    g.drawRoundRect(off, off, w - 2*off - 1, h - 2*off - 1, R, R);\n    g.translate(0, -(c.getHeight() - h)/2);\n\n    // Deal with possible text painting\n    if (progressBar.isStringPainted()) {\n      if (progressBar.getOrientation() == SwingConstants.HORIZONTAL) {\n        paintString(g, b.left, b.top, barRectWidth, barRectHeight, boxRect.x, boxRect.width);\n      }\n      else {\n        paintString(g, b.left, b.top, barRectWidth, barRectHeight, boxRect.y, boxRect.height);\n      }\n    }\n    config.restore();\n  }","commit_id":"6113b9842447e6032bf087efde682a83fa07ca1c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void paintDeterminate(Graphics g, JComponent c) {\n    if (!(g instanceof Graphics2D)) {\n      return;\n    }\n\n    if (progressBar.getOrientation() != SwingConstants.HORIZONTAL || !c.getComponentOrientation().isLeftToRight()) {\n      super.paintDeterminate(g, c);\n      return;\n    }\n    GraphicsUtil.setupAAPainting(g);\n    Insets b = progressBar.getInsets(); // area for border\n    final int w = progressBar.getWidth();\n    final int h = progressBar.getPreferredSize().height;\n    int barRectWidth = w - (b.right + b.left);\n    int barRectHeight = h - (b.top + b.bottom);\n\n    if (barRectWidth <= 0 || barRectHeight <= 0) {\n      return;\n    }\n\n    int amountFull = getAmountFull(b, barRectWidth, barRectHeight);\n\n    g.setColor(c.getParent().getBackground());\n    Graphics2D g2 = (Graphics2D)g;\n    if (c.isOpaque()) {\n      g.fillRect(0, 0, w, h);\n    }\n\n    final int R = h - 1;\n    final int R2 = h;\n    final int off = JBUI.scale(1);\n\n\n    g2.translate(0, (c.getHeight() - h)/2);\n    g2.setColor(progressBar.getForeground());\n    g2.fill(new RoundRectangle2D.Double(0, 0, w - off, h - off, R2, R2));\n    g2.setColor(c.getParent().getBackground());\n    g2.fill(new RoundRectangle2D.Double(off, off, w - 2*off - off, h - 2*off - off, R, R));\n    g2.setColor(progressBar.getForeground());\n    g2.fill(new RoundRectangle2D.Double(2*off,2*off, amountFull - JBUI.scale(5), h - JBUI.scale(5), R-1, R-1));\n    g2.translate(0, -(c.getHeight() - h)/2);\n\n    // Deal with possible text painting\n    if (progressBar.isStringPainted()) {\n      paintString(g, b.left, b.top,\n                  barRectWidth, barRectHeight,\n                  amountFull, b);\n    }\n\n  }","id":56618,"modified_method":"@Override\n  protected void paintDeterminate(Graphics g, JComponent c) {\n    if (!(g instanceof Graphics2D)) {\n      return;\n    }\n\n    if (progressBar.getOrientation() != SwingConstants.HORIZONTAL || !c.getComponentOrientation().isLeftToRight()) {\n      super.paintDeterminate(g, c);\n      return;\n    }\n    final GraphicsConfig config = GraphicsUtil.setupAAPainting(g);\n    Insets b = progressBar.getInsets(); // area for border\n    final int w = progressBar.getWidth();\n    final int h = progressBar.getPreferredSize().height;\n    int barRectWidth = w - (b.right + b.left);\n    int barRectHeight = h - (b.top + b.bottom);\n\n    if (barRectWidth <= 0 || barRectHeight <= 0) {\n      return;\n    }\n\n    int amountFull = getAmountFull(b, barRectWidth, barRectHeight);\n\n    g.setColor(c.getParent().getBackground());\n    Graphics2D g2 = (Graphics2D)g;\n    if (c.isOpaque()) {\n      g.fillRect(0, 0, w, h);\n    }\n\n    final int R = JBUI.scale(8);\n    final int R2 = JBUI.scale(9);\n    final int off = JBUI.scale(1);\n\n\n    g2.translate(0, (c.getHeight() - h)/2);\n    g2.setColor(progressBar.getForeground());\n    g2.fill(new RoundRectangle2D.Double(0, 0, w - off, h - off, R2, R2));\n    g2.setColor(c.getParent().getBackground());\n    g2.fill(new RoundRectangle2D.Double(off, off, w - 2*off - off, h - 2*off - off, R, R));\n    g2.setColor(progressBar.getForeground());\n    g2.fill(new RoundRectangle2D.Double(2*off,2*off, amountFull - JBUI.scale(5), h - JBUI.scale(5), JBUI.scale(7), JBUI.scale(7)));\n    g2.translate(0, -(c.getHeight() - h)/2);\n\n    // Deal with possible text painting\n    if (progressBar.isStringPainted()) {\n      paintString(g, b.left, b.top,\n                  barRectWidth, barRectHeight,\n                  amountFull, b);\n    }\n    config.restore();\n  }","commit_id":"6113b9842447e6032bf087efde682a83fa07ca1c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected WorkflowTaskSearch searchTasksAssignedToMe(boolean completedTasks)\n\t\tthrows PortalException {\n\n\t\tint total = 0;\n\t\tList<WorkflowTask> results = null;\n\n\t\tString curParam = SearchContainer.DEFAULT_CUR_PARAM;\n\n\t\tif (!completedTasks) {\n\t\t\tcurParam = \"cur1\";\n\t\t}\n\n\t\tString[] assetTypes = WorkflowHandlerUtil.getSearchableAssetTypes();\n\n\t\tWorkflowTaskSearch searchContainer = new WorkflowTaskSearch(\n\t\t\t_renderRequest, curParam, getPortletURL());\n\n\t\tWorkflowTaskDisplayTerms searchTerms =\n\t\t\t(WorkflowTaskDisplayTerms)searchContainer.getDisplayTerms();\n\n\t\tif (searchTerms.isAdvancedSearch()) {\n\t\t\ttotal = WorkflowTaskManagerUtil.searchCount(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(), searchTerms.getName(),\n\t\t\t\tsearchTerms.getType(), null, null, null, false, false,\n\t\t\t\tsearchTerms.isAndOperator());\n\n\t\t\tsearchContainer.setTotal(total);\n\n\t\t\tresults = WorkflowTaskManagerUtil.search(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(), searchTerms.getName(),\n\t\t\t\tsearchTerms.getType(), null, null, null, completedTasks, false,\n\t\t\t\tsearchTerms.isAndOperator(), searchContainer.getStart(),\n\t\t\t\tsearchContainer.getEnd(),\n\t\t\t\tsearchContainer.getOrderByComparator());\n\t\t}\n\t\telse {\n\t\t\ttotal = WorkflowTaskManagerUtil.searchCount(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(),\n\t\t\t\tsearchTerms.getKeywords(), assetTypes, completedTasks, false);\n\n\t\t\tsearchContainer.setTotal(total);\n\n\t\t\tresults = WorkflowTaskManagerUtil.search(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(),\n\t\t\t\tsearchTerms.getKeywords(), assetTypes, completedTasks, false,\n\t\t\t\tsearchContainer.getStart(), searchContainer.getEnd(),\n\t\t\t\tsearchContainer.getOrderByComparator());\n\t\t}\n\n\t\tsearchContainer.setTotal(total);\n\t\tsearchContainer.setResults(results);\n\n\t\tsetUserSearchContainerEmptyResultsMessage(\n\t\t\tsearchContainer, completedTasks);\n\n\t\treturn searchContainer;\n\t}","id":56619,"modified_method":"protected WorkflowTaskSearch searchTasksAssignedToMe(boolean completedTasks)\n\t\tthrows PortalException {\n\n\t\tList<WorkflowTask> results = null;\n\t\tint total = 0;\n\n\t\tString curParam = SearchContainer.DEFAULT_CUR_PARAM;\n\n\t\tif (!completedTasks) {\n\t\t\tcurParam = \"cur1\";\n\t\t}\n\n\t\tWorkflowTaskSearch searchContainer = new WorkflowTaskSearch(\n\t\t\t_renderRequest, curParam, getPortletURL());\n\n\t\tWorkflowTaskDisplayTerms searchTerms =\n\t\t\t(WorkflowTaskDisplayTerms)searchContainer.getDisplayTerms();\n\n\t\tif (searchTerms.isAdvancedSearch()) {\n\t\t\ttotal = WorkflowTaskManagerUtil.searchCount(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(), searchTerms.getName(),\n\t\t\t\tsearchTerms.getType(), null, null, null, false, false,\n\t\t\t\tsearchTerms.isAndOperator());\n\n\t\t\tsearchContainer.setTotal(total);\n\n\t\t\tresults = WorkflowTaskManagerUtil.search(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(), searchTerms.getName(),\n\t\t\t\tsearchTerms.getType(), null, null, null, completedTasks, false,\n\t\t\t\tsearchTerms.isAndOperator(), searchContainer.getStart(),\n\t\t\t\tsearchContainer.getEnd(),\n\t\t\t\tsearchContainer.getOrderByComparator());\n\t\t}\n\t\telse {\n\t\t\ttotal = WorkflowTaskManagerUtil.searchCount(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(),\n\t\t\t\tsearchTerms.getKeywords(),\n\t\t\t\tWorkflowHandlerUtil.getSearchableAssetTypes(), completedTasks,\n\t\t\t\tfalse);\n\n\t\t\tsearchContainer.setTotal(total);\n\n\t\t\tresults = WorkflowTaskManagerUtil.search(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(),\n\t\t\t\tsearchTerms.getKeywords(),\n\t\t\t\tWorkflowHandlerUtil.getSearchableAssetTypes(), completedTasks,\n\t\t\t\tfalse, searchContainer.getStart(), searchContainer.getEnd(),\n\t\t\t\tsearchContainer.getOrderByComparator());\n\t\t}\n\n\t\tsearchContainer.setResults(results);\n\n\t\tsetUserSearchContainerEmptyResultsMessage(\n\t\t\tsearchContainer, completedTasks);\n\n\t\treturn searchContainer;\n\t}","commit_id":"814d07ff7a610249a28801bb2e756af2f73a6e68","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public WorkflowTaskSearch getPendingTasksAssignedToMyRoles()\n\t\tthrows PortalException {\n\n\t\tint total = 0;\n\t\tList<WorkflowTask> results = null;\n\n\t\tString[] assetTypes = WorkflowHandlerUtil.getSearchableAssetTypes();\n\n\t\tWorkflowTaskSearch searchContainer = new WorkflowTaskSearch(\n\t\t\t_renderRequest, \"cur2\", getPortletURL());\n\n\t\tWorkflowTaskDisplayTerms searchTerms =\n\t\t\t(WorkflowTaskDisplayTerms)searchContainer.getDisplayTerms();\n\n\t\tif (searchTerms.isAdvancedSearch()) {\n\t\t\ttotal = WorkflowTaskManagerUtil.searchCount(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(), searchTerms.getName(),\n\t\t\t\tsearchTerms.getType(), null, null, null, false, true,\n\t\t\t\tsearchTerms.isAndOperator());\n\n\t\t\tsearchContainer.setTotal(total);\n\n\t\t\tresults = WorkflowTaskManagerUtil.search(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(), searchTerms.getName(),\n\t\t\t\tsearchTerms.getType(), null, null, null, false, true,\n\t\t\t\tsearchTerms.isAndOperator(), searchContainer.getStart(),\n\t\t\t\tsearchContainer.getEnd(),\n\t\t\t\tsearchContainer.getOrderByComparator());\n\t\t}\n\t\telse {\n\t\t\ttotal = WorkflowTaskManagerUtil.searchCount(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(),\n\t\t\t\tsearchTerms.getKeywords(), assetTypes, false, true);\n\n\t\t\tsearchContainer.setTotal(total);\n\n\t\t\tresults = WorkflowTaskManagerUtil.search(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(),\n\t\t\t\tsearchTerms.getKeywords(), assetTypes, false, true,\n\t\t\t\tsearchContainer.getStart(), searchContainer.getEnd(),\n\t\t\t\tsearchContainer.getOrderByComparator());\n\t\t}\n\n\t\tsearchContainer.setTotal(total);\n\t\tsearchContainer.setResults(results);\n\n\t\tsetRolesSearchContainerEmptyResultsMessage(searchContainer);\n\n\t\treturn searchContainer;\n\t}","id":56620,"modified_method":"public WorkflowTaskSearch getPendingTasksAssignedToMyRoles()\n\t\tthrows PortalException {\n\n\t\tList<WorkflowTask> results = null;\n\t\tint total = 0;\n\n\t\tWorkflowTaskSearch searchContainer = new WorkflowTaskSearch(\n\t\t\t_renderRequest, \"cur2\", getPortletURL());\n\n\t\tWorkflowTaskDisplayTerms searchTerms =\n\t\t\t(WorkflowTaskDisplayTerms)searchContainer.getDisplayTerms();\n\n\t\tif (searchTerms.isAdvancedSearch()) {\n\t\t\ttotal = WorkflowTaskManagerUtil.searchCount(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(), searchTerms.getName(),\n\t\t\t\tsearchTerms.getType(), null, null, null, false, true,\n\t\t\t\tsearchTerms.isAndOperator());\n\n\t\t\tsearchContainer.setTotal(total);\n\n\t\t\tresults = WorkflowTaskManagerUtil.search(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(), searchTerms.getName(),\n\t\t\t\tsearchTerms.getType(), null, null, null, false, true,\n\t\t\t\tsearchTerms.isAndOperator(), searchContainer.getStart(),\n\t\t\t\tsearchContainer.getEnd(),\n\t\t\t\tsearchContainer.getOrderByComparator());\n\t\t}\n\t\telse {\n\t\t\ttotal = WorkflowTaskManagerUtil.searchCount(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(),\n\t\t\t\tsearchTerms.getKeywords(),\n\t\t\t\tWorkflowHandlerUtil.getSearchableAssetTypes(), false, true);\n\n\t\t\tsearchContainer.setTotal(total);\n\n\t\t\tresults = WorkflowTaskManagerUtil.search(\n\t\t\t\t_workflowTaskRequestHelper.getCompanyId(),\n\t\t\t\t_workflowTaskRequestHelper.getUserId(),\n\t\t\t\tsearchTerms.getKeywords(),\n\t\t\t\tWorkflowHandlerUtil.getSearchableAssetTypes(), false, true,\n\t\t\t\tsearchContainer.getStart(), searchContainer.getEnd(),\n\t\t\t\tsearchContainer.getOrderByComparator());\n\t\t}\n\n\t\tsearchContainer.setResults(results);\n\n\t\tsetRolesSearchContainerEmptyResultsMessage(searchContainer);\n\n\t\treturn searchContainer;\n\t}","commit_id":"814d07ff7a610249a28801bb2e756af2f73a6e68","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void configureAssembleTask(Assemble task, final NativeBinarySpecInternal binary, final LanguageSourceSetInternal sourceSet) {\n        task.setDescription(String.format(\"Assembles the %s of %s\", sourceSet, binary));\n\n        task.setToolChain(binary.getToolChain());\n        task.setTargetPlatform(binary.getTargetPlatform());\n\n        task.source(sourceSet.getSource());\n\n        final Project project = task.getProject();\n        task.setObjectFileDir(new File(binary.getNamingScheme().withOutputType(\"objs\").getOutputDirectory(project.getBuildDir()), sourceSet.getProjectScopedName()));\n\n        Tool assemblerTool = binary.getToolByName(\"assembler\");\n        task.setAssemblerArgs(assemblerTool.getArgs());\n\n        binary.binaryInputs(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.obj\", \"**/*.o\")));\n    }","id":56621,"modified_method":"private void configureAssembleTask(Assemble task, final NativeBinarySpecInternal binary, final LanguageSourceSetInternal sourceSet) {\n        task.setDescription(String.format(\"Assembles the %s of %s\", sourceSet, binary));\n\n        task.setToolChain(binary.getToolChain());\n        task.setTargetPlatform(binary.getTargetPlatform());\n\n        task.source(sourceSet.getSource());\n\n        final Project project = task.getProject();\n        task.setObjectFileDir(new File(binary.getNamingScheme().getOutputDirectory(project.getBuildDir(), \"objs\"), sourceSet.getProjectScopedName()));\n\n        Tool assemblerTool = binary.getToolByName(\"assembler\");\n        task.setAssemblerArgs(assemblerTool.getArgs());\n\n        binary.binaryInputs(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.obj\", \"**/*.o\")));\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"public String getOutputDirectoryBase() {\n        List<String> elements = Lists.newArrayList();\n        elements.add(outputType);\n        elements.add(parentName);\n        if (binaryName != null) {\n            elements.add(binaryName);\n        } else {\n            if (!main) {\n                if (role != null) {\n                    elements.add(role);\n                } else {\n                    elements.add(binaryType);\n                }\n            }\n            elements.addAll(dimensions);\n        }\n        return makePath(elements);\n    }","id":56622,"modified_method":"private String getOutputDirectoryBase(@Nullable String outputType) {\n        List<String> elements = Lists.newArrayList();\n        elements.add(outputType);\n        elements.add(parentName);\n        if (binaryName != null) {\n            elements.add(binaryName);\n        } else {\n            if (!main) {\n                if (role != null) {\n                    elements.add(role);\n                } else {\n                    elements.add(binaryType);\n                }\n            }\n            elements.addAll(dimensions);\n        }\n        return makePath(elements);\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public BinaryNamingScheme withBinaryType(@Nullable String type) {\n        return new DefaultBinaryNamingScheme(parentName, binaryName, type, role, main, dimensions, outputType);\n    }","id":56623,"modified_method":"@Override\n    public BinaryNamingScheme withBinaryType(@Nullable String type) {\n        return new DefaultBinaryNamingScheme(parentName, binaryName, type, role, main, dimensions);\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"DefaultBinaryNamingScheme(@Nullable String parentName, @Nullable String binaryName, @Nullable String binaryType, @Nullable String role, boolean main, List<String> dimensions, @Nullable String outputType) {\n        this.parentName = parentName;\n        this.binaryName = binaryName;\n        this.binaryType = binaryType;\n        this.role = role;\n        this.main = main;\n        this.dimensions = dimensions;\n        this.outputType = outputType;\n        this.dimensionPrefix = createPrefix(dimensions);\n    }","id":56624,"modified_method":"DefaultBinaryNamingScheme(@Nullable String parentName, @Nullable String binaryName, @Nullable String binaryType, @Nullable String role, boolean main, List<String> dimensions) {\n        this.parentName = parentName;\n        this.binaryName = binaryName;\n        this.binaryType = binaryType;\n        this.role = role;\n        this.main = main;\n        this.dimensions = dimensions;\n        this.dimensionPrefix = createPrefix(dimensions);\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public File getOutputDirectory(File baseDir) {\n        return new File(baseDir, getOutputDirectoryBase());\n    }","id":56625,"modified_method":"@Override\n    public File getOutputDirectory(File baseDir) {\n        return getOutputDirectory(baseDir, null);\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"public static BinaryNamingScheme component(@Nullable String componentName) {\n        return new DefaultBinaryNamingScheme(componentName, null, null, null, false, Collections.<String>emptyList(), null);\n    }","id":56626,"modified_method":"public static BinaryNamingScheme component(@Nullable String componentName) {\n        return new DefaultBinaryNamingScheme(componentName, null, null, null, false, Collections.<String>emptyList());\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public BinaryNamingScheme withComponentName(@Nullable String componentName) {\n        return new DefaultBinaryNamingScheme(componentName, binaryName, binaryType, role, main, dimensions, outputType);\n    }","id":56627,"modified_method":"@Override\n    public BinaryNamingScheme withComponentName(@Nullable String componentName) {\n        return new DefaultBinaryNamingScheme(componentName, binaryName, binaryType, role, main, dimensions);\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public BinaryNamingScheme withRole(String role, boolean isMain) {\n        return new DefaultBinaryNamingScheme(parentName, binaryName, binaryType, role, isMain, dimensions, outputType);\n    }","id":56628,"modified_method":"@Override\n    public BinaryNamingScheme withRole(String role, boolean isMain) {\n        return new DefaultBinaryNamingScheme(parentName, binaryName, binaryType, role, isMain, dimensions);\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public BinaryNamingScheme withVariantDimension(String dimension) {\n        List<String> newDimensions = new ArrayList<String>(dimensions.size() + 1);\n        newDimensions.addAll(dimensions);\n        newDimensions.add(dimension);\n        return new DefaultBinaryNamingScheme(parentName, binaryName, binaryType, role, main, newDimensions, outputType);\n    }","id":56629,"modified_method":"@Override\n    public BinaryNamingScheme withVariantDimension(String dimension) {\n        List<String> newDimensions = new ArrayList<String>(dimensions.size() + 1);\n        newDimensions.addAll(dimensions);\n        newDimensions.add(dimension);\n        return new DefaultBinaryNamingScheme(parentName, binaryName, binaryType, role, main, newDimensions);\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public BinaryNamingScheme withBinaryName(@Nullable String name) {\n        return new DefaultBinaryNamingScheme(parentName, name, binaryType, role, main, dimensions, outputType);\n    }","id":56630,"modified_method":"@Override\n    public BinaryNamingScheme withBinaryName(@Nullable String name) {\n        return new DefaultBinaryNamingScheme(parentName, name, binaryType, role, main, dimensions);\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"@Mutate\n        public void createTestTasks(final TaskContainer tasks, ModelMap<NativeTestSuiteBinarySpec> binaries) {\n            for (NativeTestSuiteBinarySpec testBinary : binaries) {\n                NativeBinarySpecInternal binary = (NativeBinarySpecInternal) testBinary;\n                final BinaryNamingScheme namingScheme = binary.getNamingScheme();\n\n                RunTestExecutable runTask = tasks.create(namingScheme.getTaskName(\"run\"), RunTestExecutable.class);\n                final Project project = runTask.getProject();\n                runTask.setDescription(String.format(\"Runs the %s\", binary));\n\n                final InstallExecutable installTask = binary.getTasks().withType(InstallExecutable.class).iterator().next();\n                runTask.getInputs().files(installTask.getOutputs().getFiles());\n                runTask.setExecutable(installTask.getRunScript().getPath());\n                runTask.setOutputDir(namingScheme.withOutputType(\"test-results\").getOutputDirectory(project.getBuildDir()));\n\n                testBinary.getTasks().add(runTask);\n            }\n        }","id":56631,"modified_method":"@Mutate\n        public void createTestTasks(final TaskContainer tasks, ModelMap<NativeTestSuiteBinarySpec> binaries) {\n            for (NativeTestSuiteBinarySpec testBinary : binaries) {\n                NativeBinarySpecInternal binary = (NativeBinarySpecInternal) testBinary;\n                final BinaryNamingScheme namingScheme = binary.getNamingScheme();\n\n                RunTestExecutable runTask = tasks.create(namingScheme.getTaskName(\"run\"), RunTestExecutable.class);\n                final Project project = runTask.getProject();\n                runTask.setDescription(String.format(\"Runs the %s\", binary));\n\n                final InstallExecutable installTask = binary.getTasks().withType(InstallExecutable.class).iterator().next();\n                runTask.getInputs().files(installTask.getOutputs().getFiles());\n                runTask.setExecutable(installTask.getRunScript().getPath());\n                runTask.setOutputDir(namingScheme.getOutputDirectory(project.getBuildDir(), \"test-results\"));\n\n                testBinary.getTasks().add(runTask);\n            }\n        }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"private static File sharedLibraryFileFor(NativeBinarySpecInternal nativeBinary, File buildDir) {\n        return new File(nativeBinary.getNamingScheme().withOutputType(\"libs\").getOutputDirectory(buildDir), sharedLibraryNameFor(nativeBinary));\n    }","id":56632,"modified_method":"private static File sharedLibraryFileFor(NativeBinarySpecInternal nativeBinary, File buildDir) {\n        return new File(nativeBinary.getNamingScheme().getOutputDirectory(buildDir, \"libs\"), sharedLibraryNameFor(nativeBinary));\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"private static File sharedLibraryLinkFileFor(NativeBinarySpecInternal nativeBinary, File buildDir) {\n        return new File(nativeBinary.getNamingScheme().withOutputType(\"libs\").getOutputDirectory(buildDir), sharedLibraryLinkFileNameFor(nativeBinary));\n    }","id":56633,"modified_method":"private static File sharedLibraryLinkFileFor(NativeBinarySpecInternal nativeBinary, File buildDir) {\n        return new File(nativeBinary.getNamingScheme().getOutputDirectory(buildDir, \"libs\"), sharedLibraryLinkFileNameFor(nativeBinary));\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"public static File executableFileFor(NativeBinarySpecInternal nativeBinary, File buildDir) {\n        return new File(nativeBinary.getNamingScheme().withOutputType(\"exe\").getOutputDirectory(buildDir), executableNameFor(nativeBinary));\n    }","id":56634,"modified_method":"public static File executableFileFor(NativeBinarySpecInternal nativeBinary, File buildDir) {\n        return new File(nativeBinary.getNamingScheme().getOutputDirectory(buildDir, \"exe\"), executableNameFor(nativeBinary));\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"private static File staticLibraryFileFor(NativeBinarySpecInternal nativeBinary, File buildDir) {\n        return new File(nativeBinary.getNamingScheme().withOutputType(\"libs\").getOutputDirectory(buildDir), staticLibraryNameFor(nativeBinary));\n    }","id":56635,"modified_method":"private static File staticLibraryFileFor(NativeBinarySpecInternal nativeBinary, File buildDir) {\n        return new File(nativeBinary.getNamingScheme().getOutputDirectory(buildDir, \"libs\"), staticLibraryNameFor(nativeBinary));\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"public static File installationDirFor(NativeBinarySpecInternal nativeBinary, File buildDir) {\n        return nativeBinary.getNamingScheme().withOutputType(\"install\").getOutputDirectory(buildDir);\n    }","id":56636,"modified_method":"public static File installationDirFor(NativeBinarySpecInternal nativeBinary, File buildDir) {\n        return nativeBinary.getNamingScheme().getOutputDirectory(buildDir, \"install\");\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    protected void configureCompileTask(AbstractNativeCompileTask task, final NativeBinarySpecInternal binary, final LanguageSourceSetInternal languageSourceSet) {\n        // Note that the sourceSet is the sourceSet this pre-compiled header will be used with - it's not an\n        // input sourceSet to the compile task.\n        final DependentSourceSetInternal sourceSet = (DependentSourceSetInternal) languageSourceSet;\n\n        task.setDescription(String.format(\"Compiles a pre-compiled header for the %s of %s\", sourceSet, binary));\n\n        // Add the source of the source set to the include paths to resolve any headers that may be in source directories\n        task.includes(new Callable<Set<File>>() {\n            public Set<File> call() throws Exception {\n                return sourceSet.getSource().getSrcDirs();\n            }\n        });\n\n        final Project project = task.getProject();\n        task.source(sourceSet.getPrefixHeaderFile());\n\n        task.setObjectFileDir(new File(binary.getNamingScheme().withOutputType(\"objs\").getOutputDirectory(project.getBuildDir()), languageSourceSet.getProjectScopedName() + \"PCH\"));\n\n        task.dependsOn(project.getTasks().withType(PrefixHeaderFileGenerateTask.class).matching(new Spec<PrefixHeaderFileGenerateTask>() {\n            @Override\n            public boolean isSatisfiedBy(PrefixHeaderFileGenerateTask prefixHeaderFileGenerateTask) {\n                return prefixHeaderFileGenerateTask.getPrefixHeaderFile().equals(sourceSet.getPrefixHeaderFile());\n            }\n        }));\n\n        // This is so that VisualCpp has the object file of the generated source file available at link time\n        binary.binaryInputs(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.obj\", \"**/*.o\")));\n\n        PreCompiledHeader pch = binary.getPrefixFileToPCH().get(sourceSet.getPrefixHeaderFile());\n        pch.setPchObjects(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.pch\", \"**/*.gch\")));\n        pch.builtBy(task);\n    }","id":56637,"modified_method":"@Override\n    protected void configureCompileTask(AbstractNativeCompileTask task, final NativeBinarySpecInternal binary, final LanguageSourceSetInternal languageSourceSet) {\n        // Note that the sourceSet is the sourceSet this pre-compiled header will be used with - it's not an\n        // input sourceSet to the compile task.\n        final DependentSourceSetInternal sourceSet = (DependentSourceSetInternal) languageSourceSet;\n\n        task.setDescription(String.format(\"Compiles a pre-compiled header for the %s of %s\", sourceSet, binary));\n\n        // Add the source of the source set to the include paths to resolve any headers that may be in source directories\n        task.includes(new Callable<Set<File>>() {\n            public Set<File> call() throws Exception {\n                return sourceSet.getSource().getSrcDirs();\n            }\n        });\n\n        final Project project = task.getProject();\n        task.source(sourceSet.getPrefixHeaderFile());\n\n        task.setObjectFileDir(new File(binary.getNamingScheme().getOutputDirectory(project.getBuildDir(), \"objs\"), languageSourceSet.getProjectScopedName() + \"PCH\"));\n\n        task.dependsOn(project.getTasks().withType(PrefixHeaderFileGenerateTask.class).matching(new Spec<PrefixHeaderFileGenerateTask>() {\n            @Override\n            public boolean isSatisfiedBy(PrefixHeaderFileGenerateTask prefixHeaderFileGenerateTask) {\n                return prefixHeaderFileGenerateTask.getPrefixHeaderFile().equals(sourceSet.getPrefixHeaderFile());\n            }\n        }));\n\n        // This is so that VisualCpp has the object file of the generated source file available at link time\n        binary.binaryInputs(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.obj\", \"**/*.o\")));\n\n        PreCompiledHeader pch = binary.getPrefixFileToPCH().get(sourceSet.getPrefixHeaderFile());\n        pch.setPchObjects(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.pch\", \"**/*.gch\")));\n        pch.builtBy(task);\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"protected void configureCompileTask(AbstractNativeCompileTask abstractTask, final NativeBinarySpecInternal binary, final LanguageSourceSetInternal sourceSet) {\n        AbstractNativeSourceCompileTask task = (AbstractNativeSourceCompileTask) abstractTask;\n\n        task.setDescription(String.format(\"Compiles the %s of %s\", sourceSet, binary));\n\n        task.source(sourceSet.getSource());\n\n        final Project project = task.getProject();\n        task.setObjectFileDir(new File(binary.getNamingScheme().withOutputType(\"objs\").getOutputDirectory(project.getBuildDir()), sourceSet.getProjectScopedName()));\n\n        // If this task uses a pre-compiled header\n        if (sourceSet instanceof DependentSourceSetInternal && ((DependentSourceSetInternal) sourceSet).getPreCompiledHeader() != null) {\n            final DependentSourceSetInternal dependentSourceSet = (DependentSourceSetInternal)sourceSet;\n            PreCompiledHeader pch = binary.getPrefixFileToPCH().get(dependentSourceSet.getPrefixHeaderFile());\n            pch.setPrefixHeaderFile(dependentSourceSet.getPrefixHeaderFile());\n            pch.setIncludeString(dependentSourceSet.getPreCompiledHeader());\n            task.setPreCompiledHeader(pch);\n        }\n\n        binary.binaryInputs(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.obj\", \"**/*.o\")));\n    }","id":56638,"modified_method":"protected void configureCompileTask(AbstractNativeCompileTask abstractTask, final NativeBinarySpecInternal binary, final LanguageSourceSetInternal sourceSet) {\n        AbstractNativeSourceCompileTask task = (AbstractNativeSourceCompileTask) abstractTask;\n\n        task.setDescription(String.format(\"Compiles the %s of %s\", sourceSet, binary));\n\n        task.source(sourceSet.getSource());\n\n        final Project project = task.getProject();\n        task.setObjectFileDir(new File(binary.getNamingScheme().getOutputDirectory(project.getBuildDir(), \"objs\"), sourceSet.getProjectScopedName()));\n\n        // If this task uses a pre-compiled header\n        if (sourceSet instanceof DependentSourceSetInternal && ((DependentSourceSetInternal) sourceSet).getPreCompiledHeader() != null) {\n            final DependentSourceSetInternal dependentSourceSet = (DependentSourceSetInternal)sourceSet;\n            PreCompiledHeader pch = binary.getPrefixFileToPCH().get(dependentSourceSet.getPrefixHeaderFile());\n            pch.setPrefixHeaderFile(dependentSourceSet.getPrefixHeaderFile());\n            pch.setIncludeString(dependentSourceSet.getPreCompiledHeader());\n            task.setPreCompiledHeader(pch);\n        }\n\n        binary.binaryInputs(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.obj\", \"**/*.o\")));\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"private void configureResourceCompileTask(WindowsResourceCompile task, final NativeBinarySpecInternal binary, final WindowsResourceSet sourceSet) {\n        task.setDescription(String.format(\"Compiles resources of the %s of %s\", sourceSet, binary));\n\n        task.setToolChain(binary.getToolChain());\n        task.setTargetPlatform(binary.getTargetPlatform());\n\n        task.includes(new Callable<Set<File>>() {\n            public Set<File> call() {\n                return sourceSet.getExportedHeaders().getSrcDirs();\n            }\n        });\n        task.source(sourceSet.getSource());\n\n        final Project project = task.getProject();\n        task.setOutputDir(new File(binary.getNamingScheme().withOutputType(\"objs\").getOutputDirectory(project.getBuildDir()), ((LanguageSourceSetInternal) sourceSet).getProjectScopedName()));\n\n        PreprocessingTool rcCompiler = (PreprocessingTool) binary.getToolByName(\"rcCompiler\");\n        task.setMacros(rcCompiler.getMacros());\n        task.setCompilerArgs(rcCompiler.getArgs());\n\n        FileTree resourceOutputs = task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.res\"));\n        binary.binaryInputs(resourceOutputs);\n        if (binary instanceof StaticLibraryBinarySpecInternal) {\n            ((StaticLibraryBinarySpecInternal) binary).additionalLinkFiles(resourceOutputs);\n        }\n    }","id":56639,"modified_method":"private void configureResourceCompileTask(WindowsResourceCompile task, final NativeBinarySpecInternal binary, final WindowsResourceSet sourceSet) {\n        task.setDescription(String.format(\"Compiles resources of the %s of %s\", sourceSet, binary));\n\n        task.setToolChain(binary.getToolChain());\n        task.setTargetPlatform(binary.getTargetPlatform());\n\n        task.includes(new Callable<Set<File>>() {\n            public Set<File> call() {\n                return sourceSet.getExportedHeaders().getSrcDirs();\n            }\n        });\n        task.source(sourceSet.getSource());\n\n        final Project project = task.getProject();\n        task.setOutputDir(new File(binary.getNamingScheme().getOutputDirectory(project.getBuildDir(), \"objs\"), ((LanguageSourceSetInternal) sourceSet).getProjectScopedName()));\n\n        PreprocessingTool rcCompiler = (PreprocessingTool) binary.getToolByName(\"rcCompiler\");\n        task.setMacros(rcCompiler.getMacros());\n        task.setCompilerArgs(rcCompiler.getArgs());\n\n        FileTree resourceOutputs = task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.res\"));\n        binary.binaryInputs(resourceOutputs);\n        if (binary instanceof StaticLibraryBinarySpecInternal) {\n            ((StaticLibraryBinarySpecInternal) binary).additionalLinkFiles(resourceOutputs);\n        }\n    }","commit_id":"779e3d85fc6e10583f2d03beeea702f6657de5ec","url":"https://github.com/gradle/gradle"},{"original_method":"public InterimPortletEntityImpl(IPortletDefinitionId portletDefinitionId,\n            String channelSubscribeId, int userId) {\n        this.portletDefinitionId = portletDefinitionId;\n        this.channelSubscribeId = channelSubscribeId;\n        this.userId = userId;\n        this.portletEntityId = new InterimPortletEntityIdImpl(String.format(\n                INTERIM_ID_PATTERN, INTERIM_PREFIX, portletDefinitionId\n                        .getStringId(), channelSubscribeId, userId));\n        this.portletPreferences = new PortletPreferencesImpl();\n    }","id":56640,"modified_method":"public InterimPortletEntityImpl(IPortletDefinitionId portletDefinitionId,\n            String channelSubscribeId, int userId) {\n        this.portletDefinitionId = portletDefinitionId;\n        this.channelSubscribeId = channelSubscribeId;\n        this.userId = userId;\n        this.portletEntityId = new PortletEntityIdImpl(portletDefinitionId, channelSubscribeId, userId);\n        this.portletPreferences = new PortletPreferencesImpl();\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"public IPortletEntity createPortletEntity(IPortletDefinitionId portletDefinitionId, String channelSubscribeId, int userId) {\n        Validate.notNull(portletDefinitionId, \"portletDefinitionId can not be null\");\n        Validate.notNull(channelSubscribeId, \"channelSubscribeId can not be null\");\n        \n        final InterimPortletEntityImpl interimPortletEntity = new InterimPortletEntityImpl(portletDefinitionId, channelSubscribeId, userId);\n        this.storeInterimPortletEntity(interimPortletEntity);\n        return interimPortletEntity;\n    }","id":56641,"modified_method":"@Override\n    public IPortletEntity createPortletEntity(IPortletDefinitionId portletDefinitionId, String channelSubscribeId, int userId) {\n        Validate.notNull(portletDefinitionId, \"portletDefinitionId can not be null\");\n        Validate.notNull(channelSubscribeId, \"channelSubscribeId can not be null\");\n        \n        final InterimPortletEntityImpl interimPortletEntity = new InterimPortletEntityImpl(portletDefinitionId, channelSubscribeId, userId);\n        if (this.logger.isTraceEnabled()) {\n            this.logger.trace(\"Created InterimPortletEntity \" + interimPortletEntity.getPortletEntityId() + \" for def=\" + portletDefinitionId + \", sub=\" + channelSubscribeId + \", usr=\" + userId);\n        }\n        \n        this.storeInterimPortletEntity(interimPortletEntity);\n        return interimPortletEntity;\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"public IPortletEntity getPortletEntity(String channelSubscribeId, int userId) {\n        Validate.notNull(channelSubscribeId, \"channelSubscribeId can not be null\");\n        final InterimPortletEntityImpl interimPortletEntity = this.getInterimPortletEntity(channelSubscribeId, userId);\n        if (interimPortletEntity != null) {\n            return interimPortletEntity;\n        }\n        \n        return this.portletEntityDao.getPortletEntity(channelSubscribeId, userId);\n    }","id":56642,"modified_method":"@Override\n    public IPortletEntity getPortletEntity(String channelSubscribeId, int userId) {\n        Validate.notNull(channelSubscribeId, \"channelSubscribeId can not be null\");\n        final InterimPortletEntityImpl interimPortletEntity = this.getInterimPortletEntity(channelSubscribeId, userId);\n        if (interimPortletEntity != null) {\n            return interimPortletEntity;\n        }\n        \n        final IPortletEntity persistentPortletEntity = this.portletEntityDao.getPortletEntity(channelSubscribeId, userId);\n        if (persistentPortletEntity == null) {\n            return null;\n        }\n        \n        final PersistentPortletEntityWrapper wrappedPortletEntity = new PersistentPortletEntityWrapper(persistentPortletEntity);\n        this.setPersistentIdMapping(wrappedPortletEntity.getPortletEntityId(), persistentPortletEntity.getPortletEntityId());\n        \n        return wrappedPortletEntity;\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"protected InterimPortletEntityCache getInterimPortletEntityCache() {\n        final HttpSession session = this.getSession();\n        \n        //Sync on the session to ensure other threads aren't creating the Map at the same time\n        synchronized (WebUtils.getSessionMutex(session)) {\n            return (InterimPortletEntityCache)session.getAttribute(INTERIM_PORTLET_ENTITY_MAP_ATTRIBUTE);\n        }\n    }","id":56643,"modified_method":"protected InterimPortletEntityCache getInterimPortletEntityCache() {\n        final HttpSession session = this.getSession();\n        if (session == null) {\n            return null;\n        }\n        \n        //Sync on the session to ensure other threads aren't creating the Map at the same time\n        synchronized (WebUtils.getSessionMutex(session)) {\n            return (InterimPortletEntityCache)session.getAttribute(INTERIM_PORTLET_ENTITY_MAP_ATTRIBUTE);\n        }\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"protected void storeInterimPortletEntity(InterimPortletEntityImpl interimPortletEntity) {\n        final HttpSession session = this.getSession();\n        \n        InterimPortletEntityCache entityCache;\n        //Sync on the session to ensure other threads aren't creating the Map at the same time\n        synchronized (WebUtils.getSessionMutex(session)) {\n            entityCache = (InterimPortletEntityCache)session.getAttribute(INTERIM_PORTLET_ENTITY_MAP_ATTRIBUTE);\n            if (entityCache == null) {\n                entityCache = new InterimPortletEntityCache();\n                session.setAttribute(INTERIM_PORTLET_ENTITY_MAP_ATTRIBUTE, entityCache);\n            }\n        }\n        \n        entityCache.storeEntity(interimPortletEntity);\n    }","id":56644,"modified_method":"protected void storeInterimPortletEntity(InterimPortletEntityImpl interimPortletEntity) {\n        final HttpSession session = this.getSession();\n        if (session == null) {\n            return;\n        }\n        \n        InterimPortletEntityCache entityCache;\n        //Sync on the session to ensure other threads aren't creating the Map at the same time\n        synchronized (WebUtils.getSessionMutex(session)) {\n            entityCache = (InterimPortletEntityCache)session.getAttribute(INTERIM_PORTLET_ENTITY_MAP_ATTRIBUTE);\n            if (entityCache == null) {\n                entityCache = new InterimPortletEntityCache();\n                session.setAttribute(INTERIM_PORTLET_ENTITY_MAP_ATTRIBUTE, entityCache);\n            }\n        }\n        \n        entityCache.storeEntity(interimPortletEntity);\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void deletePortletEntity(IPortletEntity portletEntity) {\n        Validate.notNull(portletEntity, \"portletEntity can not be null\");\n        \n        final IPortletEntityId portletEntityId = portletEntity.getPortletEntityId();\n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityId)) {\n            this.removeInterimPortletEntity(portletEntityId);\n        }\n        else {\n            this.portletEntityDao.deletePortletEntity(portletEntity);\n        }\n    }","id":56645,"modified_method":"@Override\n    public void deletePortletEntity(IPortletEntity portletEntity) {\n        Validate.notNull(portletEntity, \"portletEntity can not be null\");\n        \n        if (portletEntity instanceof PersistentPortletEntityWrapper) {\n            //Unwrap the persistent entity\n            portletEntity = ((PersistentPortletEntityWrapper)portletEntity).getPersistentEntity();\n            \n            this.portletEntityDao.deletePortletEntity(portletEntity);\n            \n            //remove the persistent ID mapping after the delete\n            this.removePersistentId(portletEntity.getPortletEntityId());\n        }\n        else {\n            this.removeInterimPortletEntity(portletEntity.getPortletEntityId());\n        }\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"public IPortletEntity getOrCreatePortletEntity(IUserInstance userInstance, String channelSubscribeId) {\n        final IUserPreferencesManager preferencesManager = userInstance.getPreferencesManager();\n        final IUserLayoutManager userLayoutManager = preferencesManager.getUserLayoutManager();\n        \n        //Find the channel and portlet definitions\n        final IUserLayoutChannelDescription channelNode = (IUserLayoutChannelDescription)userLayoutManager.getNode(channelSubscribeId);\n        final int channelPublishId = Integer.valueOf(channelNode.getChannelPublishId());\n        \n        final IPortletDefinition portletDefinition = this.portletDefinitionRegistry.getPortletDefinition(channelPublishId);\n        \n        return this.getOrCreatePortletEntity(portletDefinition.getPortletDefinitionId(), channelSubscribeId, userInstance.getPerson().getID());\n    }","id":56646,"modified_method":"@Override\n    public IPortletEntity getOrCreatePortletEntity(IUserInstance userInstance, String channelSubscribeId) {\n        final IUserPreferencesManager preferencesManager = userInstance.getPreferencesManager();\n        final IUserLayoutManager userLayoutManager = preferencesManager.getUserLayoutManager();\n        \n        //Find the channel and portlet definitions\n        final IUserLayoutChannelDescription channelNode = (IUserLayoutChannelDescription)userLayoutManager.getNode(channelSubscribeId);\n        final int channelPublishId = Integer.valueOf(channelNode.getChannelPublishId());\n        \n        final IPortletDefinition portletDefinition = this.portletDefinitionRegistry.getPortletDefinition(channelPublishId);\n        \n        final IPerson person = userInstance.getPerson();\n        return this.getOrCreatePortletEntity(portletDefinition.getPortletDefinitionId(), channelSubscribeId, person.getID());\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"public Set<IPortletEntity> getPortletEntitiesForUser(int userId) {\n        return this.portletEntityDao.getPortletEntitiesForUser(userId);\n    }","id":56647,"modified_method":"@Override\n    public Set<IPortletEntity> getPortletEntitiesForUser(int userId) {\n        final Set<IPortletEntity> persistentPortletEntities = this.portletEntityDao.getPortletEntitiesForUser(userId);\n        \n        final Set<IPortletEntity> wrappedPortletEntities = new LinkedHashSet<IPortletEntity>();\n        for (final IPortletEntity persistentPortletEntity : persistentPortletEntities) {\n            final PersistentPortletEntityWrapper wrappedPortletEntity = new PersistentPortletEntityWrapper(persistentPortletEntity);\n            this.setPersistentIdMapping(wrappedPortletEntity.getPortletEntityId(), persistentPortletEntity.getPortletEntityId());\n            wrappedPortletEntities.add(wrappedPortletEntity);\n        }\n        \n        final Set<InterimPortletEntityImpl> interimPortletEntities = this.getInterimPortletEntities(userId);\n        if (interimPortletEntities != null) {\n            wrappedPortletEntities.addAll(interimPortletEntities);\n        }\n        \n        return wrappedPortletEntities;\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void storePortletEntity(IPortletEntity portletEntity) {\n        Validate.notNull(portletEntity, \"portletEntity can not be null\");\n        \n        final IPortletEntityId portletEntityId = portletEntity.getPortletEntityId();\n        final IPortletPreferences portletPreferences = portletEntity.getPortletPreferences();\n        final List<IPortletPreference> preferences = portletPreferences.getPortletPreferences();\n        \n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityId)) {\n            //There are preferences on the interim entity, create an store it\n            if (preferences.size() > 0) {\n                final IPortletDefinitionId portletDefinitionId = portletEntity.getPortletDefinitionId();\n                final String channelSubscribeId = portletEntity.getChannelSubscribeId();\n                final int userId = portletEntity.getUserId();\n                final IPortletEntity persistantEntity = this.portletEntityDao.createPortletEntity(portletDefinitionId, channelSubscribeId, userId);\n\n                persistantEntity.setPortletPreferences(portletPreferences);\n                \n                this.portletEntityDao.updatePortletEntity(persistantEntity);\n                \n                //Remove the in-memory interim entity\n                this.removeInterimPortletEntity(portletEntityId);\n            }\n        }\n        else {\n            //Already persistent entity that still has prefs \n            if (preferences.size() > 0) {\n                this.portletEntityDao.updatePortletEntity(portletEntity);\n            }\n            //Already persistent entity with no preferences, DELETE!\n            else {\n                this.portletEntityDao.deletePortletEntity(portletEntity);\n                \n                //Setup an interim entity in its place\n                final IPortletDefinitionId portletDefinitionId = portletEntity.getPortletDefinitionId();\n                final String channelSubscribeId = portletEntity.getChannelSubscribeId();\n                final int userId = portletEntity.getUserId();\n                this.createPortletEntity(portletDefinitionId, channelSubscribeId, userId);\n            }\n        }\n    }","id":56648,"modified_method":"@Override\n    public void storePortletEntity(IPortletEntity portletEntity) {\n        Validate.notNull(portletEntity, \"portletEntity can not be null\");\n        \n        final IPortletEntityId portletEntityId = portletEntity.getPortletEntityId();\n        final IPortletPreferences portletPreferences = portletEntity.getPortletPreferences();\n        final List<IPortletPreference> preferences = portletPreferences.getPortletPreferences();\n        \n        if (portletEntity instanceof PersistentPortletEntityWrapper) {\n            //Unwrap the persistent entity\n            portletEntity = ((PersistentPortletEntityWrapper)portletEntity).getPersistentEntity();\n            \n            //Already persistent entity that still has prefs \n            if (preferences.size() > 0) {\n                this.portletEntityDao.updatePortletEntity(portletEntity);\n            }\n            //Already persistent entity with no preferences, DELETE!\n            else {\n                this.portletEntityDao.deletePortletEntity(portletEntity);\n                \n                //remove the persistent ID mapping after the delete\n                this.removePersistentId(portletEntityId);\n                \n                //Setup an interim entity in its place\n                final IPortletDefinitionId portletDefinitionId = portletEntity.getPortletDefinitionId();\n                final String channelSubscribeId = portletEntity.getChannelSubscribeId();\n                final int userId = portletEntity.getUserId();\n                final IPortletEntity interimPortletEntity = this.createPortletEntity(portletDefinitionId, channelSubscribeId, userId);\n                \n                if (this.logger.isTraceEnabled()) {\n                    this.logger.trace(\"Persistent portlet entity \" + portletEntityId + \" no longer has preferences. Deleted it and created InterimPortletEntity \" + interimPortletEntity.getPortletEntityId());\n                }\n            }\n        }\n        else {\n            //There are preferences on the interim entity, create an store it\n            if (preferences.size() > 0) {\n                final IPortletDefinitionId portletDefinitionId = portletEntity.getPortletDefinitionId();\n                final String channelSubscribeId = portletEntity.getChannelSubscribeId();\n                final int userId = portletEntity.getUserId();\n                final IPortletEntity persistantEntity = this.portletEntityDao.createPortletEntity(portletDefinitionId, channelSubscribeId, userId);\n\n                persistantEntity.setPortletPreferences(portletPreferences);\n                \n                this.portletEntityDao.updatePortletEntity(persistantEntity);\n                \n                //Remove the in-memory interim entity\n                this.removeInterimPortletEntity(portletEntityId);\n                \n                //Setup the persistent ID mapping\n                this.setPersistentIdMapping(portletEntityId, persistantEntity.getPortletEntityId());\n                \n                if (this.logger.isTraceEnabled()) {\n                    this.logger.trace(\"InterimPortletEntity \" + portletEntityId + \" now has preferences. Deleted it and created persistent portlet entity \" + persistantEntity.getPortletEntityId());\n                }\n            }\n        }\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"public IPortletDefinition getParentPortletDefinition(IPortletEntityId portletEntityId) {\n        Validate.notNull(portletEntityId, \"portletEntityId can not be null\");\n        \n        final IPortletDefinitionId portletDefinitionId;\n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityId)) {\n            IPortletEntity portletEntity = new InterimPortletEntityImpl(portletEntityId);\n            portletDefinitionId = portletEntity.getPortletDefinitionId();\n        } else {\n            final IPortletEntity portletEntity = this.getPortletEntity(portletEntityId);\n            portletDefinitionId = portletEntity.getPortletDefinitionId();\n        }\n\n        return this.portletDefinitionRegistry.getPortletDefinition(portletDefinitionId);\n    }","id":56649,"modified_method":"@Override\n    public IPortletDefinition getParentPortletDefinition(IPortletEntityId portletEntityId) {\n        Validate.notNull(portletEntityId, \"portletEntityId can not be null\");\n        \n        final IPortletEntity portletEntity = this.getPortletEntity(portletEntityId);\n        final IPortletDefinitionId portletDefinitionId = portletEntity.getPortletDefinitionId();\n\n        return this.portletDefinitionRegistry.getPortletDefinition(portletDefinitionId);\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * Gets the session for the request.\n     * \n     * @return The session for the current request, will not return null.\n     */\n    protected HttpSession getSession() {\n        final HttpServletRequest request = this.portalRequestUtils.getCurrentPortalRequest();\n        final HttpSession session = request.getSession(false);\n        if (session == null) {\n            throw new IllegalStateException(\"A HttpSession must already exist for the PortletEntityRegistryImpl to function\");\n        }\n        return session;\n    }","id":56650,"modified_method":"/**\n     * @return The session for the current request, will return null if not in request\n     */\n    protected HttpSession getSession() {\n        final HttpServletRequest request;\n        try {\n            request = this.portalRequestUtils.getCurrentPortalRequest();\n        }\n        catch (IllegalStateException e) {\n            //No current request, just return null\n            return null;\n        }\n        \n        final HttpSession session = request.getSession(false);\n        if (session == null) {\n            throw new IllegalStateException(\"A HttpSession must already exist for the PortletEntityRegistryImpl to function\");\n        }\n        return session;\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"public IPortletEntity getPortletEntity(String portletEntityIdString) {\n        Validate.notNull(portletEntityIdString, \"portletEntityId can not be null\");\n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityIdString)) {\n            final IPortletEntityId portletEntityId = new InterimPortletEntityImpl.InterimPortletEntityIdImpl(portletEntityIdString);\n            final InterimPortletEntityImpl interimPortletEntity = this.getInterimPortletEntity(portletEntityId);\n            if (interimPortletEntity != null) {\n                return interimPortletEntity;\n            }\n            \n            return new InterimPortletEntityImpl(portletEntityId);\n        }\n        \n        final long portletEntityIdLong;\n        try {\n            portletEntityIdLong = Long.parseLong(portletEntityIdString);\n        } catch (NumberFormatException nfe) {\n            throw new IllegalArgumentException(\"PortletEntityId must parsable as a long\", nfe);\n        }\n\n        final PortletEntityIdImpl portletEntityId = new PortletEntityIdImpl(portletEntityIdLong);\n        return this.portletEntityDao.getPortletEntity(portletEntityId);\n    }","id":56651,"modified_method":"@Override\n    public IPortletEntity getPortletEntity(String portletEntityIdString) {\n        Validate.notNull(portletEntityIdString, \"portletEntityId can not be null\");\n        return this.getPortletEntity(new PortletEntityIdImpl(portletEntityIdString));\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"public IPortletEntity getPortletEntity(IPortletEntityId portletEntityId) {\n        Validate.notNull(portletEntityId, \"portletEntityId can not be null\");\n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityId)) {\n            final InterimPortletEntityImpl interimPortletEntity = this.getInterimPortletEntity(portletEntityId);\n            if (interimPortletEntity != null) {\n                return interimPortletEntity;\n            }\n            \n            return new InterimPortletEntityImpl(portletEntityId);\n        }\n        \n        return this.portletEntityDao.getPortletEntity(portletEntityId);\n    }","id":56652,"modified_method":"@Override\n    public IPortletEntity getPortletEntity(IPortletEntityId portletEntityId) {\n        Validate.notNull(portletEntityId, \"portletEntityId can not be null\");\n        final InterimPortletEntityImpl interimPortletEntity = this.getInterimPortletEntity(portletEntityId);\n        if (interimPortletEntity != null) {\n            return interimPortletEntity;\n        }\n        \n        //Need to find a mapped persistent entity ID to do a DB lookup\n        final IPortletEntityId persistentEntityId = this.getPersistentId(portletEntityId);\n        if (persistentEntityId == null) {\n            return null;\n        }\n        \n        final IPortletEntity persistentPortletEntity = this.portletEntityDao.getPortletEntity(persistentEntityId);\n        if (persistentPortletEntity == null) {\n            return null;\n        }\n        \n        return new PersistentPortletEntityWrapper(persistentPortletEntity);\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * Creates a new {@link IPortletWindow} for the specified window ID and entity ID.\n     * \n     * @param windowInstanceId The window instance id.\n     * @param portletEntityId The parent entity id.\n     * @param delegateParent The id of the parent window delegating to this window, optional.\n     * @return A new portlet window\n     */\n    protected IPortletWindow createPortletWindow(HttpServletRequest request, IPortletWindowId portletWindowId, IPortletEntityId portletEntityId, IPortletWindowId delegateParent) {\n        //Get the parent definition to determine the descriptor data\n        final IPortletDefinition portletDefinition = this.portletEntityRegistry.getParentPortletDefinition(portletEntityId);\n        final PortletDefinition portletDescriptor = this.portletDefinitionRegistry.getParentPortletDescriptor(portletDefinition.getPortletDefinitionId());\n\n        \n        final PortletWindowImpl portletWindow;\n        if (delegateParent == null) {\n            portletWindow = new PortletWindowImpl(portletWindowId, portletEntityId, portletDescriptor);\n        }\n        else {\n            portletWindow = new PortletWindowImpl(portletWindowId, portletEntityId, portletDescriptor, delegateParent);\n        }\n        \n        this.initializePortletWindow(request, portletEntityId, portletWindow);\n        \n        return portletWindow;\n    }","id":56653,"modified_method":"/**\n     * Creates a new {@link IPortletWindow} for the specified window ID and entity ID.\n     * \n     * @param windowInstanceId The window instance id.\n     * @param portletEntityId The parent entity id.\n     * @param delegateParent The id of the parent window delegating to this window, optional.\n     * @return A new portlet window\n     */\n    protected IPortletWindow createPortletWindow(HttpServletRequest request, IPortletWindowId portletWindowId, IPortletEntityId portletEntityId, IPortletWindowId delegateParent) {\n        //Get the parent definition to determine the descriptor data\n        final IPortletDefinition portletDefinition = this.portletEntityRegistry.getParentPortletDefinition(portletEntityId);\n        final PortletDefinition portletDescriptor = this.portletDefinitionRegistry.getParentPortletDescriptor(portletDefinition.getPortletDefinitionId());\n\n        \n        final PortletWindowImpl portletWindow;\n        if (delegateParent == null) {\n            portletWindow = new PortletWindowImpl(portletWindowId, portletEntityId, portletDescriptor);\n        }\n        else {\n            portletWindow = new PortletWindowImpl(portletWindowId, portletEntityId, portletDescriptor, delegateParent);\n        }\n        \n        if (this.logger.isTraceEnabled()) {\n            this.logger.trace(\"Created PortletWindow \" + portletWindow.getId() + \" for PortletEntity \" + portletEntityId);\n        }\n        \n        this.initializePortletWindow(request, portletEntityId, portletWindow);\n        \n        return portletWindow;\n    }","commit_id":"9036563453e15037442105c34d16b23f44ff9a55","url":"https://github.com/Jasig/uPortal"},{"original_method":"public InterimPortletEntityImpl(String portletEntityIdStr) {\n        super();\n        initFromIdString(portletEntityIdStr);\n        this.portletEntityId = new InterimPortletEntityIdImpl(\n                portletEntityIdStr);\n        this.portletPreferences = new PortletPreferencesImpl();\n    }","id":56654,"modified_method":"/**\n     * Only valid if passed a portletEntityId that returns true from\n     * {@link InterimPortletEntityImpl#isInterimPortletEntityId(String)}\n     */\n    public InterimPortletEntityImpl(String portletEntityIdStr) {\n        initFromIdString(portletEntityIdStr);\n        this.portletEntityId = new InterimPortletEntityIdImpl(\n                portletEntityIdStr);\n        this.portletPreferences = new PortletPreferencesImpl();\n    }","commit_id":"db2cffe46cf8f28994d17074391f24bc91969c5b","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n         * @param objectId\n         */\n        public PortletDefinitionIdImpl(long portletDefinitionId) {\n            super(Long.toString(portletDefinitionId));\n        }","id":56655,"modified_method":"public PortletDefinitionIdImpl(long portletDefinitionId) {\n            super(Long.toString(portletDefinitionId));\n        }","commit_id":"db2cffe46cf8f28994d17074391f24bc91969c5b","url":"https://github.com/Jasig/uPortal"},{"original_method":"private void initFromIdString(String portletEntityIdStr) {\n        String[] vars = StringUtils\n                .split(portletEntityIdStr, INTERIM_SEPARATOR);\n        this.portletDefinitionId = new PortletDefinitionIdImpl(Long\n                .parseLong(vars[1]));\n        this.channelSubscribeId = vars[2];\n        this.userId = Integer.parseInt(vars[3]);\n    }","id":56656,"modified_method":"private void initFromIdString(String portletEntityIdStr) {\n        final String[] vars = StringUtils.split(portletEntityIdStr, INTERIM_SEPARATOR);\n        if (vars.length != 4) {\n            throw new IllegalArgumentException(\"'\" + portletEntityIdStr + \"' is not a valid InterimPortletEntityId\");\n        }\n        \n        this.portletDefinitionId = new PortletDefinitionIdImpl(Long.parseLong(vars[1]));\n        this.channelSubscribeId = vars[2];\n        this.userId = Integer.parseInt(vars[3]);\n    }","commit_id":"db2cffe46cf8f28994d17074391f24bc91969c5b","url":"https://github.com/Jasig/uPortal"},{"original_method":"public InterimPortletEntityImpl(IPortletEntityId portletEntityId) {\n        super();\n        initFromIdString(portletEntityId.getStringId());\n        this.portletEntityId = portletEntityId;\n        this.portletPreferences = new PortletPreferencesImpl();\n    }","id":56657,"modified_method":"/**\n     * Only valid if passed a portletEntityId that returns true from\n     * {@link InterimPortletEntityImpl#isInterimPortletEntityId(IPortletEntityId)}\n     */\n    public InterimPortletEntityImpl(IPortletEntityId portletEntityId) {\n        initFromIdString(portletEntityId.getStringId());\n        this.portletEntityId = portletEntityId;\n        this.portletPreferences = new PortletPreferencesImpl();\n    }","commit_id":"db2cffe46cf8f28994d17074391f24bc91969c5b","url":"https://github.com/Jasig/uPortal"},{"original_method":"public IPortletEntity createPortletEntity(IPortletDefinitionId portletDefinitionId, String channelSubscribeId, int userId) {\n        Validate.notNull(portletDefinitionId, \"portletDefinitionId can not be null\");\n        Validate.notNull(channelSubscribeId, \"channelSubscribeId can not be null\");\n        \n        return new InterimPortletEntityImpl(portletDefinitionId, channelSubscribeId, userId);\n    }","id":56658,"modified_method":"public IPortletEntity createPortletEntity(IPortletDefinitionId portletDefinitionId, String channelSubscribeId, int userId) {\n        Validate.notNull(portletDefinitionId, \"portletDefinitionId can not be null\");\n        Validate.notNull(channelSubscribeId, \"channelSubscribeId can not be null\");\n        \n        final InterimPortletEntityImpl interimPortletEntity = new InterimPortletEntityImpl(portletDefinitionId, channelSubscribeId, userId);\n        this.storeInterimPortletEntity(interimPortletEntity);\n        return interimPortletEntity;\n    }","commit_id":"db2cffe46cf8f28994d17074391f24bc91969c5b","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void storePortletEntity(IPortletEntity portletEntity) {\n        Validate.notNull(portletEntity, \"portletEntity can not be null\");\n        \n        // only persist IF preferences exist.\n        if (portletEntity.getPortletPreferences().getPortletPreferences()\n                .size() > 0) {\n            if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntity.getPortletEntityId())) {\n                IPortletEntity persistantEntity = this.portletEntityDao\n                        .createPortletEntity(portletEntity\n                                .getPortletDefinitionId(), portletEntity\n                                .getChannelSubscribeId(), portletEntity\n                                .getUserId());\n\n                persistantEntity.setPortletPreferences(portletEntity\n                        .getPortletPreferences());\n                this.portletEntityDao.updatePortletEntity(persistantEntity);\n            } else {\n                this.portletEntityDao.updatePortletEntity(portletEntity);\n            }\n        }\n        \n    }","id":56659,"modified_method":"public void storePortletEntity(IPortletEntity portletEntity) {\n        Validate.notNull(portletEntity, \"portletEntity can not be null\");\n        \n        final IPortletEntityId portletEntityId = portletEntity.getPortletEntityId();\n        final IPortletPreferences portletPreferences = portletEntity.getPortletPreferences();\n        final List<IPortletPreference> preferences = portletPreferences.getPortletPreferences();\n        \n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityId)) {\n            //There are preferences on the interim entity, create an store it\n            if (preferences.size() > 0) {\n                final IPortletDefinitionId portletDefinitionId = portletEntity.getPortletDefinitionId();\n                final String channelSubscribeId = portletEntity.getChannelSubscribeId();\n                final int userId = portletEntity.getUserId();\n                final IPortletEntity persistantEntity = this.portletEntityDao.createPortletEntity(portletDefinitionId, channelSubscribeId, userId);\n\n                persistantEntity.setPortletPreferences(portletPreferences);\n                \n                this.portletEntityDao.updatePortletEntity(persistantEntity);\n                \n                //Remove the in-memory interim entity\n                this.removeInterimPortletEntity(portletEntityId);\n            }\n        }\n        else {\n            //Already persistent entity that still has prefs \n            if (preferences.size() > 0) {\n                this.portletEntityDao.updatePortletEntity(portletEntity);\n            }\n            //Already persistent entity with no preferences, DELETE!\n            else {\n                this.portletEntityDao.deletePortletEntity(portletEntity);\n                \n                //Setup an interim entity in its place\n                final IPortletDefinitionId portletDefinitionId = portletEntity.getPortletDefinitionId();\n                final String channelSubscribeId = portletEntity.getChannelSubscribeId();\n                final int userId = portletEntity.getUserId();\n                this.createPortletEntity(portletDefinitionId, channelSubscribeId, userId);\n            }\n        }\n    }","commit_id":"db2cffe46cf8f28994d17074391f24bc91969c5b","url":"https://github.com/Jasig/uPortal"},{"original_method":"public IPortletEntity getPortletEntity(String portletEntityIdString) {\n        Validate.notNull(portletEntityIdString, \"portletEntityId can not be null\");\n        \n        IPortletEntity portletEntity = null;\n\n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityIdString)) {\n            portletEntity = new InterimPortletEntityImpl(portletEntityIdString);\n        } else {\n            final long portletEntityIdLong;\n            try {\n                portletEntityIdLong = Long.parseLong(portletEntityIdString);\n            } catch (NumberFormatException nfe) {\n                throw new IllegalArgumentException(\n                        \"PortletEntityId must parsable as a long\", nfe);\n            }\n\n            final PortletEntityIdImpl portletEntityId = new PortletEntityIdImpl(portletEntityIdLong);\n            portletEntity = this.portletEntityDao.getPortletEntity(portletEntityId);\n        }\n        \n        return portletEntity;\n    }","id":56660,"modified_method":"public IPortletEntity getPortletEntity(String portletEntityIdString) {\n        Validate.notNull(portletEntityIdString, \"portletEntityId can not be null\");\n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityIdString)) {\n            final IPortletEntityId portletEntityId = new InterimPortletEntityImpl.InterimPortletEntityIdImpl(portletEntityIdString);\n            final InterimPortletEntityImpl interimPortletEntity = this.getInterimPortletEntity(portletEntityId);\n            if (interimPortletEntity != null) {\n                return interimPortletEntity;\n            }\n            \n            return new InterimPortletEntityImpl(portletEntityId);\n        }\n        \n        final long portletEntityIdLong;\n        try {\n            portletEntityIdLong = Long.parseLong(portletEntityIdString);\n        } catch (NumberFormatException nfe) {\n            throw new IllegalArgumentException(\"PortletEntityId must parsable as a long\", nfe);\n        }\n\n        final PortletEntityIdImpl portletEntityId = new PortletEntityIdImpl(portletEntityIdLong);\n        return this.portletEntityDao.getPortletEntity(portletEntityId);\n    }","commit_id":"db2cffe46cf8f28994d17074391f24bc91969c5b","url":"https://github.com/Jasig/uPortal"},{"original_method":"public IPortletEntity getPortletEntity(String channelSubscribeId, int userId) {\n        Validate.notNull(channelSubscribeId, \"channelSubscribeId can not be null\");\n        \n        return this.portletEntityDao.getPortletEntity(channelSubscribeId, userId);\n    }","id":56661,"modified_method":"public IPortletEntity getPortletEntity(String channelSubscribeId, int userId) {\n        Validate.notNull(channelSubscribeId, \"channelSubscribeId can not be null\");\n        final InterimPortletEntityImpl interimPortletEntity = this.getInterimPortletEntity(channelSubscribeId, userId);\n        if (interimPortletEntity != null) {\n            return interimPortletEntity;\n        }\n        \n        return this.portletEntityDao.getPortletEntity(channelSubscribeId, userId);\n    }","commit_id":"db2cffe46cf8f28994d17074391f24bc91969c5b","url":"https://github.com/Jasig/uPortal"},{"original_method":"public void deletePortletEntity(IPortletEntity portletEntity) {\n        Validate.notNull(portletEntity, \"portletEntity can not be null\");\n        \n        if ((portletEntity != null) && (!InterimPortletEntityImpl\n                .isInterimPortletEntityId(portletEntity.getPortletEntityId()))) {\n            this.portletEntityDao.deletePortletEntity(portletEntity);\n        }\n    }","id":56662,"modified_method":"public void deletePortletEntity(IPortletEntity portletEntity) {\n        Validate.notNull(portletEntity, \"portletEntity can not be null\");\n        \n        final IPortletEntityId portletEntityId = portletEntity.getPortletEntityId();\n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityId)) {\n            this.removeInterimPortletEntity(portletEntityId);\n        }\n        else {\n            this.portletEntityDao.deletePortletEntity(portletEntity);\n        }\n    }","commit_id":"db2cffe46cf8f28994d17074391f24bc91969c5b","url":"https://github.com/Jasig/uPortal"},{"original_method":"public IPortletEntity getPortletEntity(IPortletEntityId portletEntityId) {\n        Validate.notNull(portletEntityId, \"portletEntityId can not be null\");\n        IPortletEntity portletEntity = null;\n\n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityId)) {\n            portletEntity = new InterimPortletEntityImpl(portletEntityId);\n        } else {\n            portletEntity = this.portletEntityDao.getPortletEntity(portletEntityId);\n        }\n\n        return portletEntity;\n    }","id":56663,"modified_method":"public IPortletEntity getPortletEntity(IPortletEntityId portletEntityId) {\n        Validate.notNull(portletEntityId, \"portletEntityId can not be null\");\n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityId)) {\n            final InterimPortletEntityImpl interimPortletEntity = this.getInterimPortletEntity(portletEntityId);\n            if (interimPortletEntity != null) {\n                return interimPortletEntity;\n            }\n            \n            return new InterimPortletEntityImpl(portletEntityId);\n        }\n        \n        return this.portletEntityDao.getPortletEntity(portletEntityId);\n    }","commit_id":"db2cffe46cf8f28994d17074391f24bc91969c5b","url":"https://github.com/Jasig/uPortal"},{"original_method":"public IPortletDefinition getParentPortletDefinition(IPortletEntityId portletEntityId) {\n        Validate.notNull(portletEntityId, \"portletEntityId can not be null\");\n        \n        IPortletDefinitionId portletDefinitionId = null;\n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityId)) {\n            IPortletEntity portletEntity = new InterimPortletEntityImpl(portletEntityId);\n            portletDefinitionId = portletEntity.getPortletDefinitionId();\n        } else {\n            final IPortletEntity portletEntity = this.getPortletEntity(portletEntityId);\n            portletDefinitionId = portletEntity.getPortletDefinitionId();\n        }\n\n        return this.portletDefinitionRegistry.getPortletDefinition(portletDefinitionId);\n    }","id":56664,"modified_method":"public IPortletDefinition getParentPortletDefinition(IPortletEntityId portletEntityId) {\n        Validate.notNull(portletEntityId, \"portletEntityId can not be null\");\n        \n        final IPortletDefinitionId portletDefinitionId;\n        if (InterimPortletEntityImpl.isInterimPortletEntityId(portletEntityId)) {\n            IPortletEntity portletEntity = new InterimPortletEntityImpl(portletEntityId);\n            portletDefinitionId = portletEntity.getPortletDefinitionId();\n        } else {\n            final IPortletEntity portletEntity = this.getPortletEntity(portletEntityId);\n            portletDefinitionId = portletEntity.getPortletDefinitionId();\n        }\n\n        return this.portletDefinitionRegistry.getPortletDefinition(portletDefinitionId);\n    }","commit_id":"db2cffe46cf8f28994d17074391f24bc91969c5b","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n   public FilterDirector handleRequest(HttpServletRequest request, ReadableHttpServletResponse response) {\n\n      final FilterDirector filterDirector = new FilterDirectorImpl();\n      HeaderManager headerManager = filterDirector.requestHeaderManager();\n      filterDirector.setFilterAction(FilterAction.PASS);\n\n      try {\n         MimeType mimeType = MimeType.guessMediaTypeFromString(request.getHeader(\"Content-Type\"));\n         AuthCredentials credentials = new ContentParser(jsonTransformer, xmlTransformer).parse(\n                 mimeType, \n                 new LimitedReadInputStream(streamLimit, request.getInputStream()));\n\n         if (credentials != null) {\n            headerManager.appendHeader(PowerApiHeader.USER.toString(), credentials.getId(), quality);\n            headerManager.appendHeader(PowerApiHeader.GROUPS.toString(), config.getGroup(), quality);\n         }\n\n      } catch (IOException ex) {\n         filterDirector.setFilterAction(FilterAction.NOT_SET);\n         LOG.error(\"Unable to read message body stream. Reason: \" + ex.getMessage(), ex);\n      } catch (Exception ex) {\n         filterDirector.setFilterAction(FilterAction.NOT_SET);\n         LOG.error(\"Unable to read message body stream. Reason: \" + ex.getMessage(), ex);\n      }\n\n      return filterDirector;\n   }","id":56665,"modified_method":"@Override\n    public FilterDirector handleRequest(HttpServletRequest request, ReadableHttpServletResponse response) {\n\n        final FilterDirector filterDirector = new FilterDirectorImpl();\n        HeaderManager headerManager = filterDirector.requestHeaderManager();\n        filterDirector.setFilterAction(FilterAction.PASS);\n\n        try {\n            MimeType mimeType = CONTENT_TYPE_CHOOSER.choosePreferredHeaderValue(new MediaRangeParser(request.getHeaders(\"Content-Type\")).parse()).getMimeType();\n            AuthCredentials credentials = new ContentParser(jsonTransformer, xmlTransformer).parse(\n                    mimeType,\n                    new LimitedReadInputStream(streamLimit, request.getInputStream()));\n\n            if (credentials != null) {\n                headerManager.appendHeader(PowerApiHeader.USER.toString(), credentials.getId(), quality);\n                headerManager.appendHeader(PowerApiHeader.GROUPS.toString(), config.getGroup(), quality);\n            }\n\n        } catch (IOException ex) {\n            filterDirector.setFilterAction(FilterAction.NOT_SET);\n            LOG.error(\"Unable to read message body stream. Reason: \" + ex.getMessage(), ex);\n        } catch (Exception ex) {\n            filterDirector.setFilterAction(FilterAction.NOT_SET);\n            LOG.error(\"Unable to read message body stream. Reason: \" + ex.getMessage(), ex);\n        }\n\n        return filterDirector;\n    }","commit_id":"c9346619f8f6702fba321dfb55ddab529cd43e00","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n      public void shouldParseMultiValueHeaderFields() {\n         final List<HeaderValue> headerValues = new HeaderFieldParser(SUPER_COMPLICATED_MEDIA_TYPE).parse();\n\n         assertTrue(\"Header field parser should find two fields\", headerValues.size() == 2);\n\n         final HeaderValue first = headerValues.get(0);\n\n         assertEquals(\"Header value should match expected\", \"application/vnd.rackspace.services.a+xml\", first.getValue());\n         assertTrue(\"Header value should have two parameters\", first.getParameters().size() == 2);\n         assertEquals(\"Header value paramter 'x' should have value 'v1.0'\", first.getParameters().get(\"x\"), \"v1.0\");\n         assertEquals(\"Header value quality factor whould be 0.5\", Double.valueOf(0.8), Double.valueOf(first.getQualityFactor()));\n\n         final HeaderValue second = headerValues.get(1);\n\n         assertEquals(\"Header value should match expected\", \"application/json\", second.getValue());\n         assertTrue(\"Header value should have one parameters\", second.getParameters().size() == 1);\n         assertEquals(\"Header value quality factor whould be 0.5\", Double.valueOf(0.5), Double.valueOf(second.getQualityFactor()));\n      }","id":56666,"modified_method":"@Test\n      public void shouldParseMultiValueHeaderFields() {\n         final List<String> rawHeaderValues = new LinkedList<String>();\n         rawHeaderValues.add(\"value one;q=0.1;x=v1.0\");\n         rawHeaderValues.add(\"value two;q=0.3\");\n         \n         final List<HeaderValue> headerValues = new HeaderFieldParser(Collections.enumeration(rawHeaderValues)).parse();\n\n         assertTrue(\"Header field parser should find two fields\", headerValues.size() == 2);\n\n         final HeaderValue first = headerValues.get(0);\n\n         assertEquals(\"Header value should match expected\", \"value one\", first.getValue());\n         assertTrue(\"Header value should have two parameters\", first.getParameters().size() == 2);\n         assertEquals(\"Header value paramter 'x' should have value 'v1.0'\", first.getParameters().get(\"x\"), \"v1.0\");\n         assertEquals(\"Header value quality factor whould be 0.1\", (Double) 0.1, (Double) first.getQualityFactor());\n\n         final HeaderValue second = headerValues.get(1);\n\n         assertEquals(\"Header value should match expected\", \"value two\", second.getValue());\n         assertTrue(\"Header value should have one parameters\", second.getParameters().size() == 1);\n         assertEquals(\"Header value quality factor whould be 0.3\", (Double) 0.3, (Double) second.getQualityFactor());\n      }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"/**\n    * This constructor copies the parameter map into the header value parameter\n    * map.\n    * \n    * @param value\n    * @param parameters \n    */\n   public HeaderValueImpl(String value, Map<String, String> parameters) {\n      this.parameters = new HashMap(parameters);\n      this.value = value;\n   }","id":56667,"modified_method":"/**\n    * This constructor copies the parameter map into the header value parameter\n    * map.\n    *\n    * @param value\n    * @param parameters\n    */\n   public HeaderValueImpl(String value, Map<String, String> parameters) throws MalformedHeaderValueException {\n      this.parsedQualityFactor = getQualityFactor(parameters);\n      this.parameters = new HashMap(parameters);\n      this.value = value;\n   }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n   public double getQualityFactor() {\n      double qualityFactor = -1;\n\n      final String qualityFactorString = parameters.get(QUALITY_FACTOR_PARAM_NAME);\n\n      if (StringUtilities.isNotBlank(qualityFactorString)) {\n         try {\n            qualityFactor = Double.parseDouble(qualityFactorString);\n         } catch (NumberFormatException nfe) {\n            // TODO:Implement - Handle this exception\n         }\n      }\n\n      return qualityFactor;\n   }","id":56668,"modified_method":"@Override\n   public double getQualityFactor() {\n      return parsedQualityFactor;\n   }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n   public int hashCode() {\n      int hash = 5;\n      hash = 43 * hash + (this.parameters != null ? this.parameters.hashCode() : 0);\n      hash = 43 * hash + (this.value != null ? this.value.hashCode() : 0);\n\n      return hash;\n   }","id":56669,"modified_method":"@Override\n   public int hashCode() {\n      int hash = 7;\n      hash = 67 * hash + (this.parameters != null ? this.parameters.hashCode() : 0);\n      hash = 67 * hash + (this.value != null ? this.value.hashCode() : 0);\n      return hash;\n   }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"/**\n    * Constructor that sets the header value's quality factor\n    * \n    * @param value\n    * @param qualityFactor \n    */\n   public HeaderValueImpl(String value, double qualityFactor) {\n      this.parameters = new HashMap();\n      this.value = value;\n      \n      parameters.put(QUALITY_FACTOR_PARAM_NAME, String.valueOf(qualityFactor));\n   }","id":56670,"modified_method":"/**\n    * Constructor that sets the header value's quality factor directly\n    *\n    * @param value\n    * @param qualityFactor\n    */\n   public HeaderValueImpl(String value, double qualityFactor) {\n      this.value = value;\n      this.parameters = qualityFactorToParameterMap(qualityFactor);\n      this.parsedQualityFactor = qualityFactor;\n   }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"private void parseParameter(Map<String, String> parameters, String unparsedParameter) {\n      final String[] keyValueSplit = unparsedParameter.split(\"=\");\n\n      // For a possible parameter to be valid it must have the '=' character\n      if (keyValueSplit.length == 2) {\n         parameters.put(keyValueSplit[0].trim(), keyValueSplit[1].trim());\n      }\n   }","id":56671,"modified_method":"private void parseParameter(Map<String, String> parameters, String unparsedParameter) throws MalformedHeaderValueException {\n      final String[] keyValueSplit = unparsedParameter.split(\"=\");\n\n      // For a possible parameter to be valid it must have the '=' character\n      if (keyValueSplit.length == 2) {\n         parameters.put(keyValueSplit[0].trim(), keyValueSplit[1].trim());\n      } else {\n         throw new MalformedHeaderValueException(\"Valid parameter expected for header. Got: \" + unparsedParameter);\n      }\n   }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n      public void shouldSkipMalformedParameters() {\n         final String headerValueString = \"the value; q=0.5; afafeafa ; b= b; c = c\";\n         final HeaderValue headerValue = new HeaderValueParser(headerValueString).parse();\n\n         assertEquals(\"Should parse the acutal header value correctly\", \"the value\", headerValue.getValue());\n         assertEquals(\"Should parse quality factor as a double equaling 0.5\", Double.valueOf(0.5), Double.valueOf(headerValue.getQualityFactor()));\n         assertEquals(\"Should parse parameter 'b' correctly\", headerValue.getParameters().get(\"b\"), \"b\");\n         assertEquals(\"Should parse parameter 'c' correctly\", headerValue.getParameters().get(\"c\"), \"c\");\n\n         assertNull(\"Should skip malformed parameters\", headerValue.getParameters().get(\"a\"));\n      }","id":56672,"modified_method":"@Test(expected=MalformedHeaderValueException.class)\n      public void shouldFailOnMalformedParameters() {\n         final String headerValueString = \"the value; q=0.5; afafeafa ; b= b; c = c\";\n         new HeaderValueParser(headerValueString).parse();\n      }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"public static <T extends HeaderValue> T choosePreferedHeaderValue(Iterable<T> headerValues) {\n      final Iterator<T> headerValueIterator = headerValues.iterator();\n      \n      T prefered = headerValueIterator.hasNext() ? headerValueIterator.next() : null;\n      \n      while (headerValueIterator.hasNext()) {\n         final T next = headerValueIterator.next();\n         \n         if (next.getQualityFactor() > prefered.getQualityFactor()) {\n            prefered = next;\n         }\n      }\n      \n      return prefered;\n   }","id":56673,"modified_method":"public static <T extends HeaderValue> T choosePreferedHeaderValue(Iterable<T> headerValues) {\n      final Iterator<T> headerValueIterator = headerValues != null ? headerValues.iterator() : Collections.EMPTY_LIST.iterator();\n      \n      T prefered = headerValueIterator.hasNext() ? headerValueIterator.next() : null;\n      \n      while (headerValueIterator.hasNext()) {\n         final T next = headerValueIterator.next();\n         \n         if (next.getQualityFactor() > prefered.getQualityFactor()) {\n            prefered = next;\n         }\n      }\n      \n      return prefered;\n   }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n   public FilterDirector handleRequest(HttpServletRequest request, ReadableHttpServletResponse response) {\n      final FilterDirector director = new FilterDirectorImpl();\n\n      // Does the request contain expected headers?\n      if (requestHasExpectedHeaders(request)) {\n         final String requestUri = request.getRequestURI();\n\n         // We set the default action to PASS in this case since further\n         // logic may or may not change the action and this request can now\n         // be considered valid.\n         director.setFilterAction(FilterAction.PASS);\n\n         // Does the request match the configured getCurrentLimits API call endpoint?\n         if (describeLimitsUriRegex.matcher(requestUri).matches()) {\n            describeLimitsForRequest(director, request);\n         } else {\n            newRateLimiter().recordLimitedRequest(new RateLimitingRequestInfo(request), director);\n         }\n      } else {\n         LOG.warn(\"Expected header: \" + PowerApiHeader.USER.toString()\n                 + \" was not supplied in the request. Rate limiting requires this header to operate.\");\n\n         // Auto return a 401 if the request does not meet expectations\n         director.setResponseStatus(HttpStatusCode.UNAUTHORIZED);\n         director.setFilterAction(FilterAction.RETURN);\n      }\n\n      return director;\n   }","id":56674,"modified_method":"@Override\n   public FilterDirector handleRequest(HttpServletRequest request, ReadableHttpServletResponse response) {\n      final FilterDirector director = new FilterDirectorImpl();\n\n      // Does the request contain expected headers?\n      if (requestHasExpectedHeaders(request)) {\n         final String requestUri = request.getRequestURI();\n\n         // We set the default action to PASS in this case since further\n         // logic may or may not change the action and this request can now\n         // be considered valid.\n         director.setFilterAction(FilterAction.PASS);\n\n         // Does the request match the configured getCurrentLimits API call endpoint?\n         if (describeLimitsUriRegex.matcher(requestUri).matches()) {\n            describeLimitsForRequest(director, request);\n         } else {\n            recordLimitedRequest(new RateLimitingRequestInfo(request), director);\n         }\n      } else {\n         LOG.warn(\"Expected header: \" + PowerApiHeader.USER.toString()\n                 + \" was not supplied in the request. Rate limiting requires this header to operate.\");\n\n         // Auto return a 401 if the request does not meet expectations\n         director.setResponseStatus(HttpStatusCode.UNAUTHORIZED);\n         director.setFilterAction(FilterAction.RETURN);\n      }\n\n      return director;\n   }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldProcessResponseWhenAbsoluteLimitsIntegrationIsEnabled() {\n            final Enumeration<String> groupHeaders = mock(Enumeration.class);\n            when(groupHeaders.hasMoreElements()).thenReturn(Boolean.FALSE);\n\n            when(requestMock.getHeader(PowerApiHeader.USER.toString())).thenReturn(\"user\");\n            when(requestMock.getHeader(PowerApiHeader.GROUPS.toString())).thenReturn(\"group\");\n            when(requestMock.getHeaders(PowerApiHeader.GROUPS.toString())).thenReturn(groupHeaders);\n            when(requestMock.getMethod()).thenReturn(\"GET\");\n            when(requestMock.getRequestURI()).thenReturn(\"/v1.0/limits\");\n            when(requestMock.getRequestURL()).thenReturn(new StringBuffer(\"http://localhost/v1.0/limits\"));\n\n            final FilterDirector director = handler.newHandler().handleRequest(requestMock, null);\n\n            assertEquals(\"On successful pass, filter must process response\", FilterAction.PROCESS_RESPONSE, director.getFilterAction());\n        }","id":56675,"modified_method":"@Test\n      public void shouldProcessResponseWhenAbsoluteLimitsIntegrationIsEnabled() {\n         when(mockedRequest.getMethod()).thenReturn(\"GET\");\n         when(mockedRequest.getRequestURI()).thenReturn(\"/v1.0/limits\");\n         when(mockedRequest.getRequestURL()).thenReturn(new StringBuffer(\"http://localhost/v1.0/limits\"));\n\n         final FilterDirector director = handler.newHandler().handleRequest(mockedRequest, null);\n\n         assertEquals(\"On successful pass, filter must process response\", FilterAction.PROCESS_RESPONSE, director.getFilterAction());\n      }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldPassValidRequests() {\n            final Enumeration<String> groupHeaders = mock(Enumeration.class);\n            when(groupHeaders.hasMoreElements()).thenReturn(Boolean.FALSE);\n\n            when(requestMock.getHeader(PowerApiHeader.USER.toString())).thenReturn(\"user\");\n            when(requestMock.getHeader(PowerApiHeader.GROUPS.toString())).thenReturn(\"group\");\n            when(requestMock.getHeaders(PowerApiHeader.GROUPS.toString())).thenReturn(groupHeaders);\n            when(requestMock.getMethod()).thenReturn(\"GET\");\n            when(requestMock.getRequestURI()).thenReturn(\"/v1.0/12345/resource\");\n            when(requestMock.getRequestURL()).thenReturn(new StringBuffer(\"http://localhost/v1.0/12345/resource\"));\n\n            final FilterDirector director = handler.newHandler().handleRequest(requestMock, null);\n\n            assertEquals(\"Filter must pass valid, non-limited requests\", FilterAction.PASS, director.getFilterAction());\n        }","id":56676,"modified_method":"@Test\n      public void shouldPassValidRequests() {\n         when(mockedRequest.getMethod()).thenReturn(\"GET\");\n         when(mockedRequest.getRequestURI()).thenReturn(\"/v1.0/12345/resource\");\n         when(mockedRequest.getRequestURL()).thenReturn(new StringBuffer(\"http://localhost/v1.0/12345/resource\"));\n\n         final FilterDirector director = handler.newHandler().handleRequest(mockedRequest, null);\n\n         assertEquals(\"Filter must pass valid, non-limited requests\", FilterAction.PASS, director.getFilterAction());\n      }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldReturnUnauthorizedWhenUserInformationIsMissing() {\n            final FilterDirector director = handler.newHandler().handleRequest(requestMock, null);\n\n            assertEquals(\"FilterDirectory must return on rate limiting failure\", FilterAction.RETURN, director.getFilterAction());\n            assertEquals(\"Must return 401 if the user has not been identified\", HttpStatusCode.UNAUTHORIZED, director.getResponseStatus());\n        }","id":56677,"modified_method":"@Test\n      public void shouldReturnUnauthorizedWhenUserInformationIsMissing() {\n         final FilterDirector director = handler.newHandler().handleRequest(mockedRequest, null);\n\n         assertEquals(\"FilterDirectory must return on rate limiting failure\", FilterAction.RETURN, director.getFilterAction());\n         assertEquals(\"Must return 401 if the user has not been identified\", HttpStatusCode.UNAUTHORIZED, director.getResponseStatus());\n      }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"public RateLimitingRequestInfo(HttpServletRequest request) {\n      this.request = request;\n\n      allUserGroups = new LinkedList<String>();\n\n      for (Enumeration<String> groupHeaders = request.getHeaders(PowerApiHeader.GROUPS.toString()); groupHeaders.hasMoreElements();) {\n         allUserGroups.add(groupHeaders.nextElement());\n      }\n\n      // TODO: Update this to call the quality utility and then set userName with user with highest quality value\n      userName = request.getHeader(PowerApiHeader.USER.toString());\n      requestMethod = HttpMethod.fromValue(request.getMethod().toUpperCase());\n\n   }","id":56678,"modified_method":"public RateLimitingRequestInfo(HttpServletRequest request) {\n      this.request = request;\n      \n      final List<HeaderValue> values = new HeaderFieldParser(request.getHeaders(PowerApiHeader.USER.toString())).parse();\n      userName = QualityFactorUtility.choosePreferedHeaderValue(values);\n      \n      allUserGroups = new LinkedList<String>();\n\n      for (Enumeration<String> groupHeaders = request.getHeaders(PowerApiHeader.GROUPS.toString()); groupHeaders.hasMoreElements();) {\n         allUserGroups.add(groupHeaders.nextElement());\n      }\n\n      requestMethod = HttpMethod.fromValue(request.getMethod().toUpperCase());\n   }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"public String getUserName() {\n      return userName;\n   }","id":56679,"modified_method":"public String getUserName() {\n      return userName.getValue();\n   }","commit_id":"d0c645792cc5f08d9168f375510f4bab805a4994","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n   public FilterDirector handleRequest(HttpServletRequest request, ReadableHttpServletResponse response) {\n\n      final FilterDirector filterDirector = new FilterDirectorImpl();\n      HeaderManager headerManager = filterDirector.requestHeaderManager();\n      filterDirector.setFilterAction(FilterAction.PASS);\n\n      try {\n         MimeType mimeType = MimeType.guessMediaTypeFromString(request.getHeader(\"Content-Type\"));\n         AuthCredentials credentials = new ContentParser(jsonTransformer, xmlTransformer).parse(\n                 mimeType, \n                 new LimitedReadInputStream(streamLimit, request.getInputStream()));\n\n         if (credentials != null) {\n            headerManager.appendHeader(PowerApiHeader.USER.toString(), credentials.getId(), quality);\n            headerManager.appendHeader(PowerApiHeader.GROUPS.toString(), config.getGroup(), quality);\n         }\n\n      } catch (IOException ex) {\n         filterDirector.setFilterAction(FilterAction.NOT_SET);\n         LOG.error(\"Unable to read message body stream. Reason: \" + ex.getMessage(), ex);\n      } catch (Exception ex) {\n         filterDirector.setFilterAction(FilterAction.NOT_SET);\n         LOG.error(\"Unable to read message body stream. Reason: \" + ex.getMessage(), ex);\n      }\n\n      return filterDirector;\n   }","id":56680,"modified_method":"@Override\n    public FilterDirector handleRequest(HttpServletRequest request, ReadableHttpServletResponse response) {\n\n        final FilterDirector filterDirector = new FilterDirectorImpl();\n        HeaderManager headerManager = filterDirector.requestHeaderManager();\n        filterDirector.setFilterAction(FilterAction.PASS);\n\n        try {\n            MimeType mimeType = CONTENT_TYPE_CHOOSER.choosePreferredHeaderValue(new MediaRangeParser(request.getHeaders(\"Content-Type\")).parse()).getMimeType();\n            AuthCredentials credentials = new ContentParser(jsonTransformer, xmlTransformer).parse(\n                    mimeType,\n                    new LimitedReadInputStream(streamLimit, request.getInputStream()));\n\n            if (credentials != null) {\n                headerManager.appendHeader(PowerApiHeader.USER.toString(), credentials.getId(), quality);\n                headerManager.appendHeader(PowerApiHeader.GROUPS.toString(), config.getGroup(), quality);\n            }\n\n        } catch (IOException ex) {\n            filterDirector.setFilterAction(FilterAction.NOT_SET);\n            LOG.error(\"Unable to read message body stream. Reason: \" + ex.getMessage(), ex);\n        } catch (Exception ex) {\n            filterDirector.setFilterAction(FilterAction.NOT_SET);\n            LOG.error(\"Unable to read message body stream. Reason: \" + ex.getMessage(), ex);\n        }\n\n        return filterDirector;\n    }","commit_id":"a94fe7d1504ad50753b3db00964d173fcfedd444","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public void build() {\n        AcceptHeader acceptHeader = getObjectFactory().createAcceptHeader();\n\n        if (StringUtilities.isNotBlank((requestAcceptHeader))) {\n            final List<MediaRange> mediaRanges = MediaRangeParser.getMediaRangesFromAcceptHeader(requestAcceptHeader);\n\n            for (com.rackspace.papi.commons.util.http.media.MediaRange range : mediaRanges) {\n                com.rackspace.httpx.MediaRange mediaRange = getObjectFactory().createMediaRange();\n\n                mediaRange.setType(range.getMediaType().getType());\n                mediaRange.setSubtype(range.getMediaType().getSubtype());\n\n                for (Map.Entry<String, String> entry : range.getParameters().entrySet()) {\n                    SimpleParameter simpleParameter = getObjectFactory().createSimpleParameter();\n\n                    simpleParameter.setName(entry.getKey());\n                    simpleParameter.setValue(entry.getValue());\n\n                    mediaRange.getParameter().add(simpleParameter);\n                }\n\n                acceptHeader.getMediaRange().add(mediaRange);\n            }\n        }\n\n        headers.setAccept(acceptHeader);\n    }","id":56681,"modified_method":"@Override\n    public void build() {\n        AcceptHeader acceptHeader = getObjectFactory().createAcceptHeader();\n\n        if (StringUtilities.isNotBlank((requestAcceptHeader))) {\n            final List<MediaType> mediaRanges = new MediaRangeParser(requestAcceptHeader).parse();\n\n            for (com.rackspace.papi.commons.util.http.media.MediaType range : mediaRanges) {\n                com.rackspace.httpx.MediaRange mediaRange = getObjectFactory().createMediaRange();\n\n                mediaRange.setType(range.getMimeType().getType());\n                mediaRange.setSubtype(range.getMimeType().getSubType());\n\n                for (Map.Entry<String, String> entry : range.getParameters().entrySet()) {\n                    SimpleParameter simpleParameter = getObjectFactory().createSimpleParameter();\n\n                    simpleParameter.setName(entry.getKey());\n                    simpleParameter.setValue(entry.getValue());\n\n                    mediaRange.getParameter().add(simpleParameter);\n                }\n\n                acceptHeader.getMediaRange().add(mediaRange);\n            }\n        }\n\n        headers.setAccept(acceptHeader);\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"public VersionedOriginService getOriginServiceForRequest(HttpRequestInfo requestInfo, FilterDirector director) throws VersionedHostNotFoundException {\n        // Check URI first to see if it matches configured host href\n        VersionedOriginService destination = findOriginServiceByUri(requestInfo);\n\n        // If version info not in URI look in accept header\n        if (destination == null) {\n            final MediaRange range = requestInfo.getPreferedMediaRange();\n            final ServiceVersionMapping currentServiceVersion = getServiceVersionForMediaRange(range);\n\n            if (currentServiceVersion != null) {\n                director.requestHeaderManager().putHeader(CommonHttpHeader.ACCEPT.getHeaderKey(), range.getMediaType().toString());\n                destination = new VersionedOriginService(currentServiceVersion, getHostForVersionMapping(currentServiceVersion));\n            }\n        }\n\n        return destination;\n    }","id":56682,"modified_method":"public VersionedOriginService getOriginServiceForRequest(HttpRequestInfo requestInfo, FilterDirector director) throws VersionedHostNotFoundException {\n        // Check URI first to see if it matches configured host href\n        VersionedOriginService destination = findOriginServiceByUri(requestInfo);\n\n        // If version info not in URI look in accept header\n        if (destination == null) {\n            final MediaType range = requestInfo.getPreferedMediaRange();\n            final ServiceVersionMapping currentServiceVersion = getServiceVersionForMediaRange(range);\n\n            if (currentServiceVersion != null) {\n                director.requestHeaderManager().putHeader(CommonHttpHeader.ACCEPT.getHeaderKey(), range.getMimeType().toString());\n                destination = new VersionedOriginService(currentServiceVersion, getHostForVersionMapping(currentServiceVersion));\n            }\n        }\n\n        return destination;\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"public ServiceVersionMapping getServiceVersionForMediaRange(MediaRange preferedMediaRange) {\n        for (Map.Entry<String, ServiceVersionMapping> serviceMapping : serviceMappings.entrySet()) {\n            if (mediaTypeMatchesVersionConfigServiceMapping((ServiceVersionMapping) serviceMapping.getValue(), preferedMediaRange)) {\n                return serviceMapping.getValue();\n            }\n        }\n\n        return null;\n    }","id":56683,"modified_method":"public ServiceVersionMapping getServiceVersionForMediaRange(MediaType preferedMediaRange) {\n        for (Map.Entry<String, ServiceVersionMapping> serviceMapping : serviceMappings.entrySet()) {\n            if (mediaTypeMatchesVersionConfigServiceMapping((ServiceVersionMapping) serviceMapping.getValue(), preferedMediaRange)) {\n                return serviceMapping.getValue();\n            }\n        }\n\n        return null;\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"public boolean mediaTypeMatchesVersionConfigServiceMapping(ServiceVersionMapping serviceVersionMapping, MediaRange preferedMediaRange) {\n        final MediaTypeList configuredMediaTypes = serviceVersionMapping.getMediaTypes();\n\n        for (MediaType configuredMediaType : configuredMediaTypes.getMediaType()) {\n            final MediaRange configuredMediaRange = MediaRangeParser.parseMediaRange(configuredMediaType.getType());\n\n            if (preferedMediaRange.equals(configuredMediaRange)) {\n                return true;\n            }\n        }\n\n        return false;\n    }","id":56684,"modified_method":"public boolean mediaTypeMatchesVersionConfigServiceMapping(ServiceVersionMapping serviceVersionMapping, MediaType preferedMediaType) {\n        final MediaTypeList configuredMediaTypes = serviceVersionMapping.getMediaTypes();\n\n        for (com.rackspace.papi.components.versioning.config.MediaType configuredMediaType : configuredMediaTypes.getMediaType()) {\n            final MimeType configuredMimeType = MimeType.getMatchingMimeType(configuredMediaType.getType());\n            \n            if (preferedMediaType.getMimeType() == configuredMimeType) {\n                return true;\n            }\n        }\n\n        return false;\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"public void transform(JAXBElement element, MediaRange mediaRange, OutputStream outputStream) {\n        switch (mediaRange.getMediaType()) {\n            case APPLICATION_XML:\n                xmlStreamTransform.transform(element, outputStream);\n                break;\n\n            case APPLICATION_JSON:\n            case UNKNOWN:\n            default:\n                jsonStreamTransform.transform(element, outputStream);\n        }\n    }","id":56685,"modified_method":"public void transform(JAXBElement element, MediaType mediaRange, OutputStream outputStream) {\n        switch (mediaRange.getMimeType()) {\n            case APPLICATION_XML:\n                xmlStreamTransform.transform(element, outputStream);\n                break;\n\n            case APPLICATION_JSON:\n            case UNKNOWN:\n            default:\n                jsonStreamTransform.transform(element, outputStream);\n        }\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Deprecated\n    public String transform(JAXBElement element, MediaRange mediaRange) {\n        switch (mediaRange.getMediaType()) {\n            case APPLICATION_XML:\n                return xmlTransform.transform(element);\n\n            case APPLICATION_JSON:\n            case UNKNOWN:\n            default:\n                return jsonTransform.transform(element);\n        }\n    }","id":56686,"modified_method":"@Deprecated\n    public String transform(JAXBElement element, MediaType mediaRange) {\n        switch (mediaRange.getMimeType()) {\n            case APPLICATION_XML:\n                return xmlTransform.transform(element);\n\n            case APPLICATION_JSON:\n            case UNKNOWN:\n            default:\n                return jsonTransform.transform(element);\n        }\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldTransformChoicesToJson() throws Exception {\n            String expected;\n            expected = choicesJsonFileReader.read();\n            assertNotNull(\"no expected string value found!\", expected);\n\n            final JAXBElement jaxbElement\n                    = xmlTransformer.transform(((FilePathReaderImpl)choicesXmlFileReader).getResourceAsStream());\n\n            assertEquals(expected, contentTransformer.transform(jaxbElement, new MediaRange(MediaType.APPLICATION_JSON)));\n        }","id":56687,"modified_method":"@Test\n        public void shouldTransformChoicesToJson() throws Exception {\n            String expected;\n            expected = choicesJsonFileReader.read();\n            assertNotNull(\"no expected string value found!\", expected);\n\n            final JAXBElement jaxbElement\n                    = xmlTransformer.transform(((FilePathReaderImpl)choicesXmlFileReader).getResourceAsStream());\n\n            assertEquals(expected, contentTransformer.transform(jaxbElement, new MediaType(MimeType.APPLICATION_JSON)));\n        }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldTransformVersionToXml() throws Exception {\n            String expected;\n            expected = versionXmlFileReader.read();\n            assertNotNull(\"no expected string value found!\", expected);\n\n            final JAXBElement jaxbElement\n                    = xmlTransformer.transform(((FilePathReaderImpl)versionXmlFileReader).getResourceAsStream());\n\n            assertEquals(expected, contentTransformer.transform(jaxbElement, new MediaRange(MediaType.APPLICATION_XML)));\n        }","id":56688,"modified_method":"@Test\n        public void shouldTransformVersionToXml() throws Exception {\n            String expected;\n            expected = versionXmlFileReader.read();\n            assertNotNull(\"no expected string value found!\", expected);\n\n            final JAXBElement jaxbElement\n                    = xmlTransformer.transform(((FilePathReaderImpl)versionXmlFileReader).getResourceAsStream());\n\n            assertEquals(expected, contentTransformer.transform(jaxbElement, new MediaType(MimeType.APPLICATION_XML)));\n        }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldTransformVersionsToJson() throws Exception {\n            String expected;\n            expected = versionJsonFileReader.read();\n            assertNotNull(\"no expected string value found!\", expected);\n\n            final JAXBElement jaxbElement\n                    = xmlTransformer.transform(((FilePathReaderImpl)versionXmlFileReader).getResourceAsStream());\n\n            assertEquals(expected, contentTransformer.transform(jaxbElement, new MediaRange(MediaType.APPLICATION_JSON)));\n        }","id":56689,"modified_method":"@Test\n        public void shouldTransformVersionsToJson() throws Exception {\n            String expected;\n            expected = versionJsonFileReader.read();\n            assertNotNull(\"no expected string value found!\", expected);\n\n            final JAXBElement jaxbElement\n                    = xmlTransformer.transform(((FilePathReaderImpl)versionXmlFileReader).getResourceAsStream());\n\n            assertEquals(expected, contentTransformer.transform(jaxbElement, new MediaType(MimeType.APPLICATION_JSON)));\n        }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldTransformVersionToJson() throws Exception {\n            String expected;\n            expected = versionJsonFileReader.read();\n            assertNotNull(\"no expected string value found!\", expected);\n\n            final JAXBElement jaxbElement\n                    = xmlTransformer.transform(((FilePathReaderImpl)versionXmlFileReader).getResourceAsStream());\n\n            assertEquals(expected, contentTransformer.transform(jaxbElement, new MediaRange(MediaType.APPLICATION_JSON)));\n        }","id":56690,"modified_method":"@Test\n        public void shouldTransformVersionToJson() throws Exception {\n            String expected;\n            expected = versionJsonFileReader.read();\n            assertNotNull(\"no expected string value found!\", expected);\n\n            final JAXBElement jaxbElement\n                    = xmlTransformer.transform(((FilePathReaderImpl)versionXmlFileReader).getResourceAsStream());\n\n            assertEquals(expected, contentTransformer.transform(jaxbElement, new MediaType(MimeType.APPLICATION_JSON)));\n        }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"public HeaderFieldParser(Enumeration<String> headerValues) {\n      this();\n      \n      while(headerValues.hasMoreElements()) {\n         this.headerValueStrings.add(headerValues.nextElement());\n      }\n   }","id":56691,"modified_method":"public HeaderFieldParser(Enumeration<String> headerValueEnumeration) {\n      this();\n      \n      while(headerValueEnumeration.hasMoreElements()) {\n         this.headerValueStrings.add(headerValueEnumeration.nextElement());\n      }\n   }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"public HeaderValue parse() {\n      final Map<String, String> parameters = new HashMap<String, String>();\n      final String[] parameterSplit = rawHeaderValue.split(\";\");\n\n      if (parameterSplit.length > 1) {\n         // Start at index 1 since that's the actual header value\n         for (int i = 1; i < parameterSplit.length; i++) {\n            parseParameter(parameters, parameterSplit[i]);\n         }\n      }\n\n      return new ParsedHeaderImpl(parameterSplit[0].trim(), parameters);\n   }","id":56692,"modified_method":"public HeaderValue parse() {\n      final Map<String, String> parameters = new HashMap<String, String>();\n      final String[] parameterSplit = rawHeaderValue.split(\";\");\n\n      if (parameterSplit.length > 1) {\n         // Start at index 1 since that's the actual header value\n         for (int i = 1; i < parameterSplit.length; i++) {\n            parseParameter(parameters, parameterSplit[i]);\n         }\n      }\n\n      return new HeaderValueImpl(parameterSplit[0].trim(), parameters);\n   }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"public HttpRequestInfoImpl(List<MediaRange> acceptMediaRange, String uri, String url, String host) {\n        this.preferedMediaRange = MediaRangeParser.getPerferedMediaRange(acceptMediaRange);\n        this.acceptMediaRange = acceptMediaRange;\n        this.uri = uri;\n        this.url = url;\n        this.host = host;\n    }","id":56693,"modified_method":"public HttpRequestInfoImpl(List<MediaType> acceptMediaRange, String uri, String url, String host) {\n        this.preferedMediaRange = QualityFactorUtility.choosePreferedHeaderValue(acceptMediaRange);\n        this.acceptMediaRange = acceptMediaRange;\n        this.uri = uri;\n        this.url = url;\n        this.host = host;\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public MediaRange getPreferedMediaRange() {\n        return preferedMediaRange;\n    }","id":56694,"modified_method":"@Override\n    public MediaType getPreferedMediaRange() {\n        return preferedMediaRange;\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"private static List<MediaRange> getMediaRanges(HttpServletRequest request) {\n        return RequestMediaRangeInterrogator.interrogate(request.getRequestURI(), request.getHeader(CommonHttpHeader.ACCEPT.getHeaderKey()));\n    }","id":56695,"modified_method":"private static List<MediaType> getMediaRanges(HttpServletRequest request) {\n        return RequestMediaRangeInterrogator.interrogate(request.getRequestURI(), request.getHeader(CommonHttpHeader.ACCEPT.getHeaderKey()));\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public boolean hasMediaRange(MediaRange targetRange) {\n        for (MediaRange requestedRange : acceptMediaRange) {\n            if (requestedRange.equals(targetRange)) {\n                return true;\n            }\n        }\n\n        return false;\n    }","id":56696,"modified_method":"@Override\n    public boolean hasMediaRange(MediaType targetRange) {\n        for (MediaType requestedRange : acceptMediaRange) {\n            if (requestedRange.equals(targetRange)) {\n                return true;\n            }\n        }\n\n        return false;\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldParse() throws IOException {\n            Parser parser = RequestParserFactory.newInstance();\n            String expected = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?><httpx xmlns=\\\"http://docs.rackspace.com/httpx/v1.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://docs.rackspace.com/httpx/v1.0 ./httpx.xsd\\\"><request fidelity=\\\"BODY HEAD\\\" uri=\\\"/request\\\" method=\\\"POST\\\" version=\\\"HTTP/1.1\\\"><head fidelity=\\\"URI_DETAIL HEADERS\\\"><uri-detail fragment=\\\"where do we get this?\\\"><query-parameter name=\\\"A\\\"><value>1<\/value><value>2<\/value><\/query-parameter><query-parameter name=\\\"B\\\"><value>1<\/value><value>2<\/value><\/query-parameter><\/uri-detail><headers fidelity=\\\"* ACCEPT\\\"><accept><media-range subtype=\\\"xml\\\" type=\\\"application\\\"><parameter value=\\\"0.8\\\" name=\\\" q\\\"/><\/media-range><media-range subtype=\\\"html\\\" type=\\\"text\\\"/><\/accept><header name=\\\"Content-Type\\\"><value>application/xml<\/value><\/header><\/headers><\/head><body/><\/request><\/httpx>\";\n\n            InputStream actual = parser.parse(mockedRequest, messageFidelity, headFidelity, headersFidelity, false);\n\n            InputStreamReader reader = new InputStreamReader(actual);\n            BufferedReader bufReader = new BufferedReader(reader);\n\n            assertEquals(expected, bufReader.readLine());\n        }","id":56697,"modified_method":"@Test\n        public void shouldParse() throws IOException {\n            Parser parser = RequestParserFactory.newInstance();\n            String expected = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"yes\\\"?><httpx xmlns=\\\"http://docs.rackspace.com/httpx/v1.0\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" xsi:schemaLocation=\\\"http://docs.rackspace.com/httpx/v1.0 ./httpx.xsd\\\"><request fidelity=\\\"BODY HEAD\\\" uri=\\\"/request\\\" method=\\\"POST\\\" version=\\\"HTTP/1.1\\\"><head fidelity=\\\"URI_DETAIL HEADERS\\\"><uri-detail fragment=\\\"where do we get this?\\\"><query-parameter name=\\\"A\\\"><value>1<\/value><value>2<\/value><\/query-parameter><query-parameter name=\\\"B\\\"><value>1<\/value><value>2<\/value><\/query-parameter><\/uri-detail><headers fidelity=\\\"* ACCEPT\\\"><accept><media-range subtype=\\\"xml\\\" type=\\\"application\\\"><parameter value=\\\"0.8\\\" name=\\\"q\\\"/><\/media-range><media-range subtype=\\\"html\\\" type=\\\"text\\\"/><\/accept><header name=\\\"Content-Type\\\"><value>application/xml<\/value><\/header><\/headers><\/head><body/><\/request><\/httpx>\";\n\n            InputStream actual = parser.parse(mockedRequest, messageFidelity, headFidelity, headersFidelity, false);\n\n            InputStreamReader reader = new InputStreamReader(actual);\n            BufferedReader bufReader = new BufferedReader(reader);\n\n            assertEquals(expected, bufReader.readLine());\n        }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"private MediaRangeParser() {\n        \n    }","id":56698,"modified_method":"public MediaRangeParser(String rawHeaderString) {\n      this(new HeaderFieldParser(rawHeaderString).parse());\n   }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldParseAcceptHeaderWithMultipleMediaRanges() {\n            String acceptHeader = \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\";\n\n            List<MediaRange> mediaRanges = MediaRangeParser.getMediaRangesFromAcceptHeader(acceptHeader);\n\n            assertEquals(4, mediaRanges.size());\n        }","id":56699,"modified_method":"@Test\n      public void shouldParseAcceptHeaderWithMultipleMediaRanges() {\n         String acceptHeader = \"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\";\n\n         List<MediaType> mediaRanges = new MediaRangeParser(acceptHeader).parse();\n\n         assertEquals(4, mediaRanges.size());\n      }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldParseStandardMediaRangeWithParameters() {\n            String acceptHeader = \"application/xml; v=1.0; s=7; q=1\";\n\n            List<MediaRange> mediaRanges = MediaRangeParser.getMediaRangesFromAcceptHeader(acceptHeader);\n\n            assertEquals(MediaType.APPLICATION_XML, mediaRanges.get(0).getMediaType());\n            assertEquals(3, mediaRanges.get(0).getParameters().size());\n        }","id":56700,"modified_method":"@Test\n      public void shouldParseStandardMediaRangeWithParameters() {\n         String acceptHeader = \"application/xml; v=1.0; s=7; q=1\";\n\n         List<MediaType> mediaRanges = new MediaRangeParser(acceptHeader).parse();\n\n         assertEquals(MimeType.APPLICATION_XML, mediaRanges.get(0).getMimeType());\n         assertEquals(3, mediaRanges.get(0).getParameters().size());\n      }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldParseAcceptHeaderWithVendorSpecificMediaRange() {\n            String acceptHeader = \"application/vnd.openstack.compute-v1.1+json\";\n\n            List<MediaRange> mediaRanges = MediaRangeParser.getMediaRangesFromAcceptHeader(acceptHeader);\n\n            assertEquals(MediaType.APPLICATION_JSON, mediaRanges.get(0).getMediaType());\n            assertEquals(acceptHeader, mediaRanges.get(0).getVendorSpecificMediaType());\n        }","id":56701,"modified_method":"@Test\n      public void shouldParseAcceptHeaderWithVendorSpecificMediaRange() {\n         String acceptHeader = \"application/vnd.openstack.compute-v1.1+json\";\n\n         List<MediaType> mediaRanges = new MediaRangeParser(acceptHeader).parse();\n\n         assertEquals(MimeType.APPLICATION_JSON, mediaRanges.get(0).getMimeType());\n         assertEquals(acceptHeader, mediaRanges.get(0).getValue());\n      }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldParseStandardMediaRangeWithoutParameters() {\n            String acceptHeader = \"application/xml\";\n\n            List<MediaRange> mediaRanges = MediaRangeParser.getMediaRangesFromAcceptHeader(acceptHeader);\n\n            Assert.assertEquals(MediaType.APPLICATION_XML, mediaRanges.get(0).getMediaType());\n        }","id":56702,"modified_method":"@Test\n      public void shouldParseStandardMediaRangeWithoutParameters() {\n         String acceptHeader = \"application/xml\";\n\n         List<MediaType> mediaRanges = new MediaRangeParser(acceptHeader).parse();\n\n         Assert.assertEquals(MimeType.APPLICATION_XML, mediaRanges.get(0).getMimeType());\n      }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"public static HeaderValue choosePreferedHeaderValue(Iterable<HeaderValue> headerValues) {\n      final Iterator<HeaderValue> headerValueIterator = headerValues.iterator();\n      \n      HeaderValue prefered = headerValueIterator.hasNext() ? headerValueIterator.next() : null;\n      \n      while (headerValueIterator.hasNext()) {\n         final HeaderValue next = headerValueIterator.next();\n         \n         if (next.getQualityFactor() > prefered.getQualityFactor()) {\n            prefered = next;\n         }\n      }\n      \n      return prefered;\n   }","id":56703,"modified_method":"public static <T extends HeaderValue> T choosePreferedHeaderValue(Iterable<T> headerValues) {\n      final Iterator<T> headerValueIterator = headerValues.iterator();\n      \n      T prefered = headerValueIterator.hasNext() ? headerValueIterator.next() : null;\n      \n      while (headerValueIterator.hasNext()) {\n         final T next = headerValueIterator.next();\n         \n         if (next.getQualityFactor() > prefered.getQualityFactor()) {\n            prefered = next;\n         }\n      }\n      \n      return prefered;\n   }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"private void writeLimitsResponse(byte[] readableContents, HttpServletRequest request, FilterDirector filterDirector) throws IOException {\n        filterDirector.setResponseStatus(HttpStatusCode.OK);\n        \n        final List<MediaRange> mediaRanges = MediaRangeParser.getMediaRangesFromAcceptHeader(request.getHeader(CommonHttpHeader.ACCEPT.getHeaderKey()));\n        final MediaRange preferredMediaRange = MediaRangeParser.getPerferedMediaRange(mediaRanges);\n        \n        // TODO:Review - Possible null guard required for preferredMediaRange\n        \n        switch (preferredMediaRange.getMediaType()) {\n            case APPLICATION_XML:\n                filterDirector.getResponseOutputStream().write(readableContents);\n                filterDirector.responseHeaderManager().putHeader(CommonHttpHeader.CONTENT_TYPE.getHeaderKey(), MediaType.APPLICATION_XML.toString());\n                break;\n\n            case APPLICATION_JSON:\n            default:\n                RESPONSE_TRANSFORMER.streamAsJson(new ByteArrayInputStream(readableContents), filterDirector.getResponseOutputStream());\n                filterDirector.responseHeaderManager().putHeader(CommonHttpHeader.CONTENT_TYPE.getHeaderKey(), MediaType.APPLICATION_JSON.toString());\n        }\n    }","id":56704,"modified_method":"private void writeLimitsResponse(byte[] readableContents, HttpServletRequest request, FilterDirector filterDirector) throws IOException {\n        filterDirector.setResponseStatus(HttpStatusCode.OK);\n        \n        final List<MediaType> mediaRanges = new MediaRangeParser(request.getHeaders(CommonHttpHeader.ACCEPT.getHeaderKey())).parse();\n        final MediaType preferredMediaRange = QualityFactorUtility.choosePreferedHeaderValue(mediaRanges);\n        \n        // TODO:Review - Possible null guard required for preferredMediaRange\n        \n        switch (preferredMediaRange.getMimeType()) {\n            case APPLICATION_XML:\n                filterDirector.getResponseOutputStream().write(readableContents);\n                filterDirector.responseHeaderManager().putHeader(CommonHttpHeader.CONTENT_TYPE.getHeaderKey(), MimeType.APPLICATION_XML.toString());\n                break;\n\n            case APPLICATION_JSON:\n            default:\n                RESPONSE_TRANSFORMER.streamAsJson(new ByteArrayInputStream(readableContents), filterDirector.getResponseOutputStream());\n                filterDirector.responseHeaderManager().putHeader(CommonHttpHeader.CONTENT_TYPE.getHeaderKey(), MimeType.APPLICATION_JSON.toString());\n        }\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"public static List<MediaRange> interrogate(String requestUri, String acceptHeader) {\n        final List<MediaRange> ranges = new LinkedList<MediaRange>();\n        \n        final MediaType mediaType = VariantParser.getMediaTypeFromVariant(requestUri);\n\n        if (mediaType == null) {\n            ranges.addAll(MediaRangeParser.getMediaRangesFromAcceptHeader(acceptHeader));\n\n        } else {\n            ranges.add(new MediaRange(mediaType));\n        }\n        \n        if (ranges.isEmpty()) {\n            ranges.add(new MediaRange(MediaType.UNSPECIFIED));\n        }\n\n        return ranges;\n    }","id":56705,"modified_method":"public static List<MediaType> interrogate(String requestUri, String acceptHeader) {\n      final List<MediaType> ranges = new LinkedList<MediaType>();\n\n      final MimeType mediaType = VariantParser.getMediaTypeFromVariant(requestUri);\n\n      if (mediaType == null) {\n         ranges.addAll(new MediaRangeParser(acceptHeader).parse());\n      } else {\n         ranges.add(new MediaType(mediaType.getMimeType(), mediaType));\n      }\n\n      if (ranges.isEmpty()) {\n         ranges.add(new MediaType(MimeType.UNSPECIFIED.getMimeType(), MimeType.UNSPECIFIED));\n      }\n\n      return ranges;\n   }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldReturnMediaTypeFromVariant() {\n            List<MediaRange> mediaRange = RequestMediaRangeInterrogator.interrogate(\"http://cloudservers/images.json\", \"\");\n\n            assertEquals(MediaType.APPLICATION_JSON, mediaRange.get(0).getMediaType());\n        }","id":56706,"modified_method":"@Test\n        public void shouldReturnMediaTypeFromVariant() {\n            List<MediaType> mediaRange = RequestMediaRangeInterrogator.interrogate(\"http://cloudservers/images.json\", \"\");\n\n            assertEquals(MimeType.APPLICATION_JSON, mediaRange.get(0).getMimeType());\n        }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldReturnMediaTypeFromAcceptHeader() {\n            List<MediaRange> mediaRange = RequestMediaRangeInterrogator.interrogate(\"http://servers.api.openstack.org/images\", \"application/xml\");\n\n            assertEquals(MediaType.APPLICATION_XML, mediaRange.get(0).getMediaType());\n        }","id":56707,"modified_method":"@Test\n        public void shouldReturnMediaTypeFromAcceptHeader() {\n            List<MediaType> mediaRange = RequestMediaRangeInterrogator.interrogate(\"http://servers.api.openstack.org/images\", \"application/xml\");\n\n            assertEquals(MimeType.APPLICATION_XML, mediaRange.get(0).getMimeType());\n        }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Override\n    public void handle(String message, HttpServletRequest request, HttpServletResponse response) throws IOException {\n        // In the case where we pass/route the request, there is a chance that\n        // the repsonse will be committed by and underlying service, outside of papi\n        if (response.isCommitted()) {\n            return;\n        }\n\n        final StatusCodeMatcher matchedCode = getMatchingStatusCode(String.valueOf(response.getStatus()));\n\n        if (matchedCode != null) {\n            final List<MediaRange> mediaRanges = MediaRangeParser.getMediaRangesFromAcceptHeader(request.getHeader(CommonHttpHeader.ACCEPT.getHeaderKey()));\n            final MediaRange preferedMediaRange = MediaRangeParser.getPerferedMediaRange(mediaRanges);\n            \n            final Message statusCodeMessage = getMatchingStatusCodeMessage(matchedCode, preferedMediaRange);\n\n            if (statusCodeMessage != null) {\n                if (!statusCodeMessage.isPrependOrigin()) {\n                    response.resetBuffer();\n                }\n\n                final HttpLogFormatter formatter = getFormatter(matchedCode, statusCodeMessage);\n\n                if (formatter != null) {\n                    final String formattedOutput = formatter.format(message, request, response).trim();\n                    \n                    //Write the content type header and then write out our content\n                    response.setHeader(CommonHttpHeader.CONTENT_TYPE.getHeaderKey(), preferedMediaRange.getMediaType().toString());\n                    \n                    // TODO:Enhancement - Update formatter logic for streaming\n                    // TODO:Enhancement - Update getBytes(...) to use requested content encoding\n                    response.getOutputStream().write(formattedOutput.getBytes());\n\n                } // else{} TODO:Implement This is an error case. Formatters should never be null if they are configured.\n            }\n        }\n    }","id":56708,"modified_method":"@Override\n    public void handle(String message, HttpServletRequest request, HttpServletResponse response) throws IOException {\n        // In the case where we pass/route the request, there is a chance that\n        // the repsonse will be committed by and underlying service, outside of papi\n        if (response.isCommitted()) {\n            return;\n        }\n\n        final StatusCodeMatcher matchedCode = getMatchingStatusCode(String.valueOf(response.getStatus()));\n\n        if (matchedCode != null) {\n            final List<MediaType> mediaRanges = new MediaRangeParser(request.getHeaders(CommonHttpHeader.ACCEPT.getHeaderKey())).parse();\n            final MediaType preferedMediaRange = QualityFactorUtility.choosePreferedHeaderValue(mediaRanges);\n            \n            final Message statusCodeMessage = getMatchingStatusCodeMessage(matchedCode, preferedMediaRange);\n\n            if (statusCodeMessage != null) {\n                if (!statusCodeMessage.isPrependOrigin()) {\n                    response.resetBuffer();\n                }\n\n                final HttpLogFormatter formatter = getFormatter(matchedCode, statusCodeMessage);\n\n                if (formatter != null) {\n                    final String formattedOutput = formatter.format(message, request, response).trim();\n                    \n                    //Write the content type header and then write out our content\n                    response.setHeader(CommonHttpHeader.CONTENT_TYPE.getHeaderKey(), preferedMediaRange.getMimeType().toString());\n                    \n                    // TODO:Enhancement - Update formatter logic for streaming\n                    // TODO:Enhancement - Update getBytes(...) to use requested content encoding\n                    response.getOutputStream().write(formattedOutput.getBytes());\n\n                } // else{} TODO:Implement This is an error case. Formatters should never be null if they are configured.\n            }\n        }\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"private Message getMatchingStatusCodeMessage(StatusCodeMatcher code, MediaRange requestedMediaType) {\n        for (Message message : code.getMessage()) {\n            final List<MediaRange> configurationRanges = MediaRangeParser.getMediaRangesFromAcceptHeader(message.getMediaType());\n\n            if (configurationRanges.contains(requestedMediaType)) {\n                return message;\n            }\n        }\n\n        return null;\n    }","id":56709,"modified_method":"private Message getMatchingStatusCodeMessage(StatusCodeMatcher code, MediaType requestedMediaType) {\n        for (Message message : code.getMessage()) {\n            final List<MediaType> configurationRanges = new MediaRangeParser(message.getMediaType()).parse();\n\n            if (configurationRanges.contains(requestedMediaType)) {\n                return message;\n            }\n        }\n\n        return null;\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"public static MediaType getMediaTypeFromVariant(String variant) {\n        final Matcher matcher = VARIANT_REGEX.matcher(variant);\n        MediaType mediaType = null;\n        \n        if (matcher.matches()) {\n            if (variant.toLowerCase().contains(\"xml\")) {\n                mediaType = MediaType.APPLICATION_XML;\n            } else if (variant.toLowerCase().contains(\"json\")) {\n                mediaType = MediaType.APPLICATION_JSON;\n            }\n        }\n\n        return mediaType;\n    }","id":56710,"modified_method":"public static MimeType getMediaTypeFromVariant(String variant) {\n        final Matcher matcher = VARIANT_REGEX.matcher(variant);\n        MimeType mediaType = null;\n        \n        if (matcher.matches()) {\n            if (variant.toLowerCase().contains(\"xml\")) {\n                mediaType = MimeType.APPLICATION_XML;\n            } else if (variant.toLowerCase().contains(\"json\")) {\n                mediaType = MimeType.APPLICATION_JSON;\n            }\n        }\n\n        return mediaType;\n    }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldMatchLastVariant() {\n            assertEquals(MediaType.APPLICATION_XML, VariantParser.getMediaTypeFromVariant(URI_WITH_MULTIPLE_MEDIA_TYPE));\n        }","id":56711,"modified_method":"@Test\n        public void shouldMatchLastVariant() {\n            assertEquals(MimeType.APPLICATION_XML, VariantParser.getMediaTypeFromVariant(URI_WITH_MULTIPLE_MEDIA_TYPE));\n        }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldReturnMediaType() {\n            MediaType mediaType = VariantParser.getMediaTypeFromVariant(URI_WITH_JSON_MEDIA_TYPE);\n\n            assertEquals(MediaType.APPLICATION_JSON, mediaType);\n        }","id":56712,"modified_method":"@Test\n        public void shouldReturnMediaType() {\n            MimeType mediaType = VariantParser.getMediaTypeFromVariant(URI_WITH_JSON_MEDIA_TYPE);\n\n            assertEquals(MimeType.APPLICATION_JSON, mediaType);\n        }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Test\n        public void shouldIgnoreQueryParameters() {\n            assertEquals(MediaType.APPLICATION_XML, VariantParser.getMediaTypeFromVariant(URI_WITH_PARAMS));\n        }","id":56713,"modified_method":"@Test\n        public void shouldIgnoreQueryParameters() {\n            assertEquals(MimeType.APPLICATION_XML, VariantParser.getMediaTypeFromVariant(URI_WITH_PARAMS));\n        }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"@Before\n        public void standUp() {\n            mediaRangeList = new LinkedList<MediaRange>();\n            mediaRangeList.add(new MediaRange(MediaType.UNKNOWN));\n\n            mapping = new ServiceVersionMapping();\n            mapping.setId(\"v1.0\");\n            mapping.setContextPath(\"_v1.0\");\n        }","id":56714,"modified_method":"@Before\n      public void standUp() {\n         mediaRangeList = new LinkedList<MediaType>();\n         mediaRangeList.add(new MediaType(\"\", MimeType.UNKNOWN));\n\n         mapping = new ServiceVersionMapping();\n         mapping.setId(\"v1.0\");\n         mapping.setContextPath(\"_v1.0\");\n      }","commit_id":"d10b6f1efab5a78bddc0dca64695916a3ea23e32","url":"https://github.com/rackerlabs/repose"},{"original_method":"public void testNoReBundling() throws Exception\n    {\n        File testFile = getTestFile( \"target/test-classes/org.apache.maven.maven-model_1.0.0.0.jar\" );\n        if ( testFile.exists() )\n        {\n            testFile.delete();\n        }\n\n        ArtifactStub artifact = new ArtifactStub();\n        artifact.setGroupId( \"group\" );\n        artifact.setArtifactId( \"artifact\" );\n        artifact.setVersion( \"1.0.0.0\" );\n\n        MavenProject project = new MavenProjectStub();\n        project.setVersion( artifact.getVersion() );\n        project.setArtifact( artifact );\n        project.setArtifacts( Collections.EMPTY_SET );\n        project.setDependencyArtifacts( Collections.EMPTY_SET );\n        File bundleFile = getTestFile( \"src/test/resources/org.apache.maven.maven-model_2.1.0.SNAPSHOT.jar\" );\n        artifact.setFile( bundleFile );\n\n        BundleInfo bundleInfo = plugin.bundle( project );\n\n        Map exports = bundleInfo.getExportedPackages();\n        String[] packages = new String[]\n            { \"org.apache.maven.model.io.jdom\", \"org.apache.maven.model\" };\n\n        for ( int i = 0; i < packages.length; i++ )\n        {\n            assertTrue( \"Bundle info does not contain a package that it is  exported in the manifest: \" + packages[i],\n                exports.containsKey( packages[i] ) );\n        }\n\n        assertFalse( \"Bundle info contains a package that it is not exported in the manifest\", exports\n            .containsKey( \"org.apache.maven.model.io.xpp3\" ) );\n    }","id":56715,"modified_method":"public void testNoReBundling() throws Exception\n    {\n        File testFile = getTestFile( \"target/test-classes/org.apache.maven.maven-model_1.0.0.0.jar\" );\n        if ( testFile.exists() )\n        {\n            testFile.delete();\n        }\n\n        ArtifactStub artifact = new ArtifactStub();\n        artifact.setGroupId( \"group\" );\n        artifact.setArtifactId( \"artifact\" );\n        artifact.setVersion( \"1.0.0.0\" );\n\n        MavenProject project = new MavenProjectStub();\n        project.setGroupId( artifact.getGroupId() );\n        project.setArtifactId( artifact.getArtifactId() );\n        project.setVersion( artifact.getVersion() );\n        project.setArtifact( artifact );\n        project.setArtifacts( Collections.EMPTY_SET );\n        project.setDependencyArtifacts( Collections.EMPTY_SET );\n        File bundleFile = getTestFile( \"src/test/resources/org.apache.maven.maven-model_2.1.0.SNAPSHOT.jar\" );\n        artifact.setFile( bundleFile );\n\n        BundleInfo bundleInfo = plugin.bundle( project );\n\n        Map exports = bundleInfo.getExportedPackages();\n        String[] packages = new String[]\n            { \"org.apache.maven.model.io.jdom\", \"org.apache.maven.model\" };\n\n        for ( int i = 0; i < packages.length; i++ )\n        {\n            assertTrue( \"Bundle info does not contain a package that it is  exported in the manifest: \" + packages[i],\n                exports.containsKey( packages[i] ) );\n        }\n\n        assertFalse( \"Bundle info contains a package that it is not exported in the manifest\", exports\n            .containsKey( \"org.apache.maven.model.io.xpp3\" ) );\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * TODO this should return getMaven2Osgi().getBundleFileName( project.getArtifact() )\n     */\n    protected String getBundleName( MavenProject currentProject )\n    {\n        String extension;\n        try\n        {\n            extension = currentProject.getArtifact().getArtifactHandler().getExtension();\n        }\n        catch ( Throwable e )\n        {\n            extension = currentProject.getArtifact().getType();\n        }\n        if ( StringUtils.isEmpty( extension ) || \"bundle\".equals( extension ) )\n        {\n            extension = \"jar\"; // just in case maven gets confused\n        }\n        String finalName = currentProject.getBuild().getFinalName();\n        if ( null != classifier && classifier.trim().length() > 0 )\n        {\n            return finalName + '-' + classifier + '.' + extension;\n        }\n        return finalName + '.' + extension;\n    }","id":56716,"modified_method":"/**\n     * TODO this should return getMaven2Osgi().getBundleFileName( project.getArtifact() )\n     */\n    protected String getBundleName( MavenProject currentProject )\n    {\n        String extension;\n        try\n        {\n            extension = currentProject.getArtifact().getArtifactHandler().getExtension();\n        }\n        catch ( Throwable e )\n        {\n            extension = currentProject.getArtifact().getType();\n        }\n        if ( StringUtils.isEmpty( extension ) || \"bundle\".equals( extension ) || \"pom\".equals( extension ) )\n        {\n            extension = \"jar\"; // just in case maven gets confused\n        }\n        String finalName = currentProject.getBuild().getFinalName();\n        if ( null != classifier && classifier.trim().length() > 0 )\n        {\n            return finalName + '-' + classifier + '.' + extension;\n        }\n        return finalName + '.' + extension;\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"protected Properties getDefaultProperties( MavenProject currentProject )\n    {\n        Properties properties = new Properties();\n\n        String bsn;\n        try\n        {\n            bsn = getMaven2OsgiConverter().getBundleSymbolicName( currentProject.getArtifact() );\n        }\n        catch ( Exception e )\n        {\n            bsn = currentProject.getGroupId() + \".\" + currentProject.getArtifactId();\n        }\n\n        // Setup defaults\n        properties.put( MAVEN_SYMBOLICNAME, bsn );\n        properties.put( Analyzer.BUNDLE_SYMBOLICNAME, bsn );\n        properties.put( Analyzer.IMPORT_PACKAGE, \"*\" );\n        properties.put( Analyzer.BUNDLE_VERSION, getMaven2OsgiConverter().getVersion(currentProject.getVersion()) );\n\n        // remove the extraneous Include-Resource and Private-Package entries from generated manifest\n        properties.put( Constants.REMOVEHEADERS, Analyzer.INCLUDE_RESOURCE + ',' + Analyzer.PRIVATE_PACKAGE );\n\n        header( properties, Analyzer.BUNDLE_DESCRIPTION, currentProject.getDescription() );\n        StringBuffer licenseText = printLicenses( currentProject.getLicenses() );\n        if ( licenseText != null )\n        {\n            header( properties, Analyzer.BUNDLE_LICENSE, licenseText );\n        }\n        header( properties, Analyzer.BUNDLE_NAME, currentProject.getName() );\n\n        if ( currentProject.getOrganization() != null )\n        {\n            if ( currentProject.getOrganization().getName() != null )\n            {\n                String organizationName = currentProject.getOrganization().getName();\n                header( properties, Analyzer.BUNDLE_VENDOR, organizationName );\n                properties.put( \"project.organization.name\", organizationName );\n                properties.put( \"pom.organization.name\", organizationName );\n            }\n            if ( currentProject.getOrganization().getUrl() != null )\n            {\n                String organizationUrl = currentProject.getOrganization().getUrl();\n                header( properties, Analyzer.BUNDLE_DOCURL, organizationUrl );\n                properties.put( \"project.organization.url\", organizationUrl );\n                properties.put( \"pom.organization.url\", organizationUrl );\n            }\n        }\n\n        properties.putAll( currentProject.getProperties() );\n        properties.putAll( currentProject.getModel().getProperties() );\n        if ( m_mavenSession != null )\n        {\n            properties.putAll( m_mavenSession.getExecutionProperties() );\n        }\n\n        properties.putAll( getProperties( currentProject.getModel(), \"project.build.\" ) );\n        properties.putAll( getProperties( currentProject.getModel(), \"pom.\" ) );\n        properties.putAll( getProperties( currentProject.getModel(), \"project.\" ) );\n\n        properties.put( \"project.baseDir\", currentProject.getBasedir() );\n        properties.put( \"project.build.directory\", getBuildDirectory() );\n        properties.put( \"project.build.outputdirectory\", getOutputDirectory() );\n\n        properties.put( \"classifier\", classifier == null ? \"\" : classifier );\n\n        // Add default plugins\n        header( properties, Analyzer.PLUGIN,\n                    BlueprintPlugin.class.getName() + \",\"\n                        + SpringXMLType.class.getName());\n\n        return properties;\n    }","id":56717,"modified_method":"protected Properties getDefaultProperties( MavenProject currentProject )\n    {\n        Properties properties = new Properties();\n\n        String bsn;\n        try\n        {\n            bsn = getMaven2OsgiConverter().getBundleSymbolicName( currentProject.getArtifact() );\n        }\n        catch ( Exception e )\n        {\n            bsn = currentProject.getGroupId() + \".\" + currentProject.getArtifactId();\n        }\n\n        // Setup defaults\n        properties.put( MAVEN_SYMBOLICNAME, bsn );\n        properties.put( Analyzer.BUNDLE_SYMBOLICNAME, bsn );\n        properties.put( Analyzer.IMPORT_PACKAGE, \"*\" );\n        properties.put( Analyzer.BUNDLE_VERSION, getMaven2OsgiConverter().getVersion(currentProject.getVersion()) );\n\n        // remove the extraneous Include-Resource and Private-Package entries from generated manifest\n        properties.put( Constants.REMOVEHEADERS, Analyzer.INCLUDE_RESOURCE + ',' + Analyzer.PRIVATE_PACKAGE );\n\n        header( properties, Analyzer.BUNDLE_DESCRIPTION, currentProject.getDescription() );\n        StringBuffer licenseText = printLicenses( currentProject.getLicenses() );\n        if ( licenseText != null )\n        {\n            header( properties, Analyzer.BUNDLE_LICENSE, licenseText );\n        }\n        header( properties, Analyzer.BUNDLE_NAME, currentProject.getName() );\n\n        if ( currentProject.getOrganization() != null )\n        {\n            if ( currentProject.getOrganization().getName() != null )\n            {\n                String organizationName = currentProject.getOrganization().getName();\n                header( properties, Analyzer.BUNDLE_VENDOR, organizationName );\n                properties.put( \"project.organization.name\", organizationName );\n                properties.put( \"pom.organization.name\", organizationName );\n            }\n            if ( currentProject.getOrganization().getUrl() != null )\n            {\n                String organizationUrl = currentProject.getOrganization().getUrl();\n                header( properties, Analyzer.BUNDLE_DOCURL, organizationUrl );\n                properties.put( \"project.organization.url\", organizationUrl );\n                properties.put( \"pom.organization.url\", organizationUrl );\n            }\n        }\n\n        properties.putAll( currentProject.getProperties() );\n        properties.putAll( currentProject.getModel().getProperties() );\n        if ( m_mavenSession != null )\n        {\n            properties.putAll( m_mavenSession.getExecutionProperties() );\n        }\n\n        properties.putAll( getProperties( currentProject.getModel(), \"project.build.\" ) );\n        properties.putAll( getProperties( currentProject.getModel(), \"pom.\" ) );\n        properties.putAll( getProperties( currentProject.getModel(), \"project.\" ) );\n\n        properties.put( \"project.baseDir\", getBase( currentProject ) );\n        properties.put( \"project.build.directory\", getBuildDirectory() );\n        properties.put( \"project.build.outputdirectory\", getOutputDirectory() );\n\n        properties.put( \"classifier\", classifier == null ? \"\" : classifier );\n\n        // Add default plugins\n        header( properties, Analyzer.PLUGIN,\n                    BlueprintPlugin.class.getName() + \",\"\n                        + SpringXMLType.class.getName());\n\n        return properties;\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"protected void mergeMavenManifest( MavenProject currentProject, Builder builder )\n        throws Exception\n    {\n        Jar jar = builder.getJar();\n\n        dumpManifest( \"BND Manifest:\", jar.getManifest(), getLog() );\n\n        boolean addMavenDescriptor = true;\n\n        try\n        {\n            /*\n             * Grab customized manifest entries from the maven-jar-plugin configuration\n             */\n            MavenArchiveConfiguration archiveConfig = JarPluginConfiguration.getArchiveConfiguration( currentProject );\n            String mavenManifestText = new MavenArchiver().getManifest( currentProject, archiveConfig ).toString();\n            addMavenDescriptor = archiveConfig.isAddMavenDescriptor();\n\n            Manifest mavenManifest = new Manifest();\n\n            // First grab the external manifest file (if specified)\n            File externalManifestFile = archiveConfig.getManifestFile();\n            if ( null != externalManifestFile && externalManifestFile.exists() )\n            {\n                InputStream mis = new FileInputStream( externalManifestFile );\n                mavenManifest.read( mis );\n                mis.close();\n            }\n\n            // Then apply the customized entries from the jar plugin\n            mavenManifest.read( new StringInputStream( mavenManifestText ) );\n\n            if ( !archiveConfig.isManifestSectionsEmpty() )\n            {\n                /*\n                 * Add customized manifest sections (for some reason MavenArchiver doesn't do this for us)\n                 */\n                List sections = archiveConfig.getManifestSections();\n                for ( Iterator i = sections.iterator(); i.hasNext(); )\n                {\n                    ManifestSection section = ( ManifestSection ) i.next();\n                    Attributes attributes = new Attributes();\n\n                    if ( !section.isManifestEntriesEmpty() )\n                    {\n                        Map entries = section.getManifestEntries();\n                        for ( Iterator j = entries.entrySet().iterator(); j.hasNext(); )\n                        {\n                            Map.Entry entry = ( Map.Entry ) j.next();\n                            attributes.putValue( ( String ) entry.getKey(), ( String ) entry.getValue() );\n                        }\n                    }\n\n                    mavenManifest.getEntries().put( section.getName(), attributes );\n                }\n            }\n\n            Attributes mainMavenAttributes = mavenManifest.getMainAttributes();\n            mainMavenAttributes.putValue( \"Created-By\", \"Apache Maven Bundle Plugin\" );\n\n            String[] removeHeaders = builder.getProperty( Constants.REMOVEHEADERS, \"\" ).split( \",\" );\n\n            // apply -removeheaders to the custom manifest\n            for ( int i = 0; i < removeHeaders.length; i++ )\n            {\n                for ( Iterator j = mainMavenAttributes.keySet().iterator(); j.hasNext(); )\n                {\n                    if ( j.next().toString().matches( removeHeaders[i].trim() ) )\n                    {\n                        j.remove();\n                    }\n                }\n            }\n\n            /*\n             * Overlay generated bundle manifest with customized entries\n             */\n            Manifest bundleManifest = jar.getManifest();\n            bundleManifest.getMainAttributes().putAll( mainMavenAttributes );\n            bundleManifest.getEntries().putAll( mavenManifest.getEntries() );\n\n            // adjust the import package attributes so that optional dependencies use\n            // optional resolution.\n            String importPackages = bundleManifest.getMainAttributes().getValue(\"Import-Package\");\n            if( importPackages!=null ) {\n                Set optionalPackages = getOptionalPackages(currentProject);\n\n                Map<String, Map<String, String>> values = new Analyzer().parseHeader(importPackages);\n                for (Map.Entry<String, Map<String, String>> entry: values.entrySet()) {\n                    String pkg = entry.getKey();\n                    Map<String, String> options = entry.getValue();\n                    if( !options.containsKey(\"resolution:\") && optionalPackages.contains(pkg) ) {\n                        options.put(\"resolution:\", \"optional\");\n                    }\n                }\n                String result = Processor.printClauses(values, \"resolution:\");\n                bundleManifest.getMainAttributes().putValue(\"Import-Package\", result);\n            }\n\n            jar.setManifest( bundleManifest );\n        }\n        catch ( Exception e )\n        {\n            getLog().warn( \"Unable to merge Maven manifest: \" + e.getLocalizedMessage() );\n        }\n\n        if ( addMavenDescriptor )\n        {\n            doMavenMetadata( currentProject, jar );\n        }\n\n        dumpManifest( \"Final Manifest:\", builder.getJar().getManifest(), getLog() );\n\n        builder.setJar( jar );\n    }","id":56718,"modified_method":"protected void mergeMavenManifest( MavenProject currentProject, Builder builder )\n        throws Exception\n    {\n        Jar jar = builder.getJar();\n\n        dumpManifest( \"BND Manifest:\", jar.getManifest(), getLog() );\n\n        boolean addMavenDescriptor = currentProject.getBasedir() != null;\n\n        try\n        {\n            /*\n             * Grab customized manifest entries from the maven-jar-plugin configuration\n             */\n            MavenArchiveConfiguration archiveConfig = JarPluginConfiguration.getArchiveConfiguration( currentProject );\n            String mavenManifestText = new MavenArchiver().getManifest( currentProject, archiveConfig ).toString();\n            addMavenDescriptor = addMavenDescriptor && archiveConfig.isAddMavenDescriptor();\n\n            Manifest mavenManifest = new Manifest();\n\n            // First grab the external manifest file (if specified)\n            File externalManifestFile = archiveConfig.getManifestFile();\n            if ( null != externalManifestFile && externalManifestFile.exists() )\n            {\n                InputStream mis = new FileInputStream( externalManifestFile );\n                mavenManifest.read( mis );\n                mis.close();\n            }\n\n            // Then apply the customized entries from the jar plugin\n            mavenManifest.read( new StringInputStream( mavenManifestText ) );\n\n            if ( !archiveConfig.isManifestSectionsEmpty() )\n            {\n                /*\n                 * Add customized manifest sections (for some reason MavenArchiver doesn't do this for us)\n                 */\n                List sections = archiveConfig.getManifestSections();\n                for ( Iterator i = sections.iterator(); i.hasNext(); )\n                {\n                    ManifestSection section = ( ManifestSection ) i.next();\n                    Attributes attributes = new Attributes();\n\n                    if ( !section.isManifestEntriesEmpty() )\n                    {\n                        Map entries = section.getManifestEntries();\n                        for ( Iterator j = entries.entrySet().iterator(); j.hasNext(); )\n                        {\n                            Map.Entry entry = ( Map.Entry ) j.next();\n                            attributes.putValue( ( String ) entry.getKey(), ( String ) entry.getValue() );\n                        }\n                    }\n\n                    mavenManifest.getEntries().put( section.getName(), attributes );\n                }\n            }\n\n            Attributes mainMavenAttributes = mavenManifest.getMainAttributes();\n            mainMavenAttributes.putValue( \"Created-By\", \"Apache Maven Bundle Plugin\" );\n\n            String[] removeHeaders = builder.getProperty( Constants.REMOVEHEADERS, \"\" ).split( \",\" );\n\n            // apply -removeheaders to the custom manifest\n            for ( int i = 0; i < removeHeaders.length; i++ )\n            {\n                for ( Iterator j = mainMavenAttributes.keySet().iterator(); j.hasNext(); )\n                {\n                    if ( j.next().toString().matches( removeHeaders[i].trim() ) )\n                    {\n                        j.remove();\n                    }\n                }\n            }\n\n            /*\n             * Overlay generated bundle manifest with customized entries\n             */\n            Manifest bundleManifest = jar.getManifest();\n            bundleManifest.getMainAttributes().putAll( mainMavenAttributes );\n            bundleManifest.getEntries().putAll( mavenManifest.getEntries() );\n\n            // adjust the import package attributes so that optional dependencies use\n            // optional resolution.\n            String importPackages = bundleManifest.getMainAttributes().getValue(\"Import-Package\");\n            if( importPackages!=null ) {\n                Set optionalPackages = getOptionalPackages(currentProject);\n\n                Map<String, Map<String, String>> values = new Analyzer().parseHeader(importPackages);\n                for (Map.Entry<String, Map<String, String>> entry: values.entrySet()) {\n                    String pkg = entry.getKey();\n                    Map<String, String> options = entry.getValue();\n                    if( !options.containsKey(\"resolution:\") && optionalPackages.contains(pkg) ) {\n                        options.put(\"resolution:\", \"optional\");\n                    }\n                }\n                String result = Processor.printClauses(values, \"resolution:\");\n                bundleManifest.getMainAttributes().putValue(\"Import-Package\", result);\n            }\n\n            jar.setManifest( bundleManifest );\n        }\n        catch ( Exception e )\n        {\n            getLog().warn( \"Unable to merge Maven manifest: \" + e.getLocalizedMessage() );\n        }\n\n        if ( addMavenDescriptor )\n        {\n            doMavenMetadata( currentProject, jar );\n        }\n\n        dumpManifest( \"Final Manifest:\", builder.getJar().getManifest(), getLog() );\n\n        builder.setJar( jar );\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"protected void addMavenInstructions( MavenProject currentProject, Builder builder ) throws Exception\n    {\n        // update BND instructions to add included Maven resources\n        includeMavenResources( currentProject, builder, getLog() );\n\n        // calculate default export/private settings based on sources\n        addLocalPackages( outputDirectory, builder );\n\n        // update BND instructions to embed selected Maven dependencies\n        Collection embeddableArtifacts = getEmbeddableArtifacts( currentProject, builder );\n        new DependencyEmbedder( getLog(), embeddableArtifacts ).processHeaders( builder );\n\n        dumpInstructions( \"BND Instructions:\", builder.getProperties(), getLog() );\n        dumpClasspath( \"BND Classpath:\", builder.getClasspath(), getLog() );\n    }","id":56719,"modified_method":"protected void addMavenInstructions( MavenProject currentProject, Builder builder ) throws Exception\n    {\n        if ( currentProject.getBasedir() != null )\n        {\n            // update BND instructions to add included Maven resources\n            includeMavenResources( currentProject, builder, getLog() );\n\n            // calculate default export/private settings based on sources\n            addLocalPackages( outputDirectory, builder );\n        }\n\n        // update BND instructions to embed selected Maven dependencies\n        Collection embeddableArtifacts = getEmbeddableArtifacts( currentProject, builder );\n        new DependencyEmbedder( getLog(), embeddableArtifacts ).processHeaders( builder );\n\n        dumpInstructions( \"BND Instructions:\", builder.getProperties(), getLog() );\n        dumpClasspath( \"BND Classpath:\", builder.getClasspath(), getLog() );\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"protected boolean reportErrors( String prefix, Builder builder )\n    {\n        List errors = builder.getErrors();\n        List warnings = builder.getWarnings();\n\n        for ( Iterator w = warnings.iterator(); w.hasNext(); )\n        {\n            String msg = ( String ) w.next();\n            getLog().warn( prefix + \" : \" + msg );\n        }\n\n        boolean hasErrors = false;\n        String fileNotFound = \"Input file does not exist: \";\n        for ( Iterator e = errors.iterator(); e.hasNext(); )\n        {\n            String msg = ( String ) e.next();\n            if ( msg.startsWith( fileNotFound ) && msg.endsWith( \"~\" ) )\n            {\n                // treat as warning; this error happens when you have duplicate entries in Include-Resource\n                String duplicate = Processor.removeDuplicateMarker( msg.substring( fileNotFound.length() ) );\n                getLog().warn( prefix + \" : Duplicate path '\" + duplicate  + \"' in Include-Resource\" );\n            }\n            else\n            {\n                getLog().error( prefix + \" : \" + msg );\n                hasErrors = true;\n            }\n        }\n        return hasErrors;\n    }","id":56720,"modified_method":"protected boolean reportErrors( String prefix, Analyzer analyzer )\n    {\n        List errors = analyzer.getErrors();\n        List warnings = analyzer.getWarnings();\n\n        for ( Iterator w = warnings.iterator(); w.hasNext(); )\n        {\n            String msg = ( String ) w.next();\n            getLog().warn( prefix + \" : \" + msg );\n        }\n\n        boolean hasErrors = false;\n        String fileNotFound = \"Input file does not exist: \";\n        for ( Iterator e = errors.iterator(); e.hasNext(); )\n        {\n            String msg = ( String ) e.next();\n            if ( msg.startsWith( fileNotFound ) && msg.endsWith( \"~\" ) )\n            {\n                // treat as warning; this error happens when you have duplicate entries in Include-Resource\n                String duplicate = Processor.removeDuplicateMarker( msg.substring( fileNotFound.length() ) );\n                getLog().warn( prefix + \" : Duplicate path '\" + duplicate  + \"' in Include-Resource\" );\n            }\n            else\n            {\n                getLog().error( prefix + \" : \" + msg );\n                hasErrors = true;\n            }\n        }\n        return hasErrors;\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"protected static String getMavenResourcePaths( MavenProject project )\n    {\n        final String basePath = project.getBasedir().getAbsolutePath();\n\n        Set pathSet = new LinkedHashSet();\n        for ( Iterator i = getMavenResources( project ).iterator(); i.hasNext(); )\n        {\n            Resource resource = ( Resource ) i.next();\n\n            final String sourcePath = resource.getDirectory();\n            final String targetPath = resource.getTargetPath();\n\n            // ignore empty or non-local resources\n            if ( new File( sourcePath ).exists() && ( ( targetPath == null ) || ( targetPath.indexOf( \"..\" ) < 0 ) ) )\n            {\n                DirectoryScanner scanner = new DirectoryScanner();\n\n                scanner.setBasedir( sourcePath );\n                if ( resource.getIncludes() != null && !resource.getIncludes().isEmpty() )\n                {\n                    scanner.setIncludes( ( String[] ) resource.getIncludes().toArray( EMPTY_STRING_ARRAY ) );\n                }\n                else\n                {\n                    scanner.setIncludes( DEFAULT_INCLUDES );\n                }\n\n                if ( resource.getExcludes() != null && !resource.getExcludes().isEmpty() )\n                {\n                    scanner.setExcludes( ( String[] ) resource.getExcludes().toArray( EMPTY_STRING_ARRAY ) );\n                }\n\n                scanner.addDefaultExcludes();\n                scanner.scan();\n\n                List includedFiles = Arrays.asList( scanner.getIncludedFiles() );\n\n                for ( Iterator j = includedFiles.iterator(); j.hasNext(); )\n                {\n                    String name = ( String ) j.next();\n                    String path = sourcePath + '/' + name;\n\n                    // make relative to project\n                    if ( path.startsWith( basePath ) )\n                    {\n                        if ( path.length() == basePath.length() )\n                        {\n                            path = \".\";\n                        }\n                        else\n                        {\n                            path = path.substring( basePath.length() + 1 );\n                        }\n                    }\n\n                    // replace windows backslash with a slash\n                    // this is a workaround for a problem with bnd 0.0.189\n                    if ( File.separatorChar != '/' )\n                    {\n                        name = name.replace( File.separatorChar, '/' );\n                        path = path.replace( File.separatorChar, '/' );\n                    }\n\n                    // copy to correct place\n                    path = name + '=' + path;\n                    if ( targetPath != null )\n                    {\n                        path = targetPath + '/' + path;\n                    }\n\n                    // use Bnd filtering?\n                    if ( resource.isFiltering() )\n                    {\n                        path = '{' + path + '}';\n                    }\n\n                    pathSet.add( path );\n                }\n            }\n        }\n\n        StringBuffer resourcePaths = new StringBuffer();\n        for ( Iterator i = pathSet.iterator() ; i.hasNext(); )\n        {\n            resourcePaths.append( i.next() );\n            if ( i.hasNext() )\n            {\n                resourcePaths.append( ',' );\n            }\n        }\n\n        return resourcePaths.toString();\n    }","id":56721,"modified_method":"protected static String getMavenResourcePaths( MavenProject currentProject )\n    {\n        final String basePath = currentProject.getBasedir().getAbsolutePath();\n\n        Set pathSet = new LinkedHashSet();\n        for ( Iterator i = getMavenResources( currentProject ).iterator(); i.hasNext(); )\n        {\n            Resource resource = ( Resource ) i.next();\n\n            final String sourcePath = resource.getDirectory();\n            final String targetPath = resource.getTargetPath();\n\n            // ignore empty or non-local resources\n            if ( new File( sourcePath ).exists() && ( ( targetPath == null ) || ( targetPath.indexOf( \"..\" ) < 0 ) ) )\n            {\n                DirectoryScanner scanner = new DirectoryScanner();\n\n                scanner.setBasedir( sourcePath );\n                if ( resource.getIncludes() != null && !resource.getIncludes().isEmpty() )\n                {\n                    scanner.setIncludes( ( String[] ) resource.getIncludes().toArray( EMPTY_STRING_ARRAY ) );\n                }\n                else\n                {\n                    scanner.setIncludes( DEFAULT_INCLUDES );\n                }\n\n                if ( resource.getExcludes() != null && !resource.getExcludes().isEmpty() )\n                {\n                    scanner.setExcludes( ( String[] ) resource.getExcludes().toArray( EMPTY_STRING_ARRAY ) );\n                }\n\n                scanner.addDefaultExcludes();\n                scanner.scan();\n\n                List includedFiles = Arrays.asList( scanner.getIncludedFiles() );\n\n                for ( Iterator j = includedFiles.iterator(); j.hasNext(); )\n                {\n                    String name = ( String ) j.next();\n                    String path = sourcePath + '/' + name;\n\n                    // make relative to project\n                    if ( path.startsWith( basePath ) )\n                    {\n                        if ( path.length() == basePath.length() )\n                        {\n                            path = \".\";\n                        }\n                        else\n                        {\n                            path = path.substring( basePath.length() + 1 );\n                        }\n                    }\n\n                    // replace windows backslash with a slash\n                    // this is a workaround for a problem with bnd 0.0.189\n                    if ( File.separatorChar != '/' )\n                    {\n                        name = name.replace( File.separatorChar, '/' );\n                        path = path.replace( File.separatorChar, '/' );\n                    }\n\n                    // copy to correct place\n                    path = name + '=' + path;\n                    if ( targetPath != null )\n                    {\n                        path = targetPath + '/' + path;\n                    }\n\n                    // use Bnd filtering?\n                    if ( resource.isFiltering() )\n                    {\n                        path = '{' + path + '}';\n                    }\n\n                    pathSet.add( path );\n                }\n            }\n        }\n\n        StringBuffer resourcePaths = new StringBuffer();\n        for ( Iterator i = pathSet.iterator() ; i.hasNext(); )\n        {\n            resourcePaths.append( i.next() );\n            if ( i.hasNext() )\n            {\n                resourcePaths.append( ',' );\n            }\n        }\n\n        return resourcePaths.toString();\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"protected Builder getOSGiBuilder( MavenProject currentProject, Map originalInstructions, Properties properties,\n        Jar[] classpath ) throws Exception\n    {\n        properties.putAll( getDefaultProperties( currentProject ) );\n        properties.putAll( transformDirectives( originalInstructions ) );\n\n        Builder builder = new Builder();\n        if ( currentProject.getBasedir() != null )\n        {\n            builder.setBase( currentProject.getBasedir() );\n        }\n        builder.setProperties( properties );\n        if ( classpath != null )\n        {\n            builder.setClasspath( classpath );\n        }\n\n        return builder;\n    }","id":56722,"modified_method":"protected Builder getOSGiBuilder( MavenProject currentProject, Map originalInstructions, Properties properties,\n        Jar[] classpath ) throws Exception\n    {\n        properties.putAll( getDefaultProperties( currentProject ) );\n        properties.putAll( transformDirectives( originalInstructions ) );\n\n        Builder builder = new Builder();\n        builder.setBase( getBase( currentProject ) );\n        builder.setProperties( properties );\n        if ( classpath != null )\n        {\n            builder.setClasspath( classpath );\n        }\n\n        return builder;\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"private static List getMavenResources( MavenProject project )\n    {\n        List resources = new ArrayList(project.getResources());\n\n        if ( project.getCompileSourceRoots() != null )\n        {\n            // also scan for any \"packageinfo\" files lurking in the source folders\n            List packageInfoIncludes = Collections.singletonList( \"**/packageinfo\" );\n            for ( Iterator i = project.getCompileSourceRoots().iterator(); i.hasNext(); )\n            {\n                String sourceRoot = (String) i.next();\n                Resource packageInfoResource = new Resource();\n                packageInfoResource.setDirectory( sourceRoot );\n                packageInfoResource.setIncludes( packageInfoIncludes );\n                resources.add( packageInfoResource );\n            }\n        }\n\n        return resources;\n    }","id":56723,"modified_method":"private static List getMavenResources( MavenProject currentProject )\n    {\n        List resources = new ArrayList(currentProject.getResources());\n\n        if ( currentProject.getCompileSourceRoots() != null )\n        {\n            // also scan for any \"packageinfo\" files lurking in the source folders\n            List packageInfoIncludes = Collections.singletonList( \"**/packageinfo\" );\n            for ( Iterator i = currentProject.getCompileSourceRoots().iterator(); i.hasNext(); )\n            {\n                String sourceRoot = (String) i.next();\n                Resource packageInfoResource = new Resource();\n                packageInfoResource.setDirectory( sourceRoot );\n                packageInfoResource.setIncludes( packageInfoIncludes );\n                resources.add( packageInfoResource );\n            }\n        }\n\n        return resources;\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"protected Collection getEmbeddableArtifacts( MavenProject project, Analyzer analyzer )\n        throws MojoExecutionException\n    {\n        final Collection artifacts;\n\n        String embedTransitive = analyzer.getProperty( DependencyEmbedder.EMBED_TRANSITIVE );\n        if ( Boolean.valueOf( embedTransitive ).booleanValue() )\n        {\n            // includes transitive dependencies\n            artifacts = project.getArtifacts();\n        }\n        else\n        {\n            // only includes direct dependencies\n            artifacts = project.getDependencyArtifacts();\n        }\n\n        return getSelectedDependencies( artifacts );\n    }","id":56724,"modified_method":"protected Collection getEmbeddableArtifacts( MavenProject currentProject, Analyzer analyzer )\n        throws MojoExecutionException\n    {\n        final Collection artifacts;\n\n        String embedTransitive = analyzer.getProperty( DependencyEmbedder.EMBED_TRANSITIVE );\n        if ( Boolean.valueOf( embedTransitive ).booleanValue() )\n        {\n            // includes transitive dependencies\n            artifacts = currentProject.getArtifacts();\n        }\n        else\n        {\n            // only includes direct dependencies\n            artifacts = currentProject.getDependencyArtifacts();\n        }\n\n        return getSelectedDependencies( artifacts );\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"public Manifest getManifest( MavenProject project, Map instructions, Properties properties, Jar[] classpath )\n        throws IOException, MojoFailureException, MojoExecutionException, Exception\n    {\n        Analyzer analyzer = getAnalyzer( project, instructions, properties, classpath );\n\n        List errors = analyzer.getErrors();\n        List warnings = analyzer.getWarnings();\n\n        for ( Iterator w = warnings.iterator(); w.hasNext(); )\n        {\n            String msg = ( String ) w.next();\n            getLog().warn( \"Warning in manifest for \" + project.getArtifact() + \" : \" + msg );\n        }\n        for ( Iterator e = errors.iterator(); e.hasNext(); )\n        {\n            String msg = ( String ) e.next();\n            getLog().error( \"Error in manifest for \" + project.getArtifact() + \" : \" + msg );\n        }\n\n        if ( errors.size() > 0 )\n        {\n            String failok = analyzer.getProperty( \"-failok\" );\n            if ( null == failok || \"false\".equalsIgnoreCase( failok ) )\n            {\n                throw new MojoFailureException( \"Error(s) found in manifest configuration\" );\n            }\n        }\n\n        Manifest manifest = analyzer.getJar().getManifest();\n\n        // cleanup...\n        analyzer.close();\n\n        return manifest;\n    }","id":56725,"modified_method":"public Manifest getManifest( MavenProject project, Map instructions, Properties properties, Jar[] classpath )\n        throws IOException, MojoFailureException, MojoExecutionException, Exception\n    {\n        Analyzer analyzer = getAnalyzer( project, instructions, properties, classpath );\n        boolean hasErrors = reportErrors( \"Manifest \" + project.getArtifact(), analyzer );\n        if ( hasErrors )\n        {\n            String failok = analyzer.getProperty( \"-failok\" );\n            if ( null == failok || \"false\".equalsIgnoreCase( failok ) )\n            {\n                throw new MojoFailureException( \"Error(s) found in manifest configuration\" );\n            }\n        }\n\n        Manifest manifest = analyzer.getJar().getManifest();\n\n        // cleanup...\n        analyzer.close();\n\n        return manifest;\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"public Manifest getManifest( MavenProject project, Jar[] classpath ) throws IOException, MojoFailureException,\n        MojoExecutionException, Exception\n    {\n        return getManifest( project, new Properties(), new Properties(), classpath );\n    }","id":56726,"modified_method":"public Manifest getManifest( MavenProject project, Jar[] classpath ) throws IOException, MojoFailureException,\n        MojoExecutionException, Exception\n    {\n        return getManifest( project, new LinkedHashMap(), new Properties(), classpath );\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"protected Analyzer getAnalyzer( MavenProject project, Map instructions, Properties properties, Jar[] classpath )\n        throws IOException, MojoExecutionException, Exception\n    {\n        File file = project.getArtifact().getFile();\n        if ( file == null )\n        {\n            file = getOutputDirectory();\n        }\n\n        if ( !file.exists() )\n        {\n            throw new FileNotFoundException( file.getPath() );\n        }\n\n        properties.putAll( getDefaultProperties( project ) );\n        properties.putAll( transformDirectives( instructions ) );\n\n//        PackageVersionAnalyzer analyzer = new PackageVersionAnalyzer();\n        Builder analyzer = new Builder();\n\n        if ( project.getBasedir() != null )\n            analyzer.setBase( project.getBasedir() );\n\n        analyzer.setProperties( properties );\n\n        if ( classpath != null )\n            analyzer.setClasspath( classpath );\n\n        analyzer.setJar( file );\n\n        if ( analyzer.getProperty( Analyzer.EXPORT_PACKAGE ) == null &&\n             analyzer.getProperty( Analyzer.EXPORT_CONTENTS ) == null &&\n             analyzer.getProperty( Analyzer.PRIVATE_PACKAGE ) == null )\n        {\n            String export = analyzer.calculateExportsFromContents( analyzer.getJar() );\n            analyzer.setProperty( Analyzer.EXPORT_PACKAGE, export );\n        }\n\n        // Apply Embed-Dependency headers, even though the contents won't be changed\n        Collection embeddableArtifacts = getEmbeddableArtifacts( project, analyzer );\n        new DependencyEmbedder( getLog(), embeddableArtifacts ).processHeaders( analyzer );\n\n        dumpInstructions( \"BND Instructions:\", analyzer.getProperties(), getLog() );\n        dumpClasspath( \"BND Classpath:\", analyzer.getClasspath(), getLog() );\n\n        analyzer.mergeManifest( analyzer.getJar().getManifest() );\n        analyzer.calcManifest();\n\n        dumpManifest( \"BND Manifest:\", analyzer.getJar().getManifest(), getLog() );\n\n        return analyzer;\n    }","id":56727,"modified_method":"protected Analyzer getAnalyzer( MavenProject project, Map instructions, Properties properties, Jar[] classpath )\n        throws IOException, MojoExecutionException, Exception\n    {\n        File file = project.getArtifact().getFile();\n        if ( file == null )\n        {\n            file = getOutputDirectory();\n        }\n\n        if ( !file.exists() )\n        {\n            throw new FileNotFoundException( file.getPath() );\n        }\n\n        Builder analyzer = getOSGiBuilder( project, instructions, properties, classpath );\n\n        analyzer.setJar( file );\n\n        if ( analyzer.getProperty( Analyzer.EXPORT_PACKAGE ) == null &&\n             analyzer.getProperty( Analyzer.EXPORT_CONTENTS ) == null &&\n             analyzer.getProperty( Analyzer.PRIVATE_PACKAGE ) == null )\n        {\n            String export = analyzer.calculateExportsFromContents( analyzer.getJar() );\n            analyzer.setProperty( Analyzer.EXPORT_PACKAGE, export );\n        }\n\n        addMavenInstructions( project, analyzer );\n\n        analyzer.mergeManifest( analyzer.getJar().getManifest() );\n        analyzer.calcManifest();\n\n        mergeMavenManifest( project, analyzer );\n\n        return analyzer;\n    }","commit_id":"5fcbe4ac53698f061c078ccf4f27e428cf71a147","url":"https://github.com/apache/felix"},{"original_method":"public AetherExtensionDependency(Dependency aetherDependency)\n    {\n        super(aetherDependency.getArtifact().getGroupId() + ':' + aetherDependency.getArtifact().getArtifactId(),\n            aetherDependency.getArtifact().getVersion());\n    }","id":56728,"modified_method":"public AetherExtensionDependency(Dependency aetherDependency)\n    {\n        super(AetherUtils.createExtensionId(aetherDependency.getArtifact()).getId(), aetherDependency.getArtifact()\n            .getVersion());\n    }","commit_id":"fc9e0863d1cb0b7ae4e9e3f2739a345fd8fa84e1","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public VersionResult resolveVersion( RepositorySystemSession session, VersionRequest request )\n        throws VersionResolutionException\n    {\n        Artifact artifact = request.getArtifact();\n\n        String version = artifact.getVersion();\n\n        VersionResult result = new VersionResult( request );\n\n        Key cacheKey = null;\n        RepositoryCache cache = session.getCache();\n        if ( cache != null )\n        {\n            cacheKey = new Key( session, request );\n\n            Object obj = cache.get( session, cacheKey );\n            if ( obj instanceof Record )\n            {\n                Record record = (Record) obj;\n                result.setVersion( record.version );\n                result.setRepository( CacheUtils.getRepository( session, request.getRepositories(), record.repoClass,\n                                                                record.repoId ) );\n                return result;\n            }\n        }\n\n        Metadata metadata;\n\n        if ( RELEASE.equals( version ) )\n        {\n            metadata =\n                new DefaultMetadata( artifact.getGroupId(), artifact.getArtifactId(), MAVEN_METADATA_XML,\n                                     Metadata.Nature.RELEASE );\n        }\n        else if ( LATEST.equals( version ) )\n        {\n            metadata =\n                new DefaultMetadata( artifact.getGroupId(), artifact.getArtifactId(), MAVEN_METADATA_XML,\n                                     Metadata.Nature.RELEASE_OR_SNAPSHOT );\n        }\n        else if ( version.endsWith( SNAPSHOT ) )\n        {\n            WorkspaceReader workspace = session.getWorkspaceReader();\n            if ( workspace != null && workspace.findVersions( artifact ).contains( version ) )\n            {\n                metadata = null;\n                result.setRepository( workspace.getRepository() );\n            }\n            else\n            {\n                metadata =\n                    new DefaultMetadata( artifact.getGroupId(), artifact.getArtifactId(), version, MAVEN_METADATA_XML,\n                                         Metadata.Nature.SNAPSHOT );\n            }\n        }\n        else\n        {\n            metadata = null;\n        }\n\n        if ( metadata == null )\n        {\n            result.setVersion( version );\n        }\n        else\n        {\n            List<MetadataRequest> metadataRequests = new ArrayList<MetadataRequest>( request.getRepositories().size() );\n            for ( RemoteRepository repository : request.getRepositories() )\n            {\n                MetadataRequest metadataRequest =\n                    new MetadataRequest( metadata, repository, request.getRequestContext() );\n                metadataRequest.setDeleteLocalCopyIfMissing( true );\n                metadataRequest.setFavorLocalRepository( true );\n                metadataRequests.add( metadataRequest );\n            }\n            List<MetadataResult> metadataResults = metadataResolver.resolveMetadata( session, metadataRequests );\n\n            LocalRepositoryManager lrm = session.getLocalRepositoryManager();\n            File localMetadataFile =\n                new File( lrm.getRepository().getBasedir(), lrm.getPathForLocalMetadata( metadata ) );\n            if ( localMetadataFile.isFile() )\n            {\n                metadata = metadata.setFile( localMetadataFile );\n            }\n\n            Map<String, VersionInfo> infos = new HashMap<String, VersionInfo>();\n            merge( artifact, infos, readVersions( session, metadata, result ),\n                   session.getLocalRepositoryManager().getRepository() );\n\n            for ( MetadataResult metadataResult : metadataResults )\n            {\n                result.addException( metadataResult.getException() );\n                merge( artifact, infos, readVersions( session, metadataResult.getMetadata(), result ),\n                       metadataResult.getRequest().getRepository() );\n            }\n\n            if ( RELEASE.equals( version ) )\n            {\n                resolve( result, infos, RELEASE );\n            }\n            else if ( LATEST.equals( version ) )\n            {\n                if ( !resolve( result, infos, LATEST ) )\n                {\n                    resolve( result, infos, RELEASE );\n                }\n\n                if ( result.getVersion() != null && result.getVersion().endsWith( SNAPSHOT ) )\n                {\n                    VersionRequest subRequest = new VersionRequest();\n                    subRequest.setArtifact( artifact.setVersion( result.getVersion() ) );\n                    if ( result.getRepository() instanceof RemoteRepository )\n                    {\n                        subRequest.setRepositories( Collections.singletonList( (RemoteRepository) result.getRepository() ) );\n                    }\n                    else\n                    {\n                        subRequest.setRepositories( request.getRepositories() );\n                    }\n                    VersionResult subResult = resolveVersion( session, subRequest );\n                    result.setVersion( subResult.getVersion() );\n                    result.setRepository( subResult.getRepository() );\n                    for ( Exception exception : subResult.getExceptions() )\n                    {\n                        result.addException( exception );\n                    }\n                }\n            }\n            else\n            {\n                if ( !resolve( result, infos, SNAPSHOT + artifact.getClassifier() )\n                    && !resolve( result, infos, SNAPSHOT ) )\n                {\n                    result.setVersion( version );\n                }\n            }\n\n            if ( StringUtils.isEmpty( result.getVersion() ) )\n            {\n                throw new VersionResolutionException( result );\n            }\n        }\n\n        if ( cacheKey != null && metadata != null )\n        {\n            cache.put( session, cacheKey, new Record( result.getVersion(), result.getRepository() ) );\n        }\n\n        return result;\n    }","id":56729,"modified_method":"public VersionResult resolveVersion( RepositorySystemSession session, VersionRequest request )\n        throws VersionResolutionException\n    {\n        Artifact artifact = request.getArtifact();\n\n        String version = artifact.getVersion();\n\n        VersionResult result = new VersionResult( request );\n\n        Key cacheKey = null;\n        RepositoryCache cache = session.getCache();\n        if ( cache != null )\n        {\n            cacheKey = new Key( session, request );\n\n            Object obj = cache.get( session, cacheKey );\n            if ( obj instanceof Record )\n            {\n                Record record = (Record) obj;\n                result.setVersion( record.version );\n                result.setRepository( CacheUtils.getRepository( session, request.getRepositories(), record.repoClass,\n                                                                record.repoId ) );\n                return result;\n            }\n        }\n\n        Metadata metadata;\n\n        if ( RELEASE.equals( version ) )\n        {\n            metadata =\n                new DefaultMetadata( artifact.getGroupId(), artifact.getArtifactId(), MAVEN_METADATA_XML,\n                                     Metadata.Nature.RELEASE );\n        }\n        else if ( LATEST.equals( version ) )\n        {\n            metadata =\n                new DefaultMetadata( artifact.getGroupId(), artifact.getArtifactId(), MAVEN_METADATA_XML,\n                                     Metadata.Nature.RELEASE_OR_SNAPSHOT );\n        }\n        else if ( version.endsWith( SNAPSHOT ) )\n        {\n            WorkspaceReader workspace = session.getWorkspaceReader();\n            if ( workspace != null && workspace.findVersions( artifact ).contains( version ) )\n            {\n                metadata = null;\n                result.setRepository( workspace.getRepository() );\n            }\n            else\n            {\n                metadata =\n                    new DefaultMetadata( artifact.getGroupId(), artifact.getArtifactId(), version, MAVEN_METADATA_XML,\n                                         Metadata.Nature.SNAPSHOT );\n            }\n        }\n        else\n        {\n            metadata = null;\n        }\n\n        if ( metadata == null )\n        {\n            result.setVersion( version );\n        }\n        else\n        {\n            List<MetadataRequest> metadataRequests = new ArrayList<MetadataRequest>( request.getRepositories().size() );\n            for ( RemoteRepository repository : request.getRepositories() )\n            {\n                MetadataRequest metadataRequest =\n                    new MetadataRequest( metadata, repository, request.getRequestContext() );\n                metadataRequest.setDeleteLocalCopyIfMissing( true );\n                metadataRequest.setFavorLocalRepository( true );\n                metadataRequests.add( metadataRequest );\n            }\n            List<MetadataResult> metadataResults = metadataResolver.resolveMetadata( session, metadataRequests );\n\n            LocalRepositoryManager lrm = session.getLocalRepositoryManager();\n            File localMetadataFile =\n                new File( lrm.getRepository().getBasedir(), lrm.getPathForLocalMetadata( metadata ) );\n            if ( localMetadataFile.isFile() )\n            {\n                metadata = metadata.setFile( localMetadataFile );\n            }\n\n            Map<String, VersionInfo> infos = new HashMap<String, VersionInfo>();\n            merge( artifact, infos, readVersions( session, metadata, result ),\n                   session.getLocalRepositoryManager().getRepository() );\n\n            for ( MetadataResult metadataResult : metadataResults )\n            {\n                result.addException( metadataResult.getException() );\n                merge( artifact, infos, readVersions( session, metadataResult.getMetadata(), result ),\n                       metadataResult.getRequest().getRepository() );\n            }\n\n            if ( RELEASE.equals( version ) )\n            {\n                resolve( result, infos, RELEASE );\n            }\n            else if ( LATEST.equals( version ) )\n            {\n                if ( !resolve( result, infos, LATEST ) )\n                {\n                    resolve( result, infos, RELEASE );\n                }\n\n                if ( result.getVersion() != null && result.getVersion().endsWith( SNAPSHOT ) )\n                {\n                    VersionRequest subRequest = new VersionRequest();\n                    subRequest.setArtifact( artifact.setVersion( result.getVersion() ) );\n                    if ( result.getRepository() instanceof RemoteRepository )\n                    {\n                        subRequest.setRepositories( Collections.singletonList( (RemoteRepository) result.getRepository() ) );\n                    }\n                    else\n                    {\n                        subRequest.setRepositories( request.getRepositories() );\n                    }\n                    VersionResult subResult = resolveVersion( session, subRequest );\n                    result.setVersion( subResult.getVersion() );\n                    result.setRepository( subResult.getRepository() );\n                    for ( Exception exception : subResult.getExceptions() )\n                    {\n                        result.addException( exception );\n                    }\n                }\n            }\n            else\n            {\n                if ( !resolve( result, infos, SNAPSHOT + getKey( artifact.getClassifier(), artifact.getExtension() ) )\n                    && !resolve( result, infos, SNAPSHOT ) )\n                {\n                    result.setVersion( version );\n                }\n            }\n\n            if ( StringUtils.isEmpty( result.getVersion() ) )\n            {\n                throw new VersionResolutionException( result );\n            }\n        }\n\n        if ( cacheKey != null && metadata != null )\n        {\n            cache.put( session, cacheKey, new Record( result.getVersion(), result.getRepository() ) );\n        }\n\n        return result;\n    }","commit_id":"01ae5291a8fe1fc05e1a079a6e3b7790d2d45297","url":"https://github.com/apache/maven"},{"original_method":"public Key( RepositorySystemSession session, VersionRequest request )\n        {\n            groupId = request.getArtifact().getGroupId();\n            artifactId = request.getArtifact().getArtifactId();\n            version = request.getArtifact().getVersion();\n            context = request.getRequestContext();\n            localRepo = session.getLocalRepository().getBasedir();\n            workspace = CacheUtils.getWorkspace( session );\n            repositories = new ArrayList<RemoteRepository>( request.getRepositories().size() );\n            for ( RemoteRepository repository : request.getRepositories() )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    repositories.add( repository );\n                }\n            }\n\n            int hash = 17;\n            hash = hash * 31 + groupId.hashCode();\n            hash = hash * 31 + artifactId.hashCode();\n            hash = hash * 31 + version.hashCode();\n            hash = hash * 31 + localRepo.hashCode();\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hashCode = hash;\n        }","id":56730,"modified_method":"public Key( RepositorySystemSession session, VersionRequest request )\n        {\n            Artifact artifact = request.getArtifact();\n            groupId = artifact.getGroupId();\n            artifactId = artifact.getArtifactId();\n            classifier = artifact.getClassifier();\n            extension = artifact.getExtension();\n            version = artifact.getVersion();\n            context = request.getRequestContext();\n            localRepo = session.getLocalRepository().getBasedir();\n            workspace = CacheUtils.getWorkspace( session );\n            repositories = new ArrayList<RemoteRepository>( request.getRepositories().size() );\n            for ( RemoteRepository repository : request.getRepositories() )\n            {\n                if ( repository.isRepositoryManager() )\n                {\n                    repositories.addAll( repository.getMirroredRepositories() );\n                }\n                else\n                {\n                    repositories.add( repository );\n                }\n            }\n\n            int hash = 17;\n            hash = hash * 31 + groupId.hashCode();\n            hash = hash * 31 + artifactId.hashCode();\n            hash = hash * 31 + classifier.hashCode();\n            hash = hash * 31 + extension.hashCode();\n            hash = hash * 31 + version.hashCode();\n            hash = hash * 31 + localRepo.hashCode();\n            hash = hash * 31 + CacheUtils.repositoriesHashCode( repositories );\n            hashCode = hash;\n        }","commit_id":"01ae5291a8fe1fc05e1a079a6e3b7790d2d45297","url":"https://github.com/apache/maven"},{"original_method":"private void merge( Artifact artifact, Map<String, VersionInfo> infos, Versioning versioning,\n                        ArtifactRepository repository )\n    {\n        if ( StringUtils.isNotEmpty( versioning.getRelease() ) )\n        {\n            merge( RELEASE, infos, versioning.getLastUpdated(), versioning.getRelease(), repository );\n        }\n\n        if ( StringUtils.isNotEmpty( versioning.getLatest() ) )\n        {\n            merge( LATEST, infos, versioning.getLastUpdated(), versioning.getLatest(), repository );\n        }\n\n        boolean mainSnapshot = false;\n        for ( SnapshotVersion sv : versioning.getSnapshotVersions() )\n        {\n            if ( StringUtils.isNotEmpty( sv.getVersion() ) )\n            {\n                mainSnapshot |= sv.getClassifier().length() <= 0;\n                merge( SNAPSHOT + sv.getClassifier(), infos, sv.getUpdated(), sv.getVersion(), repository );\n            }\n        }\n\n        Snapshot snapshot = versioning.getSnapshot();\n        if ( !mainSnapshot && snapshot != null )\n        {\n            String version = artifact.getVersion();\n            if ( snapshot.getTimestamp() != null && snapshot.getBuildNumber() > 0 )\n            {\n                String qualifier = snapshot.getTimestamp() + '-' + snapshot.getBuildNumber();\n                version = version.substring( 0, version.length() - SNAPSHOT.length() ) + qualifier;\n            }\n            merge( SNAPSHOT, infos, versioning.getLastUpdated(), version, repository );\n        }\n    }","id":56731,"modified_method":"private void merge( Artifact artifact, Map<String, VersionInfo> infos, Versioning versioning,\n                        ArtifactRepository repository )\n    {\n        if ( StringUtils.isNotEmpty( versioning.getRelease() ) )\n        {\n            merge( RELEASE, infos, versioning.getLastUpdated(), versioning.getRelease(), repository );\n        }\n\n        if ( StringUtils.isNotEmpty( versioning.getLatest() ) )\n        {\n            merge( LATEST, infos, versioning.getLastUpdated(), versioning.getLatest(), repository );\n        }\n\n        for ( SnapshotVersion sv : versioning.getSnapshotVersions() )\n        {\n            if ( StringUtils.isNotEmpty( sv.getVersion() ) )\n            {\n                String key = getKey( sv.getClassifier(), sv.getExtension() );\n                merge( SNAPSHOT + key, infos, sv.getUpdated(), sv.getVersion(), repository );\n            }\n        }\n\n        Snapshot snapshot = versioning.getSnapshot();\n        if ( snapshot != null )\n        {\n            String version = artifact.getVersion();\n            if ( snapshot.getTimestamp() != null && snapshot.getBuildNumber() > 0 )\n            {\n                String qualifier = snapshot.getTimestamp() + '-' + snapshot.getBuildNumber();\n                version = version.substring( 0, version.length() - SNAPSHOT.length() ) + qualifier;\n            }\n            merge( SNAPSHOT, infos, versioning.getLastUpdated(), version, repository );\n        }\n    }","commit_id":"01ae5291a8fe1fc05e1a079a6e3b7790d2d45297","url":"https://github.com/apache/maven"},{"original_method":"@Override\n        public boolean equals( Object obj )\n        {\n            if ( obj == this )\n            {\n                return true;\n            }\n            else if ( obj == null || !getClass().equals( obj.getClass() ) )\n            {\n                return false;\n            }\n\n            Key that = (Key) obj;\n            return artifactId.equals( that.artifactId ) && groupId.equals( that.groupId )\n                && version.equals( that.version ) && context.equals( that.context )\n                && localRepo.equals( that.localRepo ) && CacheUtils.eq( workspace, that.workspace )\n                && CacheUtils.repositoriesEquals( repositories, that.repositories );\n        }","id":56732,"modified_method":"@Override\n        public boolean equals( Object obj )\n        {\n            if ( obj == this )\n            {\n                return true;\n            }\n            else if ( obj == null || !getClass().equals( obj.getClass() ) )\n            {\n                return false;\n            }\n\n            Key that = (Key) obj;\n            return artifactId.equals( that.artifactId ) && groupId.equals( that.groupId )\n                && classifier.equals( that.classifier ) && extension.equals( that.extension )\n                && version.equals( that.version ) && context.equals( that.context )\n                && localRepo.equals( that.localRepo ) && CacheUtils.eq( workspace, that.workspace )\n                && CacheUtils.repositoriesEquals( repositories, that.repositories );\n        }","commit_id":"01ae5291a8fe1fc05e1a079a6e3b7790d2d45297","url":"https://github.com/apache/maven"},{"original_method":"public String getExpandedVersion( Artifact artifact )\n    {\n        return versions.get( artifact.getClassifier() ).getVersion();\n    }","id":56733,"modified_method":"public String getExpandedVersion( Artifact artifact )\n    {\n        String key = getKey( artifact.getClassifier(), artifact.getExtension() );\n        return versions.get( key ).getVersion();\n    }","commit_id":"01ae5291a8fe1fc05e1a079a6e3b7790d2d45297","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    protected void merge( Metadata recessive )\n    {\n        Snapshot snapshot;\n        String lastUpdated = \"\";\n\n        if ( metadata.getVersioning() == null )\n        {\n            DateFormat utcDateFormatter = new SimpleDateFormat( \"yyyyMMdd.HHmmss\" );\n            utcDateFormatter.setTimeZone( TimeZone.getTimeZone( \"UTC\" ) );\n\n            snapshot = new Snapshot();\n            snapshot.setBuildNumber( getBuildNumber( recessive ) + 1 );\n            snapshot.setTimestamp( utcDateFormatter.format( new Date() ) );\n\n            Versioning versioning = new Versioning();\n            versioning.setSnapshot( snapshot );\n            versioning.setLastUpdated( snapshot.getTimestamp().replace( \".\", \"\" ) );\n            lastUpdated = versioning.getLastUpdated();\n\n            metadata.setVersioning( versioning );\n        }\n        else\n        {\n            snapshot = metadata.getVersioning().getSnapshot();\n            lastUpdated = metadata.getVersioning().getLastUpdated();\n        }\n\n        for ( Artifact artifact : artifacts )\n        {\n            String version = artifact.getVersion();\n\n            if ( version.endsWith( SNAPSHOT ) )\n            {\n                String qualifier = snapshot.getTimestamp() + \"-\" + snapshot.getBuildNumber();\n                version = version.substring( 0, version.length() - SNAPSHOT.length() ) + qualifier;\n            }\n\n            SnapshotVersion sv = new SnapshotVersion();\n            sv.setClassifier( artifact.getClassifier() );\n            sv.setVersion( version );\n            sv.setUpdated( lastUpdated );\n            versions.put( sv.getClassifier(), sv );\n        }\n\n        artifacts.clear();\n\n        Versioning versioning = recessive.getVersioning();\n        if ( versioning != null )\n        {\n            for ( SnapshotVersion sv : versioning.getSnapshotVersions() )\n            {\n                if ( !versions.containsKey( sv.getClassifier() ) )\n                {\n                    versions.put( sv.getClassifier(), sv );\n                }\n            }\n        }\n\n        metadata.getVersioning().setSnapshotVersions( new ArrayList<SnapshotVersion>( versions.values() ) );\n    }","id":56734,"modified_method":"@Override\n    protected void merge( Metadata recessive )\n    {\n        Snapshot snapshot;\n        String lastUpdated = \"\";\n\n        if ( metadata.getVersioning() == null )\n        {\n            DateFormat utcDateFormatter = new SimpleDateFormat( \"yyyyMMdd.HHmmss\" );\n            utcDateFormatter.setTimeZone( TimeZone.getTimeZone( \"UTC\" ) );\n\n            snapshot = new Snapshot();\n            snapshot.setBuildNumber( getBuildNumber( recessive ) + 1 );\n            snapshot.setTimestamp( utcDateFormatter.format( new Date() ) );\n\n            Versioning versioning = new Versioning();\n            versioning.setSnapshot( snapshot );\n            versioning.setLastUpdated( snapshot.getTimestamp().replace( \".\", \"\" ) );\n            lastUpdated = versioning.getLastUpdated();\n\n            metadata.setVersioning( versioning );\n        }\n        else\n        {\n            snapshot = metadata.getVersioning().getSnapshot();\n            lastUpdated = metadata.getVersioning().getLastUpdated();\n        }\n\n        for ( Artifact artifact : artifacts )\n        {\n            String version = artifact.getVersion();\n\n            if ( version.endsWith( SNAPSHOT ) )\n            {\n                String qualifier = snapshot.getTimestamp() + \"-\" + snapshot.getBuildNumber();\n                version = version.substring( 0, version.length() - SNAPSHOT.length() ) + qualifier;\n            }\n\n            SnapshotVersion sv = new SnapshotVersion();\n            sv.setClassifier( artifact.getClassifier() );\n            sv.setExtension( artifact.getExtension() );\n            sv.setVersion( version );\n            sv.setUpdated( lastUpdated );\n            versions.put( getKey( sv.getClassifier(), sv.getExtension() ), sv );\n        }\n\n        artifacts.clear();\n\n        Versioning versioning = recessive.getVersioning();\n        if ( versioning != null )\n        {\n            for ( SnapshotVersion sv : versioning.getSnapshotVersions() )\n            {\n                String key = getKey( sv.getClassifier(), sv.getExtension() );\n                if ( !versions.containsKey( key ) )\n                {\n                    versions.put( key, sv );\n                }\n            }\n        }\n\n        metadata.getVersioning().setSnapshotVersions( new ArrayList<SnapshotVersion>( versions.values() ) );\n    }","commit_id":"01ae5291a8fe1fc05e1a079a6e3b7790d2d45297","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * @return a list of included <code>Artifact<\/code> returned by the dependency tree.\n     */\n    public List<Artifact> getAllDependencies()\n    {\n        if ( allDependencies != null )\n        {\n            return allDependencies;\n        }\n\n        allDependencies = new ArrayList<Artifact>();\n        for ( @SuppressWarnings( \"unchecked\" )\n        Iterator<DependencyNode> i = dependencyTreeNode.getChildren().iterator(); i.hasNext(); )\n        {\n            DependencyNode dependencyNode = i.next();\n\n            if ( dependencyNode.getState() != DependencyNode.INCLUDED )\n            {\n                continue;\n            }\n\n            if ( dependencyNode.getArtifact().getGroupId().equals( project.getGroupId() )\n                && dependencyNode.getArtifact().getArtifactId().equals( project.getArtifactId() )\n                && dependencyNode.getArtifact().getVersion().equals( project.getVersion() ) )\n            {\n                continue;\n            }\n\n            if ( !allDependencies.contains( dependencyNode.getArtifact() ) )\n            {\n                allDependencies.add( dependencyNode.getArtifact() );\n            }\n            getAllDependencies( dependencyNode );\n        }\n\n        return allDependencies;\n    }","id":56735,"modified_method":"/**\n     * @return a list of included <code>Artifact<\/code> returned by the dependency tree.\n     */\n    public List<Artifact> getAllDependencies()\n    {\n        if ( allDependencies != null )\n        {\n            return allDependencies;\n        }\n\n        allDependencies = new ArrayList<Artifact>();\n\n        addAllChildrenDependencies( dependencyTreeNode );\n\n        return allDependencies;\n    }","commit_id":"852f7b620f969313fd27c157d616fccd6383d032","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Recursive method to get all dependencies from a given <code>dependencyNode<\/code>\n     *\n     * @param dependencyNode not null\n     */\n    private void getAllDependencies( DependencyNode dependencyNode )\n    {\n        if ( dependencyNode == null || dependencyNode.getChildren() == null )\n        {\n            if ( !allDependencies.contains( dependencyNode.getArtifact() ) )\n            {\n                allDependencies.add( dependencyNode.getArtifact() );\n            }\n            return;\n        }\n\n        for ( @SuppressWarnings( \"unchecked\" )\n        Iterator<DependencyNode> i = dependencyNode.getChildren().iterator(); i.hasNext(); )\n        {\n            DependencyNode subdependencyNode = i.next();\n\n            if ( subdependencyNode.getState() != DependencyNode.INCLUDED )\n            {\n                continue;\n            }\n\n            if ( subdependencyNode.getArtifact().getGroupId().equals( project.getGroupId() )\n                && subdependencyNode.getArtifact().getArtifactId().equals( project.getArtifactId() )\n                && subdependencyNode.getArtifact().getVersion().equals( project.getVersion() ) )\n            {\n                continue;\n            }\n\n            if ( !allDependencies.contains( subdependencyNode.getArtifact() ) )\n            {\n                allDependencies.add( subdependencyNode.getArtifact() );\n            }\n            getAllDependencies( subdependencyNode );\n        }\n    }","id":56736,"modified_method":"/**\n     * Recursive method to get all dependencies from a given <code>dependencyNode<\/code>\n     *\n     * @param dependencyNode not null\n     */\n    private void addAllChildrenDependencies( DependencyNode dependencyNode )\n    {\n        for ( @SuppressWarnings( \"unchecked\" )\n        Iterator<DependencyNode> i = dependencyNode.getChildren().iterator(); i.hasNext(); )\n        {\n            DependencyNode subdependencyNode = i.next();\n\n            if ( subdependencyNode.getState() != DependencyNode.INCLUDED )\n            {\n                continue;\n            }\n\n            Artifact artifact = subdependencyNode.getArtifact();\n\n            if ( artifact.getGroupId().equals( project.getGroupId() )\n                && artifact.getArtifactId().equals( project.getArtifactId() )\n                && artifact.getVersion().equals( project.getVersion() ) )\n            {\n                continue;\n            }\n\n            if ( !allDependencies.contains( artifact ) )\n            {\n                allDependencies.add( artifact );\n            }\n\n            addAllChildrenDependencies( subdependencyNode );\n        }\n\n    }","commit_id":"852f7b620f969313fd27c157d616fccd6383d032","url":"https://github.com/apache/maven-plugins"},{"original_method":"public int hashCode()\n    {\n        int result = 17;\n        result = 37 * result + groupId.hashCode();\n        result = 37 * result + artifactId.hashCode();\n        result = 37 * result + type.hashCode();\n        result = 37 * result + version.hashCode();\n        result = 37 * result + ( classifier != null ? classifier.hashCode() : 0 );\n        return result;\n    }","id":56737,"modified_method":"public int hashCode()\n    {\n        int result = 17;\n        result = 37 * result + groupId.hashCode();\n        result = 37 * result + artifactId.hashCode();\n        result = 37 * result + type.hashCode();\n        if ( version != null )\n        {\n            result = 37 * result + version.hashCode();\n        }\n        result = 37 * result + ( classifier != null ? classifier.hashCode() : 0 );\n        return result;\n    }","commit_id":"289aa0f6a56f8052e93b4305cbee7e832a9696a5","url":"https://github.com/apache/maven"},{"original_method":"private void validateIdentity()\n    {\n        if ( empty( groupId ) )\n        {\n            throw new InvalidArtifactRTException( groupId, artifactId, getVersion(), type,\n                                                  \"The groupId cannot be empty.\" );\n        }\n\n        if ( artifactId == null )\n        {\n            throw new InvalidArtifactRTException( groupId, artifactId, getVersion(), type,\n                                                  \"The artifactId cannot be empty.\" );\n        }\n\n        if ( type == null )\n        {\n            throw new InvalidArtifactRTException( groupId, artifactId, getVersion(), type,\n                                                  \"The type cannot be empty.\" );\n        }\n\n        if ( getVersion() == null )\n        {\n            throw new InvalidArtifactRTException( groupId, artifactId, getVersion(), type,\n                                                  \"The version cannot be empty.\" );\n        }\n    }","id":56738,"modified_method":"private void validateIdentity()\n    {\n        if ( empty( groupId ) )\n        {\n            throw new InvalidArtifactRTException( groupId, artifactId, getVersion(), type,\n                                                  \"The groupId cannot be empty.\" );\n        }\n\n        if ( artifactId == null )\n        {\n            throw new InvalidArtifactRTException( groupId, artifactId, getVersion(), type,\n                                                  \"The artifactId cannot be empty.\" );\n        }\n\n        if ( type == null )\n        {\n            throw new InvalidArtifactRTException( groupId, artifactId, getVersion(), type,\n                                                  \"The type cannot be empty.\" );\n        }\n\n        if ( version == null && versionRange == null )\n        {\n            throw new InvalidArtifactRTException( groupId, artifactId, getVersion(), type,\n                                                  \"The version cannot be empty.\" );\n        }\n    }","commit_id":"289aa0f6a56f8052e93b4305cbee7e832a9696a5","url":"https://github.com/apache/maven"},{"original_method":"public DefaultArtifact( String groupId, String artifactId, VersionRange versionRange, String scope, String type,\n                            String classifier, ArtifactHandler artifactHandler )\n    {\n        this.groupId = groupId;\n\n        this.artifactId = artifactId;\n\n        this.versionRange = versionRange;\n\n        this.version = versionRange == null ? null : versionRange.getRecommendedVersion().toString();\n\n        this.artifactHandler = artifactHandler;\n\n        this.scope = scope;\n\n        this.type = type;\n\n        this.classifier = classifier;\n\n        validateIdentity();\n    }","id":56739,"modified_method":"public DefaultArtifact( String groupId, String artifactId, VersionRange versionRange, String scope, String type,\n                            String classifier, ArtifactHandler artifactHandler )\n    {\n        this.groupId = groupId;\n\n        this.artifactId = artifactId;\n\n        setVersionRange( versionRange );\n\n        this.artifactHandler = artifactHandler;\n\n        this.scope = scope;\n\n        this.type = type;\n\n        this.classifier = classifier;\n\n        validateIdentity();\n    }","commit_id":"289aa0f6a56f8052e93b4305cbee7e832a9696a5","url":"https://github.com/apache/maven"},{"original_method":"private void recurse( ResolutionNode node, Map resolvedArtifacts, Map managedVersions,\n                          ArtifactRepository localRepository, List remoteRepositories, ArtifactMetadataSource source,\n                          ArtifactFilter filter, ArtifactFactory artifactFactory, List listeners )\n        throws CyclicDependencyException, TransitiveArtifactResolutionException\n    {\n        fireEvent( ResolutionListener.TEST_ARTIFACT, listeners, node );\n\n        // TODO: conflict resolvers, shouldn't be munging original artifact perhaps?\n        Object key = node.getKey();\n        if ( managedVersions.containsKey( key ) )\n        {\n            Artifact artifact = (Artifact) managedVersions.get( key );\n\n            fireEvent( ResolutionListener.MANAGE_ARTIFACT, listeners, node, artifact );\n\n            if ( artifact.getVersion() != null )\n            {\n                node.getArtifact().setVersion( artifact.getVersion() );\n            }\n            if ( artifact.getScope() != null )\n            {\n                node.getArtifact().setScope( artifact.getScope() );\n            }\n        }\n\n        ResolutionNode previous = (ResolutionNode) resolvedArtifacts.get( key );\n        if ( previous != null )\n        {\n            // TODO: use as conflict resolver(s), chain and introduce version mediation\n\n            // previous one is more dominant\n            if ( previous.getDepth() <= node.getDepth() )\n            {\n                checkScopeUpdate( node, previous, listeners );\n            }\n            else\n            {\n                checkScopeUpdate( previous, node, listeners );\n            }\n\n            if ( previous.getDepth() <= node.getDepth() )\n            {\n                fireEvent( ResolutionListener.OMIT_FOR_NEARER, listeners, node, previous.getArtifact() );\n                return;\n            }\n        }\n\n        resolvedArtifacts.put( key, node );\n\n        fireEvent( ResolutionListener.INCLUDE_ARTIFACT, listeners, node );\n\n        fireEvent( ResolutionListener.PROCESS_CHILDREN, listeners, node );\n\n        for ( Iterator i = node.getChildrenIterator(); i.hasNext(); )\n        {\n            ResolutionNode child = (ResolutionNode) i.next();\n            if ( !child.isResolved() )\n            {\n                try\n                {\n                    ResolutionGroup rGroup = source.retrieve( child.getArtifact(), localRepository,\n                                                              remoteRepositories );\n                    child.addDependencies( rGroup.getArtifacts(), rGroup.getResolutionRepositories(), filter );\n                }\n                catch ( CyclicDependencyException e )\n                {\n                    // would like to throw this, but we have crappy stuff in the repo\n                    // no logger to use here either just now\n\n                    // TODO: should the remoteRepositories list be null here?!\n                    fireEvent( ResolutionListener.OMIT_FOR_CYCLE, listeners,\n                               new ResolutionNode( e.getArtifact(), null, child ) );\n                }\n                catch ( ArtifactMetadataRetrievalException e )\n                {\n                    child.getArtifact().setDependencyTrail( node.getDependencyTrail() );\n                    throw new TransitiveArtifactResolutionException( e.getMessage(), child.getArtifact(),\n                                                                     remoteRepositories, e );\n                }\n\n                recurse( child, resolvedArtifacts, managedVersions, localRepository, remoteRepositories, source, filter,\n                         artifactFactory, listeners );\n            }\n        }\n\n        fireEvent( ResolutionListener.FINISH_PROCESSING_CHILDREN, listeners, node );\n    }","id":56740,"modified_method":"private void recurse( ResolutionNode node, Map resolvedArtifacts, Map managedVersions,\n                          ArtifactRepository localRepository, List remoteRepositories, ArtifactMetadataSource source,\n                          ArtifactFilter filter, ArtifactFactory artifactFactory, List listeners )\n        throws CyclicDependencyException, TransitiveArtifactResolutionException, OverConstrainedVersionException\n    {\n        fireEvent( ResolutionListener.TEST_ARTIFACT, listeners, node );\n\n        // TODO: use as a conflict resolver\n        Object key = node.getKey();\n        if ( managedVersions.containsKey( key ) )\n        {\n            Artifact artifact = (Artifact) managedVersions.get( key );\n\n            fireEvent( ResolutionListener.MANAGE_ARTIFACT, listeners, node, artifact );\n\n            if ( artifact.getVersion() != null )\n            {\n                node.getArtifact().setVersion( artifact.getVersion() );\n            }\n            if ( artifact.getScope() != null )\n            {\n                node.getArtifact().setScope( artifact.getScope() );\n            }\n        }\n\n        ResolutionNode previous = (ResolutionNode) resolvedArtifacts.get( key );\n        if ( previous != null )\n        {\n            // TODO: use as conflict resolver(s), chain and introduce version mediation\n            VersionRange previousRange = previous.getArtifact().getVersionRange();\n            VersionRange currentRange = node.getArtifact().getVersionRange();\n\n            if ( previousRange == null )\n            {\n                // version was already resolved\n                node.getArtifact().setVersion( previous.getArtifact().getVersion() );\n            }\n            else if ( currentRange == null )\n            {\n                // version was already resolved\n                previous.getArtifact().setVersion( node.getArtifact().getVersion() );\n            }\n            else\n            {\n                VersionRange newRange = previousRange.restrict( currentRange );\n                previous.getArtifact().setVersionRange( newRange );\n                node.getArtifact().setVersionRange( newRange );\n            }\n\n            // previous one is more dominant\n            if ( previous.getDepth() <= node.getDepth() )\n            {\n                checkScopeUpdate( node, previous, listeners );\n            }\n            else\n            {\n                checkScopeUpdate( previous, node, listeners );\n            }\n\n            if ( previous.getDepth() <= node.getDepth() )\n            {\n                fireEvent( ResolutionListener.OMIT_FOR_NEARER, listeners, node, previous.getArtifact() );\n                return;\n            }\n        }\n\n        resolvedArtifacts.put( key, node );\n\n        fireEvent( ResolutionListener.INCLUDE_ARTIFACT, listeners, node );\n\n        fireEvent( ResolutionListener.PROCESS_CHILDREN, listeners, node );\n\n        for ( Iterator i = node.getChildrenIterator(); i.hasNext(); )\n        {\n            ResolutionNode child = (ResolutionNode) i.next();\n            if ( !child.isResolved() )\n            {\n                Artifact artifact = child.getArtifact();\n                try\n                {\n                    if ( artifact.getVersion() == null )\n                    {\n                        // set the recommended version\n                        VersionRange versionRange = artifact.getVersionRange();\n                        String version = versionRange.getSelectedVersion().toString();\n                        artifact.selectVersion( version );\n                    }\n\n                    ResolutionGroup rGroup = source.retrieve( artifact, localRepository, remoteRepositories );\n                    child.addDependencies( rGroup.getArtifacts(), rGroup.getResolutionRepositories(), filter );\n                }\n                catch ( CyclicDependencyException e )\n                {\n                    // would like to throw this, but we have crappy stuff in the repo\n                    // no logger to use here either just now\n\n                    // TODO: should the remoteRepositories list be null here?!\n                    fireEvent( ResolutionListener.OMIT_FOR_CYCLE, listeners,\n                               new ResolutionNode( e.getArtifact(), null, child ) );\n                }\n                catch ( ArtifactMetadataRetrievalException e )\n                {\n                    artifact.setDependencyTrail( node.getDependencyTrail() );\n                    throw new TransitiveArtifactResolutionException( e.getMessage(), artifact, remoteRepositories, e );\n                }\n\n                recurse( child, resolvedArtifacts, managedVersions, localRepository, remoteRepositories, source, filter,\n                         artifactFactory, listeners );\n            }\n        }\n\n        fireEvent( ResolutionListener.FINISH_PROCESSING_CHILDREN, listeners, node );\n    }","commit_id":"289aa0f6a56f8052e93b4305cbee7e832a9696a5","url":"https://github.com/apache/maven"},{"original_method":"public ArtifactResolutionResult collect( Set artifacts, Artifact originatingArtifact, Map managedVersions,\n                                             ArtifactRepository localRepository, List remoteRepositories,\n                                             ArtifactMetadataSource source, ArtifactFilter filter,\n                                             ArtifactFactory artifactFactory, List listeners )\n        throws ArtifactResolutionException\n    {\n        Map resolvedArtifacts = new HashMap();\n\n        ResolutionNode root = new ResolutionNode( originatingArtifact, remoteRepositories );\n        root.addDependencies( artifacts, remoteRepositories, filter );\n\n        recurse( root, resolvedArtifacts, managedVersions, localRepository, remoteRepositories, source, filter,\n                 artifactFactory, listeners );\n\n        Set set = new HashSet();\n\n        for ( Iterator i = resolvedArtifacts.values().iterator(); i.hasNext(); )\n        {\n            ResolutionNode node = (ResolutionNode) i.next();\n            if ( !node.equals( root ) )\n            {\n                Artifact artifact = node.getArtifact();\n\n                artifact.setDependencyTrail( node.getDependencyTrail() );\n\n                set.add( node );\n            }\n        }\n\n        ArtifactResolutionResult result = new ArtifactResolutionResult();\n\n        result.setArtifactResolutionNodes( set );\n\n        return result;\n    }","id":56741,"modified_method":"public ArtifactResolutionResult collect( Set artifacts, Artifact originatingArtifact, Map managedVersions,\n                                             ArtifactRepository localRepository, List remoteRepositories,\n                                             ArtifactMetadataSource source, ArtifactFilter filter,\n                                             ArtifactFactory artifactFactory, List listeners )\n        throws ArtifactResolutionException\n    {\n        Map resolvedArtifacts = new HashMap();\n\n        ResolutionNode root = new ResolutionNode( originatingArtifact, remoteRepositories );\n\n        try\n        {\n            root.addDependencies( artifacts, remoteRepositories, filter );\n\n            recurse( root, resolvedArtifacts, managedVersions, localRepository, remoteRepositories, source, filter,\n                     artifactFactory, listeners );\n\n            Set set = new HashSet();\n\n            for ( Iterator i = resolvedArtifacts.values().iterator(); i.hasNext(); )\n            {\n                ResolutionNode node = (ResolutionNode) i.next();\n                if ( !node.equals( root ) )\n                {\n                    Artifact artifact = node.getArtifact();\n\n                    artifact.setDependencyTrail( node.getDependencyTrail() );\n\n                    set.add( node );\n                }\n            }\n\n            ArtifactResolutionResult result = new ArtifactResolutionResult();\n            result.setArtifactResolutionNodes( set );\n            return result;\n        }\n        catch ( OverConstrainedVersionException e )\n        {\n            throw new ArtifactResolutionException( \"Unable to mediate dependency\", e );\n        }\n    }","commit_id":"289aa0f6a56f8052e93b4305cbee7e832a9696a5","url":"https://github.com/apache/maven"},{"original_method":"public ResolutionGroup retrieve( Artifact artifact, ArtifactRepository localRepository,\n                                         List remoteRepositories )\n            throws ArtifactMetadataRetrievalException\n        {\n            ArtifactSpec a = (ArtifactSpec) artifacts.get( artifact.getId() );\n            try\n            {\n                return new ResolutionGroup( createArtifacts( artifactFactory, a.dependencies, artifact.getScope(),\n                                                             artifact.getDependencyFilter() ), Collections.EMPTY_LIST );\n            }\n            catch ( InvalidVersionSpecificationException e )\n            {\n                throw new ArtifactMetadataRetrievalException( e );\n            }\n        }","id":56742,"modified_method":"public ResolutionGroup retrieve( Artifact artifact, ArtifactRepository localRepository,\n                                         List remoteRepositories )\n            throws ArtifactMetadataRetrievalException\n        {\n            String key = getKey( artifact );\n\n            ArtifactSpec a = (ArtifactSpec) artifacts.get( key );\n            try\n            {\n                return new ResolutionGroup( createArtifacts( artifactFactory, a.dependencies, artifact.getScope(),\n                                                             artifact.getDependencyFilter() ), Collections.EMPTY_LIST );\n            }\n            catch ( InvalidVersionSpecificationException e )\n            {\n                throw new ArtifactMetadataRetrievalException( e );\n            }\n        }","commit_id":"289aa0f6a56f8052e93b4305cbee7e832a9696a5","url":"https://github.com/apache/maven"},{"original_method":"public void testResolveNearest()\n        throws ArtifactResolutionException\n    {\n        ArtifactSpec a = createArtifact( \"a\", \"1.0\" );\n        ArtifactSpec b = a.addDependency( \"b\", \"1.0\" );\n        ArtifactSpec c = a.addDependency( \"c\", \"3.0\" );\n\n        b.addDependency( \"c\", \"2.0\" );\n\n        ArtifactResolutionResult res = collect( a );\n        assertEquals( \"Check artifact list\", createSet( new Object[]{a.artifact, b.artifact, c.artifact} ),\n                      res.getArtifacts() );\n    }","id":56743,"modified_method":"public void testResolveNearest()\n        throws ArtifactResolutionException\n    {\n        ArtifactSpec a = createArtifact( \"a\", \"1.0\" );\n        ArtifactSpec b = a.addDependency( \"b\", \"1.0\" );\n        ArtifactSpec c = a.addDependency( \"c\", \"3.0\" );\n\n        b.addDependency( \"c\", \"2.0\" );\n\n        ArtifactResolutionResult res = collect( a );\n        assertEquals( \"Check artifact list\", createSet( new Object[]{a.artifact, b.artifact, c.artifact} ),\n                      res.getArtifacts() );\n        assertEquals( \"Check version\", \"3.0\", getArtifact( \"c\", res.getArtifacts() ).getVersion() );\n    }","commit_id":"289aa0f6a56f8052e93b4305cbee7e832a9696a5","url":"https://github.com/apache/maven"},{"original_method":"private ArtifactSpec createArtifact( String id, String version, String scope )\n    {\n        ArtifactSpec spec = new ArtifactSpec();\n        spec.artifact = artifactFactory.createArtifact( GROUP_ID, id, version, scope, \"jar\" );\n        source.artifacts.put( spec.artifact.getId(), spec );\n        return spec;\n    }","id":56744,"modified_method":"private ArtifactSpec createArtifact( String id, String version, String scope )\n    {\n        ArtifactSpec spec = new ArtifactSpec();\n        Artifact artifact = artifactFactory.createArtifact( GROUP_ID, id, version, scope, \"jar\" );\n        spec.artifact = artifact;\n        source.artifacts.put( source.getKey( artifact ), spec );\n        return spec;\n    }","commit_id":"289aa0f6a56f8052e93b4305cbee7e832a9696a5","url":"https://github.com/apache/maven"},{"original_method":"public List getDependencyTrail()\n    {\n        List path = new LinkedList();\n        ResolutionNode node = this;\n        while ( node != null )\n        {\n            path.add( 0, node.getArtifact().getId() );\n            node = node.parent;\n        }\n        return path;\n    }","id":56745,"modified_method":"public List getDependencyTrail()\n        throws OverConstrainedVersionException\n    {\n        List path = new LinkedList();\n        ResolutionNode node = this;\n        while ( node != null )\n        {\n            Artifact artifact = node.getArtifact();\n            if ( artifact.getVersion() == null )\n            {\n                // set the recommended version\n                VersionRange versionRange = artifact.getVersionRange();\n                String version = versionRange.getSelectedVersion().toString();\n                artifact.selectVersion( version );\n            }\n\n            path.add( 0, artifact.getId() );\n            node = node.parent;\n        }\n        return path;\n    }","commit_id":"289aa0f6a56f8052e93b4305cbee7e832a9696a5","url":"https://github.com/apache/maven"},{"original_method":"public String getNamespace() {\n    return getLanguageDescriptor().getNamespace();\n  }","id":56746,"modified_method":"@NotNull\n  public String getNamespace() {\n    String result = getLanguageDescriptor().getNamespace();\n    assert result != null;\n    return result;\n  }","commit_id":"9b4a0933f3851988a88be57b6465caf6d68009db","url":"https://github.com/JetBrains/MPS"},{"original_method":"private long getLastChangeTime() {\n    long result = 0;\n    SModelRepository repository = SModelRepository.getInstance();\n    result = Math.max(result, repository.getLastChangeTime(getStructureModelDescriptor()));\n\n\n    if (getEditorModelDescriptor() != null) {\n      result = Math.max(result, repository.getLastChangeTime(getEditorModelDescriptor()));\n    }\n\n    if (getActionsModelDescriptor() != null) {\n      result = Math.max(result, repository.getLastChangeTime(getActionsModelDescriptor()));\n    }\n\n    if (getConstraintsModelDescriptor() != null) {\n      result = Math.max(result, repository.getLastChangeTime(getConstraintsModelDescriptor()));\n    }\n\n    if (getTypesystemModelDescriptor() != null) {\n      result = Math.max(result, repository.getLastChangeTime(getTypesystemModelDescriptor()));\n    }\n\n    return result;\n  }","id":56747,"modified_method":"private long getLastChangeTime() {\n    long result = 0;\n    SModelRepository repository = SModelRepository.getInstance();\n    result = Math.max(result, repository.getLastChangeTime(getStructureModelDescriptor()));\n\n\n    SModelDescriptor editorModel = getEditorModelDescriptor();\n    if (editorModel != null) {\n      result = Math.max(result, repository.getLastChangeTime(editorModel));\n    }\n\n    SModelDescriptor actionsModel = getActionsModelDescriptor();\n    if (actionsModel != null) {\n      result = Math.max(result, repository.getLastChangeTime(actionsModel));\n    }\n\n    SModelDescriptor constraintsModel = getConstraintsModelDescriptor();\n    if (constraintsModel != null) {\n      result = Math.max(result, repository.getLastChangeTime(constraintsModel));\n    }\n\n    SModelDescriptor typesystemModel = getTypesystemModelDescriptor();\n    if (typesystemModel != null) {\n      result = Math.max(result, repository.getLastChangeTime(typesystemModel));\n    }\n\n    return result;\n  }","commit_id":"9b4a0933f3851988a88be57b6465caf6d68009db","url":"https://github.com/JetBrains/MPS"},{"original_method":"public List<Generator> getGenerators() {\n    return myGenerators;\n  }","id":56748,"modified_method":"@NotNull\n  public List<Generator> getGenerators() {\n    return new ArrayList<Generator>(myGenerators);\n  }","commit_id":"9b4a0933f3851988a88be57b6465caf6d68009db","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public boolean equals(Object obj) {\n        if (this == obj) return true;\n        if (obj == null) return false;\n\n        if (obj instanceof AlarmHopCriteria) {\n            AlarmHopCriteria ref = (AlarmHopCriteria)obj;\n\t\t\treturn ref.getSearchResult().getAlarmId().equals(this.getSearchResult().getAlarmId()) && ref.getNamespace().equals(this.getNamespace());\n        }\n        \n        return false;\n    }","id":56749,"modified_method":"@Override\n    public boolean equals(Object obj) {\n        if (this == obj) return true;\n        if (obj == null) return false;\n\n        if (obj instanceof AlarmHopCriteria) {\n            AlarmHopCriteria ref = (AlarmHopCriteria)obj;\n\t\t\tString refAlarmId = ref.getSearchResult().getId();\n            String alarmId = this.getSearchResult().getId();\n            String refNamespace = ref.getNamespace();\n            String namespace = this.getNamespace();\n            return refAlarmId.equals(alarmId) && refNamespace.equals(namespace);\n        }\n        \n        return false;\n    }","commit_id":"bb3e00a048925515f43b35a714e0ba0c7f1c0a98","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private String _getNamespace() {\n\t\tHttpServletRequest request =\n\t\t\t(HttpServletRequest)pageContext.getRequest();\n\n\t\tPortletResponse portletResponse = (PortletResponse)request.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_RESPONSE);\n\n\t\tString namespace = StringPool.BLANK;\n\n\t\tif (portletResponse != null) {\n\t\t\tnamespace = portletResponse.getNamespace();\n\t\t}\n\n\t\treturn namespace;\n\t}","id":56750,"modified_method":"private String _getNamespace() {\n\t\tHttpServletRequest request =\n\t\t\t(HttpServletRequest)pageContext.getRequest();\n\n\t\tPortletResponse portletResponse = (PortletResponse)request.getAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_RESPONSE);\n\n\t\tif (portletResponse != null) {\n\t\t\treturn portletResponse.getNamespace();\n\t\t}\n\n\t\treturn StringPool.BLANK;\n\t}","commit_id":"fa19d3c3a1e41a5d7dc4f6a68cf2e9c301bb41ef","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@NotNull\n  public String getNamespace() {\n    if(getNamespacePrefix().length() == 0)\n      return XmlUtil.HTML_URI;\n    return super.getNamespace();\n  }","id":56751,"modified_method":"@NotNull\n  public String getNamespace() {\n    final String xmlNamespace = super.getNamespace();\n\n    if (getNamespacePrefix().length() > 0) {\n      return xmlNamespace;\n    }\n\n    if (xmlNamespace.length() == 0 || xmlNamespace.equals(XmlUtil.XHTML_URI)) {\n      return XmlUtil.HTML_URI;\n    }\n\n    // ex.: mathML and SVG namespaces can be used inside html file\n    return xmlNamespace;\n  }","commit_id":"028d319a160fe3ab2a02549ca8e3d7ea09b7569b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void checkTag(@NotNull final XmlTag tag, @NotNull final ProblemsHolder holder, final boolean isOnTheFly) {\n    if (!(tag instanceof HtmlTag) || !XmlHighlightVisitor.shouldBeValidated(tag)) {\n      return;\n    }\n\n    XmlElementDescriptor descriptorFromContext = XmlUtil.getDescriptorFromContext(tag);\n\n    PsiElement parent = tag.getParent();\n    XmlElementDescriptor parentDescriptor = parent instanceof XmlTag ? ((XmlTag)parent).getDescriptor() : null;\n\n    XmlElementDescriptor ownDescriptor = isAbstractDescriptor(descriptorFromContext)\n                                         ? tag.getDescriptor()\n                                         : descriptorFromContext;\n\n    if (isAbstractDescriptor(ownDescriptor) ||\n        (parentDescriptor instanceof HtmlElementDescriptorImpl &&\n         ownDescriptor instanceof HtmlElementDescriptorImpl &&\n         isAbstractDescriptor(descriptorFromContext))) {\n\n      final String name = tag.getName();\n\n      if (!isCustomValuesEnabled() || !isCustomValue(name)) {\n        final AddCustomTagOrAttributeIntentionAction action =\n          new AddCustomTagOrAttributeIntentionAction(getShortName(), name, XmlEntitiesInspection.UNKNOWN_TAG);\n\n        // todo: support \"element is not allowed\" message for html5\n        // some tags in html5 cannot be found in xhtml5.xsd if they are located in incorrect context, so they get any-element descriptor (ex. \"canvas: tag)\n        final String message = isAbstractDescriptor(ownDescriptor)\n                               ? XmlErrorMessages.message(\"unknown.html.tag\", name)\n                               : XmlErrorMessages.message(\"element.is.not.allowed.here\", name);\n\n        final PsiElement startTagName = XmlTagUtil.getStartTagNameElement(tag);\n        assert startTagName != null;\n        final PsiElement endTagName = XmlTagUtil.getEndTagNameElement(tag);\n\n        List<LocalQuickFix> quickfixes = new ArrayList<LocalQuickFix>();\n        quickfixes.add(action);\n        if (isOnTheFly) {\n          ContainerUtil.addIfNotNull(CreateNSDeclarationIntentionFix.createFix(startTagName, \"\"), quickfixes);\n        }\n        if (HtmlUtil.isHtml5Tag(name) && !HtmlUtil.hasNonHtml5Doctype(tag)) {\n          quickfixes.add(new SwitchToHtml5WithHighPriorityAction());\n        }\n        ProblemHighlightType highlightType = tag.getContainingFile().getContext() == null ?\n                                             ProblemHighlightType.GENERIC_ERROR_OR_WARNING :\n                                             ProblemHighlightType.INFORMATION;\n        holder.registerProblem(startTagName, message, highlightType, quickfixes.toArray(new LocalQuickFix[quickfixes.size()]));\n\n        if (endTagName != null) {\n          holder.registerProblem(endTagName, message, highlightType, quickfixes.toArray(new LocalQuickFix[quickfixes.size()]));\n        }\n      }\n    }\n  }","id":56752,"modified_method":"protected void checkTag(@NotNull final XmlTag tag, @NotNull final ProblemsHolder holder, final boolean isOnTheFly) {\n    if (!(tag instanceof HtmlTag) || !XmlHighlightVisitor.shouldBeValidated(tag) || isInSpecialHtml5Namespace(tag)) {\n      return;\n    }\n\n    XmlElementDescriptor descriptorFromContext = XmlUtil.getDescriptorFromContext(tag);\n\n    PsiElement parent = tag.getParent();\n    XmlElementDescriptor parentDescriptor = parent instanceof XmlTag ? ((XmlTag)parent).getDescriptor() : null;\n\n    XmlElementDescriptor ownDescriptor = isAbstractDescriptor(descriptorFromContext)\n                                         ? tag.getDescriptor()\n                                         : descriptorFromContext;\n\n    if (isAbstractDescriptor(ownDescriptor) ||\n        (parentDescriptor instanceof HtmlElementDescriptorImpl &&\n         ownDescriptor instanceof HtmlElementDescriptorImpl &&\n         isAbstractDescriptor(descriptorFromContext))) {\n\n      final String name = tag.getName();\n\n      if (!isCustomValuesEnabled() || !isCustomValue(name)) {\n        final AddCustomTagOrAttributeIntentionAction action =\n          new AddCustomTagOrAttributeIntentionAction(getShortName(), name, XmlEntitiesInspection.UNKNOWN_TAG);\n\n        // todo: support \"element is not allowed\" message for html5\n        // some tags in html5 cannot be found in xhtml5.xsd if they are located in incorrect context, so they get any-element descriptor (ex. \"canvas: tag)\n        final String message = isAbstractDescriptor(ownDescriptor)\n                               ? XmlErrorMessages.message(\"unknown.html.tag\", name)\n                               : XmlErrorMessages.message(\"element.is.not.allowed.here\", name);\n\n        final PsiElement startTagName = XmlTagUtil.getStartTagNameElement(tag);\n        assert startTagName != null;\n        final PsiElement endTagName = XmlTagUtil.getEndTagNameElement(tag);\n\n        List<LocalQuickFix> quickfixes = new ArrayList<LocalQuickFix>();\n        quickfixes.add(action);\n        if (isOnTheFly) {\n          ContainerUtil.addIfNotNull(CreateNSDeclarationIntentionFix.createFix(startTagName, \"\"), quickfixes);\n        }\n        if (HtmlUtil.isHtml5Tag(name) && !HtmlUtil.hasNonHtml5Doctype(tag)) {\n          quickfixes.add(new SwitchToHtml5WithHighPriorityAction());\n        }\n        ProblemHighlightType highlightType = tag.getContainingFile().getContext() == null ?\n                                             ProblemHighlightType.GENERIC_ERROR_OR_WARNING :\n                                             ProblemHighlightType.INFORMATION;\n        holder.registerProblem(startTagName, message, highlightType, quickfixes.toArray(new LocalQuickFix[quickfixes.size()]));\n\n        if (endTagName != null) {\n          holder.registerProblem(endTagName, message, highlightType, quickfixes.toArray(new LocalQuickFix[quickfixes.size()]));\n        }\n      }\n    }\n  }","commit_id":"028d319a160fe3ab2a02549ca8e3d7ea09b7569b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void registerResources(ResourceRegistrar registrar) {\n    ResourceRegistrarImpl impl = (ResourceRegistrarImpl)registrar;\n    \n    impl.addInternalResource(XmlUtil.XSLT_URI,\"xslt-1_0.xsd\");\n    impl.addInternalResource(XmlUtil.XSLT_URI,\"2.0\", \"xslt-2_0.xsd\");\n    impl.addInternalResource(XmlUtil.XINCLUDE_URI,\"xinclude.xsd\");\n    impl.addInternalResource(XmlUtil.XML_SCHEMA_URI, \"XMLSchema.xsd\");\n    impl.addInternalResource(XmlUtil.XML_SCHEMA_URI + \".xsd\", \"XMLSchema.xsd\");\n    impl.addInternalResource(\"http://www.w3.org/2001/XMLSchema.dtd\", \"XMLSchema.dtd\");\n    impl.addInternalResource(XmlUtil.XML_SCHEMA_INSTANCE_URI, \"XMLSchema-instance.xsd\");\n    impl.addInternalResource(\"http://www.w3.org/2001/xml.xsd\",\"xml.xsd\");\n    impl.addInternalResource(XmlUtil.XML_NAMESPACE_URI,\"xml.xsd\");\n    impl.addInternalResource(XmlUtil.XHTML_URI,\"xhtml1-transitional.xsd\");\n    impl.addInternalResource(\"http://www.w3.org/2002/08/xhtml/xhtml1-strict.xsd\",\"xhtml1-strict.xsd\");\n\n    impl.addInternalResource(\"http://www.w3.org/TR/html4/strict.dtd\",\"xhtml1-strict.dtd\");\n    impl.addInternalResource(XmlUtil.HTML4_LOOSE_URI,\"xhtml1-transitional.dtd\");\n    impl.addInternalResource(\"http://www.w3.org/TR/html4/frameset.dtd\",\"xhtml1-frameset.dtd\");\n    impl.addInternalResource(\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\",\"xhtml1-strict.dtd\");\n    impl.addInternalResource(\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\",\"xhtml1-transitional.dtd\");\n    impl.addInternalResource(\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\",\"xhtml1-frameset.dtd\");\n    impl.addInternalResource(\"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\",\"xhtml11/xhtml11.dtd\");\n\n    // Plugins DTDs // stathik\n    impl.addInternalResource(\"http://plugins.intellij.net/plugin.dtd\", \"plugin.dtd\");\n    impl.addInternalResource(\"http://plugins.intellij.net/plugin-repository.dtd\", \"plugin-repository.dtd\");\n\n    // mobile\n    impl.addInternalResource(\"http://www.wapforum.org/DTD/xhtml-mobile10.dtd\", \"xhtml-mobile/xhtml-mobile10.dtd\");\n    impl.addInternalResource(\"http://www.wapforum.org/DTD/xhtml-mobile10-flat.dtd\", \"xhtml-mobile/xhtml-mobile10-flat.dtd\");\n    impl.addInternalResource(\"http://www.wapforum.org/DTD/xhtml-mobile12.dtd\", \"xhtml-mobile/xhtml-mobile12.dtd\");\n\n  }","id":56753,"modified_method":"public void registerResources(ResourceRegistrar registrar) {\n    ResourceRegistrarImpl impl = (ResourceRegistrarImpl)registrar;\n    \n    impl.addInternalResource(XmlUtil.XSLT_URI,\"xslt-1_0.xsd\");\n    impl.addInternalResource(XmlUtil.XSLT_URI,\"2.0\", \"xslt-2_0.xsd\");\n    impl.addInternalResource(XmlUtil.XINCLUDE_URI,\"xinclude.xsd\");\n    impl.addInternalResource(XmlUtil.XML_SCHEMA_URI, \"XMLSchema.xsd\");\n    impl.addInternalResource(XmlUtil.XML_SCHEMA_URI + \".xsd\", \"XMLSchema.xsd\");\n    impl.addInternalResource(\"http://www.w3.org/2001/XMLSchema.dtd\", \"XMLSchema.dtd\");\n    impl.addInternalResource(XmlUtil.XML_SCHEMA_INSTANCE_URI, \"XMLSchema-instance.xsd\");\n    impl.addInternalResource(\"http://www.w3.org/2001/xml.xsd\",\"xml.xsd\");\n    impl.addInternalResource(XmlUtil.XML_NAMESPACE_URI,\"xml.xsd\");\n    impl.addInternalResource(XmlUtil.XHTML_URI,\"xhtml1-transitional.xsd\");\n    impl.addInternalResource(\"http://www.w3.org/2002/08/xhtml/xhtml1-strict.xsd\",\"xhtml1-strict.xsd\");\n\n    impl.addInternalResource(\"http://www.w3.org/TR/html4/strict.dtd\",\"xhtml1-strict.dtd\");\n    impl.addInternalResource(XmlUtil.HTML4_LOOSE_URI,\"xhtml1-transitional.dtd\");\n    impl.addInternalResource(\"http://www.w3.org/TR/html4/frameset.dtd\",\"xhtml1-frameset.dtd\");\n    impl.addInternalResource(\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\",\"xhtml1-strict.dtd\");\n    impl.addInternalResource(\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\",\"xhtml1-transitional.dtd\");\n    impl.addInternalResource(\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\",\"xhtml1-frameset.dtd\");\n    impl.addInternalResource(\"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\",\"xhtml11/xhtml11.dtd\");\n\n    // Plugins DTDs // stathik\n    impl.addInternalResource(\"http://plugins.intellij.net/plugin.dtd\", \"plugin.dtd\");\n    impl.addInternalResource(\"http://plugins.intellij.net/plugin-repository.dtd\", \"plugin-repository.dtd\");\n\n    // mobile\n    impl.addInternalResource(\"http://www.wapforum.org/DTD/xhtml-mobile10.dtd\", \"xhtml-mobile/xhtml-mobile10.dtd\");\n    impl.addInternalResource(\"http://www.wapforum.org/DTD/xhtml-mobile10-flat.dtd\", \"xhtml-mobile/xhtml-mobile10-flat.dtd\");\n    impl.addInternalResource(\"http://www.wapforum.org/DTD/xhtml-mobile12.dtd\", \"xhtml-mobile/xhtml-mobile12.dtd\");\n\n    // svg and mathML\n    impl.addIgnoredResource(HtmlUtil.MATH_ML_NAMESPACE);\n    impl.addIgnoredResource(HtmlUtil.SVG_NAMESPACE);\n  }","commit_id":"028d319a160fe3ab2a02549ca8e3d7ea09b7569b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String getAlias() {\n    String sourceLang = NameUtil.shortNameFromLongName(getSourceLanguage().getNamespace());\n    return sourceLang + \" : \" + myGeneratorDescriptor.getName();\n  }","id":56754,"modified_method":"public String getAlias() {\n    String name = myGeneratorDescriptor.getName();\n    return getSourceLanguage().getNamespace() + \" -> [\" + (name == null ? \"<no name>\" : name) + \"]\";\n  }","commit_id":"1de07b59d3666158ae6c1b6db334a501a1a1d65c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void testThreadErrorHandlerLogging() throws Exception {\n        MockEndpoint handled = getMockEndpoint(\"mock:handled\");\n\n        template.sendBody(\"seda:errorTest\", msg1);\n\n        handled.expectedMessageCount(1);\n        handled.expectedBodiesReceived(msg3);\n\n        // TODO: Enable this when looking into this issue\n        //Thread.sleep(3000);\n\n        assertMockEndpointsSatisfied();\n\n        assertEquals(1, callCounter1);\n        assertEquals(1, callCounter2);\n        assertEquals(1 + redelivery, callCounter3);  // Only this should be more then 1\n    }","id":56755,"modified_method":"public void testThreadErrorHandlerLogging() throws Exception {\n        MockEndpoint handled = getMockEndpoint(\"mock:handled\");\n        handled.expectedBodiesReceived(msg3);\n\n        try {\n            template.sendBody(\"direct:errorTest\", msg1);\n            fail(\"Should have thrown a MyBelaException\");\n        } catch (RuntimeCamelException e) {\n            assertTrue(e.getCause() instanceof MyBelaException);\n        }\n\n        assertMockEndpointsSatisfied();\n\n        assertEquals(1, callCounter1);\n        assertEquals(1, callCounter2);\n        assertEquals(1 + redelivery, callCounter3);  // Only this should be more then 1\n    }","commit_id":"0c507b868ccd1acc48aa2d881fefe036fbe3c2b4","url":"https://github.com/apache/camel"},{"original_method":"protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            public void configure() throws Exception {\n                //getContext().addInterceptStrategy(new Tracer());\n                errorHandler(deadLetterChannel(\"mock:handled\").maximumRedeliveries(redelivery));\n\n                // using the onException and handled(true) works\n                //onException(Exception.class).maximumRedeliveries(redelivery).handled(true).to(\"mock:handled\");\n                \n                from(\"seda:errorTest\")\n                    // TODO: When using thread there is a multi threading / concurreny issue in Camel\n                    // hard to debug as it tend only to surface when unit test is running really fast\n                    // (no break points)\n\n                    //.thread(5).maxSize(5)\n                    // Processor #1\n                    .process(new Processor() {\n                        public void process(Exchange exchange) throws Exception {\n                            callCounter1++;\n                            LOG.debug(\"Processor #1 Received A \" + exchange.getIn().getBody());\n                            exchange.getOut().setBody(msg2);\n                        }\n                    })\n                    // Processor #2\n                    .process(new Processor() {\n                        public void process(Exchange exchange) throws Exception {\n                            callCounter2++;\n                            LOG.debug(\"Processor #2 Received A \" + exchange.getIn().getBody());\n                            exchange.getOut().setBody(msg3);\n                        }\n                    })\n                    // Processor #3\n                    .process(new Processor() {\n                        public void process(Exchange exchange) throws Exception {\n                            //Thread.sleep(100);\n                            callCounter3++;\n                            LOG.debug(\"Processor #3 Received A \" + exchange.getIn().getBody());\n                            throw new Exception(\"Forced exception by unit test\");\n                        }\n                    });\n            }\n        };\n    }","id":56756,"modified_method":"protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            public void configure() throws Exception {\n                errorHandler(deadLetterChannel(\"mock:handled\").maximumRedeliveries(redelivery));\n\n                from(\"direct:errorTest\")\n                    .thread(5)\n                    // Processor #1\n                    .process(new Processor() {\n                        public void process(Exchange exchange) throws Exception {\n                            callCounter1++;\n                            LOG.debug(\"Processor #1 Received A \" + exchange.getIn().getBody());\n                            exchange.getOut().setBody(msg2);\n                        }\n                    })\n                    // Processor #2\n                    .process(new Processor() {\n                        public void process(Exchange exchange) throws Exception {\n                            callCounter2++;\n                            LOG.debug(\"Processor #2 Received A \" + exchange.getIn().getBody());\n                            exchange.getOut().setBody(msg3);\n                        }\n                    })\n                    // Processor #3\n                    .process(new Processor() {\n                        public void process(Exchange exchange) throws Exception {\n                            callCounter3++;\n                            LOG.debug(\"Processor #3 Received A \" + exchange.getIn().getBody());\n                            throw new MyBelaException(\"Forced exception by unit test\");\n                        }\n                    });\n            }\n        };\n    }","commit_id":"0c507b868ccd1acc48aa2d881fefe036fbe3c2b4","url":"https://github.com/apache/camel"},{"original_method":"public boolean process(final Exchange exchange, final AsyncCallback callback, final RedeliveryData data) {\n\n        while (true) {\n            // we can't keep retrying if the route is being shutdown.\n            if (!isRunAllowed()) {\n                if (exchange.getException() == null) {\n                    exchange.setException(new RejectedExecutionException());\n                }\n                callback.done(data.sync);\n                return data.sync;\n            }\n\n            // if the exchange is transacted then let the underlying system handle the redelivery etc.\n            // this DeadLetterChannel is only for non transacted exchanges\n            if (exchange.isTransacted() && exchange.getException() != null) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"This is a transacted exchange, bypassing this DeadLetterChannel: \" + this + \" for exchange: \" + exchange);\n                }\n                return data.sync;\n            }\n\n            // did previous processing caused an exception?\n            if (exchange.getException() != null) {\n                Throwable e = exchange.getException();\n                // set the original caused exception\n                exchange.setProperty(EXCEPTION_CAUSE_PROPERTY, e);\n\n                logger.log(\"Failed delivery for exchangeId: \" + exchange.getExchangeId() + \". On delivery attempt: \" + data.redeliveryCounter + \" caught: \" + e, e);\n                data.redeliveryCounter = incrementRedeliveryCounter(exchange, e);\n\n                // find the error handler to use (if any)\n                ExceptionType exceptionPolicy = getExceptionPolicy(exchange, e);\n                if (exceptionPolicy != null) {\n                    data.currentRedeliveryPolicy = exceptionPolicy.createRedeliveryPolicy(data.currentRedeliveryPolicy);\n                    data.handledPredicate = exceptionPolicy.getHandledPolicy();\n                    Processor processor = exceptionPolicy.getErrorHandler();\n                    if (processor != null) {\n                        data.failureProcessor = processor;\n                    }\n                }\n            }\n\n            // should we redeliver or not?\n            if (!data.currentRedeliveryPolicy.shouldRedeliver(data.redeliveryCounter)) {\n                // we did not success with the redelivery so now we let the failure processor handle it\n                setFailureHandled(exchange);\n                // must decrement the redelivery counter as we didn't process the redelivery but is\n                // handling by the failure handler. So we must -1 to not let the counter be out-of-sync\n                decrementRedeliveryCounter(exchange);\n\n                AsyncProcessor afp = AsyncProcessorTypeConverter.convert(data.failureProcessor);\n                boolean sync = afp.process(exchange, new AsyncCallback() {\n                    public void done(boolean sync) {\n                        restoreExceptionOnExchange(exchange, data.handledPredicate);\n                        callback.done(data.sync);\n                    }\n                });\n\n                // The line below shouldn't be needed, it is invoked by the AsyncCallback above\n                //restoreExceptionOnExchange(exchange, data.handledPredicate);\n                logger.log(\"Failed delivery for exchangeId: \" + exchange.getExchangeId() + \". Handled by the failure processor: \" + data.failureProcessor);\n                return sync;\n            }\n\n            // should we redeliver\n            if (data.redeliveryCounter > 0) {\n                // okay we will give it another go so clear the exception so we can try again\n                if (exchange.getException() != null) {\n                    exchange.setException(null);\n                }\n\n                // wait until we should redeliver\n                data.redeliveryDelay = data.currentRedeliveryPolicy.sleep(data.redeliveryDelay);\n            }\n\n            // process the exchange\n            boolean sync = outputAsync.process(exchange, new AsyncCallback() {\n                public void done(boolean sync) {\n                    // Only handle the async case...\n                    if (sync) {\n                        return;\n                    }\n                    data.sync = false;\n                    if (exchange.getException() != null) {\n                        process(exchange, callback, data);\n                    } else {\n                        callback.done(sync);\n                    }\n                }\n            });\n            if (!sync) {\n                // It is going to be processed async..\n                return false;\n            }\n            if (exchange.getException() == null || isFailureHandled(exchange)) {\n                // If everything went well.. then we exit here..\n                callback.done(true);\n                return true;\n            }\n            // error occurred so loop back around.....\n        }\n\n    }","id":56757,"modified_method":"public boolean process(final Exchange exchange, final AsyncCallback callback, final RedeliveryData data) {\n\n        while (true) {\n            // we can't keep retrying if the route is being shutdown.\n            if (!isRunAllowed()) {\n                if (exchange.getException() == null) {\n                    exchange.setException(new RejectedExecutionException());\n                }\n                callback.done(data.sync);\n                return data.sync;\n            }\n\n            // if the exchange is transacted then let the underlying system handle the redelivery etc.\n            // this DeadLetterChannel is only for non transacted exchanges\n            if (exchange.isTransacted() && exchange.getException() != null) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"This is a transacted exchange, bypassing this DeadLetterChannel: \" + this + \" for exchange: \" + exchange);\n                }\n                return data.sync;\n            }\n\n            // did previous processing caused an exception?\n            if (exchange.getException() != null) {\n                Throwable e = exchange.getException();\n                // set the original caused exception\n                exchange.setProperty(EXCEPTION_CAUSE_PROPERTY, e);\n\n                logger.log(\"Failed delivery for exchangeId: \" + exchange.getExchangeId() + \". On delivery attempt: \" + data.redeliveryCounter + \" caught: \" + e, e);\n                data.redeliveryCounter = incrementRedeliveryCounter(exchange, e);\n\n                // find the error handler to use (if any)\n                ExceptionType exceptionPolicy = getExceptionPolicy(exchange, e);\n                if (exceptionPolicy != null) {\n                    data.currentRedeliveryPolicy = exceptionPolicy.createRedeliveryPolicy(data.currentRedeliveryPolicy);\n                    data.handledPredicate = exceptionPolicy.getHandledPolicy();\n                    Processor processor = exceptionPolicy.getErrorHandler();\n                    if (processor != null) {\n                        data.failureProcessor = processor;\n                    }\n                }\n            }\n\n            // should we redeliver or not?\n            if (!data.currentRedeliveryPolicy.shouldRedeliver(data.redeliveryCounter)) {\n                // we did not success with the redelivery so now we let the failure processor handle it\n                setFailureHandled(exchange);\n                // must decrement the redelivery counter as we didn't process the redelivery but is\n                // handling by the failure handler. So we must -1 to not let the counter be out-of-sync\n                decrementRedeliveryCounter(exchange);\n\n                AsyncProcessor afp = AsyncProcessorTypeConverter.convert(data.failureProcessor);\n                boolean sync = afp.process(exchange, new AsyncCallback() {\n                    public void done(boolean sync) {\n                        restoreExceptionOnExchange(exchange, data.handledPredicate);\n                        callback.done(data.sync);\n                    }\n                });\n\n                // The line below shouldn't be needed, it is invoked by the AsyncCallback above\n                //restoreExceptionOnExchange(exchange, data.handledPredicate);\n                logger.log(\"Failed delivery for exchangeId: \" + exchange.getExchangeId() + \". Handled by the failure processor: \" + data.failureProcessor);\n                return sync;\n            }\n\n            // should we redeliver\n            if (data.redeliveryCounter > 0) {\n                // okay we will give it another go so clear the exception so we can try again\n                if (exchange.getException() != null) {\n                    exchange.setException(null);\n                }\n\n                // wait until we should redeliver\n                data.redeliveryDelay = data.currentRedeliveryPolicy.sleep(data.redeliveryDelay);\n            }\n\n            // process the exchange\n            boolean sync = outputAsync.process(exchange, new AsyncCallback() {\n                public void done(boolean sync) {\n                    // Only handle the async case...\n                    if (sync) {\n                        return;\n                    }\n                    data.sync = false;\n                    // only process if the exchange hasn't failed\n                    // and it has not been handled by the error processor\n                    if (exchange.getException() != null && !isFailureHandled(exchange)) {\n                        process(exchange, callback, data);\n                    } else {\n                        callback.done(sync);\n                    }\n                }\n            });\n            if (!sync) {\n                // It is going to be processed async..\n                return false;\n            }\n            if (exchange.getException() == null || isFailureHandled(exchange)) {\n                // If everything went well.. then we exit here..\n                callback.done(true);\n                return true;\n            }\n            // error occurred so loop back around.....\n        }\n\n    }","commit_id":"0c507b868ccd1acc48aa2d881fefe036fbe3c2b4","url":"https://github.com/apache/camel"},{"original_method":"private boolean process(final Exchange original, final Exchange exchange, final AsyncCallback callback, final Iterator<Processor> processors, AsyncProcessor processor) {\n        return processor.process(exchange, new AsyncCallback() {\n            public void done(boolean sync) {\n\n                // We only have to handle async completion of\n                // the pipeline..\n                if (sync) {\n                    return;\n                }\n\n                // Continue processing the pipeline...\n                Exchange nextExchange = exchange;\n                while (processors.hasNext()) {\n                    AsyncProcessor processor = AsyncProcessorTypeConverter.convert(processors.next());\n\n                    if (nextExchange.isFailed()) {\n                        if (LOG.isDebugEnabled()) {\n                            LOG.debug(\"Message exchange has failed so breaking out of pipeline: \" + nextExchange + \" exception: \" + nextExchange.getException() + \" fault: \"\n                                    + nextExchange.getFault(false));\n                        }\n                        break;\n                    }\n\n                    nextExchange = createNextExchange(processor, nextExchange);\n                    sync = process(original, nextExchange, callback, processors, processor);\n                    if (!sync) {\n                        return;\n                    }\n                }\n\n                ExchangeHelper.copyResults(original, nextExchange);\n                callback.done(false);\n            }\n        });\n    }","id":56758,"modified_method":"private boolean process(final Exchange original, final Exchange exchange, final AsyncCallback callback, final Iterator<Processor> processors, AsyncProcessor processor) {\n        if (LOG.isTraceEnabled()) {\n            // this does the actual processing so log at trace level\n            LOG.trace(\"Processing exchangeId: \" + exchange.getExchangeId() + \" >>> \" + exchange);\n        }\n        return processor.process(exchange, new AsyncCallback() {\n            public void done(boolean sync) {\n                // We only have to handle async completion of the pipeline..\n                if (sync) {\n                    return;\n                }\n\n                // Continue processing the pipeline...\n                Exchange nextExchange = exchange;\n                while (processors.hasNext()) {\n                    AsyncProcessor processor = AsyncProcessorTypeConverter.convert(processors.next());\n\n                    boolean exceptionHandled = hasExceptionBeenHandled(nextExchange);\n                    if (nextExchange.isFailed() || exceptionHandled) {\n                        // The Exchange.EXCEPTION_HANDLED_PROPERTY property is only set if satisfactory handling was done\n                        //  by the error handler.  It's still an exception, the exchange still failed.\n                        if (LOG.isDebugEnabled()) {\n                            LOG.debug(\"Message exchange has failed so breaking out of pipeline: \" + nextExchange\n                                      + \" exception: \" + nextExchange.getException() + \" fault: \"\n                                      + nextExchange.getFault(false)\n                                      + (exceptionHandled ? \" handled by the error handler\" : \"\"));\n                        }\n                        break;\n                    }\n\n                    nextExchange = createNextExchange(processor, nextExchange);\n                    sync = process(original, nextExchange, callback, processors, processor);\n                    if (!sync) {\n                        return;\n                    }\n                }\n\n                ExchangeHelper.copyResults(original, nextExchange);\n                callback.done(false);\n            }\n        });\n    }","commit_id":"0c507b868ccd1acc48aa2d881fefe036fbe3c2b4","url":"https://github.com/apache/camel"},{"original_method":"public boolean process(Exchange original, AsyncCallback callback) {\n        Iterator<Processor> processors = getProcessors().iterator();\n        Exchange nextExchange = original;\n        boolean first = true;\n        while (true) {\n            boolean handledException = Boolean.TRUE.equals(\n                    nextExchange.getProperty(Exchange.EXCEPTION_HANDLED_PROPERTY));\n            if (nextExchange.isFailed() || handledException) {\n                // The Exchange.EXCEPTION_HANDLED_PROPERTY property is only set if satisfactory handling was done \n                //  by the error handler.  It's still an exception, the exchange still failed.\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Message exchange has failed so breaking out of pipeline: \" + nextExchange\n                              + \" exception: \" + nextExchange.getException() + \" fault: \"\n                              + nextExchange.getFault(false)\n                              + (handledException ? \" handled by the error handler\" : \"\"));\n                }\n                break;\n            }\n            if (!processors.hasNext()) {\n                break;\n            }\n\n            AsyncProcessor processor = AsyncProcessorTypeConverter.convert(processors.next());\n\n            if (first) {\n                first = false;\n            } else {\n                nextExchange = createNextExchange(processor, nextExchange);\n            }\n\n            boolean sync = process(original, nextExchange, callback, processors, processor);\n            // Continue processing the pipeline synchronously ...\n            if (!sync) {\n                // The pipeline will be completed async...\n                return false;\n            }\n        }\n\n        // If we get here then the pipeline was processed entirely\n        // synchronously.\n        ExchangeHelper.copyResults(original, nextExchange);\n        callback.done(true);\n        return true;\n    }","id":56759,"modified_method":"public boolean process(Exchange original, AsyncCallback callback) {\n        Iterator<Processor> processors = getProcessors().iterator();\n        Exchange nextExchange = original;\n        boolean first = true;\n        while (true) {\n            boolean exceptionHandled = hasExceptionBeenHandled(nextExchange);\n            if (nextExchange.isFailed() || exceptionHandled) {\n                // The Exchange.EXCEPTION_HANDLED_PROPERTY property is only set if satisfactory handling was done \n                //  by the error handler.  It's still an exception, the exchange still failed.\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Message exchange has failed so breaking out of pipeline: \" + nextExchange\n                              + \" exception: \" + nextExchange.getException() + \" fault: \"\n                              + nextExchange.getFault(false)\n                              + (exceptionHandled ? \" handled by the error handler\" : \"\"));\n                }\n                break;\n            }\n            if (!processors.hasNext()) {\n                break;\n            }\n\n            AsyncProcessor processor = AsyncProcessorTypeConverter.convert(processors.next());\n\n            if (first) {\n                first = false;\n            } else {\n                nextExchange = createNextExchange(processor, nextExchange);\n            }\n\n            boolean sync = process(original, nextExchange, callback, processors, processor);\n            // Continue processing the pipeline synchronously ...\n            if (!sync) {\n                // The pipeline will be completed async...\n                return false;\n            }\n        }\n\n        // If we get here then the pipeline was processed entirely\n        // synchronously.\n        if (LOG.isTraceEnabled()) {\n            // logging nextExchange as it contains the exchange that might have altered the payload and since\n            // we are logging the completion if will be confusing if we log the original instead\n            // we could also consider logging the original and the nextExchange then we have *before* and *after* snapshots\n            LOG.trace(\"Processing compelete for exchangeId: \" + original.getExchangeId() + \" >>> \" + nextExchange);\n        }\n        ExchangeHelper.copyResults(original, nextExchange);\n        callback.done(true);\n        return true;\n    }","commit_id":"0c507b868ccd1acc48aa2d881fefe036fbe3c2b4","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Strategy method to create the next exchange from the previous exchange.\n     *\n     * @param producer         the producer used to send to the endpoint\n     * @param previousExchange the previous exchange\n     * @return a new exchange\n     */\n    protected Exchange createNextExchange(Processor producer, Exchange previousExchange) {\n        Exchange answer = previousExchange.newInstance();\n\n        answer.getProperties().putAll(previousExchange.getProperties());\n\n        // now lets set the input of the next exchange to the output of the\n        // previous message if it is not null\n        Message previousOut = previousExchange.getOut(false);\n        Message in = answer.getIn();\n        if (previousOut != null) {\n            in.copyFrom(previousOut);\n        } else {\n            in.copyFrom(previousExchange.getIn());\n        }\n        return answer;\n    }","id":56760,"modified_method":"/**\n     * Strategy method to create the next exchange from the previous exchange.\n     * <p/>\n     * Remember to copy the original exchange id otherwise correlation of ids in the log is a problem\n     *\n     * @param producer         the producer used to send to the endpoint\n     * @param previousExchange the previous exchange\n     * @return a new exchange\n     */\n    protected Exchange createNextExchange(Processor producer, Exchange previousExchange) {\n        Exchange answer = previousExchange.newInstance();\n        // we must use the same id as this is a snapshot strategy where Camel copies a snapshot\n        // before processing the next step in the pipeline, so we have a snapshot of the exchange\n        // just before. This snapshot is used if Camel should do redeliveries (re try) using\n        // DeadLetterChannel. That is why it's important the id is the same, as it is the *same*\n        // exchange being routed.\n        answer.setExchangeId(previousExchange.getExchangeId());\n\n        answer.getProperties().putAll(previousExchange.getProperties());\n\n        // now lets set the input of the next exchange to the output of the\n        // previous message if it is not null\n        Message previousOut = previousExchange.getOut(false);\n        Message in = answer.getIn();\n        if (previousOut != null) {\n            in.copyFrom(previousOut);\n        } else {\n            in.copyFrom(previousExchange.getIn());\n        }\n        return answer;\n    }","commit_id":"0c507b868ccd1acc48aa2d881fefe036fbe3c2b4","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    public Subscriber<? super Message> call(final Subscriber<? super Message> s) {\n        return new Subscriber<Message>(s) {\n            @Override\n            public void onCompleted() {\n                try {\n                    ServiceHelper.stopService(producerTemplate);\n                } catch (Exception e) {\n                    throw new RuntimeCamelRxException(e);\n                } finally {\n                    producerTemplate = null;\n                }\n                if (!s.isUnsubscribed()) {\n                    s.onCompleted();\n                }\n            }\n\n            @Override\n            public void onError(Throwable e) {\n                // producer cannot handler the exception\n                // so we just pass the exchange to the subscriber \n                if (!s.isUnsubscribed()) {\n                    s.onError(e);\n                }\n            }\n\n            @Override\n            public void onNext(Message item) {\n                if (!s.isUnsubscribed()) {\n                    Exchange exchange = process(item);\n                    if (exchange.getException() != null) {\n                        s.onError(exchange.getException());\n                    } else {\n                        if (exchange.hasOut()) {\n                            s.onNext(exchange.getOut());\n                        } else {\n                            s.onNext(exchange.getIn());\n                        }\n                    }\n\n                }\n            }\n        };\n    }","id":56761,"modified_method":"@Override\n    public Subscriber<? super Exchange> call(final Subscriber<? super Exchange> s) {\n        return new Subscriber<Exchange>(s) {\n            @Override\n            public void onCompleted() {\n                try {\n                    ServiceHelper.stopService(producerTemplate);\n                } catch (Exception e) {\n                    throw new RuntimeCamelRxException(e);\n                } finally {\n                    producerTemplate = null;\n                }\n                if (!s.isUnsubscribed()) {\n                    s.onCompleted();\n                }\n            }\n\n            @Override\n            public void onError(Throwable e) {\n                // producer cannot handler the exception\n                // so we just pass the exchange to the subscriber \n                if (!s.isUnsubscribed()) {\n                    s.onError(e);\n                }\n            }\n\n            @Override\n            public void onNext(Exchange item) {\n                if (!s.isUnsubscribed()) {\n                    Exchange exchange = process(item);\n                    if (exchange.getException() != null) {\n                        s.onError(exchange.getException());\n                    } else {\n                        s.onNext(PipelineHelper.createNextExchange(exchange));\n                    }\n                }\n            }\n        };\n    }","commit_id":"33ebe714a9b304632eaeed2bdd0859d583b41563","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testCamelOperator() throws Exception {\n        final MockEndpoint mockEndpoint1 = camelContext.getEndpoint(\"mock:results1\", MockEndpoint.class);\n        final MockEndpoint mockEndpoint2 = camelContext.getEndpoint(\"mock:results2\", MockEndpoint.class);\n        final MockEndpoint mockEndpoint3 = camelContext.getEndpoint(\"mock:results3\", MockEndpoint.class);\n        mockEndpoint1.expectedMessageCount(2);\n        mockEndpoint2.expectedMessageCount(1);\n        mockEndpoint3.expectedMessageCount(1);\n\n        ConnectableObservable<Message> route = reactiveCamel.toObservable(\"direct:start\")\n            .lift(new CamelOperator(mockEndpoint1))\n            .lift(new CamelOperator(camelContext, \"log:foo\"))\n            .debounce(1, TimeUnit.SECONDS)\n            .lift(reactiveCamel.to(mockEndpoint2))\n            .lift(reactiveCamel.to(\"mock:results3\"))\n            .publish();\n\n        // Start the route\n        Subscription routeSubscription = route.connect();\n\n        // Send two test messages\n        producerTemplate.sendBody(\"direct:start\", \"<test/>\");\n        producerTemplate.sendBody(\"direct:start\", \"<test/>\");\n\n        mockEndpoint1.assertIsSatisfied();\n        mockEndpoint2.assertIsSatisfied();\n        mockEndpoint3.assertIsSatisfied();\n\n        // Stop the route\n        routeSubscription.unsubscribe();\n    }","id":56762,"modified_method":"@Test\n    public void testCamelOperator() throws Exception {\n        final MockEndpoint mockEndpoint1 = camelContext.getEndpoint(\"mock:results1\", MockEndpoint.class);\n        final MockEndpoint mockEndpoint2 = camelContext.getEndpoint(\"mock:results2\", MockEndpoint.class);\n        final MockEndpoint mockEndpoint3 = camelContext.getEndpoint(\"mock:results3\", MockEndpoint.class);\n        final MockEndpoint mockEndpoint4 = camelContext.getEndpoint(\"mock:results4\", MockEndpoint.class);\n        mockEndpoint1.expectedMessageCount(2);\n        mockEndpoint2.expectedMessageCount(1);\n        mockEndpoint3.expectedMessageCount(1);\n        mockEndpoint4.expectedMessageCount(2);\n\n        // Define an InOnly route\n        ConnectableObservable<Exchange> inOnly = reactiveCamel.from(\"direct:start\")\n            .lift(new CamelOperator(mockEndpoint1))\n            .lift(new CamelOperator(camelContext, \"log:inOnly\"))\n            .debounce(1, TimeUnit.SECONDS)\n            .lift(reactiveCamel.to(mockEndpoint2))\n            .lift(reactiveCamel.to(\"mock:results3\"))\n            .publish();\n\n        // Start the route\n        Subscription inSubscription = inOnly.connect();\n\n        // Send two test messages\n        producerTemplate.sendBody(\"direct:start\", \"<test1/>\");\n        producerTemplate.sendBody(\"direct:start\", \"<test2/>\");\n\n        // Define an InOut route\n        ConnectableObservable<Exchange> inOut = reactiveCamel.from(\"restlet:http://localhost:9080/test?restletMethod=POST\")\n            .map(new Func1<Exchange, Exchange>() { // Convert body to String\n                @Override\n                public Exchange call(Exchange exchange) {\n                    exchange.getIn().setBody(exchange.getIn().getBody(String.class));\n                    return exchange;\n                }\n            })\n            .lift(reactiveCamel.to(\"log:inOut\"))\n            .map(new Func1<Exchange, Exchange>() { // Change body for response\n                @Override\n                public Exchange call(Exchange exchange) {\n                    exchange.getIn().setBody(exchange.getIn().getBody(String.class) + \" back\");\n                    return exchange;\n                }\n            })\n            .lift(reactiveCamel.to(mockEndpoint4))\n            .publish();\n\n        // Start the route\n        Subscription inoutSubscription = inOut.connect();\n\n        // Send two messages and check the responses\n        given().body(\"hello\").when().post(\"http://localhost:9080/test\").then().assertThat().body(containsString(\"hello back\"));\n        given().body(\"holla\").when().post(\"http://localhost:9080/test\").then().assertThat().body(containsString(\"holla back\"));\n\n        mockEndpoint1.assertIsSatisfied();\n        mockEndpoint2.assertIsSatisfied();\n        mockEndpoint3.assertIsSatisfied();\n        mockEndpoint4.assertIsSatisfied();\n\n        // Stop the route\n        inSubscription.unsubscribe();\n\n        // Stop the route\n        inoutSubscription.unsubscribe();\n    }","commit_id":"33ebe714a9b304632eaeed2bdd0859d583b41563","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Returns an {@link rx.Observable < org.apache.camel.Message >} to allow the messages sent on the endpoint\n     * to be processed using  <a href=\"https://rx.codeplex.com/\">Reactive Extensions<\/a>\n     */\n    public Observable<Message> toObservable(Endpoint endpoint) {\n        return createEndpointObservable(endpoint, ExchangeToMessageFunc1.getInstance());\n    }","id":56763,"modified_method":"/**\n     * Returns an {@link rx.Observable < org.apache.camel.Message >} to allow the messages sent on the endpoint\n     * to be processed using  <a href=\"https://rx.codeplex.com/\">Reactive Extensions<\/a>\n     */\n    public Observable<Message> toObservable(Endpoint endpoint) {\n        return toObservable(endpoint, Message.class);\n    }","commit_id":"33ebe714a9b304632eaeed2bdd0859d583b41563","url":"https://github.com/apache/camel"},{"original_method":"private MavenProject getMavenProject(Artifact artifact) throws MojoExecutionException\n    {\n        Artifact pomArtifact =\n            this.repositorySystem.createProjectArtifact(artifact.getGroupId(), artifact.getArtifactId(),\n                artifact.getVersion());\n\n        try {\n            ProjectBuildingRequest request =\n                new DefaultProjectBuildingRequest().setRepositorySession(this.repositorySystemSession);\n\n            // We don't want to execute any plugin here\n            request.setProcessPlugins(false);\n            // It's not this plugin job to validate this pom.xml\n            request.setValidationLevel(ModelBuildingRequest.VALIDATION_LEVEL_MINIMAL);\n\n            ProjectBuildingResult result = this.projectBuilder.build(pomArtifact, request);\n\n            return result.getProject();\n        } catch (ProjectBuildingException e) {\n            throw new MojoExecutionException(String.format(\"Failed to build project for [%s]\", pomArtifact), e);\n        }\n    }","id":56764,"modified_method":"private MavenProject getMavenProject(Artifact artifact) throws MojoExecutionException\n    {\n        try {\n            ProjectBuildingRequest request = new DefaultProjectBuildingRequest()\n                .setRepositorySession(this.repositorySystemSession)\n                // We don't want to execute any plugin here\n                .setProcessPlugins(false)\n                // It's not this plugin job to validate this pom.xml\n                .setValidationLevel(ModelBuildingRequest.VALIDATION_LEVEL_MINIMAL);\n            // Note: build() will automatically get the POM artifact corresponding to the passed artifact.\n            ProjectBuildingResult result = this.projectBuilder.build(artifact, request);\n            return result.getProject();\n        } catch (ProjectBuildingException e) {\n            throw new MojoExecutionException(String.format(\"Failed to build project for [%s]\", artifact), e);\n        }\n    }","commit_id":"70b4841f53f038960ae6b99276f14b285239e652","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private Set<Artifact> resolveTransitively(Set<Artifact> artifacts) throws MojoExecutionException\n    {\n        AndArtifactFilter filter = new AndArtifactFilter(Arrays.asList(\n            new ScopeArtifactFilter(\"runtime\"),\n            // - Exclude JCL and LOG4J since we want all logging to go through SLF4J. Note that we're excluding\n            // log4j-<version>.jar but keeping log4j-over-slf4j-<version>.jar\n            // - Exclude batik-js to prevent conflict with the patched version of Rhino used by yuicompressor used\n            // for JSX. See http://jira.xwiki.org/jira/browse/XWIKI-6151 for more details.\n            new ExcludesArtifactFilter(Arrays.asList(\"org.apache.xmlgraphic:batik-js\",\n                \"commons-logging:commons-logging\", \"commons-logging:commons-logging-api\", \"log4j:log4j\"))));\n\n        ArtifactResolutionRequest request = new ArtifactResolutionRequest()\n            .setArtifact(this.project.getArtifact())\n            .setArtifactDependencies(artifacts)\n            .setCollectionFilter(filter)\n            .setRemoteRepositories(this.remoteRepositories)\n            .setLocalRepository(this.localRepository)\n            .setManagedVersionMap(this.project.getManagedVersionMap())\n            .setResolveRoot(false);\n        ArtifactResolutionResult resolutionResult = this.repositorySystem.resolve(request);\n        if(resolutionResult.hasExceptions()){\n            throw new MojoExecutionException(String.format(\"Failed to resolve artifacts [%s]\", artifacts,\n                resolutionResult.getExceptions().get(0)));\n        }\n\n        return resolutionResult.getArtifacts();\n    }","id":56765,"modified_method":"private Set<Artifact> resolveTransitively(Set<Artifact> artifacts) throws MojoExecutionException\n    {\n        AndArtifactFilter filter = new AndArtifactFilter(Arrays.asList(\n            new ScopeArtifactFilter(\"runtime\"),\n            // - Exclude JCL and LOG4J since we want all logging to go through SLF4J. Note that we're excluding\n            // log4j-<version>.jar but keeping log4j-over-slf4j-<version>.jar\n            // - Exclude batik-js to prevent conflict with the patched version of Rhino used by yuicompressor used\n            // for JSX. See http://jira.xwiki.org/jira/browse/XWIKI-6151 for more details.\n            new ExcludesArtifactFilter(Arrays.asList(\"org.apache.xmlgraphic:batik-js\",\n                \"commons-logging:commons-logging\", \"commons-logging:commons-logging-api\", \"log4j:log4j\"))));\n\n        ArtifactResolutionRequest request = new ArtifactResolutionRequest()\n            .setArtifact(this.project.getArtifact())\n            .setArtifactDependencies(artifacts)\n            .setCollectionFilter(filter)\n            .setRemoteRepositories(this.remoteRepositories)\n            .setLocalRepository(this.localRepository)\n            .setManagedVersionMap(getManagedVersionMap())\n            .setResolveRoot(false);\n        ArtifactResolutionResult resolutionResult = this.repositorySystem.resolve(request);\n        if(resolutionResult.hasExceptions()){\n            throw new MojoExecutionException(String.format(\"Failed to resolve artifacts [%s]\", artifacts,\n                resolutionResult.getExceptions().get(0)));\n        }\n\n        return resolutionResult.getArtifacts();\n    }","commit_id":"70b4841f53f038960ae6b99276f14b285239e652","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private MavenProject getTopLevelPOMProject() throws MojoExecutionException\n    {\n        MavenProject pomProject;\n        Artifact pomArtifact = this.repositorySystem.createProjectArtifact(\n            \"org.xwiki.commons\", \"xwiki-commons\", this.getXWikiCommonsVersion());\n        try {\n            ProjectBuildingRequest request = new DefaultProjectBuildingRequest()\n                .setRepositorySession(this.repositorySystemSession);\n\n            // We don't want to execute any plugin here\n            request.setProcessPlugins(false);\n            // It's not this plugin job to validate this pom.xml\n            request.setValidationLevel(ModelBuildingRequest.VALIDATION_LEVEL_MINIMAL);\n\n            ProjectBuildingResult result = this.projectBuilder.build(pomArtifact, request);\n            pomProject = result.getProject();\n        } catch (ProjectBuildingException e) {\n            throw new MojoExecutionException(String.format(\"Failed to build project for [%s]\", pomArtifact), e);\n        }\n        return pomProject;\n    }","id":56766,"modified_method":"private MavenProject getTopLevelPOMProject() throws MojoExecutionException\n    {\n        return getMavenProject(this.repositorySystem.createProjectArtifact(\n            \"org.xwiki.commons\", \"xwiki-commons\", getXWikiCommonsVersion()));\n    }","commit_id":"70b4841f53f038960ae6b99276f14b285239e652","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private Artifact resolveArtifactItem(ArtifactItem artifactItem) throws MojoExecutionException\n    {\n        // Resolve the version and the type:\n        // - if specified in the artifactItem, use them\n        // - if not specified look for them in the project dependencies\n        String version = artifactItem.getVersion();\n        String type = artifactItem.getType();\n        if (version == null || type == null) {\n            Map<String, Artifact> artifacts = this.project.getArtifactMap();\n            String key = ArtifactUtils.versionlessKey(artifactItem.getGroupId(), artifactItem.getArtifactId());\n            if (artifacts.containsKey(key)) {\n                if (version == null) {\n                    version = artifacts.get(key).getVersion();\n                }\n                if (type == null) {\n                    type = artifacts.get(key).getType();\n                }\n            } else {\n                // Default to the platform version\n                if (version == null) {\n                    version = this.platformVersion;\n                }\n                // Default to JAR\n                if (type == null) {\n                    type = \"jar\";\n                }\n            }\n        }\n\n        // Resolve the artifact\n        Artifact artifact = this.repositorySystem.createArtifact(\n            artifactItem.getGroupId(), artifactItem.getArtifactId(), version, \"\", type);\n        resolveArtifact(artifact);\n        return artifact;\n    }","id":56767,"modified_method":"private Artifact resolveArtifactItem(ArtifactItem artifactItem) throws MojoExecutionException\n    {\n        // Resolve the version and the type:\n        // - if specified in the artifactItem, use them\n        // - if not specified look for them in the project dependencies\n        String version = artifactItem.getVersion();\n        String type = artifactItem.getType();\n        if (version == null || type == null) {\n            Map<String, Artifact> artifacts = this.project.getArtifactMap();\n            String key = ArtifactUtils.versionlessKey(artifactItem.getGroupId(), artifactItem.getArtifactId());\n            if (artifacts.containsKey(key)) {\n                if (version == null) {\n                    version = artifacts.get(key).getVersion();\n                }\n                if (type == null) {\n                    type = artifacts.get(key).getType();\n                }\n            } else {\n                // Default to the platform version\n                if (version == null) {\n                    version = getXWikiPlatformVersion();\n                }\n                // Default to JAR\n                if (type == null) {\n                    type = \"jar\";\n                }\n            }\n        }\n\n        // Resolve the artifact\n        Artifact artifact = this.repositorySystem.createArtifact(\n            artifactItem.getGroupId(), artifactItem.getArtifactId(), version, \"\", type);\n        resolveArtifact(artifact);\n        return artifact;\n    }","commit_id":"70b4841f53f038960ae6b99276f14b285239e652","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private Collection<Artifact> resolveJarArtifacts() throws MojoExecutionException\n    {\n        Set<Artifact> artifactsToResolve = this.project.getArtifacts();\n\n        // Add mandatory dependencies if they're not explicitly specified.\n        artifactsToResolve.addAll(getMandatoryJarArtifacts());\n\n        // Resolve all artifacts transitively in one go.\n        Set<Artifact> resolvedArtifacts = resolveTransitively(artifactsToResolve);\n\n        // Remove the non JAR artifacts. Note that we need to include non JAR artifacts before the transitive resolve\n        // because for example some XARs mayb depend on JARs and we need those JARs to be packaged!\n        Set<Artifact> jarArtifacts = new HashSet<Artifact>();\n        for (Artifact artifact : resolvedArtifacts) {\n            if (artifact.getType().equals(\"jar\")) {\n                jarArtifacts.add(artifact);\n            }\n        }\n\n        return jarArtifacts;\n    }","id":56768,"modified_method":"private Collection<Artifact> resolveJarArtifacts() throws MojoExecutionException\n    {\n        Set<Artifact> mys = resolveTransitively(Collections.singleton(this.repositorySystem.createArtifact(\"org.xwiki.platform\", \"xwiki-platform-chart-renderer\", \"5.0-SNAPSHOT\", \"jar\")));\n\n        Set<Artifact> artifactsToResolve = this.project.getArtifacts();\n\n        // Add mandatory dependencies if they're not explicitly specified.\n        artifactsToResolve.addAll(getMandatoryJarArtifacts());\n\n        // Resolve all artifacts transitively in one go.\n        Set<Artifact> resolvedArtifacts = resolveTransitively(artifactsToResolve);\n\n        // Remove the non JAR artifacts. Note that we need to include non JAR artifacts before the transitive resolve\n        // because for example some XARs mayb depend on JARs and we need those JARs to be packaged!\n        Set<Artifact> jarArtifacts = new HashSet<Artifact>();\n        for (Artifact artifact : resolvedArtifacts) {\n            if (artifact.getType().equals(\"jar\")) {\n                jarArtifacts.add(artifact);\n            }\n        }\n\n        return jarArtifacts;\n    }","commit_id":"70b4841f53f038960ae6b99276f14b285239e652","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private Artifact resolveJettyArtifact() throws MojoExecutionException\n    {\n        Artifact jettyArtifact = null;\n\n        Set<Artifact> artifacts = this.project.getArtifacts();\n        if (artifacts != null) {\n            for (Artifact artifact : artifacts) {\n                if (artifact.getType().equals(\"zip\")\n                    && artifact.getArtifactId().equals(\"xwiki-platform-tool-jetty-resources\")) {\n                    jettyArtifact = artifact;\n                    break;\n                }\n            }\n        }\n\n        // If the Jetty artifact wasn't defined, try to resolve the default Jetty artifact\n        if (jettyArtifact == null) {\n            jettyArtifact = this.repositorySystem.createArtifact(\n                \"org.xwiki.platform\", \"xwiki-platform-tool-jetty-resources\", this.platformVersion, \"\", \"zip\");\n        }\n\n        if (jettyArtifact != null) {\n            resolveArtifact(jettyArtifact);\n        } else {\n            throw new MojoExecutionException(\"Failed to locate the Jetty artifact in either the project \"\n                + \"dependency list or using the specific [xwiki-platform-tool-jetty-resources] artifact name\");\n        }\n\n        return jettyArtifact;\n    }","id":56769,"modified_method":"private Artifact resolveJettyArtifact() throws MojoExecutionException\n    {\n        Artifact jettyArtifact = null;\n\n        Set<Artifact> artifacts = this.project.getArtifacts();\n        if (artifacts != null) {\n            for (Artifact artifact : artifacts) {\n                if (artifact.getType().equals(\"zip\")\n                    && artifact.getArtifactId().equals(\"xwiki-platform-tool-jetty-resources\")) {\n                    jettyArtifact = artifact;\n                    break;\n                }\n            }\n        }\n\n        // If the Jetty artifact wasn't defined, try to resolve the default Jetty artifact\n        if (jettyArtifact == null) {\n            jettyArtifact = this.repositorySystem.createArtifact(\n                \"org.xwiki.platform\", \"xwiki-platform-tool-jetty-resources\", getXWikiPlatformVersion(), \"\", \"zip\");\n        }\n\n        if (jettyArtifact != null) {\n            resolveArtifact(jettyArtifact);\n        } else {\n            throw new MojoExecutionException(\"Failed to locate the Jetty artifact in either the project \"\n                + \"dependency list or using the specific [xwiki-platform-tool-jetty-resources] artifact name\");\n        }\n\n        return jettyArtifact;\n    }","commit_id":"70b4841f53f038960ae6b99276f14b285239e652","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private void generateConfigurationFiles(File configurationFileTargetDirectory) throws MojoExecutionException\n    {\n        VelocityContext context = createVelocityContext();\n        Artifact configurationResourcesArtifact = this.repositorySystem.createArtifact(\n            \"org.xwiki.platform\", \"xwiki-platform-tool-configuration-resources\", this.platformVersion, \"\", \"jar\");\n        resolveArtifact(configurationResourcesArtifact);\n\n        configurationFileTargetDirectory.mkdirs();\n\n        try {\n            JarInputStream jarInputStream =\n                new JarInputStream(new FileInputStream(configurationResourcesArtifact.getFile()));\n\n            try {\n                JarEntry entry;\n                while ((entry = jarInputStream.getNextJarEntry()) != null) {\n                    if (entry.getName().endsWith(\".vm\")) {\n\n                        String fileName = entry.getName().replace(\".vm\", \"\");\n                        File outputFile = new File(configurationFileTargetDirectory, fileName);\n                        OutputStreamWriter writer = new OutputStreamWriter(new FileOutputStream(outputFile));\n                        getLog().info(\"Writing config file: \" + outputFile);\n                        // Note: Init is done once even if this method is called several times...\n                        Velocity.init();\n                        Velocity.evaluate(context, writer, \"\", IOUtils.toString(jarInputStream));\n                        writer.close();\n                        jarInputStream.closeEntry();\n                    }\n                }\n            } finally {\n                // Flush and close all the streams\n                jarInputStream.close();\n            }\n        } catch (Exception e) {\n            throw new MojoExecutionException(\"Failed to extract configuration files\", e);\n        }\n    }","id":56770,"modified_method":"private void generateConfigurationFiles(File configurationFileTargetDirectory) throws MojoExecutionException\n    {\n        VelocityContext context = createVelocityContext();\n        Artifact configurationResourcesArtifact = this.repositorySystem.createArtifact(\n            \"org.xwiki.platform\", \"xwiki-platform-tool-configuration-resources\", getXWikiPlatformVersion(), \"\", \"jar\");\n        resolveArtifact(configurationResourcesArtifact);\n\n        configurationFileTargetDirectory.mkdirs();\n\n        try {\n            JarInputStream jarInputStream =\n                new JarInputStream(new FileInputStream(configurationResourcesArtifact.getFile()));\n\n            try {\n                JarEntry entry;\n                while ((entry = jarInputStream.getNextJarEntry()) != null) {\n                    if (entry.getName().endsWith(\".vm\")) {\n\n                        String fileName = entry.getName().replace(\".vm\", \"\");\n                        File outputFile = new File(configurationFileTargetDirectory, fileName);\n                        OutputStreamWriter writer = new OutputStreamWriter(new FileOutputStream(outputFile));\n                        getLog().info(\"Writing config file: \" + outputFile);\n                        // Note: Init is done once even if this method is called several times...\n                        Velocity.init();\n                        Velocity.evaluate(context, writer, \"\", IOUtils.toString(jarInputStream));\n                        writer.close();\n                        jarInputStream.closeEntry();\n                    }\n                }\n            } finally {\n                // Flush and close all the streams\n                jarInputStream.close();\n            }\n        } catch (Exception e) {\n            throw new MojoExecutionException(\"Failed to extract configuration files\", e);\n        }\n    }","commit_id":"70b4841f53f038960ae6b99276f14b285239e652","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private Set<Artifact> getMandatoryJarArtifacts() throws MojoExecutionException\n    {\n        Set<Artifact> mandatoryTopLevelArtifacts = new HashSet<Artifact>();\n\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\n            \"org.xwiki.platform\", \"xwiki-platform-oldcore\", this.platformVersion, null, \"jar\"));\n\n        // Required Plugins\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\n            \"org.xwiki.platform\", \"xwiki-platform-skin-skinx\", this.platformVersion, null, \"jar\"));\n\n        // We shouldn't need those but right now it's mandatory since they are defined in the default web.xml file we\n        // provide. We'll be able to remove them when we start using Servlet 3.0 -->\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-wysiwyg-server\", this.platformVersion, null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-wysiwyg-client\", this.platformVersion, null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-webdav-server\", this.platformVersion, null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\n            \"org.xwiki.platform\", \"xwiki-platform-rest-server\", this.platformVersion, null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\n            \"org.xwiki.platform\", \"xwiki-platform-gwt-api\", this.platformVersion, null, \"jar\"));\n\n        // Needed by platform-web but since we don't have any dep in platform-web's pom.xml at the moment (duplication\n        // issue with XE/XEM and platform-web) we need to include it here FTM... Solution: get a better maven WAR plugin\n        // with proper merge feature and then remove this...\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-uiextension-api\", this.platformVersion, null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-localization-script\", this.platformVersion, null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-localization-source-legacy\", this.platformVersion, null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-security-bridge\", this.platformVersion, null, \"jar\"));\n\n        // Ensures all logging goes through SLF4J and Logback.\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.commons\",\n            \"xwiki-commons-logging-logback\", this.getXWikiCommonsVersion(), \"compile\", \"jar\"));\n        // Get the logging artifact versions from the top level XWiki Commons POM\n        MavenProject pomProject = getTopLevelPOMProject();\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.slf4j\", \"jcl-over-slf4j\",\n            getDependencyManagementVersion(pomProject, \"org.slf4j\", \"jcl-over-slf4j\"), null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.slf4j\", \"log4j-over-slf4j\",\n            getDependencyManagementVersion(pomProject, \"org.slf4j\", \"log4j-over-slf4j\"), null, \"jar\"));\n\n        return mandatoryTopLevelArtifacts;\n    }","id":56771,"modified_method":"private Set<Artifact> getMandatoryJarArtifacts() throws MojoExecutionException\n    {\n        Set<Artifact> mandatoryTopLevelArtifacts = new HashSet<Artifact>();\n\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\n            \"org.xwiki.platform\", \"xwiki-platform-oldcore\", getXWikiPlatformVersion(), null, \"jar\"));\n\n        // Required Plugins\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\n            \"org.xwiki.platform\", \"xwiki-platform-skin-skinx\", getXWikiPlatformVersion(), null, \"jar\"));\n\n        // We shouldn't need those but right now it's mandatory since they are defined in the default web.xml file we\n        // provide. We'll be able to remove them when we start using Servlet 3.0 -->\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-wysiwyg-server\", getXWikiPlatformVersion(), null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-wysiwyg-client\", getXWikiPlatformVersion(), null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-webdav-server\", getXWikiPlatformVersion(), null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\n            \"org.xwiki.platform\", \"xwiki-platform-rest-server\", getXWikiPlatformVersion(), null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\n            \"org.xwiki.platform\", \"xwiki-platform-gwt-api\", getXWikiPlatformVersion(), null, \"jar\"));\n\n        // Needed by platform-web but since we don't have any dep in platform-web's pom.xml at the moment (duplication\n        // issue with XE/XEM and platform-web) we need to include it here FTM... Solution: get a better maven WAR plugin\n        // with proper merge feature and then remove this...\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-uiextension-api\", getXWikiPlatformVersion(), null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-localization-script\", getXWikiPlatformVersion(), null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-localization-source-legacy\", getXWikiPlatformVersion(), null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n            \"xwiki-platform-security-bridge\", getXWikiPlatformVersion(), null, \"jar\"));\n\n        // Ensures all logging goes through SLF4J and Logback.\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.xwiki.commons\",\n            \"xwiki-commons-logging-logback\", this.getXWikiCommonsVersion(), \"compile\", \"jar\"));\n        // Get the logging artifact versions from the top level XWiki Commons POM\n        MavenProject pomProject = getTopLevelPOMProject();\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.slf4j\", \"jcl-over-slf4j\",\n            getDependencyManagementVersion(pomProject, \"org.slf4j\", \"jcl-over-slf4j\"), null, \"jar\"));\n        mandatoryTopLevelArtifacts.add(this.repositorySystem.createArtifact(\"org.slf4j\", \"log4j-over-slf4j\",\n            getDependencyManagementVersion(pomProject, \"org.slf4j\", \"log4j-over-slf4j\"), null, \"jar\"));\n\n        return mandatoryTopLevelArtifacts;\n    }","commit_id":"70b4841f53f038960ae6b99276f14b285239e652","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @return the version of the XWiki Commons project, taken from the {@code commons.version} property, defaulting to\n     *         the current project version of this property is not defined\n     */\n    private String getXWikiCommonsVersion()\n    {\n        return this.project.getProperties().getProperty(\"commons.version\", this.platformVersion);\n    }","id":56772,"modified_method":"/**\n     * @return the version of the XWiki Commons project, taken from the {@code commons.version} property, defaulting to\n     *         the current project version of this property is not defined\n     */\n    private String getXWikiCommonsVersion()\n    {\n        return this.project.getProperties().getProperty(\"commons.version\", this.project.getVersion());\n    }","commit_id":"70b4841f53f038960ae6b99276f14b285239e652","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public void execute() throws MojoExecutionException, MojoFailureException\n    {\n        // If ${platform.version} is not defined, use project version as default\n        if (this.platformVersion == null || \"\".equals(this.platformVersion)) {\n            this.platformVersion = this.project.getVersion();\n        }\n        getLog().info(\"Using platform version: \" + this.platformVersion);\n\n        // Step 1: Expand Jetty resources into the package output directory.\n        getLog().info(\"Expanding Jetty Resources ...\");\n        expandJettyDistribution();\n\n        // Step 2: Get the WAR dependencies and expand them in the package output directory.\n        getLog().info(\"Expanding WAR dependencies ...\");\n        File webappsDirectory = new File(this.outputPackageDirectory, \"webapps\");\n        for (Map.Entry<String, Artifact> warArtifactEntry : resolveWarArtifacts().entrySet()) {\n            getLog().info(\"  ... Unzipping WAR: \" + warArtifactEntry.getValue().getFile());\n            unzip(warArtifactEntry.getValue().getFile(), new File(webappsDirectory, warArtifactEntry.getKey()));\n        }\n\n        // Step 3: Copy all JARs dependencies to the expanded WAR directory in WEB-INF/lib\n        getLog().info(\"Copying JAR dependencies ...\");\n        File xwikiWebappDirectory = new File(webappsDirectory, \"xwiki\");\n        File webInfDirectory = new File(xwikiWebappDirectory, \"WEB-INF\");\n        File libDirectory = new File(webInfDirectory, \"lib\");\n        createDirectory(libDirectory);\n        for (Artifact artifact : resolveJarArtifacts()) {\n            getLog().info(\"  ... Copying JAR: \" + artifact.getFile());\n            copyFile(artifact.getFile(), libDirectory);\n        }\n\n        // Step 4: Copy compiled classes in the WEB-INF/Classes directory. This allows the tests to provide custom\n        // code, for example to override existing components for the test purpose. As an example the link\n        // checker might want to override the HTTP Checker component so that checks are not done over the\n        // internet since the tests need to execute in a stable environment to prevent false positives.\n        getLog().info(\"Copying Java Classes ...\");\n        File classesDirectory = new File(webInfDirectory, \"classes\");\n        if (this.outputClassesDirectory.exists()) {\n            copyDirectory(this.outputClassesDirectory, classesDirectory);\n        }\n\n        // Step 5: Generate and copy config files.\n        getLog().info(\"Copying Configuration files ...\");\n        generateConfigurationFiles(webInfDirectory);\n\n        // Step 6: Copy HSQLDB JDBC Driver\n        getLog().info(\"Copying HSQLDB JDBC Driver JAR ...\");\n        Artifact hsqldbArtifact = resolveHSQLDBArtifact();\n        copyFile(hsqldbArtifact.getFile(), libDirectory);\n\n        // Step 7: Unzip the specified Skins. If no skin is specified then unzip the Colibri skin only.\n        getLog().info(\"Copying Skins ...\");\n        File skinsDirectory = new File(xwikiWebappDirectory, \"skins\");\n        if (this.skinArtifactItems != null) {\n            for (SkinArtifactItem skinArtifactItem : this.skinArtifactItems) {\n                Artifact skinArtifact = resolveArtifactItem(skinArtifactItem);\n                unzip(skinArtifact.getFile(), skinsDirectory);\n            }\n        } else {\n            Artifact colibriArtifact =\n                resolveArtifact(\"org.xwiki.platform\", \"xwiki-platform-colibri\", this.platformVersion, \"zip\");\n            unzip(colibriArtifact.getFile(), skinsDirectory);\n        }\n\n        // Step 8: Import specified XAR files into the database\n        getLog().info(\n            String.format(\"Import XAR dependencies %s...\", this.importUser == null ? \"as a backup pack\"\n                : \"using user [\" + this.importUser + \"]\"));\n        importXARs(webInfDirectory);\n    }","id":56773,"modified_method":"@Override\n    public void execute() throws MojoExecutionException, MojoFailureException\n    {\n        getLog().info(\"Using platform version: \" + getXWikiPlatformVersion());\n\n        // Step 1: Expand Jetty resources into the package output directory.\n        getLog().info(\"Expanding Jetty Resources ...\");\n        expandJettyDistribution();\n\n        // Step 2: Get the WAR dependencies and expand them in the package output directory.\n        getLog().info(\"Expanding WAR dependencies ...\");\n        File webappsDirectory = new File(this.outputPackageDirectory, \"webapps\");\n        for (Map.Entry<String, Artifact> warArtifactEntry : resolveWarArtifacts().entrySet()) {\n            getLog().info(\"  ... Unzipping WAR: \" + warArtifactEntry.getValue().getFile());\n            unzip(warArtifactEntry.getValue().getFile(), new File(webappsDirectory, warArtifactEntry.getKey()));\n        }\n\n        // Step 3: Copy all JARs dependencies to the expanded WAR directory in WEB-INF/lib\n        getLog().info(\"Copying JAR dependencies ...\");\n        File xwikiWebappDirectory = new File(webappsDirectory, \"xwiki\");\n        File webInfDirectory = new File(xwikiWebappDirectory, \"WEB-INF\");\n        File libDirectory = new File(webInfDirectory, \"lib\");\n        createDirectory(libDirectory);\n        for (Artifact artifact : resolveJarArtifacts()) {\n            getLog().info(\"  ... Copying JAR: \" + artifact.getFile());\n            copyFile(artifact.getFile(), libDirectory);\n        }\n\n        // Step 4: Copy compiled classes in the WEB-INF/Classes directory. This allows the tests to provide custom\n        // code, for example to override existing components for the test purpose. As an example the link\n        // checker might want to override the HTTP Checker component so that checks are not done over the\n        // internet since the tests need to execute in a stable environment to prevent false positives.\n        getLog().info(\"Copying Java Classes ...\");\n        File classesDirectory = new File(webInfDirectory, \"classes\");\n        if (this.outputClassesDirectory.exists()) {\n            copyDirectory(this.outputClassesDirectory, classesDirectory);\n        }\n\n        // Step 5: Generate and copy config files.\n        getLog().info(\"Copying Configuration files ...\");\n        generateConfigurationFiles(webInfDirectory);\n\n        // Step 6: Copy HSQLDB JDBC Driver\n        getLog().info(\"Copying HSQLDB JDBC Driver JAR ...\");\n        Artifact hsqldbArtifact = resolveHSQLDBArtifact();\n        copyFile(hsqldbArtifact.getFile(), libDirectory);\n\n        // Step 7: Unzip the specified Skins. If no skin is specified then unzip the Colibri skin only.\n        getLog().info(\"Copying Skins ...\");\n        File skinsDirectory = new File(xwikiWebappDirectory, \"skins\");\n        if (this.skinArtifactItems != null) {\n            for (SkinArtifactItem skinArtifactItem : this.skinArtifactItems) {\n                Artifact skinArtifact = resolveArtifactItem(skinArtifactItem);\n                unzip(skinArtifact.getFile(), skinsDirectory);\n            }\n        } else {\n            Artifact colibriArtifact =\n                resolveArtifact(\"org.xwiki.platform\", \"xwiki-platform-colibri\", getXWikiPlatformVersion(), \"zip\");\n            unzip(colibriArtifact.getFile(), skinsDirectory);\n        }\n\n        // Step 8: Import specified XAR files into the database\n        getLog().info(\n            String.format(\"Import XAR dependencies %s...\", this.importUser == null ? \"as a backup pack\"\n                : \"using user [\" + this.importUser + \"]\"));\n        importXARs(webInfDirectory);\n    }","commit_id":"70b4841f53f038960ae6b99276f14b285239e652","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private Map<String, Artifact> resolveWarArtifacts() throws MojoExecutionException\n    {\n        Map<String, Artifact> warArtifacts = new HashMap<String, Artifact>();\n\n        Set<Artifact> artifacts = this.project.getArtifacts();\n        if (artifacts != null) {\n            for (Artifact artifact : artifacts) {\n                if (artifact.getType().equals(\"war\")) {\n                    String id;\n                    if (artifact.getArtifactId().equals(\"xwiki-platform-web\")) {\n                        id = \"xwiki\";\n                    } else if (artifact.getArtifactId().equals(\"xwiki-platform-tool-rootwebapp\")) {\n                        id = \"root\";\n                    } else {\n                        id = artifact.getArtifactId();\n                    }\n                    warArtifacts.put(id, artifact);\n                    break;\n                }\n            }\n        }\n\n        // If the WAR artifacts weren't defined, try to resolve the default Web artifacts.\n        if (warArtifacts.isEmpty()) {\n            warArtifacts.put(\"xwiki\", this.repositorySystem.createArtifact(\"org.xwiki.platform\", \"xwiki-platform-web\",\n                this.platformVersion, \"\", \"war\"));\n            warArtifacts.put(\"root\", this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n                \"xwiki-platform-tool-rootwebapp\", this.platformVersion, \"\", \"war\"));\n        }\n\n        if (!warArtifacts.isEmpty()) {\n            for (Artifact warArtifact : warArtifacts.values()) {\n                resolveArtifact(warArtifact);\n            }\n        } else {\n            throw new MojoExecutionException(\"Failed to locate any XWiki WAR artifact in either the project \"\n                + \"dependency list or using the specific [xwiki-platform-web]/[xwiki-platform-tool-rootwebapp] \"\n                + \"artifact names\");\n        }\n\n        return warArtifacts;\n    }","id":56774,"modified_method":"private Map<String, Artifact> resolveWarArtifacts() throws MojoExecutionException\n    {\n        Map<String, Artifact> warArtifacts = new HashMap<String, Artifact>();\n\n        Set<Artifact> artifacts = this.project.getArtifacts();\n        if (artifacts != null) {\n            for (Artifact artifact : artifacts) {\n                if (artifact.getType().equals(\"war\")) {\n                    String id;\n                    if (artifact.getArtifactId().equals(\"xwiki-platform-web\")) {\n                        id = \"xwiki\";\n                    } else if (artifact.getArtifactId().equals(\"xwiki-platform-tool-rootwebapp\")) {\n                        id = \"root\";\n                    } else {\n                        id = artifact.getArtifactId();\n                    }\n                    warArtifacts.put(id, artifact);\n                    break;\n                }\n            }\n        }\n\n        // If the WAR artifacts weren't defined, try to resolve the default Web artifacts.\n        if (warArtifacts.isEmpty()) {\n            warArtifacts.put(\"xwiki\", this.repositorySystem.createArtifact(\"org.xwiki.platform\", \"xwiki-platform-web\",\n                getXWikiPlatformVersion(), \"\", \"war\"));\n            warArtifacts.put(\"root\", this.repositorySystem.createArtifact(\"org.xwiki.platform\",\n                \"xwiki-platform-tool-rootwebapp\", getXWikiPlatformVersion(), \"\", \"war\"));\n        }\n\n        if (!warArtifacts.isEmpty()) {\n            for (Artifact warArtifact : warArtifacts.values()) {\n                resolveArtifact(warArtifact);\n            }\n        } else {\n            throw new MojoExecutionException(\"Failed to locate any XWiki WAR artifact in either the project \"\n                + \"dependency list or using the specific [xwiki-platform-web]/[xwiki-platform-tool-rootwebapp] \"\n                + \"artifact names\");\n        }\n\n        return warArtifacts;\n    }","commit_id":"70b4841f53f038960ae6b99276f14b285239e652","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private MavenProject getMavenProject(Artifact artifact) throws MojoExecutionException\n    {\n        MavenProject pomProject;\n        try {\n            ProjectBuildingRequest request = new DefaultProjectBuildingRequest();\n            request.setRepositorySession(this.repositorySystemSession);\n            ProjectBuildingResult result = this.projectBuilder.build(artifact, request);\n            pomProject = result.getProject();\n        } catch (ProjectBuildingException e) {\n            throw new MojoExecutionException(String.format(\"Failed to build project for [%s]\", artifact), e);\n        }\n\n        return pomProject;\n    }","id":56775,"modified_method":"private MavenProject getMavenProject(Artifact artifact) throws MojoExecutionException\n    {\n        Artifact pomArtifact =\n            this.repositorySystem.createProjectArtifact(artifact.getGroupId(), artifact.getArtifactId(),\n                artifact.getVersion());\n\n        try {\n            ProjectBuildingRequest request =\n                new DefaultProjectBuildingRequest().setRepositorySession(this.repositorySystemSession);\n            request.setProcessPlugins(false);\n            request.setValidationLevel(ModelBuildingRequest.VALIDATION_LEVEL_MINIMAL);\n\n            ProjectBuildingResult result = this.projectBuilder.build(pomArtifact, request);\n\n            return result.getProject();\n        } catch (ProjectBuildingException e) {\n            throw new MojoExecutionException(String.format(\"Failed to build project for [%s]\", pomArtifact), e);\n        }\n    }","commit_id":"88c0946c97f548af7543076ce812309d623c5a51","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"private MavenProject getMavenProject(Artifact artifact) throws MojoExecutionException\n    {\n        MavenProject pomProject;\n        try {\n            ProjectBuildingRequest request = new DefaultProjectBuildingRequest();\n            request.setRepositorySession(this.repositorySystemSession);\n            ProjectBuildingResult result = this.projectBuilder.build(artifact, request);\n            pomProject = result.getProject();\n        } catch (ProjectBuildingException e) {\n            throw new MojoExecutionException(String.format(\"Failed to build project for [%s]\", artifact), e);\n        }\n\n        return pomProject;\n    }","id":56776,"modified_method":"private MavenProject getMavenProject(Artifact artifact) throws MojoExecutionException\n    {\n        Artifact pomArtifact =\n            this.repositorySystem.createProjectArtifact(artifact.getGroupId(), artifact.getArtifactId(),\n                artifact.getVersion());\n\n        try {\n            ProjectBuildingRequest request =\n                new DefaultProjectBuildingRequest().setRepositorySession(this.repositorySystemSession);\n            request.setProcessPlugins(false);\n            request.setValidationLevel(ModelBuildingRequest.VALIDATION_LEVEL_MINIMAL);\n\n            ProjectBuildingResult result = this.projectBuilder.build(pomArtifact, request);\n\n            return result.getProject();\n        } catch (ProjectBuildingException e) {\n            throw new MojoExecutionException(String.format(\"Failed to build project for [%s]\", pomArtifact), e);\n        }\n    }","commit_id":"be4b09a6581e2b188cfa9922fdeb694639f46b02","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public static serverObjects respond(httpHeader header, serverObjects post, serverSwitch env) {\r\n\t\tplasmaSwitchboard switchboard = (plasmaSwitchboard) env;\r\n\t\tserverObjects prop = new serverObjects();\r\n\t\tblogBoard.entry page = null;\r\n\t\t\r\n\t\tboolean hasRights = switchboard.verifyAuthentication(header, true);\r\n\r\n        if(hasRights) prop.put(\"mode_admin\",1);\r\n        else prop.put(\"mode_admin\",0);\r\n\r\n        if (post == null) {\r\n            post = new serverObjects();\r\n            post.put(\"page\", \"blog_default\");\r\n        }\r\n\r\n        if(!hasRights){\r\n            userDB.Entry userentry = switchboard.userDB.proxyAuth((String)header.get(\"Authorization\", \"xxxxxx\"));\r\n            if(userentry != null && userentry.hasBlogRight()){\r\n                hasRights=true;\r\n            }\r\n            //opens login window if login link is clicked - contrib [MN]\r\n            else if(post.containsKey(\"login\")){\r\n                prop.put(\"AUTHENTICATE\",\"admin log-in\");\r\n            }\r\n\t\t}\r\n\r\n\t\tString pagename = post.get(\"page\", \"blog_default\");\r\n\t    String ip = post.get(\"CLIENTIP\", \"127.0.0.1\");\r\n\t    String author = post.get(\"author\", \"anonymous\");\r\n\t\tif (author.equals(\"anonymous\")) {\r\n\t    \tauthor = switchboard.blogDB.guessAuthor(ip);\r\n\t    \tif (author == null) {\r\n\t    \t\tif (de.anomic.yacy.yacyCore.seedDB.mySeed == null)\r\n\t    \t\t\tauthor = \"anonymous\";\r\n\t        \telse\r\n\t        \t\tauthor = de.anomic.yacy.yacyCore.seedDB.mySeed.get(\"Name\", \"anonymous\");\r\n\t        }\r\n\t    }\r\n\r\n\t\tif(hasRights && post.containsKey(\"delete\") && post.get(\"delete\").equals(\"sure\")) {\r\n\t\t\tswitchboard.blogDB.delete(pagename);\r\n\t\t}\r\n\r\n\t\tif (post.containsKey(\"submit\") && (hasRights)) {\r\n\t\t\t// store a new/edited blog-entry\r\n\t\t\tbyte[] content;\r\n\t\t\ttry {\r\n\t\t\t\tcontent = post.get(\"content\", \"\").getBytes(\"UTF-8\");\r\n\t\t\t} catch (UnsupportedEncodingException e) {\r\n\t\t\t\tcontent = post.get(\"content\", \"\").getBytes();\r\n\t\t\t}\r\n\r\n\t\t\tDate date = null;\r\n\t\t\t\r\n\t\t\t//set name for new entry or date for old entry\r\n\t\t\tif(pagename.equals(\"blog_default\"))\r\n\t\t\t\tpagename = String.valueOf(System.currentTimeMillis());\r\n\t\t\telse {\r\n\t\t\t\tpage = switchboard.blogDB.read(pagename); //must I read it again after submitting?\r\n\t\t\t\tdate = page.date();\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tswitchboard.blogDB.write(switchboard.blogDB.newEntry(pagename, post.get(\"subject\",\"\"), author, ip, date, content));\r\n\t\t\t} catch (IOException e) {}\r\n\t\t}\r\n\r\n\t\tpage = switchboard.blogDB.read(pagename); //maybe \"if(page == null)\"\r\n\r\n\t\tif (post.containsKey(\"edit\")) {\r\n\t\t    //edit an entry\r\n\t\t\tif(hasRights) {\r\n\t\t\t\ttry {\r\n\t\t\t        prop.put(\"mode\", 1); //edit\r\n\t\t\t        prop.put(\"mode_author\", author);\r\n\t\t\t        prop.put(\"mode_pageid\", page.key());\r\n\t\t\t        prop.put(\"mode_subject\", page.subject());\r\n\t\t\t        prop.put(\"mode_page-code\", new String(page.page(), \"UTF-8\").replaceAll(\"<\",\"&lt;\").replaceAll(\">\",\"&gt;\"));\r\n\t\t\t    } catch (UnsupportedEncodingException e) {}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tprop.put(\"mode\",3); //access denied (no rights)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(post.containsKey(\"preview\")) {\r\n\t\t\t//preview the page\r\n\t\t\tif(hasRights) {\r\n\t\t\t\twikiCode wikiTransformer=new wikiCode(switchboard);\r\n\t            prop.put(\"mode\", 2);//preview\r\n\t            prop.put(\"mode_pageid\", pagename);\r\n\t            prop.put(\"mode_author\", author);\r\n\t            prop.put(\"mode_subject\", post.get(\"subject\",\"\"));\r\n\t            prop.put(\"mode_date\", dateString(new Date()));\r\n\t            prop.put(\"mode_page\", wikiTransformer.transform(post.get(\"content\", \"\")));\r\n\t            prop.put(\"mode_page-code\", post.get(\"content\", \"\").replaceAll(\"<\",\"&lt;\").replaceAll(\">\",\"&gt;\"));\r\n\t\t\t}\r\n\t\t\telse prop.put(\"mode\",3); //access denied (no rights)\r\n\t\t}\r\n\t\telse if(post.containsKey(\"delete\") && post.get(\"delete\").equals(\"try\")) {\r\n\t\t\tif(hasRights) {\r\n\t\t\t\tprop.put(\"mode\",4);\r\n\t\t\t\tprop.put(\"mode_pageid\",pagename);\r\n\t\t\t\tprop.put(\"mode_author\",page.author());\r\n\t\t\t\tprop.put(\"mode_subject\",page.subject());\r\n\t\t\t}\r\n\t\t\telse prop.put(\"mode\",3); //access denied (no rights)\r\n\t\t}\r\n\t\telse {\r\n\t        wikiCode wikiTransformer=new wikiCode(switchboard);\r\n\t\t    // show blog-entry/entries\r\n\t        prop.put(\"mode\", 0); //viewing\r\n\t        if(pagename.equals(\"blog_default\")) {\r\n\t        \t//index all entries\r\n\t        \ttry {\r\n\t        \t\tIterator i = switchboard.blogDB.keys(false);\r\n\t        \t\tString pageid;\r\n\t        \t\tblogBoard.entry entry;\r\n\t        \t\tint count = 0; //counts how many entries are shown to the user\r\n\t        \t\tint start = post.getInt(\"start\",0); //indicates from where entries should be shown\r\n\t        \t\tint num   = post.getInt(\"num\",20);  //indicates how many entries should be shown\r\n\t        \t\tint nextstart = start+num;\t\t//indicates the starting offset for next results\r\n\t        \t\twhile(i.hasNext()) {\r\n\t        \t\t\tif(count >= num && num > 0)\r\n\t        \t\t\t\tbreak;\r\n\t        \t\t\tpageid = (String) i.next();\r\n\t        \t\t\tif(0 < start--)\r\n\t        \t\t\t\tcontinue;\r\n\t        \t\t\tentry = switchboard.blogDB.read(pageid);\r\n\t        \t\t\tprop.put(\"mode_entries_\"+count+\"_pageid\",entry.key());\r\n\t        \t\t\tprop.put(\"mode_entries_\"+count+\"_subject\", entry.subject());\r\n\t        \t\t\tprop.put(\"mode_entries_\"+count+\"_author\", entry.author());\r\n\t        \t\t\tprop.put(\"mode_entries_\"+count+\"_date\", dateString(entry.date()));\r\n\t        \t\t\tprop.put(\"mode_entries_\"+count+\"_page\", wikiTransformer.transform(entry.page()));\r\n\t        \t\t\tif(hasRights) {\r\n\t        \t\t\t\tprop.put(\"mode_entries_\"+count+\"_admin\", 1);\r\n\t        \t\t\t\tprop.put(\"mode_entries_\"+count+\"_admin_pageid\",entry.key());\r\n\t        \t\t\t}\r\n\t        \t\t\telse prop.put(\"mode_entries_\"+count+\"_admin\", 0);\r\n\t        \t\t\t++count;\r\n\t        \t\t}\r\n\t        \t\tprop.put(\"mode_entries\",count);\r\n\t        \t\tif(i.hasNext()) {\r\n\t        \t\t\tprop.put(\"mode_moreentries\",1); //more entries are availible\r\n\t        \t\t\tprop.put(\"mode_moreentries_start\",nextstart);\r\n\t        \t\t\tprop.put(\"mode_moreentries_num\",num);\r\n\t        \t\t}\r\n\t        \t\telse prop.put(\"moreentries\",0);\r\n\t        \t} catch (IOException e) {\r\n\r\n\t        \t}\r\n\t        }\r\n\t        else {\r\n\t        \t//only show 1 entry\r\n\t        \tprop.put(\"mode_entries\",1);\r\n\t        \tprop.put(\"mode_entries_0_pageid\", page.key());\r\n\t        \tprop.put(\"mode_entries_0_subject\", page.subject());\r\n\t        \tprop.put(\"mode_entries_0_author\", page.author());\r\n\t        \tprop.put(\"mode_entries_0_date\", dateString(page.date()));\r\n\t        \tprop.put(\"mode_entries_0_page\", wikiTransformer.transform(page.page()));\r\n\t        \tif(hasRights) {\r\n    \t\t\t\tprop.put(\"mode_entries_0_admin\", 1);\r\n    \t\t\t\tprop.put(\"mode_entries_0_admin_pageid\",page.key());\r\n    \t\t\t}\r\n\t        }\r\n\t\t}\r\n\r\n\t\t// return rewrite properties\r\n\t\treturn prop;\r\n\t}","id":56777,"modified_method":"public static serverObjects respond(httpHeader header, serverObjects post, serverSwitch env) {\r\n\t\tplasmaSwitchboard switchboard = (plasmaSwitchboard) env;\r\n\t\tserverObjects prop = new serverObjects();\r\n\t\tblogBoard.entry page = null;\r\n\t\t\r\n\t\tboolean hasRights = switchboard.verifyAuthentication(header, true);\r\n\r\n        if(hasRights) prop.put(\"mode_admin\",1);\r\n        else prop.put(\"mode_admin\",0);\r\n\r\n        if (post == null) {\r\n            post = new serverObjects();\r\n            post.put(\"page\", \"blog_default\");\r\n        }\r\n\r\n        if(!hasRights){\r\n            userDB.Entry userentry = switchboard.userDB.proxyAuth((String)header.get(\"Authorization\", \"xxxxxx\"));\r\n            if(userentry != null && userentry.hasBlogRight()){\r\n                hasRights=true;\r\n            }\r\n            //opens login window if login link is clicked - contrib [MN]\r\n            else if(post.containsKey(\"login\")){\r\n                prop.put(\"AUTHENTICATE\",\"admin log-in\");\r\n            }\r\n\t\t}\r\n\r\n\t\tString pagename = post.get(\"page\", \"blog_default\");\r\n\t    String ip = post.get(\"CLIENTIP\", \"127.0.0.1\");\r\n\t    String author = post.get(\"author\", \"anonymous\");\r\n\t\tif (author.equals(\"anonymous\")) {\r\n\t    \tauthor = switchboard.blogDB.guessAuthor(ip);\r\n\t    \tif (author == null) {\r\n\t    \t\tif (de.anomic.yacy.yacyCore.seedDB.mySeed == null)\r\n\t    \t\t\tauthor = \"anonymous\";\r\n\t        \telse\r\n\t        \t\tauthor = de.anomic.yacy.yacyCore.seedDB.mySeed.get(\"Name\", \"anonymous\");\r\n\t        }\r\n\t    }\r\n\r\n\t\tif(hasRights && post.containsKey(\"delete\") && post.get(\"delete\").equals(\"sure\")) {\r\n\t\t\tswitchboard.blogDB.delete(pagename);\r\n\t\t}\r\n\r\n\t\tif (post.containsKey(\"submit\") && (hasRights)) {\r\n\t\t\t// store a new/edited blog-entry\r\n\t\t\tbyte[] content;\r\n\t\t\ttry {\r\n\t\t\t\tcontent = post.get(\"content\", \"\").getBytes(\"UTF-8\");\r\n\t\t\t} catch (UnsupportedEncodingException e) {\r\n\t\t\t\tcontent = post.get(\"content\", \"\").getBytes();\r\n\t\t\t}\r\n\r\n\t\t\tDate date = null;\r\n\t\t\t\r\n\t\t\t//set name for new entry or date for old entry\r\n\t\t\tif(pagename.equals(\"blog_default\"))\r\n\t\t\t\tpagename = String.valueOf(System.currentTimeMillis());\r\n\t\t\telse {\r\n\t\t\t\tpage = switchboard.blogDB.read(pagename); //must I read it again after submitting?\r\n\t\t\t\tdate = page.date();\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tswitchboard.blogDB.write(switchboard.blogDB.newEntry(pagename, post.get(\"subject\",\"\"), author, ip, date, content));\r\n\t\t\t} catch (IOException e) {}\r\n\t\t}\r\n\r\n\t\tpage = switchboard.blogDB.read(pagename); //maybe \"if(page == null)\"\r\n\r\n\t\tif (post.containsKey(\"edit\")) {\r\n\t\t    //edit an entry\r\n\t\t\tif(hasRights) {\r\n\t\t\t\ttry {\r\n\t\t\t        prop.put(\"mode\", 1); //edit\r\n\t\t\t        prop.put(\"mode_author\", wikiCode.replaceHTML(author));\r\n\t\t\t        prop.put(\"mode_pageid\", page.key());\r\n\t\t\t        prop.put(\"mode_subject\", wikiCode.replaceHTML(page.subject()));\r\n\t\t\t        prop.put(\"mode_page-code\", new String(page.page(), \"UTF-8\").replaceAll(\"<\",\"&lt;\").replaceAll(\">\",\"&gt;\"));\r\n\t\t\t    } catch (UnsupportedEncodingException e) {}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tprop.put(\"mode\",3); //access denied (no rights)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(post.containsKey(\"preview\")) {\r\n\t\t\t//preview the page\r\n\t\t\tif(hasRights) {\r\n\t\t\t\twikiCode wikiTransformer=new wikiCode(switchboard);\r\n\t            prop.put(\"mode\", 2);//preview\r\n\t            prop.put(\"mode_pageid\", pagename);\r\n\t            prop.put(\"mode_author\", wikiCode.replaceHTML(author));\r\n\t            prop.put(\"mode_subject\", wikiCode.replaceHTML(post.get(\"subject\",\"\")));\r\n\t            prop.put(\"mode_date\", dateString(new Date()));\r\n\t            prop.put(\"mode_page\", wikiTransformer.transform(post.get(\"content\", \"\")));\r\n\t            prop.put(\"mode_page-code\", post.get(\"content\", \"\").replaceAll(\"<\",\"&lt;\").replaceAll(\">\",\"&gt;\"));\r\n\t\t\t}\r\n\t\t\telse prop.put(\"mode\",3); //access denied (no rights)\r\n\t\t}\r\n\t\telse if(post.containsKey(\"delete\") && post.get(\"delete\").equals(\"try\")) {\r\n\t\t\tif(hasRights) {\r\n\t\t\t\tprop.put(\"mode\",4);\r\n\t\t\t\tprop.put(\"mode_pageid\",pagename);\r\n\t\t\t\tprop.put(\"mode_author\",wikiCode.replaceHTML(page.author()));\r\n\t\t\t\tprop.put(\"mode_subject\",wikiCode.replaceHTML(page.subject()));\r\n\t\t\t}\r\n\t\t\telse prop.put(\"mode\",3); //access denied (no rights)\r\n\t\t}\r\n\t\telse {\r\n\t        wikiCode wikiTransformer=new wikiCode(switchboard);\r\n\t\t    // show blog-entry/entries\r\n\t        prop.put(\"mode\", 0); //viewing\r\n\t        if(pagename.equals(\"blog_default\")) {\r\n\t        \t//index all entries\r\n\t        \ttry {\r\n\t        \t\tIterator i = switchboard.blogDB.keys(false);\r\n\t        \t\tString pageid;\r\n\t        \t\tblogBoard.entry entry;\r\n\t        \t\tint count = 0; //counts how many entries are shown to the user\r\n\t        \t\tint start = post.getInt(\"start\",0); //indicates from where entries should be shown\r\n\t        \t\tint num   = post.getInt(\"num\",20);  //indicates how many entries should be shown\r\n\t        \t\tint nextstart = start+num;\t\t//indicates the starting offset for next results\r\n\t        \t\twhile(i.hasNext()) {\r\n\t        \t\t\tif(count >= num && num > 0)\r\n\t        \t\t\t\tbreak;\r\n\t        \t\t\tpageid = (String) i.next();\r\n\t        \t\t\tif(0 < start--)\r\n\t        \t\t\t\tcontinue;\r\n\t        \t\t\tentry = switchboard.blogDB.read(pageid);\r\n\t        \t\t\tprop.put(\"mode_entries_\"+count+\"_pageid\",entry.key());\r\n\t        \t\t\tprop.put(\"mode_entries_\"+count+\"_subject\", wikiCode.replaceHTML(entry.subject()));\r\n\t        \t\t\tprop.put(\"mode_entries_\"+count+\"_author\", wikiCode.replaceHTML(entry.author()));\r\n\t        \t\t\tprop.put(\"mode_entries_\"+count+\"_date\", dateString(entry.date()));\r\n\t        \t\t\tprop.put(\"mode_entries_\"+count+\"_page\", wikiTransformer.transform(entry.page()));\r\n\t        \t\t\tif(hasRights) {\r\n\t        \t\t\t\tprop.put(\"mode_entries_\"+count+\"_admin\", 1);\r\n\t        \t\t\t\tprop.put(\"mode_entries_\"+count+\"_admin_pageid\",entry.key());\r\n\t        \t\t\t}\r\n\t        \t\t\telse prop.put(\"mode_entries_\"+count+\"_admin\", 0);\r\n\t        \t\t\t++count;\r\n\t        \t\t}\r\n\t        \t\tprop.put(\"mode_entries\",count);\r\n\t        \t\tif(i.hasNext()) {\r\n\t        \t\t\tprop.put(\"mode_moreentries\",1); //more entries are availible\r\n\t        \t\t\tprop.put(\"mode_moreentries_start\",nextstart);\r\n\t        \t\t\tprop.put(\"mode_moreentries_num\",num);\r\n\t        \t\t}\r\n\t        \t\telse prop.put(\"moreentries\",0);\r\n\t        \t} catch (IOException e) {\r\n\r\n\t        \t}\r\n\t        }\r\n\t        else {\r\n\t        \t//only show 1 entry\r\n\t        \tprop.put(\"mode_entries\",1);\r\n\t        \tprop.put(\"mode_entries_0_pageid\", page.key());\r\n\t        \tprop.put(\"mode_entries_0_subject\", wikiCode.replaceHTML(page.subject()));\r\n\t        \tprop.put(\"mode_entries_0_author\", wikiCode.replaceHTML(page.author()));\r\n\t        \tprop.put(\"mode_entries_0_date\", dateString(page.date()));\r\n\t        \tprop.put(\"mode_entries_0_page\", wikiTransformer.transform(page.page()));\r\n\t        \tif(hasRights) {\r\n    \t\t\t\tprop.put(\"mode_entries_0_admin\", 1);\r\n    \t\t\t\tprop.put(\"mode_entries_0_admin_pageid\",page.key());\r\n    \t\t\t}\r\n\t        }\r\n\t\t}\r\n\r\n\t\t// return rewrite properties\r\n\t\treturn prop;\r\n\t}","commit_id":"465319caf33b1370ac1dc015f237555bbee755a9","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"private void findMethods() {\n        //find all methods \n        Method[] methods=obj.getClass().getMethods();\n        for(Method method:methods) {\n            //does method have @ManagedAttribute annotation?\n            ManagedAttribute attr=method.getAnnotation(ManagedAttribute.class);\n            if(attr != null) {\n                String methodName=method.getName();\n                if(!methodName.startsWith(\"get\") && !methodName.startsWith(\"set\")\n                   && !methodName.startsWith(\"is\")) {\n                    if(log.isWarnEnabled())\n                        log.warn(\"method name \" + methodName\n                                 + \" doesn't start with \\\"get\\\", \\\"set\\\", or \\\"is\\\"\"\n                                 + \", but is annotated with @ManagedAttribute: will be ignored\");\n                }\n                else {\n                    MBeanAttributeInfo info=null;\n                    String attributeName=null;\n                    boolean writeAttribute=false;\n                    if(methodName.startsWith(\"set\") && method.getParameterTypes().length == 1\n                       && method.getReturnType() == java.lang.Void.TYPE) { // setter\n                        attributeName=firstCharacterToLowerCase(methodName.substring(3));\n                        info=new MBeanAttributeInfo(attributeName,\n                                                    method.getParameterTypes()[0].getCanonicalName(),\n                                                    attr.description(),\n                                                    true,\n                                                    true,\n                                                    false);\n                        writeAttribute=true;\n                    }\n                    else { // getter\n                        if(method.getParameterTypes().length == 0 && method.getReturnType() != java.lang.Void.TYPE) {\n                            boolean hasSetter=atts.containsKey(attributeName);\n                            if(methodName.startsWith(\"is\")) {\n                                attributeName=firstCharacterToLowerCase(methodName.substring(2));\n                                info=new MBeanAttributeInfo(attributeName,\n                                                            method.getReturnType().getCanonicalName(),\n                                                            attr.description(),\n                                                            attr.readable(),\n                                                            hasSetter,\n                                                            true);\n                            }\n                            else {\n                                //this has to be get\n                                attributeName=firstCharacterToLowerCase(methodName.substring(3));\n                                info=new MBeanAttributeInfo(attributeName,\n                                                            method.getReturnType().getCanonicalName(),\n                                                            attr.description(),\n                                                            attr.readable(),\n                                                            hasSetter,\n                                                            false);\n                            }\n                        }\n                        else {\n                            if(log.isWarnEnabled()) {\n                                log.warn(\"Method \" + method.getName()\n                                         + \" must have a valid return type and zero parameters\");\n                            }\n                            continue;\n                        }\n                    }\n                    if(log.isDebugEnabled()) {\n                        log.debug(\"@Attr found for method \" + method.getName()\n                                  + \" and registered as \"\n                                  + attributeName);\n                    }\n\n                    AttributeEntry ae=atts.get(attributeName);\n                    if(!writeAttribute) {\n                        //we already have annotated field as read\n                        if(ae instanceof FieldAttributeEntry && ae.getInfo().isReadable()) {\n                            log.warn(\"Not adding annotated method \" + methodName\n                                     + \" since we already have read attribute\");\n                        }\n                        //we already have annotated set method\n                        else if(ae instanceof MethodAttributeEntry) {\n                            MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                            if(mae.hasSetMethod()) {\n                                atts.put(attributeName,\n                                         new MethodAttributeEntry(info, mae.getSetMethod(), method));\n                            }\n                        } //we don't have such entry \n                        else {\n                            atts.put(attributeName, new MethodAttributeEntry(info, null, method));\n                        }\n                    }\n                    else {\n                        //we already have annotated field as write\n                        if(ae instanceof FieldAttributeEntry && ae.getInfo().isWritable()) {\n                            log.warn(\"Not adding annotated method \" + methodName\n                                     + \" since we already have writable attribute\");\n                        }\n                        //we already have annotated getOrIs method\n                        else if(ae instanceof MethodAttributeEntry) {\n                            MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                            if(mae.hasIsOrGetMethod()) {\n                                atts.put(attributeName,\n                                         new MethodAttributeEntry(info,\n                                                                  method,\n                                                                  mae.getIsOrGetMethod()));\n                            }\n                        } //we don't have such entry \n                        else {\n                            atts.put(attributeName, new MethodAttributeEntry(info, method, null));\n                        }\n                    }\n                }\n            }\n            \n            //does method have @ManagedOPeration annotation?\n            ManagedOperation op=method.getAnnotation(ManagedOperation.class);\n            if(op != null) {\n                ops.add(new MBeanOperationInfo(op.description(), method));\n                if(log.isDebugEnabled()) {\n                    log.debug(\"@Operation found for method \" + method.getName());\n                }\n            }\n        }\n    }","id":56778,"modified_method":"private void findMethods() {\n        //find all methods \n        Method[] methods=obj.getClass().getMethods();\n        for(Method method:methods) {\n            //does method have @ManagedAttribute annotation?\n            ManagedAttribute attr=method.getAnnotation(ManagedAttribute.class);\n            if(attr != null) {\n                String methodName=method.getName();\n                if(!methodName.startsWith(\"get\") && !methodName.startsWith(\"set\")\n                   && !methodName.startsWith(\"is\")) {\n                    if(log.isWarnEnabled())\n                        log.warn(\"method name \" + methodName\n                                 + \" doesn't start with \\\"get\\\", \\\"set\\\", or \\\"is\\\"\"\n                                 + \", but is annotated with @ManagedAttribute: will be ignored\");\n                }\n                else {\n                    MBeanAttributeInfo info=null;\n                    String attributeName=null;\n                    boolean writeAttribute=false;\n                    if(methodName.startsWith(\"set\") && method.getParameterTypes().length == 1\n                       && method.getReturnType() == java.lang.Void.TYPE) { // setter\n                        attributeName=firstCharacterToLowerCase(methodName.substring(3));\n                        info=new MBeanAttributeInfo(attributeName,\n                                                    method.getParameterTypes()[0].getCanonicalName(),\n                                                    attr.description(),\n                                                    true,\n                                                    true,\n                                                    false);\n                        writeAttribute=true;\n                    }\n                    else { // getter\n                        if(method.getParameterTypes().length == 0 && method.getReturnType() != java.lang.Void.TYPE) {\n                            boolean hasSetter=atts.containsKey(attributeName);\n                            if(methodName.startsWith(\"is\")) {\n                                attributeName=firstCharacterToLowerCase(methodName.substring(2));\n                                info=new MBeanAttributeInfo(attributeName,\n                                                            method.getReturnType().getCanonicalName(),\n                                                            attr.description(),\n                                                            attr.readable(),\n                                                            hasSetter,\n                                                            true);\n                            }\n                            else {\n                                //this has to be get\n                                attributeName=firstCharacterToLowerCase(methodName.substring(3));\n                                info=new MBeanAttributeInfo(attributeName,\n                                                            method.getReturnType().getCanonicalName(),\n                                                            attr.description(),\n                                                            attr.readable(),\n                                                            hasSetter,\n                                                            false);\n                            }\n                        }\n                        else {\n                            if(log.isWarnEnabled()) {\n                                log.warn(\"Method \" + method.getName()\n                                         + \" must have a valid return type and zero parameters\");\n                            }\n                            continue;\n                        }\n                    }\n                    if(log.isDebugEnabled()) {\n                        log.debug(\"@Attr found for method \" + method.getName()\n                                  + \" and registered as \"\n                                  + attributeName);\n                    }\n\n                    AttributeEntry ae=atts.get(attributeName);\n                    //is it a read method?\n                    if(!writeAttribute) {\n                        //we already have annotated field as read\n                        if(ae instanceof FieldAttributeEntry && ae.getInfo().isReadable()) {\n                            log.warn(\"Not adding annotated method \" + methodName\n                                     + \" since we already have read attribute\");\n                        }\n                        //we already have annotated set method\n                        else if(ae instanceof MethodAttributeEntry) {\n                            MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                            if(mae.hasSetMethod()) {\n                                atts.put(attributeName,\n                                         new MethodAttributeEntry(info, mae.getSetMethod(), method));\n                            }\n                        } //we don't have such entry \n                        else {\n                            atts.put(attributeName, new MethodAttributeEntry(info, null, method));\n                        }\n                    }//is it a set method?\n                    else {                        \n                        if(ae instanceof FieldAttributeEntry) {\n                            //we already have annotated field as write\n                            if(ae.getInfo().isWritable()) {\n                                log.warn(\"Not adding annotated method \" + methodName\n                                         + \" since we already have writable attribute\");\n                            }\n                            else {\n                                //we already have annotated field as read\n                                //lets make the field writable\n                                Field f = ((FieldAttributeEntry)ae).getField();\n                                MBeanAttributeInfo i=new MBeanAttributeInfo(ae.getInfo().getName(),\n                                                                            f.getType().getCanonicalName(),\n                                                                            attr.description(),\n                                                                            true,\n                                                                            Modifier.isFinal(f.getModifiers())? false: true,\n                                                                            false);                               \n                                atts.put(attributeName,new FieldAttributeEntry(i,f));\n                            }\n                        }\n                        //we already have annotated getOrIs method\n                        else if(ae instanceof MethodAttributeEntry) {\n                            MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                            if(mae.hasIsOrGetMethod()) {\n                                atts.put(attributeName,\n                                         new MethodAttributeEntry(info,\n                                                                  method,\n                                                                  mae.getIsOrGetMethod()));\n                            }\n                        } //we don't have such entry \n                        else {\n                            atts.put(attributeName, new MethodAttributeEntry(info, method, null));\n                        }\n                    }\n                }\n            }\n            \n            //does method have @ManagedOPeration annotation?\n            ManagedOperation op=method.getAnnotation(ManagedOperation.class);\n            if(op != null) {\n                ops.add(new MBeanOperationInfo(op.description(), method));\n                if(log.isDebugEnabled()) {\n                    log.debug(\"@Operation found for method \" + method.getName());\n                }\n            }\n        }\n    }","commit_id":"630be435dc54934fb1dfdd778eb1cf9f070427f7","url":"https://github.com/belaban/JGroups"},{"original_method":"public ProjectJdk getJdk() {\n    if (myRootModel.isWritable() && !ApplicationManager.getApplication().isUnitTestMode()) {\n      final Project project = myRootModel.getModule().getProject();\n      return ProjectJdksModel.getInstance(project).getProjectJdks().get(myJdk);\n    }\n\n    return myJdk;\n  }","id":56779,"modified_method":"public ProjectJdk getJdk() {\n    if (ApplicationManager.getApplication().isUnitTestMode() || !myRootModel.isWritable()) return myJdk;\n    final Project project = getRootModel().getModule().getProject();\n    final ProjectJdksModel model = ProjectStructureConfigurable.getInstance(project).getJdkConfig().getJdksTreeModel();\n    return myJdkName != null ? (ProjectJdk)model.findSdk(myJdkName) : myJdk;\n  }","commit_id":"c63597ce93a59284a835f416c669baa28a8230d8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void findMethods() {\n        //find all methods \n        Method[] methods=obj.getClass().getMethods();\n        for(Method method:methods) {\n            //does method have @ManagedAttribute annotation?\n            ManagedAttribute attr=method.getAnnotation(ManagedAttribute.class);\n            if(attr != null) {\n                String methodName=method.getName();\n                if(!methodName.startsWith(\"get\") && !methodName.startsWith(\"set\")\n                   && !methodName.startsWith(\"is\")) {\n                    if(log.isWarnEnabled())\n                        log.warn(\"method name \" + methodName\n                                 + \" doesn't start with \\\"get\\\", \\\"set\\\", or \\\"is\\\"\"\n                                 + \", but is annotated with @ManagedAttribute: will be ignored\");\n                }\n                else {\n                    MBeanAttributeInfo info=null;\n                    String attributeName=null;\n                    boolean writeAttribute=false;\n                    if(methodName.startsWith(\"set\") && method.getParameterTypes().length == 1\n                       && method.getReturnType() == java.lang.Void.TYPE) { // setter\n                        attributeName=firstCharacterToLowerCase(methodName.substring(3));\n                        info=new MBeanAttributeInfo(attributeName,\n                                                    method.getParameterTypes()[0].getCanonicalName(),\n                                                    attr.description(),\n                                                    true,\n                                                    true,\n                                                    false);\n                        writeAttribute=true;\n                    }\n                    else { // getter\n                        if(method.getParameterTypes().length == 0 && method.getReturnType() != java.lang.Void.TYPE) {\n                            boolean hasSetter=atts.containsKey(attributeName);\n                            if(methodName.startsWith(\"is\")) {\n                                attributeName=firstCharacterToLowerCase(methodName.substring(2));\n                                info=new MBeanAttributeInfo(attributeName,\n                                                            method.getReturnType().getCanonicalName(),\n                                                            attr.description(),\n                                                            attr.readable(),\n                                                            hasSetter,\n                                                            true);\n                            }\n                            else {\n                                //this has to be get\n                                attributeName=firstCharacterToLowerCase(methodName.substring(3));\n                                info=new MBeanAttributeInfo(attributeName,\n                                                            method.getReturnType().getCanonicalName(),\n                                                            attr.description(),\n                                                            attr.readable(),\n                                                            hasSetter,\n                                                            false);\n                            }\n                        }\n                        else {\n                            if(log.isWarnEnabled()) {\n                                log.warn(\"Method \" + method.getName()\n                                         + \" must have a valid return type and zero parameters\");\n                            }\n                            continue;\n                        }\n                    }\n                    if(log.isDebugEnabled()) {\n                        log.debug(\"@Attr found for method \" + method.getName()\n                                  + \" and registered as \"\n                                  + attributeName);\n                    }\n\n                    AttributeEntry ae=atts.get(attributeName);\n                    if(!writeAttribute) {\n                        //we already have annotated field as read\n                        if(ae instanceof FieldAttributeEntry && ae.getInfo().isReadable()) {\n                            log.warn(\"Not adding annotated method \" + methodName\n                                     + \" since we already have read attribute\");\n                        }\n                        //we already have annotated set method\n                        else if(ae instanceof MethodAttributeEntry) {\n                            MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                            if(mae.hasSetMethod()) {\n                                atts.put(attributeName,\n                                         new MethodAttributeEntry(info, mae.getSetMethod(), method));\n                            }\n                        } //we don't have such entry \n                        else {\n                            atts.put(attributeName, new MethodAttributeEntry(info, null, method));\n                        }\n                    }\n                    else {\n                        //we already have annotated field as write\n                        if(ae instanceof FieldAttributeEntry && ae.getInfo().isWritable()) {\n                            log.warn(\"Not adding annotated method \" + methodName\n                                     + \" since we already have writable attribute\");\n                        }\n                        //we already have annotated getOrIs method\n                        else if(ae instanceof MethodAttributeEntry) {\n                            MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                            if(mae.hasIsOrGetMethod()) {\n                                atts.put(attributeName,\n                                         new MethodAttributeEntry(info,\n                                                                  method,\n                                                                  mae.getIsOrGetMethod()));\n                            }\n                        } //we don't have such entry \n                        else {\n                            atts.put(attributeName, new MethodAttributeEntry(info, method, null));\n                        }\n                    }\n                }\n            }\n            \n            //does method have @ManagedOPeration annotation?\n            ManagedOperation op=method.getAnnotation(ManagedOperation.class);\n            if(op != null) {\n                ops.add(new MBeanOperationInfo(op.description(), method));\n                if(log.isDebugEnabled()) {\n                    log.debug(\"@Operation found for method \" + method.getName());\n                }\n            }\n        }\n    }","id":56780,"modified_method":"private void findMethods() {\n        //find all methods \n        Method[] methods=obj.getClass().getMethods();\n        for(Method method:methods) {\n            //does method have @ManagedAttribute annotation?\n            ManagedAttribute attr=method.getAnnotation(ManagedAttribute.class);\n            if(attr != null) {\n                String methodName=method.getName();\n                if(!methodName.startsWith(\"get\") && !methodName.startsWith(\"set\")\n                   && !methodName.startsWith(\"is\")) {\n                    if(log.isWarnEnabled())\n                        log.warn(\"method name \" + methodName\n                                 + \" doesn't start with \\\"get\\\", \\\"set\\\", or \\\"is\\\"\"\n                                 + \", but is annotated with @ManagedAttribute: will be ignored\");\n                }\n                else {\n                    MBeanAttributeInfo info=null;\n                    String attributeName=null;\n                    boolean writeAttribute=false;\n                    if(methodName.startsWith(\"set\") && method.getParameterTypes().length == 1\n                       && method.getReturnType() == java.lang.Void.TYPE) { // setter\n                        attributeName=firstCharacterToLowerCase(methodName.substring(3));\n                        info=new MBeanAttributeInfo(attributeName,\n                                                    method.getParameterTypes()[0].getCanonicalName(),\n                                                    attr.description(),\n                                                    true,\n                                                    true,\n                                                    false);\n                        writeAttribute=true;\n                    }\n                    else { // getter\n                        if(method.getParameterTypes().length == 0 && method.getReturnType() != java.lang.Void.TYPE) {\n                            boolean hasSetter=atts.containsKey(attributeName);\n                            if(methodName.startsWith(\"is\")) {\n                                attributeName=firstCharacterToLowerCase(methodName.substring(2));\n                                info=new MBeanAttributeInfo(attributeName,\n                                                            method.getReturnType().getCanonicalName(),\n                                                            attr.description(),\n                                                            attr.readable(),\n                                                            hasSetter,\n                                                            true);\n                            }\n                            else {\n                                //this has to be get\n                                attributeName=firstCharacterToLowerCase(methodName.substring(3));\n                                info=new MBeanAttributeInfo(attributeName,\n                                                            method.getReturnType().getCanonicalName(),\n                                                            attr.description(),\n                                                            attr.readable(),\n                                                            hasSetter,\n                                                            false);\n                            }\n                        }\n                        else {\n                            if(log.isWarnEnabled()) {\n                                log.warn(\"Method \" + method.getName()\n                                         + \" must have a valid return type and zero parameters\");\n                            }\n                            continue;\n                        }\n                    }\n                    if(log.isDebugEnabled()) {\n                        log.debug(\"@Attr found for method \" + method.getName()\n                                  + \" and registered as \"\n                                  + attributeName);\n                    }\n\n                    AttributeEntry ae=atts.get(attributeName);\n                    //is it a read method?\n                    if(!writeAttribute) {\n                        //we already have annotated field as read\n                        if(ae instanceof FieldAttributeEntry && ae.getInfo().isReadable()) {\n                            log.warn(\"Not adding annotated method \" + methodName\n                                     + \" since we already have read attribute\");\n                        }\n                        //we already have annotated set method\n                        else if(ae instanceof MethodAttributeEntry) {\n                            MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                            if(mae.hasSetMethod()) {\n                                atts.put(attributeName,\n                                         new MethodAttributeEntry(info, mae.getSetMethod(), method));\n                            }\n                        } //we don't have such entry \n                        else {\n                            atts.put(attributeName, new MethodAttributeEntry(info, null, method));\n                        }\n                    }//is it a set method?\n                    else {                        \n                        if(ae instanceof FieldAttributeEntry) {\n                            //we already have annotated field as write\n                            if(ae.getInfo().isWritable()) {\n                                log.warn(\"Not adding annotated method \" + methodName\n                                         + \" since we already have writable attribute\");\n                            }\n                            else {\n                                //we already have annotated field as read\n                                //lets make the field writable\n                                Field f = ((FieldAttributeEntry)ae).getField();\n                                MBeanAttributeInfo i=new MBeanAttributeInfo(ae.getInfo().getName(),\n                                                                            f.getType().getCanonicalName(),\n                                                                            attr.description(),\n                                                                            true,\n                                                                            Modifier.isFinal(f.getModifiers())? false: true,\n                                                                            false);                               \n                                atts.put(attributeName,new FieldAttributeEntry(i,f));\n                            }\n                        }\n                        //we already have annotated getOrIs method\n                        else if(ae instanceof MethodAttributeEntry) {\n                            MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                            if(mae.hasIsOrGetMethod()) {\n                                atts.put(attributeName,\n                                         new MethodAttributeEntry(info,\n                                                                  method,\n                                                                  mae.getIsOrGetMethod()));\n                            }\n                        } //we don't have such entry \n                        else {\n                            atts.put(attributeName, new MethodAttributeEntry(info, method, null));\n                        }\n                    }\n                }\n            }\n            \n            //does method have @ManagedOPeration annotation?\n            ManagedOperation op=method.getAnnotation(ManagedOperation.class);\n            if(op != null) {\n                ops.add(new MBeanOperationInfo(op.description(), method));\n                if(log.isDebugEnabled()) {\n                    log.debug(\"@Operation found for method \" + method.getName());\n                }\n            }\n        }\n    }","commit_id":"e8c6e177487fc9161abe9d9204b1ab5b144004e0","url":"https://github.com/belaban/JGroups"},{"original_method":"private void writeConfigureMethod(ClassVisitor visitor, Type generatedType, ModelProperty<?> property) {\n        if (!(property.getSchema() instanceof CompositeSchema) || property.isWritable()) {\n            return;\n        }\n\n        // Adds a void $propName(Closure<?> cl) method\n\n        MethodVisitor methodVisitor = declareMethod(visitor, property.getName(), Type.getMethodDescriptor(Type.VOID_TYPE, CLOSURE_TYPE), null);\n        putStateFieldValueOnStack(methodVisitor, generatedType);\n        putConstantOnStack(methodVisitor, property.getName());\n        putFirstMethodArgumentOnStack(methodVisitor);\n        methodVisitor.visitMethodInsn(INVOKEINTERFACE, MODEL_ELEMENT_STATE_TYPE_INTERNAL_NAME, \"apply\", STATE_APPLY_METHOD_DESCRIPTOR, true);\n        finishVisitingMethod(methodVisitor);\n    }","id":56781,"modified_method":"private void writeConfigureMethod(ClassVisitor visitor, Type generatedType, ModelProperty<?> property) {\n        if (property.isWritable()) {\n            return;\n        }\n\n        if (property.getSchema() instanceof CompositeSchema) {\n            // Adds a void $propName(Closure<?> cl) method that delegates to model state\n\n            MethodVisitor methodVisitor = declareMethod(visitor, property.getName(), Type.getMethodDescriptor(Type.VOID_TYPE, CLOSURE_TYPE), null);\n            putStateFieldValueOnStack(methodVisitor, generatedType);\n            putConstantOnStack(methodVisitor, property.getName());\n            putFirstMethodArgumentOnStack(methodVisitor);\n            methodVisitor.visitMethodInsn(INVOKEINTERFACE, MODEL_ELEMENT_STATE_TYPE_INTERNAL_NAME, \"apply\", STATE_APPLY_METHOD_DESCRIPTOR, true);\n            finishVisitingMethod(methodVisitor);\n            return;\n        }\n        if (property.getSchema() instanceof UnmanagedImplStructSchema) {\n            UnmanagedImplStructSchema<?> structSchema = (UnmanagedImplStructSchema<?>) property.getSchema();\n            if (!structSchema.isAnnotated()) {\n                return;\n            }\n\n            // Adds a void $propName(Closure<?> cl) method that executes the closure\n            MethodVisitor methodVisitor = declareMethod(visitor, property.getName(), Type.getMethodDescriptor(Type.VOID_TYPE, CLOSURE_TYPE), null);\n            putStateFieldValueOnStack(methodVisitor, generatedType);\n            putConstantOnStack(methodVisitor, property.getName());\n            methodVisitor.visitMethodInsn(INVOKEINTERFACE, MODEL_ELEMENT_STATE_TYPE_INTERNAL_NAME, \"get\", STATE_GET_METHOD_DESCRIPTOR, true);\n            putFirstMethodArgumentOnStack(methodVisitor);\n            methodVisitor.visitMethodInsn(INVOKESTATIC, Type.getInternalName(ClosureBackedAction.class), \"execute\", Type.getMethodDescriptor(Type.VOID_TYPE, OBJECT_TYPE, CLOSURE_TYPE), false);\n            finishVisitingMethod(methodVisitor);\n        }\n    }","commit_id":"f268927c4335946d056b41aa52a055f6f3020569","url":"https://github.com/gradle/gradle"},{"original_method":"public void doCheck(StaplerRequest req, StaplerResponse rsp, @QueryParameter final String value) throws IOException, ServletException {\n            // Require CONFIGURE permission on this project\n            AbstractProject project = (AbstractProject) req.findAncestor(AbstractProject.class).getObject();\n\n            new FormFieldValidator(req,rsp,project,Item.CONFIGURE) {\n                protected void check() throws IOException, ServletException {\n                    for (String name : Util.tokenize(value, \",\")) {\n                        name = name.trim();\n                        if(Hudson.getInstance().getItemByFullName(name)==null) {\n                            error(hudson.tasks.Messages.BuildTrigger_NoSuchProject(name,AbstractProject.findNearest(name).getName()));\n                        }\n                    }\n                }\n            }.process();\n        }","id":56782,"modified_method":"public void doCheck(StaplerRequest req, StaplerResponse rsp, @QueryParameter final String value) throws IOException, ServletException {\n            // Require CONFIGURE permission on this project\n            AbstractProject project = req.findAncestorObject(AbstractProject.class);\n\n            new FormFieldValidator(req,rsp,project,Item.CONFIGURE) {\n                protected void check() throws IOException, ServletException {\n                    for (String name : Util.tokenize(value, \",\")) {\n                        name = name.trim();\n                        if(Hudson.getInstance().getItemByFullName(name)==null) {\n                            error(hudson.tasks.Messages.BuildTrigger_NoSuchProject(name,AbstractProject.findNearest(name).getName()));\n                        }\n                    }\n                }\n            }.process();\n        }","commit_id":"ffc5884a174255a762f5c4cffec8656172224a04","url":"https://github.com/kohsuke/hudson"},{"original_method":"/**\n         * Form validation method.\n         */\n        public void doCheck( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n            // Require CONFIGURE permission on this project\n            AccessControlled anc = (AccessControlled) req.findAncestor(AccessControlled.class).getObject();\n            new FormFieldValidator(req,rsp,anc,Item.CONFIGURE) {\n                protected void check() throws IOException, ServletException {\n                    String list = request.getParameter(\"value\");\n\n                    StringTokenizer tokens = new StringTokenizer(list,\",\");\n                    while(tokens.hasMoreTokens()) {\n                        String projectName = tokens.nextToken().trim();\n                        Item item = Hudson.getInstance().getItemByFullName(projectName,Item.class);\n                        if(item==null) {\n                            error(Messages.BuildTrigger_NoSuchProject(projectName,AbstractProject.findNearest(projectName).getName()));\n                            return;\n                        }\n                        if(!(item instanceof AbstractProject)) {\n                            error(Messages.BuildTrigger_NotBuildable(projectName));\n                            return;\n                        }\n                    }\n\n                    ok();\n                }\n            }.process();\n        }","id":56783,"modified_method":"/**\n         * Form validation method.\n         */\n        public void doCheck( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n            // Require CONFIGURE permission on this project\n            AccessControlled anc = req.findAncestorObject(AccessControlled.class);\n            new FormFieldValidator(req,rsp,anc,Item.CONFIGURE) {\n                protected void check() throws IOException, ServletException {\n                    String list = request.getParameter(\"value\");\n\n                    StringTokenizer tokens = new StringTokenizer(list,\",\");\n                    while(tokens.hasMoreTokens()) {\n                        String projectName = tokens.nextToken().trim();\n                        Item item = Hudson.getInstance().getItemByFullName(projectName,Item.class);\n                        if(item==null) {\n                            error(Messages.BuildTrigger_NoSuchProject(projectName,AbstractProject.findNearest(projectName).getName()));\n                            return;\n                        }\n                        if(!(item instanceof AbstractProject)) {\n                            error(Messages.BuildTrigger_NotBuildable(projectName));\n                            return;\n                        }\n                    }\n\n                    ok();\n                }\n            }.process();\n        }","commit_id":"ffc5884a174255a762f5c4cffec8656172224a04","url":"https://github.com/kohsuke/hudson"},{"original_method":"/**\n     * Runs the validation code.\n     */\n    public final void process() throws IOException, ServletException {\n        if(permission!=null)\n            try {\n                subject.checkPermission(permission);\n            } catch (AccessDeniedException e) {\n                // if the user has hudson-wisde admin permission, all checks are allowed\n                // this is to protect Hudson administrator from broken ACL/SecurityRealm implementation/configuration.\n                if(!Hudson.getInstance().hasPermission(Hudson.ADMINISTER))\n                    throw e;\n            }\n\n        check();\n    }","id":56784,"modified_method":"/**\n     * Runs the validation code.\n     */\n    public final void process() throws IOException, ServletException {\n        if(permission!=null)\n            try {\n                if(subject==null)\n                    throw new AccessDeniedException(\"No subject\");\n                subject.checkPermission(permission);\n            } catch (AccessDeniedException e) {\n                // if the user has hudson-wisde admin permission, all checks are allowed\n                // this is to protect Hudson administrator from broken ACL/SecurityRealm implementation/configuration.\n                if(!Hudson.getInstance().hasPermission(Hudson.ADMINISTER))\n                    throw e;\n            }\n\n        check();\n    }","commit_id":"ffc5884a174255a762f5c4cffec8656172224a04","url":"https://github.com/kohsuke/hudson"},{"original_method":"public WorkspaceFilePath(StaplerRequest request, StaplerResponse response, boolean errorIfNotExist, boolean expectingFile) {\n            // Require CONFIGURE permission on this job\n            super(request, response, (AbstractProject) request.findAncestor(AbstractProject.class).getObject(), Item.CONFIGURE);\n            this.errorIfNotExist = errorIfNotExist;\n            this.expectingFile = expectingFile;\n        }","id":56785,"modified_method":"public WorkspaceFilePath(StaplerRequest request, StaplerResponse response, boolean errorIfNotExist, boolean expectingFile) {\n            // Require CONFIGURE permission on this job\n            super(request, response, request.findAncestorObject(AbstractProject.class), Item.CONFIGURE);\n            this.errorIfNotExist = errorIfNotExist;\n            this.expectingFile = expectingFile;\n        }","commit_id":"ffc5884a174255a762f5c4cffec8656172224a04","url":"https://github.com/kohsuke/hudson"},{"original_method":"public WorkspaceFileMask(StaplerRequest request, StaplerResponse response, boolean errorIfNotExist) {\n            // Require CONFIGURE permission on the job\n            super(request, response, (AbstractProject) request.findAncestor(AbstractProject.class).getObject(), Item.CONFIGURE);\n            this.errorIfNotExist = errorIfNotExist;\n        }","id":56786,"modified_method":"public WorkspaceFileMask(StaplerRequest request, StaplerResponse response, boolean errorIfNotExist) {\n            // Require CONFIGURE permission on the job\n            super(request, response, request.findAncestorObject(AbstractProject.class), Item.CONFIGURE);\n            this.errorIfNotExist = errorIfNotExist;\n        }","commit_id":"ffc5884a174255a762f5c4cffec8656172224a04","url":"https://github.com/kohsuke/hudson"},{"original_method":"@NotNull\n  protected List<MatchResult> matchByDownUp(PsiElement element, final MatchOptions options) {\n    final CollectingMatchResultSink sink = new CollectingMatchResultSink();\n    final CompiledPattern compiledPattern = prepareMatching(sink, options);\n    matchContext.setShouldRecursivelyMatch(false);\n\n    PsiElement targetNode = compiledPattern.getTargetNode();\n    PsiElement elementToStartMatching = null;\n\n    if (targetNode == null) {\n      targetNode = compiledPattern.getNodes().current();\n      if (targetNode != null) {\n        compiledPattern.getNodes().advance();\n        assert !compiledPattern.getNodes().hasNext();\n        compiledPattern.getNodes().rewind();\n\n        element = element.getParent();\n        if (element == null) {\n          return Collections.emptyList();\n        }\n        while (element.getClass() != targetNode.getClass()) {\n          element = element.getParent();\n          if (element == null)  return Collections.emptyList();\n        }\n\n        elementToStartMatching = element;\n      }\n    } else {\n      final StructuralSearchProfile profile = StructuralSearchUtil.getProfileByPsiElement(element);\n      if (profile == null) return Collections.emptyList();\n      targetNode = profile.extendMatchedByDownUp(targetNode);\n\n      MatchingHandler handler = null;\n\n      while (element.getClass() == targetNode.getClass() ||\n             compiledPattern.isTypedVar(targetNode) && compiledPattern.getHandler(targetNode).canMatch(targetNode, element)) {\n        handler = compiledPattern.getHandler(targetNode);\n        handler.setPinnedElement(element);\n        elementToStartMatching = element;\n        if (handler instanceof TopLevelMatchingHandler) break;\n        element = element.getParent();\n        targetNode = targetNode.getParent();\n\n        if (options.isLooseMatching()) {\n          element = profile.updateCurrentNode(element);\n          targetNode = profile.updateCurrentNode(targetNode);\n        }\n      }\n\n      if (!(handler instanceof TopLevelMatchingHandler)) return Collections.emptyList();\n    }\n\n    assert targetNode != null : \"Could not match down up when no target node\";\n\n    System.out.println(\"elementToStartMatching = \" + elementToStartMatching.getText());\n    match(elementToStartMatching);\n    matchContext.getSink().matchingFinished();\n    final List<MatchResult> matches = sink.getMatches();\n    return matches;\n  }","id":56787,"modified_method":"@NotNull\n  protected List<MatchResult> matchByDownUp(PsiElement element, final MatchOptions options) {\n    final CollectingMatchResultSink sink = new CollectingMatchResultSink();\n    final CompiledPattern compiledPattern = prepareMatching(sink, options);\n    matchContext.setShouldRecursivelyMatch(false);\n\n    PsiElement targetNode = compiledPattern.getTargetNode();\n    PsiElement elementToStartMatching = null;\n\n    if (targetNode == null) {\n      targetNode = compiledPattern.getNodes().current();\n      if (targetNode != null) {\n        compiledPattern.getNodes().advance();\n        assert !compiledPattern.getNodes().hasNext();\n        compiledPattern.getNodes().rewind();\n\n        element = element.getParent();\n        if (element == null) {\n          return Collections.emptyList();\n        }\n        while (element.getClass() != targetNode.getClass()) {\n          element = element.getParent();\n          if (element == null)  return Collections.emptyList();\n        }\n\n        elementToStartMatching = element;\n      }\n    } else {\n      final StructuralSearchProfile profile = StructuralSearchUtil.getProfileByPsiElement(element);\n      if (profile == null) return Collections.emptyList();\n      targetNode = profile.extendMatchedByDownUp(targetNode);\n\n      MatchingHandler handler = null;\n\n      while (element.getClass() == targetNode.getClass() ||\n             compiledPattern.isTypedVar(targetNode) && compiledPattern.getHandler(targetNode).canMatch(targetNode, element)) {\n        handler = compiledPattern.getHandler(targetNode);\n        handler.setPinnedElement(element);\n        elementToStartMatching = element;\n        if (handler instanceof TopLevelMatchingHandler) break;\n        element = element.getParent();\n        targetNode = targetNode.getParent();\n\n        if (options.isLooseMatching()) {\n          element = profile.updateCurrentNode(element);\n          targetNode = profile.updateCurrentNode(targetNode);\n        }\n      }\n\n      if (!(handler instanceof TopLevelMatchingHandler)) return Collections.emptyList();\n    }\n\n    assert targetNode != null : \"Could not match down up when no target node\";\n\n    match(elementToStartMatching);\n    matchContext.getSink().matchingFinished();\n    return sink.getMatches();\n  }","commit_id":"8cfe52db292a0961744a90a0f8e0aae2e6e3f0bf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static Set<XPathVariableReference> collectVariableReferences(PsiElement block) {\n        final VariableReferenceCollector visitor = new VariableReferenceCollector(block.getProject());\n        block.accept(visitor);\n\n        return visitor.getMatches();\n    }","id":56788,"modified_method":"public static List<XPathVariableReference> collectVariableReferences(PsiElement block) {\n        final VariableReferenceCollector visitor = new VariableReferenceCollector(block.getProject());\n        block.accept(visitor);\n\n        final List<XPathVariableReference> list = new ArrayList<XPathVariableReference>(visitor.getMatches());\n        Collections.sort(list, XsltCodeInsightUtil.POSITION_COMPARATOR);\n        return list;\n    }","commit_id":"c801be62f5cf9357c1485295351d013656302684","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static XmlTag findVariableInsertionPoint(final XmlTag currentUsageTag, PsiElement usageBlock, final String referenceName, XmlTag... moreUsages) {\n        // sort tags by document order\n        final Set<XmlTag> usages = new TreeSet<XmlTag>(new Comparator<XmlTag>() {\n            public int compare(XmlTag o1, XmlTag o2) {\n                return o1.getTextOffset() - o2.getTextOffset();\n            }\n        });\n        usages.add(currentUsageTag);\n        usages.addAll(Arrays.asList(moreUsages));\n\n        // collect all other possible unresolved references with the same name in the current template\n        final Project project = currentUsageTag.getProject();\n        final XsltSupport xsltSupport = XsltSupport.getInstance(project);\n        usageBlock.accept(new PsiRecursiveElementVisitor() {\n            public void visitElement(PsiElement element) {\n                if (element instanceof XPathVariableReference) {\n                    visitXPathVariableReference(((XPathVariableReference)element));\n                } else {\n                    super.visitElement(element);\n                }\n            }\n\n            private void visitXPathVariableReference(XPathVariableReference reference) {\n                if (referenceName.equals(reference.getReferencedName())) {\n                    if (reference.resolve() == null) {\n                        usages.add(PsiTreeUtil.getContextOfType(reference, XmlTag.class, true));\n                    }\n                }\n            }\n\n            public void visitXmlAttribute(XmlAttribute attribute) {\n                if (XsltSupport.isXPathAttribute(attribute)) {\n                    final PsiFile[] xpathFiles = xsltSupport.getFiles(attribute);\n                    for (PsiFile xpathFile : xpathFiles) {\n                        xpathFile.accept(this);\n                    }\n                }\n            }\n        });\n\n        final Iterator<XmlTag> it = usages.iterator();\n        final XmlTag firstUsage = it.next();\n\n        // find broadest scope to create the variable in\n        XmlTag tag = firstUsage;\n        while (it.hasNext()) {\n            XmlTag xmlTag = it.next();\n            final PsiElement t = PsiTreeUtil.findCommonParent(tag, xmlTag);\n            if (t instanceof XmlTag) {\n                tag = (XmlTag)t;\n            } else {\n                break;\n            }\n        }\n\n        // find the actual tag to create the variable before\n        final XmlTag[] subTags = tag.getSubTags();\n        for (XmlTag xmlTag : subTags) {\n            if (xmlTag.getTextOffset() > firstUsage.getTextOffset()) break;\n            tag = xmlTag;\n        }\n\n        final XmlTag parentTag = tag.getParentTag();\n        if (parentTag == null) return tag;\n\n        final String parentName = parentTag.getLocalName();\n        if (\"apply-templates\".equals(parentName) || \"call-template\".equals(parentName)\n                || \"when\".equals(parentName) || \"choose\".equals(parentName))\n        {\n            if (\"when\".equals(parentName)) tag = tag.getParentTag();\n            assert tag != null;\n            tag = tag.getParentTag();\n        }\n        assert tag != null;\n        return tag;\n    }","id":56789,"modified_method":"public static XmlTag findVariableInsertionPoint(final XmlTag currentUsageTag, PsiElement usageBlock, final String referenceName, XmlTag... moreUsages) {\n        // sort tags by document order\n        final Set<XmlTag> usages = new TreeSet<XmlTag>(POSITION_COMPARATOR);\n        usages.add(currentUsageTag);\n        usages.addAll(Arrays.asList(moreUsages));\n\n        // collect all other possible unresolved references with the same name in the current template\n        final Project project = currentUsageTag.getProject();\n        final XsltSupport xsltSupport = XsltSupport.getInstance(project);\n        usageBlock.accept(new PsiRecursiveElementVisitor() {\n            public void visitElement(PsiElement element) {\n                if (element instanceof XPathVariableReference) {\n                    visitXPathVariableReference(((XPathVariableReference)element));\n                } else {\n                    super.visitElement(element);\n                }\n            }\n\n            private void visitXPathVariableReference(XPathVariableReference reference) {\n                if (referenceName.equals(reference.getReferencedName())) {\n                    if (reference.resolve() == null) {\n                        usages.add(PsiTreeUtil.getContextOfType(reference, XmlTag.class, true));\n                    }\n                }\n            }\n\n            public void visitXmlAttribute(XmlAttribute attribute) {\n                if (XsltSupport.isXPathAttribute(attribute)) {\n                    final PsiFile[] xpathFiles = xsltSupport.getFiles(attribute);\n                    for (PsiFile xpathFile : xpathFiles) {\n                        xpathFile.accept(this);\n                    }\n                }\n            }\n        });\n\n        final Iterator<XmlTag> it = usages.iterator();\n        final XmlTag firstUsage = it.next();\n\n        // find broadest scope to create the variable in\n        XmlTag tag = firstUsage;\n        while (it.hasNext()) {\n            XmlTag xmlTag = it.next();\n            final PsiElement t = PsiTreeUtil.findCommonParent(tag, xmlTag);\n            if (t instanceof XmlTag) {\n                tag = (XmlTag)t;\n            } else {\n                break;\n            }\n        }\n\n        // find the actual tag to create the variable before\n        final XmlTag[] subTags = tag.getSubTags();\n        for (XmlTag xmlTag : subTags) {\n            if (xmlTag.getTextOffset() > firstUsage.getTextOffset()) break;\n            tag = xmlTag;\n        }\n\n        final XmlTag parentTag = tag.getParentTag();\n        if (parentTag == null) return tag;\n\n        final String parentName = parentTag.getLocalName();\n        if (\"apply-templates\".equals(parentName) || \"call-template\".equals(parentName)\n                || \"when\".equals(parentName) || \"choose\".equals(parentName))\n        {\n            if (\"when\".equals(parentName)) tag = tag.getParentTag();\n            assert tag != null;\n            tag = tag.getParentTag();\n        }\n        assert tag != null;\n        return tag;\n    }","commit_id":"c801be62f5cf9357c1485295351d013656302684","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean extractFrom(final @NotNull PsiElement start, final PsiElement end, String newName) {\n        final XmlTag outerTemplate = XsltCodeInsightUtil.getTemplateTag(start, false);\n        if (outerTemplate == null) {\n            return false;\n        }\n        final XmlTag parentScope = PsiTreeUtil.getParentOfType(start, XmlTag.class, true);\n\n        final StringBuilder sb = new StringBuilder(\"\\n\");\n        final Set<XPathVariableReference> refs = new HashSet<XPathVariableReference>();\n\n        final int startOffset = start.getTextRange().getStartOffset();\n        final int endOffset = end.getTextRange().getEndOffset();\n\n        PsiElement e = start;\n        while (e != null) {\n            if (e instanceof XmlTag) {\n                final XmlTag tag = (XmlTag)e;\n                if (XsltSupport.isVariable(tag)) {\n                    final XsltVariable variable = XsltElementFactory.getInstance().wrapElement(tag, XsltVariable.class);\n                    final LocalSearchScope searchScope = new LocalSearchScope(parentScope);\n                    final Query<PsiReference> query = ReferencesSearch.search(variable, searchScope);\n                    for (PsiReference reference : query) {\n                        final XmlElement context = PsiTreeUtil.getContextOfType(reference.getElement(), XmlElement.class, true);\n                        if (context == null || context.getTextRange().getStartOffset() > endOffset) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            sb.append(e.getText());\n\n            final Set<XPathVariableReference> references = RefactoringUtil.collectVariableReferences(e);\n            for (XPathVariableReference reference : references) {\n                final XPathVariable variable = reference.resolve();\n                if (variable != null) {\n                    final XmlTag var = ((XsltVariable)variable).getTag();\n                    if (var.getTextRange().getStartOffset() < startOffset) {\n                        // don't pass through global parameters and variables\n                        if (XsltCodeInsightUtil.getTemplateTag(variable, false) != null) {\n                            refs.add(reference);\n                        }\n                    }\n                } else {\n                    // TODO just copy unresolved refs or fail?\n                    refs.add(reference);\n                }\n            }\n\n            if (e == end) {\n                break;\n            }\n            e = e.getNextSibling();\n        }\n        sb.append(\"\\n\");\n\n        final String s = newName == null ?\n                Messages.showInputDialog(start.getProject(), \"Template Name: \", getRefactoringName(), Messages.getQuestionIcon()) :\n                newName;\n\n        if (s != null) {\n            new WriteCommandAction(start.getProject()) {\n                protected void run(Result result) throws Throwable {\n                    final PsiFile containingFile = start.getContainingFile();\n\n                    XmlTag templateTag = parentScope.createChildTag(\"template\", XsltSupport.XSLT_NS, sb.toString(), false);\n                    templateTag.setAttribute(\"name\", s);\n\n                    final PsiElement dummy = XmlElementFactory.getInstance(start.getProject()).createDisplayText(\" \");\n                    final PsiElement outerParent = outerTemplate.getParent();\n                    final PsiElement element = outerParent.addAfter(dummy, outerTemplate);\n                    templateTag = (XmlTag)outerParent.addAfter(templateTag, element);\n\n                    final TextRange adjust = templateTag.getTextRange();\n\n                    final PsiDocumentManager psiDocumentManager = PsiDocumentManager.getInstance(start.getProject());\n                    final Document doc = psiDocumentManager.getDocument(containingFile);\n                    assert doc != null;\n                    psiDocumentManager.doPostponedOperationsAndUnblockDocument(doc);\n                    start.getManager().getCodeStyleManager().adjustLineIndent(containingFile, adjust);\n\n                    final PsiElement parent = start.getParent();\n                    XmlTag callTag = parentScope.createChildTag(\"call-template\", XsltSupport.XSLT_NS, null, false);\n                    callTag.setAttribute(\"name\", s);\n\n                    if (start instanceof XmlToken && ((XmlToken)start).getTokenType() == XmlTokenType.XML_DATA_CHARACTERS) {\n                        assert start == end;\n                        callTag = (XmlTag)start.replace(callTag);\n                    } else {\n                        callTag = (XmlTag)parent.addBefore(callTag, start);\n                        parent.deleteChildRange(start, end);\n                    }\n\n                    for (XPathVariableReference ref : refs) {\n                        final XmlTag param = templateTag.createChildTag(\"param\", XsltSupport.XSLT_NS, null, false);\n                        final String varName = ref.getReferencedName();\n                        param.setAttribute(\"name\", varName);\n                        RefactoringUtil.addParameter(templateTag, param);\n\n                        final XmlTag arg = RefactoringUtil.addWithParam(callTag);\n                        arg.setAttribute(\"name\", varName);\n                        arg.setAttribute(\"select\", \"$\" + varName);\n                    }\n                }\n            }.execute().logException(Logger.getInstance(getClass().getName()));\n        }\n        return true;\n    }","id":56790,"modified_method":"private boolean extractFrom(final @NotNull PsiElement start, final PsiElement end, String newName) {\n        final XmlTag outerTemplate = XsltCodeInsightUtil.getTemplateTag(start, false);\n        if (outerTemplate == null) {\n            return false;\n        }\n        final XmlTag parentScope = PsiTreeUtil.getParentOfType(start, XmlTag.class, true);\n\n        final StringBuilder sb = new StringBuilder(\"\\n\");\n        final Set<XPathVariableReference> refs = new LinkedHashSet<XPathVariableReference>();\n\n        final int startOffset = start.getTextRange().getStartOffset();\n        final int endOffset = end.getTextRange().getEndOffset();\n\n        PsiElement e = start;\n        while (e != null) {\n            if (e instanceof XmlTag) {\n                final XmlTag tag = (XmlTag)e;\n                if (XsltSupport.isVariable(tag)) {\n                    final XsltVariable variable = XsltElementFactory.getInstance().wrapElement(tag, XsltVariable.class);\n                    final LocalSearchScope searchScope = new LocalSearchScope(parentScope);\n                    final Query<PsiReference> query = ReferencesSearch.search(variable, searchScope);\n                    for (PsiReference reference : query) {\n                        final XmlElement context = PsiTreeUtil.getContextOfType(reference.getElement(), XmlElement.class, true);\n                        if (context == null || context.getTextRange().getStartOffset() > endOffset) {\n                            return false;\n                        }\n                    }\n                }\n            }\n            sb.append(e.getText());\n\n            final List<XPathVariableReference> references = RefactoringUtil.collectVariableReferences(e);\n            for (XPathVariableReference reference : references) {\n                final XPathVariable variable = reference.resolve();\n                if (variable != null) {\n                    final XmlTag var = ((XsltVariable)variable).getTag();\n                    if (var.getTextRange().getStartOffset() < startOffset) {\n                        // don't pass through global parameters and variables\n                        if (XsltCodeInsightUtil.getTemplateTag(variable, false) != null) {\n                            refs.add(reference);\n                        }\n                    }\n                } else {\n                    // TODO just copy unresolved refs or fail?\n                    refs.add(reference);\n                }\n            }\n\n            if (e == end) {\n                break;\n            }\n            e = e.getNextSibling();\n        }\n        sb.append(\"\\n\");\n\n        final String s = newName == null ?\n                Messages.showInputDialog(start.getProject(), \"Template Name: \", getRefactoringName(), Messages.getQuestionIcon()) :\n                newName;\n\n        if (s != null) {\n            new WriteCommandAction(start.getProject()) {\n                protected void run(Result result) throws Throwable {\n                    final PsiFile containingFile = start.getContainingFile();\n\n                    XmlTag templateTag = parentScope.createChildTag(\"template\", XsltSupport.XSLT_NS, sb.toString(), false);\n                    templateTag.setAttribute(\"name\", s);\n\n                    final PsiElement dummy = XmlElementFactory.getInstance(start.getProject()).createDisplayText(\" \");\n                    final PsiElement outerParent = outerTemplate.getParent();\n                    final PsiElement element = outerParent.addAfter(dummy, outerTemplate);\n                    templateTag = (XmlTag)outerParent.addAfter(templateTag, element);\n\n                    final TextRange adjust = templateTag.getTextRange();\n\n                    final PsiDocumentManager psiDocumentManager = PsiDocumentManager.getInstance(start.getProject());\n                    final Document doc = psiDocumentManager.getDocument(containingFile);\n                    assert doc != null;\n                    psiDocumentManager.doPostponedOperationsAndUnblockDocument(doc);\n                    start.getManager().getCodeStyleManager().adjustLineIndent(containingFile, adjust);\n\n                    final PsiElement parent = start.getParent();\n                    XmlTag callTag = parentScope.createChildTag(\"call-template\", XsltSupport.XSLT_NS, null, false);\n                    callTag.setAttribute(\"name\", s);\n\n                    if (start instanceof XmlToken && ((XmlToken)start).getTokenType() == XmlTokenType.XML_DATA_CHARACTERS) {\n                        assert start == end;\n                        callTag = (XmlTag)start.replace(callTag);\n                    } else {\n                        callTag = (XmlTag)parent.addBefore(callTag, start);\n                        parent.deleteChildRange(start, end);\n                    }\n\n                    for (XPathVariableReference ref : refs) {\n                        final XmlTag param = templateTag.createChildTag(\"param\", XsltSupport.XSLT_NS, null, false);\n                        final String varName = ref.getReferencedName();\n                        param.setAttribute(\"name\", varName);\n                        RefactoringUtil.addParameter(templateTag, param);\n\n                        final XmlTag arg = RefactoringUtil.addWithParam(callTag);\n                        arg.setAttribute(\"name\", varName);\n                        arg.setAttribute(\"select\", \"$\" + varName);\n                    }\n                }\n            }.execute().logException(Logger.getInstance(getClass().getName()));\n        }\n        return true;\n    }","commit_id":"c801be62f5cf9357c1485295351d013656302684","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/** Tests calling some Java static methods from XQuery. */\n  @Test\n  public void staticMethod() {\n    query(\"Q{java:java.lang.Math}sqrt(xs:double(9.0))\", 3);\n  }","id":56791,"modified_method":"/** Tests calling some Java static methods from XQuery. */\n  @Test\n  public void staticMethod() {\n    query(\"Q{java.lang.Math}sqrt(xs:double(9.0))\", 3);\n  }","commit_id":"1c8c09299e1a958c0cf89c72b26d78b2c97fd47d","url":"https://github.com/BaseXdb/basex"},{"original_method":"/** Tests calling some Java static methods from XQuery. */\n  @Test\n  public void method() {\n    query(\"declare namespace rect = 'java:java.awt.Rectangle';\" +\n        \"rect:contains(rect:new(xs:int(2), xs:int(2)), xs:int(1), xs:int(1))\", true);\n  }","id":56792,"modified_method":"/** Tests calling some Java static methods from XQuery. */\n  @Test\n  public void method() {\n    query(\"declare namespace rect = 'java.awt.Rectangle';\" +\n        \"rect:contains(rect:new(xs:int(2), xs:int(2)), xs:int(1), xs:int(1))\", true);\n  }","commit_id":"1c8c09299e1a958c0cf89c72b26d78b2c97fd47d","url":"https://github.com/BaseXdb/basex"},{"original_method":"/** Tests importing a Java class and throwing errors. */\n  @Test\n  public void javaImportError() {\n    query(\"declare namespace qm='java:org.basex.test.query.func.QueryModuleTest';\" +\n        \"try { qm:error(qm:new()) } catch * { $err:code }\", \"BASX0000\");\n    query(\"import module namespace qm='java:org.basex.test.query.func.QueryModuleTest';\" +\n        \"try { qm:error() } catch * { $err:code }\", \"BASX0000\");\n  }","id":56793,"modified_method":"/** Tests importing a Java class and throwing errors. */\n  @Test\n  public void importError() {\n    query(\"declare namespace qm='java:org.basex.test.query.func.QueryModuleTest';\" +\n        \"try { qm:error(qm:new()) } catch * { $err:code }\", \"BASX0000\");\n    query(\"import module namespace qm='java:org.basex.test.query.func.QueryModuleTest';\" +\n        \"try { qm:error() } catch * { $err:code }\", \"BASX0000\");\n  }","commit_id":"1c8c09299e1a958c0cf89c72b26d78b2c97fd47d","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Returns a new Java function instance.\n   * @param name function name\n   * @param args arguments\n   * @param ctx query context\n   * @param ii input info\n   * @return Java function, or {@code null}\n   * @throws QueryException query exception\n   */\n  static JavaMapping get(final QNm name, final Expr[] args, final QueryContext ctx,\n      final InputInfo ii) throws QueryException {\n\n    // check for \"java:\" prefix\n    final byte[] uri = name.uri();\n    final byte[] ln = name.local();\n    final boolean java = startsWith(uri, JAVAPREF);\n    final QNm nm = new QNm(ln, java ? substring(uri, JAVAPREF.length) : uri);\n\n    // rewrite function name: convert dashes to upper-case initials\n    final TokenBuilder m = new TokenBuilder();\n    boolean dash = false;\n    for(int p = 0; p < ln.length; p += cl(ln, p)) {\n      final int ch = cp(ln, p);\n      if(dash) {\n        m.add(Character.toUpperCase(ch));\n        dash = false;\n      } else {\n        dash = ch == '-';\n        if(!dash) m.add(ch);\n      }\n    }\n    final String mth = m.toString();\n\n    // check imported Java modules\n    String path = string(nm.uri());\n    final String p = ModuleLoader.uri2path(path);\n    if(p != null) path = p;\n    path = path.replace(\"/\", \".\").substring(1);\n\n    final Object jm  = ctx.modules.findImport(path);\n    if(jm != null) {\n      for(final Method meth : jm.getClass().getMethods()) {\n        // accept any method with identical name and arity\n        if(meth.getName().equals(mth) && meth.getParameterTypes().length == args.length) {\n          // check if user has sufficient permissions to call the function\n          Perm perm = Perm.ADMIN;\n          final QueryModule.Requires req = meth.getAnnotation(QueryModule.Requires.class);\n          if(req != null) perm = Perm.get(req.value().name());\n          if(!ctx.context.user.has(perm)) return null;\n          return new JavaModuleFunc(ii, jm, meth, args);\n        }\n      }\n      throw WHICHJAVA.thrw(ii, path + ':' + mth);\n    }\n\n    // only allowed with administrator permissions\n    if(!ctx.context.user.has(Perm.ADMIN)) return null;\n\n    // check addressed class\n    try {\n      return new JavaFunc(ii, ctx.modules.findClass(path), mth, args);\n    } catch(final ClassNotFoundException ex) {\n      // only throw exception if \"java:\" prefix was explicitly specified\n      if(java) throw WHICHJAVA.thrw(ii, uri);\n    } catch(final Throwable th) {\n      Util.debug(th);\n      throw INITJAVA.thrw(ii, th);\n    }\n\n    // no function found\n    return null;\n  }","id":56794,"modified_method":"/**\n   * Returns a new Java function instance.\n   * @param qname function name\n   * @param args arguments\n   * @param ctx query context\n   * @param ii input info\n   * @return Java function, or {@code null}\n   * @throws QueryException query exception\n   */\n  static JavaMapping get(final QNm qname, final Expr[] args, final QueryContext ctx,\n      final InputInfo ii) throws QueryException {\n\n    final byte[] uri = qname.uri();\n    final byte[] ln = qname.local();\n    // check if URI starts with \"java:\" prefix (if yes, module must be Java code)\n    final boolean java = startsWith(uri, JAVAPREF);\n    final QNm nm = new QNm(ln, java ? substring(uri, JAVAPREF.length) : uri);\n\n    // rewrite function name: convert dashes to upper-case initials\n    final TokenBuilder tb = new TokenBuilder();\n    boolean dash = false;\n    for(int p = 0; p < ln.length; p += cl(ln, p)) {\n      final int ch = cp(ln, p);\n      if(dash) {\n        tb.add(Character.toUpperCase(ch));\n        dash = false;\n      } else {\n        dash = ch == '-';\n        if(!dash) tb.add(ch);\n      }\n    }\n    final String name = tb.toString();\n\n    // check imported Java modules\n    String path = string(nm.uri());\n    final String p = ModuleLoader.uri2path(path);\n    if(p != null) path = p;\n    path = path.replace(\"/\", \".\").substring(1);\n\n    final Object jm  = ctx.modules.findImport(path);\n    if(jm != null) {\n      // find method with identical name and arity\n      Method meth = null;\n      for(final Method m : jm.getClass().getMethods()) {\n        if(m.getName().equals(name) && m.getParameterTypes().length == args.length) {\n          if(meth != null) JAVAAMB.thrw(ii, path + ':' + name);\n          meth = m;\n        }\n      }\n\n      if(meth != null) {\n        // check if user has sufficient permissions to call the function\n        Perm perm = Perm.ADMIN;\n        final QueryModule.Requires req = meth.getAnnotation(QueryModule.Requires.class);\n        if(req != null) perm = Perm.get(req.value().name());\n        if(!ctx.context.user.has(perm)) return null;\n        return new JavaModuleFunc(ii, jm, meth, args);\n      }\n      WHICHJAVA.thrw(ii, path + ':' + name);\n    }\n\n    // only allowed with administrator permissions\n    if(!ctx.context.user.has(Perm.ADMIN)) return null;\n\n    // check addressed class\n    try {\n      return new JavaFunc(ii, ctx.modules.findClass(path), name, args);\n    } catch(final ClassNotFoundException ex) {\n      // only throw exception if \"java:\" prefix was explicitly specified\n      if(java) throw WHICHJAVA.thrw(ii, uri);\n    } catch(final Throwable th) {\n      Util.debug(th);\n      throw INITJAVA.thrw(ii, th);\n    }\n\n    // no function found\n    return null;\n  }","commit_id":"1c8c09299e1a958c0cf89c72b26d78b2c97fd47d","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Converts the specified result to an XQuery value.\n   * @param res result object\n   * @return value\n   * @throws QueryException query exception\n   */\n  public static Value toValue(final Object res) throws QueryException {\n    if(res == null) return Empty.SEQ;\n    if(res instanceof Value) return (Value) res;\n    if(res instanceof Iter) return ((Iter) res).value();\n    // find XQuery mapping for specified type\n    final Type type = type(res);\n    if(type != null) return type.cast(res, null);\n\n    if(!res.getClass().isArray()) return new Jav(res);\n\n    final ValueBuilder vb = new ValueBuilder();\n    if(res instanceof boolean[]) {\n      for(final boolean o : (boolean[]) res) vb.add(Bln.get(o));\n    } else if(res instanceof char[]) {\n      vb.add(Str.get(new String((char[]) res)));\n    } else if(res instanceof byte[]) {\n      for(final byte o : (byte[]) res) vb.add(new Int(o, AtomType.BYT));\n    } else if(res instanceof short[]) {\n      for(final short o : (short[]) res) vb.add(Int.get(o));\n    } else if(res instanceof int[]) {\n      for(final int o : (int[]) res) vb.add(Int.get(o));\n    } else if(res instanceof long[]) {\n      for(final long o : (long[]) res) vb.add(Int.get(o));\n    } else if(res instanceof float[]) {\n      for(final float o : (float[]) res) vb.add(Flt.get(o));\n    } else if(res instanceof double[]) {\n      for(final double o : (double[]) res) vb.add(Dbl.get(o));\n    } else {\n      for(final Object o : (Object[]) res) {\n        vb.add(o instanceof Value ? (Value) o : new Jav(o));\n      }\n    }\n    return vb.value();\n  }","id":56795,"modified_method":"/**\n   * Converts the specified result to an XQuery value.\n   * @param res result object\n   * @return value\n   * @throws QueryException query exception\n   */\n  public static Value toValue(final Object res) throws QueryException {\n    if(res == null) return Empty.SEQ;\n    if(res instanceof Value) return (Value) res;\n    if(res instanceof Iter) return ((Iter) res).value();\n    // find XQuery mapping for specified type\n    final Type type = type(res);\n    if(type != null) return type.cast(res, null);\n\n    if(!res.getClass().isArray()) return new Jav(res);\n\n    final ValueBuilder vb = new ValueBuilder();\n    if(res instanceof boolean[]) {\n      for(final boolean o : (boolean[]) res) vb.add(Bln.get(o));\n    } else if(res instanceof char[]) {\n      vb.add(Str.get(new String((char[]) res)));\n    } else if(res instanceof byte[]) {\n      for(final byte o : (byte[]) res) vb.add(new Int(o, AtomType.BYT));\n    } else if(res instanceof short[]) {\n      for(final short o : (short[]) res) vb.add(new Int(o, AtomType.SHR));\n    } else if(res instanceof int[]) {\n      for(final int o : (int[]) res) vb.add(new Int(o, AtomType.INT));\n    } else if(res instanceof long[]) {\n      for(final long o : (long[]) res) vb.add(Int.get(o));\n    } else if(res instanceof float[]) {\n      for(final float o : (float[]) res) vb.add(Flt.get(o));\n    } else if(res instanceof double[]) {\n      for(final double o : (double[]) res) vb.add(Dbl.get(o));\n    } else {\n      for(final Object o : (Object[]) res) {\n        vb.add(o instanceof Value ? (Value) o : new Jav(o));\n      }\n    }\n    return vb.value();\n  }","commit_id":"1c8c09299e1a958c0cf89c72b26d78b2c97fd47d","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public Value value(final QueryContext ctx) throws QueryException {\r\n    final Value val = ctx.value(expr);\r\n\r\n    final long len = val.size();\r\n    // input is empty\r\n    if(len == 0) {\r\n      if(type.mayBeZero()) return val;\r\n      throw XPEMPTY.thrw(info, description());\r\n    }\r\n    // treat as empty sequence\r\n    if(type.occ == Occ.ZERO) NOTREAT.thrw(info, description(), val.type, type);\r\n\r\n    if(type.zeroOrOne()) {\r\n      if(len > 1) NOTREATS.thrw(info, description(), type);\r\n      final Item it = val.itemAt(0);\r\n      if(!it.type.instanceOf(type.type)) NOTREAT.thrw(info, description(), it.type, type);\r\n      return it;\r\n    }\r\n\r\n    for(long i = 0; i < len; i++) {\r\n      final Item it = val.itemAt(i);\r\n      if(!it.type.instanceOf(type.type))\r\n        NOTREAT.thrw(info, description(), it.type, type);\r\n    }\r\n    return val;\r\n  }","id":56796,"modified_method":"@Override\r\n  public Value value(final QueryContext ctx) throws QueryException {\r\n    final Value val = ctx.value(expr);\r\n\r\n    final long len = val.size();\r\n    // input is empty\r\n    if(len == 0) {\r\n      if(type.mayBeZero()) return val;\r\n      NOTREAT.thrw(info, description(), Empty.SEQ, type);\r\n    }\r\n    // treat as empty sequence\r\n    if(type.occ == Occ.ZERO) NOTREAT.thrw(info, description(), val.type, type);\r\n\r\n    if(type.zeroOrOne()) {\r\n      if(len > 1) NOTREATS.thrw(info, description(), type);\r\n      final Item it = val.itemAt(0);\r\n      if(!it.type.instanceOf(type.type)) NOTREAT.thrw(info, description(), it.type, type);\r\n      return it;\r\n    }\r\n\r\n    for(long i = 0; i < len; i++) {\r\n      final Item it = val.itemAt(i);\r\n      if(!it.type.instanceOf(type.type))\r\n        NOTREAT.thrw(info, description(), it.type, type);\r\n    }\r\n    return val;\r\n  }","commit_id":"e57a6f89c3777089a042165c26aefc7d31279e18","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public Iter iter(final QueryContext ctx) throws QueryException {\r\n    final Iter iter = ctx.iter(expr);\r\n    final Item it = iter.next();\r\n    // input is empty\r\n    if(it == null) {\r\n      if(type.mayBeZero()) return Empty.ITER;\r\n      throw XPEMPTY.thrw(info, description());\r\n    }\r\n    // treat as empty sequence\r\n    if(type.occ == Occ.ZERO) NOTREAT.thrw(info, description(), it.type, type);\r\n\r\n    if(type.zeroOrOne()) {\r\n      if(iter.next() != null) NOTREATS.thrw(info, description(), type);\r\n      if(!it.type.instanceOf(type.type)) NOTREAT.thrw(info, description(), it.type, type);\r\n      return it.iter();\r\n    }\r\n\r\n    return new Iter() {\r\n      Item i = it;\r\n\r\n      @Override\r\n      public Item next() throws QueryException {\r\n        if(i == null) return null;\r\n        if(!i.type.instanceOf(type.type)) NOTREAT.thrw(info, description(), i.type, type);\r\n        final Item ii = i;\r\n        i = iter.next();\r\n        return ii;\r\n      }\r\n    };\r\n  }","id":56797,"modified_method":"@Override\r\n  public Iter iter(final QueryContext ctx) throws QueryException {\r\n    final Iter iter = ctx.iter(expr);\r\n    final Item it = iter.next();\r\n    // input is empty\r\n    if(it == null) {\r\n      if(type.mayBeZero()) return Empty.ITER;\r\n      NOTREAT.thrw(info, description(), Empty.SEQ, type);\r\n    }\r\n    // treat as empty sequence\r\n    if(type.occ == Occ.ZERO) NOTREAT.thrw(info, description(), it.type, type);\r\n\r\n    if(type.zeroOrOne()) {\r\n      if(iter.next() != null) NOTREATS.thrw(info, description(), type);\r\n      if(!it.type.instanceOf(type.type)) NOTREAT.thrw(info, description(), it.type, type);\r\n      return it.iter();\r\n    }\r\n\r\n    return new Iter() {\r\n      Item i = it;\r\n\r\n      @Override\r\n      public Item next() throws QueryException {\r\n        if(i == null) return null;\r\n        if(!i.type.instanceOf(type.type)) NOTREAT.thrw(info, description(), i.type, type);\r\n        final Item ii = i;\r\n        i = iter.next();\r\n        return ii;\r\n      }\r\n    };\r\n  }","commit_id":"e57a6f89c3777089a042165c26aefc7d31279e18","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  protected boolean run() {\r\n    final boolean create = context.user.perm(User.CREATE);\r\n    final String path = args[0];\r\n    String name = MetaData.normPath(path);\r\n    if(name == null) return error(NAMEINVALID, path);\r\n\r\n    // add slash to the target if addressed file is a ZIP file or directory\r\n    IO io = null;\r\n    if(in == null) {\r\n      io = IO.get(args[1]);\r\n      if(!io.exists()) return error(FILEWHICH, create ? io : args[1]);\r\n      if(!path.endsWith(\"/\") && (io.isDir() || io.isArchive())) name += '/';\r\n    }\r\n\r\n    String target = \"\";\r\n    final int s = name.lastIndexOf('/');\r\n    if(s != -1) {\r\n      target = name.substring(0, s);\r\n      name = name.substring(s + 1);\r\n    }\r\n\r\n    Parser parser;\r\n    if(io != null) {\r\n      // set name of document\r\n      if(!name.isEmpty()) io.name(name);\r\n      // get name from io reference\r\n      else if(!(io instanceof IOContent)) name = io.name();\r\n      parser = new DirParser(io, target, prop);\r\n    } else {\r\n      parser = new SAXWrapper(new SAXSource(in), name, target, context.prop);\r\n    }\r\n\r\n    // ensure that the name is not empty and contains no trailing dots\r\n    if(name.isEmpty() || name.endsWith(\".\")) return error(NAMEINVALID, name);\r\n\r\n    // create disk instances for large documents\r\n    // (does not work for input streams and directories)\r\n    final long fl = parser.src.length();\r\n    boolean large = false;\r\n    final Runtime rt = Runtime.getRuntime();\r\n    if(fl > rt.freeMemory() / 3) {\r\n      Performance.gc(2);\r\n      large = fl > rt.freeMemory() / 3;\r\n    }\r\n\r\n    // create random database name for disk-based creation\r\n    final Data data = context.data();\r\n    final String dbname = large ? context.mprop.random(data.meta.name) : name;\r\n\r\n    build = large ? new DiskBuilder(dbname, parser, context) :\r\n      new MemBuilder(dbname, parser, context.prop);\r\n\r\n    Data tmp = null;\r\n    try {\r\n      tmp = build.build();\r\n      // ignore empty fragments\r\n      // [CG] check if fragments can be empty at all\r\n      if(tmp.meta.size > 1) {\r\n        data.insert(data.meta.size, -1, tmp);\r\n        context.update();\r\n        data.flush();\r\n      }\r\n      return info(parser.info() + PATHADDED, name, perf);\r\n    } catch(final IOException ex) {\r\n      Util.debug(ex);\r\n      return error(Util.message(ex));\r\n    } finally {\r\n      // close and drop intermediary database instance\r\n      try { build.close(); } catch(final IOException e) { }\r\n      if(tmp != null) try { tmp.close(); } catch(final IOException e) { }\r\n      if(large) DropDB.drop(dbname, context.mprop);\r\n    }\r\n  }","id":56798,"modified_method":"@Override\r\n  protected boolean run() {\r\n    final boolean create = context.user.perm(User.CREATE);\r\n    final String path = args[0];\r\n    String name = MetaData.normPath(path);\r\n    if(name == null || name.endsWith(\".\")) return error(NAMEINVALID, path);\r\n\r\n    // add slash to the target if the addressed file is an archive or directory\r\n    IO io = null;\r\n    if(in == null) {\r\n      io = IO.get(args[1]);\r\n      if(!io.exists()) return error(FILEWHICH, create ? io : args[1]);\r\n      if(!name.endsWith(\"/\") && (io.isDir() || io.isArchive())) name += '/';\r\n    }\r\n\r\n    String target = \"\";\r\n    final int s = name.lastIndexOf('/');\r\n    if(s != -1) {\r\n      target = name.substring(0, s);\r\n      name = name.substring(s + 1);\r\n    }\r\n\r\n    Parser parser;\r\n    if(io != null) {\r\n      // set name of document\r\n      if(!name.isEmpty()) io.name(name);\r\n      // get name from io reference\r\n      else if(!(io instanceof IOContent)) name = io.name();\r\n      parser = new DirParser(io, target, prop);\r\n    } else {\r\n      parser = new SAXWrapper(new SAXSource(in), name, target, context.prop);\r\n    }\r\n\r\n    // ensure that the final name is not empty\r\n    if(name.isEmpty()) return error(NAMEINVALID, name);\r\n\r\n    // create disk instances for large documents\r\n    // (does not work for input streams and directories)\r\n    final long fl = parser.src.length();\r\n    boolean large = false;\r\n    final Runtime rt = Runtime.getRuntime();\r\n    if(fl > rt.freeMemory() / 3) {\r\n      Performance.gc(2);\r\n      large = fl > rt.freeMemory() / 3;\r\n    }\r\n\r\n    // create random database name for disk-based creation\r\n    final Data data = context.data();\r\n    final String dbname = large ? context.mprop.random(data.meta.name) : name;\r\n\r\n    build = large ? new DiskBuilder(dbname, parser, context) :\r\n      new MemBuilder(dbname, parser, context.prop);\r\n\r\n    Data tmp = null;\r\n    try {\r\n      tmp = build.build();\r\n      // ignore empty fragments\r\n      // [CG] check if fragments can be empty at all\r\n      if(tmp.meta.size > 1) {\r\n        data.insert(data.meta.size, -1, tmp);\r\n        context.update();\r\n        data.flush();\r\n      }\r\n      return info(parser.info() + PATHADDED, name, perf);\r\n    } catch(final IOException ex) {\r\n      Util.debug(ex);\r\n      return error(Util.message(ex));\r\n    } finally {\r\n      // close and drop intermediary database instance\r\n      try { build.close(); } catch(final IOException e) { }\r\n      if(tmp != null) try { tmp.close(); } catch(final IOException e) { }\r\n      if(large) DropDB.drop(dbname, context.mprop);\r\n    }\r\n  }","commit_id":"cce664e6475b76c4d46a7da8834bbddda1b59a47","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Create a {@link Data} instance for the specified document.\n   * @param doc item representing document(s)\n   * @param pth target path\n   * @return {@link Data} instance from the parsed document(s)\n   * @throws QueryException if {@code doc} does not represent valid document(s)\n   */\n  private Data docData(final Item doc, final byte[] pth)\n      throws QueryException {\n\n    final MemData mdata;\n    String name = string(pth);\n\n    // add slash to the target if addressed file is a ZIP file or directory\n    IO io = null;\n    if(doc.str()) {\n      io = IO.get(string(doc.atom(input)));\n      if(!io.exists()) throw RESFNF.thrw(input, pth);\n      if(!name.endsWith(\"/\") && (io.isDir() || io.isArchive())) name += \"/\";\n    }\n\n    String target = \"\";\n    final int s = name.lastIndexOf('/');\n    if(s != -1) {\n      target = name.substring(0, s);\n      name = name.substring(s + 1);\n    }\n\n    if(doc.str()) {\n      // set name of document\n      if(!name.isEmpty()) io.name(name);\n      // get name from io reference\n      else if(!(io instanceof IOContent)) name = io.name();\n    }\n\n    // ensure that the name is not empty and contains no trailing dots\n    if(name.isEmpty() || name.endsWith(\".\")) RESINV.thrw(input, pth);\n\n    if(doc.node()) {\n      // adding a document node\n      final ANode nd = (ANode) doc;\n      if(nd.ndType() != NodeType.DOC) UPDOCTYPE.thrw(input, nd);\n      mdata = new MemData(data);\n      new DataBuilder(mdata).build(nd);\n      mdata.update(0, Data.DOC, pth);\n    } else if(doc.str()) {\n      final DirParser p = new DirParser(io, target, ctx.prop);\n      final MemBuilder b = new MemBuilder(data.meta.name, p, ctx.prop);\n      try {\n        mdata = b.build();\n      } catch(final IOException ex) {\n        throw IOERR.thrw(input, ex);\n      }\n    } else {\n      throw STRNODTYPE.thrw(input, this, doc.type);\n    }\n    return mdata;\n  }","id":56799,"modified_method":"/**\n   * Create a {@link Data} instance for the specified document.\n   * @param doc item representing document(s)\n   * @param pth target path\n   * @return {@link Data} instance from the parsed document(s)\n   * @throws QueryException if {@code doc} does not represent valid document(s)\n   */\n  private Data docData(final Item doc, final byte[] pth)\n      throws QueryException {\n\n    final MemData mdata;\n    String name = string(pth);\n    if(name.endsWith(\".\")) RESINV.thrw(input, pth);\n\n    // add slash to the target if the addressed file is an archive or directory\n    IO io = null;\n    if(doc.str()) {\n      io = IO.get(string(doc.atom(input)));\n      if(!io.exists()) RESFNF.thrw(input, pth);\n      if(!name.endsWith(\"/\") && (io.isDir() || io.isArchive())) name += \"/\";\n    }\n\n    String target = \"\";\n    final int s = name.lastIndexOf('/');\n    if(s != -1) {\n      target = name.substring(0, s);\n      name = name.substring(s + 1);\n    }\n\n    if(doc.str()) {\n      // set name of document\n      if(!name.isEmpty()) io.name(name);\n      // get name from io reference\n      else if(!(io instanceof IOContent)) name = io.name();\n    }\n\n    // ensure that the final name is not empty\n    if(name.isEmpty()) RESINV.thrw(input, pth);\n\n    if(doc.node()) {\n      // adding a document node\n      final ANode nd = (ANode) doc;\n      if(nd.ndType() != NodeType.DOC) UPDOCTYPE.thrw(input, nd);\n      mdata = new MemData(data);\n      new DataBuilder(mdata).build(nd);\n      mdata.update(0, Data.DOC, pth);\n    } else if(doc.str()) {\n      final DirParser p = new DirParser(io, target, ctx.prop);\n      final MemBuilder b = new MemBuilder(data.meta.name, p, ctx.prop);\n      try {\n        mdata = b.build();\n      } catch(final IOException ex) {\n        throw IOERR.thrw(input, ex);\n      }\n    } else {\n      throw STRNODTYPE.thrw(input, this, doc.type);\n    }\n    return mdata;\n  }","commit_id":"cce664e6475b76c4d46a7da8834bbddda1b59a47","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  protected boolean run() {\r\n    final Data data = context.data();\r\n    final String target = args[0];\r\n    if(target.endsWith(\".\")) return error(NAMEINVALID, target);\r\n\r\n    // delete documents\r\n    final IntList docs = data.docs(target);\r\n    delete(context, docs);\r\n    // delete raw resources\r\n    final TokenList raw = files(data, target);\r\n    delete(data, raw);\r\n\r\n    return info(PATHDELETED, docs.size() + raw.size(), perf);\r\n  }","id":56800,"modified_method":"@Override\r\n  protected boolean run() {\r\n    final Data data = context.data();\r\n    final String target = args[0];\r\n\r\n    // delete documents\r\n    final IntList docs = data.docs(target);\r\n    delete(context, docs);\r\n    // delete raw resources\r\n    final TokenList raw = files(data, target);\r\n    delete(data, raw);\r\n\r\n    return info(PATHDELETED, docs.size() + raw.size(), perf);\r\n  }","commit_id":"cce664e6475b76c4d46a7da8834bbddda1b59a47","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  protected boolean run() {\n    final boolean create = context.user.perm(User.CREATE);\n    if(in == null) {\n      final IO file = IO.get(args[1]);\n      if(!file.exists() || file.isDir())\n        return error(FILEWHICH, create ? file : args[1]);\n      in = file.inputSource();\n    }\n\n    final String path = MetaData.normPath(args[0]);\n    if(path == null) return error(NAMEINVALID, args[0]);\n\n    final IOFile file = context.data().meta.binary(path);\n    if(file == null || file.isDir())\n      return error(NAMEINVALID, create ? path : args[0]);\n\n    new IOFile(file.dir()).md();\n\n    PrintOutput po = null;\n    try {\n      po = new PrintOutput(file.path());\n      try {\n        final Reader r = in.getCharacterStream();\n        final InputStream is = in.getByteStream();\n        final String  id = in.getSystemId();\n        if(r != null) {\n          for(int c; (c = r.read()) != -1;) po.utf8(c);\n        } else if(is != null) {\n          for(int b; (b = is.read()) != -1;) po.write(b);\n        } else if(id != null) {\n          final BufferInput bi = IO.get(id).buffer();\n          try {\n            for(int b; (b = bi.read()) != -1;) po.write(b);\n          } finally {\n            bi.close();\n          }\n        }\n      } finally {\n        po.close();\n      }\n    } catch(final IOException ex) {\n      return error(DBNOTSTORED, ex.getMessage());\n    }\n    return info(QUERYEXEC, perf);\n  }","id":56801,"modified_method":"@Override\n  protected boolean run() {\n    final boolean create = context.user.perm(User.CREATE);\n    if(in == null) {\n      final IO file = IO.get(args[1]);\n      if(!file.exists() || file.isDir())\n        return error(FILEWHICH, create ? file : args[1]);\n      in = file.inputSource();\n    }\n\n    final String path = MetaData.normPath(args[0]);\n    if(path == null) return error(NAMEINVALID, args[0]);\n\n    // ensure that the name is not empty and contains no trailing dots\n    final IOFile file = context.data().meta.binary(path);\n    if(path.isEmpty() || path.endsWith(\".\") || file == null || file.isDir())\n      return error(NAMEINVALID, create ? path : args[0]);\n\n    new IOFile(file.dir()).md();\n\n    PrintOutput po = null;\n    try {\n      po = new PrintOutput(file.path());\n      try {\n        final Reader r = in.getCharacterStream();\n        final InputStream is = in.getByteStream();\n        final String  id = in.getSystemId();\n        if(r != null) {\n          for(int c; (c = r.read()) != -1;) po.utf8(c);\n        } else if(is != null) {\n          for(int b; (b = is.read()) != -1;) po.write(b);\n        } else if(id != null) {\n          final BufferInput bi = IO.get(id).buffer();\n          try {\n            for(int b; (b = bi.read()) != -1;) po.write(b);\n          } finally {\n            bi.close();\n          }\n        }\n      } finally {\n        po.close();\n      }\n    } catch(final IOException ex) {\n      return error(DBNOTSTORED, ex.getMessage());\n    }\n    return info(QUERYEXEC, perf);\n  }","commit_id":"cce664e6475b76c4d46a7da8834bbddda1b59a47","url":"https://github.com/BaseXdb/basex"},{"original_method":"private void doTest() throws Throwable {\n    final List<String> data = TestUtils.readInput(getTestDataPath() + getTestName(true) + \".test\");\n    String input = data.get(0);\n    while (true) {\n      final Matcher matcher = PATTERN.matcher(input);\n      if (!matcher.find()) break;\n      final String[] strings = matcher.group(1).split(\"=\");\n      String name = strings[0];\n      final CommonCodeStyleSettings groovySettings =\n        CodeStyleSettingsManager.getSettings(getProject()).getCommonSettings(GroovyFileType.GROOVY_LANGUAGE);\n      final Field field = CommonCodeStyleSettings.class.getField(name);\n      final String value = strings[1];\n      if (\"true\".equals(value) || \"false\".equals(value)) {\n        field.set(groovySettings, Boolean.parseBoolean(value));\n      } else {\n        try {\n          field.set(groovySettings, Integer.parseInt(value));\n        }\n        catch (NumberFormatException e) {\n          field.set(groovySettings, CommonCodeStyleSettings.class.getField(value).get(value));\n        }\n      }\n      input = input.substring(matcher.end());\n    }\n\n    checkFormatting(input, data.get(1));\n  }","id":56802,"modified_method":"private void doTest() throws Throwable {\n    final List<String> data = TestUtils.readInput(getTestDataPath() + getTestName(true) + \".test\");\n    String input = data.get(0);\n    while (true) {\n      final Matcher matcher = PATTERN.matcher(input);\n      if (!matcher.find()) break;\n      final String[] strings = matcher.group(1).split(\"=\");\n      String name = strings[0];\n\n      Object settingObj;\n      Field field;\n\n      CodeStyleSettings settings = CodeStyleSettingsManager.getSettings(getProject());\n      try {\n        field = CommonCodeStyleSettings.class.getField(name);\n        settingObj = settings.getCommonSettings(GroovyFileType.GROOVY_LANGUAGE);\n      }\n      catch (NoSuchFieldException e) {\n        field = GroovyCodeStyleSettings.class.getField(name);\n        settingObj = settings.getCustomSettings(GroovyCodeStyleSettings.class);\n      }\n\n      final String value = strings[1];\n      if (\"true\".equals(value) || \"false\".equals(value)) {\n        field.set(settingObj, Boolean.parseBoolean(value));\n      } else {\n        try {\n          field.set(settingObj, Integer.parseInt(value));\n        }\n        catch (NumberFormatException e) {\n          field.set(settingObj, CommonCodeStyleSettings.class.getField(value).get(value));\n        }\n      }\n      input = input.substring(matcher.end());\n    }\n\n    checkFormatting(input, data.get(1));\n  }","commit_id":"caece37a413b28ac78dfd5f11f46ec9401309b67","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void customizeSettings(@NotNull CodeStyleSettingsCustomizable consumer,\n                                @NotNull SettingsType settingsType) {\n    if (settingsType == SettingsType.WRAPPING_AND_BRACES_SETTINGS) {\n      consumer.showAllStandardOptions();\n      consumer.showCustomOption(GroovyCodeStyleSettings.class, \"USE_FLYING_GEESE_BRACES\", \"Use flying geese braces\", CodeStyleSettingsCustomizable.WRAPPING_BRACES);\n      return;\n    }\n    consumer.showAllStandardOptions();\n  }","id":56803,"modified_method":"@Override\n  public void customizeSettings(@NotNull CodeStyleSettingsCustomizable consumer,\n                                @NotNull SettingsType settingsType) {\n    if (settingsType == SettingsType.WRAPPING_AND_BRACES_SETTINGS) {\n      consumer.showAllStandardOptions();\n      consumer.showCustomOption(GroovyCodeStyleSettings.class, \"USE_FLYING_GEESE_BRACES\", \"Use flying geese braces\", CodeStyleSettingsCustomizable.WRAPPING_BRACES);\n      return;\n    }\n    if (settingsType == SettingsType.SPACING_SETTINGS) {\n      consumer.showAllStandardOptions();\n      consumer.showCustomOption(GroovyCodeStyleSettings.class, \"SPACE_IN_NAMED_ARGUMENT\", \"In named argument after ':'\", CodeStyleSettingsCustomizable.SPACES_OTHER);\n      return;\n    }\n    consumer.showAllStandardOptions();\n  }","commit_id":"caece37a413b28ac78dfd5f11f46ec9401309b67","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void handleInsert(InsertionContext context, LookupElement item) {\n    int tailOffset = context.getTailOffset();\n\n    PsiElement argumentList = context.getFile().findElementAt(tailOffset - 1);\n    while (argumentList != null && !(argumentList instanceof GrArgumentList) && !(argumentList instanceof GrListOrMap)) {\n      argumentList = argumentList.getParent();\n    }\n\n    final Editor editor = context.getEditor();\n\n    if (argumentList != null) {\n      if (context.getCompletionChar() == ':') {\n        context.setAddCompletionChar(false);\n      }\n      \n      String argumentListText = argumentList.getText();\n\n      String s = argumentListText.substring(tailOffset - argumentList.getTextOffset());\n      s = StringUtil.trimEnd(s, \")\");\n\n      if (s.trim().length() == 0) {\n        editor.getDocument().insertString(tailOffset, \":\");\n        editor.getCaretModel().moveToOffset(tailOffset + 1);\n      }\n      else {\n        if (context.getCompletionChar() == Lookup.REPLACE_SELECT_CHAR) {\n          char a = s.charAt(0);\n          if (Character.isLetterOrDigit(a)) {\n            return;\n          }\n        }\n\n        Matcher m = Pattern.compile(\"([ \\\\t]*):([ \\\\t]*)(.*)\", Pattern.DOTALL).matcher(s);\n        if (m.matches()) {\n          int caret = tailOffset + m.end(2);\n\n          if (m.group(2).isEmpty()) {\n            editor.getDocument().insertString(caret, \" \");\n            caret++;\n          }\n\n          editor.getCaretModel().moveToOffset(caret);\n        }\n        else {\n          m = Pattern.compile(\"([ \\\\t]*)([\\\\n \\\\t]*)[\\\\],](.*)\", Pattern.DOTALL).matcher(s);\n          if (m.matches()) {\n            editor.getDocument().replaceString(tailOffset, tailOffset + m.start(2), \":\");\n            editor.getCaretModel().moveToOffset(tailOffset + 1);\n          }\n          else {\n            m = Pattern.compile(\"([ \\\\t]*)(.*)\", Pattern.DOTALL).matcher(s);\n            if (!m.matches()) throw new RuntimeException(\"This pattern must match any non-empty string! (\" + s + \")\");\n            \n            String toInsert = m.group(2).startsWith(\"\\n\") ? \":,\" : \":, \";\n            editor.getDocument().replaceString(tailOffset, tailOffset + m.start(2), toInsert);\n            editor.getCaretModel().moveToOffset(tailOffset + 1);\n            context.setTailOffset(tailOffset + 1);\n          }\n        }\n      }\n      \n      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n      editor.getSelectionModel().removeSelection();\n    }\n  }","id":56804,"modified_method":"public void handleInsert(InsertionContext context, LookupElement item) {\n    int tailOffset = context.getTailOffset();\n\n    PsiElement argumentList = context.getFile().findElementAt(tailOffset - 1);\n    while (argumentList != null && !(argumentList instanceof GrArgumentList) && !(argumentList instanceof GrListOrMap)) {\n      argumentList = argumentList.getParent();\n    }\n\n    final Editor editor = context.getEditor();\n\n    if (argumentList != null) {\n      CodeStyleSettings settings = CodeStyleSettingsManager.getInstance(context.getProject()).getCurrentSettings();\n      GroovyCodeStyleSettings codeStyleSettings = settings.getCustomSettings(GroovyCodeStyleSettings.class);\n      CommonCodeStyleSettings commonCodeStyleSettings = settings.getCommonSettings(GroovyFileType.GROOVY_LANGUAGE);\n\n      boolean insertSpace = codeStyleSettings.SPACE_IN_NAMED_ARGUMENT;\n      \n      if (context.getCompletionChar() == ':' || (insertSpace && context.getCompletionChar() == ' ')) {\n        context.setAddCompletionChar(false);\n      }\n      \n      String argumentListText = argumentList.getText();\n\n      String s = argumentListText.substring(tailOffset - argumentList.getTextOffset());\n      s = StringUtil.trimEnd(s, \")\");\n\n      if (s.trim().length() == 0) {\n        String toInsert = insertSpace ? \": \" : \":\";\n        editor.getDocument().insertString(tailOffset, toInsert);\n        editor.getCaretModel().moveToOffset(tailOffset + toInsert.length());\n      }\n      else {\n        if (context.getCompletionChar() == Lookup.REPLACE_SELECT_CHAR) {\n          char a = s.charAt(0);\n          if (Character.isLetterOrDigit(a)) {\n            return;\n          }\n        }\n\n        Matcher m = Pattern.compile(\"([ \\\\t]*):([ \\\\t]*)(.*)\", Pattern.DOTALL).matcher(s);\n        if (m.matches()) {\n          int caret = tailOffset + m.end(2);\n\n          if (m.group(2).isEmpty()) {\n            editor.getDocument().insertString(caret, \" \");\n            caret++;\n          }\n\n          editor.getCaretModel().moveToOffset(caret);\n        }\n        else {\n          m = Pattern.compile(\"([ \\\\t]*)([\\\\n \\\\t]*)[\\\\],](.*)\", Pattern.DOTALL).matcher(s);\n          if (m.matches()) {\n            String toInsert = insertSpace ? \": \" : \":\";\n            editor.getDocument().replaceString(tailOffset, tailOffset + m.start(2), toInsert);\n            editor.getCaretModel().moveToOffset(tailOffset + toInsert.length());\n          }\n          else {\n            m = Pattern.compile(\"([ \\\\t]*)(.*)\", Pattern.DOTALL).matcher(s);\n            if (!m.matches()) throw new RuntimeException(\"This pattern must match any non-empty string! (\" + s + \")\");\n\n            StringBuilder sb = new StringBuilder(4);\n            sb.append(':');\n            int shiftCaret = 1;\n            if (insertSpace) {\n              sb.append(' ');\n              shiftCaret++;\n            }\n            sb.append(',');\n\n            if (!m.group(2).startsWith(\"\\n\") && commonCodeStyleSettings.SPACE_AFTER_COMMA) {\n              sb.append(' ');\n            }\n\n            editor.getDocument().replaceString(tailOffset, tailOffset + m.start(2), sb);\n            editor.getCaretModel().moveToOffset(tailOffset + shiftCaret);\n          }\n        }\n      }\n      \n      editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n      editor.getSelectionModel().removeSelection();\n    }\n  }","commit_id":"caece37a413b28ac78dfd5f11f46ec9401309b67","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void handleInsert(InsertionContext context, LookupElementDecorator<LookupItem> item) {\n    @SuppressWarnings({\"unchecked\"}) final LookupItem<PsiClass> delegate = item.getDelegate();\n\n    final PsiElement position = SmartCompletionDecorator.getPosition(context, delegate);\n    final PsiExpression enclosing = PsiTreeUtil.getContextOfType(position, PsiExpression.class, true);\n    final PsiAnonymousClass anonymousClass = PsiTreeUtil.getParentOfType(position, PsiAnonymousClass.class);\n    final boolean inAnonymous = anonymousClass != null && anonymousClass.getParent() == enclosing;\n    PsiClass psiClass = (PsiClass)item.getObject();\n\n    boolean isAbstract = psiClass.hasModifierProperty(PsiModifier.ABSTRACT);\n\n    if (Lookup.REPLACE_SELECT_CHAR == context.getCompletionChar()) {\n      final int plStart = context.getOffset(PARAM_LIST_START);\n      final int plEnd = context.getOffset(PARAM_LIST_END);\n      if (plStart >= 0 && plEnd >= 0) {\n        context.getDocument().deleteString(plStart, plEnd);\n        PsiDocumentManager.getInstance(context.getProject()).commitAllDocuments();\n      }\n    }\n\n    OffsetKey insideRef = context.trackOffset(context.getTailOffset(), false);\n\n    boolean fillTypeArgs = false;\n    if (delegate instanceof PsiTypeLookupItem) {\n      fillTypeArgs = !isRawTypeExpected(context, (PsiTypeLookupItem)delegate) &&\n                     psiClass.getTypeParameters().length > 0 &&\n                     ((PsiTypeLookupItem)delegate).calcGenerics(position).isEmpty() &&\n                     context.getCompletionChar() != '(';\n      delegate.handleInsert(context);\n      PostprocessReformattingAspect.getInstance(context.getProject()).doPostponedFormatting(context.getFile().getViewProvider());\n    }\n\n    insertParentheses(context, delegate, psiClass, !inAnonymous && isAbstract);\n\n    if (item.getDelegate() instanceof JavaPsiClassReferenceElement) {\n      DefaultInsertHandler.addImportForItem(context, delegate);\n    }\n\n    if (inAnonymous) {\n      return;\n    }\n\n    if (isAbstract) {\n      if (mySmart) {\n        FeatureUsageTracker.getInstance().triggerFeatureUsed(JavaCompletionFeatures.AFTER_NEW_ANONYMOUS);\n      }\n\n      PostprocessReformattingAspect.getInstance(context.getProject()).doPostponedFormatting(context.getFile().getViewProvider());\n\n      final Editor editor = context.getEditor();\n      final int offset = context.getTailOffset();\n      editor.getDocument().insertString(offset, \" {}\");\n      editor.getCaretModel().moveToOffset(offset + 2);\n\n      if (fillTypeArgs && JavaCompletionUtil.promptTypeArgs(context, context.getOffset(insideRef))) return;\n\n      context.setLaterRunnable(generateAnonymousBody(editor, context.getFile()));\n    }\n    else {\n      PsiDocumentManager.getInstance(context.getProject()).commitAllDocuments();\n      final PsiNewExpression newExpression =\n        PsiTreeUtil.findElementOfClassAtOffset(context.getFile(), context.getStartOffset(), PsiNewExpression.class, false);\n      if (newExpression != null) {\n        final PsiJavaCodeReferenceElement classReference = newExpression.getClassOrAnonymousClassReference();\n        if (classReference != null) {\n          CodeStyleManager.getInstance(context.getProject()).reformat(classReference);\n        }\n      }\n      if (mySmart) {\n        FeatureUsageTracker.getInstance().triggerFeatureUsed(JavaCompletionFeatures.AFTER_NEW);\n      }\n      if (fillTypeArgs && JavaCompletionUtil.promptTypeArgs(context, context.getOffset(insideRef))) return;\n    }\n  }","id":56805,"modified_method":"public void handleInsert(InsertionContext context, LookupElementDecorator<LookupItem> item) {\n    @SuppressWarnings({\"unchecked\"}) final LookupItem<PsiClass> delegate = item.getDelegate();\n\n    final PsiElement position = SmartCompletionDecorator.getPosition(context, delegate);\n    final PsiExpression enclosing = PsiTreeUtil.getContextOfType(position, PsiExpression.class, true);\n    final PsiAnonymousClass anonymousClass = PsiTreeUtil.getParentOfType(position, PsiAnonymousClass.class);\n    final boolean inAnonymous = anonymousClass != null && anonymousClass.getParent() == enclosing;\n    PsiClass psiClass = (PsiClass)item.getObject();\n\n    boolean isAbstract = psiClass.hasModifierProperty(PsiModifier.ABSTRACT);\n\n    if (Lookup.REPLACE_SELECT_CHAR == context.getCompletionChar()) {\n      final int plStart = context.getOffset(PARAM_LIST_START);\n      final int plEnd = context.getOffset(PARAM_LIST_END);\n      if (plStart >= 0 && plEnd >= 0) {\n        context.getDocument().deleteString(plStart, plEnd);\n        PsiDocumentManager.getInstance(context.getProject()).commitAllDocuments();\n      }\n    }\n\n    OffsetKey insideRef = context.trackOffset(context.getTailOffset(), false);\n\n    boolean fillTypeArgs = false;\n    if (delegate instanceof PsiTypeLookupItem) {\n      fillTypeArgs = !isRawTypeExpected(context, (PsiTypeLookupItem)delegate) &&\n                     psiClass.getTypeParameters().length > 0 &&\n                     ((PsiTypeLookupItem)delegate).calcGenerics(position).isEmpty() &&\n                     context.getCompletionChar() != '(';\n      delegate.handleInsert(context);\n      PostprocessReformattingAspect.getInstance(context.getProject()).doPostponedFormatting(context.getFile().getViewProvider());\n    }\n\n    if (item.getDelegate() instanceof JavaPsiClassReferenceElement) {\n      DefaultInsertHandler.addImportForItem(context, delegate);\n    }\n\n    insertParentheses(context, delegate, psiClass, !inAnonymous && isAbstract);\n\n    if (inAnonymous) {\n      return;\n    }\n\n    if (isAbstract) {\n      if (mySmart) {\n        FeatureUsageTracker.getInstance().triggerFeatureUsed(JavaCompletionFeatures.AFTER_NEW_ANONYMOUS);\n      }\n\n      PostprocessReformattingAspect.getInstance(context.getProject()).doPostponedFormatting(context.getFile().getViewProvider());\n\n      final Editor editor = context.getEditor();\n      final int offset = context.getTailOffset();\n      editor.getDocument().insertString(offset, \" {}\");\n      editor.getCaretModel().moveToOffset(offset + 2);\n\n      if (fillTypeArgs && JavaCompletionUtil.promptTypeArgs(context, context.getOffset(insideRef))) return;\n\n      context.setLaterRunnable(generateAnonymousBody(editor, context.getFile()));\n    }\n    else {\n      PsiDocumentManager.getInstance(context.getProject()).commitAllDocuments();\n      final PsiNewExpression newExpression =\n        PsiTreeUtil.findElementOfClassAtOffset(context.getFile(), context.getStartOffset(), PsiNewExpression.class, false);\n      if (newExpression != null) {\n        final PsiJavaCodeReferenceElement classReference = newExpression.getClassOrAnonymousClassReference();\n        if (classReference != null) {\n          CodeStyleManager.getInstance(context.getProject()).reformat(classReference);\n        }\n      }\n      if (mySmart) {\n        FeatureUsageTracker.getInstance().triggerFeatureUsed(JavaCompletionFeatures.AFTER_NEW);\n      }\n      if (fillTypeArgs && JavaCompletionUtil.promptTypeArgs(context, context.getOffset(insideRef))) return;\n    }\n  }","commit_id":"8e6bd961e65dc06ac18c148c70fb1719f6cc10e7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static int addImportForClass(PsiFile file, int startOffset, int endOffset, PsiClass aClass) throws IncorrectOperationException {\n    return JavaCompletionUtil.insertClassReference(aClass, file, startOffset, endOffset);\n  }","id":56806,"modified_method":"private static void addImportForClass(PsiClass aClass, InsertionContext context, int nameLength) {\n    context.setTailOffset(JavaCompletionUtil.insertClassReference(aClass, context.getFile(), context.getStartOffset(),\n                                                                  context.getStartOffset() + nameLength));\n    PostprocessReformattingAspect.getInstance(context.getProject()).doPostponedFormatting();\n  }","commit_id":"8e6bd961e65dc06ac18c148c70fb1719f6cc10e7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void addImportForItem(InsertionContext context, LookupElement item) throws IncorrectOperationException {\n    PsiDocumentManager.getInstance(context.getProject()).commitAllDocuments();\n\n    int startOffset = context.getStartOffset();\n    PsiFile file = context.getFile();\n    Object o = item.getObject();\n    if (o instanceof PsiClass){\n      PsiClass aClass = (PsiClass)o;\n      if (aClass.getQualifiedName() == null) return;\n      final String lookupString = item.getLookupString();\n      int length = lookupString.length();\n      final int i = lookupString.indexOf('<');\n      if (i >= 0) length = i;\n      final int newOffset = addImportForClass(file, startOffset, startOffset + length, aClass);\n      JavaCompletionUtil.shortenReference(file, newOffset);\n    }\n    else if (o instanceof PsiType){\n      PsiType type = ((PsiType)o).getDeepComponentType();\n      if (type instanceof PsiClassType) {\n        PsiClass refClass = ((PsiClassType) type).resolve();\n        if (refClass != null){\n          int length = refClass.getName().length();\n          addImportForClass(file, startOffset, startOffset + length, refClass);\n        }\n      }\n    }\n    else if (o instanceof PsiMethod){\n      PsiMethod method = (PsiMethod)o;\n      if (method.isConstructor()){\n        PsiClass aClass = method.getContainingClass();\n        if (aClass != null){\n          int length = method.getName().length();\n          addImportForClass(file, startOffset, startOffset + length, aClass);\n        }\n      }\n    }\n  }","id":56807,"modified_method":"public static void addImportForItem(InsertionContext context, LookupElement item) {\n    PsiDocumentManager.getInstance(context.getProject()).commitAllDocuments();\n\n    PsiFile file = context.getFile();\n    Object o = item.getObject();\n    if (o instanceof PsiClass){\n      PsiClass aClass = (PsiClass)o;\n      if (aClass.getQualifiedName() == null) return;\n      final String lookupString = item.getLookupString();\n      int length = lookupString.length();\n      final int i = lookupString.indexOf('<');\n      if (i >= 0) length = i;\n      addImportForClass(aClass, context, length);\n      JavaCompletionUtil.shortenReference(file, context.getStartOffset());\n    }\n    else if (o instanceof PsiType){\n      PsiType type = ((PsiType)o).getDeepComponentType();\n      if (type instanceof PsiClassType) {\n        PsiClass refClass = ((PsiClassType) type).resolve();\n        if (refClass != null){\n          int length = refClass.getName().length();\n          addImportForClass(refClass, context, length);\n        }\n      }\n    }\n    else if (o instanceof PsiMethod){\n      PsiMethod method = (PsiMethod)o;\n      if (method.isConstructor()){\n        PsiClass aClass = method.getContainingClass();\n        if (aClass != null){\n          int length = method.getName().length();\n          addImportForClass(aClass, context, length);\n        }\n      }\n    }\n  }","commit_id":"8e6bd961e65dc06ac18c148c70fb1719f6cc10e7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void handleInsert(final InsertionContext context, final JavaPsiClassReferenceElement item) {\n    final char c = context.getCompletionChar();\n\n    int offset = context.getTailOffset() - 1;\n    final PsiFile file = context.getFile();\n    if (PsiTreeUtil.findElementOfClassAtOffset(file, offset, PsiImportStatementBase.class, false) != null) {\n      final PsiJavaCodeReferenceElement ref = PsiTreeUtil.findElementOfClassAtOffset(file, offset, PsiJavaCodeReferenceElement.class, false);\n      final String qname = item.getQualifiedName();\n      if (qname != null && (ref == null || !qname.equals(ref.getCanonicalText()))) {\n        AllClassesGetter.INSERT_FQN.handleInsert(context, item);\n      }\n      return;\n    }\n\n    PsiElement position = file.findElementAt(offset);\n    PsiClass psiClass = item.getObject();\n    final Project project = context.getProject();\n    final boolean annotation = insertingAnnotation(context, item);\n\n    final Editor editor = context.getEditor();\n    if (c == '#') {\n      context.setLaterRunnable(new Runnable() {\n        public void run() {\n          new CodeCompletionHandlerBase(CompletionType.BASIC).invokeCompletion(project, editor);\n        }\n      });\n    } else if (c == '.' && PsiTreeUtil.getParentOfType(position, PsiParameterList.class) == null) {\n      AutoPopupController.getInstance(context.getProject()).autoPopupMemberLookup(context.getEditor(), null);\n    }\n\n    if (position != null) {\n      PsiElement parent = position.getParent();\n      if (parent instanceof PsiJavaCodeReferenceElement) {\n        final PsiJavaCodeReferenceElement ref = (PsiJavaCodeReferenceElement)parent;\n        if (PsiTreeUtil.getParentOfType(position, PsiDocTag.class) != null && ref.isReferenceTo(psiClass)) {\n          return;\n        }\n      }\n    }\n\n    OffsetKey refEnd = context.trackOffset(context.getTailOffset(), false);\n\n    boolean fillTypeArgs = context.getCompletionChar() == '<';\n    if (fillTypeArgs) {\n      context.setAddCompletionChar(false);\n    }\n    \n    if (shouldInsertParentheses(psiClass, position)) {\n      if (ConstructorInsertHandler.insertParentheses(context, item, psiClass, false)) {\n        fillTypeArgs |= psiClass.hasTypeParameters() && PsiUtil.getLanguageLevel(file).isAtLeast(LanguageLevel.JDK_1_5);\n      }\n    }\n    else if (insertingAnnotationWithParameters(context, item)) {\n      JavaCompletionUtil.insertParentheses(context, item, false, true);\n      AutoPopupController.getInstance(project).autoPopupParameterInfo(editor, null);\n    }\n\n    LOG.assertTrue(context.getTailOffset() >= 0);\n    String docText = context.getDocument().getText();\n    DefaultInsertHandler.addImportForItem(context, item);\n    if (context.getTailOffset() < 0) {\n      LOG.error(LogMessageEx.createEvent(\"Tail offset degraded after insertion\", \"start=\" + context.getStartOffset(),\n                                         new Attachment(context.getFile().getViewProvider().getVirtualFile().getPath(), docText)));\n    }\n\n\n    if (annotation) {\n      // Check if someone inserts annotation class that require @\n      PsiElement elementAt = file.findElementAt(context.getStartOffset());\n      final PsiElement parentElement = elementAt != null ? elementAt.getParent():null;\n\n      if (elementAt instanceof PsiIdentifier &&\n          (PsiTreeUtil.getParentOfType(elementAt, PsiAnnotationParameterList.class) != null ||\n           parentElement instanceof PsiErrorElement && parentElement.getParent() instanceof PsiJavaFile // top level annotation without @\n          )\n          && isAtTokenNeeded(context)) {\n        int expectedOffsetForAtToken = elementAt.getTextRange().getStartOffset();\n        context.getDocument().insertString(expectedOffsetForAtToken, \"@\");\n      }\n    }\n\n    if (fillTypeArgs && context.getCompletionChar() != '(') {\n      JavaCompletionUtil.promptTypeArgs(context, context.getOffset(refEnd));\n    }\n  }","id":56808,"modified_method":"public void handleInsert(final InsertionContext context, final JavaPsiClassReferenceElement item) {\n    final char c = context.getCompletionChar();\n\n    int offset = context.getTailOffset() - 1;\n    final PsiFile file = context.getFile();\n    if (PsiTreeUtil.findElementOfClassAtOffset(file, offset, PsiImportStatementBase.class, false) != null) {\n      final PsiJavaCodeReferenceElement ref = PsiTreeUtil.findElementOfClassAtOffset(file, offset, PsiJavaCodeReferenceElement.class, false);\n      final String qname = item.getQualifiedName();\n      if (qname != null && (ref == null || !qname.equals(ref.getCanonicalText()))) {\n        AllClassesGetter.INSERT_FQN.handleInsert(context, item);\n      }\n      return;\n    }\n\n    PsiElement position = file.findElementAt(offset);\n    PsiClass psiClass = item.getObject();\n    final Project project = context.getProject();\n    final boolean annotation = insertingAnnotation(context, item);\n\n    final Editor editor = context.getEditor();\n    if (c == '#') {\n      context.setLaterRunnable(new Runnable() {\n        public void run() {\n          new CodeCompletionHandlerBase(CompletionType.BASIC).invokeCompletion(project, editor);\n        }\n      });\n    } else if (c == '.' && PsiTreeUtil.getParentOfType(position, PsiParameterList.class) == null) {\n      AutoPopupController.getInstance(context.getProject()).autoPopupMemberLookup(context.getEditor(), null);\n    }\n\n    if (position != null) {\n      PsiElement parent = position.getParent();\n      if (parent instanceof PsiJavaCodeReferenceElement) {\n        final PsiJavaCodeReferenceElement ref = (PsiJavaCodeReferenceElement)parent;\n        if (PsiTreeUtil.getParentOfType(position, PsiDocTag.class) != null && ref.isReferenceTo(psiClass)) {\n          return;\n        }\n      }\n    }\n\n    OffsetKey refEnd = context.trackOffset(context.getTailOffset(), false);\n\n    boolean fillTypeArgs = context.getCompletionChar() == '<';\n    if (fillTypeArgs) {\n      context.setAddCompletionChar(false);\n    }\n\n    DefaultInsertHandler.addImportForItem(context, item);\n\n    if (shouldInsertParentheses(psiClass, file.findElementAt(context.getTailOffset() - 1))) {\n      if (ConstructorInsertHandler.insertParentheses(context, item, psiClass, false)) {\n        fillTypeArgs |= psiClass.hasTypeParameters() && PsiUtil.getLanguageLevel(file).isAtLeast(LanguageLevel.JDK_1_5);\n      }\n    }\n    else if (insertingAnnotationWithParameters(context, item)) {\n      JavaCompletionUtil.insertParentheses(context, item, false, true);\n      AutoPopupController.getInstance(project).autoPopupParameterInfo(editor, null);\n    }\n\n    if (annotation) {\n      // Check if someone inserts annotation class that require @\n      PsiElement elementAt = file.findElementAt(context.getStartOffset());\n      final PsiElement parentElement = elementAt != null ? elementAt.getParent():null;\n\n      if (elementAt instanceof PsiIdentifier &&\n          (PsiTreeUtil.getParentOfType(elementAt, PsiAnnotationParameterList.class) != null ||\n           parentElement instanceof PsiErrorElement && parentElement.getParent() instanceof PsiJavaFile // top level annotation without @\n          )\n          && isAtTokenNeeded(context)) {\n        int expectedOffsetForAtToken = elementAt.getTextRange().getStartOffset();\n        context.getDocument().insertString(expectedOffsetForAtToken, \"@\");\n      }\n    }\n\n    if (fillTypeArgs && context.getCompletionChar() != '(') {\n      JavaCompletionUtil.promptTypeArgs(context, context.getOffset(refEnd));\n    }\n  }","commit_id":"8e6bd961e65dc06ac18c148c70fb1719f6cc10e7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static int insertClassReference(@NotNull PsiClass psiClass, @NotNull PsiFile file, int offset) {\n    return insertClassReference(psiClass, file, offset, offset);\n  }","id":56809,"modified_method":"public static void insertClassReference(@NotNull PsiClass psiClass, @NotNull PsiFile file, int offset) {\n    insertClassReference(psiClass, file, offset, offset);\n  }","commit_id":"8e6bd961e65dc06ac18c148c70fb1719f6cc10e7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static int insertClassReference(PsiClass psiClass, PsiFile file, int startOffset, int endOffset) {\n    final Project project = file.getProject();\n    PsiDocumentManager.getInstance(project).commitAllDocuments();\n\n    final PsiManager manager = file.getManager();\n\n    final Document document = FileDocumentManager.getInstance().getDocument(file.getViewProvider().getVirtualFile());\n\n    final PsiReference reference = file.findReferenceAt(startOffset);\n    if (reference != null) {\n      final PsiElement resolved = reference.resolve();\n      if (resolved instanceof PsiClass) {\n        if (((PsiClass)resolved).getQualifiedName() == null || manager.areElementsEquivalent(psiClass, resolved)) {\n          return startOffset;\n        }\n      }\n    }\n\n    String name = psiClass.getName();\n    if (name == null) {\n      return startOffset;\n    }\n\n    assert document != null;\n    document.replaceString(startOffset, endOffset, name);\n\n    final RangeMarker toDelete = insertTemporary(startOffset + name.length(), document, \" \");\n\n    PsiDocumentManager.getInstance(project).commitAllDocuments();\n\n    int newStartOffset = startOffset;\n    PsiElement element = file.findElementAt(startOffset);\n    if (element instanceof PsiIdentifier) {\n      PsiElement parent = element.getParent();\n      if (parent instanceof PsiJavaCodeReferenceElement && !((PsiJavaCodeReferenceElement)parent).isQualified() && !(parent.getParent() instanceof PsiPackageStatement)) {\n        PsiJavaCodeReferenceElement ref = (PsiJavaCodeReferenceElement)parent;\n\n        if (psiClass.isValid() && !psiClass.getManager().areElementsEquivalent(psiClass, resolveReference(ref))) {\n          final boolean staticImport = ref instanceof PsiImportStaticReferenceElement;\n          PsiElement newElement = staticImport\n                                  ? ((PsiImportStaticReferenceElement)ref).bindToTargetClass(psiClass)\n                                  : ref.bindToElement(psiClass);\n\n          newElement = CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(newElement);\n          if (newElement != null) {\n            newStartOffset = newElement.getTextRange().getStartOffset();\n          }\n\n          if (!staticImport &&\n              newElement instanceof PsiJavaCodeReferenceElement &&\n              !psiClass.getManager().areElementsEquivalent(psiClass, resolveReference((PsiReference)newElement))) {\n            final String qName = psiClass.getQualifiedName();\n            if (qName != null) {\n              document.replaceString(newStartOffset, newElement.getTextRange().getEndOffset(), qName);\n            }\n          }\n        }\n      }\n    }\n\n    if (toDelete.isValid()) {\n      document.deleteString(toDelete.getStartOffset(), toDelete.getEndOffset());\n    }\n\n    return newStartOffset;\n  }","id":56810,"modified_method":"public static int insertClassReference(PsiClass psiClass, PsiFile file, int startOffset, int endOffset) {\n    final Project project = file.getProject();\n    PsiDocumentManager.getInstance(project).commitAllDocuments();\n\n    final PsiManager manager = file.getManager();\n\n    final Document document = FileDocumentManager.getInstance().getDocument(file.getViewProvider().getVirtualFile());\n\n    final PsiReference reference = file.findReferenceAt(startOffset);\n    if (reference != null) {\n      final PsiElement resolved = reference.resolve();\n      if (resolved instanceof PsiClass) {\n        if (((PsiClass)resolved).getQualifiedName() == null || manager.areElementsEquivalent(psiClass, resolved)) {\n          return endOffset;\n        }\n      }\n    }\n\n    String name = psiClass.getName();\n    if (name == null) {\n      return endOffset;\n    }\n\n    assert document != null;\n    document.replaceString(startOffset, endOffset, name);\n\n    final RangeMarker toDelete = insertTemporary(startOffset + name.length(), document, \" \");\n\n    PsiDocumentManager.getInstance(project).commitAllDocuments();\n\n    int newEndOffset = endOffset;\n    PsiElement element = file.findElementAt(startOffset);\n    if (element instanceof PsiIdentifier) {\n      PsiElement parent = element.getParent();\n      if (parent instanceof PsiJavaCodeReferenceElement && !((PsiJavaCodeReferenceElement)parent).isQualified() && !(parent.getParent() instanceof PsiPackageStatement)) {\n        PsiJavaCodeReferenceElement ref = (PsiJavaCodeReferenceElement)parent;\n\n        if (psiClass.isValid() && !psiClass.getManager().areElementsEquivalent(psiClass, resolveReference(ref))) {\n          final boolean staticImport = ref instanceof PsiImportStaticReferenceElement;\n          PsiElement newElement = staticImport\n                                  ? ((PsiImportStaticReferenceElement)ref).bindToTargetClass(psiClass)\n                                  : ref.bindToElement(psiClass);\n\n          newElement = CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(newElement);\n          if (newElement != null) {\n            newEndOffset = newElement.getTextRange().getEndOffset();\n            if (newElement instanceof PsiJavaCodeReferenceElement) {\n              PsiReferenceParameterList parameterList = ((PsiJavaCodeReferenceElement)newElement).getParameterList();\n              if (parameterList != null) {\n                newEndOffset = parameterList.getTextRange().getStartOffset();\n              }\n            }\n          }\n\n          if (!staticImport &&\n              newElement instanceof PsiJavaCodeReferenceElement &&\n              !psiClass.getManager().areElementsEquivalent(psiClass, resolveReference((PsiReference)newElement))) {\n            final String qName = psiClass.getQualifiedName();\n            if (qName != null) {\n              document.replaceString(newElement.getTextRange().getStartOffset(), newEndOffset, qName);\n            }\n          }\n        }\n      }\n    }\n\n    if (toDelete.isValid()) {\n      document.deleteString(toDelete.getStartOffset(), toDelete.getEndOffset());\n    }\n\n    return newEndOffset;\n  }","commit_id":"8e6bd961e65dc06ac18c148c70fb1719f6cc10e7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void shortenReference(final PsiFile file, final int offset) throws IncorrectOperationException {\n    final PsiDocumentManager manager = PsiDocumentManager.getInstance(file.getProject());\n    final Document document = manager.getDocument(file);\n    assert document != null;\n    manager.commitDocument(document);\n    final PsiReference ref = file.findReferenceAt(offset);\n    if (ref instanceof PsiJavaCodeReferenceElement) {\n      JavaCodeStyleManager.getInstance(file.getProject()).shortenClassReferences((PsiJavaCodeReferenceElement)ref);\n    }\n  }","id":56811,"modified_method":"public static void shortenReference(final PsiFile file, final int offset) throws IncorrectOperationException {\n    final PsiDocumentManager manager = PsiDocumentManager.getInstance(file.getProject());\n    manager.commitDocument(manager.getDocument(file));\n    final PsiReference ref = file.findReferenceAt(offset);\n    if (ref instanceof PsiJavaCodeReferenceElement) {\n      JavaCodeStyleManager.getInstance(file.getProject()).shortenClassReferences((PsiJavaCodeReferenceElement)ref);\n    }\n  }","commit_id":"8e6bd961e65dc06ac18c148c70fb1719f6cc10e7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void handleInsert(InsertionContext context) {\n    PsiElement position = context.getFile().findElementAt(context.getStartOffset());\n    assert position != null;\n    context.getDocument().insertString(context.getTailOffset(), calcGenerics(position));\n    DefaultInsertHandler.addImportForItem(context, this);\n    PostprocessReformattingAspect.getInstance(context.getProject()).doPostponedFormatting();\n\n    int tail = context.getTailOffset();\n    if (tail <= 0) {\n      return;\n    }\n    String braces = StringUtil.repeat(\"[]\", getBracketsCount());\n    Editor editor = context.getEditor();\n    if (!braces.isEmpty()) {\n      context.getDocument().insertString(tail, braces);\n      editor.getCaretModel().moveToOffset(tail + 1);\n      if (context.getCompletionChar() == '[') {\n        context.setAddCompletionChar(false);\n      }\n    } else {\n      editor.getCaretModel().moveToOffset(tail);\n    }\n    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n\n    InsertHandler handler = getInsertHandler();\n    if (handler != null && !(handler instanceof DefaultInsertHandler)) {\n      //noinspection unchecked\n      handler.handleInsert(context, this);\n    }\n  }","id":56812,"modified_method":"@Override\n  public void handleInsert(InsertionContext context) {\n    PsiElement position = context.getFile().findElementAt(context.getStartOffset());\n    assert position != null;\n    DefaultInsertHandler.addImportForItem(context, this);\n    context.getDocument().insertString(context.getTailOffset(), calcGenerics(position));\n    JavaCompletionUtil.shortenReference(context.getFile(), context.getStartOffset());\n\n    int tail = context.getTailOffset();\n    String braces = StringUtil.repeat(\"[]\", getBracketsCount());\n    Editor editor = context.getEditor();\n    if (!braces.isEmpty()) {\n      context.getDocument().insertString(tail, braces);\n      editor.getCaretModel().moveToOffset(tail + 1);\n      if (context.getCompletionChar() == '[') {\n        context.setAddCompletionChar(false);\n      }\n    } else {\n      editor.getCaretModel().moveToOffset(tail);\n    }\n    editor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n\n    InsertHandler handler = getInsertHandler();\n    if (handler != null && !(handler instanceof DefaultInsertHandler)) {\n      //noinspection unchecked\n      handler.handleInsert(context, this);\n    }\n  }","commit_id":"8e6bd961e65dc06ac18c148c70fb1719f6cc10e7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(final AnActionEvent e) {\n    final String content = myLineStatusTracker.getUpToDateContent(myRange);\n    CopyPasteManager.getInstance().setContents(new StringSelection(content));\n  }","id":56813,"modified_method":"public void actionPerformed(final AnActionEvent e) {\n    final String content = myLineStatusTracker.getUpToDateContent(myRange).toString();\n    CopyPasteManager.getInstance().setContents(new StringSelection(content));\n  }","commit_id":"b6cd05a8e6fe33f2b2e229eb32f2fdd7ecdd8d46","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public List<String> getLines(int from, int to) {\n    ArrayList<String> result = new ArrayList<String>();\n    for (int i = from; i <= to; i++) {\n      if (i >= myDocument.getLineCount()) break;\n      final String line = getLine(i);\n      /*\n      if (line.length() > 0 || i < to) {\n        result.add(line);\n      }\n      */\n      result.add(line);\n    }\n    return result;\n  }","id":56814,"modified_method":"@NotNull\n  public List<String> getLines(int from, int to) {\n    ArrayList<String> result = new ArrayList<String>();\n    for (int i = from; i <= to; i++) {\n      result.add(getLine(i));\n    }\n    return result;\n  }","commit_id":"b6cd05a8e6fe33f2b2e229eb32f2fdd7ecdd8d46","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public List<String> getLines() {\n    return getLines(0, myDocument.getLineCount() - 1);\n  }","id":56815,"modified_method":"@NotNull\n  public List<String> getLines() {\n    return getLines(0, getLineCount(myDocument) - 1);\n  }","commit_id":"b6cd05a8e6fe33f2b2e229eb32f2fdd7ecdd8d46","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private static TextRange getRange(byte rangeType, int offset1, int offset2, byte emptyRangeCondition, Document document) {\n    if (rangeType == emptyRangeCondition) {\n      int lineStartOffset = offset1 < document.getLineCount() ? document.getLineStartOffset(offset1) : document.getTextLength();\n      return new TextRange(lineStartOffset, lineStartOffset);\n    }\n    else {\n      int startOffset = document.getLineStartOffset(offset1);\n      int endOffset = document.getLineEndOffset(offset2 - 1);\n      return new TextRange(startOffset, endOffset);\n    }\n  }","id":56816,"modified_method":"@NotNull\n  private static TextRange getRange(byte rangeType, int offset1, int offset2, byte emptyRangeCondition, Document document) {\n    if (rangeType == emptyRangeCondition) {\n      int lineStartOffset = offset1 < getLineCount(document) ? document.getLineStartOffset(offset1) : document.getTextLength();\n      return new TextRange(lineStartOffset, lineStartOffset);\n    }\n    else {\n      int startOffset = document.getLineStartOffset(offset1);\n      int endOffset = document.getLineEndOffset(offset2 - 1);\n      return new TextRange(startOffset, endOffset);\n    }\n  }","commit_id":"b6cd05a8e6fe33f2b2e229eb32f2fdd7ecdd8d46","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String getUpToDateContent(Range range) {\n    synchronized (myLock) {\n      TextRange textRange = getUpToDateRange(range);\n      final int startOffset = textRange.getStartOffset();\n      final int endOffset = Math.min(textRange.getEndOffset() + 1, myUpToDateDocument.getTextLength());\n      return myUpToDateDocument.getCharsSequence().subSequence(startOffset, endOffset).toString();\n    }\n  }","id":56817,"modified_method":"public CharSequence getUpToDateContent(@NotNull Range range) {\n    synchronized (myLock) {\n      TextRange textRange = getUpToDateRange(range);\n      final int startOffset = textRange.getStartOffset();\n      final int endOffset = textRange.getEndOffset();\n      return myUpToDateDocument.getCharsSequence().subSequence(startOffset, endOffset);\n    }\n  }","commit_id":"b6cd05a8e6fe33f2b2e229eb32f2fdd7ecdd8d46","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void documentChanged(final DocumentEvent e) {\n      myApplication.assertWriteAccessAllowed();\n\n      synchronized (myLock) {\n        if (myReleased) return;\n        if (myBulkUpdate || myAnathemaThrown || BaseLoadState.LOADED != myBaseLoaded) return;\n        try {\n          int currentChangedLines = myDocument.getLineNumber(e.getOffset() + e.getNewLength()) - myDocument.getLineNumber(e.getOffset());\n          int linesShift = currentChangedLines - myChangedLines;\n          int upToDateTotalLine = myUpToDateDocument.getLineCount();\n\n          List<Range> rangesBeforeChange = new ArrayList<Range>();\n          List<Range> rangesAfterChange = new ArrayList<Range>();\n          List<Range> changedRanges = new ArrayList<Range>();\n          sortRanges(myRanges, myFirstChangedLine, myLastChangedLine, rangesBeforeChange, changedRanges, rangesAfterChange);\n\n          Range firstChangedRange = ContainerUtil.getFirstItem(changedRanges);\n          Range lastChangedRange = ContainerUtil.getLastItem(changedRanges);\n          Range lastRangeBefore = ContainerUtil.getLastItem(rangesBeforeChange);\n          Range firstRangeAfter = ContainerUtil.getFirstItem(rangesAfterChange);\n\n          if (firstChangedRange != null && firstChangedRange.getOffset1() < myFirstChangedLine) {\n            myFirstChangedLine = firstChangedRange.getOffset1();\n          }\n          if (lastChangedRange != null && lastChangedRange.getOffset2() > myLastChangedLine) {\n            myLastChangedLine = lastChangedRange.getOffset2() - 1;\n          }\n\n          int currentFirstLine = myFirstChangedLine;\n          int currentLastLine = myLastChangedLine + linesShift;\n\n          int upToDateFirstLine = getUpToDateLine1(lastRangeBefore, myFirstChangedLine);\n          int upToDateLastLine = getUpToDateLine2(firstRangeAfter, myLastChangedLine, myTotalLines, upToDateTotalLine);\n\n          List<Range> newChangedRanges = getNewChangedRanges(currentFirstLine, currentLastLine, upToDateFirstLine, upToDateLastLine);\n\n          shiftRanges(rangesAfterChange, linesShift);\n\n          if (!changedRanges.equals(newChangedRanges)) {\n            replaceRanges(changedRanges, newChangedRanges);\n\n            myRanges = new ArrayList<Range>(rangesBeforeChange.size() + newChangedRanges.size() + rangesAfterChange.size());\n\n            myRanges.addAll(rangesBeforeChange);\n            myRanges.addAll(newChangedRanges);\n            myRanges.addAll(rangesAfterChange);\n\n            for (Range range : myRanges) {\n              if (!range.hasHighlighter()) range.setHighlighter(createHighlighter(range));\n            }\n\n            if (myRanges.isEmpty() && myVirtualFile != null) {\n              SwingUtilities.invokeLater(new Runnable() {\n                @Override\n                public void run() {\n                  FileDocumentManager.getInstance().saveDocument(e.getDocument());\n                  boolean[] stillEmpty = new boolean[1];\n                  synchronized (myLock) {\n                    stillEmpty[0] = myRanges.isEmpty();\n                  }\n                  if (stillEmpty[0]) {\n                    // file was modified, and now it's not -> dirty local change\n                    myVcsDirtyScopeManager.fileDirty(myVirtualFile);\n                  }\n                }\n              });\n            }\n          }\n        }\n        catch (ProcessCanceledException ignore) {\n        }\n        catch (FilesTooBigForDiffException e1) {\n          installAnathema();\n          removeHighlightersFromMarkupModel();\n        }\n      }\n    }","id":56818,"modified_method":"@Override\n    public void documentChanged(final DocumentEvent e) {\n      myApplication.assertWriteAccessAllowed();\n\n      synchronized (myLock) {\n        if (myReleased) return;\n        if (myBulkUpdate || myAnathemaThrown || BaseLoadState.LOADED != myBaseLoaded) return;\n        try {\n          int currentFirstChangedLine = myFirstChangedLine;\n          int currentLastChangedLine =\n            e.getNewLength() == 0 ? currentFirstChangedLine : myDocument.getLineNumber(e.getOffset() + e.getNewLength() - 1);\n          if (StringUtil.endsWithChar(e.getNewFragment(), '\\n')) currentLastChangedLine++;\n          int currentChangedLines = currentLastChangedLine - currentFirstChangedLine;\n          int upToDateTotalLine = getLineCount(myUpToDateDocument);\n\n          int linesShift = currentChangedLines - myChangedLines;\n\n          List<Range> rangesBeforeChange = new ArrayList<Range>();\n          List<Range> rangesAfterChange = new ArrayList<Range>();\n          List<Range> changedRanges = new ArrayList<Range>();\n          sortRanges(myRanges, myFirstChangedLine, myLastChangedLine, rangesBeforeChange, changedRanges, rangesAfterChange);\n\n          Range firstChangedRange = ContainerUtil.getFirstItem(changedRanges);\n          Range lastChangedRange = ContainerUtil.getLastItem(changedRanges);\n          Range lastRangeBefore = ContainerUtil.getLastItem(rangesBeforeChange);\n          Range firstRangeAfter = ContainerUtil.getFirstItem(rangesAfterChange);\n\n          if (firstChangedRange != null && firstChangedRange.getOffset1() < myFirstChangedLine) {\n            myFirstChangedLine = firstChangedRange.getOffset1();\n          }\n          if (lastChangedRange != null && lastChangedRange.getOffset2() > myLastChangedLine) {\n            myLastChangedLine = lastChangedRange.getOffset2() - 1;\n          }\n\n          currentFirstChangedLine = myFirstChangedLine;\n          currentLastChangedLine = myLastChangedLine + linesShift;\n\n          int upToDateFirstLine = getUpToDateLine1(lastRangeBefore, myFirstChangedLine);\n          int upToDateLastLine = getUpToDateLine2(firstRangeAfter, myLastChangedLine, myTotalLines, upToDateTotalLine);\n\n          List<Range> newChangedRanges =\n            getNewChangedRanges(currentFirstChangedLine, currentLastChangedLine, upToDateFirstLine, upToDateLastLine);\n\n          shiftRanges(rangesAfterChange, linesShift);\n\n          if (!changedRanges.equals(newChangedRanges)) {\n            replaceRanges(changedRanges, newChangedRanges);\n\n            myRanges = new ArrayList<Range>(rangesBeforeChange.size() + newChangedRanges.size() + rangesAfterChange.size());\n\n            myRanges.addAll(rangesBeforeChange);\n            myRanges.addAll(newChangedRanges);\n            myRanges.addAll(rangesAfterChange);\n\n            for (Range range : myRanges) {\n              if (!range.hasHighlighter()) range.setHighlighter(createHighlighter(range));\n            }\n\n            if (myRanges.isEmpty() && myVirtualFile != null) {\n              SwingUtilities.invokeLater(new Runnable() {\n                @Override\n                public void run() {\n                  FileDocumentManager.getInstance().saveDocument(e.getDocument());\n                  boolean[] stillEmpty = new boolean[1];\n                  synchronized (myLock) {\n                    stillEmpty[0] = myRanges.isEmpty();\n                  }\n                  if (stillEmpty[0]) {\n                    // file was modified, and now it's not -> dirty local change\n                    myVcsDirtyScopeManager.fileDirty(myVirtualFile);\n                  }\n                }\n              });\n            }\n          }\n        }\n        catch (ProcessCanceledException ignore) {\n        }\n        catch (FilesTooBigForDiffException e1) {\n          installAnathema();\n          removeHighlightersFromMarkupModel();\n        }\n      }\n    }","commit_id":"b6cd05a8e6fe33f2b2e229eb32f2fdd7ecdd8d46","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void rollbackChanges(final Range range) {\n    myApplication.assertWriteAccessAllowed();\n\n    synchronized (myLock) {\n      TextRange currentTextRange = getCurrentTextRangeWithMagic(range);\n\n      int offset1 = currentTextRange.getStartOffset();\n      int offset2 = Math.min(currentTextRange.getEndOffset() + 1, myDocument.getTextLength());\n      if (range.getType() == Range.INSERTED) {\n        myDocument.replaceString(offset1, offset2, \"\");\n      }\n      else if (range.getType() == Range.DELETED) {\n        String upToDateContent = getUpToDateContentWithMagic(range);\n        myDocument.insertString(offset1, upToDateContent);\n      }\n      else {\n        String upToDateContent = getUpToDateContentWithMagic(range);\n        myDocument.replaceString(offset1, offset2, upToDateContent);\n      }\n    }\n  }","id":56819,"modified_method":"public void rollbackChanges(@NotNull Range range) {\n    // TODO: range could be outdated. We should add 'isValid' flag and catch exception\n    myApplication.assertWriteAccessAllowed();\n\n    synchronized (myLock) {\n      if (range.getType() == Range.MODIFIED) {\n        TextRange currentTextRange = getCurrentTextRange(range);\n        int offset1 = currentTextRange.getStartOffset();\n        int offset2 = currentTextRange.getEndOffset();\n\n        CharSequence upToDateContent = getUpToDateContent(range);\n        myDocument.replaceString(offset1, offset2, upToDateContent);\n      }\n      else if (range.getType() == Range.INSERTED) {\n        TextRange currentTextRange = getCurrentTextRange(range);\n        int offset1 = currentTextRange.getStartOffset();\n        int offset2 = currentTextRange.getEndOffset();\n\n        if (offset1 > 0) {\n          offset1--;\n        }\n        else if (offset2 < myDocument.getTextLength()) {\n          offset2++;\n        }\n        myDocument.deleteString(offset1, offset2);\n      }\n      else if (range.getType() == Range.DELETED) {\n        CharSequence content = getUpToDateContent(range);\n        if (range.getOffset2() == getLineCount(myDocument)) {\n          myDocument.insertString(myDocument.getTextLength(), \"\\n\" + content);\n        }\n        else {\n          myDocument.insertString(myDocument.getLineStartOffset(range.getOffset2()), content + \"\\n\");\n        }\n      }\n      else {\n        throw new IllegalArgumentException(\"Unknown range type: \" + range.getType());\n      }\n    }\n  }","commit_id":"b6cd05a8e6fe33f2b2e229eb32f2fdd7ecdd8d46","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void beforeDocumentChange(DocumentEvent e) {\n      myApplication.assertWriteAccessAllowed();\n\n      synchronized (myLock) {\n        if (myReleased) return;\n        if (myBulkUpdate || myAnathemaThrown || BaseLoadState.LOADED != myBaseLoaded) return;\n        try {\n          myFirstChangedLine = myDocument.getLineNumber(e.getOffset());\n          myLastChangedLine = myDocument.getLineNumber(e.getOffset() + e.getOldLength());\n          myChangedLines = myLastChangedLine - myFirstChangedLine;\n          if (StringUtil.endsWithChar(e.getOldFragment(), '\\n')) myLastChangedLine++;\n          myTotalLines = e.getDocument().getLineCount();\n        }\n        catch (ProcessCanceledException ignore) {\n        }\n      }\n    }","id":56820,"modified_method":"@Override\n    public void beforeDocumentChange(DocumentEvent e) {\n      myApplication.assertWriteAccessAllowed();\n\n      synchronized (myLock) {\n        if (myReleased) return;\n        if (myBulkUpdate || myAnathemaThrown || BaseLoadState.LOADED != myBaseLoaded) return;\n        try {\n          myFirstChangedLine = myDocument.getLineNumber(e.getOffset());\n          myLastChangedLine = e.getOldLength() == 0 ? myFirstChangedLine : myDocument.getLineNumber(e.getOffset() + e.getOldLength() - 1);\n          if (StringUtil.endsWithChar(e.getOldFragment(), '\\n')) myLastChangedLine++;\n          myChangedLines = myLastChangedLine - myFirstChangedLine;\n          myTotalLines = getLineCount(e.getDocument());\n        }\n        catch (ProcessCanceledException ignore) {\n        }\n      }\n    }","commit_id":"b6cd05a8e6fe33f2b2e229eb32f2fdd7ecdd8d46","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings({\"AutoBoxing\"})\n  private RangeHighlighter createHighlighter(final Range range) {\n    LOG.assertTrue(!myReleased, \"Already released\");\n\n    int first =\n      range.getOffset1() >= myDocument.getLineCount() ? myDocument.getTextLength() : myDocument.getLineStartOffset(range.getOffset1());\n\n    int second =\n      range.getOffset2() >= myDocument.getLineCount() ? myDocument.getTextLength() : myDocument.getLineStartOffset(range.getOffset2());\n\n    final RangeHighlighter highlighter = DocumentMarkupModel.forDocument(myDocument, myProject, true)\n      .addRangeHighlighter(first, second, HighlighterLayer.FIRST - 1, null, HighlighterTargetArea.LINES_IN_RANGE);\n\n    final TextAttributes attr = LineStatusTrackerDrawing.getAttributesFor(range);\n    highlighter.setErrorStripeMarkColor(attr.getErrorStripeColor());\n    highlighter.setThinErrorStripeMark(true);\n    highlighter.setGreedyToLeft(true);\n    highlighter.setGreedyToRight(true);\n    highlighter.setLineMarkerRenderer(LineStatusTrackerDrawing.createRenderer(range, this));\n    highlighter.setEditorFilter(MarkupEditorFilterFactory.createIsNotDiffFilter());\n\n    final String tooltip;\n    if (range.getOffset1() == range.getOffset2()) {\n      if (range.getUOffset1() + 1 == range.getUOffset2()) {\n        tooltip = VcsBundle.message(\"tooltip.text.line.before.deleted\", range.getOffset1() + 1);\n      }\n      else {\n        tooltip = VcsBundle.message(\"tooltip.text.lines.before.deleted\", range.getOffset1() + 1, range.getUOffset2() - range.getUOffset1());\n      }\n    }\n    else if (range.getOffset1() + 1 == range.getOffset2()) {\n      tooltip = VcsBundle.message(\"tooltip.text.line.changed\", range.getOffset1() + 1);\n    }\n    else {\n      tooltip = VcsBundle.message(\"tooltip.text.lines.changed\", range.getOffset1() + 1, range.getOffset2());\n    }\n\n    highlighter.setErrorStripeTooltip(tooltip);\n    return highlighter;\n  }","id":56821,"modified_method":"@SuppressWarnings({\"AutoBoxing\"})\n  private RangeHighlighter createHighlighter(final Range range) {\n    LOG.assertTrue(!myReleased, \"Already released\");\n\n    int first =\n      range.getOffset1() >= getLineCount(myDocument) ? myDocument.getTextLength() : myDocument.getLineStartOffset(range.getOffset1());\n\n    int second =\n      range.getOffset2() >= getLineCount(myDocument) ? myDocument.getTextLength() : myDocument.getLineStartOffset(range.getOffset2());\n\n    final RangeHighlighter highlighter = DocumentMarkupModel.forDocument(myDocument, myProject, true)\n      .addRangeHighlighter(first, second, HighlighterLayer.FIRST - 1, null, HighlighterTargetArea.LINES_IN_RANGE);\n\n    final TextAttributes attr = LineStatusTrackerDrawing.getAttributesFor(range);\n    highlighter.setErrorStripeMarkColor(attr.getErrorStripeColor());\n    highlighter.setThinErrorStripeMark(true);\n    highlighter.setGreedyToLeft(true);\n    highlighter.setGreedyToRight(true);\n    highlighter.setLineMarkerRenderer(LineStatusTrackerDrawing.createRenderer(range, this));\n    highlighter.setEditorFilter(MarkupEditorFilterFactory.createIsNotDiffFilter());\n\n    final String tooltip;\n    if (range.getOffset1() == range.getOffset2()) {\n      if (range.getUOffset1() + 1 == range.getUOffset2()) {\n        tooltip = VcsBundle.message(\"tooltip.text.line.before.deleted\", range.getOffset1() + 1);\n      }\n      else {\n        tooltip = VcsBundle.message(\"tooltip.text.lines.before.deleted\", range.getOffset1() + 1, range.getUOffset2() - range.getUOffset1());\n      }\n    }\n    else if (range.getOffset1() + 1 == range.getOffset2()) {\n      tooltip = VcsBundle.message(\"tooltip.text.line.changed\", range.getOffset1() + 1);\n    }\n    else {\n      tooltip = VcsBundle.message(\"tooltip.text.lines.changed\", range.getOffset1() + 1, range.getOffset2());\n    }\n\n    highlighter.setErrorStripeTooltip(tooltip);\n    return highlighter;\n  }","commit_id":"b6cd05a8e6fe33f2b2e229eb32f2fdd7ecdd8d46","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testAddAppointmentEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_8_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_title\", RuntimeVariables.replace(\"Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test event!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_8_timeZoneSensitiveCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"_8_type\", RuntimeVariables.replace(\"label=Appointment\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"Link=Test Event\"));\n\t}","id":56822,"modified_method":"public void testAddAppointmentEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_8_title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a test event!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Time Zone Sensitive Checkbox\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"Link=Test Event\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddConcertEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_8_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_title\",\n\t\t\tRuntimeVariables.replace(\"Caedmon's Call Concert!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"I love this band guys! Everyone should see them! I've never seen them before. :(\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_8_timeZoneSensitiveCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"_8_type\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"Link=Caedmon's Call Concert!\"));\n\t}","id":56823,"modified_method":"public void testAddConcertEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_8_title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Caedmon's Call Concert!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"I love this band guys! Everyone should see them! I've never seen them before. :(\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Time Zone Sensitive Checkbox\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"Link=Caedmon's Call Concert!\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDailyRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_8_dailyType\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_8_dailyType\", RuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"_8_dailyInterval\", RuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_endDateType' and @value='2']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"_8_endDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"_8_endDateDay\", RuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"_8_endDateYear\", RuntimeVariables.replace(\"label=2011\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2011\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2011);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2011);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","id":56824,"modified_method":"public void testAddDailyRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Repeat Daily\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@name='_8_dailyType']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_dailyType']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"//input[@id='_8_dailyInterval']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_endDateType' and @value='2']\",\n\t\t\tRuntimeVariables.replace(\"End by\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 1, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 1, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Repeating Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Repeating Test Event\"),\n\t\t\tselenium.getText(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 5, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 5, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2011\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2011);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2011);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddInvalidDurationEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_8_durationHour\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_8_durationHour\", RuntimeVariables.replace(\"label=0\"));\n\t\tselenium.select(\"_8_durationMinute\",\n\t\t\tRuntimeVariables.replace(\"label=:00\"));\n\t\tselenium.type(\"_8_title\",\n\t\t\tRuntimeVariables.replace(\"Invalid Duration Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Your request failed to complete.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a longer duration.\"));\n\t}","id":56825,"modified_method":"public void testAddInvalidDurationEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_8_durationHour']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_8_durationHour']\",\n\t\t\tRuntimeVariables.replace(\"label=0\"));\n\t\tselenium.select(\"//select[@id='_8_durationMinute']\",\n\t\t\tRuntimeVariables.replace(\"label=:00\"));\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid Duration Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a longer duration.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddInvalidEndDateEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_8_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_title\",\n\t\t\tRuntimeVariables.replace(\"Invalid End Date Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='3']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_8_dailyInterval\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_dailyInterval\", RuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_8_endDateMonth\",\n\t\t\tRuntimeVariables.replace(\"End Date Month\"));\n\t\tselenium.select(\"_8_endDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tThread.sleep(5000);\n\t\tselenium.select(\"_8_endDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tassertFalse(selenium.isPartialText(\"_8_endDateDay\", \"30\"));\n\t}","id":56826,"modified_method":"public void testAddInvalidEndDateEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_8_title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid End Date Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='3']\",\n\t\t\tRuntimeVariables.replace(\"Repeat Daily\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@id='_8_dailyInterval']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_dailyInterval']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"End Date Month\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"_8_endDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tassertFalse(selenium.isPartialText(\"_8_endDateDay\", \"30\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddInvalidRepeatEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_8_allDayCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_8_allDayCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.typeKeys(\"_8_title\",\n\t\t\tRuntimeVariables.replace(\"Invalid Repeat Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_title\",\n\t\t\tRuntimeVariables.replace(\"Invalid Repeat Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_8_startDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"_8_startDateDay\", RuntimeVariables.replace(\"label=25\"));\n\t\tselenium.select(\"_8_startDateYear\",\n\t\t\tRuntimeVariables.replace(\"label=2009\"));\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='3']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_8_dailyInterval\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_dailyInterval\", RuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_endDateType' and @value='2']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"_8_endDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"_8_endDateDay\", RuntimeVariables.replace(\"label=24\"));\n\t\tselenium.select(\"_8_endDateYear\", RuntimeVariables.replace(\"label=2009\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Your request failed to complete.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid end date.\"));\n\t}","id":56827,"modified_method":"public void testAddInvalidRepeatEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_8_allDayCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_8_allDayCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"All Day Event Checkbox\"));\n\t\tselenium.typeKeys(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid Repeat Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid Repeat Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"//select[@id='_8_startDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=25\"));\n\t\tselenium.select(\"//select[@id='_8_startDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2009\"));\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='3']\",\n\t\t\tRuntimeVariables.replace(\"Repeat Daily\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_8_dailyInterval']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_dailyInterval']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_endDateType' and @value='2']\",\n\t\t\tRuntimeVariables.replace(\"End by\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=24\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2009\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid end date.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddInvalidStartDateEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_8_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_title\",\n\t\t\tRuntimeVariables.replace(\"Invalid Start Date Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_8_startDateMonth\",\n\t\t\tRuntimeVariables.replace(\"Start Date Month\"));\n\t\tselenium.select(\"_8_startDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tThread.sleep(5000);\n\t\tselenium.select(\"_8_startDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tassertFalse(selenium.isPartialText(\"_8_startDateDay\", \"30\"));\n\t}","id":56828,"modified_method":"public void testAddInvalidStartDateEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_8_title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Invalid Start Date Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"Start Date Month\"));\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tassertFalse(selenium.isPartialText(\"//select[@id='_8_startDateDay']\",\n\t\t\t\t\"30\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMonthlyDateRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/span[4]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//span[2]/span[1]/span/span/input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//span[2]/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_8_monthlyPos\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_8_monthlyPos\", RuntimeVariables.replace(\"label=First\"));\n\t\tselenium.select(\"_8_monthlyDay1\",\n\t\t\tRuntimeVariables.replace(\"label=Thursday\"));\n\t\tselenium.type(\"_8_monthlyInterval1\", RuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_8_endDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"_8_endDateDay\", RuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"_8_endDateYear\", RuntimeVariables.replace(\"label=2011\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//td[3]/div/table/tbody/tr[3]/td[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[3]/div/table/tbody/tr[3]/td[5]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//td[5]/div/table/tbody/tr[3]/td[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[5]/div/table/tbody/tr[3]/td[5]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//td[5]/div/table/tbody/tr[4]/td[5]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[5]/div/table/tbody/tr[4]/td[5]/a/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","id":56829,"modified_method":"public void testAddMonthlyDateRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/span[4]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Repeat Monthly\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//span[2]/span[1]/span/span/input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//span[2]/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_8_monthlyPos']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_8_monthlyPos']\",\n\t\t\tRuntimeVariables.replace(\"label=First\"));\n\t\tselenium.select(\"//select[@id='_8_monthlyDay1']\",\n\t\t\tRuntimeVariables.replace(\"label=Thursday\"));\n\t\tselenium.type(\"//input[@id='_8_monthlyInterval1']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[3]/div/table/tbody/tr[3]/td[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[3]/div/table/tbody/tr[3]/td[5]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[5]/div/table/tbody/tr[3]/td[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[5]/div/table/tbody/tr[3]/td[5]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[5]/div/table/tbody/tr[4]/td[5]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[5]/div/table/tbody/tr[4]/td[5]/a/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMonthlyDayRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/span[4]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//span[1]/span[1]/span/span/input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//span[1]/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_8_monthlyType\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_8_monthlyType\", RuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"_8_monthlyDay0\", RuntimeVariables.replace(\"15\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_monthlyInterval0\", RuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_8_endDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"_8_endDateDay\", RuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"_8_endDateYear\", RuntimeVariables.replace(\"label=2011\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 15, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 15, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 15, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 15, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 16, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 16, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","id":56830,"modified_method":"public void testAddMonthlyDayRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/span[4]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Repeat Monthly\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@name='_8_monthlyType']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_monthlyType']\",\n\t\t\tRuntimeVariables.replace(\"Day\"));\n\t\tselenium.type(\"//input[@id='_8_monthlyDay0']\",\n\t\t\tRuntimeVariables.replace(\"15\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_monthlyInterval0']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 15, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 15, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 15, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 15, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 16, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(2, 16, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullTitleEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_8_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_title\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Your request failed to complete.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid title.\"));\n\t}","id":56831,"modified_method":"public void testAddNullTitleEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_8_title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_title']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_8_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_title\",\n\t\t\tRuntimeVariables.replace(\"Repeating Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_8_allDayCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"_8_timeZoneSensitiveCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"_8_startDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"_8_startDateDay\", RuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"_8_startDateYear\",\n\t\t\tRuntimeVariables.replace(\"label=2010\"));\n\t\tselenium.select(\"_8_type\", RuntimeVariables.replace(\"label=Event\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Events\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","id":56832,"modified_method":"public void testAddRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_8_title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Repeating Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_8_allDayCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"All Day Event\"));\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"//select[@id='_8_startDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_startDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_startDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2010\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Event\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Events\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTemporaryEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_8_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_title\", RuntimeVariables.replace(\"Temporary Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_description\",\n\t\t\tRuntimeVariables.replace(\"This is a temporary event!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_8_timeZoneSensitiveCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"_8_type\", RuntimeVariables.replace(\"label=Appointment\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"Link=Temporary Event\"));\n\t}","id":56833,"modified_method":"public void testAddTemporaryEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_8_title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Temporary Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a temporary event!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Time Zone Sensitive Checkbox\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"Link=Temporary Event\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddVacationEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_8_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_title\", RuntimeVariables.replace(\"Off to Yosemite!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_description\",\n\t\t\tRuntimeVariables.replace(\"Looking forward to camping!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_8_timeZoneSensitiveCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"_8_type\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"Link=Off to Yosemite!\"));\n\t}","id":56834,"modified_method":"public void testAddVacationEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Event']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_8_title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Off to Yosemite!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_description']\",\n\t\t\tRuntimeVariables.replace(\"Looking forward to camping!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_8_timeZoneSensitiveCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Time Zone Sensitive Checkbox\"));\n\t\tselenium.select(\"//select[@id='_8_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"Link=Off to Yosemite!\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWeekDayRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/span[3]/span/span/input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[2]/span[3]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"_8_endDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"_8_endDateDay\", RuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"_8_endDateYear\", RuntimeVariables.replace(\"label=2011\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","id":56835,"modified_method":"public void testAddWeekDayRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Repeat Daily\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/span[3]/span/span/input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[2]/span[3]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Every weekday\"));\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 1, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 5, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWeeklyRepeatingEvent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\"//div/div/span[3]/span/span/input\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_8_weeklyInterval\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_8_weeklyInterval\", RuntimeVariables.replace(\"1\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean sundayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos1Checkbox\");\n\n\t\t\t\tif (!sundayChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_8_weeklyDayPos1Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean mondayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos2Checkbox\");\n\n\t\t\t\tif (!mondayChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_8_weeklyDayPos2Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean tuesdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos3Checkbox\");\n\n\t\t\t\tif (!tuesdayChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_8_weeklyDayPos3Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean wednesdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos4Checkbox\");\n\n\t\t\t\tif (!wednesdayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_8_weeklyDayPos4Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean thursdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos5Checkbox\");\n\n\t\t\t\tif (thursdayChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_8_weeklyDayPos5Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean fridayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos6Checkbox\");\n\n\t\t\t\tif (!fridayChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_8_weeklyDayPos6Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean saturdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos7Checkbox\");\n\n\t\t\t\tif (!saturdayChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_8_weeklyDayPos7Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 8:\n\t\t\t\tselenium.select(\"_8_endDateMonth\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\t\t\tselenium.select(\"_8_endDateDay\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\t\t\tselenium.select(\"_8_endDateYear\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request completed successfully.\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=2010\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 7, 2010);')]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 7, 2010);')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Repeating Test Event\"));\n\t\t\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=2010\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 14, 2010);')]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 14, 2010);')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Repeating Test Event\"));\n\t\t\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=2010\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 15, 2010);')]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 15, 2010);')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Repeating Test Event\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":56836,"modified_method":"public void testAddWeeklyRepeatingEvent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Calendar\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Events\",\n\t\t\t\t\tRuntimeVariables.replace(\"Events\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/div/span[3]/span/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Repeat Weekly\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_8_weeklyInterval']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_8_weeklyInterval']\",\n\t\t\t\t\tRuntimeVariables.replace(\"1\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean sundayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos1Checkbox\");\n\n\t\t\t\tif (!sundayChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos1Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sunday Checkbox\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean mondayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos2Checkbox\");\n\n\t\t\t\tif (!mondayChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos2Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Monday Checkbox\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean tuesdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos3Checkbox\");\n\n\t\t\t\tif (!tuesdayChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos3Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Tuesday Checkbox\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean wednesdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos4Checkbox\");\n\n\t\t\t\tif (!wednesdayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos4Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wednesday Checkbox\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean thursdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos5Checkbox\");\n\n\t\t\t\tif (thursdayChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos5Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Thursday Checkbox\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean fridayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos6Checkbox\");\n\n\t\t\t\tif (!fridayChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos6Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Friday Checkbox\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean saturdayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_8_weeklyDayPos7Checkbox\");\n\n\t\t\t\tif (!saturdayChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_8_weeklyDayPos7Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Saturday Checkbox\"));\n\n\t\t\tcase 8:\n\t\t\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\t\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\t\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=2011\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=2010\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 7, 2010);')]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 7, 2010);')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Repeating Test Event\"));\n\t\t\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=2010\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 14, 2010);')]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 14, 2010);')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Repeating Test Event\"));\n\t\t\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=2010\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 15, 2010);')]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(0, 15, 2010);')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Repeating Test Event\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddYearlyDateRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@name='_8_recurrenceType' and @value='6']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='6']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_8_yearlyType\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_8_yearlyType\", RuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"_8_yearlyMonth0\", RuntimeVariables.replace(\"label=May\"));\n\t\tselenium.type(\"_8_yearlyDay0\", RuntimeVariables.replace(\"31\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_yearlyInterval0\", RuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_8_endDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"_8_endDateDay\", RuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"_8_endDateYear\", RuntimeVariables.replace(\"label=2013\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2011);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2011);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2012\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2012);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2012);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Repeating Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\"//select\", \"2013\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2013\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2013);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2013);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","id":56837,"modified_method":"public void testAddYearlyDateRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@name='_8_recurrenceType' and @value='6']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='6']\",\n\t\t\tRuntimeVariables.replace(\"Repeat Yearly\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@name='_8_yearlyType']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_yearlyType']\",\n\t\t\tRuntimeVariables.replace(\"Every\"));\n\t\tselenium.select(\"//select[@id='_8_yearlyMonth0']\",\n\t\t\tRuntimeVariables.replace(\"label=May\"));\n\t\tselenium.type(\"//input[@id='_8_yearlyDay0']\",\n\t\t\tRuntimeVariables.replace(\"31\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_yearlyInterval0']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2013\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2010\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2010);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2010);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Repeating Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2011\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2011);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2011);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2012\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2012);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2012);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Repeating Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\"//select\", \"2013\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2013\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2013);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(4, 31, 2013);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddYearlyDayRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@name='_8_recurrenceType' and @value='6']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='6']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//span[5]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[5]/span[2]/span[1]/span/span/input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[5]/span[2]/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"_8_yearlyPos\", RuntimeVariables.replace(\"label=Second\"));\n\t\tselenium.select(\"_8_yearlyDay1\",\n\t\t\tRuntimeVariables.replace(\"label=Monday\"));\n\t\tselenium.select(\"_8_yearlyMonth1\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.type(\"_8_yearlyInterval1\", RuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_8_endDateMonth\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"_8_endDateDay\", RuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"_8_endDateYear\", RuntimeVariables.replace(\"label=2013\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2011\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 14, 2011);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 14, 2011);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Repeating Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\"//select\", \"2012\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2012\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 13, 2012);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 13, 2012);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Repeating Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\"//select\", \"2012\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2012\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2012);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2012);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","id":56838,"modified_method":"public void testAddYearlyDayRepeatingEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@name='_8_recurrenceType' and @value='6']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_8_recurrenceType' and @value='6']\",\n\t\t\tRuntimeVariables.replace(\"Repeat Yearly\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[5]/span[2]/span[1]/span/span/input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[5]/span[2]/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"//select[@id='_8_yearlyPos']\",\n\t\t\tRuntimeVariables.replace(\"label=Second\"));\n\t\tselenium.select(\"//select[@id='_8_yearlyDay1']\",\n\t\t\tRuntimeVariables.replace(\"label=Monday\"));\n\t\tselenium.select(\"//select[@id='_8_yearlyMonth1']\",\n\t\t\tRuntimeVariables.replace(\"label=February\"));\n\t\tselenium.type(\"//input[@id='_8_yearlyInterval1']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_8_endDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_8_endDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@id='_8_endDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2013\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Year\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2011\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 14, 2011);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 14, 2011);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Repeating Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\"//select\", \"2012\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2012\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 13, 2012);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 13, 2012);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Repeating Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t\tselenium.clickAt(\"link=Year\", RuntimeVariables.replace(\"Year\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\"//select\", \"2012\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=2012\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2012);')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[contains(@href, 'javascript:_8_updateCalendar(1, 6, 2012);')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Repeating Test Event\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Events\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Event\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t}","id":56839,"modified_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Events\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Event\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(SetTimezoneTest.class);\n\t\ttestSuite.addTestSuite(AddAppointmentEventTest.class);\n\t\ttestSuite.addTestSuite(AddConcertEventTest.class);\n\t\ttestSuite.addTestSuite(AddVacationEventTest.class);\n\t\ttestSuite.addTestSuite(GetAppointmentEventsTest.class);\n\t\ttestSuite.addTestSuite(GetConcertEventsTest.class);\n\t\ttestSuite.addTestSuite(GetVacationEventsTest.class);\n\t\ttestSuite.addTestSuite(EditEventTest.class);\n\t\ttestSuite.addTestSuite(AddTemporaryEventTest.class);\n\t\ttestSuite.addTestSuite(DeleteTemporaryEventTest.class);\n\t\ttestSuite.addTestSuite(AddNullTitleEventTest.class);\n\t\ttestSuite.addTestSuite(AddInvalidStartDateEventTest.class);\n\t\ttestSuite.addTestSuite(AddInvalidEndDateEventTest.class);\n\t\ttestSuite.addTestSuite(AddInvalidDurationEventTest.class);\n\t\ttestSuite.addTestSuite(AddInvalidRepeatEventTest.class);\n\t\ttestSuite.addTestSuite(TearDownEventCPTest.class);\n//\t\ttestSuite.addTestSuite(ImportLARTest.class);\n//\t\ttestSuite.addTestSuite(AssertImportLARTest.class);\n\t\ttestSuite.addTestSuite(TearDownEventCPTest.class);\n\t\ttestSuite.addTestSuite(AddRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddDailyRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddWeeklyRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddWeekDayRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddMonthlyDateRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddMonthlyDayRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddYearlyDateRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddYearlyDayRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(TearDownEventCPTest.class);\n\n\t\treturn testSuite;\n\t}","id":56840,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(SetTimezoneTest.class);\n\t\ttestSuite.addTestSuite(AddAppointmentEventTest.class);\n\t\ttestSuite.addTestSuite(AddConcertEventTest.class);\n\t\ttestSuite.addTestSuite(AddVacationEventTest.class);\n\t\ttestSuite.addTestSuite(GetAppointmentEventsTest.class);\n\t\ttestSuite.addTestSuite(GetConcertEventsTest.class);\n\t\ttestSuite.addTestSuite(GetVacationEventsTest.class);\n\t\ttestSuite.addTestSuite(EditEventTest.class);\n\t\ttestSuite.addTestSuite(AddTemporaryEventTest.class);\n\t\ttestSuite.addTestSuite(DeleteTemporaryEventTest.class);\n\t\ttestSuite.addTestSuite(AddNullTitleEventTest.class);\n\t\ttestSuite.addTestSuite(AddInvalidStartDateEventTest.class);\n\t\ttestSuite.addTestSuite(AddInvalidEndDateEventTest.class);\n\t\ttestSuite.addTestSuite(AddInvalidDurationEventTest.class);\n\t\ttestSuite.addTestSuite(AddInvalidRepeatEventTest.class);\n\t\ttestSuite.addTestSuite(TearDownEventCPTest.class);\n\t\ttestSuite.addTestSuite(ImportLARTest.class);\n\t\ttestSuite.addTestSuite(AssertImportLARTest.class);\n\t\ttestSuite.addTestSuite(TearDownEventCPTest.class);\n\t\ttestSuite.addTestSuite(AddRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddDailyRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddWeeklyRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddWeekDayRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddMonthlyDateRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddMonthlyDayRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddYearlyDateRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(AddYearlyDayRepeatingEventTest.class);\n\t\ttestSuite.addTestSuite(TearDownEventCPTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteTemporaryEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[6]/td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Temporary Event\"));\n\t}","id":56841,"modified_method":"public void testDeleteTemporaryEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[6]/td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Temporary Event\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[5]/td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_8_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_title\", RuntimeVariables.replace(\"Edited Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_8_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test event! This test event has been edited.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_8_startDateHour\", RuntimeVariables.replace(\"label=5\"));\n\t\tselenium.select(\"_8_startDateAmPm\", RuntimeVariables.replace(\"label=AM\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Event\"));\n\t}","id":56842,"modified_method":"public void testEditEvent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[5]/td[4]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_8_title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_8_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test event! This test event has been edited.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@name='_8_startDateHour']\",\n\t\t\tRuntimeVariables.replace(\"label=5\"));\n\t\tselenium.select(\"//select[@name='_8_startDateAmPm']\",\n\t\t\tRuntimeVariables.replace(\"label=AM\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Event\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGetAppointmentEvents() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Day\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Day\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Week\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Month\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t}","id":56843,"modified_method":"public void testGetAppointmentEvents() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Day\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Day\", RuntimeVariables.replace(\"Day\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Week\", RuntimeVariables.replace(\"Week\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Month\", RuntimeVariables.replace(\"Month\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\",\n\t\t\tRuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGetConcertEvents() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Day\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Day\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Event\"));\n\t\tselenium.clickAt(\"link=Week\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Event\"));\n\t\tselenium.clickAt(\"link=Month\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Event\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t}","id":56844,"modified_method":"public void testGetConcertEvents() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Day\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Day\", RuntimeVariables.replace(\"Day\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Event\"));\n\t\tselenium.clickAt(\"link=Week\", RuntimeVariables.replace(\"Week\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Event\"));\n\t\tselenium.clickAt(\"link=Month\", RuntimeVariables.replace(\"Month\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Concert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Event\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGetVacationEvents() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Day\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Day\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Week\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Month\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t}","id":56845,"modified_method":"public void testGetVacationEvents() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Day\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Day\", RuntimeVariables.replace(\"Day\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Week\", RuntimeVariables.replace(\"Week\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Month\", RuntimeVariables.replace(\"Month\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=Vacation\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Event\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\calendar\\\\dependencies\\\\Calendar-Selenium.portlet.lar\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_DELETE_PORTLET_DATACheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":56846,"modified_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//menu/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_86_importFileName']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_86_importFileName']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\calendar\\\\dependencies\\\\Calendar-Selenium.portlet.lar\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Delete portlet data before importing Checkbox\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSetTimezone() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Joe Bloggs\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_2_displaySettingsLink']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='_2_displaySettingsLink']\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_2_timeZoneId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_2_timeZoneId\",\n\t\t\tRuntimeVariables.replace(\"label=(UTC -08:00) Pacific Standard Time\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertEquals(\"(UTC -08:00) Pacific Standard Time\",\n\t\t\tselenium.getSelectedLabel(\"_2_timeZoneId\"));\n\t}","id":56847,"modified_method":"public void testSetTimezone() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\",\n\t\t\tRuntimeVariables.replace(\"My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_2_displaySettingsLink']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='_2_displaySettingsLink']\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@name='_2_timeZoneId']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@name='_2_timeZoneId']\",\n\t\t\tRuntimeVariables.replace(\"label=(UTC -08:00) Pacific Standard Time\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"(UTC -08:00) Pacific Standard Time\",\n\t\t\tselenium.getSelectedLabel(\"//select[@name='_2_timeZoneId']\"));\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownEventCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean event1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean event2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean event3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean event4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean event5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":56848,"modified_method":"public void testTearDownEventCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Calendar\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Events\",\n\t\t\t\t\tRuntimeVariables.replace(\"Events\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean event1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean event2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean event3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean event4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean event5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!event5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[6]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"167096b04cd6c745602f0c6a5b2625df402fd385","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNewBlogsEntryAPActions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","id":56849,"modified_method":"public void testAddNewBlogsEntryAPActions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_33_title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNewBlogsEntryAPActions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","id":56850,"modified_method":"public void testAddNewBlogsEntryAPActions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add New']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_33_title']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"More\\u2026\"),\n\t\t\tselenium.getText(\"//a[@id='_145_addApplication']\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\\u2026\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Asset Publisher']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Asset Publisher']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":56851,"modified_method":"public void testAddPortletAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Asset Publisher']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Asset Publisher']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"More\\u2026\"),\n\t\t\tselenium.getText(\"//a[@id='_145_addApplication']\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\\u2026\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Asset Publisher']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Asset Publisher']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":56852,"modified_method":"public void testAddPortletAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Asset Publisher']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Asset Publisher']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletBlogs() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"More\\u2026\"),\n\t\t\tselenium.getText(\"//a[@id='_145_addApplication']\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\\u2026\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":56853,"modified_method":"public void testAddPortletBlogs() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletBlogs() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"More\\u2026\"),\n\t\t\tselenium.getText(\"//a[@id='_145_addApplication']\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\\u2026\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":56854,"modified_method":"public void testAddPortletBlogs() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testBeTheFirstBlogsEntryCommentAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset/div/a\"));\n\t\tselenium.clickAt(\"//fieldset/div/a\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Comment Body\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.keyPress(\"//textarea\", RuntimeVariables.replace(\"\\\\48\"));\n\t\tselenium.keyPress(\"//textarea\", RuntimeVariables.replace(\"\\\\8\"));\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Comment Body\"),\n\t\t\tselenium.getText(\"//div/div[3]/div/div[1]\"));\n\t}","id":56855,"modified_method":"public void testBeTheFirstBlogsEntryCommentAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset/div/a\"));\n\t\tselenium.clickAt(\"//fieldset/div/a\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Comment Body\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Comment Body\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testBeTheFirstBlogsEntryCommentAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset/div/a\"));\n\t\tselenium.clickAt(\"//fieldset/div/a\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Comment Body\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.keyPress(\"//textarea\", RuntimeVariables.replace(\"\\\\48\"));\n\t\tselenium.keyPress(\"//textarea\", RuntimeVariables.replace(\"\\\\8\"));\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Comment Body\"),\n\t\t\tselenium.getText(\"//div/div[3]/div/div[1]\"));\n\t}","id":56856,"modified_method":"public void testBeTheFirstBlogsEntryCommentAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\"//fieldset/div/a\"));\n\t\tselenium.clickAt(\"//fieldset/div/a\",\n\t\t\tRuntimeVariables.replace(\"Be the first.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Comment Body\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-message-response portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Comment Body\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-discussion-message']\"));\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletDisplayStyleFullContent()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_86_displayStyle']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_86_displayStyle']\",\n\t\t\tRuntimeVariables.replace(\"label=Full Content\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Full Content\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_displayStyle']\"));\n\t}","id":56857,"modified_method":"public void testConfigurePortletDisplayStyleFullContent()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_86_displayStyle']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_86_displayStyle']\",\n\t\t\tRuntimeVariables.replace(\"label=Full Content\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Full Content\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_displayStyle']\"));\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletDisplayStyleFullContent()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_86_displayStyle']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_86_displayStyle']\",\n\t\t\tRuntimeVariables.replace(\"label=Full Content\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Full Content\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_displayStyle']\"));\n\t}","id":56858,"modified_method":"public void testConfigurePortletDisplayStyleFullContent()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_86_displayStyle']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_86_displayStyle']\",\n\t\t\tRuntimeVariables.replace(\"label=Full Content\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Full Content\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_displayStyle']\"));\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentRatingsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comment Ratings\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":56859,"modified_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentRatingsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comment Ratings\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentRatingsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":56860,"modified_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":56861,"modified_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_86_enableCommentsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enable Comments\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableCommentsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRateBlogsEntryCommentAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\n\t\t\t\t\t\t\t\"//div[@class='aui-rating-label-element']\",\n\t\t\t\t\t\t\t\"0 Votes\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-rating-label-element']\", \"0 Votes\"));\n\t\tselenium.clickAt(\"//div[3]/div/div[1]/div/div/div/div/a[1]\",\n\t\t\tRuntimeVariables.replace(\"Rate this as good.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"+1 (1 Vote)\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='aui-rating-label-element']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"+1 (1 Vote)\"),\n\t\t\tselenium.getText(\"//div[@class='aui-rating-label-element']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//a[@class='aui-rating-element aui-rating-element-off aui-rating-thumb-up aui-rating-element-on']\"));\n\t\tselenium.clickAt(\"//div[3]/div/div[1]/div/div/div/div/a[2]\",\n\t\t\tRuntimeVariables.replace(\"Rate this as bad.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"-1 (1 Vote)\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='aui-rating-label-element']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"-1 (1 Vote)\"),\n\t\t\tselenium.getText(\"//div[@class='aui-rating-label-element']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//a[@class='aui-rating-element aui-rating-element-off aui-rating-thumb-down aui-rating-element-on']\"));\n\t\tselenium.clickAt(\"//div[3]/div/div[1]/div/div/div/div/a[2]\",\n\t\t\tRuntimeVariables.replace(\"Rate this as bad.\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//a[@class='aui-rating-element aui-rating-element-off aui-rating-thumb-up aui-rating-element-on']\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//a[@class='aui-rating-element aui-rating-element-off aui-rating-thumb-down aui-rating-element-on']\"));\n\t}","id":56862,"modified_method":"public void testRateBlogsEntryCommentAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\n\t\t\t\t\t\t\t\"//div[@class='aui-rating-label-element']\",\n\t\t\t\t\t\t\t\"0 Votes\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-rating-label-element']\", \"0 Votes\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rate this as good.\"),\n\t\t\tselenium.getText(\"//div[@id='zyfa_ratingThumbContent']/a[1]\"));\n\t\tselenium.clickAt(\"//div[@id='zyfa_ratingThumbContent']/a[1]\",\n\t\t\tRuntimeVariables.replace(\"Rate this as good.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"+1 (1 Vote)\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='aui-rating-label-element']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"+1 (1 Vote)\"),\n\t\t\tselenium.getText(\"//div[@class='aui-rating-label-element']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//a[@class='aui-rating-element aui-rating-element-off aui-rating-thumb-up aui-rating-element-on']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rate this as bad.\"),\n\t\t\tselenium.getText(\"//div[@id='zyfa_ratingThumbContent']/a[2]\"));\n\t\tselenium.clickAt(\"//div[@id='zyfa_ratingThumbContent']/a[2]\",\n\t\t\tRuntimeVariables.replace(\"Rate this as bad.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"-1 (1 Vote)\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='aui-rating-label-element']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"-1 (1 Vote)\"),\n\t\t\tselenium.getText(\"//div[@class='aui-rating-label-element']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//a[@class='aui-rating-element aui-rating-element-off aui-rating-thumb-down aui-rating-element-on']\"));\n\t\tselenium.clickAt(\"//div[@id='zyfa_ratingThumbContent']/a[2]\",\n\t\t\tRuntimeVariables.replace(\"Rate this as bad.\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//a[@class='aui-rating-element aui-rating-element-off aui-rating-thumb-up aui-rating-element-on']\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//a[@class='aui-rating-element aui-rating-element-off aui-rating-thumb-down aui-rating-element-on']\"));\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownBlogsEntry() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean blogsEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean blogsEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean blogsEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean blogsEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":56863,"modified_method":"public void testTearDownBlogsEntry() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownBlogsEntry() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean blogsEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean blogsEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean blogsEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean blogsEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Delete\");\n\n\t\t\t\tif (!blogsEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":56864,"modified_method":"public void testTearDownBlogsEntry() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsEntry1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsEntry2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsEntry3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsEntry4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsEntry5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/span/a/span\");\n\n\t\t\t\tif (!blogsEntry5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//td[3]/span/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tString guestCommunity = selenium.getText(\n\t\t\t\t\t\t\"//nav[@class='site-breadcrumbs']/ul/li[1]/span/a\");\n\t\t\t\tRuntimeVariables.setValue(\"guestCommunity\", guestCommunity);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div/div[3]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"${guestCommunity}\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":56865,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tString guestCommunity = selenium.getText(\n\t\t\t\t\t\t\"//nav[@class='site-breadcrumbs']/ul/li[1]/span/a\");\n\t\t\t\tRuntimeVariables.setValue(\"guestCommunity\", guestCommunity);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div/div[3]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"${guestCommunity}\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/div/div[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//td[2]/ul/li[1]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":56866,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"2c13c43b8d92bfaa294e7df74674419675941466","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddOrganization() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Organization\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.select(\"//select[@id='_125_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Regular Organization\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=View All\", RuntimeVariables.replace(\"View All\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Selenium\"),\n\t\t\tselenium.getText(\"//a[2]/strong\"));\n\t}","id":56867,"modified_method":"public void testAddOrganization() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Regular Organization')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Regular Organization\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Regular Organization')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Regular Organization')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Organization Name\"));\n\t\tselenium.select(\"//select[@id='_125_type']\",\n\t\t\tRuntimeVariables.replace(\"label=Regular Organization\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Organization Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t}","commit_id":"3fcd41ce1757ee17963c215be07f442e04fe1690","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testErrorAddUserScreenNameNumberOrganizationId()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Organization Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Organization Name\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tString OrganizationID = selenium.getFirstNumber(\n\t\t\t\t\"//fieldset[1]/div/div[3]/div\");\n\t\tRuntimeVariables.setValue(\"OrganizationID\", OrganizationID);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(RuntimeVariables.getValue(\"OrganizationID\")));\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"userea@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please enter a valid screen name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":56868,"modified_method":"public void testErrorAddUserScreenNameNumberOrganizationId()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Organization Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Organization Name\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tString OrganizationID = selenium.getFirstNumber(\n\t\t\t\t\"//fieldset[1]/div/div[3]/div\");\n\t\tRuntimeVariables.setValue(\"OrganizationID\", OrganizationID);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'User')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'User')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'User')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(RuntimeVariables.getValue(\"OrganizationID\")));\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"userea@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please enter a valid screen name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"3fcd41ce1757ee17963c215be07f442e04fe1690","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testErrorAddUserScreenNameNumberSiteId()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//td/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit Settings')]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit Settings')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit Settings')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tString SiteID = selenium.getFirstNumber(\"//fieldset/div/div[1]/div\");\n\t\tRuntimeVariables.setValue(\"SiteID\", SiteID);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(RuntimeVariables.getValue(\"SiteID\")));\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"userea@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please enter a valid screen name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":56869,"modified_method":"public void testErrorAddUserScreenNameNumberSiteId()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//td/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit Settings')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit Settings')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit Settings')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tString SiteID = selenium.getFirstNumber(\"//fieldset/div/div[1]/div\");\n\t\tRuntimeVariables.setValue(\"SiteID\", SiteID);\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(RuntimeVariables.getValue(\"SiteID\")));\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"userea@liferay.com\"));\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please enter a valid screen name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"3fcd41ce1757ee17963c215be07f442e04fe1690","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditPreferences() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Weather Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Weather Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//textarea[@name='_1_WAR_weatherportlet_zips']\",\n\t\t\tRuntimeVariables.replace(\"Diamond Bar, CA\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated your preferences.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Return to Full Page\",\n\t\t\tRuntimeVariables.replace(\"Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Diamond Bar, CA\"));\n\t}","id":56870,"modified_method":"public void testEditPreferences() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Weather Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'weatherportlet_configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'weatherportlet_configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_apiKey']\");\n\t\tselenium.type(\"//input[@id='_86_apiKey']\",\n\t\t\tRuntimeVariables.replace(\"9d72d0f809003954131601\"));\n\t\tselenium.type(\"//textarea[@id='_86_zips']\",\n\t\t\tRuntimeVariables.replace(\"Diamond Bar, CA\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertEquals(RuntimeVariables.replace(\"Diamond Bar, CA\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[2]/span\"));\n\t\tassertTrue(selenium.isVisible(\"//td[3]/img\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Weather Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Diamond Bar, CA\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[2]/span\"));\n\t\tassertTrue(selenium.isVisible(\"//td[3]/img\"));\n\t}","commit_id":"33ddc880ce7b7b044801994961cec84bcdc1081f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(EditPreferencesTest.class);\n\t\ttestSuite.addTestSuite(DeletePageTest.class);\n\n\t\treturn testSuite;\n\t}","id":56871,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(EditPreferencesTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"33ddc880ce7b7b044801994961cec84bcdc1081f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPageFormatHTML()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add Child Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=HTML\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div/span[1]/span/span/input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//div/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"WD Wiki Page Format HTML Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"cke_40\", RuntimeVariables.replace(\"Source\"));\n\t\tselenium.type(\"//td[@id='cke_contents_CKEditor1']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"<a href=http://www.liferay.com>Welcome to LIFERAY<\/a>\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"cke_40\", RuntimeVariables.replace(\"Source\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=WD Wiki Page Format HTML Test\"));\n\t\tselenium.clickAt(\"link=WD Wiki Page Format HTML Test\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Welcome to LIFERAY\"));\n\t\tselenium.clickAt(\"link=Details\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\"//tr[2]/td\"));\n\t}","id":56872,"modified_method":"public void testAddWDFrontPageChildPageFormatHTML()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add Child Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"label=HTML\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div/span[1]/span/span/input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//div/span[1]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"WD Wiki Page Format HTML Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"cke_42_label\", RuntimeVariables.replace(\"Source\"));\n\t\tselenium.type(\"//td[@id='cke_contents_CKEditor1']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"<a href=http://www.liferay.com>Welcome to LIFERAY<\/a>\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"cke_42_label\", RuntimeVariables.replace(\"Source\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=WD Wiki Page Format HTML Test\"));\n\t\tselenium.clickAt(\"link=WD Wiki Page Format HTML Test\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Welcome to LIFERAY\"));\n\t\tselenium.clickAt(\"link=Details\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\"//tr[2]/td\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiPageEmptyAttachment() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Page Test\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=This page is empty. Edit it to add some text.\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Attachments\"));\n\t\tselenium.clickAt(\"link=Attachments\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not have any file attachments.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Attachments']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.windowFocus();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Use the classic uploader.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"link=Use the classic uploader.\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_36_file1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_36_file1\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\wiki\\\\wikipage\\\\addfrontpagecreoleimage\\\\dependencies\\\\Wiki_Attachment.jpg\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_36_file1\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\projects\\\\6.0.x\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\wiki\\\\wikipage\\\\addfrontpagecreoleimage\\\\dependencies\\\\Wiki_Attachment.jpg\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki_Attachment.jpg\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 1 result.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']/\"));\n\t}","id":56873,"modified_method":"public void testAddWikiPageEmptyAttachment() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Page Test\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=This page is empty. Edit it to add some text.\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Attachments\"));\n\t\tselenium.clickAt(\"link=Attachments\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not have any file attachments.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Attachments']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.windowFocus();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Use the classic uploader.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"link=Use the classic uploader.\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_36_file1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_36_file1\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\wiki\\\\wikipage\\\\addfrontpagecreoleimage\\\\dependencies\\\\Wiki_Attachment.jpg\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki_Attachment.jpg\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 1 result.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']/\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletDisplayGuest() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"));\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_groupId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_groupId\", RuntimeVariables.replace(\"label=Liferay\"));\n\t\tselenium.select(\"_86_type\",\n\t\t\tRuntimeVariables.replace(\"label=Announcements\"));\n\t\tselenium.select(\"_86_pageURL\", RuntimeVariables.replace(\"label=Normal\"));\n\t\tselenium.select(\"_86_pageDelta\", RuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"_86_orderByCol\",\n\t\t\tRuntimeVariables.replace(\"label=Display Date\"));\n\t\tselenium.select(\"_86_orderByType\",\n\t\t\tRuntimeVariables.replace(\"label=Ascending\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Web Content Test\"));\n\t}","id":56874,"modified_method":"public void testConfigurePortletDisplayGuest() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_groupId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_groupId\", RuntimeVariables.replace(\"label=Liferay\"));\n\t\tselenium.select(\"_86_type\",\n\t\t\tRuntimeVariables.replace(\"label=Announcements\"));\n\t\tselenium.select(\"_86_pageURL\", RuntimeVariables.replace(\"label=Normal\"));\n\t\tselenium.select(\"_86_pageDelta\", RuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"_86_orderByCol\",\n\t\t\tRuntimeVariables.replace(\"label=Display Date\"));\n\t\tselenium.select(\"_86_orderByType\",\n\t\t\tRuntimeVariables.replace(\"label=Ascending\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Web Content Test\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletDisplayGuest() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"));\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_groupId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_groupId\", RuntimeVariables.replace(\"label=Liferay\"));\n\t\tselenium.select(\"_86_type\",\n\t\t\tRuntimeVariables.replace(\"label=Announcements\"));\n\t\tselenium.select(\"_86_pageURL\", RuntimeVariables.replace(\"label=Normal\"));\n\t\tselenium.select(\"_86_pageDelta\", RuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"_86_orderByCol\",\n\t\t\tRuntimeVariables.replace(\"label=Display Date\"));\n\t\tselenium.select(\"_86_orderByType\",\n\t\t\tRuntimeVariables.replace(\"label=Ascending\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Web Content Test\"));\n\t}","id":56875,"modified_method":"public void testConfigurePortletDisplayGuest() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_groupId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_groupId\", RuntimeVariables.replace(\"label=Liferay\"));\n\t\tselenium.select(\"_86_type\",\n\t\t\tRuntimeVariables.replace(\"label=Announcements\"));\n\t\tselenium.select(\"_86_pageURL\", RuntimeVariables.replace(\"label=Normal\"));\n\t\tselenium.select(\"_86_pageDelta\", RuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"_86_orderByCol\",\n\t\t\tRuntimeVariables.replace(\"label=Display Date\"));\n\t\tselenium.select(\"_86_orderByType\",\n\t\t\tRuntimeVariables.replace(\"label=Ascending\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Web Content Test\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_86_enableCommentRatingsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableCommentRatingsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a test wcd web content comment.\"),\n\t\t\tselenium.getText(\"//td[2]/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"0 (0 Votes) The average rating is 0 stars out of 5.\"),\n\t\t\tselenium.getText(\"//td[1]/div/div/div/div\"));\n\t}","id":56876,"modified_method":"public void testConfigurePortletEnableCommentRatings()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_enableCommentRatingsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"_86_enableCommentRatingsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableCommentRatingsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertTrue(selenium.isChecked(\"_86_enableCommentRatingsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a test wcd web content comment.\"),\n\t\t\tselenium.getText(\"//td[2]/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"0 (0 Votes) The average rating is 0 stars out of 5.\"),\n\t\t\tselenium.getText(\"//td[1]/div/div/div/div\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_enableCommentsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableCommentsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Be the first.\"));\n\t}","id":56877,"modified_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_enableCommentsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"_86_enableCommentsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableCommentsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertTrue(selenium.isChecked(\"_86_enableCommentsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Be the first.\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_enableCommentsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableCommentsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Be the first.\"));\n\t}","id":56878,"modified_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_enableCommentsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"_86_enableCommentsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableCommentsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertTrue(selenium.isChecked(\"_86_enableCommentsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Be the first.\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_enableCommentsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableCommentsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Be the first.\"));\n\t}","id":56879,"modified_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_enableCommentsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"_86_enableCommentsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableCommentsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertTrue(selenium.isChecked(\"_86_enableCommentsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Be the first.\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_enableCommentsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableCommentsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Be the first.\"));\n\t}","id":56880,"modified_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_enableCommentsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"_86_enableCommentsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableCommentsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertTrue(selenium.isChecked(\"_86_enableCommentsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Be the first.\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Configuration\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_enableCommentsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableCommentsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Be the first.\"));\n\t}","id":56881,"modified_method":"public void testConfigurePortletEnableComments() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_enableCommentsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"_86_enableCommentsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableCommentsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertTrue(selenium.isChecked(\"_86_enableCommentsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Be the first.\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableRatings() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_enableRatingsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableRatingsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Your Rating\"));\n\t}","id":56882,"modified_method":"public void testConfigurePortletEnableRatings() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_enableRatingsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"_86_enableRatingsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableRatingsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertTrue(selenium.isChecked(\"_86_enableRatingsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Your Rating\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletEnableRatings() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_enableRatingsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableRatingsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Your Rating\"));\n\t}","id":56883,"modified_method":"public void testConfigurePortletEnableRatings() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_enableRatingsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"_86_enableRatingsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_enableRatingsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertTrue(selenium.isChecked(\"_86_enableRatingsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"This is a test wcd web content.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Your Rating\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletShowAvailableLocales()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_86_showAvailableLocalesCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_showAvailableLocalesCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//img[@alt='English (United States)']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//img[@alt='English (United States)']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Hello World Page Name\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//td[@class='page-name']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Hello World Page Name\"),\n\t\t\tselenium.getText(\"//td[@class='page-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hello World Page Description\"),\n\t\t\tselenium.getText(\"//td[@class='page-description']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//img[@alt='\\u4e2d\\u6587 (\\u4e2d\\u56fd)']\"));\n\t\tselenium.clickAt(\"//img[@alt='\\u4e2d\\u6587 (\\u4e2d\\u56fd)']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"\\u4e16\\u754c\\u60a8\\u597d Page Name\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//td[@class='page-name']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"\\u4e16\\u754c\\u60a8\\u597d Page Name\"),\n\t\t\tselenium.getText(\"//td[@class='page-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"\\u4e16\\u754c\\u60a8\\u597d Page Description\"),\n\t\t\tselenium.getText(\"//td[@class='page-description']\"));\n\t}","id":56884,"modified_method":"public void testConfigurePortletShowAvailableLocales()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_showAvailableLocalesCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_showAvailableLocalesCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//img[@alt='English (United States)']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//img[@alt='English (United States)']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Hello World Page Name\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//td[@class='page-name']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Hello World Page Name\"),\n\t\t\tselenium.getText(\"//td[@class='page-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hello World Page Description\"),\n\t\t\tselenium.getText(\"//td[@class='page-description']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//img[@alt='\\u4e2d\\u6587 (\\u4e2d\\u56fd)']\"));\n\t\tselenium.clickAt(\"//img[@alt='\\u4e2d\\u6587 (\\u4e2d\\u56fd)']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"\\u4e16\\u754c\\u60a8\\u597d Page Name\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//td[@class='page-name']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"\\u4e16\\u754c\\u60a8\\u597d Page Name\"),\n\t\t\tselenium.getText(\"//td[@class='page-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"\\u4e16\\u754c\\u60a8\\u597d Page Description\"),\n\t\t\tselenium.getText(\"//td[@class='page-description']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56885,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56886,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56887,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56888,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56889,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56890,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56891,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56892,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56893,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56894,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56895,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56896,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56897,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56898,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56899,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56900,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56901,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56902,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56903,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56904,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56905,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56906,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56907,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56908,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56909,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56910,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56911,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56912,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":56913,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_nodeId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_nodeId\", RuntimeVariables.replace(\"label=Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"You have successfully updated the setup.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Main\"),\n\t\t\tselenium.getText(\"_86_nodeId\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"_86_title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Wiki Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a wiki frontpage article test.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWCWebContent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=WC Web Content Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=WC Web Content Test\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\n\t\t\t\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\",\n\t\t\t\t\t\t\t\"Displaying Content:\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\", \"Displaying Content:\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This is a test wc web content.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","id":56914,"modified_method":"public void testSelectWCWebContent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=WC Web Content Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=WC Web Content Test\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\n\t\t\t\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\",\n\t\t\t\t\t\t\t\"Displaying Content:\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\", \"Displaying Content:\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This is a test wc web content.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWCWebContent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=WC Web Content Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=WC Web Content Test\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\n\t\t\t\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\",\n\t\t\t\t\t\t\t\"Displaying Content:\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\", \"Displaying Content:\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This is a test wc web content.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","id":56915,"modified_method":"public void testSelectWCWebContent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=WC Web Content Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=WC Web Content Test\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\n\t\t\t\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\",\n\t\t\t\t\t\t\t\"Displaying Content:\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\", \"Displaying Content:\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This is a test wc web content.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWebContentLocalized() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//img[@alt='Select Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Hello World Localized Article\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Hello World Localized Article\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\n\t\t\t\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\",\n\t\t\t\t\t\t\t\"Displaying Content:\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\", \"Displaying Content:\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t}","id":56916,"modified_method":"public void testSelectWebContentLocalized() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//img[@alt='Select Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Hello World Localized Article\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Hello World Localized Article\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\n\t\t\t\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\",\n\t\t\t\t\t\t\t\"Displaying Content:\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\", \"Displaying Content:\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWebContentLocalized() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//img[@alt='Select Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Hello World Localized Article\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Hello World Localized Article\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\n\t\t\t\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\",\n\t\t\t\t\t\t\t\"Displaying Content:\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\", \"Displaying Content:\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t}","id":56917,"modified_method":"public void testSelectWebContentLocalized() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//img[@alt='Select Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Hello World Localized Article\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Hello World Localized Article\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\n\t\t\t\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\",\n\t\t\t\t\t\t\t\"Displaying Content:\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//form[@id='_86_fm1']/div[1]/span[2]\", \"Displaying Content:\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t}","commit_id":"afcc96411da36b984d9c4c53b31e84bac8f34179","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testActivateStagingCommunityQuartz() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Communities\",\n\t\t\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Community Staging Community Quartz\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\t\t\"Community Staging Community Quartz\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Settings\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//li[@id='_134_tabs1settingsTabsId']/span/span/a\"));\n\t\t\t\tselenium.clickAt(\"//li[@id='_134_tabs1settingsTabsId']/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Staging\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@name='_134_stagingType']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Local Live\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_33Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_134_staged-portlet_33Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_28Checkbox\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_134_staged-portlet_28Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_8Checkbox\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_134_staged-portlet_8Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_110Checkbox\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_134_staged-portlet_110Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_19Checkbox\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_134_staged-portlet_19Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_107Checkbox\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_134_staged-portlet_107Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_108Checkbox\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_134_staged-portlet_108Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_59Checkbox\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_134_staged-portlet_59Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_56Checkbox\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_134_staged-portlet_56Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_36Checkbox\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_134_staged-portlet_36Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_54Checkbox\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_134_staged-portlet_54Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 12:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Community Staging Community Quartz[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request processed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Community Staging Community Quartz (Staging)\"),\n\t\t\t\t\tselenium.getText(\"//li[4]/span\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":56918,"modified_method":"public void testActivateStagingCommunityQuartz() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Community Staging Community Quartz\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Community Staging Community Quartz\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_165_stagingLink']\", \"Staging\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_165_stagingLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//select[@name='_165_stagingType']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@name='_165_stagingType']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Local Live\"));\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_165_branchingPublicCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_branchingPublicCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enabled On Public Pages\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_165_branchingPublicCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_165_branchingPrivateCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_branchingPrivateCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enabled On Private Pages\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_165_branchingPrivateCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_161Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_161Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_28Checkbox\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_28Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_8Checkbox\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_8Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_110Checkbox\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_110Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean dynamicDataMappingChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_166Checkbox\");\n\n\t\t\t\tif (dynamicDataMappingChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_166Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dynamic Data Mapping\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_162Checkbox\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_162Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_107Checkbox\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_107Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_108Checkbox\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_108Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean pollsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_25Checkbox\");\n\n\t\t\t\tif (pollsChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_25Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_59Checkbox\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_59Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean webContentChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_15Checkbox\");\n\n\t\t\t\tif (webContentChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_15Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\n\t\t\tcase 12:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_56Checkbox\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 13;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_56Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 13:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_36Checkbox\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 14;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_36Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 14:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_54Checkbox\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 15;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_54Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 15:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Community Staging Community Quartz[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Community Staging Community Quartz (Staging)\"),\n\t\t\t\t\tselenium.getText(\"//li[4]/span\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testActivateStagingCommunity() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//li[@id='_134_tabs1settingsTabsId']/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Staging\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_134_stagingType\",\n\t\t\tRuntimeVariables.replace(\"label=Local Live\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"When a portlet is checked, its data will be copied to staging and it may not be possible to edit them directly in live. When unchecking a portlet make sure that any changes done in staging are published first, because otherwise they might be lost.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[4]/fieldset/div/div[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"When a portlet is checked, its data will be copied to staging and it may not be possible to edit them directly in live. When unchecking a portlet make sure that any changes done in staging are published first, because otherwise they might be lost.\"),\n\t\t\tselenium.getText(\"//div[4]/fieldset/div/div[1]\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Community Staging Community Web Content Display[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\tassertEquals(\"Local Live\", selenium.getSelectedLabel(\"_134_stagingType\"));\n\t}","id":56919,"modified_method":"public void testActivateStagingCommunity() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Community Staging Community Web Content Display\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_165_stagingLink']\", \"Staging\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_165_stagingLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//select[@name='_165_stagingType']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@name='_165_stagingType']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Local Live\"));\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_165_branchingPublicCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_branchingPublicCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enabled On Public Pages\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_165_branchingPublicCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_165_branchingPrivateCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_branchingPrivateCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enabled On Private Pages\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_165_branchingPrivateCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_161Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_161Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_28Checkbox\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_28Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_8Checkbox\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_8Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_110Checkbox\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_110Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean dynamicDataMappingChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_166Checkbox\");\n\n\t\t\t\tif (dynamicDataMappingChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_166Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dynamic Data Mapping\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_162Checkbox\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_162Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_107Checkbox\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_107Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_108Checkbox\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_108Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean pollsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_25Checkbox\");\n\n\t\t\t\tif (pollsChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_25Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_59Checkbox\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_59Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean webContentChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_15Checkbox\");\n\n\t\t\t\tif (webContentChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_15Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\n\t\t\tcase 12:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_56Checkbox\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 13;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_56Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 13:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_36Checkbox\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 14;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_36Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 14:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_54Checkbox\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 15;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_54Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 15:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Community Staging Community Web Content Display[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Community Staging Community Web Content Display (Staging)\"),\n\t\t\t\t\tselenium.getText(\"//li[4]/span\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCommunityStagingCommunityQuartz()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Staging Community Quartz\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Staging Community Quartz\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Quartz\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t}","id":56920,"modified_method":"public void testAddCommunityStagingCommunityQuartz()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Custom Site\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Staging Community Quartz\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Staging Community Quartz\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Quartz\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCommunityStagingCommunityWCD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t}","id":56921,"modified_method":"public void testAddCommunityStagingCommunityWCD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Custom Site\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageStagingCommunityQuartz() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Staging Community Quartz\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Quartz\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Page Staging Community Quartz\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":56922,"modified_method":"public void testAddPageStagingCommunityQuartz() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Staging Community Quartz\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Quartz\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Page\"),\n\t\t\tselenium.getText(\"//div[2]/span/button\"));\n\t\tselenium.click(\"//div[2]/span/button\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_156_name_en_US']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_156_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Page Staging Community Quartz\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageStagingCommunityWCD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name_en_US\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t}","id":56923,"modified_method":"public void testAddPageStagingCommunityWCD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Page\"),\n\t\t\tselenium.getText(\"//div[2]/span/button\"));\n\t\tselenium.click(\"//div[2]/span/button\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_156_name_en_US']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_156_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletStagingCommunityWCD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Web Content Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Web Content Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":56924,"modified_method":"public void testAddPortletStagingCommunityWCD() throws Exception {\n\t\tselenium.open(\"/web/community-staging-community-web-content-display/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Web Content Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Web Content Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSchedulerEventStagingCommunityQuartz()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Staging Community Quartz\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\"Community Staging Community Quartz\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Schedule Publication to Live']\",\n\t\t\tRuntimeVariables.replace(\"Schedule Publication to Live\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@name='_134_description']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_description']\",\n\t\t\tRuntimeVariables.replace(\"Quartz Scheduler Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_134_schedulerStartDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"December\"));\n\t\tselenium.select(\"//select[@id='_134_schedulerStartDateDay']\",\n\t\t\tRuntimeVariables.replace(\"31\"));\n\t\tselenium.select(\"//select[@id='_134_schedulerStartDateYear']\",\n\t\t\tRuntimeVariables.replace(\"2016\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View All\"),\n\t\t\tselenium.getText(\"//span[1]/a\"));\n\t\tselenium.clickAt(\"//span[1]/a\", RuntimeVariables.replace(\"View All\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Quartz Scheduler Event\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//tr[3]/td[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Quartz Scheduler Event\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t}","id":56925,"modified_method":"public void testAddSchedulerEventStagingCommunityQuartz()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/community-staging-community-quartz-staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Page Staging Community Quartz\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Quartz\",\n\t\t\tRuntimeVariables.replace(\"Page Staging Community Quartz\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\",\n\t\t\tRuntimeVariables.replace(\"Staging Drop Down\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Schedule Publication to Live\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@name='_88_description']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_88_description']\",\n\t\t\tRuntimeVariables.replace(\"Quartz Scheduler Event\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_88_schedulerStartDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"December\"));\n\t\tselenium.select(\"//select[@id='_88_schedulerStartDateDay']\",\n\t\t\tRuntimeVariables.replace(\"31\"));\n\t\tselenium.select(\"//select[@id='_88_schedulerStartDateYear']\",\n\t\t\tRuntimeVariables.replace(\"2016\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View All\"),\n\t\t\tselenium.getText(\"//span[1]/a\"));\n\t\tselenium.clickAt(\"//span[1]/a\", RuntimeVariables.replace(\"View All\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Quartz Scheduler Event\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@id='_88_scheduledPublishEventsDiv']/div/div/table/tbody/tr[3]/td\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Quartz Scheduler Event\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='_88_scheduledPublishEventsDiv']/div/div/table/tbody/tr[3]/td\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWebContent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\tselenium.getText(\"//td[1]/a[2]\"));\n\t\tselenium.clickAt(\"//td[1]/a[2]\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//body[@class='blue staging controls-visible signed-in public-page']\"));\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display (Staging)\"),\n\t\t\tselenium.getText(\"//nav/ul/li[2]/span\"));\n\t\tselenium.clickAt(\"//input[@value='Add Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_15_structure_el_TextAreaField_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[@id='_15_structure_el_TextAreaField_content']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[7]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[8]/a\"));\n\t}","id":56926,"modified_method":"public void testAddWebContent() throws Exception {\n\t\tselenium.open(\"/web/community-staging-community-web-content-display/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Staging\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Back to Community Staging Community Web Content Display (Staging)\"),\n\t\t\tselenium.getText(\"//li[@class='back-link']/a\"));\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteTemporaryUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Temporary\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":56927,"modified_method":"public void testDeleteTemporaryUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Temporary\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Temporary\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a temporary user group.\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No user groups were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Temporary\"));\n\t\tassertFalse(selenium.isTextPresent(\"This is a temporary user group.\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPublishToLiveCommunityStagingCommunityWCD()\n\t\tthrows Exception {\n\t\tselenium.open(\n\t\t\t\"/web/community-staging-community-web-content-display-staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\",\n\t\t\tRuntimeVariables.replace(\"Staging Dropdown\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Publish to Live Now\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Publish to Live Now\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Publish']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":56928,"modified_method":"public void testPublishToLiveCommunityStagingCommunityWCD()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\n\t\t\t\t\t\"/web/community-staging-community-web-content-display-staging/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean markAsReadyPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//button[3]\");\n\n\t\t\t\tif (!markAsReadyPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Mark as Ready for Publication\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.clickAt(\"//button[3]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mark as Ready for Publication\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\t\t\"Status: Ready for Publication\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//span[@class='workflow-status']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Status: Ready for Publication\"),\n\t\t\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging Dropdown\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Publish to Live Now\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Publish to Live Now\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Publish']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to publish these pages[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWebContent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\tselenium.getText(\"//td[1]/a[2]\"));\n\t\tselenium.clickAt(\"//td[1]/a[2]\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//body[@class='blue staging controls-visible signed-in public-page']\"));\n\t\tselenium.clickAt(\"//img[@alt='Select Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[6]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Name\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\"//form[@id='_86_fm1']/div\",\n\t\t\t\t\t\t\t\"Displaying Content:\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//form[@id='_86_fm1']/div\",\n\t\t\t\t\"Displaying Content:\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div[1]\"));\n\t}","id":56929,"modified_method":"public void testSelectWebContent() throws Exception {\n\t\tselenium.open(\"/web/community-staging-community-web-content-display/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Staging\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//img[@alt='Select Web Content']\",\n\t\t\tRuntimeVariables.replace(\"Select Web Content\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC Web Content Name\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Displaying Content: WC Web Content Name (Modified)\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//span[@class='displaying-article-id-holder']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Displaying Content: WC Web Content Name (Modified)\"),\n\t\t\tselenium.getText(\"//span[@class='displaying-article-id-holder']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"WC Web Content Content\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='journal-content-article']/p\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCommunityStagingCommunityWCDPublishToLive()\n\t\tthrows Exception {\n\t\tselenium.open(\n\t\t\t\"/web/community-staging-community-web-content-display-staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t\tselenium.open(\"/web/community-staging-community-web-content-display/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t}","id":56930,"modified_method":"public void testViewCommunityStagingCommunityWCDPublishToLive()\n\t\tthrows Exception {\n\t\tselenium.open(\n\t\t\t\"/web/community-staging-community-web-content-display-staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t\tselenium.open(\"/web/community-staging-community-web-content-display/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCommunityStagingCommunityWCD()\n\t\tthrows Exception {\n\t\tselenium.open(\n\t\t\t\"/web/community-staging-community-web-content-display-staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t\tselenium.open(\"/web/community-staging-community-web-content-display/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"WC Web Content Content\"));\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t}","id":56931,"modified_method":"public void testViewCommunityStagingCommunityWCD()\n\t\tthrows Exception {\n\t\tselenium.open(\n\t\t\t\"/web/community-staging-community-web-content-display-staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t\tselenium.open(\"/web/community-staging-community-web-content-display/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"WC Web Content Content\"));\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCommunityStagingCommunityWCD()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Staging\"),\n\t\t\tselenium.getText(\"//td[1]/a[2]\"));\n\t\tselenium.clickAt(\"//td[1]/a[2]\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//body[@class='blue staging controls-visible signed-in public-page']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display (Staging)\"),\n\t\t\tselenium.getText(\"//nav/ul/li[2]/span\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[7]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[8]/a\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[1]/a[1]\",\n\t\t\tRuntimeVariables.replace(\"Public Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//body[@class='blue staging controls-visible signed-in public-page']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC Web Content Content\"));\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Community Staging Community Web Content Display (Staging)\"),\n\t\t\tselenium.getText(\"//nav/ul/li[2]/span\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[7]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[8]/a\"));\n\t}","id":56932,"modified_method":"public void testViewCommunityStagingCommunityWCD()\n\t\tthrows Exception {\n\t\tselenium.open(\n\t\t\t\"/web/community-staging-community-web-content-display-staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t\tselenium.open(\"/web/community-staging-community-web-content-display/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Page Staging Community Web Content Display\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Web Content Display\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Page Staging Community Web Content Display\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"WC Web Content Content\"));\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewSchedulerEventStagingCommunityQuartz()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Community Staging Community Quartz\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//tr[3]/td[1]\",\n\t\t\t\t\"Community Staging Community Quartz\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Schedule Publication to Live']\",\n\t\t\tRuntimeVariables.replace(\"Schedule Publication to Live\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//span[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View All\"),\n\t\t\tselenium.getText(\"//span[1]/a\"));\n\t\tselenium.clickAt(\"//span[1]/a\", RuntimeVariables.replace(\"View All\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Quartz Scheduler Event\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@id='_134_scheduledPublishEventsDiv']/div/div/table/tbody/tr[3]/td\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Quartz Scheduler Event\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='_134_scheduledPublishEventsDiv']/div/div/table/tbody/tr[3]/td\"));\n\t}","id":56933,"modified_method":"public void testViewSchedulerEventStagingCommunityQuartz()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/community-staging-community-quartz-staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Page Staging Community Quartz\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Staging Community Quartz\",\n\t\t\tRuntimeVariables.replace(\"Page Staging Community Quartz\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//span[@class='staging-icon-menu-container']/span/ul/li[1]/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Staging\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Schedule Publication to Live\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"View All\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//span[1]/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View All\"),\n\t\t\tselenium.getText(\"//span[1]/a\"));\n\t\tselenium.clickAt(\"//span[1]/a\", RuntimeVariables.replace(\"View All\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Quartz Scheduler Event\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//tr[3]/td[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Quartz Scheduler Event\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t}","commit_id":"56c0356eabdd2ebc505dc7797d52879e6108a8e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFeed() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Configuration\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"add\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[2]/div/div/span[2]/span/span/input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//div[2]/div/div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"http://feeds.digg.com/digg/popular.rss\"));\n\t\tselenium.select(\"_86_entriesPerFeed\",\n\t\t\tRuntimeVariables.replace(\"label=4\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"digg.com: Stories / Popular\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\"digg.com: Stories / Popular\"));\n\t}","id":56934,"modified_method":"public void testAddFeed() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/span/span/button[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[2]/span/span/button[1]\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_url3\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_url3\",\n\t\t\tRuntimeVariables.replace(\"http://feeds.digg.com/digg/popular.rss\"));\n\t\tselenium.select(\"_86_entriesPerFeed\",\n\t\t\tRuntimeVariables.replace(\"label=4\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"digg.com: Stories\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\"digg.com: Stories\"));\n\t}","commit_id":"3ce9f418ce5d61a254dd6361689402aafd846234","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWebContentFooter() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"Footer Web Content\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_15_structure_el_TextAreaField_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[@id='_15_structure_el_TextAreaField_content']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is footer web content.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save and Approve']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.clickAt(\"//span/span/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Footer Web Content\"));\n\t}","id":56935,"modified_method":"public void testAddWebContentFooter() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"Footer Web Content\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_15_structure_el_TextAreaField_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[@id='_15_structure_el_TextAreaField_content']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is footer web content.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Footer Web Content\"));\n\t}","commit_id":"3ce9f418ce5d61a254dd6361689402aafd846234","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWebContentFooter() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"Footer Web Content\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_15_structure_el_TextAreaField_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[@id='_15_structure_el_TextAreaField_content']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is footer web content.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save and Approve']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.clickAt(\"//span/span/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Footer Web Content\"));\n\t}","id":56936,"modified_method":"public void testAddWebContentFooter() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"Footer Web Content\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_15_structure_el_TextAreaField_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[@id='_15_structure_el_TextAreaField_content']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is footer web content.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Footer Web Content\"));\n\t}","commit_id":"3ce9f418ce5d61a254dd6361689402aafd846234","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWebContentHeader() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"Header Web Content\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_15_structure_el_TextAreaField_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[@id='_15_structure_el_TextAreaField_content']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is header web content.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save and Approve']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.clickAt(\"//span/span/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Header Web Content\"));\n\t}","id":56937,"modified_method":"public void testAddWebContentHeader() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"Header Web Content\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_15_structure_el_TextAreaField_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[@id='_15_structure_el_TextAreaField_content']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is header web content.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Header Web Content\"));\n\t}","commit_id":"3ce9f418ce5d61a254dd6361689402aafd846234","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWebContentHeader() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"Header Web Content\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_15_structure_el_TextAreaField_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[@id='_15_structure_el_TextAreaField_content']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is header web content.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save and Approve']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.clickAt(\"//span/span/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Header Web Content\"));\n\t}","id":56938,"modified_method":"public void testAddWebContentHeader() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_15_title\",\n\t\t\tRuntimeVariables.replace(\"Header Web Content\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_15_structure_el_TextAreaField_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[@id='_15_structure_el_TextAreaField_content']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is header web content.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Header Web Content\"));\n\t}","commit_id":"3ce9f418ce5d61a254dd6361689402aafd846234","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveWebContentFooter() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//section/div/div/div/p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"This is footer web content.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/p\"));\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@id='_86_removeButton' and @value='Remove' and @type='button' and @onclick='_86_removeSelectionForFooter();']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[3]/div/div/div/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"This is footer web content.\"));\n\t}","id":56939,"modified_method":"public void testRemoveWebContentFooter() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//section/div/div/div/p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"This is footer web content.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/p\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_86_removeButton' and @value='Remove' and @type='button' and @onclick='_86_removeSelectionForFooter();']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@id='_86_removeButton' and @value='Remove' and @type='button' and @onclick='_86_removeSelectionForFooter();']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div[1]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"This is footer web content.\"));\n\t}","commit_id":"3ce9f418ce5d61a254dd6361689402aafd846234","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveWebContentHeader() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"This is header web content.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Remove']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[3]/div/div/div/div/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"This is header web content.\"));\n\t}","id":56940,"modified_method":"public void testRemoveWebContentHeader() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"This is header web content.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Remove']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Remove']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div[1]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"This is header web content.\"));\n\t}","commit_id":"3ce9f418ce5d61a254dd6361689402aafd846234","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWebContentFooter() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Configuration\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@onclick='_86_selectionForFooter();']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Footer Web Content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[3]/div/div/div/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Footer Web Content Footer Web Content\"),\n\t\t\tselenium.getText(\"//div[2]/fieldset/div/div[2]/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//section/div/div/div/p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"This is footer web content.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/p\"));\n\t}","id":56941,"modified_method":"public void testSelectWebContentFooter() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@onclick='_86_selectionForFooter();']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@onclick='_86_selectionForFooter();']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Footer Web Content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Footer Web Content Footer Web Content\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/fieldset/div/div[2]/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//section/div/div/div/p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"This is footer web content.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/p\"));\n\t}","commit_id":"3ce9f418ce5d61a254dd6361689402aafd846234","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWebContentFooter() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Configuration\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@onclick='_86_selectionForFooter();']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Footer Web Content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[3]/div/div/div/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Footer Web Content Footer Web Content\"),\n\t\t\tselenium.getText(\"//div[2]/fieldset/div/div[2]/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//section/div/div/div/p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"This is footer web content.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/p\"));\n\t}","id":56942,"modified_method":"public void testSelectWebContentFooter() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@onclick='_86_selectionForFooter();']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@onclick='_86_selectionForFooter();']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Footer Web Content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Footer Web Content Footer Web Content\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/fieldset/div/div[2]/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//section/div/div/div/p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"This is footer web content.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/p\"));\n\t}","commit_id":"3ce9f418ce5d61a254dd6361689402aafd846234","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWebContentHeader() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Configuration\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Header Web Content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[3]/div/div/div/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Header Web Content Header Web Content\"),\n\t\t\tselenium.getText(\"//div[2]/fieldset/div/div[1]/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"This is header web content.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","id":56943,"modified_method":"public void testSelectWebContentHeader() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Select']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Header Web Content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Header Web Content Header Web Content\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/fieldset/div/div[1]/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"This is header web content.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","commit_id":"3ce9f418ce5d61a254dd6361689402aafd846234","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWebContentHeader() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Configuration\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Header Web Content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[3]/div/div/div/div/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Header Web Content Header Web Content\"),\n\t\t\tselenium.getText(\"//div[2]/fieldset/div/div[1]/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"This is header web content.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","id":56944,"modified_method":"public void testSelectWebContentHeader() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Select']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Header Web Content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Header Web Content Header Web Content\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/fieldset/div/div[1]/div\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=RSS Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=RSS Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"This is header web content.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","commit_id":"3ce9f418ce5d61a254dd6361689402aafd846234","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUserJSON() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.open(\"/api/jsonws\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='serviceSearch']\",\n\t\t\tRuntimeVariables.replace(\"add-user\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xpath=(//li[@class='lfr-api-signature']/a)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"add-user\"),\n\t\t\tselenium.getText(\"xpath=(//li[@class='lfr-api-signature']/a)[2]\"));\n\t\tselenium.clickAt(\"xpath=(//li[@class='lfr-api-signature']/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"add-user\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@name='companyId']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@id='fieldFalse1']\",\n\t\t\tRuntimeVariables.replace(\"false\"));\n\t\tselenium.type(\"//input[@name='password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@name='password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@id='fieldFalse4']\",\n\t\t\tRuntimeVariables.replace(\"false\"));\n\t\tselenium.type(\"//input[@name='screenName']\",\n\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\tselenium.type(\"//input[@name='emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"userea@liferay.com\"));\n\t\tselenium.type(\"//input[@name='facebookId']\",\n\t\t\tRuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='locale']\",\n\t\t\tRuntimeVariables.replace(\"en_US\"));\n\t\tselenium.type(\"//input[@name='firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\tselenium.type(\"//input[@name='lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\tselenium.type(\"//input[@name='prefixId']\", RuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='suffixId']\", RuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"7\"));\n\t\tselenium.type(\"//input[@name='birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"20\"));\n\t\tselenium.type(\"//input[@name='birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"1888\"));\n\t\tselenium.type(\"//input[@name='roleIds']\", RuntimeVariables.replace(\"15\"));\n\t\tselenium.clickAt(\"//input[@id='fieldFalse24']\",\n\t\t\tRuntimeVariables.replace(\"False\"));\n\t\tselenium.clickAt(\"//input[@value='Invoke']\",\n\t\t\tRuntimeVariables.replace(\"Invoke\"));\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isTextPresent(\"\\\"agreedToTermsOfUse\\\": false,\"));\n\t\tassertTrue(selenium.isTextPresent(\"\\\"companyId\\\": 1,\"));\n\t\tassertTrue(selenium.isTextPresent(\"\\\"facebookId\\\": 0,\"));\n\t\tassertTrue(selenium.isTextPresent(\"\\\"firstName\\\": \\\"userfn\\\",\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"\\\"greeting\\\": \\\"Welcome userfn userln!\\\",\"));\n\t\tassertTrue(selenium.isTextPresent(\"\\\"lastName\\\": \\\"userln\\\",\"));\n\t\tassertTrue(selenium.isTextPresent(\"\\\"screenName\\\": \\\"usersn\\\",\"));\n\t}","id":56945,"modified_method":"public void testAddUserJSON() throws Exception {\n\t\tselenium.open(\"/api/jsonws\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='serviceSearch']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='serviceSearch']\",\n\t\t\tRuntimeVariables.replace(\"add-user\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-panel-content']/ul/li/a[contains(@href,'add-user-26')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"add-user\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/ul/li/a[contains(@href,'add-user-26')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-panel-content']/ul/li/a[contains(@href,'add-user-26')]\",\n\t\t\tRuntimeVariables.replace(\"add-user\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@name='companyId']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@value='false' and @name='autoPassword']\",\n\t\t\tRuntimeVariables.replace(\"Auto Password False\"));\n\t\tselenium.type(\"//input[@name='password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@name='password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@name='screenName']\",\n\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\tselenium.clickAt(\"//input[@value='false' and @name='autoScreenName']\",\n\t\t\tRuntimeVariables.replace(\"Auto Screen Name False\"));\n\t\tselenium.type(\"//input[@name='emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"userea@liferay.com\"));\n\t\tselenium.type(\"//input[@name='facebookId']\",\n\t\t\tRuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='locale']\",\n\t\t\tRuntimeVariables.replace(\"en_US\"));\n\t\tselenium.type(\"//input[@name='firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\tselenium.type(\"//input[@name='lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\tselenium.type(\"//input[@name='prefixId']\", RuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='suffixId']\", RuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"7\"));\n\t\tselenium.type(\"//input[@name='birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"20\"));\n\t\tselenium.type(\"//input[@name='birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"1888\"));\n\t\tselenium.type(\"//input[@name='roleIds']\", RuntimeVariables.replace(\"15\"));\n\t\tselenium.clickAt(\"//input[@value='false' and @name='sendEmail']\",\n\t\t\tRuntimeVariables.replace(\"Send Email False\"));\n\t\tselenium.clickAt(\"//input[@value='Invoke']\",\n\t\t\tRuntimeVariables.replace(\"Invoke\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//ul/li[contains(@class,'tab-active')]/span/a[contains(.,'Result')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Result\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul/li[contains(@class,'tab-active')]/span/a[contains(.,'Result')]\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//pre[@class='lfr-code-block']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\"//pre[@class='lfr-code-block']\",\n\t\t\t\t\"\\\"agreedToTermsOfUse\\\": false,\"));\n\t\tassertTrue(selenium.isPartialText(\"//pre[@class='lfr-code-block']\",\n\t\t\t\t\"\\\"companyId\\\": 1,\"));\n\t\tassertTrue(selenium.isPartialText(\"//pre[@class='lfr-code-block']\",\n\t\t\t\t\"\\\"facebookId\\\": 0,\"));\n\t\tassertTrue(selenium.isPartialText(\"//pre[@class='lfr-code-block']\",\n\t\t\t\t\"\\\"firstName\\\": \\\"userfn\\\",\"));\n\t\tassertTrue(selenium.isPartialText(\"//pre[@class='lfr-code-block']\",\n\t\t\t\t\"\\\"greeting\\\": \\\"Welcome userfn userln!\\\",\"));\n\t\tassertTrue(selenium.isPartialText(\"//pre[@class='lfr-code-block']\",\n\t\t\t\t\"\\\"lastName\\\": \\\"userln\\\",\"));\n\t\tassertTrue(selenium.isPartialText(\"//pre[@class='lfr-code-block']\",\n\t\t\t\t\"\\\"screenName\\\": \\\"usersn\\\",\"));\n\t}","commit_id":"073b49e97e015b3adf0a36f8fd8c517149f9a785","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AddUserJSON() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.open(\"/api/jsonws\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='serviceSearch']\",\n\t\t\tRuntimeVariables.replace(\"add-user\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xpath=(//li[@class='lfr-api-signature']/a)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"add-user\"),\n\t\t\tselenium.getText(\"xpath=(//li[@class='lfr-api-signature']/a)[2]\"));\n\t\tselenium.clickAt(\"xpath=(//li[@class='lfr-api-signature']/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"add-user\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@name='companyId']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@id='fieldFalse1']\",\n\t\t\tRuntimeVariables.replace(\"false\"));\n\t\tselenium.type(\"//input[@name='password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@name='password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@id='fieldFalse4']\",\n\t\t\tRuntimeVariables.replace(\"false\"));\n\t\tselenium.type(\"//input[@name='screenName']\",\n\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\tselenium.type(\"//input[@name='emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"userea@liferay.com\"));\n\t\tselenium.type(\"//input[@name='facebookId']\",\n\t\t\tRuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='locale']\",\n\t\t\tRuntimeVariables.replace(\"en_US\"));\n\t\tselenium.type(\"//input[@name='firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\tselenium.type(\"//input[@name='lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\tselenium.type(\"//input[@name='prefixId']\", RuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='suffixId']\", RuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"7\"));\n\t\tselenium.type(\"//input[@name='birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"20\"));\n\t\tselenium.type(\"//input[@name='birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"1888\"));\n\t\tselenium.type(\"//input[@name='roleIds']\", RuntimeVariables.replace(\"15\"));\n\t\tselenium.clickAt(\"//input[@id='fieldFalse24']\",\n\t\t\tRuntimeVariables.replace(\"False\"));\n\t\tselenium.clickAt(\"//input[@value='Invoke']\",\n\t\t\tRuntimeVariables.replace(\"Invoke\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"{\\n \\\"exception\\\": \\\"Public access denied\\\"\\n}\"),\n\t\t\tselenium.getText(\"//pre[@id='serviceOutput']\"));\n\t}","id":56946,"modified_method":"public void testGuest_AddUserJSON() throws Exception {\n\t\tselenium.open(\"/api/jsonws\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='serviceSearch']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='serviceSearch']\",\n\t\t\tRuntimeVariables.replace(\"add-user\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-panel-content']/ul/li/a[contains(@href,'add-user-26')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"add-user\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/ul/li/a[contains(@href,'add-user-26')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-panel-content']/ul/li/a[contains(@href,'add-user-26')]\",\n\t\t\tRuntimeVariables.replace(\"add-user\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@name='companyId']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@value='false' and @name='autoPassword']\",\n\t\t\tRuntimeVariables.replace(\"Auto Password False\"));\n\t\tselenium.type(\"//input[@name='password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@name='password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@name='screenName']\",\n\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\tselenium.clickAt(\"//input[@value='false' and @name='autoScreenName']\",\n\t\t\tRuntimeVariables.replace(\"Auto Screen Name False\"));\n\t\tselenium.type(\"//input[@name='emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"userea@liferay.com\"));\n\t\tselenium.type(\"//input[@name='facebookId']\",\n\t\t\tRuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='locale']\",\n\t\t\tRuntimeVariables.replace(\"en_US\"));\n\t\tselenium.type(\"//input[@name='firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\tselenium.type(\"//input[@name='lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\tselenium.type(\"//input[@name='prefixId']\", RuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='suffixId']\", RuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"7\"));\n\t\tselenium.type(\"//input[@name='birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"20\"));\n\t\tselenium.type(\"//input[@name='birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"1888\"));\n\t\tselenium.type(\"//input[@name='roleIds']\", RuntimeVariables.replace(\"15\"));\n\t\tselenium.clickAt(\"//input[@value='false' and @name='sendEmail']\",\n\t\t\tRuntimeVariables.replace(\"Send Email False\"));\n\t\tselenium.clickAt(\"//input[@value='Invoke']\",\n\t\t\tRuntimeVariables.replace(\"Invoke\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//ul/li[contains(@class,'tab-active')]/span/a[contains(.,'Result')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Result\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul/li[contains(@class,'tab-active')]/span/a[contains(.,'Result')]\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//pre[@class='lfr-code-block']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\"//pre[@class='lfr-code-block']\", \"{\"));\n\t\tassertTrue(selenium.isPartialText(\"//pre[@class='lfr-code-block']\",\n\t\t\t\t\"\\\"exception\\\": \\\"Public access denied\\\"\"));\n\t\tassertTrue(selenium.isPartialText(\"//pre[@class='lfr-code-block']\", \"}\"));\n\t}","commit_id":"073b49e97e015b3adf0a36f8fd8c517149f9a785","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser1_AddUserJSON() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.open(\"/api/jsonws\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='serviceSearch']\",\n\t\t\tRuntimeVariables.replace(\"add-user\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"xpath=(//li[@class='lfr-api-signature']/a)[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"add-user\"),\n\t\t\tselenium.getText(\"xpath=(//li[@class='lfr-api-signature']/a)[2]\"));\n\t\tselenium.clickAt(\"xpath=(//li[@class='lfr-api-signature']/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"add-user\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@name='companyId']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@id='fieldFalse1']\",\n\t\t\tRuntimeVariables.replace(\"false\"));\n\t\tselenium.type(\"//input[@name='password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@name='password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.clickAt(\"//input[@id='fieldFalse4']\",\n\t\t\tRuntimeVariables.replace(\"false\"));\n\t\tselenium.type(\"//input[@name='screenName']\",\n\t\t\tRuntimeVariables.replace(\"usersn2\"));\n\t\tselenium.type(\"//input[@name='emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"userea2@liferay.com\"));\n\t\tselenium.type(\"//input[@name='facebookId']\",\n\t\t\tRuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='locale']\",\n\t\t\tRuntimeVariables.replace(\"en_US\"));\n\t\tselenium.type(\"//input[@name='firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn2\"));\n\t\tselenium.type(\"//input[@name='lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln2\"));\n\t\tselenium.type(\"//input[@name='prefixId']\", RuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='suffixId']\", RuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"7\"));\n\t\tselenium.type(\"//input[@name='birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"20\"));\n\t\tselenium.type(\"//input[@name='birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"1888\"));\n\t\tselenium.type(\"//input[@name='roleIds']\", RuntimeVariables.replace(\"15\"));\n\t\tselenium.clickAt(\"//input[@id='fieldFalse24']\",\n\t\t\tRuntimeVariables.replace(\"False\"));\n\t\tselenium.clickAt(\"//input[@value='Invoke']\",\n\t\t\tRuntimeVariables.replace(\"Invoke\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"{\\n \\\"exception\\\": \\\"com.liferay.portal.security.auth.PrincipalException\\\"\\n}\"),\n\t\t\tselenium.getText(\"//pre[@id='serviceOutput']\"));\n\t}","id":56947,"modified_method":"public void testUser1_AddUserJSON() throws Exception {\n\t\tselenium.open(\"/api/jsonws\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='serviceSearch']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='serviceSearch']\",\n\t\t\tRuntimeVariables.replace(\"add-user\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-panel-content']/ul/li/a[contains(@href,'add-user-26')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"add-user\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-panel-content']/ul/li/a[contains(@href,'add-user-26')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-panel-content']/ul/li/a[contains(@href,'add-user-26')]\",\n\t\t\tRuntimeVariables.replace(\"add-user\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@name='companyId']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@value='false' and @name='autoPassword']\",\n\t\t\tRuntimeVariables.replace(\"Auto Password False\"));\n\t\tselenium.type(\"//input[@name='password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@name='password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.type(\"//input[@name='screenName']\",\n\t\t\tRuntimeVariables.replace(\"usersn2\"));\n\t\tselenium.clickAt(\"//input[@value='false' and @name='autoScreenName']\",\n\t\t\tRuntimeVariables.replace(\"Auto Screen Name False\"));\n\t\tselenium.type(\"//input[@name='emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"userea2@liferay.com\"));\n\t\tselenium.type(\"//input[@name='facebookId']\",\n\t\t\tRuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='locale']\",\n\t\t\tRuntimeVariables.replace(\"en_US\"));\n\t\tselenium.type(\"//input[@name='firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn2\"));\n\t\tselenium.type(\"//input[@name='lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln2\"));\n\t\tselenium.type(\"//input[@name='prefixId']\", RuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='suffixId']\", RuntimeVariables.replace(\"0\"));\n\t\tselenium.type(\"//input[@name='birthdayMonth']\",\n\t\t\tRuntimeVariables.replace(\"7\"));\n\t\tselenium.type(\"//input[@name='birthdayDay']\",\n\t\t\tRuntimeVariables.replace(\"20\"));\n\t\tselenium.type(\"//input[@name='birthdayYear']\",\n\t\t\tRuntimeVariables.replace(\"1888\"));\n\t\tselenium.type(\"//input[@name='roleIds']\", RuntimeVariables.replace(\"15\"));\n\t\tselenium.clickAt(\"//input[@value='false' and @name='sendEmail']\",\n\t\t\tRuntimeVariables.replace(\"Send Email False\"));\n\t\tselenium.clickAt(\"//input[@value='Invoke']\",\n\t\t\tRuntimeVariables.replace(\"Invoke\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//ul/li[contains(@class,'tab-active')]/span/a[contains(.,'Result')]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Result\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul/li[contains(@class,'tab-active')]/span/a[contains(.,'Result')]\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//pre[@class='lfr-code-block']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"{\\n \\\"exception\\\": \\\"com.liferay.portal.security.auth.PrincipalException\\\"\\n}\"),\n\t\t\tselenium.getText(\"//pre[@class='lfr-code-block']\"));\n\t}","commit_id":"073b49e97e015b3adf0a36f8fd8c517149f9a785","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@name='_125_keywords']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userfn\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userln\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\t\t\tselenium.getText(\"//td[4]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":56948,"modified_method":"public void testViewUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Search All Users\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search All Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@name='_125_keywords']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userfn\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userln\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"userfn\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/h1/span\"));\n\t\t\t\tassertEquals(\"usersn\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\t\t\tassertEquals(\"userea@liferay.com\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\t\t\tassertEquals(\"userfn\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\t\t\tassertEquals(\"userln\",\n\t\t\t\t\tselenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\t\t\tassertEquals(\"1888\",\n\t\t\t\t\tselenium.getValue(\"//select[@id='_125_birthdayYear']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"073b49e97e015b3adf0a36f8fd8c517149f9a785","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertChecked1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_130_generalLink']\",\n\t\t\t\t\"General\"));\n\t\tselenium.clickAt(\"//a[@id='_130_generalLink']\",\n\t\t\tRuntimeVariables.replace(\"General\"));\n\t\tselenium.check(\n\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\"));\n\t}","id":56949,"modified_method":"public void testAssertChecked1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\");\n\t\tselenium.check(\n\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\"));\n\t}","commit_id":"0c8bda0191daa7794632a3f6088d39385b751e65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertChecked2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_130_generalLink']\",\n\t\t\t\t\"General\"));\n\t\tselenium.clickAt(\"//a[@id='_130_generalLink']\",\n\t\t\tRuntimeVariables.replace(\"General\"));\n\t\tselenium.uncheck(\n\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\"));\n\t}","id":56950,"modified_method":"public void testAssertChecked2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\"));\n\t}","commit_id":"0c8bda0191daa7794632a3f6088d39385b751e65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertNotChecked1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_130_generalLink']\",\n\t\t\t\t\"General\"));\n\t\tselenium.clickAt(\"//a[@id='_130_generalLink']\",\n\t\t\tRuntimeVariables.replace(\"General\"));\n\t\tselenium.uncheck(\n\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\"));\n\t}","id":56951,"modified_method":"public void testAssertNotChecked1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\"));\n\t}","commit_id":"0c8bda0191daa7794632a3f6088d39385b751e65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertNotChecked2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_130_generalLink']\",\n\t\t\t\t\"General\"));\n\t\tselenium.clickAt(\"//a[@id='_130_generalLink']\",\n\t\t\tRuntimeVariables.replace(\"General\"));\n\t\tselenium.check(\n\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\"));\n\t}","id":56952,"modified_method":"public void testAssertNotChecked2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\");\n\t\tselenium.check(\n\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_cdn.dynamic.resources.enabledCheckbox']\"));\n\t}","commit_id":"0c8bda0191daa7794632a3f6088d39385b751e65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertNotValue1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_130_generalLink']\",\n\t\t\t\t\"General\"));\n\t\tselenium.clickAt(\"//a[@id='_130_generalLink']\",\n\t\t\tRuntimeVariables.replace(\"General\"));\n\t\tassertNotEquals(\"Catherine\", selenium.getValue(\"//input[@value='Save']\"));\n\t}","id":56953,"modified_method":"public void testAssertNotValue1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertNotEquals(\"Catherine\", selenium.getValue(\"//input[@value='Save']\"));\n\t}","commit_id":"0c8bda0191daa7794632a3f6088d39385b751e65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertNotValue2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":56954,"modified_method":"public void testAssertNotValue2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertNotEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t}","commit_id":"0c8bda0191daa7794632a3f6088d39385b751e65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertNotVisible1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//a[@id='_130_authenticationLink']\", \"Authentication\"));\n\t\tselenium.clickAt(\"//a[@id='_130_authenticationLink']\",\n\t\t\tRuntimeVariables.replace(\"Authentication\"));\n\t\tassertFalse(selenium.isVisible(\"//input[@id='_130_addButton']\"));\n\t}","id":56955,"modified_method":"public void testAssertNotVisible1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@id='_130_addButton']\");\n\t\tassertFalse(selenium.isVisible(\"//input[@id='_130_addButton']\"));\n\t}","commit_id":"0c8bda0191daa7794632a3f6088d39385b751e65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertValue1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_130_generalLink']\",\n\t\t\t\t\"General\"));\n\t\tselenium.clickAt(\"//a[@id='_130_generalLink']\",\n\t\t\tRuntimeVariables.replace(\"General\"));\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t}","id":56956,"modified_method":"public void testAssertValue1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"Save\", selenium.getValue(\"//input[@value='Save']\"));\n\t}","commit_id":"0c8bda0191daa7794632a3f6088d39385b751e65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertValue2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":56957,"modified_method":"public void testAssertValue2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"Catherine\", selenium.getValue(\"//input[@value='Save']\"));\n\t}","commit_id":"0c8bda0191daa7794632a3f6088d39385b751e65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertVisible2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//a[@id='_130_authenticationLink']\", \"Authentication\"));\n\t\tselenium.clickAt(\"//a[@id='_130_authenticationLink']\",\n\t\t\tRuntimeVariables.replace(\"Authentication\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_130_addButton']\"));\n\t}","id":56958,"modified_method":"public void testAssertVisible2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//input[@id='_130_addButton']\");\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_130_addButton']\"));\n\t}","commit_id":"0c8bda0191daa7794632a3f6088d39385b751e65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Bookmark\"));\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.type(\"_28_comments\",\n\t\t\tRuntimeVariables.replace(\"This is a test bookmark!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t}","id":56959,"modified_method":"public void testAddEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Bookmark\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[2]/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Bookmark\"));\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.type(\"_28_comments\",\n\t\t\tRuntimeVariables.replace(\"This is a test bookmark!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Subfolder']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Subfolder']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test folder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test folder!\"));\n\t}","id":56960,"modified_method":"public void testAddFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Folder\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[2]/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Folder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test folder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test folder!\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddIncorrectURL() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_28_url\", RuntimeVariables.replace(\"www.movies.com\"));\n\t\tselenium.type(\"_28_url\", RuntimeVariables.replace(\"www.movies.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t}","id":56961,"modified_method":"public void testAddIncorrectURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Bookmark\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[2]/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_url\", RuntimeVariables.replace(\"www.movies.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t}","id":56962,"modified_method":"public void testAddNullEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Bookmark\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[2]/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Subfolder']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t}","id":56963,"modified_method":"public void testAddNullFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Folder\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[2]/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[2]/div/div[2]/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullSubfolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Subfolder']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t}","id":56964,"modified_method":"public void testAddNullSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Subfolder\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[2]/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullTitle() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_28_url\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.movies.com\"));\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.movies.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t\tselenium.clickAt(\"//input[@value='Cancel']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.movies.com\"));\n\t}","id":56965,"modified_method":"public void testAddNullTitle() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Bookmark\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[2]/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.movies.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully. \"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.movies.com\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullURL() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_28_name\",\n\t\t\tRuntimeVariables.replace(\"Null Entry Test\"));\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Null Entry Test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t}","id":56966,"modified_method":"public void testAddNullURL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Bookmark\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[2]/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Null Entry Test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid URL.\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Bookmark 2\"));\n\t\tselenium.type(\"_28_url\", RuntimeVariables.replace(\"http://www.digg.com\"));\n\t\tselenium.type(\"_28_comments\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test bookmark that will be deleted!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":56967,"modified_method":"public void testAddSecondEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Bookmark\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[2]/ul/li[4]/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/ul/li[4]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Bookmark 2\"));\n\t\tselenium.type(\"_28_url\", RuntimeVariables.replace(\"http://www.digg.com\"));\n\t\tselenium.type(\"_28_comments\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test bookmark that will be deleted!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSubfolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Add Subfolder']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test subfolder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test subfolder!\"));\n\t}","id":56968,"modified_method":"public void testAddSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Subfolder\"),\n\t\t\tselenium.getText(\"//div[2]/div/div[2]/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[2]/div/div[2]/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Test Subfolder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test subfolder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test subfolder!\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertEntries() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Entries\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[5]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t\tselenium.clickAt(\"link=Recent Entries\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t}","id":56969,"modified_method":"public void testAssertEntries() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=My Entries\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t\tselenium.clickAt(\"link=Recent Entries\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.liferay.com\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Folder\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t}","id":56970,"modified_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(ControlPanelTest.class);\n\t\ttestSuite.addTestSuite(AddFolderTest.class);\n\t\ttestSuite.addTestSuite(AddSubfolderTest.class);\n\t\ttestSuite.addTestSuite(AddEntryTest.class);\n\t\ttestSuite.addTestSuite(AddSecondEntryTest.class);\n\t\ttestSuite.addTestSuite(AssertEntriesTest.class);\n\t\ttestSuite.addTestSuite(SearchEntriesTest.class);\n\t\ttestSuite.addTestSuite(SearchNullEntriesTest.class);\n\t\ttestSuite.addTestSuite(MoveEntryTest.class);\n\t\ttestSuite.addTestSuite(DeleteEntryTest.class);\n\t\ttestSuite.addTestSuite(EditFolderTest.class);\n\t\ttestSuite.addTestSuite(EditSubfolderTest.class);\n\t\ttestSuite.addTestSuite(EditEntryTest.class);\n\t\ttestSuite.addTestSuite(CombineToParentFolderTest.class);\n\t\ttestSuite.addTestSuite(AddNullFolderTest.class);\n\t\ttestSuite.addTestSuite(AddNullSubfolderTest.class);\n\t\ttestSuite.addTestSuite(AddNullEntryTest.class);\n\t\ttestSuite.addTestSuite(AddNullURLTest.class);\n\t\t//testSuite.addTestSuite(AddNullTitleTest.class);\n\t\ttestSuite.addTestSuite(AddIncorrectURLTest.class);\n\t\ttestSuite.addTestSuite(DeleteAllTest.class);\n\t\ttestSuite.addTestSuite(ImportLARTest.class);\n\t\ttestSuite.addTestSuite(AssertImportLARTest.class);\n\t\ttestSuite.addTestSuite(TearDownTest.class);\n\t\ttestSuite.addTestSuite(EndControlPanelTest.class);\n\n\t\treturn testSuite;\n\t}","id":56971,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddFolderTest.class);\n\t\ttestSuite.addTestSuite(AddSubfolderTest.class);\n\t\ttestSuite.addTestSuite(AddEntryTest.class);\n\t\ttestSuite.addTestSuite(AddSecondEntryTest.class);\n\t\ttestSuite.addTestSuite(AssertEntriesTest.class);\n\t\ttestSuite.addTestSuite(SearchEntriesTest.class);\n\t\ttestSuite.addTestSuite(SearchNullEntriesTest.class);\n\t\ttestSuite.addTestSuite(MoveEntryTest.class);\n\t\ttestSuite.addTestSuite(DeleteEntryTest.class);\n\t\ttestSuite.addTestSuite(EditFolderTest.class);\n\t\ttestSuite.addTestSuite(EditSubfolderTest.class);\n\t\ttestSuite.addTestSuite(EditEntryTest.class);\n\t\ttestSuite.addTestSuite(CombineToParentFolderTest.class);\n\t\ttestSuite.addTestSuite(AddNullFolderTest.class);\n\t\ttestSuite.addTestSuite(AddNullSubfolderTest.class);\n\t\ttestSuite.addTestSuite(AddNullEntryTest.class);\n\t\ttestSuite.addTestSuite(AddNullURLTest.class);\n\t\ttestSuite.addTestSuite(AddNullTitleTest.class);\n\t\ttestSuite.addTestSuite(AddIncorrectURLTest.class);\n\t\ttestSuite.addTestSuite(TearDownBookmarkFolderCPTest.class);\n\t\ttestSuite.addTestSuite(ImportLARTest.class);\n\t\ttestSuite.addTestSuite(AssertImportLARTest.class);\n\t\ttestSuite.addTestSuite(TearDownBookmarkFolderCPTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCombineToParentFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"_28_mergeWithParentFolderCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edited Test SubFolder\"));\n\t}","id":56972,"modified_method":"public void testCombineToParentFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tselenium.clickAt(\"//td[4]/ul/li/strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_28_mergeWithParentFolderCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edited Test SubFolder\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//td[6]/ul/li/strong\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t}","id":56973,"modified_method":"public void testDeleteEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//td[5]/ul/li/strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Bookmark\"));\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.narutofan.com\"));\n\t\tselenium.type(\"_28_comments\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test bookmark!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t}","id":56974,"modified_method":"public void testEditEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Subfolder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//td[5]/ul/li/strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Bookmark\"));\n\t\tselenium.type(\"_28_url\",\n\t\t\tRuntimeVariables.replace(\"http://www.narutofan.com\"));\n\t\tselenium.type(\"_28_comments\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test bookmark!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.narutofan.com\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test folder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is an edited test folder!\"));\n\t}","id":56975,"modified_method":"public void testEditFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//td[4]/ul/li/strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_name\", RuntimeVariables.replace(\"Edited Test Folder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test folder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Folder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is an edited test folder!\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditSubfolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//td[4]/ul/li/strong/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Subfolder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test subfolder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is an edited test subfolder!\"));\n\t}","id":56976,"modified_method":"public void testEditSubfolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//a/strong\", \"Test Folder\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//td[4]/ul/li/strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Subfolder\"));\n\t\tselenium.type(\"_28_description\",\n\t\t\tRuntimeVariables.replace(\"This is an edited test subfolder!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Test Subfolder\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is an edited test subfolder!\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Export / Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\bookmarks\\\\dependencies\\\\Bookmarks-Selenium.portlet.lar\"));\n\t\tselenium.clickAt(\"_86_DELETE_PORTLET_DATACheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"_86_PORTLET_DATACheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":56977,"modified_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Export / Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\bookmarks\\\\dependencies\\\\Bookmarks-Selenium.portlet.lar\"));\n\t\tselenium.clickAt(\"_86_DELETE_PORTLET_DATACheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"_86_PORTLET_DATACheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Folders\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[6]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//b\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//tr[4]/td[6]/ul/li/strong/span\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[4]/ul/li[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"folder\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Home\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Home\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//li[8]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tselenium.clickAt(\"link=Test Folder\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//li[7]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t}","id":56978,"modified_method":"public void testMoveEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Subfolder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//tr[4]/td[5]/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Subfolder\"),\n\t\t\tselenium.getText(\"_28_folderName\"));\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"folder\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Home\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks Home\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Test Folder\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"_28_folderName\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"_28_folderName\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Folder\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=http://www.digg.com\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchEntries() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_28_keywords1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_keywords1\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.clickAt(\"//input[@value='Search Folders']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[5]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t}","id":56979,"modified_method":"public void testSearchEntries() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_keywords1\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchNullEntries() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_28_keywords1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_28_keywords1\", RuntimeVariables.replace(\"Test1\"));\n\t\tselenium.clickAt(\"//input[@value='Search Folders']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[5]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t}","id":56980,"modified_method":"public void testSearchNullEntries() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Bookmarks\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_keywords1\", RuntimeVariables.replace(\"Test1\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Bookmark\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Bookmark 2\"));\n\t}","commit_id":"3c4d262f2b9df577e93c1eb80b487e8cce94c644","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddAsteriskPasswordPolicyName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_129_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_name\", RuntimeVariables.replace(\"Test*test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is an asterisk password policy test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":56981,"modified_method":"public void testAddAsteriskPasswordPolicyName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\",\n\t\t\tRuntimeVariables.replace(\"Password Policies\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_129_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_129_name']\",\n\t\t\tRuntimeVariables.replace(\"Test*test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_129_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is an asterisk password policy test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"ce6cd33008cba8bb0a369b03f807d30d73884d85","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddCommaPasswordPolicyName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_129_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_name\", RuntimeVariables.replace(\"Test,test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_description\",\n\t\t\tRuntimeVariables.replace(\"This is a comma password policy test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":56982,"modified_method":"public void testAddCommaPasswordPolicyName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\",\n\t\t\tRuntimeVariables.replace(\"Password Policies\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_129_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_129_name']\",\n\t\t\tRuntimeVariables.replace(\"Test,test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_129_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a comma password policy test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"ce6cd33008cba8bb0a369b03f807d30d73884d85","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDuplicatePasswordPolicyName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_129_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_name\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a duplicate password policy test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a unique name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":56983,"modified_method":"public void testAddDuplicatePasswordPolicyName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\",\n\t\t\tRuntimeVariables.replace(\"Password Policies\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_129_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_129_name']\",\n\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_129_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a duplicate password policy test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a unique name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"ce6cd33008cba8bb0a369b03f807d30d73884d85","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullPasswordPolicyName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_129_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_name\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_description\",\n\t\t\tRuntimeVariables.replace(\"This is a null password policy test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":56984,"modified_method":"public void testAddNullPasswordPolicyName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\",\n\t\t\tRuntimeVariables.replace(\"Password Policies\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_129_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_129_name']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_129_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a null password policy test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"ce6cd33008cba8bb0a369b03f807d30d73884d85","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNumberPasswordPolicyName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_129_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_name\", RuntimeVariables.replace(\"11111\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_description\",\n\t\t\tRuntimeVariables.replace(\"This is a number password policies test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":56985,"modified_method":"public void testAddNumberPasswordPolicyName() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\",\n\t\t\tRuntimeVariables.replace(\"Password Policies\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_129_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_129_name']\",\n\t\t\tRuntimeVariables.replace(\"11111\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_129_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a number password policies test.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"ce6cd33008cba8bb0a369b03f807d30d73884d85","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPasswordPolicies() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_129_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_name\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test password policy!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_129_changeableCheckbox\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_129_changeRequiredCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_129_changeRequiredCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.select(\"_129_minAge\", RuntimeVariables.replace(\"label=1 Week\"));\n\t\tselenium.clickAt(\"_129_checkSyntaxCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_129_allowDictionaryWordsCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_129_allowDictionaryWordsCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"_129_minLength\", RuntimeVariables.replace(\"5\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_129_historyCheckbox\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_129_historyCount\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_129_historyCount\", RuntimeVariables.replace(\"label=4\"));\n\t\tselenium.clickAt(\"_129_expireableCheckbox\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_129_maxAge\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_129_maxAge\", RuntimeVariables.replace(\"label=4 Weeks\"));\n\t\tselenium.select(\"_129_warningTime\",\n\t\t\tRuntimeVariables.replace(\"label=2 Days\"));\n\t\tselenium.type(\"_129_graceLimit\", RuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_129_lockoutCheckbox\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_129_maxFailure\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_maxFailure\", RuntimeVariables.replace(\"3\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_129_resetFailureCount\",\n\t\t\tRuntimeVariables.replace(\"label=10 Minutes\"));\n\t\tselenium.select(\"_129_lockoutDuration\",\n\t\t\tRuntimeVariables.replace(\"label=5 Minutes\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=This is a test password policy!\"));\n\t}","id":56986,"modified_method":"public void testAddPasswordPolicies() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\",\n\t\t\tRuntimeVariables.replace(\"Password Policies\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_129_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_129_name']\",\n\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_129_description']\",\n\t\t\tRuntimeVariables.replace(\"This is a test password policy!\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_129_changeableCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Changeable Checkbox\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@id='_129_changeRequiredCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_129_changeRequiredCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Change Required Checkbox\"));\n\t\tselenium.select(\"//select[@id='_129_minAge']\",\n\t\t\tRuntimeVariables.replace(\"label=1 Week\"));\n\t\tselenium.clickAt(\"//input[@id='_129_checkSyntaxCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Syntax Checking Enabled Checkbox\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@id='_129_allowDictionaryWordsCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_129_allowDictionaryWordsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Allow Dictionary Words Checkbox\"));\n\t\tselenium.type(\"//input[@id='_129_minLength']\",\n\t\t\tRuntimeVariables.replace(\"5\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_129_historyCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"History Enabled Checkbox\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//select[@id='_129_historyCount']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_129_historyCount']\",\n\t\t\tRuntimeVariables.replace(\"label=4\"));\n\t\tselenium.clickAt(\"//input[@id='_129_expireableCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Expiration Enabled Checkbox\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//select[@id='_129_maxAge']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_129_maxAge']\",\n\t\t\tRuntimeVariables.replace(\"label=4 Weeks\"));\n\t\tselenium.select(\"//select[@id='_129_warningTime']\",\n\t\t\tRuntimeVariables.replace(\"label=2 Days\"));\n\t\tselenium.type(\"//input[@id='_129_graceLimit']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_129_lockoutCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Lockout Enabled Checkbox\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@id='_129_maxFailure']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_129_maxFailure']\",\n\t\t\tRuntimeVariables.replace(\"3\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_129_resetFailureCount']\",\n\t\t\tRuntimeVariables.replace(\"label=10 Minutes\"));\n\t\tselenium.select(\"//select[@id='_129_lockoutDuration']\",\n\t\t\tRuntimeVariables.replace(\"label=5 Minutes\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=This is a test password policy!\"));\n\t}","commit_id":"ce6cd33008cba8bb0a369b03f807d30d73884d85","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTemporaryPasswordPolicies() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_129_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_name\",\n\t\t\tRuntimeVariables.replace(\"Temporary Password Policies\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":56987,"modified_method":"public void testAddTemporaryPasswordPolicies() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\",\n\t\t\tRuntimeVariables.replace(\"Password Policies\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_129_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_129_name']\",\n\t\t\tRuntimeVariables.replace(\"Temporary Password Policies\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"ce6cd33008cba8bb0a369b03f807d30d73884d85","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteTemporaryPasswordPolicies() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_129_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_129_name\", RuntimeVariables.replace(\"Temporary\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Temporary Password Policies\"));\n\t}","id":56988,"modified_method":"public void testDeleteTemporaryPasswordPolicies() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Password Policies\",\n\t\t\tRuntimeVariables.replace(\"Password Policies\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_129_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_129_name']\",\n\t\t\tRuntimeVariables.replace(\"Temporary\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[3]/span/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[3]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Temporary Password Policies\"));\n\t}","commit_id":"ce6cd33008cba8bb0a369b03f807d30d73884d85","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPasswordPolicy() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Password Policies\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean defaultPasswordPolicyFirst1 = selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\t\t\"Default Password Policy\");\n\n\t\t\t\tif (defaultPasswordPolicyFirst1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean defaultPasswordPolicyFirst2 = selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\t\t\"Default Password Policy\");\n\n\t\t\t\tif (defaultPasswordPolicyFirst2) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean defaultPasswordPolicyFirst3 = selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\t\t\"Default Password Policy\");\n\n\t\t\t\tif (defaultPasswordPolicyFirst3) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean defaultPasswordPolicyFirst4 = selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\t\t\"Default Password Policy\");\n\n\t\t\t\tif (defaultPasswordPolicyFirst4) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean defaultPasswordPolicyFirst5 = selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\t\t\"Default Password Policy\");\n\n\t\t\t\tif (defaultPasswordPolicyFirst5) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean passwordPolicy1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[4]/td[3]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!passwordPolicy1Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean passwordPolicy2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[4]/td[3]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!passwordPolicy2Present) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean passwordPolicy3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[4]/td[3]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!passwordPolicy3Present) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean passwordPolicy4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[4]/td[3]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!passwordPolicy4Present) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean passwordPolicy5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[4]/td[3]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!passwordPolicy5Present) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 11:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":56989,"modified_method":"public void testTearDownPasswordPolicy() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Password Policies\",\n\t\t\t\t\tRuntimeVariables.replace(\"Password Policies\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean defaultPasswordPolicyFirst1 = selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\t\t\"Default Password Policy\");\n\n\t\t\t\tif (defaultPasswordPolicyFirst1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean defaultPasswordPolicyFirst2 = selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\t\t\"Default Password Policy\");\n\n\t\t\t\tif (defaultPasswordPolicyFirst2) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean defaultPasswordPolicyFirst3 = selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\t\t\"Default Password Policy\");\n\n\t\t\t\tif (defaultPasswordPolicyFirst3) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean defaultPasswordPolicyFirst4 = selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\t\t\"Default Password Policy\");\n\n\t\t\t\tif (defaultPasswordPolicyFirst4) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean defaultPasswordPolicyFirst5 = selenium.isPartialText(\"//td[1]/a\",\n\t\t\t\t\t\t\"Default Password Policy\");\n\n\t\t\t\tif (defaultPasswordPolicyFirst5) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean passwordPolicy1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[4]/td[3]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!passwordPolicy1Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean passwordPolicy2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[4]/td[3]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!passwordPolicy2Present) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean passwordPolicy3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[4]/td[3]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!passwordPolicy3Present) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean passwordPolicy4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[4]/td[3]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!passwordPolicy4Present) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean passwordPolicy5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[4]/td[3]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!passwordPolicy5Present) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[3]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 11:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"ce6cd33008cba8bb0a369b03f807d30d73884d85","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageWCD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Test Page\"));\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":56990,"modified_method":"public void testAddPageWCD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Test Page\"));\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"2b30da2f0d92d118e754cfbb25209681c2caa41b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageWCL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":56991,"modified_method":"public void testAddPageWCL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"2b30da2f0d92d118e754cfbb25209681c2caa41b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageWCS() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content Search Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":56992,"modified_method":"public void testAddPageWCS() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content Search Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"2b30da2f0d92d118e754cfbb25209681c2caa41b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddScopeCommunityPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Communities\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_134_name\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Scope Community\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Manage Pages\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Manage Pages\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_134_name_en_US\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_134_name_en_US\",\n\t\t\t\t\tRuntimeVariables.replace(\"Scope Test Page\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean pageVisible = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li/div/div[3]/a\");\n\n\t\t\t\tif (pageVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li/div/div[1]\", RuntimeVariables.replace(\"\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//li/ul/li/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Scope Test Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li/div/div[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":56993,"modified_method":"public void testAddScopeCommunityPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Communities\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_134_name\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Scope Community\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//strong/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Public Pages\"),\n\t\t\t\t\tselenium.getText(\"//li[1]/span/span/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Pages\"),\n\t\t\t\t\tselenium.getText(\"//ul[2]/li[1]/span/span/a\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Scope Community\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_134_name_en_US\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_134_name_en_US\",\n\t\t\t\t\tRuntimeVariables.replace(\"Scope Test Page\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\t\tboolean publicPagePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li/div/div[3]/a\");\n\n\t\t\t\tif (publicPagePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li/div/div[1]\", RuntimeVariables.replace(\"\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(\"//li/div/div[1]\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//li/ul/li/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertTrue(selenium.isVisible(\"//li/ul/li/div/div[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Scope Test Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li/div/div[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"2b30da2f0d92d118e754cfbb25209681c2caa41b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPageTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPortletTest.class);\n\t\ttestSuite.addTestSuite(SA_AddGeneralAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_AddCAAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_AddMemberAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_AddGuestAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(CA_LoginTest.class);\n\t\ttestSuite.addTestSuite(CA_AssertViewTest.class);\n\t\ttestSuite.addTestSuite(CA_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(CA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Member_LoginTest.class);\n\t\ttestSuite.addTestSuite(Member_AssertViewTest.class);\n\t\ttestSuite.addTestSuite(Member_DismissAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(Member_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(Member_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertViewTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(SA_TearDownTest.class);\n\n\t\treturn testSuite;\n\t}","id":56994,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPageTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPortletTest.class);\n\t\ttestSuite.addTestSuite(SA_AddGeneralAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_AddCAAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_AddMemberAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_AddGuestAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(CA_LoginTest.class);\n\t\ttestSuite.addTestSuite(CA_AssertViewTest.class);\n\t\ttestSuite.addTestSuite(CA_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(CA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Member_LoginTest.class);\n\t\ttestSuite.addTestSuite(Member_AssertViewTest.class);\n\t\ttestSuite.addTestSuite(Member_DismissAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(Member_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(Member_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertViewTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(SA_TearDownTest.class);\n\t\ttestSuite.addTestSuite(SA_LogoutTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"2b30da2f0d92d118e754cfbb25209681c2caa41b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AddEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"Permissions Blogs Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_33_editor']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a permissions blogs test entry\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"_33_saveButton\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Permissions Blogs Test Entry\"));\n\t}","id":56995,"modified_method":"public void testCA_AddEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"Permissions Blogs Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_33_editor']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a permissions blogs test entry\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Permissions Blogs Test Entry\"));\n\t}","commit_id":"2b30da2f0d92d118e754cfbb25209681c2caa41b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AddMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Permissions Test 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Test Thread 1\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"Test Thread Message 1\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Thread 1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Thread 1\"),\n\t\t\tselenium.getText(\"//li[1]/span/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Thread 1\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Thread Message 1\"),\n\t\t\tselenium.getText(\"//td[2]/div[2]\"));\n\t}","id":56996,"modified_method":"public void testCA_AddMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Permissions Test 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Test Thread 1\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"Test Thread Message 1\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Thread 1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Thread 1\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Thread 1\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Thread Message 1\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"2b30da2f0d92d118e754cfbb25209681c2caa41b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":56997,"modified_method":"public void testCA_AddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"2b30da2f0d92d118e754cfbb25209681c2caa41b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AssertActions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Permissions Test 1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Category']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tselenium.clickAt(\"//td[5]/ul/li/strong/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tselenium.clickAt(\"//td[5]/ul/li/strong/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"link=Permissions\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Edit Permissions for Message Boards Category: Permissions Test 1\"),\n\t\t\tselenium.getText(\"//form/div[1]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Save']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"RSS\"),\n\t\t\tselenium.getText(\"//div[2]/div/span/a/span[1]\"));\n\t\tselenium.clickAt(\"link=Banned Users\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"There are no banned users.\"));\n\t\tselenium.clickAt(\"link=Message Boards Home\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Permissions Test 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Subscribe\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Move Thread\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.clickAt(\"link=Test Thread 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Reply\"));\n\t}","id":56998,"modified_method":"public void testCA_AssertActions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Permissions Test 1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Category']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tselenium.clickAt(\"//td[5]/ul/li/strong/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tselenium.clickAt(\"//td[5]/ul/li/strong/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"link=Permissions\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions Test 1\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Save']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"RSS\"),\n\t\t\tselenium.getText(\"//div[2]/div/span/a/span[1]\"));\n\t\tselenium.clickAt(\"link=Banned Users\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"There are no banned users.\"));\n\t\tselenium.clickAt(\"link=Message Boards Home\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Permissions Test 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Subscribe\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Move Thread\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.clickAt(\"link=Test Thread 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Reply\"));\n\t}","commit_id":"2b30da2f0d92d118e754cfbb25209681c2caa41b","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefineCARoles() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Roles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//tr[4]/td[4]/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//tr[4]/td[4]/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Community Admin\"),\n\t\t\tselenium.getText(\"//h3[1]\"));\n\t\tassertTrue(selenium.isPartialText(\"//label\", \"Add Permissions\"));\n\t}","id":56999,"modified_method":"public void testDefineCARoles() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Roles\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//tr[4]/td[4]/ul/li/strong/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//tr[4]/td[4]/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Community Admin\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isPartialText(\"//label\", \"Add Permissions\"));\n\t}","commit_id":"2b30da2f0d92d118e754cfbb25209681c2caa41b","url":"https://github.com/liferay/liferay-portal"}]