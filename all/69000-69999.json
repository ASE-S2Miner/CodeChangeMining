[{"original_method":"void mergeAvailableLoadSets(ValueNumberFrame other, ValueNumberFactory factory, MergeTree mergeTree) {\n        if (REDUNDANT_LOAD_ELIMINATION) {\n            // Merge available load sets.\n            // Only loads that are available in both frames\n            // remain available. All others are discarded.\n            String s = \"\";\n            if (RLE_DEBUG) {\n                s = \"Merging \" + this.availableLoadMapAsString() + \" and \" + other.availableLoadMapAsString();\n            }\n            boolean changed = false;\n            if (other.isBottom()) {\n                changed = !this.getAvailableLoadMap().isEmpty();\n                setAvailableLoadMap(Collections.<AvailableLoad, ValueNumber[]> emptyMap());\n            } else if (!other.isTop()) {\n                for (Map.Entry<AvailableLoad, ValueNumber[]> e : getUpdateableAvailableLoadMap().entrySet()) {\n                    AvailableLoad load = e.getKey();\n                    ValueNumber[] myVN = e.getValue();\n                    ValueNumber[] otherVN = other.getAvailableLoadMap().get(load);\n                    if (false && this.phiNodeForLoads && myVN != null && myVN.length == 1\n                            && myVN[0].hasFlag(ValueNumber.PHI_NODE))\n                        continue;\n                    if (!Arrays.equals(myVN, otherVN)) {\n\n                        ValueNumber phi = getMergedLoads().get(load);\n                        if (phi == null) {\n                            int flags = ValueNumber.PHI_NODE;\n                            for (ValueNumber vn : myVN) {\n                                flags |= vn.getFlags();\n                            }\n                            if (otherVN != null)\n                                for (ValueNumber vn : otherVN) {\n                                    flags |= vn.getFlags();\n                                }\n\n                            phi = factory.createFreshValue(flags);\n\n                            getUpdateableMergedLoads().put(load, phi);\n                            for (ValueNumber vn : myVN) {\n                                mergeTree.mapInputToOutput(vn, phi);\n                            }\n                            if (otherVN != null)\n                                for (ValueNumber vn : otherVN) {\n                                    mergeTree.mapInputToOutput(vn, phi);\n                                }\n\n                            if (RLE_DEBUG)\n                                System.out.println(\"Creating phi node \" + phi + \" for \" + load + \" from \" + Arrays.toString(myVN)\n                                        + \" x \" + Arrays.toString(otherVN) + \" in \" + System.identityHashCode(this));\n                            changed = true;\n                            e.setValue(new ValueNumber[] { phi });\n                        } else {\n                            if (RLE_DEBUG)\n                                System.out.println(\"Reusing phi node : \" + phi + \" for \" + load + \" from \"\n                                        + Arrays.toString(myVN) + \" x \" + Arrays.toString(otherVN) + \" in \"\n                                        + System.identityHashCode(this));\n                            if (myVN.length != 1 || !myVN[0].equals(phi))\n                                e.setValue(new ValueNumber[] { phi });\n                        }\n\n                    }\n\n                }\n            }\n            Map<ValueNumber, AvailableLoad> previouslyKnownAsOther = other.getPreviouslyKnownAs();\n            if (getPreviouslyKnownAs() != previouslyKnownAsOther && previouslyKnownAsOther.size() != 0) {\n                if (getPreviouslyKnownAs().size() == 0)\n                    assignPreviouslyKnownAs(other);\n                else\n                    getUpdateablePreviouslyKnownAs().putAll(previouslyKnownAsOther);\n            }\n            if (changed)\n                this.phiNodeForLoads = true;\n            if (changed && RLE_DEBUG) {\n                System.out.println(s);\n                System.out.println(\"  Result is \" + this.availableLoadMapAsString());\n                System.out.println(\" Set phi for \" + System.identityHashCode(this));\n            }\n        }\n    }","id":69000,"modified_method":"void mergeAvailableLoadSets(ValueNumberFrame other, ValueNumberFactory factory, MergeTree mergeTree) {\n        if (REDUNDANT_LOAD_ELIMINATION) {\n            // Merge available load sets.\n            // Only loads that are available in both frames\n            // remain available. All others are discarded.\n            String s = \"\";\n            if (RLE_DEBUG) {\n                s = \"Merging \" + this.availableLoadMapAsString() + \" and \" + other.availableLoadMapAsString();\n            }\n            boolean changed = false;\n            if (other.isBottom()) {\n                changed = !this.getAvailableLoadMap().isEmpty();\n                setAvailableLoadMap(Collections.<AvailableLoad, ValueNumber[]> emptyMap());\n            } else if (!other.isTop()) {\n                for (Map.Entry<AvailableLoad, ValueNumber[]> e : getUpdateableAvailableLoadMap().entrySet()) {\n                    AvailableLoad load = e.getKey();\n                    ValueNumber[] myVN = e.getValue();\n                    ValueNumber[] otherVN = other.getAvailableLoadMap().get(load);\n                    if (false && this.phiNodeForLoads && myVN != null && myVN.length == 1\n                            && myVN[0].hasFlag(ValueNumber.PHI_NODE))\n                        continue;\n                    if (!Arrays.equals(myVN, otherVN)) {\n\n                        ValueNumber phi = getMergedLoads().get(load);\n                        if (phi == null) {\n                            int flags = -1;\n                            for (ValueNumber vn : myVN) {\n                                flags = ValueNumber.mergeFlags(flags, vn.getFlags());\n                            }\n                            if (otherVN != null)\n                                for (ValueNumber vn : otherVN) {\n                                    flags = ValueNumber.mergeFlags(flags, vn.getFlags());\n                                }\n                            if (flags == -1)\n                                flags |= ValueNumber.PHI_NODE;\n                            else \n                                flags |= ValueNumber.PHI_NODE;\n                            \n                            phi = factory.createFreshValue(flags);\n\n                            getUpdateableMergedLoads().put(load, phi);\n                            for (ValueNumber vn : myVN) {\n                                mergeTree.mapInputToOutput(vn, phi);\n                            }\n                            if (otherVN != null)\n                                for (ValueNumber vn : otherVN) {\n                                    mergeTree.mapInputToOutput(vn, phi);\n                                }\n\n                            if (RLE_DEBUG)\n                                System.out.println(\"Creating phi node \" + phi + \" for \" + load + \" from \" + Arrays.toString(myVN)\n                                        + \" x \" + Arrays.toString(otherVN) + \" in \" + System.identityHashCode(this));\n                            changed = true;\n                            e.setValue(new ValueNumber[] { phi });\n                        } else {\n                            if (RLE_DEBUG)\n                                System.out.println(\"Reusing phi node : \" + phi + \" for \" + load + \" from \"\n                                        + Arrays.toString(myVN) + \" x \" + Arrays.toString(otherVN) + \" in \"\n                                        + System.identityHashCode(this));\n                            if (myVN.length != 1 || !myVN[0].equals(phi))\n                                e.setValue(new ValueNumber[] { phi });\n                        }\n\n                    }\n\n                }\n            }\n            Map<ValueNumber, AvailableLoad> previouslyKnownAsOther = other.getPreviouslyKnownAs();\n            if (getPreviouslyKnownAs() != previouslyKnownAsOther && previouslyKnownAsOther.size() != 0) {\n                if (getPreviouslyKnownAs().size() == 0)\n                    assignPreviouslyKnownAs(other);\n                else\n                    getUpdateablePreviouslyKnownAs().putAll(previouslyKnownAsOther);\n            }\n            if (changed)\n                this.phiNodeForLoads = true;\n            if (changed && RLE_DEBUG) {\n                System.out.println(s);\n                System.out.println(\"  Result is \" + this.availableLoadMapAsString());\n                System.out.println(\" Set phi for \" + System.identityHashCode(this));\n            }\n        }\n    }","commit_id":"30901804cf5aa81bfbf087533ec3a6b7f3d485c4","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Test\n   public void testWithIncompleteEntityDecimalRef()\n   {\n      when(mockMessages.invalidXMLEntity(\"&#1234\")).thenReturn(\"Mock invalid messages\");\n      when(mockMessages.invalidXMLEntity(\"&#BC;\")).thenReturn(\"Mock invalid messages\");\n\n      xmlEntityValidation = new XmlEntityValidation(mockMessages);\n      String source = \"Source string\";\n      String target = \"Target string: &#1234 bla bla &#BC;\";\n      xmlEntityValidation.validate(source, target);\n\n      assertThat(xmlEntityValidation.hasError(), Matchers.equalTo(true));\n      assertThat(xmlEntityValidation.getError().size(), Matchers.equalTo(1));\n   }","id":69001,"modified_method":"@Test\n   public void testWithIncompleteEntityDecimalRef()\n   {\n      when(mockMessages.invalidXMLEntity(\"&#1234\")).thenReturn(\"Mock invalid messages\");\n      when(mockMessages.invalidXMLEntity(\"&#BC;\")).thenReturn(\"Mock invalid messages\");\n\n      xmlEntityValidation = new XmlEntityValidation(mockMessages);\n      String source = \"Source string\";\n      String target = \"Target string: &#1234 bla bla &#BC;\";\n      xmlEntityValidation.validate(source, target);\n\n      assertThat(xmlEntityValidation.hasError(), Matchers.equalTo(true));\n      assertThat(xmlEntityValidation.getError().size(), Matchers.equalTo(2));\n   }","commit_id":"18bb1443b770e108dbe675b1f38c9d0febb9d63c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void testWithIncompleteEntityHexadecimalRef()\n   {\n      when(mockMessages.invalidXMLEntity(\"&#x1234\")).thenReturn(\"Mock invalid messages\");\n      when(mockMessages.invalidXMLEntity(\"&#x09Z\")).thenReturn(\"Mock invalid messages\");\n\n      xmlEntityValidation = new XmlEntityValidation(mockMessages);\n      String source = \"Source string\";\n      String target = \"Target string: &#x1234 bla bla &#x09Z\";\n      xmlEntityValidation.validate(source, target);\n\n      assertThat(xmlEntityValidation.hasError(), Matchers.equalTo(true));\n      assertThat(xmlEntityValidation.getError().size(), Matchers.equalTo(1));\n   }","id":69002,"modified_method":"@Test\n   public void testWithIncompleteEntityHexadecimalRef()\n   {\n      when(mockMessages.invalidXMLEntity(\"&#x1234\")).thenReturn(\"Mock invalid messages\");\n      when(mockMessages.invalidXMLEntity(\"&#x09Z\")).thenReturn(\"Mock invalid messages\");\n\n      xmlEntityValidation = new XmlEntityValidation(mockMessages);\n      String source = \"Source string\";\n      String target = \"Target string: &#x1234 bla bla &#x09Z\";\n      xmlEntityValidation.validate(source, target);\n\n      assertThat(xmlEntityValidation.hasError(), Matchers.equalTo(true));\n      assertThat(xmlEntityValidation.getError().size(), Matchers.equalTo(2));\n   }","commit_id":"18bb1443b770e108dbe675b1f38c9d0febb9d63c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void testWithIncompleteEntityCharRef()\n   {\n      when(mockMessages.invalidXMLEntity(\"&mash\")).thenReturn(\"Mock invalid messages\");\n      when(mockMessages.invalidXMLEntity(\"&test\")).thenReturn(\"Mock invalid messages\");\n\n      xmlEntityValidation = new XmlEntityValidation(mockMessages);\n      String source = \"Source string\";\n      String target = \"Target string: &mash bla bla &test\";\n      xmlEntityValidation.validate(source, target);\n\n      assertThat(xmlEntityValidation.hasError(), Matchers.equalTo(true));\n      assertThat(xmlEntityValidation.getError().size(), Matchers.equalTo(1));\n   }","id":69003,"modified_method":"@Test\n   public void testWithIncompleteEntityCharRef()\n   {\n      when(mockMessages.invalidXMLEntity(\"&mash\")).thenReturn(\"Mock invalid messages\");\n      when(mockMessages.invalidXMLEntity(\"&test\")).thenReturn(\"Mock invalid messages\");\n\n      xmlEntityValidation = new XmlEntityValidation(mockMessages);\n      String source = \"Source string\";\n      String target = \"Target string: &mash bla bla &test\";\n      xmlEntityValidation.validate(source, target);\n\n      assertThat(xmlEntityValidation.hasError(), Matchers.equalTo(true));\n      assertThat(xmlEntityValidation.getError().size(), Matchers.equalTo(2));\n   }","commit_id":"18bb1443b770e108dbe675b1f38c9d0febb9d63c","url":"https://github.com/zanata/zanata-server"},{"original_method":"private void validateIncompleteEntity(String target)\n   {\n      if (Strings.isNullOrEmpty(target))\n      {\n         return;\n      }\n\n      Iterable<String> words = Splitter.on(\" \").trimResults().omitEmptyStrings().split(target);\n\n      for (String word : words)\n      {\n         if (word.contains(ENTITY_START_CHAR) && word.length() > 1)\n         {\n            if (!charRefExp.test(word) && !decimalRefExp.test(word) && !hexadecimalRefExp.test(word))\n            {\n               addError(getMessages().invalidXMLEntity(word));\n            }\n         }\n      }\n   }","id":69004,"modified_method":"private void validateIncompleteEntity(String target)\n   {\n      Iterable<String> words = Splitter.on(\" \").trimResults().omitEmptyStrings().split(target);\n\n      for (String word : words)\n      {\n         if (word.contains(ENTITY_START_CHAR) && word.length() > 1)\n         {\n            word = replaceEntityWithEmptyString(charRefExp, word);\n            word = replaceEntityWithEmptyString(decimalRefExp, word);\n            word = replaceEntityWithEmptyString(hexadecimalRefExp, word);\n\n            if (word.contains(ENTITY_START_CHAR))\n            {\n               //remove any string that occurs in front\n               word = word.substring(word.indexOf(ENTITY_START_CHAR)); \n               addError(getMessages().invalidXMLEntity(word));\n            }\n         }\n      }\n   }","commit_id":"18bb1443b770e108dbe675b1f38c9d0febb9d63c","url":"https://github.com/zanata/zanata-server"},{"original_method":"public AtlasSprite (AtlasRegion region) {\r\n\t\t\tthis.region = new AtlasRegion(region);\r\n\t\t\tsetRegion(region);\r\n\t\t\tsetOrigin(region.originalWidth / 2f, region.originalHeight / 2f);\r\n\t\t\tif (region.rotate) {\r\n\t\t\t\trotate90(true);\r\n\t\t\t\tsuper\r\n\t\t\t\t\t.setBounds(region.offsetX, region.offsetY, Math.abs(region.getRegionHeight()), Math.abs(region.getRegionWidth()));\r\n\t\t\t} else {\r\n\t\t\t\tsuper\r\n\t\t\t\t\t.setBounds(region.offsetX, region.offsetY, Math.abs(region.getRegionWidth()), Math.abs(region.getRegionHeight()));\r\n\t\t\t}\r\n\t\t\tsetColor(1, 1, 1, 1);\r\n\t\t}","id":69005,"modified_method":"public AtlasSprite (AtlasRegion region) {\r\n\t\t\tthis.region = new AtlasRegion(region);\r\n\t\t\tsetRegion(region);\r\n\t\t\tsetOrigin(region.originalWidth / 2f, region.originalHeight / 2f);\r\n\t\t\tint width = Math.abs(region.getRegionWidth());\r\n\t\t\tint height = Math.abs(region.getRegionHeight());\r\n\t\t\tif (region.rotate) {\r\n\t\t\t\trotate90(true);\r\n\t\t\t\tsuper.setBounds(region.offsetX, region.offsetY, height, width);\r\n\t\t\t} else\r\n\t\t\t\tsuper.setBounds(region.offsetX, region.offsetY, width, height);\r\n\t\t\tsetColor(1, 1, 1, 1);\r\n\t\t}","commit_id":"fe75cc5513d128a246f2531ed926597252254b97","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Nullable\n  public TextAttributes getTextAttributes(@Nullable final PsiElement element, @Nullable final EditorColorsScheme editorColorsScheme) {\n    if (forcedTextAttributes != null) {\n      return forcedTextAttributes;\n    }\n\n    EditorColorsScheme colorsScheme = getColorsScheme(editorColorsScheme);\n\n    if (forcedTextAttributesKey != null) {\n      return colorsScheme.getAttributes(forcedTextAttributesKey);\n    }\n\n    TextAttributes attributes = getAttributesByType(element, type, colorsScheme);\n    if (element != null &&\n        RainbowHighlighter.isRainbowEnabled() &&\n        isLikeVariable(type.getAttributesKey())) {\n      PsiFile containingFile = element.getContainingFile();\n      if (!RainbowVisitor.existsPassSuitableForFile(containingFile)) {\n        CharSequence text = containingFile.getViewProvider().getContents().subSequence(startOffset, endOffset);\n        attributes = new RainbowHighlighter(colorsScheme).getAttributes(text.toString(), attributes);\n      }\n    }\n    return attributes;\n  }","id":69006,"modified_method":"@Nullable\n  public TextAttributes getTextAttributes(@Nullable final PsiElement element, @Nullable final EditorColorsScheme editorColorsScheme) {\n    if (forcedTextAttributes != null) {\n      return forcedTextAttributes;\n    }\n\n    EditorColorsScheme colorsScheme = getColorsScheme(editorColorsScheme);\n\n    if (forcedTextAttributesKey != null) {\n      return colorsScheme.getAttributes(forcedTextAttributesKey);\n    }\n\n    return getAttributesByType(element, type, colorsScheme);\n  }","commit_id":"d62aee954c8050fc58f4d9b4358d4025e5a51e20","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public HighlightInfo getInfo(@Nullable String nameKey, @Nullable PsiElement id, @Nullable TextAttributesKey colorKey) {\n    if (id == null || nameKey == null || StringUtil.isEmpty(nameKey)) return null;\n    if (colorKey == null) colorKey = DefaultLanguageHighlighterColors.LOCAL_VARIABLE;\n    final TextAttributes attributes = getAttributes(nameKey, myColorsScheme.getAttributes(colorKey));\n    return HighlightInfo\n      .newHighlightInfo(RAINBOW_ELEMENT)\n      .textAttributes(attributes)\n      .range(id)\n      .create();\n  }","id":69007,"modified_method":"public HighlightInfo getInfo(int colorIndex, @Nullable PsiElement id, @Nullable TextAttributesKey colorKey) {\n    if (id == null) {\n      return null;\n    }\n    if (colorKey == null) {\n      colorKey = DefaultLanguageHighlighterColors.LOCAL_VARIABLE;\n    }\n    return HighlightInfo\n      .newHighlightInfo(RAINBOW_ELEMENT)\n      .textAttributes(TextAttributes\n                        .fromFlyweight(myColorsScheme\n                                         .getAttributes(colorKey)\n                                         .getFlyweight()\n                                         .withForeground(calculateForeground(colorIndex))))\n      .range(id)\n      .create();\n  }","commit_id":"d62aee954c8050fc58f4d9b4358d4025e5a51e20","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  protected Color calculateForeground(@NotNull String name) {\n    int hash = StringHash.murmur(name, 0);\n    final List<String> registryColors = StringUtil.split(Registry.get(\"rainbow.highlighter.colors\").asString(), \",\");\n    if (!registryColors.isEmpty()) {\n      final List<Color> colors = registryColors.stream().map((s -> ColorUtil.fromHex(s.trim()))).collect(Collectors.toList());\n      if (!colors.isEmpty()) {\n        return colors.get(Math.abs(hash) % colors.size());\n      }\n    }\n\n    final float colors = 36.0f;\n    final float v = Math.round(Math.abs(colors * hash) / Integer.MAX_VALUE) / colors;\n    return Color.getHSBColor(v, 0.7f, .3f);\n  }","id":69008,"modified_method":"@NotNull\n  public Color calculateForeground(int colorIndex) {\n    return myRainbowColors.get(Math.abs(colorIndex) % myRainbowColors.size());\n  }","commit_id":"d62aee954c8050fc58f4d9b4358d4025e5a51e20","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public RainbowHighlighter(@Nullable TextAttributesScheme colorsScheme) {\n    myColorsScheme = colorsScheme != null ? colorsScheme : EditorColorsManager.getInstance().getGlobalScheme();\n  }","id":69009,"modified_method":"public RainbowHighlighter(@Nullable TextAttributesScheme colorsScheme) {\n    myColorsScheme = colorsScheme != null ? colorsScheme : EditorColorsManager.getInstance().getGlobalScheme();\n    myRainbowColors = generateColorSequence(myColorsScheme);\n  }","commit_id":"d62aee954c8050fc58f4d9b4358d4025e5a51e20","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void checkMemoryFootPrint() {\n    if (_parms._checkpoint != null) return;\n    long p = _train.degreesOfFreedom() - (_parms._autoencoder ? 0 : _train.lastVec().cardinality());\n    String[][] dom = _train.domains();\n    // hack: add the factor levels for the NAs\n    for (int i=0; i<_train.numCols()-(_parms._autoencoder ? 0 : 1); ++i) {\n      if (dom[i] != null) {\n        p++;\n      }\n    }\n//    assert(makeDataInfo(_train, _valid, _parms).fullN() == p);\n    // weights\n    long model_size = p * _parms._hidden[0];\n    int layer=1;\n    for (; layer < _parms._hidden.length; ++layer)\n      model_size += _parms._hidden[layer-1] * _parms._hidden[layer];\n    model_size += _parms._hidden[layer-1] * Math.abs(_train.lastVec().cardinality());\n\n    // biases\n    for (layer=0; layer < _parms._hidden.length; ++layer)\n      model_size += _parms._hidden[layer];\n    model_size += Math.abs(_train.lastVec().cardinality());\n\n    if (model_size > 1e8) {\n      String msg = \"Model is too large: \" + model_size + \" parameters. Try reducing the number of neurons in the hidden layers.\";\n      error(\"_hidden\", msg);\n      cancel(msg);\n    }\n  }","id":69010,"modified_method":"@Override\n  protected void checkMemoryFootPrint() {\n    if (_parms._checkpoint != null) return;\n    long p = _train.degreesOfFreedom() - (_parms._autoencoder ? 0 : _train.lastVec().cardinality());\n    String[][] dom = _train.domains();\n    // hack: add the factor levels for the NAs\n    for (int i=0; i<_train.numCols()-(_parms._autoencoder ? 0 : 1); ++i) {\n      if (dom[i] != null) {\n        p++;\n      }\n    }\n//    assert(makeDataInfo(_train, _valid, _parms).fullN() == p);\n    long output = _parms._autoencoder ? p : Math.abs(_train.lastVec().cardinality());\n    // weights\n    long model_size = p * _parms._hidden[0];\n    int layer=1;\n    for (; layer < _parms._hidden.length; ++layer)\n      model_size += _parms._hidden[layer-1] * _parms._hidden[layer];\n    model_size += _parms._hidden[layer-1] * output;\n\n    // biases\n    for (layer=0; layer < _parms._hidden.length; ++layer)\n      model_size += _parms._hidden[layer];\n    model_size += output;\n\n    if (model_size > 1e8) {\n      String msg = \"Model is too large: \" + model_size + \" parameters. Try reducing the number of neurons in the hidden layers (or reduce the number of categorical factors).\";\n      error(\"_hidden\", msg);\n      cancel(msg);\n    }\n  }","commit_id":"3373b39bdb4f98c5ea7dffb060aaeacb1e071152","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public DeepLearningModel(final Key destKey, final DeepLearningParameters parms, final DeepLearningModelOutput output, Frame train, Frame valid) {\n    super(destKey, parms, output);\n    boolean classification = train.lastVec().isEnum();\n    final DataInfo dinfo = makeDataInfo(train, valid, _parms);\n    _output._names  = train._names   ; // Since changed by DataInfo, need to be reflected in the Model output as well\n    _output._domains= train.domains();\n    _output._names = dinfo._adaptedFrame.names();\n    _output._domains = dinfo._adaptedFrame.domains();\n    DKV.put(dinfo._key,dinfo);\n    model_info = new DeepLearningModelInfo(parms, dinfo, classification, train, valid);\n    actual_best_model_key = Key.makeUserHidden(Key.make());\n    if (parms.getNumFolds() != 0) actual_best_model_key = null;\n    if (!parms._autoencoder) {\n      errors = new DeepLearningScoring[1];\n      errors[0] = new DeepLearningScoring();\n      errors[0].validation = (parms._valid != null);\n      errors[0].num_folds = parms.getNumFolds();\n      _output.errors = last_scored();\n      _output._scoring_history = createScoringHistoryTable(errors);\n      _output._variable_importances = calcVarImp(last_scored().variable_importances);\n    }\n    makeWeightsBiases(destKey);\n    run_time = 0;\n    start_time = System.currentTimeMillis();\n    _timeLastScoreEnter = start_time;\n    assert _key.equals(destKey);\n    long byte_size = new AutoBuffer().put(this).buf().length;\n    if (byte_size > Value.MAX)\n      throw new IllegalArgumentException(\"Model is too large: PUBDEV-941\");\n  }","id":69011,"modified_method":"public DeepLearningModel(final Key destKey, final DeepLearningParameters parms, final DeepLearningModelOutput output, Frame train, Frame valid) {\n    super(destKey, parms, output);\n    boolean classification = train.lastVec().isEnum();\n    final DataInfo dinfo = makeDataInfo(train, valid, _parms);\n    _output._names  = train._names   ; // Since changed by DataInfo, need to be reflected in the Model output as well\n    _output._domains= train.domains();\n    _output._names = dinfo._adaptedFrame.names();\n    _output._domains = dinfo._adaptedFrame.domains();\n    DKV.put(dinfo._key,dinfo);\n    model_info = new DeepLearningModelInfo(parms, dinfo, classification, train, valid);\n    actual_best_model_key = Key.makeUserHidden(Key.make());\n    if (parms.getNumFolds() != 0) actual_best_model_key = null;\n    if (!parms._autoencoder) {\n      errors = new DeepLearningScoring[1];\n      errors[0] = new DeepLearningScoring();\n      errors[0].validation = (parms._valid != null);\n      errors[0].num_folds = parms.getNumFolds();\n      _output.errors = last_scored();\n      _output._scoring_history = createScoringHistoryTable(errors);\n      _output._variable_importances = calcVarImp(last_scored().variable_importances);\n    }\n    makeWeightsBiases(destKey);\n    run_time = 0;\n    start_time = System.currentTimeMillis();\n    _timeLastScoreEnter = start_time;\n    assert _key.equals(destKey);\n    boolean fail = false;\n    long byte_size = 0;\n    try {\n      byte_size = new AutoBuffer().put(this).buf().length;\n    } catch(Throwable t) {\n      fail = true;\n    }\n    if (byte_size > Value.MAX || fail)\n      throw new IllegalArgumentException(\"Model is too large: PUBDEV-941\");\n  }","commit_id":"3373b39bdb4f98c5ea7dffb060aaeacb1e071152","url":"https://github.com/h2oai/h2o-3"},{"original_method":"private void doMapReduce(final String cmd) throws IOException {\n    Path inputDir = writeInputFile(this.conf);\n    this.conf.set(EvaluationMapTask.CMD_KEY, cmd);\n    JobConf job = new JobConf(this.conf, this.getClass());\n    FileInputFormat.setInputPaths(job, inputDir);\n    job.setInputFormat(TextInputFormat.class);\n    job.setJobName(\"HBase Performance Evaluation\");\n    job.setMapperClass(EvaluationMapTask.class);\n    job.setMaxMapAttempts(1);\n    job.setMaxReduceAttempts(1);\n    job.setNumMapTasks(this.N * 10); // Ten maps per client.\n    job.setNumReduceTasks(1);\n    job.setOutputFormat(TextOutputFormat.class);\n    FileOutputFormat.setOutputPath(job, new Path(inputDir, \"outputs\"));\n    JobClient.runJob(job);\n  }","id":69012,"modified_method":"private void doMapReduce(final String cmd) throws IOException, \n  \t\t\tInterruptedException, ClassNotFoundException {\n    Path inputDir = writeInputFile(this.conf);\n    this.conf.set(EvaluationMapTask.CMD_KEY, cmd);\n    Job job = new Job(this.conf);\n    job.setJarByClass(PerformanceEvaluation.class);\n    job.setJobName(\"HBase Performance Evaluation\");\n    \n    job.setInputFormatClass(PeInputFormat.class);\n    PeInputFormat.setInputPaths(job, inputDir);\n    \n    job.setOutputKeyClass(LongWritable.class);\n    job.setOutputValueClass(LongWritable.class);\n    \n    job.setMapperClass(EvaluationMapTask.class);\n    job.setReducerClass(LongSumReducer.class);\n        \n    job.setNumReduceTasks(1);\n    \n    job.setOutputFormatClass(TextOutputFormat.class);\n    TextOutputFormat.setOutputPath(job, new Path(inputDir,\"outputs\"));\n    \n    job.waitForCompletion(true);\n  }","commit_id":"2a4532385784ad19cc2e3c4edb57f61ebdc46e05","url":"https://github.com/apache/hbase"},{"original_method":"private void doAddJob(JobDetail job, Trigger trigger) throws SchedulerException {\n        jobs.incrementAndGet();\n\n        Trigger existingTrigger = getScheduler().getTrigger(trigger.getName(), trigger.getGroup());\n        if (existingTrigger == null) {\n            LOG.debug(\"Adding job using trigger: {}/{}\", trigger.getGroup(), trigger.getName());\n            getScheduler().scheduleJob(job, trigger);\n        } else if (hasTriggerChanged(existingTrigger, trigger)) {\n            LOG.debug(\"Trigger: {}/{} already exists and will be updated by Quartz.\", trigger.getGroup(), trigger.getName());\n            scheduler.addJob(job, true);\n            trigger.setJobName(job.getName());\n            scheduler.rescheduleJob(trigger.getName(), trigger.getGroup(), trigger);\n        } else {\n            LOG.debug(\"Trigger: {}/{} already exists and will be resumed automatically by Quartz.\", trigger.getGroup(), trigger.getName());\n            if (!isClustered()) {\n                trigger.setStartTime(Calendar.getInstance().getTime());\n                scheduler.rescheduleJob(trigger.getName(), trigger.getGroup(), trigger);\n            }\n        }\n    }","id":69013,"modified_method":"private void doAddJob(JobDetail job, Trigger trigger) throws SchedulerException {\n        jobs.incrementAndGet();\n\n        Trigger existingTrigger = getScheduler().getTrigger(trigger.getName(), trigger.getGroup());\n        if (existingTrigger == null) {\n            LOG.debug(\"Adding job using trigger: {}/{}\", trigger.getGroup(), trigger.getName());\n            getScheduler().scheduleJob(job, trigger);\n        } else if (hasTriggerChanged(existingTrigger, trigger)) {\n            LOG.debug(\"Trigger: {}/{} already exists and will be updated by Quartz.\", trigger.getGroup(), trigger.getName());\n            // fast forward start time to now, as we do not want any misfire to kick in\n            trigger.setStartTime(new Date());\n            // replace job, and relate trigger to previous job name, which is needed to reschedule job\n            scheduler.addJob(job, true);\n            trigger.setJobName(existingTrigger.getJobName());\n            scheduler.rescheduleJob(trigger.getName(), trigger.getGroup(), trigger);\n        } else {\n            if (!isClustered()) {\n                LOG.debug(\"Trigger: {}/{} already exists and will be resumed by Quartz.\", trigger.getGroup(), trigger.getName());\n                // fast forward start time to now, as we do not want any misfire to kick in\n                trigger.setStartTime(new Date());\n                // replace job, and relate trigger to previous job name, which is needed to reschedule job\n                scheduler.addJob(job, true);\n                trigger.setJobName(existingTrigger.getJobName());\n                scheduler.rescheduleJob(trigger.getName(), trigger.getGroup(), trigger);\n            } else {\n                LOG.debug(\"Trigger: {}/{} already exists and is already scheduled by clustered JobStore.\", trigger.getGroup(), trigger.getName());\n            }\n        }\n    }","commit_id":"093934f67d316329035c9f90ce789903ecd5dbb6","url":"https://github.com/apache/camel"},{"original_method":"private QuartzEndpoint lookupQuartzEndpoint(CamelContext camelContext, String endpointUri) throws JobExecutionException {\n        try {\n            String targetUri = normalizeUri(endpointUri);\n\n            // check all active routes for the quartz endpoint this task matches\n            // as we prefer to use the existing endpoint from the routes\n            for (Route route : camelContext.getRoutes()) {\n                if (route.getEndpoint() instanceof QuartzEndpoint) {\n                    if (normalizeUri(route.getEndpoint().getEndpointUri()).equals(targetUri)) {\n                        return (QuartzEndpoint) route.getEndpoint();\n                    }\n                }\n            }\n        } catch (Exception e) {\n            throw new JobExecutionException(\"Error lookup up existing QuartzEndpoint with uri: \" + endpointUri, e);\n        }\n\n        // fallback and lookup existing from registry (eg maybe a @Consume POJO with a quartz endpoint, and thus not from a route)\n        if (camelContext.hasEndpoint(endpointUri) != null) {\n            return camelContext.getEndpoint(endpointUri, QuartzEndpoint.class);\n        } else {\n            LOG.warn(\"Cannot find existing QuartzEndpoint with uri: {}. Creating new endpoint instance.\", endpointUri);\n            return camelContext.getEndpoint(endpointUri, QuartzEndpoint.class);\n        }\n    }","id":69014,"modified_method":"private QuartzEndpoint lookupQuartzEndpoint(CamelContext camelContext, String endpointUri, Trigger trigger) throws JobExecutionException {\n        String targetTriggerName = trigger.getName();\n        String targetTriggerGroup = trigger.getGroup();\n\n        LOG.debug(\"Looking up existing QuartzEndpoint with trigger {}.{}\", targetTriggerName, targetTriggerGroup);\n        try {\n            // check all active routes for the quartz endpoint this task matches\n            // as we prefer to use the existing endpoint from the routes\n            for (Route route : camelContext.getRoutes()) {\n                if (route.getEndpoint() instanceof QuartzEndpoint) {\n                    QuartzEndpoint quartzEndpoint = (QuartzEndpoint) route.getEndpoint();\n                    String triggerName = quartzEndpoint.getTrigger().getName();\n                    String triggerGroup = quartzEndpoint.getTrigger().getGroup();\n                    LOG.trace(\"Checking route trigger {}.{}\", triggerName, triggerGroup);\n                    if (triggerName.equals(targetTriggerName) && triggerGroup.equals(targetTriggerGroup)) {\n                        return (QuartzEndpoint) route.getEndpoint();\n                    }\n                }\n            }\n        } catch (Exception e) {\n            throw new JobExecutionException(\"Error lookup up existing QuartzEndpoint with trigger: \" + trigger, e);\n        }\n\n        // fallback and lookup existing from registry (eg maybe a @Consume POJO with a quartz endpoint, and thus not from a route)\n        if (camelContext.hasEndpoint(endpointUri) != null) {\n            return camelContext.getEndpoint(endpointUri, QuartzEndpoint.class);\n        } else {\n            LOG.warn(\"Cannot find existing QuartzEndpoint with uri: {}. Creating new endpoint instance.\", endpointUri);\n            return camelContext.getEndpoint(endpointUri, QuartzEndpoint.class);\n        }\n    }","commit_id":"21611c2ed42e7771541a2e714a3902859c4ed353","url":"https://github.com/apache/camel"},{"original_method":"public void execute(JobExecutionContext context) throws JobExecutionException {\n        String camelContextName = (String) context.getJobDetail().getJobDataMap().get(QuartzConstants.QUARTZ_CAMEL_CONTEXT_NAME);\n        String endpointUri = (String) context.getJobDetail().getJobDataMap().get(QuartzConstants.QUARTZ_ENDPOINT_URI);\n\n        SchedulerContext schedulerContext;\n        try {\n            schedulerContext = context.getScheduler().getContext();\n        } catch (SchedulerException e) {\n            throw new JobExecutionException(\"Failed to obtain scheduler context for job \" + context.getJobDetail().getName());\n        }\n\n        CamelContext camelContext = (CamelContext) schedulerContext.get(QuartzConstants.QUARTZ_CAMEL_CONTEXT + \"-\" + camelContextName);\n        if (camelContext == null) {\n            throw new JobExecutionException(\"No CamelContext could be found with name: \" + camelContextName);\n        }\n\n        QuartzEndpoint endpoint = lookupQuartzEndpoint(camelContext, endpointUri);\n        if (endpoint == null) {\n            throw new JobExecutionException(\"No QuartzEndpoint could be found with uri: \" + endpointUri);\n        }\n        endpoint.onJobExecute(context);\n    }","id":69015,"modified_method":"public void execute(JobExecutionContext context) throws JobExecutionException {\n        String camelContextName = (String) context.getJobDetail().getJobDataMap().get(QuartzConstants.QUARTZ_CAMEL_CONTEXT_NAME);\n        String endpointUri = (String) context.getJobDetail().getJobDataMap().get(QuartzConstants.QUARTZ_ENDPOINT_URI);\n\n        SchedulerContext schedulerContext;\n        try {\n            schedulerContext = context.getScheduler().getContext();\n        } catch (SchedulerException e) {\n            throw new JobExecutionException(\"Failed to obtain scheduler context for job \" + context.getJobDetail().getName());\n        }\n\n        CamelContext camelContext = (CamelContext) schedulerContext.get(QuartzConstants.QUARTZ_CAMEL_CONTEXT + \"-\" + camelContextName);\n        if (camelContext == null) {\n            throw new JobExecutionException(\"No CamelContext could be found with name: \" + camelContextName);\n        }\n\n        Trigger trigger = context.getTrigger();\n        QuartzEndpoint endpoint = lookupQuartzEndpoint(camelContext, endpointUri, trigger);\n        if (endpoint == null) {\n            throw new JobExecutionException(\"No QuartzEndpoint could be found with endpointUri: \" + endpointUri);\n        }\n        endpoint.onJobExecute(context);\n    }","commit_id":"21611c2ed42e7771541a2e714a3902859c4ed353","url":"https://github.com/apache/camel"},{"original_method":"private void doAddJob(JobDetail job, Trigger trigger) throws SchedulerException {\n        incrementJobCounter(getScheduler());\n\n        Trigger existingTrigger = getScheduler().getTrigger(trigger.getName(), trigger.getGroup());\n        if (existingTrigger == null) {\n            LOG.debug(\"Adding job using trigger: {}/{}\", trigger.getGroup(), trigger.getName());\n            getScheduler().scheduleJob(job, trigger);\n        } else if (hasTriggerChanged(existingTrigger, trigger)) {\n            LOG.debug(\"Trigger: {}/{} already exists and will be updated by Quartz.\", trigger.getGroup(), trigger.getName());\n            // fast forward start time to now, as we do not want any misfire to kick in\n            trigger.setStartTime(new Date());\n            // replace job, and relate trigger to previous job name, which is needed to reschedule job\n            scheduler.addJob(job, true);\n            trigger.setJobName(existingTrigger.getJobName());\n            scheduler.rescheduleJob(trigger.getName(), trigger.getGroup(), trigger);\n        } else {\n            if (!isClustered()) {\n                LOG.debug(\"Trigger: {}/{} already exists and will be resumed by Quartz.\", trigger.getGroup(), trigger.getName());\n                // fast forward start time to now, as we do not want any misfire to kick in\n                trigger.setStartTime(new Date());\n                // replace job, and relate trigger to previous job name, which is needed to reschedule job\n                scheduler.addJob(job, true);\n                trigger.setJobName(existingTrigger.getJobName());\n                scheduler.rescheduleJob(trigger.getName(), trigger.getGroup(), trigger);\n            } else {\n                LOG.debug(\"Trigger: {}/{} already exists and is already scheduled by clustered JobStore.\", trigger.getGroup(), trigger.getName());\n            }\n        }\n    }","id":69016,"modified_method":"private void doAddJob(JobDetail job, Trigger trigger) throws SchedulerException {\n        incrementJobCounter(getScheduler());\n\n        Trigger existingTrigger = getScheduler().getTrigger(trigger.getName(), trigger.getGroup());\n        if (existingTrigger == null) {\n            LOG.debug(\"Adding job using trigger: {}/{}\", trigger.getGroup(), trigger.getName());\n            getScheduler().scheduleJob(job, trigger);\n        } else if (hasTriggerChanged(existingTrigger, trigger)) {\n            LOG.debug(\"Trigger: {}/{} already exists and will be updated by Quartz.\", trigger.getGroup(), trigger.getName());\n            // fast forward start time to now, as we do not want any misfire to kick in\n            trigger.setStartTime(new Date());\n\n            // To ensure trigger uses the same job (the job name might change!) we will remove old trigger then re-add.\n            scheduler.unscheduleJob(trigger.getName(), trigger.getGroup());\n            scheduler.addJob(job, true);\n            trigger.setJobName(job.getName());\n            trigger.setJobGroup(job.getGroup());\n            scheduler.scheduleJob(trigger);\n        } else {\n            if (!isClustered()) {\n                LOG.debug(\"Trigger: {}/{} already exists and will be resumed by Quartz.\", trigger.getGroup(), trigger.getName());\n                // fast forward start time to now, as we do not want any misfire to kick in\n                trigger.setStartTime(new Date());\n\n                // To ensure trigger uses the same job (the job name might change!) we will remove old trigger then re-add.\n                scheduler.unscheduleJob(trigger.getName(), trigger.getGroup());\n                scheduler.addJob(job, true);\n                trigger.setJobName(job.getName());\n                trigger.setJobGroup(job.getGroup());\n                scheduler.scheduleJob(trigger);\n            } else {\n                LOG.debug(\"Trigger: {}/{} already exists and is already scheduled by clustered JobStore.\", trigger.getGroup(), trigger.getName());\n            }\n        }\n    }","commit_id":"21611c2ed42e7771541a2e714a3902859c4ed353","url":"https://github.com/apache/camel"},{"original_method":"@NotNull\n    protected AnalysisResult analyzeModuleContents(\n            @NotNull ModuleContext moduleContext,\n            @NotNull List<KtFile> files,\n            @NotNull BindingTrace moduleTrace,\n            @Nullable LanguageVersionSettings languageVersionSettings\n    ) {\n        CompilerConfiguration configuration;\n        if (languageVersionSettings != null) {\n            configuration = getEnvironment().getConfiguration().copy();\n            configuration.put(CommonConfigurationKeys.LANGUAGE_VERSION_SETTINGS, languageVersionSettings);\n        }\n        else {\n            configuration = getEnvironment().getConfiguration();\n        }\n\n        // New JavaDescriptorResolver is created for each module, which is good because it emulates different Java libraries for each module,\n        // albeit with same class names\n        // See TopDownAnalyzerFacadeForJVM#analyzeFilesWithJavaIntegration\n        ComponentProvider container = InjectionKt.createContainerForTopDownSingleModuleAnalyzerForJvm(\n                moduleContext,\n                moduleTrace,\n                new FileBasedDeclarationProviderFactory(moduleContext.getStorageManager(), files),\n                GlobalSearchScope.allScope(moduleContext.getProject()),\n                new JvmPackagePartProvider(getEnvironment()),\n                configuration.get(CommonConfigurationKeys.LANGUAGE_VERSION_SETTINGS, LanguageVersionSettingsImpl.DEFAULT)\n        );\n\n        DslKt.getService(container, LazyTopDownAnalyzerForTopLevel.class).analyzeFiles(\n                TopDownAnalysisMode.TopLevelDeclarations, files,\n                Collections.singletonList(DslKt.getService(container, JavaDescriptorResolver.class).getPackageFragmentProvider())\n        );\n\n        return AnalysisResult.success(moduleTrace.getBindingContext(), moduleContext.getModule());\n    }","id":69017,"modified_method":"@NotNull\n    protected AnalysisResult analyzeModuleContents(\n            @NotNull ModuleContext moduleContext,\n            @NotNull List<KtFile> files,\n            @NotNull BindingTrace moduleTrace,\n            @Nullable LanguageVersionSettings languageVersionSettings\n    ) {\n        CompilerConfiguration configuration;\n        if (languageVersionSettings != null) {\n            configuration = getEnvironment().getConfiguration().copy();\n            configuration.put(CommonConfigurationKeys.LANGUAGE_VERSION_SETTINGS, languageVersionSettings);\n        }\n        else {\n            configuration = getEnvironment().getConfiguration();\n        }\n\n        // New JavaDescriptorResolver is created for each module, which is good because it emulates different Java libraries for each module,\n        // albeit with same class names\n        // See TopDownAnalyzerFacadeForJVM#analyzeFilesWithJavaIntegration\n        ComponentProvider container = InjectionKt.createContainerForTopDownSingleModuleAnalyzerForJvm(\n                moduleContext,\n                moduleTrace,\n                new FileBasedDeclarationProviderFactory(moduleContext.getStorageManager(), files),\n                GlobalSearchScope.allScope(moduleContext.getProject()),\n                new JvmPackagePartProvider(getEnvironment()),\n                configuration.get(CommonConfigurationKeys.LANGUAGE_VERSION_SETTINGS, LanguageVersionSettingsImpl.DEFAULT)\n        );\n\n        ModuleDescriptorImpl moduleDescriptor = (ModuleDescriptorImpl) moduleContext.getModule();\n        moduleDescriptor.initialize(new CompositePackageFragmentProvider(Arrays.asList(\n                DslKt.getService(container, KotlinCodeAnalyzer.class).getPackageFragmentProvider(),\n                DslKt.getService(container, JavaDescriptorResolver.class).getPackageFragmentProvider()\n        )));\n\n        DslKt.getService(container, LazyTopDownAnalyzerForTopLevel.class).analyzeDeclarations(\n                TopDownAnalysisMode.TopLevelDeclarations, files\n        );\n\n        return AnalysisResult.success(moduleTrace.getBindingContext(), moduleDescriptor);\n    }","commit_id":"9fb9c12f5e937a27d9bcd61345ecab483dddefa9","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    String root = JavaTestUtil.getJavaTestDataPath() + \"/psi/search/searchInLibs\";\n    VirtualFile rootFile = PsiTestUtil.createTestProjectStructure(myProject, myModule, root, myFilesToDelete, false);\n\n    final VirtualFile projectRoot = rootFile.findChild(\"project\");\n    assertNotNull(projectRoot);\n\n    final VirtualFile innerSourceRoot = projectRoot.findChild(\"src2\");\n    assertNotNull(innerSourceRoot);\n\n    VirtualFile libRoot = rootFile.findChild(\"lib\");\n    final VirtualFile libClassesRoot = libRoot.findChild(\"classes\");\n    final VirtualFile libSrcRoot = libRoot.findChild(\"src\");\n    assertNotNull(libRoot);\n\n    PsiTestUtil.removeAllRoots(myModule, null);\n    PsiTestUtil.addSourceRoot(myModule, projectRoot);\n    PsiTestUtil.addSourceRoot(myModule, innerSourceRoot);\n    ModuleRootModificationUtil.addModuleLibrary(myModule, \"lib\", Collections.singletonList(libClassesRoot.getUrl()), Collections.singletonList(libSrcRoot.getUrl()));\n  }","id":69018,"modified_method":"@Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    String root = JavaTestUtil.getJavaTestDataPath() + \"/psi/search/searchInLibs\";\n    VirtualFile rootFile = PsiTestUtil.createTestProjectStructure(myProject, myModule, root, myFilesToDelete, false);\n\n    final VirtualFile projectRoot = rootFile.findChild(\"project\");\n    assertNotNull(projectRoot);\n\n    final VirtualFile innerSourceRoot = projectRoot.findChild(\"src2\");\n    assertNotNull(innerSourceRoot);\n\n    VirtualFile libRoot = rootFile.findChild(\"lib\");\n    final VirtualFile libClassesRoot = libRoot.findChild(\"classes\");\n    final VirtualFile libSrcRoot = libRoot.findChild(\"src\");\n    final VirtualFile libSrc2Root = libRoot.findChild(\"src2\");\n    assertNotNull(libRoot);\n\n    PsiTestUtil.removeAllRoots(myModule, null);\n    PsiTestUtil.addSourceRoot(myModule, projectRoot);\n    PsiTestUtil.addSourceRoot(myModule, innerSourceRoot);\n    List<String> sourceRoots = Arrays.asList(libSrcRoot.getUrl(), libSrc2Root.getUrl());\n    List<String> classesRoots = Collections.singletonList(libClassesRoot.getUrl());\n    ModuleRootModificationUtil.addModuleLibrary(myModule, \"lib\", classesRoots, sourceRoots);\n  }","commit_id":"05bb6e02baa49ecf44b2523e923d3dfa71f1f429","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testFindInPathInLibraryDirActuallySearchesInTheirSourcesToo() throws Exception {\n    FindModel model = new FindModel();\n    final PsiClass aClass = myJavaFacade.findClass(\"LibraryClass1\");\n    assertNotNull(aClass);\n    model.setDirectoryName(aClass.getContainingFile().getContainingDirectory().getVirtualFile().getPath());\n    model.setCaseSensitive(true);\n    model.setCustomScope(false);\n    model.setStringToFind(\"LibraryClass1\");\n    model.setProjectScope(false);\n\n    List<UsageInfo> usages = new ArrayList<UsageInfo>();\n    FindInProjectUtil.findUsages(model, getProject(),\n                                 new CommonProcessors.CollectProcessor<UsageInfo>(\n                                   usages), FindInProjectUtil\n                                   .setupProcessPresentation(getProject(), false, FindInProjectUtil.setupViewPresentation(false, model)));\n\n    assertEquals(2, usages.size());\n  }","id":69019,"modified_method":"public void testFindInPathInLibraryDirActuallySearchesInTheirSourcesToo() throws Exception {\n    FindModel model = new FindModel();\n    final PsiClass aClass = myJavaFacade.findClass(\"LibraryClass1\");\n    assertNotNull(aClass);\n    model.setDirectoryName(aClass.getContainingFile().getContainingDirectory().getVirtualFile().getPath());\n    model.setCaseSensitive(true);\n    model.setCustomScope(false);\n    model.setStringToFind(\"LibraryClass1\");\n    model.setProjectScope(false);\n\n    List<UsageInfo> usages = new ArrayList<>();\n    FindInProjectUtil.findUsages(model, getProject(),\n                                 new CommonProcessors.CollectProcessor<>(\n                                   usages), FindInProjectUtil\n                                   .setupProcessPresentation(getProject(), false, FindInProjectUtil.setupViewPresentation(false, model)));\n\n    assertEquals(2, usages.size());\n  }","commit_id":"05bb6e02baa49ecf44b2523e923d3dfa71f1f429","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doTest(String classNameToSearch, String[] expectedFileNames, SearchScope scope) throws Exception {\n    final PsiClass aClass = myJavaFacade.findClass(classNameToSearch);\n    assertNotNull(aClass);\n\n    PsiReference[] refs = ReferencesSearch.search(aClass, scope, false).toArray(new PsiReference[0]);\n\n    ArrayList<PsiFile> files = new ArrayList<PsiFile>();\n    for (PsiReference ref : refs) {\n      PsiFile file = ref.getElement().getContainingFile();\n      if (!files.contains(file)) {\n        files.add(file);\n      }\n    }\n\n    assertEquals(\"files count\", expectedFileNames.length, files.size());\n\n    Collections.sort(files, new Comparator<PsiFile>() {\n      @Override\n      public int compare(PsiFile o1, PsiFile o2) {\n        return o1.getName().compareTo(o2.getName());\n      }\n    });\n    Arrays.sort(expectedFileNames);\n\n    for (int i = 0; i < expectedFileNames.length; i++) {\n      String name = expectedFileNames[i];\n      PsiFile file = files.get(i);\n      assertEquals(name, file.getName());\n    }\n  }","id":69020,"modified_method":"private void doTest(String classNameToSearch, String[] expectedFileNames, SearchScope scope) throws Exception {\n    final PsiClass aClass = myJavaFacade.findClass(classNameToSearch);\n    assertNotNull(aClass);\n\n    PsiReference[] refs = ReferencesSearch.search(aClass, scope, false).toArray(new PsiReference[0]);\n\n    ArrayList<PsiFile> files = new ArrayList<>();\n    for (PsiReference ref : refs) {\n      PsiFile file = ref.getElement().getContainingFile();\n      if (!files.contains(file)) {\n        files.add(file);\n      }\n    }\n\n    assertEquals(\"files count\", expectedFileNames.length, files.size());\n\n    Collections.sort(files, (o1, o2) -> o1.getName().compareTo(o2.getName()));\n    Arrays.sort(expectedFileNames);\n\n    for (int i = 0; i < expectedFileNames.length; i++) {\n      String name = expectedFileNames[i];\n      PsiFile file = files.get(i);\n      assertEquals(name, file.getName());\n    }\n  }","commit_id":"05bb6e02baa49ecf44b2523e923d3dfa71f1f429","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String foo(final String a, final String b) {\n    String _xifexpression = null;\n    boolean _isUpper = this.isUpper(a);\n    if (_isUpper) {\n      String _operator_plus = StringExtensions.operator_plus(b, \"holla\");\n      String _another = this.another(a, _operator_plus);\n      _xifexpression = _another;\n    } else {\n      String _xblockexpression = null;\n      {\n        String x = a;\n        char[] _charArray = b.toCharArray();\n        for (final char y : _charArray) {\n          String _operator_plus_1 = StringExtensions.operator_plus(x, ((Character)y));\n          x = _operator_plus_1;\n        }\n        _xblockexpression = (x);\n      }\n      _xifexpression = _xblockexpression;\n    }\n    return _xifexpression;\n  }","id":69021,"modified_method":"public String foo(final String a, final String b) {\n    String _xifexpression = null;\n    boolean _isUpper = this.isUpper(a);\n    if (_isUpper) {\n      String _operator_plus = StringExtensions.operator_plus(b, \"holla\");\n      String _another = this.another(a, _operator_plus);\n      _xifexpression = _another;\n    } else {\n      String _xblockexpression = null;\n      {\n        String x = a;\n        char[] _charArray = b.toCharArray();\n        for (final char y : _charArray) {\n          String _operator_plus_1 = StringExtensions.operator_plus(x, Character.valueOf(y));\n          x = _operator_plus_1;\n        }\n        _xblockexpression = (x);\n      }\n      _xifexpression = _xblockexpression;\n    }\n    return _xifexpression;\n  }","commit_id":"405fd9cb74ee6c6801e3900bff9ddaa34c05b322","url":"https://github.com/eclipse/xtext"},{"original_method":"public Integer testFunction3() {\n    return ((Integer)42);\n  }","id":69022,"modified_method":"public Integer testFunction3() {\n    return Integer.valueOf(42);\n  }","commit_id":"405fd9cb74ee6c6801e3900bff9ddaa34c05b322","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testReturnExpression_06() {\n      final Function1<Integer,Integer> _function = new Function1<Integer,Integer>() {\n          public Integer apply(final Integer i) {\n            return i;\n          }\n        };\n      final Function1<? super Integer,? extends Integer> closure = _function;\n      Iterable<Integer> _operator_upTo = IntegerExtensions.operator_upTo(((Integer)1), ((Integer)100));\n      for (final Integer x : _operator_upTo) {\n        closure.apply(x);\n      }\n  }","id":69023,"modified_method":"public void testReturnExpression_06() {\n      final Function1<Integer,Integer> _function = new Function1<Integer,Integer>() {\n          public Integer apply(final Integer i) {\n            return i;\n          }\n        };\n      final Function1<? super Integer,? extends Integer> closure = _function;\n      Iterable<Integer> _operator_upTo = IntegerExtensions.operator_upTo(Integer.valueOf(1), Integer.valueOf(100));\n      for (final Integer x : _operator_upTo) {\n        closure.apply(x);\n      }\n  }","commit_id":"405fd9cb74ee6c6801e3900bff9ddaa34c05b322","url":"https://github.com/eclipse/xtext"},{"original_method":"public Object testReturnExpression_07() {\n    Object _xifexpression = null;\n    boolean _operator_notEquals = ObjectExtensions.operator_notEquals(org.eclipse.xtext.xtend2.tests.smoke.Case_3.class, null);\n    if (_operator_notEquals) {\n      {\n        final Function1<Integer,Integer> _function = new Function1<Integer,Integer>() {\n            public Integer apply(final Integer i) {\n              return i;\n            }\n          };\n        final Function1<? super Integer,? extends Integer> closure = _function;\n        Iterable<Integer> _operator_upTo = IntegerExtensions.operator_upTo(((Integer)1), ((Integer)100));\n        for (final Integer x : _operator_upTo) {\n          closure.apply(x);\n        }\n      }\n    }\n    return _xifexpression;\n  }","id":69024,"modified_method":"public Object testReturnExpression_07() {\n    Object _xifexpression = null;\n    boolean _operator_notEquals = ObjectExtensions.operator_notEquals(org.eclipse.xtext.xtend2.tests.smoke.Case_3.class, null);\n    if (_operator_notEquals) {\n      {\n        final Function1<Integer,Integer> _function = new Function1<Integer,Integer>() {\n            public Integer apply(final Integer i) {\n              return i;\n            }\n          };\n        final Function1<? super Integer,? extends Integer> closure = _function;\n        Iterable<Integer> _operator_upTo = IntegerExtensions.operator_upTo(Integer.valueOf(1), Integer.valueOf(100));\n        for (final Integer x : _operator_upTo) {\n          closure.apply(x);\n        }\n      }\n    }\n    return _xifexpression;\n  }","commit_id":"405fd9cb74ee6c6801e3900bff9ddaa34c05b322","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean something(final int i) {\n    boolean _xblockexpression = false;\n    {\n      int _indexOf = this.s.indexOf(i);\n      boolean _operator_equals = ObjectExtensions.operator_equals(((Integer)_indexOf), ((Integer)0));\n      if (_operator_equals) {\n        boolean _contains = this.myList.contains(((Integer)i));\n        return _contains;\n      }\n      Arrays.<Integer>asList(((Integer)i));\n      Collections.<Integer>singletonList(((Integer)i));\n      _xblockexpression = (false);\n    }\n    return _xblockexpression;\n  }","id":69025,"modified_method":"public boolean something(final int i) {\n    boolean _xblockexpression = false;\n    {\n      int _indexOf = this.s.indexOf(i);\n      boolean _operator_equals = IntegerExtensions.operator_equals(_indexOf, 0);\n      if (_operator_equals) {\n        boolean _contains = this.myList.contains(Integer.valueOf(i));\n        return _contains;\n      }\n      Arrays.<Integer>asList(Integer.valueOf(i));\n      Collections.<Integer>singletonList(Integer.valueOf(i));\n      _xblockexpression = (false);\n    }\n    return _xblockexpression;\n  }","commit_id":"405fd9cb74ee6c6801e3900bff9ddaa34c05b322","url":"https://github.com/eclipse/xtext"},{"original_method":"public Integer testFunction3() {\n    int _operator_plus = IntegerExtensions.operator_plus(40, 2);\n    return ((Integer)_operator_plus);\n  }","id":69026,"modified_method":"public Integer testFunction3() {\n    int _operator_plus = IntegerExtensions.operator_plus(40, 2);\n    return Integer.valueOf(_operator_plus);\n  }","commit_id":"405fd9cb74ee6c6801e3900bff9ddaa34c05b322","url":"https://github.com/eclipse/xtext"},{"original_method":"public Integer testFunction4() {\n    int _operator_multiply = IntegerExtensions.operator_multiply(6, 7);\n    return ((Integer)_operator_multiply);\n  }","id":69027,"modified_method":"public Integer testFunction4() {\n    int _operator_multiply = IntegerExtensions.operator_multiply(6, 7);\n    return Integer.valueOf(_operator_multiply);\n  }","commit_id":"405fd9cb74ee6c6801e3900bff9ddaa34c05b322","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testApplyWithBulkRequest() throws Exception {\n        ThreadPool threadPool = mock(ThreadPool.class);\n        when(threadPool.executor(any())).thenReturn(Runnable::run);\n        PipelineStore store = mock(PipelineStore.class);\n\n        Processor processor = new Processor() {\n            @Override\n            public void execute(IngestDocument ingestDocument) {\n                ingestDocument.setFieldValue(\"field2\", \"value2\");\n            }\n\n            @Override\n            public String getType() {\n                return null;\n            }\n        };\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", Collections.singletonList(processor)));\n        executionService = new PipelineExecutionService(store, threadPool);\n        IngestBootstrapper bootstrapper = mock(IngestBootstrapper.class);\n        when(bootstrapper.getPipelineExecutionService()).thenReturn(executionService);\n        filter = new IngestActionFilter(Settings.EMPTY, bootstrapper);\n\n        BulkRequest bulkRequest = new BulkRequest();\n        bulkRequest.putHeader(IngestPlugin.PIPELINE_ID_PARAM, \"_id\");\n        int numRequest = scaledRandomIntBetween(8, 64);\n        for (int i = 0; i < numRequest; i++) {\n            if (rarely()) {\n                ActionRequest request;\n                if (randomBoolean()) {\n                    request = new DeleteRequest(\"_index\", \"_type\", \"_id\");\n                } else {\n                    request = new UpdateRequest(\"_index\", \"_type\", \"_id\");\n                }\n                bulkRequest.add(request);\n            } else {\n                IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\");\n                indexRequest.source(\"field1\", \"value1\");\n                bulkRequest.add(indexRequest);\n            }\n        }\n\n        ActionListener actionListener = mock(ActionListener.class);\n        ActionFilterChain actionFilterChain = mock(ActionFilterChain.class);\n\n        filter.apply(\"_action\", bulkRequest, actionListener, actionFilterChain);\n\n        assertBusy(new Runnable() {\n            @Override\n            public void run() {\n                verify(actionFilterChain).proceed(\"_action\", bulkRequest, actionListener);\n                verifyZeroInteractions(actionListener);\n\n                int assertedRequests = 0;\n                for (ActionRequest actionRequest : bulkRequest.requests()) {\n                    if (actionRequest instanceof IndexRequest) {\n                        IndexRequest indexRequest = (IndexRequest) actionRequest;\n                        assertThat(indexRequest.sourceAsMap().size(), equalTo(2));\n                        assertThat(indexRequest.sourceAsMap().get(\"field1\"), equalTo(\"value1\"));\n                        assertThat(indexRequest.sourceAsMap().get(\"field2\"), equalTo(\"value2\"));\n                    }\n                    assertedRequests++;\n                }\n                assertThat(assertedRequests, equalTo(numRequest));\n            }\n        });\n    }","id":69028,"modified_method":"public void testApplyWithBulkRequest() throws Exception {\n        ThreadPool threadPool = mock(ThreadPool.class);\n        when(threadPool.executor(any())).thenReturn(Runnable::run);\n        PipelineStore store = mock(PipelineStore.class);\n\n        Processor processor = new Processor() {\n            @Override\n            public void execute(IngestDocument ingestDocument) {\n                ingestDocument.setFieldValue(\"field2\", \"value2\");\n            }\n\n            @Override\n            public String getType() {\n                return null;\n            }\n        };\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", new CompoundProcessor(processor)));\n        executionService = new PipelineExecutionService(store, threadPool);\n        IngestBootstrapper bootstrapper = mock(IngestBootstrapper.class);\n        when(bootstrapper.getPipelineExecutionService()).thenReturn(executionService);\n        filter = new IngestActionFilter(Settings.EMPTY, bootstrapper);\n\n        BulkRequest bulkRequest = new BulkRequest();\n        bulkRequest.putHeader(IngestPlugin.PIPELINE_ID_PARAM, \"_id\");\n        int numRequest = scaledRandomIntBetween(8, 64);\n        for (int i = 0; i < numRequest; i++) {\n            if (rarely()) {\n                ActionRequest request;\n                if (randomBoolean()) {\n                    request = new DeleteRequest(\"_index\", \"_type\", \"_id\");\n                } else {\n                    request = new UpdateRequest(\"_index\", \"_type\", \"_id\");\n                }\n                bulkRequest.add(request);\n            } else {\n                IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\");\n                indexRequest.source(\"field1\", \"value1\");\n                bulkRequest.add(indexRequest);\n            }\n        }\n\n        ActionListener actionListener = mock(ActionListener.class);\n        ActionFilterChain actionFilterChain = mock(ActionFilterChain.class);\n\n        filter.apply(\"_action\", bulkRequest, actionListener, actionFilterChain);\n\n        assertBusy(new Runnable() {\n            @Override\n            public void run() {\n                verify(actionFilterChain).proceed(\"_action\", bulkRequest, actionListener);\n                verifyZeroInteractions(actionListener);\n\n                int assertedRequests = 0;\n                for (ActionRequest actionRequest : bulkRequest.requests()) {\n                    if (actionRequest instanceof IndexRequest) {\n                        IndexRequest indexRequest = (IndexRequest) actionRequest;\n                        assertThat(indexRequest.sourceAsMap().size(), equalTo(2));\n                        assertThat(indexRequest.sourceAsMap().get(\"field1\"), equalTo(\"value1\"));\n                        assertThat(indexRequest.sourceAsMap().get(\"field2\"), equalTo(\"value2\"));\n                    }\n                    assertedRequests++;\n                }\n                assertThat(assertedRequests, equalTo(numRequest));\n            }\n        });\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public Pipeline create(String id, Map<String, Object> config, Map<String, Processor.Factory> processorRegistry) throws Exception {\n            String description = ConfigurationUtils.readOptionalStringProperty(config, \"description\");\n            List<Processor> processors = new ArrayList<>();\n            @SuppressWarnings(\"unchecked\")\n            List<Map<String, Map<String, Object>>> processorConfigs = (List<Map<String, Map<String, Object>>>) config.get(\"processors\");\n            if (processorConfigs != null ) {\n                for (Map<String, Map<String, Object>> processor : processorConfigs) {\n                    for (Map.Entry<String, Map<String, Object>> entry : processor.entrySet()) {\n                        Processor.Factory factory = processorRegistry.get(entry.getKey());\n                        if (factory != null) {\n                            Map<String, Object> processorConfig = entry.getValue();\n                            processors.add(factory.create(processorConfig));\n                            if (processorConfig.isEmpty() == false) {\n                                throw new IllegalArgumentException(\"processor [\" + entry.getKey() + \"] doesn't support one or more provided configuration parameters \" + Arrays.toString(processorConfig.keySet().toArray()));\n                            }\n                        } else {\n                            throw new IllegalArgumentException(\"No processor type exist with name [\" + entry.getKey() + \"]\");\n                        }\n                    }\n                }\n            }\n            return new Pipeline(id, description, Collections.unmodifiableList(processors));\n        }","id":69029,"modified_method":"public Pipeline create(String id, Map<String, Object> config, Map<String, Processor.Factory> processorRegistry) throws Exception {\n            String description = ConfigurationUtils.readOptionalStringProperty(config, \"description\");\n            List<Processor> processors = readProcessors(\"processors\", processorRegistry, config);\n            List<Processor> onFailureProcessors = readProcessors(\"on_failure\", processorRegistry, config);\n            CompoundProcessor compoundProcessor = new CompoundProcessor(Collections.unmodifiableList(processors), Collections.unmodifiableList(onFailureProcessors));\n            return new Pipeline(id, description, compoundProcessor);\n        }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public Pipeline(String id, String description, List<Processor> processors) {\n        this.id = id;\n        this.description = description;\n        this.processors = processors;\n    }","id":69030,"modified_method":"public Pipeline(String id, String description, CompoundProcessor compoundProcessor) {\n        this.id = id;\n        this.description = description;\n        this.compoundProcessor = compoundProcessor;\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Unmodifiable list containing each processor that operates on the data.\n     */\n    public List<Processor> getProcessors() {\n        return processors;\n    }","id":69031,"modified_method":"/**\n     * Unmodifiable list containing each processor that operates on the data.\n     */\n    public List<Processor> getProcessors() {\n        return compoundProcessor.getProcessors();\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Modifies the data of a document to be indexed based on the processor this pipeline holds\n     */\n    public void execute(IngestDocument ingestDocument) throws Exception {\n        for (Processor processor : processors) {\n            processor.execute(ingestDocument);\n        }\n    }","id":69032,"modified_method":"/**\n     * Modifies the data of a document to be indexed based on the processor this pipeline holds\n     */\n    public void execute(IngestDocument ingestDocument) throws Exception {\n        compoundProcessor.execute(ingestDocument);\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testExecuteFailure() throws Exception {\n        Processor processor = mock(Processor.class);\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", Collections.singletonList(processor)));\n        IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\").source(Collections.emptyMap());\n        doThrow(new RuntimeException()).when(processor).execute(eqID(\"_index\", \"_type\", \"_id\", Collections.emptyMap()));\n        Consumer<Throwable> failureHandler = mock(Consumer.class);\n        Consumer<Boolean> completionHandler = mock(Consumer.class);\n        executionService.execute(indexRequest, \"_id\", failureHandler, completionHandler);\n        verify(processor).execute(eqID(\"_index\", \"_type\", \"_id\", Collections.emptyMap()));\n        verify(failureHandler, times(1)).accept(any(RuntimeException.class));\n        verify(completionHandler, never()).accept(anyBoolean());\n    }","id":69033,"modified_method":"public void testExecuteFailure() throws Exception {\n        CompoundProcessor processor = mock(CompoundProcessor.class);\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", processor));\n        IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\").source(Collections.emptyMap());\n        doThrow(new RuntimeException()).when(processor).execute(eqID(\"_index\", \"_type\", \"_id\", Collections.emptyMap()));\n        Consumer<Throwable> failureHandler = mock(Consumer.class);\n        Consumer<Boolean> completionHandler = mock(Consumer.class);\n        executionService.execute(indexRequest, \"_id\", failureHandler, completionHandler);\n        verify(processor).execute(eqID(\"_index\", \"_type\", \"_id\", Collections.emptyMap()));\n        verify(failureHandler, times(1)).accept(any(RuntimeException.class));\n        verify(completionHandler, never()).accept(anyBoolean());\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testBulkRequestExecution() throws Exception {\n        BulkRequest bulkRequest = new BulkRequest();\n\n        int numRequest = scaledRandomIntBetween(8, 64);\n        for (int i = 0; i < numRequest; i++) {\n            IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\");\n            indexRequest.source(\"field1\", \"value1\");\n            bulkRequest.add(indexRequest);\n        }\n\n        String pipelineId = \"_id\";\n        when(store.get(pipelineId)).thenReturn(new Pipeline(pipelineId, null, Collections.emptyList()));\n\n        Consumer<Throwable> requestItemErrorHandler = mock(Consumer.class);\n        Consumer<Boolean> completionHandler = mock(Consumer.class);\n        executionService.execute(bulkRequest.requests(), pipelineId, requestItemErrorHandler, completionHandler);\n\n        verify(requestItemErrorHandler, never()).accept(any());\n        verify(completionHandler, times(1)).accept(true);\n    }","id":69034,"modified_method":"public void testBulkRequestExecution() throws Exception {\n        BulkRequest bulkRequest = new BulkRequest();\n\n        int numRequest = scaledRandomIntBetween(8, 64);\n        for (int i = 0; i < numRequest; i++) {\n            IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\");\n            indexRequest.source(\"field1\", \"value1\");\n            bulkRequest.add(indexRequest);\n        }\n\n        String pipelineId = \"_id\";\n        when(store.get(pipelineId)).thenReturn(new Pipeline(pipelineId, null, new CompoundProcessor()));\n\n        Consumer<Throwable> requestItemErrorHandler = mock(Consumer.class);\n        Consumer<Boolean> completionHandler = mock(Consumer.class);\n        executionService.execute(bulkRequest.requests(), pipelineId, requestItemErrorHandler, completionHandler);\n\n        verify(requestItemErrorHandler, never()).accept(any());\n        verify(completionHandler, times(1)).accept(true);\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    public void testExecuteTTL() throws Exception {\n        // test with valid ttl\n        SetProcessor.Factory metaProcessorFactory = new SetProcessor.Factory(TestTemplateService.instance());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_ttl\");\n        config.put(\"value\", \"5d\");\n        Processor processor = metaProcessorFactory.create(config);\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", Collections.singletonList(processor)));\n\n        IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\").source(Collections.emptyMap());\n        Consumer<Throwable> failureHandler = mock(Consumer.class);\n        Consumer<Boolean> completionHandler = mock(Consumer.class);\n        executionService.execute(indexRequest, \"_id\", failureHandler, completionHandler);\n\n        assertThat(indexRequest.ttl(), equalTo(TimeValue.parseTimeValue(\"5d\", null, \"ttl\")));\n        verify(failureHandler, never()).accept(any());\n        verify(completionHandler, times(1)).accept(true);\n\n        // test with invalid ttl\n        metaProcessorFactory = new SetProcessor.Factory(TestTemplateService.instance());\n        config = new HashMap<>();\n        config.put(\"field\", \"_ttl\");\n        config.put(\"value\", \"abc\");\n        processor = metaProcessorFactory.create(config);\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", Collections.singletonList(processor)));\n\n        indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\").source(Collections.emptyMap());\n        failureHandler = mock(Consumer.class);\n        completionHandler = mock(Consumer.class);\n        executionService.execute(indexRequest, \"_id\", failureHandler, completionHandler);\n        verify(failureHandler, times(1)).accept(any(ElasticsearchParseException.class));\n        verify(completionHandler, never()).accept(anyBoolean());\n\n        // test with provided ttl\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", Collections.emptyList()));\n\n        indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\")\n                .source(Collections.emptyMap())\n                .ttl(1000L);\n        failureHandler = mock(Consumer.class);\n        completionHandler = mock(Consumer.class);\n        executionService.execute(indexRequest, \"_id\", failureHandler, completionHandler);\n\n        assertThat(indexRequest.ttl(), equalTo(new TimeValue(1000L)));\n        verify(failureHandler, never()).accept(any());\n        verify(completionHandler, times(1)).accept(true);\n    }","id":69035,"modified_method":"@SuppressWarnings(\"unchecked\")\n    public void testExecuteTTL() throws Exception {\n        // test with valid ttl\n        SetProcessor.Factory metaProcessorFactory = new SetProcessor.Factory(TestTemplateService.instance());\n        Map<String, Object> config = new HashMap<>();\n        config.put(\"field\", \"_ttl\");\n        config.put(\"value\", \"5d\");\n        Processor processor = metaProcessorFactory.create(config);\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", new CompoundProcessor(processor)));\n\n        IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\").source(Collections.emptyMap());\n        Consumer<Throwable> failureHandler = mock(Consumer.class);\n        Consumer<Boolean> completionHandler = mock(Consumer.class);\n        executionService.execute(indexRequest, \"_id\", failureHandler, completionHandler);\n\n        assertThat(indexRequest.ttl(), equalTo(TimeValue.parseTimeValue(\"5d\", null, \"ttl\")));\n        verify(failureHandler, never()).accept(any());\n        verify(completionHandler, times(1)).accept(true);\n\n        // test with invalid ttl\n        metaProcessorFactory = new SetProcessor.Factory(TestTemplateService.instance());\n        config = new HashMap<>();\n        config.put(\"field\", \"_ttl\");\n        config.put(\"value\", \"abc\");\n        processor = metaProcessorFactory.create(config);\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", new CompoundProcessor(processor)));\n\n        indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\").source(Collections.emptyMap());\n        failureHandler = mock(Consumer.class);\n        completionHandler = mock(Consumer.class);\n        executionService.execute(indexRequest, \"_id\", failureHandler, completionHandler);\n        verify(failureHandler, times(1)).accept(any(ElasticsearchParseException.class));\n        verify(completionHandler, never()).accept(anyBoolean());\n\n        // test with provided ttl\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", mock(CompoundProcessor.class)));\n\n        indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\")\n                .source(Collections.emptyMap())\n                .ttl(1000L);\n        failureHandler = mock(Consumer.class);\n        completionHandler = mock(Consumer.class);\n        executionService.execute(indexRequest, \"_id\", failureHandler, completionHandler);\n\n        assertThat(indexRequest.ttl(), equalTo(new TimeValue(1000L)));\n        verify(failureHandler, never()).accept(any());\n        verify(completionHandler, times(1)).accept(true);\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testExecuteSuccess() throws Exception {\n        Processor processor = mock(Processor.class);\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", Collections.singletonList(processor)));\n\n        IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\").source(Collections.emptyMap());\n        Consumer<Throwable> failureHandler = mock(Consumer.class);\n        Consumer<Boolean> completionHandler = mock(Consumer.class);\n        executionService.execute(indexRequest, \"_id\", failureHandler, completionHandler);\n        //TODO we remove metadata, this check is not valid anymore, what do we replace it with?\n        //verify(processor).execute(eqID(\"_index\", \"_type\", \"_id\", Collections.emptyMap()));\n        verify(failureHandler, never()).accept(any());\n        verify(completionHandler, times(1)).accept(true);\n    }","id":69036,"modified_method":"public void testExecuteSuccess() throws Exception {\n        CompoundProcessor processor = mock(CompoundProcessor.class);\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", processor));\n\n        IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\").source(Collections.emptyMap());\n        Consumer<Throwable> failureHandler = mock(Consumer.class);\n        Consumer<Boolean> completionHandler = mock(Consumer.class);\n        executionService.execute(indexRequest, \"_id\", failureHandler, completionHandler);\n        //TODO we remove metadata, this check is not valid anymore, what do we replace it with?\n        //verify(processor).execute(eqID(\"_index\", \"_type\", \"_id\", Collections.emptyMap()));\n        verify(failureHandler, never()).accept(any());\n        verify(completionHandler, times(1)).accept(true);\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testExecutePropagateAllMetaDataUpdates() throws Exception {\n        Processor processor = mock(Processor.class);\n        doAnswer((InvocationOnMock invocationOnMock) -> {\n            IngestDocument ingestDocument = (IngestDocument) invocationOnMock.getArguments()[0];\n            for (IngestDocument.MetaData metaData : IngestDocument.MetaData.values()) {\n                if (metaData == IngestDocument.MetaData.TTL) {\n                    ingestDocument.setFieldValue(IngestDocument.MetaData.TTL.getFieldName(), \"5w\");\n                } else {\n                    ingestDocument.setFieldValue(metaData.getFieldName(), \"update\" + metaData.getFieldName());\n                }\n\n            }\n            return null;\n        }).when(processor).execute(any());\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", Collections.singletonList(processor)));\n\n        IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\").source(Collections.emptyMap());\n        Consumer<Throwable> failureHandler = mock(Consumer.class);\n        Consumer<Boolean> completionHandler = mock(Consumer.class);\n        executionService.execute(indexRequest, \"_id\", failureHandler, completionHandler);\n        verify(processor).execute(any());\n        verify(failureHandler, never()).accept(any());\n        verify(completionHandler, times(1)).accept(true);\n\n        assertThat(indexRequest.index(), equalTo(\"update_index\"));\n        assertThat(indexRequest.type(), equalTo(\"update_type\"));\n        assertThat(indexRequest.id(), equalTo(\"update_id\"));\n        assertThat(indexRequest.routing(), equalTo(\"update_routing\"));\n        assertThat(indexRequest.parent(), equalTo(\"update_parent\"));\n        assertThat(indexRequest.timestamp(), equalTo(\"update_timestamp\"));\n        assertThat(indexRequest.ttl(), equalTo(new TimeValue(3024000000L)));\n    }","id":69037,"modified_method":"public void testExecutePropagateAllMetaDataUpdates() throws Exception {\n        CompoundProcessor processor = mock(CompoundProcessor.class);\n        doAnswer((InvocationOnMock invocationOnMock) -> {\n            IngestDocument ingestDocument = (IngestDocument) invocationOnMock.getArguments()[0];\n            for (IngestDocument.MetaData metaData : IngestDocument.MetaData.values()) {\n                if (metaData == IngestDocument.MetaData.TTL) {\n                    ingestDocument.setFieldValue(IngestDocument.MetaData.TTL.getFieldName(), \"5w\");\n                } else {\n                    ingestDocument.setFieldValue(metaData.getFieldName(), \"update\" + metaData.getFieldName());\n                }\n\n            }\n            return null;\n        }).when(processor).execute(any());\n        when(store.get(\"_id\")).thenReturn(new Pipeline(\"_id\", \"_description\", processor));\n\n        IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\").source(Collections.emptyMap());\n        Consumer<Throwable> failureHandler = mock(Consumer.class);\n        Consumer<Boolean> completionHandler = mock(Consumer.class);\n        executionService.execute(indexRequest, \"_id\", failureHandler, completionHandler);\n        verify(processor).execute(any());\n        verify(failureHandler, never()).accept(any());\n        verify(completionHandler, times(1)).accept(true);\n\n        assertThat(indexRequest.index(), equalTo(\"update_index\"));\n        assertThat(indexRequest.type(), equalTo(\"update_type\"));\n        assertThat(indexRequest.id(), equalTo(\"update_id\"));\n        assertThat(indexRequest.routing(), equalTo(\"update_routing\"));\n        assertThat(indexRequest.parent(), equalTo(\"update_parent\"));\n        assertThat(indexRequest.timestamp(), equalTo(\"update_timestamp\"));\n        assertThat(indexRequest.ttl(), equalTo(new TimeValue(3024000000L)));\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testBulkRequestExecutionWithFailures() throws Exception {\n        BulkRequest bulkRequest = new BulkRequest();\n\n        int numRequest = scaledRandomIntBetween(8, 64);\n        int numIndexRequests = 0;\n        for (int i = 0; i < numRequest; i++) {\n            ActionRequest request;\n            if (randomBoolean()) {\n                if (randomBoolean()) {\n                    request = new DeleteRequest(\"_index\", \"_type\", \"_id\");\n                } else {\n                    request = new UpdateRequest(\"_index\", \"_type\", \"_id\");\n                }\n            } else {\n                IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\");\n                indexRequest.source(\"field1\", \"value1\");\n                request = indexRequest;\n                numIndexRequests++;\n            }\n            bulkRequest.add(request);\n        }\n\n        String pipelineId = \"_id\";\n\n        Processor pipeline = mock(Processor.class);\n        Exception error = new RuntimeException();\n        doThrow(error).when(pipeline).execute(any());\n        when(store.get(pipelineId)).thenReturn(new Pipeline(pipelineId, null, Collections.singletonList(pipeline)));\n\n        Consumer<Throwable> requestItemErrorHandler = mock(Consumer.class);\n        Consumer<Boolean> completionHandler = mock(Consumer.class);\n        executionService.execute(bulkRequest.requests(), pipelineId, requestItemErrorHandler, completionHandler);\n\n        verify(requestItemErrorHandler, times(numIndexRequests)).accept(error);\n        verify(completionHandler, times(1)).accept(true);\n    }","id":69038,"modified_method":"public void testBulkRequestExecutionWithFailures() throws Exception {\n        BulkRequest bulkRequest = new BulkRequest();\n\n        int numRequest = scaledRandomIntBetween(8, 64);\n        int numIndexRequests = 0;\n        for (int i = 0; i < numRequest; i++) {\n            ActionRequest request;\n            if (randomBoolean()) {\n                if (randomBoolean()) {\n                    request = new DeleteRequest(\"_index\", \"_type\", \"_id\");\n                } else {\n                    request = new UpdateRequest(\"_index\", \"_type\", \"_id\");\n                }\n            } else {\n                IndexRequest indexRequest = new IndexRequest(\"_index\", \"_type\", \"_id\");\n                indexRequest.source(\"field1\", \"value1\");\n                request = indexRequest;\n                numIndexRequests++;\n            }\n            bulkRequest.add(request);\n        }\n\n        String pipelineId = \"_id\";\n\n        CompoundProcessor processor = mock(CompoundProcessor.class);\n        Exception error = new RuntimeException();\n        doThrow(error).when(processor).execute(any());\n        when(store.get(pipelineId)).thenReturn(new Pipeline(pipelineId, null, processor));\n\n        Consumer<Throwable> requestItemErrorHandler = mock(Consumer.class);\n        Consumer<Boolean> completionHandler = mock(Consumer.class);\n        executionService.execute(bulkRequest.requests(), pipelineId, requestItemErrorHandler, completionHandler);\n\n        verify(requestItemErrorHandler, times(numIndexRequests)).accept(error);\n        verify(completionHandler, times(1)).accept(true);\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Before\n    public void setup() {\n        threadPool = new ThreadPool(\n                Settings.builder()\n                        .put(\"name\", getClass().getName())\n                        .build()\n        );\n        executionService = new SimulateExecutionService(threadPool);\n        processor = mock(Processor.class);\n        when(processor.getType()).thenReturn(\"mock\");\n        pipeline = new Pipeline(\"_id\", \"_description\", Arrays.asList(processor, processor));\n        //ingestDocument = new IngestDocument(\"_index\", \"_type\", \"_id\", Collections.singletonMap(\"foo\", \"bar\"));\n        ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n    }","id":69039,"modified_method":"@Before\n    public void setup() {\n        threadPool = new ThreadPool(\n                Settings.builder()\n                        .put(\"name\", getClass().getName())\n                        .build()\n        );\n        executionService = new SimulateExecutionService(threadPool);\n        processor = mock(CompoundProcessor.class);\n        when(processor.getType()).thenReturn(\"mock\");\n        pipeline = new Pipeline(\"_id\", \"_description\", new CompoundProcessor(processor, processor));\n        ingestDocument = RandomDocumentPicks.randomIngestDocument(random());\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void testParseWithProvidedPipeline() throws Exception {\n        int numDocs = randomIntBetween(1, 10);\n\n        Map<String, Object> requestContent = new HashMap<>();\n        List<Map<String, Object>> docs = new ArrayList<>();\n        List<Map<String, Object>> expectedDocs = new ArrayList<>();\n        requestContent.put(Fields.DOCS, docs);\n        for (int i = 0; i < numDocs; i++) {\n            Map<String, Object> doc = new HashMap<>();\n            String index = randomAsciiOfLengthBetween(1, 10);\n            String type = randomAsciiOfLengthBetween(1, 10);\n            String id = randomAsciiOfLengthBetween(1, 10);\n            doc.put(INDEX.getFieldName(), index);\n            doc.put(TYPE.getFieldName(), type);\n            doc.put(ID.getFieldName(), id);\n            String fieldName = randomAsciiOfLengthBetween(1, 10);\n            String fieldValue = randomAsciiOfLengthBetween(1, 10);\n            doc.put(Fields.SOURCE, Collections.singletonMap(fieldName, fieldValue));\n            docs.add(doc);\n            Map<String, Object> expectedDoc = new HashMap<>();\n            expectedDoc.put(INDEX.getFieldName(), index);\n            expectedDoc.put(TYPE.getFieldName(), type);\n            expectedDoc.put(ID.getFieldName(), id);\n            expectedDoc.put(Fields.SOURCE, Collections.singletonMap(fieldName, fieldValue));\n            expectedDocs.add(expectedDoc);\n        }\n\n        Map<String, Object> pipelineConfig = new HashMap<>();\n        List<Map<String, Object>> processors = new ArrayList<>();\n        int numProcessors = randomIntBetween(1, 10);\n        for (int i = 0; i < numProcessors; i++) {\n            processors.add(Collections.singletonMap(\"mock_processor\", Collections.emptyMap()));\n        }\n        pipelineConfig.put(\"processors\", processors);\n        requestContent.put(Fields.PIPELINE, pipelineConfig);\n\n        SimulatePipelineRequest.Parsed actualRequest = SimulatePipelineRequest.parse(requestContent, false, store);\n        assertThat(actualRequest.isVerbose(), equalTo(false));\n        assertThat(actualRequest.getDocuments().size(), equalTo(numDocs));\n        Iterator<Map<String, Object>> expectedDocsIterator = expectedDocs.iterator();\n        for (IngestDocument ingestDocument : actualRequest.getDocuments()) {\n            Map<String, Object> expectedDocument = expectedDocsIterator.next();\n            Map<IngestDocument.MetaData, String> metadataMap = ingestDocument.extractMetadata();\n            assertThat(metadataMap.get(INDEX), equalTo(expectedDocument.get(INDEX.getFieldName())));\n            assertThat(metadataMap.get(TYPE), equalTo(expectedDocument.get(TYPE.getFieldName())));\n            assertThat(metadataMap.get(ID), equalTo(expectedDocument.get(ID.getFieldName())));\n            assertThat(ingestDocument.getSourceAndMetadata(), equalTo(expectedDocument.get(Fields.SOURCE)));\n        }\n\n        assertThat(actualRequest.getPipeline().getId(), equalTo(SimulatePipelineRequest.SIMULATED_PIPELINE_ID));\n        assertThat(actualRequest.getPipeline().getDescription(), nullValue());\n        assertThat(actualRequest.getPipeline().getProcessors().size(), equalTo(numProcessors));\n    }","id":69040,"modified_method":"public void testParseWithProvidedPipeline() throws Exception {\n        int numDocs = randomIntBetween(1, 10);\n\n        Map<String, Object> requestContent = new HashMap<>();\n        List<Map<String, Object>> docs = new ArrayList<>();\n        List<Map<String, Object>> expectedDocs = new ArrayList<>();\n        requestContent.put(Fields.DOCS, docs);\n        for (int i = 0; i < numDocs; i++) {\n            Map<String, Object> doc = new HashMap<>();\n            String index = randomAsciiOfLengthBetween(1, 10);\n            String type = randomAsciiOfLengthBetween(1, 10);\n            String id = randomAsciiOfLengthBetween(1, 10);\n            doc.put(INDEX.getFieldName(), index);\n            doc.put(TYPE.getFieldName(), type);\n            doc.put(ID.getFieldName(), id);\n            String fieldName = randomAsciiOfLengthBetween(1, 10);\n            String fieldValue = randomAsciiOfLengthBetween(1, 10);\n            doc.put(Fields.SOURCE, Collections.singletonMap(fieldName, fieldValue));\n            docs.add(doc);\n            Map<String, Object> expectedDoc = new HashMap<>();\n            expectedDoc.put(INDEX.getFieldName(), index);\n            expectedDoc.put(TYPE.getFieldName(), type);\n            expectedDoc.put(ID.getFieldName(), id);\n            expectedDoc.put(Fields.SOURCE, Collections.singletonMap(fieldName, fieldValue));\n            expectedDocs.add(expectedDoc);\n        }\n\n        Map<String, Object> pipelineConfig = new HashMap<>();\n        List<Map<String, Object>> processors = new ArrayList<>();\n        int numProcessors = randomIntBetween(1, 10);\n        for (int i = 0; i < numProcessors; i++) {\n            Map<String, Object> processorConfig = new HashMap<>();\n            List<Map<String, Object>> onFailureProcessors = new ArrayList<>();\n            int numOnFailureProcessors = randomIntBetween(0, 1);\n            for (int j = 0; j < numOnFailureProcessors; j++) {\n                onFailureProcessors.add(Collections.singletonMap(\"mock_processor\", Collections.emptyMap()));\n            }\n            if (numOnFailureProcessors > 0) {\n                processorConfig.put(\"on_failure\", onFailureProcessors);\n            }\n            processors.add(Collections.singletonMap(\"mock_processor\", processorConfig));\n        }\n        pipelineConfig.put(\"processors\", processors);\n\n        List<Map<String, Object>> onFailureProcessors = new ArrayList<>();\n        int numOnFailureProcessors = randomIntBetween(0, 1);\n        for (int i = 0; i < numOnFailureProcessors; i++) {\n            onFailureProcessors.add(Collections.singletonMap(\"mock_processor\", Collections.emptyMap()));\n        }\n        if (numOnFailureProcessors > 0) {\n            pipelineConfig.put(\"on_failure\", onFailureProcessors);\n        }\n\n        requestContent.put(Fields.PIPELINE, pipelineConfig);\n\n        SimulatePipelineRequest.Parsed actualRequest = SimulatePipelineRequest.parse(requestContent, false, store);\n        assertThat(actualRequest.isVerbose(), equalTo(false));\n        assertThat(actualRequest.getDocuments().size(), equalTo(numDocs));\n        Iterator<Map<String, Object>> expectedDocsIterator = expectedDocs.iterator();\n        for (IngestDocument ingestDocument : actualRequest.getDocuments()) {\n            Map<String, Object> expectedDocument = expectedDocsIterator.next();\n            Map<IngestDocument.MetaData, String> metadataMap = ingestDocument.extractMetadata();\n            assertThat(metadataMap.get(INDEX), equalTo(expectedDocument.get(INDEX.getFieldName())));\n            assertThat(metadataMap.get(TYPE), equalTo(expectedDocument.get(TYPE.getFieldName())));\n            assertThat(metadataMap.get(ID), equalTo(expectedDocument.get(ID.getFieldName())));\n            assertThat(ingestDocument.getSourceAndMetadata(), equalTo(expectedDocument.get(Fields.SOURCE)));\n        }\n\n        assertThat(actualRequest.getPipeline().getId(), equalTo(SimulatePipelineRequest.SIMULATED_PIPELINE_ID));\n        assertThat(actualRequest.getPipeline().getDescription(), nullValue());\n        assertThat(actualRequest.getPipeline().getProcessors().size(), equalTo(numProcessors));\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Before\n    public void init() throws IOException {\n        Pipeline pipeline = new Pipeline(SimulatePipelineRequest.SIMULATED_PIPELINE_ID, null, Collections.singletonList(mock(Processor.class)));\n        Map<String, Processor.Factory> processorRegistry = new HashMap<>();\n        processorRegistry.put(\"mock_processor\", mock(Processor.Factory.class));\n        store = mock(PipelineStore.class);\n        when(store.get(SimulatePipelineRequest.SIMULATED_PIPELINE_ID)).thenReturn(pipeline);\n        when(store.getProcessorFactoryRegistry()).thenReturn(processorRegistry);\n    }","id":69041,"modified_method":"@Before\n    public void init() throws IOException {\n        CompoundProcessor pipelineCompoundProcessor = mock(CompoundProcessor.class);\n        when(pipelineCompoundProcessor.getProcessors()).thenReturn(Arrays.asList(mock(Processor.class)));\n        Pipeline pipeline = new Pipeline(SimulatePipelineRequest.SIMULATED_PIPELINE_ID, null, pipelineCompoundProcessor);\n        Map<String, Processor.Factory> processorRegistry = new HashMap<>();\n        processorRegistry.put(\"mock_processor\", mock(Processor.Factory.class));\n        store = mock(PipelineStore.class);\n        when(store.get(SimulatePipelineRequest.SIMULATED_PIPELINE_ID)).thenReturn(pipeline);\n        when(store.getProcessorFactoryRegistry()).thenReturn(processorRegistry);\n    }","commit_id":"0bf4c8fb82e2c7ccf2f3f97683ed4fb2fb9a4e4c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void run() {\n      try {\n        final CharSequence chars = myDocument.getCharsSequence();\n\n        int offset = CharArrayUtil.shiftBackwardUntil(chars, myOffset - 1, LINE_SEPARATOR) - 1;\n        offset = CharArrayUtil.shiftBackwardUntil(chars, offset, LINE_SEPARATOR) + 1;\n        int lineStart = CharArrayUtil.shiftForward(chars, offset, \" \\t\");\n\n        final Commenter langCommenter = PsiUtil.getLanguageAtOffset(myFile, offset).getCommenter();\n        final boolean isInsideJavalikeCode = langCommenter instanceof CodeDocumentationAwareCommenter;\n        final CodeDocumentationAwareCommenter commenter = isInsideJavalikeCode ? (CodeDocumentationAwareCommenter)langCommenter:null;\n\n        boolean docStart = isInsideJavalikeCode &&\n                           commenter.getDocumentationCommentPrefix() != null &&\n                           CharArrayUtil.regionMatches(chars, lineStart, commenter.getDocumentationCommentPrefix());\n        boolean cStyleStart = isInsideJavalikeCode &&\n                              commenter.getBlockCommentPrefix() != null &&\n                              CharArrayUtil.regionMatches(chars, lineStart, commenter.getBlockCommentPrefix());\n        boolean docAsterisk = isInsideJavalikeCode &&\n                              commenter.getDocumentationCommentLinePrefix() != null &&\n                              CharArrayUtil.regionMatches(chars, lineStart, commenter.getDocumentationCommentLinePrefix());\n        boolean slashSlash = isInsideJavalikeCode &&\n                             commenter.getLineCommentPrefix() != null &&\n                             CharArrayUtil.regionMatches(chars, lineStart, commenter.getLineCommentPrefix()) &&\n                             chars.charAt(CharArrayUtil.shiftForward(chars, myOffset, \" \\t\")) != '\\n';\n\n        if (docStart) {\n          PsiElement element = myFile.findElementAt(lineStart);\n          final String text = element.getText();\n          final PsiElement parent = element.getParent();\n\n          if ((text.equals(commenter.getDocumentationCommentPrefix()) && parent instanceof PsiDocComment) ||\n              (text.startsWith(commenter.getDocumentationCommentPrefix()) && element instanceof PsiComment)\n             ) {\n            PsiComment comment = parent instanceof PsiDocComment? (PsiDocComment)parent:(PsiComment)element;\n            int commentEnd = comment.getTextRange().getEndOffset();\n\n            if (myOffset >= commentEnd) {\n              docStart = false;\n            }\n            else {\n              if (isCommentComplete(comment, commenter)) {\n                if (myOffset >= commentEnd) {\n                  docAsterisk = false;\n                  docStart = false;\n                }\n                else {\n                  docAsterisk = true;\n                  docStart = false;\n                }\n              }\n              else {\n                generateJavadoc(commenter);\n              }\n            }\n          }\n          else {\n            docStart = false;\n          }\n        }\n        else if (cStyleStart) {\n          PsiElement element = myFile.findElementAt(lineStart);\n          if (element instanceof PsiComment && commenter.getBlockCommentTokenType() == ((PsiComment)element).getTokenType()) {\n            final PsiComment comment = (PsiComment)element;\n            int commentEnd = comment.getTextRange().getEndOffset();\n            if (myOffset >= commentEnd) {\n              docStart = false;\n            }\n            else {\n              if (isCommentComplete(comment, commenter)) {\n                if (myOffset >= commentEnd) {\n                  docAsterisk = false;\n                  docStart = false;\n                }\n                else {\n                  docAsterisk = true;\n                  docStart = false;\n                }\n              }\n              else {\n                final int currentEndOfLine = CharArrayUtil.shiftForwardUntil(chars, myOffset, \"\\n\");\n                myDocument.insertString(currentEndOfLine, \" \" + commenter.getBlockCommentSuffix());\n                int lstart = CharArrayUtil.shiftBackwardUntil(chars, myOffset, \"\\n\");\n                myDocument.insertString(currentEndOfLine, chars.subSequence(lstart, myOffset));\n              }\n            }\n          }\n          else {\n            docStart = false;\n          }\n        }\n\n        if (docAsterisk) {\n          docAsterisk = insertDocAsterisk(lineStart, docAsterisk, commenter);\n        }\n\n        if (CodeInsightSettings.getInstance().SMART_INDENT_ON_ENTER || myForceIndent || docStart || docAsterisk ||\n            slashSlash) {\n          myOffset = CodeStyleManager.getInstance(getProject()).adjustLineIndent(myFile, myOffset);\n        }\n\n        if (docAsterisk || docStart || slashSlash) {\n          if (myInsertSpace) {\n            if (myOffset == myDocument.getTextLength()) {\n              myDocument.insertString(myOffset, \" \");\n            }\n            myDocument.insertString(myOffset + 1, \" \");\n          }\n\n          final char c = myDocument.getCharsSequence().charAt(myOffset);\n          if (c != '\\n') {\n            myOffset += 1;\n          }\n        }\n\n        if ((docAsterisk || slashSlash) && !docStart) {\n          myCaretAdvance = slashSlash ? commenter.getLineCommentPrefix().length() : 1;\n        }\n      }\n      catch (IncorrectOperationException e) {\n        LOG.error(e);\n      }\n\n      myEditor.getCaretModel().moveToOffset(myOffset);\n      myEditor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n      myEditor.getSelectionModel().removeSelection();\n      if (myCaretAdvance != 0) {\n        LogicalPosition caretPosition = myEditor.getCaretModel().getLogicalPosition();\n        LogicalPosition pos = new LogicalPosition(caretPosition.line, caretPosition.column + myCaretAdvance);\n        myEditor.getCaretModel().moveToLogicalPosition(pos);\n      }\n    }","id":69042,"modified_method":"public void run() {\n      try {\n        final CharSequence chars = myDocument.getCharsSequence();\n\n        int offset = CharArrayUtil.shiftBackwardUntil(chars, myOffset - 1, LINE_SEPARATOR) - 1;\n        offset = CharArrayUtil.shiftBackwardUntil(chars, offset, LINE_SEPARATOR) + 1;\n        int lineStart = CharArrayUtil.shiftForward(chars, offset, \" \\t\");\n\n        final Commenter langCommenter = PsiUtil.getLanguageAtOffset(myFile, offset).getCommenter();\n        final boolean isInsideJavalikeCode = langCommenter instanceof CodeDocumentationAwareCommenter;\n        final CodeDocumentationAwareCommenter commenter = isInsideJavalikeCode ? (CodeDocumentationAwareCommenter)langCommenter:null;\n\n        boolean docStart = isInsideJavalikeCode &&\n                           commenter.getDocumentationCommentPrefix() != null &&\n                           CharArrayUtil.regionMatches(chars, lineStart, commenter.getDocumentationCommentPrefix());\n        boolean cStyleStart = isInsideJavalikeCode &&\n                              commenter.getBlockCommentPrefix() != null &&\n                              CharArrayUtil.regionMatches(chars, lineStart, commenter.getBlockCommentPrefix());\n        boolean docAsterisk = isInsideJavalikeCode &&\n                              commenter.getDocumentationCommentLinePrefix() != null &&\n                              CharArrayUtil.regionMatches(chars, lineStart, commenter.getDocumentationCommentLinePrefix());\n        final int firstNonSpaceInLine = CharArrayUtil.shiftForward(chars, myOffset, \" \\t\");\n        boolean slashSlash = isInsideJavalikeCode &&\n                             commenter.getLineCommentPrefix() != null &&\n                             CharArrayUtil.regionMatches(chars, lineStart, commenter.getLineCommentPrefix()) &&\n                             firstNonSpaceInLine < chars.length() && chars.charAt(firstNonSpaceInLine) != '\\n';\n\n        if (docStart) {\n          PsiElement element = myFile.findElementAt(lineStart);\n          final String text = element.getText();\n          final PsiElement parent = element.getParent();\n\n          if ((text.equals(commenter.getDocumentationCommentPrefix()) && parent instanceof PsiDocComment) ||\n              (text.startsWith(commenter.getDocumentationCommentPrefix()) && element instanceof PsiComment)\n             ) {\n            PsiComment comment = parent instanceof PsiDocComment? (PsiDocComment)parent:(PsiComment)element;\n            int commentEnd = comment.getTextRange().getEndOffset();\n\n            if (myOffset >= commentEnd) {\n              docStart = false;\n            }\n            else {\n              if (isCommentComplete(comment, commenter)) {\n                if (myOffset >= commentEnd) {\n                  docAsterisk = false;\n                  docStart = false;\n                }\n                else {\n                  docAsterisk = true;\n                  docStart = false;\n                }\n              }\n              else {\n                generateJavadoc(commenter);\n              }\n            }\n          }\n          else {\n            docStart = false;\n          }\n        }\n        else if (cStyleStart) {\n          PsiElement element = myFile.findElementAt(lineStart);\n          if (element instanceof PsiComment && commenter.getBlockCommentTokenType() == ((PsiComment)element).getTokenType()) {\n            final PsiComment comment = (PsiComment)element;\n            int commentEnd = comment.getTextRange().getEndOffset();\n            if (myOffset >= commentEnd) {\n              docStart = false;\n            }\n            else {\n              if (isCommentComplete(comment, commenter)) {\n                if (myOffset >= commentEnd) {\n                  docAsterisk = false;\n                  docStart = false;\n                }\n                else {\n                  docAsterisk = true;\n                  docStart = false;\n                }\n              }\n              else {\n                final int currentEndOfLine = CharArrayUtil.shiftForwardUntil(chars, myOffset, \"\\n\");\n                myDocument.insertString(currentEndOfLine, \" \" + commenter.getBlockCommentSuffix());\n                int lstart = CharArrayUtil.shiftBackwardUntil(chars, myOffset, \"\\n\");\n                myDocument.insertString(currentEndOfLine, chars.subSequence(lstart, myOffset));\n              }\n            }\n          }\n          else {\n            docStart = false;\n          }\n        }\n\n        if (docAsterisk) {\n          docAsterisk = insertDocAsterisk(lineStart, docAsterisk, commenter);\n        }\n\n        if (CodeInsightSettings.getInstance().SMART_INDENT_ON_ENTER || myForceIndent || docStart || docAsterisk ||\n            slashSlash) {\n          myOffset = CodeStyleManager.getInstance(getProject()).adjustLineIndent(myFile, myOffset);\n        }\n\n        if (docAsterisk || docStart || slashSlash) {\n          if (myInsertSpace) {\n            if (myOffset == myDocument.getTextLength()) {\n              myDocument.insertString(myOffset, \" \");\n            }\n            myDocument.insertString(myOffset + 1, \" \");\n          }\n\n          final char c = myDocument.getCharsSequence().charAt(myOffset);\n          if (c != '\\n') {\n            myOffset += 1;\n          }\n        }\n\n        if ((docAsterisk || slashSlash) && !docStart) {\n          myCaretAdvance = slashSlash ? commenter.getLineCommentPrefix().length() : 1;\n        }\n      }\n      catch (IncorrectOperationException e) {\n        LOG.error(e);\n      }\n\n      myEditor.getCaretModel().moveToOffset(myOffset);\n      myEditor.getScrollingModel().scrollToCaret(ScrollType.RELATIVE);\n      myEditor.getSelectionModel().removeSelection();\n      if (myCaretAdvance != 0) {\n        LogicalPosition caretPosition = myEditor.getCaretModel().getLogicalPosition();\n        LogicalPosition pos = new LogicalPosition(caretPosition.line, caretPosition.column + myCaretAdvance);\n        myEditor.getCaretModel().moveToLogicalPosition(pos);\n      }\n    }","commit_id":"22e0ed8eaaddb05dedecf26e26587c2c0a294e15","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void _validateFunctionFile(\n\t\tElement element, String filePath) {\n\n\t\t_validateDefinitionElement(element, filePath);\n\t\t_validateHasChildElements(element, filePath);\n\t\t_validateRequiredChildElementNames(\n\t\t\telement, Arrays.asList(\"command\"), filePath);\n\n\t\tList<Element> childElements = element.elements();\n\n\t\tfor (Element childElement : childElements) {\n\t\t\t_validateCommandElement(childElement, filePath);\n\t\t\t_validateHasChildElements(childElement, filePath);\n\n\t\t\t_parseElements(childElement, filePath);\n\t\t}\n\t}","id":69043,"modified_method":"private static void _validateFunctionFile(\n\t\tElement element, String filePath) {\n\n\t\t_validateDefinitionElement(element, filePath);\n\t\t_validateHasChildElements(element, filePath);\n\t\t_validateRequiredChildElementName(element, \"command\", filePath);\n\n\t\tList<Element> commandElements = element.elements();\n\n\t\tfor (Element commandElement : commandElements) {\n\t\t\t_validateCommandElement(commandElement, filePath);\n\t\t\t_validateHasChildElements(commandElement, filePath);\n\n\t\t\tList<Element> commandChildElements = commandElement.elements();\n\n\t\t\tfor (Element commandChildElement : commandChildElements) {\n\t\t\t\tString childElementName = commandChildElement.getName();\n\n\t\t\t\tif (childElementName.equals(\"execute\")) {\n\t\t\t\t\t_validateExecuteElement(commandChildElement, filePath);\n\t\t\t\t}\n\t\t\t\telse if (childElementName.equals(\"if\")) {\n\t\t\t\t\t_validateIfElement(commandChildElement, filePath);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_exceptions.add(\n\t\t\t\t\t\tnew Exception(\n\t\t\t\t\t\t\t\"Invalid \" + childElementName +\n\t\t\t\t\t\t\t\t\" child elements\\n \" + filePath + \":\" +\n\t\t\t\t\t\t\t\tcommandChildElement.attributeValue(\n\t\t\t\t\t\t\t\t\t\"line-number\")));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"5284fc2f8a677610d1d1f515d2a83dee424155a5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static void _validateExecuteElement(\n\t\tElement element, String filePath) {\n\n\t\tList<String> multiplePrimaryAttributeNames = Arrays.asList(\n\t\t\t\"macro-desktop\", \"macro-mobile\");\n\n\t\tList<String> primaryAttributeNames = Arrays.asList(\n\t\t\t\"function\", \"macro\", \"macro-desktop\", \"macro-mobile\", \"selenium\",\n\t\t\t\"test-case\");\n\n\t\tString primaryAttributeName = _getPrimaryAttributeName(\n\t\t\telement, multiplePrimaryAttributeNames, primaryAttributeNames,\n\t\t\tfilePath);\n\n\t\tif (primaryAttributeName == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (primaryAttributeName.equals(\"function\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"function\", \"line-number\", \"locator1\", \"locator2\", \"value1\",\n\t\t\t\t\"value2\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\n\t\t\t_validateFunctionContext(element, filePath);\n\t\t}\n\t\telse if (primaryAttributeName.equals(\"macro\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"line-number\", \"macro\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\n\t\t\t_validateMacroContext(element, \"macro\", filePath);\n\t\t}\n\t\telse if (primaryAttributeName.equals(\"macro-desktop\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"line-number\", \"macro-desktop\", \"macro-mobile\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\n\t\t\t_validateMacroContext(element, \"macro-desktop\", filePath);\n\t\t}\n\t\telse if (primaryAttributeName.equals(\"macro-mobile\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"line-number\", \"macro-desktop\", \"macro-mobile\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\n\t\t\t_validateMacroContext(element, \"macro-mobile\", filePath);\n\t\t}\n\t\telse if (primaryAttributeName.equals(\"selenium\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"argument1\", \"argument2\", \"line-number\", \"selenium\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\t\t}\n\t\telse if (primaryAttributeName.equals(\"test-case\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"line-number\", \"test-case\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\n\t\t\t_validateTestCaseContext(element, filePath);\n\t\t}\n\n\t\tList<Element> childElements = element.elements();\n\n\t\tif (!childElements.isEmpty()) {\n\t\t\tprimaryAttributeNames = Arrays.asList(\n\t\t\t\t\"function\", \"macro\", \"macro-desktop\", \"macro-mobile\");\n\n\t\t\t_validateHasPrimaryAttributeName(\n\t\t\t\telement, multiplePrimaryAttributeNames, primaryAttributeNames,\n\t\t\t\tfilePath);\n\n\t\t\tfor (Element childElement : childElements) {\n\t\t\t\tif (Validator.equals(childElement.getName(), \"var\")) {\n\t\t\t\t\t_validateVarElement(childElement, filePath);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_exceptions.add(\n\t\t\t\t\t\tnew Exception(\n\t\t\t\t\t\t\t\"Invalid child element\\n\" + filePath + \":\" +\n\t\t\t\t\t\t\t\telement.attributeValue(\"line-number\")));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":69044,"modified_method":"private static void _validateExecuteElement(\n\t\tElement element, String filePath) {\n\n\t\tList<String> multiplePrimaryAttributeNames = Arrays.asList(\n\t\t\t\"macro-desktop\", \"macro-mobile\");\n\n\t\tList<String> primaryAttributeNames = Arrays.asList(\n\t\t\t\"function\", \"macro\", \"macro-desktop\", \"macro-mobile\", \"selenium\",\n\t\t\t\"test-case\");\n\n\t\tif (filePath.endsWith(\".function\")) {\n\t\t\tmultiplePrimaryAttributeNames = null;\n\t\t\tprimaryAttributeNames = Arrays.asList(\"function\", \"selenium\");\n\t\t}\n\n\t\tString primaryAttributeName = _getPrimaryAttributeName(\n\t\t\telement, multiplePrimaryAttributeNames, primaryAttributeNames,\n\t\t\tfilePath);\n\n\t\tif (primaryAttributeName == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (primaryAttributeName.equals(\"function\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"function\", \"line-number\", \"locator1\", \"locator2\", \"value1\",\n\t\t\t\t\"value2\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\n\t\t\t_validateFunctionContext(element, filePath);\n\t\t}\n\t\telse if (primaryAttributeName.equals(\"macro\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"line-number\", \"macro\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\n\t\t\t_validateMacroContext(element, \"macro\", filePath);\n\t\t}\n\t\telse if (primaryAttributeName.equals(\"macro-desktop\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"line-number\", \"macro-desktop\", \"macro-mobile\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\n\t\t\t_validateMacroContext(element, \"macro-desktop\", filePath);\n\t\t}\n\t\telse if (primaryAttributeName.equals(\"macro-mobile\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"line-number\", \"macro-desktop\", \"macro-mobile\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\n\t\t\t_validateMacroContext(element, \"macro-mobile\", filePath);\n\t\t}\n\t\telse if (primaryAttributeName.equals(\"selenium\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"argument1\", \"argument2\", \"line-number\", \"selenium\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\t\t}\n\t\telse if (primaryAttributeName.equals(\"test-case\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"line-number\", \"test-case\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\n\t\t\t_validateTestCaseContext(element, filePath);\n\t\t}\n\n\t\tList<Element> childElements = element.elements();\n\n\t\tif (!childElements.isEmpty()) {\n\t\t\tprimaryAttributeNames = Arrays.asList(\n\t\t\t\t\"function\", \"macro\", \"macro-desktop\", \"macro-mobile\");\n\n\t\t\t_validateHasPrimaryAttributeName(\n\t\t\t\telement, multiplePrimaryAttributeNames, primaryAttributeNames,\n\t\t\t\tfilePath);\n\n\t\t\tfor (Element childElement : childElements) {\n\t\t\t\tif (Validator.equals(childElement.getName(), \"var\")) {\n\t\t\t\t\t_validateVarElement(childElement, filePath);\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_exceptions.add(\n\t\t\t\t\t\tnew Exception(\n\t\t\t\t\t\t\t\"Invalid child element\\n\" + filePath + \":\" +\n\t\t\t\t\t\t\t\telement.attributeValue(\"line-number\")));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"5284fc2f8a677610d1d1f515d2a83dee424155a5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static void _parseElements(Element element, String filePath) {\n\t\tList<Element> childElements = element.elements();\n\n\t\tList<String> possibleElementNames = Arrays.asList(\n\t\t\t\"description\", \"echo\", \"execute\", \"fail\", \"for\", \"if\", \"property\",\n\t\t\t\"take-screenshot\", \"task\", \"var\", \"while\");\n\n\t\tfor (Element childElement : childElements) {\n\t\t\tString elementName = childElement.getName();\n\n\t\t\tif (!possibleElementNames.contains(elementName)) {\n\t\t\t\t_exceptions.add(\n\t\t\t\t\tnew Exception(\n\t\t\t\t\t\t\"Invalid \" + elementName + \" element\\n\" + filePath +\n\t\t\t\t\t\t\t\":\" + childElement.attributeValue(\"line-number\")));\n\t\t\t}\n\n\t\t\tif (elementName.equals(\"description\") ||\n\t\t\t\telementName.equals(\"echo\") || elementName.equals(\"fail\")) {\n\n\t\t\t\t_validateMessageElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"execute\")) {\n\t\t\t\t_validateExecuteElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"for\")) {\n\t\t\t\t_validateForElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"if\")) {\n\t\t\t\t_validateIfElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"property\")) {\n\t\t\t\t_validatePropertyElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"take-screenshot\")) {\n\t\t\t\t_validateTakeScreenshotElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"task\")) {\n\t\t\t\t_validateTaskElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"var\")) {\n\t\t\t\t_validateVarElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"while\")) {\n\t\t\t\t_validateWhileElement(childElement, filePath);\n\t\t\t}\n\t\t}\n\t}","id":69045,"modified_method":"private static void _parseElements(Element element, String filePath) {\n\t\tList<Element> childElements = element.elements();\n\n\t\tList<String> possibleElementNames = Arrays.asList(\n\t\t\t\"description\", \"echo\", \"execute\", \"fail\", \"for\", \"if\", \"property\",\n\t\t\t\"take-screenshot\", \"task\", \"var\", \"while\");\n\n\t\tif (filePath.endsWith(\".function\")) {\n\t\t\tpossibleElementNames = Arrays.asList(\"execute\", \"if\");\n\t\t}\n\n\t\tfor (Element childElement : childElements) {\n\t\t\tString elementName = childElement.getName();\n\n\t\t\tif (!possibleElementNames.contains(elementName)) {\n\t\t\t\t_exceptions.add(\n\t\t\t\t\tnew Exception(\n\t\t\t\t\t\t\"Invalid \" + elementName + \" element\\n\" + filePath +\n\t\t\t\t\t\t\t\":\" + childElement.attributeValue(\"line-number\")));\n\t\t\t}\n\n\t\t\tif (elementName.equals(\"description\") ||\n\t\t\t\telementName.equals(\"echo\") || elementName.equals(\"fail\")) {\n\n\t\t\t\t_validateMessageElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"execute\")) {\n\t\t\t\t_validateExecuteElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"for\")) {\n\t\t\t\t_validateForElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"if\")) {\n\t\t\t\t_validateIfElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"property\")) {\n\t\t\t\t_validatePropertyElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"take-screenshot\")) {\n\t\t\t\t_validateTakeScreenshotElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"task\")) {\n\t\t\t\t_validateTaskElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"var\")) {\n\t\t\t\t_validateVarElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (elementName.equals(\"while\")) {\n\t\t\t\t_validateWhileElement(childElement, filePath);\n\t\t\t}\n\t\t}\n\t}","commit_id":"53c49204d05029b8fe1317c7f86edeedbc0170e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static void _validateFunctionFile(\n\t\tElement element, String filePath) {\n\n\t\t_validateDefinitionElement(element, filePath);\n\t\t_validateHasChildElements(element, filePath);\n\t\t_validateRequiredChildElementName(element, \"command\", filePath);\n\n\t\tList<Element> commandElements = element.elements();\n\n\t\tfor (Element commandElement : commandElements) {\n\t\t\t_validateCommandElement(commandElement, filePath);\n\t\t\t_validateHasChildElements(commandElement, filePath);\n\n\t\t\tList<Element> commandChildElements = commandElement.elements();\n\n\t\t\tfor (Element commandChildElement : commandChildElements) {\n\t\t\t\tString childElementName = commandChildElement.getName();\n\n\t\t\t\tif (childElementName.equals(\"execute\")) {\n\t\t\t\t\t_validateExecuteElement(commandChildElement, filePath);\n\t\t\t\t}\n\t\t\t\telse if (childElementName.equals(\"if\")) {\n\t\t\t\t\t_validateIfElement(commandChildElement, filePath);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_exceptions.add(\n\t\t\t\t\t\tnew Exception(\n\t\t\t\t\t\t\t\"Invalid \" + childElementName +\n\t\t\t\t\t\t\t\t\" child elements\\n \" + filePath + \":\" +\n\t\t\t\t\t\t\t\tcommandChildElement.attributeValue(\n\t\t\t\t\t\t\t\t\t\"line-number\")));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":69046,"modified_method":"private static void _validateFunctionFile(\n\t\tElement element, String filePath) {\n\n\t\t_validateDefinitionElement(element, filePath);\n\t\t_validateHasChildElements(element, filePath);\n\t\t_validateRequiredChildElementNames(\n\t\t\telement, Arrays.asList(\"command\"), filePath);\n\n\t\tList<Element> childElements = element.elements();\n\n\t\tfor (Element childElement : childElements) {\n\t\t\t_validateCommandElement(childElement, filePath);\n\t\t\t_validateHasChildElements(childElement, filePath);\n\n\t\t\t_parseElements(childElement, filePath);\n\t\t}\n\t}","commit_id":"53c49204d05029b8fe1317c7f86edeedbc0170e4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static void _validateIfElement(Element element, String filePath)\n\t\tthrows PoshiRunnerException {\n\n\t\tList<Attribute> attributes = element.attributes();\n\n\t\tif (attributes.size() > 1) {\n\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\"Missing child attributes\\n \" + filePath + \":\" +\n\t\t\t\t\telement.attributeValue(\"line-number\"));\n\t\t}\n\n\t\t_validateHasChildElements(element, filePath);\n\n\t\tString fileName = filePath.substring(filePath.lastIndexOf(\".\") + 1);\n\n\t\tList<Element> childElements = element.elements();\n\n\t\tif (fileName.equals(\"function\")) {\n\t\t\tElement firstChildElement = childElements.get(0);\n\n\t\t\tString firstChildElementName = firstChildElement.getName();\n\n\t\t\tif (!StringUtils.equals(firstChildElementName, \"condition\") &&\n\t\t\t\t!StringUtils.equals(firstChildElementName, \"contains\")) {\n\n\t\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\t\"Missing (condition|contains) child element\\n\" +\n\t\t\t\t\t\tfilePath + \":\" +\n\t\t\t\t\t\tfirstChildElement.attributeValue(\"line-number\"));\n\t\t\t}\n\t\t}\n\n\t\tList<Element> thenElements = element.elements(\"then\");\n\n\t\tif (thenElements.size() > 1) {\n\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\"Too many then elements\\n\" + filePath + \":\" +\n\t\t\t\t\telement.attributeValue(\"line-number\"));\n\t\t}\n\n\t\t_validateHasChildElements(thenElements.get(0), filePath);\n\n\t\tList<Element> elseElements = element.elements(\"else\");\n\n\t\tif (elseElements.size() > 1) {\n\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\"Too many else elements\\n\" + filePath + \":\" +\n\t\t\t\t\telement.attributeValue(\"line-number\"));\n\t\t}\n\n\t\tList<String> conditionTags = Arrays.asList(\n\t\t\t\"and\", \"condition\", \"contains\", \"equals\", \"isset\", \"not\", \"or\");\n\n\t\tint i = 0;\n\n\t\tfor (Element childElement : childElements) {\n\t\t\tString childElementName = childElement.getName();\n\n\t\t\tif (conditionTags.contains(childElementName) && (i == 0)) {\n\t\t\t\t_validateConditionElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"else\")) {\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\tchildElement, Arrays.asList(\"line-number\"), filePath);\n\n\t\t\t\t_validateHasChildElements(childElement, filePath);\n\n\t\t\t\t_parseElements(childElement, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"elseif\")) {\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\tchildElement, Arrays.asList(\"line-number\"), filePath);\n\n\t\t\t\t_validateHasChildElements(childElement, filePath);\n\n\t\t\t\t_validateIfElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"if\")) {\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\tchildElement, Arrays.asList(\"line-number\"), filePath);\n\n\t\t\t\t_validateHasChildElements(childElement, filePath);\n\n\t\t\t\t_validateIfElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"then\")) {\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\tchildElement, Arrays.asList(\"line-number\"), filePath);\n\n\t\t\t\t_validateHasChildElements(childElement, filePath);\n\n\t\t\t\t_parseElements(childElement, filePath);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\t\"Invalid \" + childElementName + \" element\\n\" + filePath +\n\t\t\t\t\t\t\":\" + childElement.attributeValue(\"line-number\"));\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}","id":69047,"modified_method":"private static void _validateIfElement(Element element, String filePath)\n\t\tthrows PoshiRunnerException {\n\n\t\t_validateHasChildElements(element, filePath);\n\t\t_validateHasNoAttributes(element, filePath);\n\n\t\tString fileName = filePath.substring(filePath.lastIndexOf(\".\") + 1);\n\n\t\tList<Element> childElements = element.elements();\n\n\t\tif (fileName.equals(\"function\")) {\n\t\t\tElement firstChildElement = childElements.get(0);\n\n\t\t\tString firstChildElementName = firstChildElement.getName();\n\n\t\t\tif (!StringUtils.equals(firstChildElementName, \"condition\") &&\n\t\t\t\t!StringUtils.equals(firstChildElementName, \"contains\")) {\n\n\t\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\t\"Missing (condition|contains) child element\\n\" +\n\t\t\t\t\t\tfilePath + \":\" +\n\t\t\t\t\t\tfirstChildElement.attributeValue(\"line-number\"));\n\t\t\t}\n\t\t}\n\n\t\tList<Element> thenElements = element.elements(\"then\");\n\n\t\tif (thenElements.size() > 1) {\n\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\"Too many then elements\\n\" + filePath + \":\" +\n\t\t\t\t\telement.attributeValue(\"line-number\"));\n\t\t}\n\n\t\t_validateHasChildElements(thenElements.get(0), filePath);\n\n\t\tList<Element> elseElements = element.elements(\"else\");\n\n\t\tif (elseElements.size() > 1) {\n\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\"Too many else elements\\n\" + filePath + \":\" +\n\t\t\t\t\telement.attributeValue(\"line-number\"));\n\t\t}\n\n\t\tList<String> conditionTags = Arrays.asList(\n\t\t\t\"and\", \"condition\", \"contains\", \"equals\", \"isset\", \"not\", \"or\");\n\n\t\tint i = 0;\n\n\t\tfor (Element childElement : childElements) {\n\t\t\tString childElementName = childElement.getName();\n\n\t\t\tif (conditionTags.contains(childElementName) && (i == 0)) {\n\t\t\t\t_validateConditionElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"else\")) {\n\t\t\t\t_validateHasChildElements(childElement, filePath);\n\t\t\t\t_validateHasNoAttributes(childElement, filePath);\n\n\t\t\t\t_parseElements(childElement, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"elseif\")) {\n\t\t\t\t_validateHasChildElements(childElement, filePath);\n\t\t\t\t_validateHasNoAttributes(childElement, filePath);\n\n\t\t\t\t_validateIfElement(childElement, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"then\")) {\n\t\t\t\t_validateHasChildElements(childElement, filePath);\n\t\t\t\t_validateHasNoAttributes(childElement, filePath);\n\n\t\t\t\t_parseElements(childElement, filePath);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\t\"Invalid \" + childElementName + \" element\\n\" + filePath +\n\t\t\t\t\t\t\":\" + childElement.attributeValue(\"line-number\"));\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t}","commit_id":"f79e15518b248b88b95141f986e33230f1a8e74e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static void _validateTakeScreenshotElement(\n\t\t\tElement element, String filePath)\n\t\tthrows PoshiRunnerException {\n\n\t\t_validateHasNoChildElements(element, filePath);\n\t\t_validatePossibleAttributeNames(\n\t\t\telement, Arrays.asList(\"line-number\"), filePath);\n\t}","id":69048,"modified_method":"private static void _validateTakeScreenshotElement(\n\t\t\tElement element, String filePath)\n\t\tthrows PoshiRunnerException {\n\n\t\t_validateHasNoAttributes(element, filePath);\n\t\t_validateHasNoChildElements(element, filePath);\n\t}","commit_id":"f79e15518b248b88b95141f986e33230f1a8e74e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static void _validateConditionElement(\n\t\t\tElement element, String filePath)\n\t\tthrows PoshiRunnerException {\n\n\t\tString elementName = element.getName();\n\n\t\tif (elementName.equals(\"and\")) {\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, Arrays.asList(\"line-number\"), filePath);\n\n\t\t\t_validateHasChildElements(element, filePath);\n\n\t\t\tList<Element> childElements = element.elements();\n\n\t\t\tfor (Element childElement : childElements) {\n\t\t\t\t_validateConditionElement(childElement, filePath);\n\t\t\t}\n\t\t}\n\t\telse if (elementName.equals(\"condition\")) {\n\t\t\tif (Validator.isNotNull(element.attributeValue(\"function\")) &&\n\t\t\t\tValidator.isNotNull(element.attributeValue(\"selenium\"))) {\n\n\t\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\t\"There cannot be both function and selenium conditions\\n\" +\n\t\t\t\t\t\tfilePath + \":\" + element.attributeValue(\"line-number\"));\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(element.attributeValue(\"function\"))) {\n\t\t\t\t_validateRequiredAttributeNames(\n\t\t\t\t\telement, Arrays.asList(\"locator1\"), filePath);\n\n\t\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\t\"function\", \"line-number\", \"locator1\", \"value1\");\n\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\telement, possibleAttributeNames, filePath);\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(element.attributeValue(\"selenium\"))) {\n\t\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\t\"argument1\", \"argument2\", \"line-number\", \"selenium\");\n\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\telement, possibleAttributeNames, filePath);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\t\"Invalid condition\\n\" + filePath + \":\" +\n\t\t\t\t\t\telement.attributeValue(\"line-number\"));\n\t\t\t}\n\n\t\t\t_validateHasNoChildElements(element, filePath);\n\t\t}\n\t\telse if (elementName.equals(\"contains\")) {\n\t\t\tList<String> attributeNames = Arrays.asList(\n\t\t\t\t\"line-number\", \"string\", \"substring\");\n\n\t\t\t_validateHasNoChildElements(element, filePath);\n\t\t\t_validatePossibleAttributeNames(element, attributeNames, filePath);\n\t\t\t_validateRequiredAttributeNames(element, attributeNames, filePath);\n\t\t}\n\t\telse if (elementName.equals(\"equals\")) {\n\t\t\tList<String> attributeNames = Arrays.asList(\n\t\t\t\t\"arg1\", \"arg2\", \"line-number\");\n\n\t\t\t_validateHasNoChildElements(element, filePath);\n\t\t\t_validatePossibleAttributeNames(element, attributeNames, filePath);\n\t\t\t_validateRequiredAttributeNames(element, attributeNames, filePath);\n\t\t}\n\t\telse if (elementName.equals(\"isset\")) {\n\t\t\tList<String> attributeNames = Arrays.asList(\"line-number\", \"var\");\n\n\t\t\t_validatePossibleAttributeNames(element, attributeNames, filePath);\n\n\t\t\t_validateRequiredAttributeNames(element, attributeNames, filePath);\n\n\t\t\t_validateHasNoChildElements(element, filePath);\n\t\t}\n\t\telse if (elementName.equals(\"not\")) {\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, Arrays.asList(\"line-number\"), filePath);\n\n\t\t\t_validateHasChildElements(element, filePath);\n\n\t\t\tList<Element> childElements = element.elements();\n\n\t\t\tfor (Element childElement : childElements) {\n\t\t\t\t_validateConditionElement(childElement, filePath);\n\t\t\t}\n\t\t}\n\t\telse if (elementName.equals(\"or\")) {\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, Arrays.asList(\"line-number\"), filePath);\n\n\t\t\t_validateHasChildElements(element, filePath);\n\n\t\t\tList<Element> childElements = element.elements();\n\n\t\t\tfor (Element childElement : childElements) {\n\t\t\t\t_validateConditionElement(childElement, filePath);\n\t\t\t}\n\t\t}\n\t}","id":69049,"modified_method":"private static void _validateConditionElement(\n\t\t\tElement element, String filePath)\n\t\tthrows PoshiRunnerException {\n\n\t\tString elementName = element.getName();\n\n\t\tif (elementName.equals(\"and\")) {\n\t\t\t_validateHasNoAttributes(element, filePath);\n\t\t\t_validateHasChildElements(element, filePath);\n\n\t\t\tList<Element> childElements = element.elements();\n\n\t\t\tfor (Element childElement : childElements) {\n\t\t\t\t_validateConditionElement(childElement, filePath);\n\t\t\t}\n\t\t}\n\t\telse if (elementName.equals(\"condition\")) {\n\t\t\tif (Validator.isNotNull(element.attributeValue(\"function\")) &&\n\t\t\t\tValidator.isNotNull(element.attributeValue(\"selenium\"))) {\n\n\t\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\t\"There cannot be both function and selenium conditions\\n\" +\n\t\t\t\t\t\tfilePath + \":\" + element.attributeValue(\"line-number\"));\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(element.attributeValue(\"function\"))) {\n\t\t\t\t_validateRequiredAttributeNames(\n\t\t\t\t\telement, Arrays.asList(\"locator1\"), filePath);\n\n\t\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\t\"function\", \"line-number\", \"locator1\", \"value1\");\n\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\telement, possibleAttributeNames, filePath);\n\t\t\t}\n\t\t\telse if (Validator.isNotNull(element.attributeValue(\"selenium\"))) {\n\t\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\t\"argument1\", \"argument2\", \"line-number\", \"selenium\");\n\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\telement, possibleAttributeNames, filePath);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\t\"Invalid condition\\n\" + filePath + \":\" +\n\t\t\t\t\t\telement.attributeValue(\"line-number\"));\n\t\t\t}\n\n\t\t\t_validateHasNoChildElements(element, filePath);\n\t\t}\n\t\telse if (elementName.equals(\"contains\")) {\n\t\t\tList<String> attributeNames = Arrays.asList(\n\t\t\t\t\"line-number\", \"string\", \"substring\");\n\n\t\t\t_validateHasNoChildElements(element, filePath);\n\t\t\t_validatePossibleAttributeNames(element, attributeNames, filePath);\n\t\t\t_validateRequiredAttributeNames(element, attributeNames, filePath);\n\t\t}\n\t\telse if (elementName.equals(\"equals\")) {\n\t\t\tList<String> attributeNames = Arrays.asList(\n\t\t\t\t\"arg1\", \"arg2\", \"line-number\");\n\n\t\t\t_validateHasNoChildElements(element, filePath);\n\t\t\t_validatePossibleAttributeNames(element, attributeNames, filePath);\n\t\t\t_validateRequiredAttributeNames(element, attributeNames, filePath);\n\t\t}\n\t\telse if (elementName.equals(\"isset\")) {\n\t\t\tList<String> attributeNames = Arrays.asList(\"line-number\", \"var\");\n\n\t\t\t_validateHasNoChildElements(element, filePath);\n\t\t\t_validatePossibleAttributeNames(element, attributeNames, filePath);\n\t\t\t_validateRequiredAttributeNames(element, attributeNames, filePath);\n\t\t}\n\t\telse if (elementName.equals(\"not\")) {\n\t\t\t_validateHasChildElements(element, filePath);\n\t\t\t_validateHasNoAttributes(element, filePath);\n\n\t\t\tList<Element> childElements = element.elements();\n\n\t\t\tfor (Element childElement : childElements) {\n\t\t\t\t_validateConditionElement(childElement, filePath);\n\t\t\t}\n\t\t}\n\t\telse if (elementName.equals(\"or\")) {\n\t\t\t_validateHasChildElements(element, filePath);\n\t\t\t_validateHasNoAttributes(element, filePath);\n\n\t\t\tList<Element> childElements = element.elements();\n\n\t\t\tfor (Element childElement : childElements) {\n\t\t\t\t_validateConditionElement(childElement, filePath);\n\t\t\t}\n\t\t}\n\t}","commit_id":"f79e15518b248b88b95141f986e33230f1a8e74e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static void _validateDefinitionElement(\n\t\t\tElement element, String filePath)\n\t\tthrows PoshiRunnerException {\n\n\t\tString elementName = element.getName();\n\n\t\tif (!StringUtils.equals(elementName, \"definition\")) {\n\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\"Invalid \" + elementName + \" element\\n\" + filePath + \":\" +\n\t\t\t\t\telement.attributeValue(\"line-number\"));\n\t\t}\n\n\t\tString classType = PoshiRunnerGetterUtil.getClassTypeFromFilePath(\n\t\t\tfilePath);\n\n\t\tif (classType.equals(\"function\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"default\", \"line-number\", \"summary\", \"summary-ignore\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\t\t\t_validateRequiredAttributeNames(\n\t\t\t\telement, Arrays.asList(\"default\"), filePath);\n\t\t}\n\t\telse if (classType.equals(\"macro\")) {\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, Arrays.asList(\"line-number\"), filePath);\n\t\t}\n\t\telse if (classType.equals(\"testcase\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"component-name\", \"extends\", \"ignore\", \"ignore-command-names\",\n\t\t\t\t\"line-number\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\t\t\t_validateRequiredAttributeNames(\n\t\t\t\telement, Arrays.asList(\"component-name\"), filePath);\n\t\t}\n\t}","id":69050,"modified_method":"private static void _validateDefinitionElement(\n\t\t\tElement element, String filePath)\n\t\tthrows PoshiRunnerException {\n\n\t\tString elementName = element.getName();\n\n\t\tif (!StringUtils.equals(elementName, \"definition\")) {\n\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\"Invalid \" + elementName + \" element\\n\" + filePath + \":\" +\n\t\t\t\t\telement.attributeValue(\"line-number\"));\n\t\t}\n\n\t\tString classType = PoshiRunnerGetterUtil.getClassTypeFromFilePath(\n\t\t\tfilePath);\n\n\t\tif (classType.equals(\"function\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"default\", \"line-number\", \"summary\", \"summary-ignore\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\t\t\t_validateRequiredAttributeNames(\n\t\t\t\telement, Arrays.asList(\"default\"), filePath);\n\t\t}\n\t\telse if (classType.equals(\"macro\")) {\n\t\t\t_validateHasNoAttributes(element, filePath);\n\t\t}\n\t\telse if (classType.equals(\"testcase\")) {\n\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\"component-name\", \"extends\", \"ignore\", \"ignore-command-names\",\n\t\t\t\t\"line-number\");\n\n\t\t\t_validatePossibleAttributeNames(\n\t\t\t\telement, possibleAttributeNames, filePath);\n\t\t\t_validateRequiredAttributeNames(\n\t\t\t\telement, Arrays.asList(\"component-name\"), filePath);\n\t\t}\n\t}","commit_id":"f79e15518b248b88b95141f986e33230f1a8e74e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static void _validateTestCaseFile(Element element, String filePath)\n\t\tthrows PoshiRunnerException {\n\n\t\t_validateDefinitionElement(element, filePath);\n\n\t\tList<Element> childElements = element.elements();\n\n\t\tif (childElements.isEmpty() &&\n\t\t\tValidator.isNull(element.attributeValue(\"extends\"))) {\n\n\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\"Missing child elements\\n\" + filePath + \":\" +\n\t\t\t\t\telement.attributeValue(\"line-number\"));\n\t\t}\n\n\t\tList<String> possibleTagElementNames = Arrays.asList(\n\t\t\t\"command\", \"property\", \"set-up\", \"tear-down\", \"var\");\n\n\t\tfor (Element childElement : childElements) {\n\t\t\tString childElementName = childElement.getName();\n\n\t\t\tif (!possibleTagElementNames.contains(childElementName)) {\n\t\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\t\"Invalid \" + childElementName + \" element\\n\" + filePath +\n\t\t\t\t\t\t\":\" + childElement.attributeValue(\"line-number\"));\n\t\t\t}\n\n\t\t\tif (childElementName.equals(\"command\")) {\n\t\t\t\tif (Validator.isNull(childElement.attributeValue(\"name\"))) {\n\t\t\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\t\t\"Missing name attribute\\n\" + filePath + \":\" +\n\t\t\t\t\t\t\tchildElement.attributeValue(\"line-number\"));\n\t\t\t\t}\n\n\t\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\t\"description\", \"known-issues\", \"line-number\", \"name\",\n\t\t\t\t\t\"priority\");\n\n\t\t\t\t_validateHasChildElements(childElement, filePath);\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\tchildElement, possibleAttributeNames, filePath);\n\t\t\t\t_validateRequiredAttributeNames(\n\t\t\t\t\tchildElement, Arrays.asList(\"name\"), filePath);\n\n\t\t\t\t_parseElements(childElement, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"property\")) {\n\t\t\t\tList<String> attributeNames = Arrays.asList(\n\t\t\t\t\t\"line-number\", \"name\", \"value\");\n\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\tchildElement, attributeNames, filePath);\n\t\t\t\t_validateRequiredAttributeNames(\n\t\t\t\t\tchildElement, attributeNames, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"set-up\") ||\n\t\t\t\t\t childElementName.equals(\"tear-down\")) {\n\n\t\t\t\tList<String> attributeNames = Arrays.asList(\"line-number\");\n\n\t\t\t\t_validateHasChildElements(childElement, filePath);\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\tchildElement, attributeNames, filePath);\n\t\t\t\t_validateRequiredAttributeNames(\n\t\t\t\t\tchildElement, attributeNames, filePath);\n\n\t\t\t\t_parseElements(childElement, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"var\")) {\n\t\t\t\t_validateVarElement(childElement, filePath);\n\t\t\t}\n\t\t}\n\t}","id":69051,"modified_method":"private static void _validateTestCaseFile(Element element, String filePath)\n\t\tthrows PoshiRunnerException {\n\n\t\t_validateDefinitionElement(element, filePath);\n\n\t\tList<Element> childElements = element.elements();\n\n\t\tif (childElements.isEmpty() &&\n\t\t\tValidator.isNull(element.attributeValue(\"extends\"))) {\n\n\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\"Missing child elements\\n\" + filePath + \":\" +\n\t\t\t\t\telement.attributeValue(\"line-number\"));\n\t\t}\n\n\t\tList<String> possibleTagElementNames = Arrays.asList(\n\t\t\t\"command\", \"property\", \"set-up\", \"tear-down\", \"var\");\n\n\t\tfor (Element childElement : childElements) {\n\t\t\tString childElementName = childElement.getName();\n\n\t\t\tif (!possibleTagElementNames.contains(childElementName)) {\n\t\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\t\"Invalid \" + childElementName + \" element\\n\" + filePath +\n\t\t\t\t\t\t\":\" + childElement.attributeValue(\"line-number\"));\n\t\t\t}\n\n\t\t\tif (childElementName.equals(\"command\")) {\n\t\t\t\tif (Validator.isNull(childElement.attributeValue(\"name\"))) {\n\t\t\t\t\tthrow new PoshiRunnerException(\n\t\t\t\t\t\t\"Missing name attribute\\n\" + filePath + \":\" +\n\t\t\t\t\t\t\tchildElement.attributeValue(\"line-number\"));\n\t\t\t\t}\n\n\t\t\t\tList<String> possibleAttributeNames = Arrays.asList(\n\t\t\t\t\t\"description\", \"known-issues\", \"line-number\", \"name\",\n\t\t\t\t\t\"priority\");\n\n\t\t\t\t_validateHasChildElements(childElement, filePath);\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\tchildElement, possibleAttributeNames, filePath);\n\t\t\t\t_validateRequiredAttributeNames(\n\t\t\t\t\tchildElement, Arrays.asList(\"name\"), filePath);\n\n\t\t\t\t_parseElements(childElement, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"property\")) {\n\t\t\t\tList<String> attributeNames = Arrays.asList(\n\t\t\t\t\t\"line-number\", \"name\", \"value\");\n\n\t\t\t\t_validatePossibleAttributeNames(\n\t\t\t\t\tchildElement, attributeNames, filePath);\n\t\t\t\t_validateRequiredAttributeNames(\n\t\t\t\t\tchildElement, attributeNames, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"set-up\") ||\n\t\t\t\t\t childElementName.equals(\"tear-down\")) {\n\n\t\t\t\t_validateHasChildElements(childElement, filePath);\n\t\t\t\t_validateHasNoAttributes(childElement, filePath);\n\n\t\t\t\t_parseElements(childElement, filePath);\n\t\t\t}\n\t\t\telse if (childElementName.equals(\"var\")) {\n\t\t\t\t_validateVarElement(childElement, filePath);\n\t\t\t}\n\t\t}\n\t}","commit_id":"f79e15518b248b88b95141f986e33230f1a8e74e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static void _validateElseIfElement(\n\t\tElement element, String filePath) {\n\n\t\t_validateHasChildElements(element, filePath);\n\t\t_validateHasNoAttributes(element, filePath);\n\t\t_validateNumberOfChildElements(element, 2, filePath);\n\n\t\tList<Element> childElements = element.elements();\n\n\t\tList<String> conditionTags = Arrays.asList(\n\t\t\t\"and\", \"condition\", \"contains\", \"equals\", \"isset\", \"not\", \"or\");\n\n\t\tElement conditionElement = childElements.get(0);\n\n\t\tString conditionElementName = conditionElement.getName();\n\n\t\tif (conditionTags.contains(conditionElementName)) {\n\t\t\t_validateConditionElement(conditionElement, filePath);\n\t\t}\n\t\telse {\n\t\t\t_exceptions.add(\n\t\t\t\tnew Exception(\n\t\t\t\t\t\"Invalid \" + conditionElementName + \" element\" + filePath +\n\t\t\t\t\t\t\":\" + element.attributeValue(\"line-number\")));\n\t\t}\n\n\t\tElement thenElement = childElements.get(1);\n\n\t\tif (Validator.equals(\"then\", thenElement.getName())) {\n\t\t\t_validateHasChildElements(thenElement, filePath);\n\t\t\t_validateHasNoAttributes(thenElement, filePath);\n\n\t\t\t_parseElements(thenElement, filePath);\n\t\t}\n\t\telse {\n\t\t\t_exceptions.add(\n\t\t\t\tnew Exception(\n\t\t\t\t\t\"Missing then element\" + filePath + \":\" +\n\t\t\t\t\t\telement.attributeValue(\"line-number\")));\n\t\t}\n\t}","id":69052,"modified_method":"private static void _validateElseIfElement(\n\t\tElement element, String filePath) {\n\n\t\t_validateHasChildElements(element, filePath);\n\t\t_validateHasNoAttributes(element, filePath);\n\t\t_validateNumberOfChildElements(element, 2, filePath);\n\t\t_validateThenElement(element, filePath);\n\n\t\tList<Element> childElements = element.elements();\n\n\t\tList<String> conditionTags = Arrays.asList(\n\t\t\t\"and\", \"condition\", \"contains\", \"equals\", \"isset\", \"not\", \"or\");\n\n\t\tElement conditionElement = childElements.get(0);\n\n\t\tString conditionElementName = conditionElement.getName();\n\n\t\tif (conditionTags.contains(conditionElementName)) {\n\t\t\t_validateConditionElement(conditionElement, filePath);\n\t\t}\n\t\telse {\n\t\t\t_exceptions.add(\n\t\t\t\tnew Exception(\n\t\t\t\t\t\"Invalid \" + conditionElementName + \" element\\n\" +\n\t\t\t\t\t\tfilePath + \":\" +\n\t\t\t\t\t\telement.attributeValue(\"line-number\")));\n\t\t}\n\n\t\tElement thenElement = element.element(\"then\");\n\n\t\t_validateHasChildElements(thenElement, filePath);\n\t\t_validateHasNoAttributes(thenElement, filePath);\n\n\t\t_parseElements(thenElement, filePath);\n\t}","commit_id":"d5442d5e834f072fb7def0e0142c2101217c83a7","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t\t * Returns the nth geometry of a geometry collection.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @param ringNumber index of i-th interior ring\n\t\t * @return n-th interior ring geometry (LineString) as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value interiorRingN(final ANode node, Int ringNumber) throws QueryException {\n\t\t\t\n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t\t// Retrieve element name\n\t\t\tQNm qname = node.qname();\n\n\t\t\t// Check QName\n\t\t\tif(qname.eq(Q_GML_POLYGON)) {\n\t\t\t\tGeometry geom = gmlReader(node);\n\t\t\t\tint temp = ((Polygon) geom).getNumInteriorRing();\n\t\t\t    if (((BigInteger) ringNumber.toJava()).intValue() < 1 || ((BigInteger) ringNumber.toJava()).intValue() > temp)\n\t\t\t    \tthrow GeoErrors.outOfRangeIdx(ringNumber); \t  \n\t\t\t    LineString ring = ((Polygon) geom).getInteriorRingN(((BigInteger) ringNumber.toJava()).intValue() - 1);\n\t\t\t    \t// Write the Geometry in GML2 format\n\t\t\t\t\treturn gmlWriter(ring);\n\t\t  \t}\n\t\t\tif (qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING)\n\t\t\t\t\t|| qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t\t|| qname.eq(Q_GML_LINEARRING) || qname.eq(Q_GML_MULTIPOLYGON))\n\t\t\t\tthrow GeoErrors.polygonNeeded(qname.local());\n\t\t\n\t\t\tthrow GeoErrors.unrecognizedGeo(qname.local());\n\t\t}","id":69053,"modified_method":"/**\n\t\t * Returns the nth geometry of a geometry collection.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @param ringNumber index of i-th interior ring\n\t\t * @return n-th interior ring geometry (LineString) as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value interiorRingN(final ANode node, Int ringNumber) throws QueryException {\n\t\t\t\n\t\t\t// Check Node\n\t\t\t  QNm[] polygon = {Q_GML_POLYGON};\n\t\t\t\tQNm[] other = {Q_GML_POINT, Q_GML_LINEARRING, Q_GML_LINESTRING,\n\t            Q_GML_MULTILINESTRING, Q_GML_MULTIPOINT, Q_GML_MULTIPOLYGON};\n\t\t\t\tif (checkNode(node, polygon)) {\n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  \n\t\t\t\t  int temp = ((Polygon) geom).getNumInteriorRing();\n\t\t\t\t  if (((BigInteger) ringNumber.toJava()).intValue() < 1 \n\t\t\t\t      || ((BigInteger) ringNumber.toJava()).intValue() > temp)\n\t\t\t\t    throw GeoErrors.outOfRangeIdx(ringNumber); \t  \n\t\t\t    \n\t\t\t\t  LineString ring = ((Polygon) geom).getInteriorRingN(((BigInteger) ringNumber.toJava()).intValue() - 1);\n\t\t\t    // Write the Geometry in GML2 format\n\t\t\t    return gmlWriter(ring);\n\t\t\t\t}\n        if (checkNode(node, other))\n          throw GeoErrors.polygonNeeded(node.qname().local());\n        throw GeoErrors.unrecognizedGeo(node.qname().local());       \n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a gml:Point that is interior of this geometry.\n\t\t * If it cannot be inside the geometry, then it will be on the boundary.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return a point as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value pointOnSurface(final ANode node) throws QueryException {\n\t\t  \n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t\t// Retrieve element name\n\t\t\tQNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\tif(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t\t    || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t    || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  \n\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t  Point point = geom.getInteriorPoint();\n\t\t\t// Write the Geometry in GML2 format\n\t\t\t  return gmlWriter(point);\n\t\t\t}\n\t\t\t  \n\t\t\tthrow GeoErrors.unrecognizedGeo(qname.local());\n\t\t}","id":69054,"modified_method":"/**\n\t\t * Returns a gml:Point that is interior of this geometry.\n\t\t * If it cannot be inside the geometry, then it will be on the boundary.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return a point as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value pointOnSurface(final ANode node) throws QueryException {\n\t\t  \n\t\t// Check QName\n      if (checkNode(node, new QNm[0])) {\n    \t  Geometry geom = gmlReader(node);\n\t\t\t// Write the Geometry in GML2 format\n\t\t\t  return gmlWriter(geom.getInteriorPoint());\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t   * Returns the dimension of an item.\n\t   * @param node xml element containing gml object(s)\n\t   * @return dimension\n\t   * @throws QueryException query exception\n\t   */\n\t  public Int dimension(final ANode node) throws QueryException {\n\n\t\t if(node.type != NodeType.ELM) \n\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t// Retrieve element name\n\t\t  QNm qname = node.qname();\n\n\t    // Check QName\n\t    if(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING)\n\t       || qname.eq(Q_GML_POLYGON) || qname.eq(Q_GML_MULTIPOINT)\n\t       || qname.eq(Q_GML_MULTILINESTRING) || qname.eq(Q_GML_MULTIPOLYGON)\n\t       || qname.eq(Q_GML_LINEARRING)) {\n\t    \t\n\t    \tGeometry geom = gmlReader(node);\n\t\t    return Int.get(geom.getDimension());\n\t    }\n\t    throw GeoErrors.unrecognizedGeo(node);\n\t\n\t  }","id":69055,"modified_method":"/**\n\t   * Returns the dimension of an item.\n\t   * @param node xml element containing gml object(s)\n\t   * @return dimension\n\t   * @throws QueryException query exception\n\t   */\n\t  public Int dimension(final ANode node) throws QueryException {\n\n\t    // Check node and read the valid geometry\n\t      if (checkNode(node, new QNm[0])) {\n\t        Geometry geom = gmlReader(node);\n\t        return Int.get(geom.getDimension());\n\t      }\n\t      return null;  \n\t  }","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the mathematical centroid of the geometry as a gml:Point.\n\t\t * The point is not guaranteed to be on the surface.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return centroid geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value centroid(final ANode node) throws QueryException {\n\t\t  \n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t\t// Retrieve element name\n\t\t\tQNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\tif(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t\t    || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t    || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t \n\t\t\t\tGeometry geom = gmlReader(node);\n\t\t\t\tPoint center = geom.getCentroid();\n\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\treturn gmlWriter(center);\n\t\t\t}\n\t\t\tthrow GeoErrors.unrecognizedGeo(qname.local());\n\t\t }","id":69056,"modified_method":"/**\n\t\t * Returns the mathematical centroid of the geometry as a gml:Point.\n\t\t * The point is not guaranteed to be on the surface.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return centroid geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value centroid(final ANode node) throws QueryException {\n\t\t  \n\t\t// Check QName\n      if (checkNode(node, new QNm[0])) {\n    \t\tGeometry geom = gmlReader(node);\n\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\treturn gmlWriter(geom.getCentroid());\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the area of a Geometry. Areal Geometries have a non-zero area.\n\t\t * Returns zero for Point and Lines.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return geometry area as a double vaue\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Dbl area(final ANode node) throws QueryException {\n\t\t  \n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t\t// Retrieve element name\n\t\t\tQNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\tif(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t\t    || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t    || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\n\t\t\t\tGeometry geom = gmlReader(node);\n\t\t\t\treturn Dbl.get(geom.getArea());\n\t\t\t}\n\t\t\tthrow GeoErrors.unrecognizedGeo(qname.local());\n\t\t }","id":69057,"modified_method":"/**\n\t\t * Returns the area of a Geometry. Areal Geometries have a non-zero area.\n\t\t * Returns zero for Point and Lines.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return geometry area as a double vaue\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Dbl area(final ANode node) throws QueryException {\n\t\t  \n\t\t// Check QName\n      if (checkNode(node, new QNm[0])) {\n    \t\tGeometry geom = gmlReader(node);\n\t\t\t\treturn Dbl.get(geom.getArea());\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a boolean value that shows if this geometry is disjoint to the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln disjoint(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\n\t\t\tQNm qname1 = node1.qname();\n\t\t\tQNm qname2 = node2.qname();\n\n\t\t\t// Check QName\n\t\t\tif (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t \n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t return Bln.get(geom1.disjoint(geom2));\n\t\t\t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t}\n\t\t\tthrow GeoErrors.unrecognizedGeo(qname1.local());\n\t\t}","id":69058,"modified_method":"/**\n\t\t * Returns a boolean value that shows if this geometry is disjoint to the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln disjoint(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n      // Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n          Geometry geom1 = gmlReader(node1);\n          Geometry geom2 = gmlReader(node2);\n          return Bln.get(geom1.disjoint(geom2));\n        }\n        return null;\n      }\n      return null;\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the outer ring of a polygon, in GML.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return exterior ring geometry (LineString) as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value exteriorRing(final ANode node) throws QueryException {\n\t\t  \n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t  if(qname.eq(Q_GML_POLYGON)) {\n\t\t\t\t  \n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  LineString ring = ((Polygon) geom).getExteriorRing();\n\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t  return gmlWriter(ring);\n\t\t\t  }\n\t\t\t  if (qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING)\n\t\t\t      || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname.eq(Q_GML_LINEARRING) || qname.eq(Q_GML_MULTIPOLYGON))\n\t\t\t\t  throw GeoErrors.polygonNeeded(qname.local());\n\t\t\t  \n\t\t\t  throw GeoErrors.unrecognizedGeo(node.qname().local());\n\t\t}","id":69059,"modified_method":"/**\n\t\t * Returns the outer ring of a polygon, in GML.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return exterior ring geometry (LineString) as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value exteriorRing(final ANode node) throws QueryException {\n\t\t  \n      // Check Node\n      QNm[] polygon = {Q_GML_POLYGON};\n      QNm[] other = {Q_GML_POINT, Q_GML_LINEARRING, Q_GML_LINESTRING,\n            Q_GML_MULTILINESTRING, Q_GML_MULTIPOINT, Q_GML_MULTIPOLYGON};\n      if (checkNode(node, polygon)) {\n\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\treturn gmlWriter(((Polygon) geom).getExteriorRing());\n\t\t\t}\n\t\t\tif (checkNode(node, other))\n\t\t\t  throw GeoErrors.polygonNeeded(node);\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the number of points in a geometry.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return number of points int value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Int numPoints(final ANode node) throws QueryException {\n\n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_LINEARRING)\n\t\t\t      || qname.eq(Q_GML_MULTILINESTRING) || qname.eq(Q_GML_POINT)\n\t\t\t      || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_POLYGON)\n\t\t\t      || qname.eq(Q_GML_MULTIPOLYGON)) {\n\t\t\t\t  \n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  return Int.get(geom.getNumPoints());\n\t\t\t  }\n//\t\t\t  if (qname.eq(Q_GML_POINT) || qname.eq(Q_GML_MULTIPOINT)\n//\t\t\t      || qname.eq(Q_GML_POLYGON) || qname.eq(Q_GML_MULTIPOLYGON))\n//\t\t\t\t  throw GeoErrors.lineNeeded(qname.local());\n\t\t\t  \n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t}","id":69060,"modified_method":"/**\n\t\t * Returns the number of points in a geometry.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return number of points int value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Int numPoints(final ANode node) throws QueryException {\n\n\t    // Check QName\n      if(checkNode(node, new QNm[0])) {\n\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t  return Int.get(geom.getNumPoints());\n\t\t  }\n//\t\t\t  if (qname.eq(Q_GML_POINT) || qname.eq(Q_GML_MULTIPOINT)\n//\t\t\t      || qname.eq(Q_GML_POLYGON) || qname.eq(Q_GML_MULTIPOLYGON))\n//\t\t\t\t  throw GeoErrors.lineNeeded(qname.local());\n      return null;\n    }","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the end Point of a line.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return end point geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value endPoint(final ANode node) throws QueryException {\n\t\t \t\t\t\n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if(qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  if (geom instanceof LineString) {\n\t\t\t\t\t  Point point = ((LineString) geom).getEndPoint();\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\t  return gmlWriter(point);\n\t\t\t\t  } else if (geom instanceof LinearRing) {\n\t\t\t\t\t  Point point = ((LinearRing) geom).getEndPoint();\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\t  return gmlWriter(point);\n\t\t\t\t  }\n\t\t\t  }\n\t\t\t  if (qname.eq(Q_GML_POINT) || qname.eq(Q_GML_MULTIPOINT) \n\t\t\t\t  || qname.eq(Q_GML_POLYGON) || qname.eq(Q_GML_MULTIPOLYGON)\n\t\t\t      || qname.eq(Q_GML_MULTILINESTRING))\n\t\t\t\t  throw GeoErrors.lineNeeded(qname.local());\n\t\t\t  \n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t }","id":69061,"modified_method":"/**\n\t\t * Returns the end Point of a line.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return end point geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value endPoint(final ANode node) throws QueryException {\n\t\t \t\t\t\n      // Check QName\n      QNm[] line = {Q_GML_LINEARRING, Q_GML_LINESTRING};\n      QNm[] other = {Q_GML_POLYGON, Q_GML_MULTILINESTRING, Q_GML_MULTIPOINT,\n          Q_GML_MULTIPOLYGON};\n      if(checkNode(node, line)) {\n        Geometry geom = gmlReader(node);\n        if (geom instanceof LineString) {\n          Point point = ((LineString) geom).getEndPoint();\n          // Write the Geometry in GML2 format\n          return gmlWriter(point);\n        } \n        else if (geom instanceof LinearRing) {\n          Point point = ((LinearRing) geom).getEndPoint();\n          // Write the Geometry in GML2 format\n          return gmlWriter(point);\n        }\n      }\n      if(checkNode(node, other)) \n        throw GeoErrors.lineNeeded(node.qname().local());\n      return null;\n\t\t }","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Checks if the line is closed loop. That is, if the start Point is same with end Point.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln isClosed(final ANode node) throws QueryException {\n\t\t\t\n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t\t  // Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_LINEARRING)\n\t\t\t      || qname.eq(Q_GML_MULTILINESTRING)) {\n\t\t\n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  if (geom instanceof LineString) \n\t\t\t\t\t  return Bln.get(((LineString) geom).isClosed());\n\t\t\t\t\t  \n\t\t\t\t  if (geom instanceof LinearRing) \n\t\t\t\t\t  return Bln.get(((LinearRing) geom).isClosed());\n\t\t\t\t  \n\t\t\t\t  if (geom instanceof MultiLineString) \n\t\t\t\t\t  return Bln.get(((MultiLineString) geom).isClosed());\n\t\t\t   \n\t\t\t  }\n\t\t\t  if (qname.eq(Q_GML_POINT) || qname.eq(Q_GML_MULTIPOINT)\n\t\t\t       || qname.eq(Q_GML_POLYGON) || qname.eq(Q_GML_MULTIPOLYGON))\n\t\t\t\t  throw GeoErrors.lineNeeded(qname.local());\n\t\t\t  \n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t}","id":69062,"modified_method":"/**\n\t\t * Checks if the line is closed loop. That is, if the start Point is same with end Point.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln isClosed(final ANode node) throws QueryException {\n\t\t\t\n      // Check QName\n      QNm[] line = {Q_GML_LINEARRING, Q_GML_LINESTRING, Q_GML_MULTILINESTRING};\n      QNm[] other = {Q_GML_POLYGON, Q_GML_MULTIPOINT, Q_GML_MULTIPOLYGON};\n      if(checkNode(node, line)) {\n        Geometry geom = gmlReader(node);\n\t\t\t\tif (geom instanceof LineString) \n\t\t\t\t return Bln.get(((LineString) geom).isClosed());\n\t\t\t\t\t  \n\t\t\t\tif (geom instanceof LinearRing) \n\t\t\t\t return Bln.get(((LinearRing) geom).isClosed());\n\t\t\t\t  \n\t\t\t\tif (geom instanceof MultiLineString) \n\t\t\t\t return Bln.get(((MultiLineString) geom).isClosed());\n\t\t\t}\n\t\t\tif (checkNode(node, other))\n\t\t\t throw GeoErrors.lineNeeded(node.qname().local());\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the convex hull geometry of a geometry in GML, or the empty sequence.\n\t\t * The returned element must be either gml:Polygon, gml:LineString or gml:Point.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return convex hull geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value convexHull(final ANode node) throws QueryException {\n\t\t  \n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t  // Check QName\n\t\t\t  if(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t\t      || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  \n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  Geometry con = geom.convexHull();\n\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t  return gmlWriter(con);\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t }","id":69063,"modified_method":"/**\n\t\t * Returns the convex hull geometry of a geometry in GML, or the empty sequence.\n\t\t * The returned element must be either gml:Polygon, gml:LineString or gml:Point.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return convex hull geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value convexHull(final ANode node) throws QueryException {\n\t\t  \n\t\t// Check QName\n      if(checkNode(node, new QNm[0])) {\n        Geometry geom = gmlReader(node);\n\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\treturn gmlWriter(geom.convexHull());\n\t\t\t}\n\t\t\treturn null;\n\t\t }","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the start Point of a line.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return start point geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value startPoint(final ANode node) throws QueryException {\n\t\t  \n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if(qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  if (geom instanceof LineString) {\n\t\t\t\t\t  Point point = ((LineString) geom).getStartPoint();\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\t  return gmlWriter(point);\n\t\t\t\t  } else if (geom instanceof LinearRing) {\n\t\t\t\t\t  Point point = ((LinearRing) geom).getStartPoint();\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\t  return gmlWriter(point);\n\t\t\t\t  }\n\t\t\t  }\n\t\t\t  if (qname.eq(Q_GML_POINT) || qname.eq(Q_GML_MULTIPOINT) \n\t\t\t      ||qname.eq(Q_GML_POLYGON) || qname.eq(Q_GML_MULTIPOLYGON)\n\t\t\t      || qname.eq(Q_GML_MULTILINESTRING))\n\t\t\t\t  throw GeoErrors.lineNeeded(qname.local());\n\t\t\t  \n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t }","id":69064,"modified_method":"/**\n\t\t * Returns the start Point of a line.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return start point geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value startPoint(final ANode node) throws QueryException {\n\t\t  \n\t    // Check QName\n      QNm[] line = {Q_GML_LINEARRING, Q_GML_LINESTRING};\n      QNm[] other = {Q_GML_POLYGON, Q_GML_MULTILINESTRING, Q_GML_MULTIPOINT,\n          Q_GML_MULTIPOLYGON};\n      if(checkNode(node, line)) {\n        Geometry geom = gmlReader(node);\n\t\t\t\tif (geom instanceof LineString) {\n\t\t\t\t  Point point = ((LineString) geom).getStartPoint();\n\t\t\t\t  // Write the Geometry in GML2 format\n\t\t\t\t\treturn gmlWriter(point);\n\t\t\t\t} \n\t\t\t\telse if (geom instanceof LinearRing) {\n\t\t\t\t  Point point = ((LinearRing) geom).getStartPoint();\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\treturn gmlWriter(point);\n\t\t\t\t}\n\t\t\t}\n      if(checkNode(node, other)) \n        throw GeoErrors.lineNeeded(node.qname().local());\n\t\t\treturn null;\n\t\t }","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the boundary of the geometry, in GML. The return value is a sequence of either gml:Point or gml:LinearRing elements.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return boundary element (geometry)\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value boundary(final ANode node) throws QueryException {\n\t\t\t\n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t\t// Retrieve element name\n\t\t\tQNm qname = node.qname();\n\n\t\t\t// Check QName\n\t\t\tif(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t\t      || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t    \n\t\t\t    Geometry geom = gmlReader(node);\n\t\t\t    Geometry bound = geom.getBoundary();\n\t\t\t    // Write the Geometry in GML2 format\n\t\t\t    return gmlWriter(bound);\n\t\t\t}\n\t\t\tthrow GeoErrors.unrecognizedGeo(node);\n\t\t}","id":69065,"modified_method":"/**\n\t\t * Returns the boundary of the geometry, in GML. The return value is a sequence of either gml:Point or gml:LinearRing elements.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return boundary element (geometry)\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value boundary(final ANode node) throws QueryException {\n\t\t\t\n\t\t  // Check QName\n      if(checkNode(node, new QNm[0])) {\n        Geometry geom = gmlReader(node);\n\t\t\t  // Write the Geometry in GML2 format\n\t\t\t  return gmlWriter(geom.getBoundary());\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the x-coordinate value for point.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return x double value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Dbl x(final ANode node) throws QueryException {\n\t\t  \n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname.eq(Q_GML_POINT)) {\n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  return Dbl.get(geom.getCoordinate().x);\n\t\t\t  }\n\t\t\t  if (qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_POLYGON) || qname.eq(Q_GML_LINESTRING)\n\t\t\t      || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname.eq(Q_GML_LINEARRING))\n\t\t\t\t  throw GeoErrors.pointNeeded(qname.local());\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t }","id":69066,"modified_method":"/**\n\t\t * Returns the x-coordinate value for point.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return x double value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Dbl x(final ANode node) throws QueryException {\n\t\t  \n\t\t// Check QName\n      QNm[] point = {Q_GML_POINT};\n      QNm[] other = {Q_GML_LINEARRING, Q_GML_LINESTRING, Q_GML_POLYGON,\n          Q_GML_MULTILINESTRING, Q_GML_MULTIPOINT, Q_GML_MULTIPOLYGON};\n\t\t  if(checkNode(node, point)) {\n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  return Dbl.get(geom.getCoordinate().x);\n\t\t\t  }\n\t\t\tif (checkNode(node, other))\n\t\t\t\t  throw GeoErrors.pointNeeded(node.qname().local());\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the y-coordinate value for point.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return y double value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Dbl y(final ANode node) throws QueryException {\n\t\t  \n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname.eq(Q_GML_POINT)) {\n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  return Dbl.get(geom.getCoordinate().y);\n\t\t\t  }\n\t\t\t  if (qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_POLYGON) || qname.eq(Q_GML_LINESTRING)\n\t\t\t      || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname.eq(Q_GML_LINEARRING))\n\t\t\t\t  throw GeoErrors.pointNeeded(qname.local());\n\t\t\t  \n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t }","id":69067,"modified_method":"/**\n\t\t * Returns the y-coordinate value for point.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return y double value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Dbl y(final ANode node) throws QueryException {\n\t\t  \n\t\t// Check QName\n      QNm[] point = {Q_GML_POINT};\n      QNm[] other = {Q_GML_LINEARRING, Q_GML_LINESTRING, Q_GML_POLYGON,\n          Q_GML_MULTILINESTRING, Q_GML_MULTIPOINT, Q_GML_MULTIPOLYGON};\n      if(checkNode(node, point)) {\n          Geometry geom = gmlReader(node);\n          return Dbl.get(geom.getCoordinate().y);\n        }\n      if (checkNode(node, other))\n          throw GeoErrors.pointNeeded(node.qname().local());\n      return null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the nth geometry of a geometry collection, \n\t\t * or the geometry if the input is not a collection.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @param geoNumber integer number as the index of nth geometry\n\t\t * @return geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value geometryN(final ANode node, Int geoNumber) throws QueryException {\n\n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname.eq(Q_GML_POINT)  || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t\t      || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  \n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t      int temp = geom.getNumGeometries();\n\t\t\t      if (((BigInteger) geoNumber.toJava()).intValue() < 1 || ((BigInteger) geoNumber.toJava()).intValue() > temp)\n\t\t\t    \t  throw GeoErrors.outOfRangeIdx(geoNumber); \t  \n\t\t\t      Geometry geo = geom.getGeometryN(((BigInteger) geoNumber.toJava()).intValue() - 1);\n\t\t\t        // Write the Geometry in GML2 format\n\t\t\t      return gmlWriter(geo);\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t }","id":69068,"modified_method":"/**\n\t\t * Returns the nth geometry of a geometry collection, \n\t\t * or the geometry if the input is not a collection.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @param geoNumber integer number as the index of nth geometry\n\t\t * @return geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value geometryN(final ANode node, Int geoNumber) throws QueryException {\n\n\t\t// Check QName\n      if(checkNode(node, new QNm[0])) {\n        Geometry geom = gmlReader(node);\n\t\t\t  \n        int temp = geom.getNumGeometries();\n\t\t\t  if (((BigInteger) geoNumber.toJava()).intValue() < 1 || ((BigInteger) geoNumber.toJava()).intValue() > temp)\n\t\t\t    throw GeoErrors.outOfRangeIdx(geoNumber); \t  \n\t\t\t  \n\t\t\t  Geometry geo = geom.getGeometryN(((BigInteger) geoNumber.toJava()).intValue() - 1);\n\t\t\t  // Write the Geometry in GML2 format\n\t\t\t  return gmlWriter(geo);\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t   * Returns the gml:Envelope of the specified geometry. The envelope is the minimum bounding box of this geometry.\n\t   * @param node xml element containing gml object(s)\n\t   * @return envelop element\n\t   * @throws QueryException query exception\n\t   */\n\t  public Value envelope(final ANode node) throws QueryException {\n\t    \n\t\t  if(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t// Retrieve element name\n\t\t  QNm qname = node.qname();\n\n\t  // Check QName\n\t    if(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t       || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t       || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t    \t\n\t    \tGeometry geom = gmlReader(node);\n\t    \tGeometry env = geom.getEnvelope();\n\t    \t// Write the Geometry in GML2 format\n\t\t    return gmlWriter(env);\n\t    }\n\t    throw GeoErrors.unrecognizedGeo(node);\n\t  }","id":69069,"modified_method":"/**\n\t   * Returns the gml:Envelope of the specified geometry. The envelope is the minimum bounding box of this geometry.\n\t   * @param node xml element containing gml object(s)\n\t   * @return envelop element\n\t   * @throws QueryException query exception\n\t   */\n\t  public Value envelope(final ANode node) throws QueryException {\n\t    \n\t // Check QName\n      if(checkNode(node, new QNm[0])) {\n        Geometry geom = gmlReader(node);\n\t    \t// Write the Geometry in GML2 format\n\t\t    return gmlWriter(geom.getEnvelope());\n\t    }\n\t    return null;\n\t  }","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a boolean value that shows if this geometry overlaps the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln overlaps(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\n\t\t\t  QNm qname1 = node1.qname();\n\t\t\t  QNm qname2 = node2.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t  return Bln.get(geom1.overlaps(geom2));\n\t\t\t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname1.local());\n\t\t }","id":69070,"modified_method":"/**\n\t\t * Returns a boolean value that shows if this geometry overlaps the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln overlaps(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n\t\t// Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n          Geometry geom1 = gmlReader(node1);\n\t\t\t\t\tGeometry geom2 = gmlReader(node2);\n\t\t\t\t\treturn Bln.get(geom1.overlaps(geom2));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn null;\n\t\t }","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a geometric object that represents the Point set union of two geometries.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return union geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value union(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\n\t\t\t  QNm qname1 = node1.qname();\n\t\t\t  QNm qname2 = node2.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t\n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t  Geometry un = geom1.union(geom2);\n\t\t\t\t\t  // Write the Geometry in GML2 format\n\t\t\t\t\t  return gmlWriter(un);\n\t\t\t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname1.local());\n\t\t}","id":69071,"modified_method":"/**\n\t\t * Returns a geometric object that represents the Point set union of two geometries.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return union geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value union(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n\t    // Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n          Geometry geom1 = gmlReader(node1);\n\t\t\t\t\tGeometry geom2 = gmlReader(node2);\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\treturn gmlWriter(geom1.union(geom2));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the shortest distance in the units of the spatial reference system of geometry,\n\t\t * between the geometries.\n\t\t * The distance is the distance between a point on each of the geometries.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return distance double value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Dbl distance(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\n\t\t\t  QNm qname1 = node1.qname();\n\t\t\t  QNm qname2 = node2.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t\t  \n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t  return Dbl.get(geom1.distance(geom2));\n\t\t\t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname1.local());\n\t\t}","id":69072,"modified_method":"/**\n\t\t * Returns the shortest distance in the units of the spatial reference system of geometry,\n\t\t * between the geometries.\n\t\t * The distance is the distance between a point on each of the geometries.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return distance double value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Dbl distance(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n\t\t// Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n          Geometry geom1 = gmlReader(node1);\n\t\t\t\t\tGeometry geom2 = gmlReader(node2);\n\t\t\t\t\treturn Dbl.get(geom1.distance(geom2));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the number of interior rings in a polygon.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return integer number of interior rings\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Int numInteriorRing(final ANode node) throws QueryException {\n\t\t\t\n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t  // Retrieve element name\n\t\t\tQNm qname = node.qname();\n\n\t\t\tif(qname.eq(Q_GML_POLYGON)) {\n\t\t\t\tGeometry geom = gmlReader(node);\n\t\t\t\treturn Int.get(((Polygon) geom).getNumInteriorRing());\n\t\t\t}\n\t\t\tif (qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING)\n\t\t\t\t\t|| qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t\t|| qname.eq(Q_GML_LINEARRING) || qname.eq(Q_GML_MULTIPOLYGON))\n\t\t\t\tthrow GeoErrors.polygonNeeded(qname.local());\n\t\t \n\t\t\tthrow GeoErrors.unrecognizedGeo(qname.local());\n\t\t}","id":69073,"modified_method":"/**\n\t\t * Returns the number of interior rings in a polygon.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return integer number of interior rings\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Int numInteriorRing(final ANode node) throws QueryException {\n\t\t\t\n\t\t  // Check Node\n      QNm[] polygon = {Q_GML_POLYGON};\n      QNm[] other = {Q_GML_POINT, Q_GML_LINEARRING, Q_GML_LINESTRING,\n            Q_GML_MULTILINESTRING, Q_GML_MULTIPOINT, Q_GML_MULTIPOLYGON};\n      if (checkNode(node, polygon)) {\n        Geometry geom = gmlReader(node);\n\t\t\t\treturn Int.get(((Polygon) geom).getNumInteriorRing());\n\t\t\t}\n      if (checkNode(node, other))\n\t\t\t\tthrow GeoErrors.polygonNeeded(node.qname().local());\n      return null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Return a boolean value that shows weather the line is a ring or not.\n\t\t * A line is a ring if it is closed and simple.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln isRing(final ANode node) throws QueryException {\n\t\t  \n\t\t\t\n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  \n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  if (geom instanceof LineString)\n\t\t\t\t\t  return Bln.get(((LineString) geom).isRing());\n\t\t\t\t\t  \n\t\t\t\t  if (geom instanceof LinearRing)\n\t\t\t\t\t  return Bln.get(((LinearRing) geom).isRing());\n\t\t\t  }\n\t\n\t\t\t  if (qname.eq(Q_GML_POINT) || qname.eq(Q_GML_MULTIPOINT)\n\t\t\t      || qname.eq(Q_GML_MULTILINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t\t      || qname.eq(Q_GML_MULTIPOLYGON))\n\t\t\t\t  throw GeoErrors.lineNeeded(qname.local());\n\t\t\t  \n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t}","id":69074,"modified_method":"/**\n\t\t * Return a boolean value that shows weather the line is a ring or not.\n\t\t * A line is a ring if it is closed and simple.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln isRing(final ANode node) throws QueryException {\n\t\t  \n      // Check QName\n      QNm[] line = {Q_GML_LINEARRING, Q_GML_LINESTRING};\n      QNm[] other = {Q_GML_POLYGON, Q_GML_MULTILINESTRING, Q_GML_MULTIPOINT,\n          Q_GML_MULTIPOLYGON};\n      if(checkNode(node, line)) {\n        Geometry geom = gmlReader(node);\n\t\t\t\tif (geom instanceof LineString)\n\t\t\t\t return Bln.get(((LineString) geom).isRing());\n\t\t\t\t\t  \n\t\t\t\tif (geom instanceof LinearRing)\n\t\t\t\t return Bln.get(((LinearRing) geom).isRing());\n\t\t\t}\n      if (checkNode(node, other))\n\t\t\t\t  throw GeoErrors.lineNeeded(node.qname().local());\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a geometric object that represents the Point set symmetric difference of two geometries.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return symmetric difference geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value symDifference(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\n\t\t\t  QNm qname1 = node1.qname();\n\t\t\t  QNm qname2 = node2.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t      || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t \n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t  Geometry diff = geom1.symDifference(geom2);\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\t  return gmlWriter(diff);\n\t\t   \t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t }\n\t\t\t throw GeoErrors.unrecognizedGeo(qname1.local());\n\t\t}","id":69075,"modified_method":"/**\n\t\t * Returns a geometric object that represents the Point set symmetric difference of two geometries.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return symmetric difference geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value symDifference(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n\t    // Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n          Geometry geom1 = gmlReader(node1);\n\t\t\t\t\tGeometry geom2 = gmlReader(node2);\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\treturn gmlWriter(geom1.symDifference(geom2));\n\t\t   \t}\n\t\t\t\treturn null;\n      }\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a boolean value that shows if this geometry touches the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln touches(final ANode node1, final ANode node2) throws QueryException {\n\t\t\t\n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\t\t\t\t\t\t\t\t\n\t\t\tQNm qname1 = node1.qname();\n\t\t\tQNm qname2 = node2.qname();\n\n\t\t\t// Check QName\n\t\t\tif (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t \n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t  return Bln.get(geom1.touches(geom2));\n\t\t\t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t}\n\t\t\tthrow GeoErrors.unrecognizedGeo(qname1.local());\n\t\t}","id":69076,"modified_method":"/**\n\t\t * Returns a boolean value that shows if this geometry touches the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln touches(final ANode node1, final ANode node2) throws QueryException {\n\t\t\t\n      // Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n          Geometry geom1 = gmlReader(node1);\n\t\t\t\t\tGeometry geom2 = gmlReader(node2);\n\t\t\t\t\treturn Bln.get(geom1.touches(geom2));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the WKB format of a geometry.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return Well-Known Binary geometry representation\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic B64 asBinary(final ANode node) throws QueryException {\n\t\t  \n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t\t// Retrieve element name\n\t\t\tQNm qname = node.qname();\n\t\t\n\t\t  // Check QName\n\t\t\tif (qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t\t\t\t|| qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t\t|| qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\n\t\t\t\tGeometry geom = gmlReader(node);\n\t\t\t\tWKBWriter wkbWriter = new WKBWriter();\n\t\t\t\tbyte[] bin = wkbWriter.write(geom);\n\t\t\t\tB64 binary = new B64(bin);\n\t\t\t\treturn binary;\n\t\t\t}\n\t\t\tthrow GeoErrors.unrecognizedGeo(node);\n\t\t}","id":69077,"modified_method":"/**\n\t\t * Returns the WKB format of a geometry.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return Well-Known Binary geometry representation\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic B64 asBinary(final ANode node) throws QueryException {\n\t\t  \n\t\t  // Check QName\n      if(checkNode(node, new QNm[0])) {\n        Geometry geom = gmlReader(node);\n\t\t\t\tWKBWriter wkbWriter = new WKBWriter();\n\t\t\t\tB64 binary = new B64(wkbWriter.write(geom));\n\t\t\t\treturn binary;\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a polygon that represents all Points whose distance from this geometric object is less than or equal to distance.\n\t\t * The returned element must be either gml:Polygon, gml:LineString or gml:Point.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @param distance specific distance from the $geometry (the buffer width)\n\t\t * @return buffer geometry as gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value buffer(final ANode node, final Dbl distance) throws QueryException {\n\t\t  \n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t  // Check QName\n\t\t\t  if(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t\t      || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  \n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  Geometry buff = geom.buffer(distance.toJava().doubleValue());\n\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t  return gmlWriter(buff);\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t }","id":69078,"modified_method":"/**\n\t\t * Returns a polygon that represents all Points whose distance from this geometric object is less than or equal to distance.\n\t\t * The returned element must be either gml:Polygon, gml:LineString or gml:Point.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @param distance specific distance from the $geometry (the buffer width)\n\t\t * @return buffer geometry as gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value buffer(final ANode node, final Dbl distance) throws QueryException {\n\t\t  \n\t\t// Check QName\n      if(checkNode(node, new QNm[0])) {\n        Geometry geom = gmlReader(node);\n\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\treturn gmlWriter(geom.buffer(distance.toJava().doubleValue()));\n\t\t\t}\n\t\t\treturn null;\n\t\t }","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a boolean value that shows if this geometry intersects the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln intersects(final ANode node1, final ANode node2) throws QueryException {\n\t\t\t\n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\n\t\t\tQNm qname1 = node1.qname();\n\t\t\tQNm qname2 = node2.qname();\n\n\t\t\t// Check QName\n\t\t\tif (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t\t\t|| qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t  \n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t  return Bln.get(geom1.intersects(geom2));\n\t\t\t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t}\n\t\t  throw GeoErrors.unrecognizedGeo(qname1.local());\n\t}","id":69079,"modified_method":"/**\n\t\t * Returns a boolean value that shows if this geometry intersects the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln intersects(final ANode node1, final ANode node2) throws QueryException {\n\t\t\t\n\t     // Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n          Geometry geom1 = gmlReader(node1);\n\t\t\t\t\tGeometry geom2 = gmlReader(node2);\n\t\t\t\t\treturn Bln.get(geom1.intersects(geom2));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t  return null;\n\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a boolean value that shows if this geometry is within the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln within(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\n\t\t\t  QNm qname1 = node1.qname();\n\t\t\t  QNm qname2 = node2.qname();\n\n\t\t\t  // \tCheck QName\n\t\t\t  if (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t  \n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t return Bln.get(geom1.within(geom2));\n\t\t\t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname1.local());\n\t\t}","id":69080,"modified_method":"/**\n\t\t * Returns a boolean value that shows if this geometry is within the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln within(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n      // Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n          Geometry geom1 = gmlReader(node1);\n\t\t\t\t\tGeometry geom2 = gmlReader(node2);\n\t\t\t\t\treturn Bln.get(geom1.within(geom2));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns number of geometries in a geometry collection, \n\t\t * or 1 if the input is not a collection.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return integer value of number of geometries\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Int numGeometries(final ANode node) throws QueryException {\n\n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname.eq(Q_GML_POINT)  || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t\t      || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  \n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t      return Int.get(geom.getNumGeometries());\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t }","id":69081,"modified_method":"/**\n\t\t * Returns number of geometries in a geometry collection, \n\t\t * or 1 if the input is not a collection.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return integer value of number of geometries\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Int numGeometries(final ANode node) throws QueryException {\n\n\t\t// Check QName\n      if(checkNode(node, new QNm[0])) {\n        Geometry geom = gmlReader(node);\n\t\t\t  return Int.get(geom.getNumGeometries());\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a boolean value that shows if this geometry contains the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln contains(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\n\t\t\t  QNm qname1 = node1.qname();\n\t\t\t  QNm qname2 = node2.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t  return Bln.get(geom1.contains(geom2));\n\t\t\t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname1.local());\n\t\t  }","id":69082,"modified_method":"/**\n\t\t * Returns a boolean value that shows if this geometry contains the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln contains(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n      // Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n          Geometry geom1 = gmlReader(node1);\n\t\t\t\t\tGeometry geom2 = gmlReader(node2);\n\t\t\t\t\treturn Bln.get(geom1.contains(geom2));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a geometric object that represents the Point set difference of two geometries.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return difference geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value difference(final ANode node1, final ANode node2) throws QueryException {\n\t\t\t\n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t  // Retrieve element names\n\t\t\t  QNm qname1 = node1.qname();\n\t\t\t  QNm qname2 = node2.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t\n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t  Geometry diff = geom1.difference(geom2);\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\t  return gmlWriter(diff);\n\t\t\t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname1.local());\n\t\t  }","id":69083,"modified_method":"/**\n\t\t * Returns a geometric object that represents the Point set difference of two geometries.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return difference geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value difference(final ANode node1, final ANode node2) throws QueryException {\n\t\t\t\n\t    // Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n          Geometry geom1 = gmlReader(node1);\n\t\t\t\t\tGeometry geom2 = gmlReader(node2);\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\treturn gmlWriter(geom1.difference(geom2));\n\t\t\t\t}\n        return null;\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the length of this Geometry. Linear geometries return their length.\n\t\t * Areal geometries return their parameter. Others return 0.0\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return length double value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Dbl length(final ANode node) throws QueryException {\n\t\t  \n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t\t      || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  \n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  return Dbl.get(geom.getLength());\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t }","id":69084,"modified_method":"/**\n\t\t * Returns the length of this Geometry. Linear geometries return their length.\n\t\t * Areal geometries return their parameter. Others return 0.0\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return length double value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Dbl length(final ANode node) throws QueryException {\n\t\t  \n\t\t// Check QName\n      if(checkNode(node, new QNm[0])) {\n        Geometry geom = gmlReader(node);\n\t\t\t\treturn Dbl.get(geom.getLength());\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a boolean value which shows if the specified geometry is simple or not,\n\t\t * which has no anomalous geometric points, such as self intersection or self tangency.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln isSimple(final ANode node) throws QueryException {\n\t\t\t\n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t\t// Retrieve element name\n\t\t\tQNm qname = node.qname();\n\t\t\t\n\t\t\t// Check QName\n\t\t\tif(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t\t\t|| qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t|| qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t\t    \n\t\t\t\tGeometry geom = gmlReader(node);\n\t\t\t    return Bln.get(geom.isSimple());\n\t\t\t}\n\t\t\tthrow GeoErrors.unrecognizedGeo(node);\n\t\t}","id":69085,"modified_method":"/**\n\t\t * Returns a boolean value which shows if the specified geometry is simple or not,\n\t\t * which has no anomalous geometric points, such as self intersection or self tangency.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln isSimple(final ANode node) throws QueryException {\n\t\t\t\n\t\t  // Check QName\n      if(checkNode(node, new QNm[0])) {\n        Geometry geom = gmlReader(node);\t\t\t    \n        return Bln.get(geom.isSimple());\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a boolean value that shows if whether relationships between the boundaries,\n\t\t * interiors and exteriors of two geometries match the pattern specified in intersection-matrix-pattern.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @param intersectionMatrix intersection matrix for two geometries\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln relate(final ANode node1, final ANode node2, final Str intersectionMatrix) throws QueryException {\n\t\t  \n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\n\t\t\t  QNm qname1 = node1.qname();\n\t\t\t  QNm qname2 = node2.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING)\n\t\t\t\t\t || qname1.eq(Q_GML_POLYGON) || qname1.eq(Q_GML_LINEARRING)\n\t\t\t\t\t || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t     || qname1.eq(Q_GML_MULTIPOLYGON)) {\n\t\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t\t  || qname2.eq(Q_GML_POLYGON)|| qname2.eq(Q_GML_LINEARRING)\n\t\t\t\t\t\t  || qname2.eq(Q_GML_MULTIPOINT) || qname2.eq(Q_GML_MULTILINESTRING) \n\t\t\t\t  \t\t  || qname2.eq(Q_GML_MULTIPOLYGON)) {\n\n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t  return Bln.get(geom1.relate(geom2, intersectionMatrix.toJava()));\n\t\t\t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname1.local());\n\t\t}","id":69086,"modified_method":"/**\n\t\t * Returns a boolean value that shows if whether relationships between the boundaries,\n\t\t * interiors and exteriors of two geometries match the pattern specified in intersection-matrix-pattern.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @param intersectionMatrix intersection matrix for two geometries\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln relate(final ANode node1, final ANode node2, final Str intersectionMatrix) throws QueryException {\n\t\t  \n\t\t// Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n          Geometry geom1 = gmlReader(node1);\n\t\t\t\t\tGeometry geom2 = gmlReader(node2);\n\t\t\t\t\treturn Bln.get(geom1.relate(geom2, intersectionMatrix.toJava()));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the nth point of a line.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @param pointNumber index of i-th point\n\t\t * @return n-th point as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value pointN(final ANode node, final Int pointNumber) throws QueryException {\n\n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t  // Check QName\n\t\t\t  if (qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  \n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  int temp = geom.getNumPoints();\n\t\t\t      if (((BigInteger) pointNumber.toJava()).intValue() < 1 || ((BigInteger) pointNumber.toJava()).intValue() > temp)\n\t\t\t    \t  throw GeoErrors.outOfRangeIdx(pointNumber); \n\t\t\t      if (geom instanceof LineString) {\n\t\t\t\t\t\t  Point point = ((LineString) geom).getPointN(((BigInteger) pointNumber.toJava()).intValue() - 1);\n\t\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\t\t return gmlWriter(point);\n\t\t\t\t\t  }\n\t\t\t\t\t  if (geom instanceof LinearRing) {\n\t\t\t\t\t\t  Point point = ((LinearRing) geom).getPointN(((BigInteger) pointNumber.toJava()).intValue() - 1);\n\t\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\t\t  return gmlWriter(point);  \n\t\t\t      }\n\t\t\t  }\n\t\t\t  if (qname.eq(Q_GML_POINT) || qname.eq(Q_GML_MULTIPOINT)\n\t\t\t\t  || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname.eq(Q_GML_POLYGON) || qname.eq(Q_GML_MULTIPOLYGON))\n\t\t\t\t  throw GeoErrors.lineNeeded(qname.local());\n\t\t\t  \n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t}","id":69087,"modified_method":"/**\n\t\t * Returns the nth point of a line.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @param pointNumber index of i-th point\n\t\t * @return n-th point as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value pointN(final ANode node, final Int pointNumber) throws QueryException {\n\n\t\t// Check QName\n      QNm[] line = {Q_GML_LINEARRING, Q_GML_LINESTRING};\n      QNm[] other = {Q_GML_POLYGON, Q_GML_MULTILINESTRING, Q_GML_MULTIPOINT,\n                      Q_GML_MULTIPOLYGON};\n      if (checkNode(node, line)) {\n        Geometry geom = gmlReader(node);\n        \n\t\t\t\tint temp = geom.getNumPoints();\n\t\t\t  if (((BigInteger) pointNumber.toJava()).intValue() < 1 || ((BigInteger) pointNumber.toJava()).intValue() > temp)\n\t\t\t    throw GeoErrors.outOfRangeIdx(pointNumber); \n\t\t\t  \n\t\t\t  if (geom instanceof LineString) {\n\t\t\t    Point point = ((LineString) geom).getPointN(((BigInteger) pointNumber.toJava()).intValue() - 1);\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t  return gmlWriter(point);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t  if (geom instanceof LinearRing) {\n\t\t\t\t  Point point = ((LinearRing) geom).getPointN(((BigInteger) pointNumber.toJava()).intValue() - 1);\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\treturn gmlWriter(point);  \n\t\t\t  }\n\t\t\t}\n      if (checkNode(node, other)) \n\t\t\t\t  throw GeoErrors.lineNeeded(node.qname().local());\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a boolean value that shows if this geometry crosses the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln crosses(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\n\t\t\tQNm qname1 = node1.qname();\n\t\t\tQNm qname2 = node2.qname();\n\n\t\t// Check QName\n\t\t\tif (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t      || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\n\t\t\t\t  \n\t\t\t\tif (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t\n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t  return Bln.get(geom1.crosses(geom2));\n\t\t\t\t}\n\t\t\t\tthrow GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t}\n\t\t\tthrow GeoErrors.unrecognizedGeo(qname1.local());\n\t\t}","id":69088,"modified_method":"/**\n\t\t * Returns a boolean value that shows if this geometry crosses the specified geometry.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln crosses(final ANode node1, final ANode node2) throws QueryException {\n\t\t  \n      // Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t  return Bln.get(geom1.crosses(geom2));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a geometric object representing the Point set intersection of two geometries.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return intersection geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value intersection(final ANode node1, final ANode node2) throws QueryException {\n\t\t \n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\n\t\t\t  QNm qname1 = node1.qname();\n\t\t\t  QNm qname2 = node2.qname();\n\t\t\t  \n\t\t\t// Check QName\n\t\t\t  if (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t\n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t  Geometry inter = geom1.intersection(geom2);\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\t  return gmlWriter(inter);\t\t\t\t  \n\t\t\t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t  }\n\t\t\t  throw GeoErrors.unrecognizedGeo(qname1.local());\n\t\t }","id":69089,"modified_method":"/**\n\t\t * Returns a geometric object representing the Point set intersection of two geometries.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return intersection geometry as a gml element\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Value intersection(final ANode node1, final ANode node2) throws QueryException {\n\t\t \n\t    // Check nodes\n      if (checkNode(node1, new QNm[0])) {\n        if (checkNode(node2, new QNm[0])) {\n          Geometry geom1 = gmlReader(node1);\n\t\t\t\t\tGeometry geom2 = gmlReader(node2);\n\t\t\t\t\t// Write the Geometry in GML2 format\n\t\t\t\t\treturn gmlWriter(geom1.intersection(geom2));\t\t\t\t  \n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn null;\n\t\t }","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t   * Returns the name of the geometry type in the GML namespace, or the empty sequence.\n\t   * @param node xml element containing gml object(s)\n\t   * @return integer value of CRS of the geometry\n\t   * @throws QueryException query exception\n\t   */\n\t  public Int SRID(final ANode node) throws QueryException {\n\t\t\n\t\t  if(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t// Retrieve element name\n\t\t  QNm qname = node.qname();\n\n\t  // Check QName\n\t    if(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t        || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t        || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t    \t\n\t    \tGeometry geom = gmlReader(node);      \n\t\t    return Int.get(geom.getSRID());\n\t    }\n\t    throw GeoErrors.unrecognizedGeo(node);\n\t  }","id":69090,"modified_method":"/**\n\t   * Returns the name of the geometry type in the GML namespace, or the empty sequence.\n\t   * @param node xml element containing gml object(s)\n\t   * @return integer value of CRS of the geometry\n\t   * @throws QueryException query exception\n\t   */\n\t  public Int SRID(final ANode node) throws QueryException {\n\t\t\n\t // Check QName\n      if(checkNode(node, new QNm[0])) {\n        Geometry geom = gmlReader(node);      \n\t\t    return Int.get(geom.getSRID());\n\t    }\n\t    return null;\n\t  }","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t   * Returns the WKT format of a geometry.\n\t   * @param node xml element containing gml object(s)\n\t   * @return Well-Known Text geometry representation\n\t   * @throws QueryException query exception\n\t   */\n\t  public Str asText(final ANode node) throws QueryException {\n\t\t  \n\t\t  if(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t// Retrieve element name\n\t\t  QNm qname = node.qname();\n\n\t    // Check QName\n\t\t  if(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t\t        || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t        || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t\t    \t\n\t\t    \tGeometry geom = gmlReader(node);\n\t\t\t    WKTWriter wktWriter = new WKTWriter();\n\t\t\t    return Str.get(wktWriter.write(geom));\n\t\t    }\n\t\t   throw GeoErrors.unrecognizedGeo(node);\n\t  \t}","id":69091,"modified_method":"/**\n\t   * Returns the WKT format of a geometry.\n\t   * @param node xml element containing gml object(s)\n\t   * @return Well-Known Text geometry representation\n\t   * @throws QueryException query exception\n\t   */\n\t  public Str asText(final ANode node) throws QueryException {\n\t\t  \n\t    // Check QName\n      if(checkNode(node, new QNm[0])) { \n        Geometry geom = gmlReader(node);\n\t\t\t  WKTWriter wktWriter = new WKTWriter();\n\t\t\t  return Str.get(wktWriter.write(geom));\n\t\t    }\n\t\t   return null;\n\t  \t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns a boolean value that shows if two geometries are equal or not.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln isEqual(final ANode node1, final ANode node2) throws QueryException {\n\t\t\t\n\t\t\tif(node1.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\t\t\tif(node2.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node2.type);\n\n\t\t\t// Retrieve element names\n\t\t\tQNm qname1 = node1.qname();\n\t\t\tQNm qname2 = node2.qname();\n\n\t\t\t// Check QName\n\t\t\tif (qname1.eq(Q_GML_POINT) || qname1.eq(Q_GML_LINESTRING) || qname1.eq(Q_GML_POLYGON)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOINT) || qname1.eq(Q_GML_MULTILINESTRING)\n\t\t\t\t      || qname1.eq(Q_GML_MULTIPOLYGON) || qname1.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t  \n\t\t\t\t  if (qname2.eq(Q_GML_POINT) || qname2.eq(Q_GML_LINESTRING)\n\t\t\t\t\t || qname2.eq(Q_GML_POLYGON) || qname2.eq(Q_GML_MULTIPOINT)\n\t\t\t\t\t || qname2.eq(Q_GML_MULTILINESTRING) || qname2.eq(Q_GML_MULTIPOLYGON)\n\t\t\t\t\t || qname2.eq(Q_GML_LINEARRING)) {\n\t\t\t\t\t \n\t\t\t\t\t  Geometry geom1 = gmlReader(node1);\n\t\t\t\t\t  Geometry geom2 = gmlReader(node2);\n\t\t\t\t\t\t\n\t\t\t\t\t  return Bln.get(geom1.equals(geom2));\n\t\t\t\t  }\n\t\t\t\t  throw GeoErrors.unrecognizedGeo(qname2.local());\n\t\t\t}\n\t\t\tthrow GeoErrors.unrecognizedGeo(qname1.local());\n\t\t}","id":69092,"modified_method":"/**\n\t\t * Returns a boolean value that shows if two geometries are equal or not.\n\t\t * @param node1 xml element containing gml object(s)\n\t\t * @param node2 xml element containing gml object(s)\n\t\t * @return boolean value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Bln equals(final ANode node1, final ANode node2) throws QueryException {\n\t\t        \n\t\t  // Check nodes\n\t\t  if (checkNode(node1, new QNm[0])) {\n\t\t    if (checkNode(node2, new QNm[0])) {\n\t\t      Geometry geom1 = gmlReader(node1);\n\t\t      Geometry geom2 = gmlReader(node2);\n\t\t      return Bln.get(geom1.equals(geom2));\n\t\t\t\t}\n\t\t    return null;\n\t\t\t}\n\t\t\treturn null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t   * Returns the name of the geometry type in the GML namespace, or the empty sequence.\n\t   * @param node xml element containing gml object(s)\n\t   * @return geometry type\n\t   * @throws QueryException query exception\n\t   */\n\n\t  public QNm geometryType(final ANode node) throws QueryException {\n\t\t\n\t\t  if(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\t\t// Retrieve element name\n\t\t  QNm qname = node.qname();\n\n\t  // Check QName\n\t    if(qname.eq(Q_GML_POINT) || qname.eq(Q_GML_LINESTRING) || qname.eq(Q_GML_POLYGON)\n\t        || qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_MULTILINESTRING)\n\t        || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_LINEARRING)) {\n\t    \t\n\t    \tGeometry geom = gmlReader(node);      \n\t\t    QNm geomType = new QNm(\"gml:\" + geom.getGeometryType());\n\t\t    return geomType;\n\t    }\n\t    throw GeoErrors.unrecognizedGeo(node);\n\t  }","id":69093,"modified_method":"/**\n\t   * Returns the name of the geometry type in the GML namespace, or the empty sequence.\n\t   * @param node xml element containing gml object(s)\n\t   * @return geometry type\n\t   * @throws QueryException query exception\n\t   */\n\n\t  public QNm geometryType(final ANode node) throws QueryException {\n\t\t\n\t    // Check QName\n      if(checkNode(node, new QNm[0])) {\n        Geometry geom = gmlReader(node);\n\t\t    return new QNm(\"gml:\" + geom.getGeometryType());\n\t    }\n\t    return null;\n\t  }","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n\t\t * Returns the z-coordinate value for point.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return z double value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Dbl z(final ANode node) throws QueryException {\n\t\t  \n\t\t\tif(node.type != NodeType.ELM) \n\t\t\t\t Err.FUNCMP.thrw(null, this, NodeType.ELM, node.type);\n\n\t\t\t// Retrieve element name\n\t\t\t  QNm qname = node.qname();\n\t\n\t\t\t// Check QName\n\t\t\t  if (qname.eq(Q_GML_POINT)) {\n\t\t\t\t  Geometry geom = gmlReader(node);\n\t\t\t\t  return Dbl.get(geom.getCoordinate().z);\n\t\t\t  }\n\t\t\t  if (qname.eq(Q_GML_MULTIPOINT) || qname.eq(Q_GML_POLYGON) || qname.eq(Q_GML_LINESTRING)\n\t\t\t      || qname.eq(Q_GML_MULTIPOLYGON) || qname.eq(Q_GML_MULTILINESTRING)\n\t\t\t      || qname.eq(Q_GML_LINEARRING))\n\t\t\t\t  throw GeoErrors.pointNeeded(qname.local());\n\t\t\t  \n\t\t\t  throw GeoErrors.unrecognizedGeo(qname.local());\n\t\t }","id":69094,"modified_method":"/**\n\t\t * Returns the z-coordinate value for point.\n\t\t * @param node xml element containing gml object(s)\n\t\t * @return z double value\n\t\t * @throws QueryException query exception\n\t\t */\n\t\tpublic Dbl z(final ANode node) throws QueryException {\n\t\t  \n\t\t// Check QName\n      QNm[] point = {Q_GML_POINT};\n      QNm[] other = {Q_GML_LINEARRING, Q_GML_LINESTRING, Q_GML_POLYGON,\n          Q_GML_MULTILINESTRING, Q_GML_MULTIPOINT, Q_GML_MULTIPOLYGON};\n      if(checkNode(node, point)) {\n          Geometry geom = gmlReader(node);\n          return Dbl.get(geom.getCoordinate().z);\n        }\n      if (checkNode(node, other))\n          throw GeoErrors.pointNeeded(node.qname().local());\n      return null;\n\t\t}","commit_id":"098e9284655815e61c5512e3271fb4df05925ac4","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n     * Checks that the WSS4J results refer to the required signed/encrypted\n     * elements as defined by the XPath expressions in {@link #xPaths}.\n     * \n     * @param message\n     *            the SOAP message containing the signature\n     * \n     * @throws SoapFault\n     *             if there is an error evaluating an XPath or an element is not\n     *             covered by the required cryptographic operation\n     */\n    public void handleMessage(SoapMessage message) throws Fault {\n        final Collection<WSDataRef> signed = new HashSet<WSDataRef>();\n        final Collection<WSDataRef> encrypted = new HashSet<WSDataRef>();\n        \n        List<WSHandlerResult> results = CastUtils.cast(\n                (List<?>) message.get(WSHandlerConstants.RECV_RESULTS));\n        \n        for (final WSHandlerResult wshr : results) {\n            final List<WSSecurityEngineResult> wsSecurityEngineSignResults = \n                WSSecurityUtil.fetchAllActionResults(wshr.getResults(), WSConstants.SIGN);\n            \n            final List<WSSecurityEngineResult> wsSecurityEngineEncResults = \n                WSSecurityUtil.fetchAllActionResults(wshr.getResults(), WSConstants.ENCR);\n            \n            for (WSSecurityEngineResult wser : wsSecurityEngineSignResults) {\n            \n                List<WSDataRef> sl = CastUtils.cast((List<?>) wser\n                        .get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n                if (sl != null) {\n                    if (sl.size() == 1\n                        && sl.get(0).getName().equals(new QName(WSConstants.SIG_NS, WSConstants.SIG_LN))) {\n                        //endorsing the signature so don't include\n                        break;\n                    }\n                    \n                    for (WSDataRef r : sl) {\n                        signed.add(r);\n                    }\n                }\n            }\n            \n            for (WSSecurityEngineResult wser : wsSecurityEngineEncResults) {\n                List<WSDataRef> el = CastUtils.cast((List<?>) wser\n                        .get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n\n                if (el != null) {\n                    for (WSDataRef r : el) {\n                        encrypted.add(r);\n                    }\n                }\n            }\n        }\n        \n        CryptoCoverageUtil.reconcileEncryptedSignedRefs(signed, encrypted);\n        \n        if (this.xPaths != null && !this.xPaths.isEmpty()) {\n            // XPathFactory and XPath are not thread-safe so we must recreate them\n            // each request.\n            final XPathFactory factory = XPathFactory.newInstance();\n            final XPath xpath = factory.newXPath();\n            \n            if (this.prefixMap != null) {\n                xpath.setNamespaceContext(new MapNamespaceContext(this.prefixMap));\n            }\n            \n            for (XPathExpression xPathExpression : this.xPaths) {\n                Collection<WSDataRef> refsToCheck = null;\n                \n                switch (xPathExpression.getType()) {\n                case SIGNED:\n                    refsToCheck = signed;\n                    break;\n                case ENCRYPTED:\n                    refsToCheck = encrypted;\n                    break;\n                default:\n                    throw new IllegalStateException(\"Unexpected crypto type: \" \n                            + xPathExpression.getType());\n                }\n                        \n                try {\n                    SOAPMessage saajDoc = message.getContent(SOAPMessage.class);\n                    Element documentElement = null;\n                    if (saajDoc != null && saajDoc.getSOAPPart() != null) {\n                        documentElement = saajDoc.getSOAPPart().getEnvelope();\n                    }\n                    \n                    CryptoCoverageUtil.checkCoverage(\n                            documentElement,\n                            refsToCheck,\n                            xpath, \n                            Arrays.asList(xPathExpression.getXPath()),\n                            xPathExpression.getType(),\n                            xPathExpression.getScope());\n                } catch (WSSecurityException e) {\n                    throw new SoapFault(\"No \" + xPathExpression.getType()\n                            + \" element found matching XPath \"\n                            + xPathExpression.getXPath(), Fault.FAULT_CODE_CLIENT);\n                } catch (SOAPException e) {\n                    throw new SoapFault(\"No \" + xPathExpression.getType()\n                            + \" element found matching XPath \"\n                            + xPathExpression.getXPath(), Fault.FAULT_CODE_CLIENT);\n                }\n            }\n        }\n    }","id":69095,"modified_method":"/**\n     * Checks that the WSS4J results refer to the required signed/encrypted\n     * elements as defined by the XPath expressions in {@link #xPaths}.\n     * \n     * @param message\n     *            the SOAP message containing the signature\n     * \n     * @throws SoapFault\n     *             if there is an error evaluating an XPath or an element is not\n     *             covered by the required cryptographic operation\n     */\n    public void handleMessage(SoapMessage message) throws Fault {\n        if (this.xPaths == null || this.xPaths.isEmpty()) {\n            // return\n        }\n        \n        Element documentElement = null;\n        try {\n            SOAPMessage saajDoc = message.getContent(SOAPMessage.class);\n            SOAPEnvelope envelope = saajDoc.getSOAPPart().getEnvelope();\n            if (!checkFaults && envelope.getBody().hasFault()) {\n                return;\n            }\n            documentElement = envelope;\n        } catch (SOAPException e) {\n            throw new SoapFault(\"Error obtaining SOAP document\", Fault.FAULT_CODE_CLIENT);\n        }\n        \n        final Collection<WSDataRef> signed = new HashSet<WSDataRef>();\n        final Collection<WSDataRef> encrypted = new HashSet<WSDataRef>();\n        \n        List<WSHandlerResult> results = CastUtils.cast(\n                (List<?>) message.get(WSHandlerConstants.RECV_RESULTS));\n        \n        for (final WSHandlerResult wshr : results) {\n            final List<WSSecurityEngineResult> wsSecurityEngineSignResults = \n                WSSecurityUtil.fetchAllActionResults(wshr.getResults(), WSConstants.SIGN);\n            \n            final List<WSSecurityEngineResult> wsSecurityEngineEncResults = \n                WSSecurityUtil.fetchAllActionResults(wshr.getResults(), WSConstants.ENCR);\n            \n            for (WSSecurityEngineResult wser : wsSecurityEngineSignResults) {\n            \n                List<WSDataRef> sl = CastUtils.cast((List<?>) wser\n                        .get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n                if (sl != null) {\n                    if (sl.size() == 1\n                        && sl.get(0).getName().equals(new QName(WSConstants.SIG_NS, WSConstants.SIG_LN))) {\n                        //endorsing the signature so don't include\n                        break;\n                    }\n                    \n                    for (WSDataRef r : sl) {\n                        signed.add(r);\n                    }\n                }\n            }\n            \n            for (WSSecurityEngineResult wser : wsSecurityEngineEncResults) {\n                List<WSDataRef> el = CastUtils.cast((List<?>) wser\n                        .get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n\n                if (el != null) {\n                    for (WSDataRef r : el) {\n                        encrypted.add(r);\n                    }\n                }\n            }\n        }\n        \n        CryptoCoverageUtil.reconcileEncryptedSignedRefs(signed, encrypted);\n\n        // XPathFactory and XPath are not thread-safe so we must recreate them\n        // each request.\n        final XPathFactory factory = XPathFactory.newInstance();\n        final XPath xpath = factory.newXPath();\n\n        if (this.prefixMap != null) {\n            xpath.setNamespaceContext(new MapNamespaceContext(this.prefixMap));\n        }\n\n        for (XPathExpression xPathExpression : this.xPaths) {\n            Collection<WSDataRef> refsToCheck = null;\n\n            switch (xPathExpression.getType()) {\n            case SIGNED:\n                refsToCheck = signed;\n                break;\n            case ENCRYPTED:\n                refsToCheck = encrypted;\n                break;\n            default:\n                throw new IllegalStateException(\"Unexpected crypto type: \" \n                    + xPathExpression.getType());\n            }\n\n            try {\n                CryptoCoverageUtil.checkCoverage(\n                                                 documentElement,\n                                                 refsToCheck,\n                                                 xpath, \n                                                 Arrays.asList(xPathExpression.getXPath()),\n                                                 xPathExpression.getType(),\n                                                 xPathExpression.getScope());\n            } catch (WSSecurityException e) {\n                throw new SoapFault(\"No \" + xPathExpression.getType()\n                                    + \" element found matching XPath \"\n                                    + xPathExpression.getXPath(), Fault.FAULT_CODE_CLIENT);\n            }\n        }\n    }","commit_id":"9bce1ec680bad9b757813fdb45f8c1c8233be0e3","url":"https://github.com/apache/cxf"},{"original_method":"public int doubleIt(int numberToDouble) throws DoubleItFault {\n        return numberToDouble * 2;\n    }","id":69096,"modified_method":"public int doubleIt(int numberToDouble) throws DoubleItFault {\n        if (numberToDouble == 0) {\n            throw new DoubleItFault(\"0 can't be doubled!\");\n        }\n        return numberToDouble * 2;\n    }","commit_id":"9bce1ec680bad9b757813fdb45f8c1c8233be0e3","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * Checks that the WSS4J results refer to the required signed/encrypted\n     * elements as defined by the XPath expressions in {@link #xPaths}.\n     * \n     * @param message\n     *            the SOAP message containing the signature\n     * \n     * @throws SoapFault\n     *             if there is an error evaluating an XPath or an element is not\n     *             covered by the required cryptographic operation\n     */\n    public void handleMessage(SoapMessage message) throws Fault {\n        final Collection<WSDataRef> signed = new HashSet<WSDataRef>();\n        final Collection<WSDataRef> encrypted = new HashSet<WSDataRef>();\n        \n        List<WSHandlerResult> results = CastUtils.cast(\n                (List<?>) message.get(WSHandlerConstants.RECV_RESULTS));\n        \n        for (final WSHandlerResult wshr : results) {\n            final List<WSSecurityEngineResult> wsSecurityEngineSignResults = \n                WSS4JUtils.fetchAllActionResults(wshr.getResults(), WSConstants.SIGN);\n            \n            final List<WSSecurityEngineResult> wsSecurityEngineEncResults = \n                WSS4JUtils.fetchAllActionResults(wshr.getResults(), WSConstants.ENCR);\n            \n            for (WSSecurityEngineResult wser : wsSecurityEngineSignResults) {\n            \n                List<WSDataRef> sl = CastUtils.cast((List<?>) wser\n                        .get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n                if (sl != null) {\n                    if (sl.size() == 1\n                        && sl.get(0).getName().equals(new QName(WSConstants.SIG_NS, WSConstants.SIG_LN))) {\n                        //endorsing the signature so don't include\n                        break;\n                    }\n                    \n                    for (WSDataRef r : sl) {\n                        signed.add(r);\n                    }\n                }\n            }\n            \n            for (WSSecurityEngineResult wser : wsSecurityEngineEncResults) {\n                List<WSDataRef> el = CastUtils.cast((List<?>) wser\n                        .get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n\n                if (el != null) {\n                    for (WSDataRef r : el) {\n                        encrypted.add(r);\n                    }\n                }\n            }\n        }\n        \n        CryptoCoverageUtil.reconcileEncryptedSignedRefs(signed, encrypted);\n        \n        if (this.xPaths != null && !this.xPaths.isEmpty()) {\n            // XPathFactory and XPath are not thread-safe so we must recreate them\n            // each request.\n            final XPathFactory factory = XPathFactory.newInstance();\n            final XPath xpath = factory.newXPath();\n            \n            if (this.prefixMap != null) {\n                xpath.setNamespaceContext(new MapNamespaceContext(this.prefixMap));\n            }\n            \n            for (XPathExpression xPathExpression : this.xPaths) {\n                Collection<WSDataRef> refsToCheck = null;\n                \n                switch (xPathExpression.getType()) {\n                case SIGNED:\n                    refsToCheck = signed;\n                    break;\n                case ENCRYPTED:\n                    refsToCheck = encrypted;\n                    break;\n                default:\n                    throw new IllegalStateException(\"Unexpected crypto type: \" \n                            + xPathExpression.getType());\n                }\n                        \n                try {\n                    SOAPMessage saajDoc = message.getContent(SOAPMessage.class);\n                    Element documentElement = null;\n                    if (saajDoc != null && saajDoc.getSOAPPart() != null) {\n                        documentElement = saajDoc.getSOAPPart().getEnvelope();\n                    }\n                    \n                    CryptoCoverageUtil.checkCoverage(\n                            documentElement,\n                            refsToCheck,\n                            xpath, \n                            Arrays.asList(xPathExpression.getXPath()),\n                            xPathExpression.getType(),\n                            xPathExpression.getScope());\n                } catch (WSSecurityException e) {\n                    throw new SoapFault(\"No \" + xPathExpression.getType()\n                            + \" element found matching XPath \"\n                            + xPathExpression.getXPath(), Fault.FAULT_CODE_CLIENT);\n                } catch (SOAPException e) {\n                    throw new SoapFault(\"No \" + xPathExpression.getType()\n                            + \" element found matching XPath \"\n                            + xPathExpression.getXPath(), Fault.FAULT_CODE_CLIENT);\n                }\n            }\n        }\n    }","id":69097,"modified_method":"/**\n     * Checks that the WSS4J results refer to the required signed/encrypted\n     * elements as defined by the XPath expressions in {@link #xPaths}.\n     * \n     * @param message\n     *            the SOAP message containing the signature\n     * \n     * @throws SoapFault\n     *             if there is an error evaluating an XPath or an element is not\n     *             covered by the required cryptographic operation\n     */\n    public void handleMessage(SoapMessage message) throws Fault {\n        if (this.xPaths == null || this.xPaths.isEmpty()) {\n            // return\n        }\n        \n        Element documentElement = null;\n        try {\n            SOAPMessage saajDoc = message.getContent(SOAPMessage.class);\n            SOAPEnvelope envelope = saajDoc.getSOAPPart().getEnvelope();\n            if (!checkFaults && envelope.getBody().hasFault()) {\n                return;\n            }\n            documentElement = envelope;\n        } catch (SOAPException e) {\n            throw new SoapFault(\"Error obtaining SOAP document\", Fault.FAULT_CODE_CLIENT);\n        }\n        \n        final Collection<WSDataRef> signed = new HashSet<WSDataRef>();\n        final Collection<WSDataRef> encrypted = new HashSet<WSDataRef>();\n        \n        List<WSHandlerResult> results = CastUtils.cast(\n                (List<?>) message.get(WSHandlerConstants.RECV_RESULTS));\n        \n        for (final WSHandlerResult wshr : results) {\n            final List<WSSecurityEngineResult> wsSecurityEngineSignResults = \n                WSS4JUtils.fetchAllActionResults(wshr.getResults(), WSConstants.SIGN);\n            \n            final List<WSSecurityEngineResult> wsSecurityEngineEncResults = \n                WSS4JUtils.fetchAllActionResults(wshr.getResults(), WSConstants.ENCR);\n            \n            for (WSSecurityEngineResult wser : wsSecurityEngineSignResults) {\n            \n                List<WSDataRef> sl = CastUtils.cast((List<?>) wser\n                        .get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n                if (sl != null) {\n                    if (sl.size() == 1\n                        && sl.get(0).getName().equals(new QName(WSConstants.SIG_NS, WSConstants.SIG_LN))) {\n                        //endorsing the signature so don't include\n                        break;\n                    }\n                    \n                    for (WSDataRef r : sl) {\n                        signed.add(r);\n                    }\n                }\n            }\n            \n            for (WSSecurityEngineResult wser : wsSecurityEngineEncResults) {\n                List<WSDataRef> el = CastUtils.cast((List<?>) wser\n                        .get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n\n                if (el != null) {\n                    for (WSDataRef r : el) {\n                        encrypted.add(r);\n                    }\n                }\n            }\n        }\n        \n        CryptoCoverageUtil.reconcileEncryptedSignedRefs(signed, encrypted);\n\n        // XPathFactory and XPath are not thread-safe so we must recreate them\n        // each request.\n        final XPathFactory factory = XPathFactory.newInstance();\n        final XPath xpath = factory.newXPath();\n\n        if (this.prefixMap != null) {\n            xpath.setNamespaceContext(new MapNamespaceContext(this.prefixMap));\n        }\n\n        for (XPathExpression xPathExpression : this.xPaths) {\n            Collection<WSDataRef> refsToCheck = null;\n\n            switch (xPathExpression.getType()) {\n            case SIGNED:\n                refsToCheck = signed;\n                break;\n            case ENCRYPTED:\n                refsToCheck = encrypted;\n                break;\n            default:\n                throw new IllegalStateException(\"Unexpected crypto type: \" \n                    + xPathExpression.getType());\n            }\n\n            try {\n                CryptoCoverageUtil.checkCoverage(\n                                                 documentElement,\n                                                 refsToCheck,\n                                                 xpath, \n                                                 Arrays.asList(xPathExpression.getXPath()),\n                                                 xPathExpression.getType(),\n                                                 xPathExpression.getScope());\n            } catch (WSSecurityException e) {\n                throw new SoapFault(\"No \" + xPathExpression.getType()\n                                    + \" element found matching XPath \"\n                                    + xPathExpression.getXPath(), Fault.FAULT_CODE_CLIENT);\n            }\n        }\n    }","commit_id":"1676bb6092e9ee2bb63bbce1bb62154ee49cb151","url":"https://github.com/apache/cxf"},{"original_method":"public int doubleIt(int numberToDouble) throws DoubleItFault {\n        return numberToDouble * 2;\n    }","id":69098,"modified_method":"public int doubleIt(int numberToDouble) throws DoubleItFault {\n        if (numberToDouble == 0) {\n            throw new DoubleItFault(\"0 can't be doubled!\");\n        }\n        return numberToDouble * 2;\n    }","commit_id":"1676bb6092e9ee2bb63bbce1bb62154ee49cb151","url":"https://github.com/apache/cxf"},{"original_method":"private void dump() throws IOException {\r\n        log.logConfig(\"creating dump for index cache '\" + indexArrayFileName + \"', \" + cache.size() + \" words (and much more urls)\");\r\n        File indexDumpFile = new File(databaseRoot, indexArrayFileName);\r\n        if (indexDumpFile.exists()) indexDumpFile.delete();\r\n        kelondroFixedWidthArray dumpArray = null;\r\n            dumpArray = new kelondroFixedWidthArray(indexDumpFile, bufferStructureBasis, 0);\r\n            long startTime = System.currentTimeMillis();\r\n            long messageTime = System.currentTimeMillis() + 5000;\r\n            long wordsPerSecond = 0, wordcount = 0, urlcount = 0;\r\n            Map.Entry entry;\r\n            String wordHash;\r\n            indexContainer container;\r\n            long updateTime;\r\n            indexRWIEntry iEntry;\r\n            kelondroRow.Entry row = dumpArray.row().newEntry();\r\n      \r\n            // write wCache\r\n            synchronized (cache) {\r\n                Iterator i = cache.entrySet().iterator();\r\n                while (i.hasNext()) {\r\n                    // get entries\r\n                    entry = (Map.Entry) i.next();\r\n                    wordHash = (String) entry.getKey();\r\n                    updateTime = getUpdateTime(wordHash);\r\n                    container = (indexContainer) entry.getValue();\r\n\r\n                    // put entries on stack\r\n                    if (container != null) {\r\n                        Iterator ci = container.entries();\r\n                        while (ci.hasNext()) {\r\n                            iEntry = (indexRWIEntry) ci.next();\r\n                            row.setCol(0, wordHash.getBytes());\r\n                            row.setCol(1, kelondroNaturalOrder.encodeLong(container.size(), 4));\r\n                            row.setCol(2, kelondroNaturalOrder.encodeLong(updateTime, 8));\r\n                            row.setCol(3, iEntry.toKelondroEntry().bytes());\r\n                            dumpArray.set((int) urlcount++, row);\r\n                        }\r\n                    }\r\n                    wordcount++;\r\n                    i.remove(); // free some mem\r\n\r\n                    // write a log\r\n                    if (System.currentTimeMillis() > messageTime) {\r\n                        // System.gc(); // for better statistic\r\n                        wordsPerSecond = wordcount * 1000 / (1 + System.currentTimeMillis() - startTime);\r\n                        log.logInfo(\"dumping status: \" + wordcount + \" words done, \" + (cache.size() / (wordsPerSecond + 1)) + \" seconds remaining, free mem = \" + (Runtime.getRuntime().freeMemory() / 1024 / 1024) + \"MB\");\r\n                        messageTime = System.currentTimeMillis() + 5000;\r\n                    }\r\n                }\r\n            }\r\n            dumpArray.close();\r\n            dumpArray = null;\r\n            log.logConfig(\"dumped \" + urlcount + \" word/URL relations in \" + ((System.currentTimeMillis() - startTime) / 1000) + \" seconds\");\r\n    }","id":69099,"modified_method":"private void dump() throws IOException {\r\n        log.logConfig(\"creating dump for index cache '\" + indexArrayFileName + \"', \" + cache.size() + \" words (and much more urls)\");\r\n        File indexDumpFile = new File(databaseRoot, indexArrayFileName);\r\n        if (indexDumpFile.exists()) indexDumpFile.delete();\r\n        kelondroFixedWidthArray dumpArray = null;\r\n            dumpArray = new kelondroFixedWidthArray(indexDumpFile, bufferStructureBasis, 0);\r\n            long startTime = System.currentTimeMillis();\r\n            long messageTime = System.currentTimeMillis() + 5000;\r\n            long wordsPerSecond = 0, wordcount = 0, urlcount = 0;\r\n            Map.Entry entry;\r\n            String wordHash;\r\n            indexContainer container;\r\n            long updateTime;\r\n            indexRWIEntry iEntry;\r\n            kelondroRow.Entry row = dumpArray.row().newEntry();\r\n            byte[] occ, time;\r\n            \r\n            // write wCache\r\n            synchronized (cache) {\r\n                Iterator i = cache.entrySet().iterator();\r\n                while (i.hasNext()) {\r\n                    // get entries\r\n                    entry = (Map.Entry) i.next();\r\n                    wordHash = (String) entry.getKey();\r\n                    updateTime = getUpdateTime(wordHash);\r\n                    container = (indexContainer) entry.getValue();\r\n\r\n                    // put entries on stack\r\n                    if (container != null) {\r\n                        Iterator ci = container.entries();\r\n                        occ = kelondroNaturalOrder.encodeLong(container.size(), 4);\r\n                        time = kelondroNaturalOrder.encodeLong(updateTime, 8);\r\n                        while (ci.hasNext()) {\r\n                            iEntry = (indexRWIEntry) ci.next();\r\n                            row.setCol(0, wordHash.getBytes());\r\n                            row.setCol(1, occ);\r\n                            row.setCol(2, time);\r\n                            row.setCol(3, iEntry.toKelondroEntry().bytes());\r\n                            dumpArray.set((int) urlcount++, row);\r\n                        }\r\n                    }\r\n                    wordcount++;\r\n                    i.remove(); // free some mem\r\n\r\n                    // write a log\r\n                    if (System.currentTimeMillis() > messageTime) {\r\n                        // System.gc(); // for better statistic\r\n                        wordsPerSecond = wordcount * 1000 / (1 + System.currentTimeMillis() - startTime);\r\n                        log.logInfo(\"dumping status: \" + wordcount + \" words done, \" + (cache.size() / (wordsPerSecond + 1)) + \" seconds remaining, free mem = \" + (Runtime.getRuntime().freeMemory() / 1024 / 1024) + \"MB\");\r\n                        messageTime = System.currentTimeMillis() + 5000;\r\n                    }\r\n                }\r\n            }\r\n            dumpArray.close();\r\n            dumpArray = null;\r\n            log.logConfig(\"dumped \" + urlcount + \" word/URL relations in \" + ((System.currentTimeMillis() - startTime) / 1000) + \" seconds\");\r\n    }","commit_id":"9c2101a8525509be5d0d91d7fcaf1a80127a2297","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public int geti(byte[] key) {\n        int index = -1;\n        synchronized (chunkcache) {\n            index = find(key, 0, key.length);\n            if (index < 0) {\n                return -1;\n            } else {\n                kelondroRow.Entry indexentry = get(index);\n                return (int) indexentry.getColLongB256(1);\n            }\n        }\n    }","id":69100,"modified_method":"public int geti(byte[] key) {\n        kelondroRow.Entry indexentry = super.get(key);\n        if (indexentry == null) return -1;\n        return (int) indexentry.getColLongB256(1);\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public int puti(byte[] key, int i) {\n        int index = -1;\n        synchronized (chunkcache) {\n            index = find(key, 0, key.length);\n        }\n        if (index < 0) {\n            kelondroRow.Entry indexentry = rowdef.newEntry();\n            indexentry.setCol(0, key);\n            indexentry.setColLongB256(1, i);\n            add(indexentry);\n            return -1;\n        } else {\n            kelondroRow.Entry indexentry = get(index);\n            int oldi = (int) indexentry.getColLongB256(1);\n            indexentry.setColLongB256(1, i);\n            set(index, indexentry);\n            return oldi;\n        }\n    }","id":69101,"modified_method":"public int puti(byte[] key, int i) {\n        kelondroRow.Entry newentry = rowdef.newEntry();\n        newentry.setCol(0, key);\n        newentry.setColLongB256(1, i);\n        kelondroRow.Entry oldentry = super.put(newentry);\n        if (oldentry == null) return -1;\n        return (int) oldentry.getColLongB256(1);\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public int removei(byte[] key) {\n        kelondroRow.Entry indexentry;\n        synchronized (chunkcache) {\n            indexentry = remove(key);\n            if (indexentry == null) return -1;\n            return (int) indexentry.getColLongB256(1);\n        }\n    }","id":69102,"modified_method":"public int removei(byte[] key) {\n        kelondroRow.Entry indexentry = remove(key);\n        if (indexentry == null) return -1;\n        return (int) indexentry.getColLongB256(1);\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public byte[] putb(int ii, byte[] value) {\n        int index = -1;\n        byte[] key = kelondroNaturalOrder.encodeLong((long) ii, 4);\n        //System.out.println(\"ObjectMap PUT \" + obj.hashCode() + \", size=\" + size());\n        synchronized (chunkcache) {\n            index = find(key, 0, 4);\n        }\n        if (index < 0) {\n            kelondroRow.Entry indexentry = rowdef.newEntry();\n            indexentry.setCol(0, key);\n            indexentry.setCol(1, value);\n            add(indexentry);\n            return null;\n        } else {\n            kelondroRow.Entry indexentry = get(index);\n            byte[] old = indexentry.getColBytes(1);\n            indexentry.setCol(1, value);\n            set(index, indexentry);\n            return old;\n        }\n    }","id":69103,"modified_method":"public byte[] putb(int ii, byte[] value) {\n        kelondroRow.Entry newentry = rowdef.newEntry();\n        newentry.setCol(0, kelondroNaturalOrder.encodeLong((long) ii, 4));\n        newentry.setCol(1, value);\n        kelondroRow.Entry oldentry = super.put(newentry);\n        if (oldentry == null) return null;\n        return oldentry.getColBytes(1);\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public kelondroIntBytesMap(int payloadSize, int initSize) {\n        super(new kelondroRow(new int[]{4, payloadSize}), initSize);\n    }","id":69104,"modified_method":"public kelondroIntBytesMap(int payloadSize, int initSize) {\n        super(new kelondroRow(new int[]{4, payloadSize}), initSize);\n        \n        // initialize ordering\n        super.setOrdering(kelondroNaturalOrder.naturalOrder, 0);\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void uniq() {\n        assert (this.sortOrder != null);\n        // removes double-occurrences of chunks\n        // this works only if the collection was ordered with sort before\n        synchronized (chunkcache) {\n            if (chunkcount <= 1) return;\n            int i = 0;\n            while (i < chunkcount - 1) {\n                if (compare(i, i + 1) == 0) {\n                    //System.out.println(\"DOUBLE: \" + new String(this.chunkcache, this.chunksize * i, this.chunksize));\n                    remove(i);\n                } else {\n                    i++;\n                }\n            }\n        }\n    }","id":69105,"modified_method":"public final void uniq() {\n        assert (this.sortOrder != null);\n        // removes double-occurrences of chunks\n        // this works only if the collection was ordered with sort before\n        synchronized (chunkcache) {\n            if (chunkcount <= 1) return;\n            int i = 0;\n            while (i < chunkcount - 1) {\n                if (compare(i, i + 1) == 0) {\n                    //System.out.println(\"DOUBLE: \" + new String(this.chunkcache, this.chunksize * i, this.chunksize));\n                    remove(i);\n                } else {\n                    i++;\n                }\n            }\n        }\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void trim() {\n        synchronized (chunkcache) {\n            int needed = chunkcount * rowdef.objectsize();\n            if (chunkcache.length == needed) return;\n            byte[] newChunkcache = new byte[needed];\n            System.arraycopy(chunkcache, 0, newChunkcache, 0, newChunkcache.length);\n            chunkcache = newChunkcache;\n            newChunkcache = null;\n        }\n    }","id":69106,"modified_method":"public final void trim() {\n        synchronized (chunkcache) {\n            int needed = chunkcount * rowdef.objectsize();\n            if (chunkcache.length == needed) return;\n            byte[] newChunkcache = new byte[needed];\n            System.arraycopy(chunkcache, 0, newChunkcache, 0, newChunkcache.length);\n            chunkcache = newChunkcache;\n            newChunkcache = null;\n        }\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void addAll(kelondroRowCollection c) {\n        assert(rowdef.objectsize() >= c.rowdef.objectsize());\n        synchronized(chunkcache) {\n            ensureSize(chunkcount + c.size());\n        }\n        Iterator i = c.elements();\n        byte[] b;\n        while (i.hasNext()) {\n            b = (byte[]) i.next();\n            add(b, 0, b.length);\n        }\n    }","id":69107,"modified_method":"public final void addAll(kelondroRowCollection c) {\n        assert(rowdef.objectsize() >= c.rowdef.objectsize());\n        synchronized(chunkcache) {\n            ensureSize(chunkcount + c.size());\n        }\n        Iterator i = c.elements();\n        byte[] b;\n        while (i.hasNext()) {\n            b = (byte[]) i.next();\n            add(b, 0, b.length);\n        }\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void removeOne() {\n        if (chunkcount == 0) return;\n        if (chunkcount == sortBound) sortBound--;\n        chunkcount--;\n        this.lastTimeWrote = System.currentTimeMillis();\n    }","id":69108,"modified_method":"public final void removeOne() {\n        if (chunkcount == 0) return;\n        if (chunkcount == sortBound) sortBound--;\n        chunkcount--;\n        this.lastTimeWrote = System.currentTimeMillis();\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void set(int index, kelondroRow.Entry a) {\n        set(index, a.bytes(), 0, a.bytes().length);\n    }","id":69109,"modified_method":"public final void set(int index, kelondroRow.Entry a) {\n        set(index, a.bytes(), 0, a.bytes().length);\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public Iterator elements() {  // iterates byte[] - objects\n        return new chunkIterator();\n    }","id":69110,"modified_method":"public final Iterator elements() {  // iterates byte[] - objects\n        return new chunkIterator();\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void remove(int p) {\n        assert ((p >= 0) && (p < chunkcount) && (chunkcount > 0));\n        synchronized (chunkcache) {\n            System.arraycopy(chunkcache, (p + 1) * rowdef.objectsize(), chunkcache, p * rowdef.objectsize(), (chunkcount - p - 1) * rowdef.objectsize());\n            chunkcount--;\n            if (p < sortBound) sortBound--;\n        }\n        this.lastTimeWrote = System.currentTimeMillis();\n    }","id":69111,"modified_method":"public final void remove(int p) {\n        assert ((p >= 0) && (p < chunkcount) && (chunkcount > 0));\n        synchronized (chunkcache) {\n            System.arraycopy(chunkcache, (p + 1) * rowdef.objectsize(), chunkcache, p * rowdef.objectsize(), (chunkcount - p - 1) * rowdef.objectsize());\n            chunkcount--;\n            if (p < sortBound) sortBound--;\n        }\n        this.lastTimeWrote = System.currentTimeMillis();\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"private void qsort(int L, int R) {\n        //System.out.println(\"QSORT: chunkcache.length=\" + chunkcache.length + \", L=\" + L + \"/\" + new String(this.chunkcache, L * this.rowdef.objectsize(), this.rowdef.width(0)) + \", R=\" + R + \"/\" + new String(this.chunkcache, (R - 1) * this.rowdef.objectsize(), this.rowdef.width(0)));\n        /*\n        if ((L == 190) && (R == 258)) {\n            for (int i = L; i < R; i++) {\n                System.out.print(new String(this.chunkcache, L * this.chunksize, this.chunksize) + \", \");\n            }\n            System.out.println();\n        }\n        */\n        if (L >= R - 1) return;\n        \n        if (R - L < 20) {\n            isort(L, R);\n            return;\n         }\n        \n        int i = L;\n        int j = R - 1;\n        int pivot = (i + j) / 2;\n        //System.out.println(\"Pivot=\" + pivot + \"/\" + new String(this.chunkcache, pivot * this.rowdef.objectsize(), this.rowdef.width(0)));\n        while (i <= j) {\n            while (compare(pivot, i) ==  1) i++; // chunkAt[i] < keybuffer\n            while (compare(pivot, j) == -1) j--; // chunkAt[j] > keybuffer\n            //if (L == 6693) System.out.println(i + \", \" + j);\n            if (i <= j) {\n                pivot = swap(i, j, pivot);\n                i++;\n                j--;\n            }\n        }\n        //if (L == 6693) System.out.println(i);\n        qsort(L, i);\n        qsort(i, R);\n    }","id":69112,"modified_method":"private final void qsort(int L, int R) {\n        //System.out.println(\"QSORT: chunkcache.length=\" + chunkcache.length + \", L=\" + L + \"/\" + new String(this.chunkcache, L * this.rowdef.objectsize(), this.rowdef.width(0)) + \", R=\" + R + \"/\" + new String(this.chunkcache, (R - 1) * this.rowdef.objectsize(), this.rowdef.width(0)));\n        /*\n        if ((L == 190) && (R == 258)) {\n            for (int i = L; i < R; i++) {\n                System.out.print(new String(this.chunkcache, L * this.chunksize, this.chunksize) + \", \");\n            }\n            System.out.println();\n        }\n        */\n        if (L >= R - 1) return;\n        \n        if (R - L < 20) {\n            isort(L, R);\n            return;\n         }\n        \n        int i = L;\n        int j = R - 1;\n        int pivot = (i + j) / 2;\n        //System.out.println(\"Pivot=\" + pivot + \"/\" + new String(this.chunkcache, pivot * this.rowdef.objectsize(), this.rowdef.width(0)));\n        while (i <= j) {\n            while (compare(pivot, i) ==  1) i++; // chunkAt[i] < keybuffer\n            while (compare(pivot, j) == -1) j--; // chunkAt[j] > keybuffer\n            //if (L == 6693) System.out.println(i + \", \" + j);\n            if (i <= j) {\n                pivot = swap(i, j, pivot);\n                i++;\n                j--;\n            }\n        }\n        //if (L == 6693) System.out.println(i);\n        qsort(L, i);\n        qsort(i, R);\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public kelondroRow.Entry get(int index) {\n        assert (index < chunkcount);\n        byte[] a = new byte[rowdef.objectsize()];\n        synchronized (chunkcache) {\n            System.arraycopy(chunkcache, index * rowdef.objectsize(), a, 0, rowdef.objectsize());\n        }\n        return rowdef.newEntry(a);\n    }","id":69113,"modified_method":"public final kelondroRow.Entry get(int index) {\n        assert (index < chunkcount);\n        byte[] a = new byte[rowdef.objectsize()];\n        synchronized (chunkcache) {\n            System.arraycopy(chunkcache, index * rowdef.objectsize(), a, 0, rowdef.objectsize());\n        }\n        return rowdef.newEntry(a);\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"private void isort(int L, int R) {\n        for (int i = L + 1; i < R; i++)\n            for (int j = i; j > L && compare(j - 1, j) > 0; j--)\n                swap(j, j - 1, 0);\n    }","id":69114,"modified_method":"private final void isort(int L, int R) {\n        for (int i = L + 1; i < R; i++)\n            for (int j = i; j > L && compare(j - 1, j) > 0; j--)\n                swap(j, j - 1, 0);\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public byte[] toByteArray() {\n        return this.chunkcache;\n    }","id":69115,"modified_method":"public final byte[] toByteArray() {\n        return this.chunkcache;\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"private void qsort(int L, int S, int R) {\n        //System.out.println(\"QSORT: chunkcache.length=\" + chunkcache.length + \", chunksize=\" + chunksize + \", L=\" + L + \", S=\" + S + \", R=\" + R);\n        assert (S <= R);\n        if (L >= R - 1) return;\n        if (S >= R) return;\n\n        if (R - L < 20) {\n            isort(L, R);\n            return;\n         }\n        \n        int p = L + ((S - L) / 2);\n        int ps = p;\n        int q = S;\n        int qs = q;\n        int pivot = p;\n        while (q < R) {\n            if (compare(pivot, q) < 1) {\n                q++;\n            } else {\n                pivot = swap(p, q, pivot);\n                p++;\n                q++;\n            }\n        }\n        if ((ps - L) <= ((p - L) / 2)) qsort(L, p); else qsort(L, ps, p);\n        if ((qs - p) <= ((R - p) / 2)) qsort(p, R); else qsort(p, qs, R);\n    }","id":69116,"modified_method":"private final void qsort(int L, int S, int R) {\n        //System.out.println(\"QSORT: chunkcache.length=\" + chunkcache.length + \", chunksize=\" + chunksize + \", L=\" + L + \", S=\" + S + \", R=\" + R);\n        assert (S <= R);\n        if (L >= R - 1) return;\n        if (S >= R) return;\n\n        if (R - L < 20) {\n            isort(L, R);\n            return;\n         }\n        \n        int p = L + ((S - L) / 2);\n        int ps = p;\n        int q = S;\n        int qs = q;\n        int pivot = p;\n        while (q < R) {\n            if (compare(pivot, q) < 1) {\n                q++;\n            } else {\n                pivot = swap(p, q, pivot);\n                p++;\n                q++;\n            }\n        }\n        if ((ps - L) <= ((p - L) / 2)) qsort(L, p); else qsort(L, ps, p);\n        if ((qs - p) <= ((R - p) / 2)) qsort(p, R); else qsort(p, qs, R);\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void sort(kelondroOrder newOrder, int newColumn) {\n        if ((this.sortOrder == null) ||\n            (!(this.sortOrder.signature().equals(newOrder.signature()))) ||\n            (newColumn != this.sortColumn)) {\n            this.sortOrder = newOrder;\n            this.sortBound = 0;\n            this.sortColumn = newColumn;\n        }\n        sort();\n    }","id":69117,"modified_method":"protected final void sort(kelondroOrder newOrder, int newColumn) {\n        if ((this.sortOrder == null) ||\n            (!(this.sortOrder.signature().equals(newOrder.signature()))) ||\n            (newColumn != this.sortColumn)) {\n            this.sortOrder = newOrder;\n            this.sortBound = 0;\n            this.sortColumn = newColumn;\n        }\n        sort();\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public long lastRead() {\n        return lastTimeRead;\n    }","id":69118,"modified_method":"public final long lastRead() {\n        return lastTimeRead;\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"private void ensureSize(int elements) {\n        int needed = elements * rowdef.objectsize();\n        if (chunkcache.length >= needed) return;\n        byte[] newChunkcache = new byte[needed * 2];\n        System.arraycopy(chunkcache, 0, newChunkcache, 0, chunkcache.length);\n        chunkcache = newChunkcache;\n        newChunkcache = null;\n    }","id":69119,"modified_method":"private final void ensureSize(int elements) {\n        int needed = elements * rowdef.objectsize();\n        if (chunkcache.length >= needed) return;\n        byte[] newChunkcache = new byte[needed * 2];\n        System.arraycopy(chunkcache, 0, newChunkcache, 0, chunkcache.length);\n        chunkcache = newChunkcache;\n        newChunkcache = null;\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"private int swap(int i, int j, int p) {\n        if (i == j) return p;\n        if (this.chunkcount * this.rowdef.objectsize() < this.chunkcache.length) {\n            // there is space in the chunkcache that we can use as buffer\n            System.arraycopy(chunkcache, this.rowdef.objectsize() * i, chunkcache, chunkcache.length - this.rowdef.objectsize(), this.rowdef.objectsize());\n            System.arraycopy(chunkcache, this.rowdef.objectsize() *j , chunkcache, this.rowdef.objectsize() * i, this.rowdef.objectsize());\n            System.arraycopy(chunkcache, chunkcache.length - this.rowdef.objectsize(), chunkcache, this.rowdef.objectsize() * j, this.rowdef.objectsize());\n        } else {\n            // allocate a chunk to use as buffer\n            byte[] a = new byte[this.rowdef.objectsize()];\n            System.arraycopy(chunkcache, this.rowdef.objectsize() * i, a, 0, this.rowdef.objectsize());\n            System.arraycopy(chunkcache, this.rowdef.objectsize() * j , chunkcache, this.rowdef.objectsize() * i, this.rowdef.objectsize());\n            System.arraycopy(a, 0, chunkcache, this.rowdef.objectsize() * j, this.rowdef.objectsize());\n        }\n        if (i == p) return j; else if (j == p) return i; else return p;\n    }","id":69120,"modified_method":"private final int swap(int i, int j, int p) {\n        if (i == j) return p;\n        if (this.chunkcount * this.rowdef.objectsize() < this.chunkcache.length) {\n            // there is space in the chunkcache that we can use as buffer\n            System.arraycopy(chunkcache, this.rowdef.objectsize() * i, chunkcache, chunkcache.length - this.rowdef.objectsize(), this.rowdef.objectsize());\n            System.arraycopy(chunkcache, this.rowdef.objectsize() *j , chunkcache, this.rowdef.objectsize() * i, this.rowdef.objectsize());\n            System.arraycopy(chunkcache, chunkcache.length - this.rowdef.objectsize(), chunkcache, this.rowdef.objectsize() * j, this.rowdef.objectsize());\n        } else {\n            // allocate a chunk to use as buffer\n            byte[] a = new byte[this.rowdef.objectsize()];\n            System.arraycopy(chunkcache, this.rowdef.objectsize() * i, a, 0, this.rowdef.objectsize());\n            System.arraycopy(chunkcache, this.rowdef.objectsize() * j , chunkcache, this.rowdef.objectsize() * i, this.rowdef.objectsize());\n            System.arraycopy(a, 0, chunkcache, this.rowdef.objectsize() * j, this.rowdef.objectsize());\n        }\n        if (i == p) return j; else if (j == p) return i; else return p;\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"private int compare(int i, int j) {\n        assert (i < chunkcount);\n        assert (j < chunkcount);\n        if (i == j) return 0;\n        int keylength = this.rowdef.width(this.sortColumn);\n        int colstart  = this.rowdef.colstart[this.sortColumn];\n        int c = this.sortOrder.compare(\n                chunkcache,\n                i * this.rowdef.objectsize() + colstart,\n                keylength,\n                chunkcache,\n                j * this.rowdef.objectsize() + colstart,\n                keylength);\n        /*\n        System.out.println(\"COMPARE(\" +\n                new String(this.chunkcache, i * this.rowdef.objectsize(), this.rowdef.width(0)) +\n                \", \" +\n                new String(this.chunkcache, j * this.rowdef.objectsize(), this.rowdef.width(0)) +\n                \")=\" + c);\n                */\n        return c;\n    }","id":69121,"modified_method":"private final int compare(int i, int j) {\n        assert (i < chunkcount);\n        assert (j < chunkcount);\n        if (i == j) return 0;\n        int keylength = this.rowdef.width(this.sortColumn);\n        int colstart  = this.rowdef.colstart[this.sortColumn];\n        int c = this.sortOrder.compare(\n                chunkcache,\n                i * this.rowdef.objectsize() + colstart,\n                keylength,\n                chunkcache,\n                j * this.rowdef.objectsize() + colstart,\n                keylength);\n        /*\n        System.out.println(\"COMPARE(\" +\n                new String(this.chunkcache, i * this.rowdef.objectsize(), this.rowdef.width(0)) +\n                \", \" +\n                new String(this.chunkcache, j * this.rowdef.objectsize(), this.rowdef.width(0)) +\n                \")=\" + c);\n                */\n        return c;\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void set(int index, byte[] a, int astart, int alength) {\n        assert (index < this.chunkcount);\n        int l = Math.min(rowdef.objectsize(), Math.min(alength, a.length - astart));\n        synchronized (chunkcache) {\n            System.arraycopy(a, astart, chunkcache, index * rowdef.objectsize(), l);\n        }\n        this.lastTimeWrote = System.currentTimeMillis();\n    }","id":69122,"modified_method":"public final void set(int index, byte[] a, int astart, int alength) {\n        assert (index < this.chunkcount);\n        int l = Math.min(rowdef.objectsize(), Math.min(alength, a.length - astart));\n        synchronized (chunkcache) {\n            System.arraycopy(a, astart, chunkcache, index * rowdef.objectsize(), l);\n        }\n        this.lastTimeWrote = System.currentTimeMillis();\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void add(byte[] a, int astart, int alength) {\n        int l = Math.min(rowdef.objectsize(), Math.min(alength, a.length - astart));\n        synchronized (chunkcache) {\n            ensureSize(chunkcount + 1);\n            System.arraycopy(a, 0, chunkcache, rowdef.objectsize() * chunkcount, l);\n            chunkcount++;\n        }\n        this.lastTimeWrote = System.currentTimeMillis();\n    }","id":69123,"modified_method":"public final void add(byte[] a, int astart, int alength) {\n        int l = Math.min(rowdef.objectsize(), Math.min(alength, a.length - astart));\n        synchronized (chunkcache) {\n            ensureSize(chunkcount + 1);\n            System.arraycopy(a, 0, chunkcache, rowdef.objectsize() * chunkcount, l);\n            chunkcount++;\n        }\n        this.lastTimeWrote = System.currentTimeMillis();\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void clear() {\n        this.chunkcache = new byte[0];\n        this.chunkcount = 0;\n        this.sortBound = 0;\n    }","id":69124,"modified_method":"public final void clear() {\n        this.chunkcache = new byte[0];\n        this.chunkcount = 0;\n        this.sortBound = 0;\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public int size() {\n        return chunkcount;\n    }","id":69125,"modified_method":"public final int size() {\n        return chunkcount;\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void sort() {\n        assert (this.sortOrder != null);\n        if (this.sortBound == this.chunkcount) return; // this is already sorted\n        //System.out.println(\"SORT(chunkcount=\" + this.chunkcount + \", sortbound=\" + this.sortbound + \")\");\n        if (this.sortBound > 1) {\n            qsort(0, this.sortBound, this.chunkcount);\n        } else {\n            qsort(0, this.chunkcount);\n        }\n        this.sortBound = this.chunkcount;\n    }","id":69126,"modified_method":"protected final void sort() {\n        assert (this.sortOrder != null);\n        if (this.sortBound == this.chunkcount) return; // this is already sorted\n        //System.out.println(\"SORT(chunkcount=\" + this.chunkcount + \", sortbound=\" + this.sortbound + \")\");\n        if (this.sortBound > 1) {\n            qsort(0, this.sortBound, this.chunkcount);\n        } else {\n            qsort(0, this.chunkcount);\n        }\n        this.sortBound = this.chunkcount;\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public String toString() {\n        StringBuffer s = new StringBuffer();\n        Iterator i = elements();\n        if (i.hasNext()) s.append(new String((byte[]) i.next()).trim());\n        while (i.hasNext())  s.append(\", \" + new String((byte[]) i.next()).trim());\n        return new String(s);\n    }","id":69127,"modified_method":"public final String toString() {\n        StringBuffer s = new StringBuffer();\n        Iterator i = elements();\n        if (i.hasNext()) s.append(new String((byte[]) i.next()).trim());\n        while (i.hasNext())  s.append(\", \" + new String((byte[]) i.next()).trim());\n        return new String(s);\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public void add(kelondroRow.Entry a) {\n        add(a.bytes(), 0, a.bytes().length);\n    }","id":69128,"modified_method":"public final void add(kelondroRow.Entry a) {\n        add(a.bytes(), 0, a.bytes().length);\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public long lastWrote() {\n        return lastTimeWrote;\n    }","id":69129,"modified_method":"public final long lastWrote() {\n        return lastTimeWrote;\n    }","commit_id":"6aa0f6eb0f5d355624344eba40295dcd2b6aaf15","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/** Constructor without prior class distribution */\n  public Model( Key selfKey, String names[], String domains[][]) {\n    this(selfKey,names,domains,null);\n  }","id":69130,"modified_method":"/** Full constructor */\n  public Model( Key selfKey, String names[], String domains[][] ) {\n    super(selfKey);\n    if( domains == null ) domains=new String[names.length+1][];\n    assert domains.length==names.length;\n    assert names.length > 1;\n    assert names[names.length-1] != null; // Have a valid response-column name?\n    _names   = names;\n    _domains = domains;\n  }","commit_id":"b54f58780d0393f3c02cdc8d23be33d5ec29b097","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/** Score already adapted frame.\n   *\n   * @param adaptFrm\n   * @return\n   */\n  private Frame scoreImpl(Frame adaptFrm) {\n    int ridx = adaptFrm.find(responseName());\n    assert ridx == -1 : \"Adapted frame should not contain response in scoring method!\";\n    assert nfeatures() == adaptFrm.numCols() : \"Number of model features \" + nfeatures() + \" != number of test set columns: \" + adaptFrm.numCols();\n    assert adaptFrm.vecs().length == _names.length-1 : \"Scoring data set contains wrong number of columns: \" + adaptFrm.vecs().length  + \" instead of \" + (_names.length-1);\n\n    // Create a new vector for response\n    // If the model produces a classification/enum, copy the domain into the\n    // result vector.\n    Vec v = adaptFrm.anyVec().makeZero(classNames());\n    adaptFrm.add(\"predict\",v);\n    if( nclasses() > 1 ) {\n      String prefix = \"\";\n      for( int c=0; c<nclasses(); c++ ) // if any class is the same as column name in frame, then prefix all classnames\n        if (contains(adaptFrm._names, classNames()[c])) { prefix = \"class_\"; break; }\n      for( int c=0; c<nclasses(); c++ )\n        adaptFrm.add(prefix+classNames()[c],adaptFrm.anyVec().makeZero());\n    }\n    new MRTask() {\n      @Override public void map( Chunk chks[] ) {\n        double tmp [] = new double[_names.length-1]; // We do not need the last field representing response\n        float preds[] = new float [nclasses()==1?1:nclasses()+1];\n        int len = chks[0]._len;\n        for( int row=0; row<len; row++ ) {\n          float p[] = score0(chks,row,tmp,preds);\n          for( int c=0; c<preds.length; c++ )\n            chks[_names.length-1+c].set0(row,p[c]);\n        }\n      }\n    }.doAll(adaptFrm);\n    // Return just the output columns\n    int x=_names.length-1, y=adaptFrm.numCols();\n    return adaptFrm.extractFrame(x, y);\n  }","id":69131,"modified_method":"/** Score already adapted frame.\n   *\n   * @param adaptFrm\n   * @return\n   */\n  private Frame scoreImpl(Frame adaptFrm) {\n    int ridx = adaptFrm.find(responseName());\n    assert ridx == -1 : \"Adapted frame should not contain response in scoring method!\";\n    assert nfeatures() == adaptFrm.numCols() : \"Number of model features \" + nfeatures() + \" != number of test set columns: \" + adaptFrm.numCols();\n    assert adaptFrm.vecs().length == _names.length-1 : \"Scoring data set contains wrong number of columns: \" + adaptFrm.vecs().length  + \" instead of \" + (_names.length-1);\n\n    // Create a new vector for response\n    // If the model produces a classification/enum, copy the domain into the\n    // result vector.\n    Vec v = adaptFrm.anyVec().makeZero(classNames());\n    adaptFrm.add(\"predict\",v);\n    if( nclasses() > 1 ) {\n      String prefix = \"\";\n      for( int c=0; c<nclasses(); c++ ) // if any class is the same as column name in frame, then prefix all classnames\n        if (ArrayUtils.contains(adaptFrm._names, classNames()[c])) { prefix = \"class_\"; break; }\n      for( int c=0; c<nclasses(); c++ )\n        adaptFrm.add(prefix+classNames()[c],adaptFrm.anyVec().makeZero());\n    }\n    new MRTask() {\n      @Override public void map( Chunk chks[] ) {\n        double tmp [] = new double[_names.length-1]; // We do not need the last field representing response\n        float preds[] = new float [nclasses()==1?1:nclasses()+1];\n        int len = chks[0]._len;\n        for( int row=0; row<len; row++ ) {\n          float p[] = score0(chks,row,tmp,preds);\n          for( int c=0; c<preds.length; c++ )\n            chks[_names.length-1+c].set0(row,p[c]);\n        }\n      }\n    }.doAll(adaptFrm);\n    // Return just the output columns\n    int x=_names.length-1, y=adaptFrm.numCols();\n    return adaptFrm.extractFrame(x, y);\n  }","commit_id":"b54f58780d0393f3c02cdc8d23be33d5ec29b097","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/** Constructor from frame (without prior class dist): Strips out the Vecs to just the names needed\n   *  to match columns later for future datasets.  */\n  public Model( Key selfKey, Frame fr ) {\n    this(selfKey,fr.names(),fr.domains(),null);\n  }","id":69132,"modified_method":"/** Constructor from frame: Strips out the Vecs to just the names needed\n   *  to match columns later for future datasets.  */\n  public Model( Key selfKey, Frame fr ) {\n    this(selfKey,fr.names(),fr.domains());\n  }","commit_id":"b54f58780d0393f3c02cdc8d23be33d5ec29b097","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/** Bulk scoring API for one row.  Chunks are all compatible with the model,\n   *  and expect the last Chunks are for the final distribution and prediction.\n   *  Default method is to just load the data into the tmp array, then call\n   *  subclass scoring logic. */\n  protected float[] score0( Chunk chks[], int row_in_chunk, double[] tmp, float[] preds ) {\n    assert chks.length>=_names.length; // Last chunk is for the response\n    for( int i=0; i<_names.length-1; i++ ) // Do not include last value since it can contains a response\n      tmp[i] = chks[i].at0(row_in_chunk);\n    float[] scored = score0(tmp,preds);\n    // Correct probabilities obtained from training on oversampled data back to original distribution\n    // C.f. http://gking.harvard.edu/files/0s.pdf Eq.(27)\n    if (isClassifier() && _priorClassDist != null && _modelClassDist != null) {\n      assert(scored.length == nclasses()+1); //1 label + nclasses probs\n      double probsum=0;\n      for( int c=1; c<scored.length; c++ ) {\n        final double original_fraction = _priorClassDist[c-1];\n        assert(original_fraction > 0);\n        final double oversampled_fraction = _modelClassDist[c-1];\n        assert(oversampled_fraction > 0);\n        assert(!Double.isNaN(scored[c]));\n        scored[c] *= original_fraction / oversampled_fraction;\n        probsum += scored[c];\n      }\n      for (int i=1;i<scored.length;++i) scored[i] /= probsum;\n      //set label based on corrected probabilities (max value wins, with deterministic tie-breaking)\n      scored[0] = ModelUtils.getPrediction(scored, tmp);\n    }\n    return scored;\n  }","id":69133,"modified_method":"/** Bulk scoring API for one row.  Chunks are all compatible with the model,\n   *  and expect the last Chunks are for the final distribution and prediction.\n   *  Default method is to just load the data into the tmp array, then call\n   *  subclass scoring logic. */\n  protected float[] score0( Chunk chks[], int row_in_chunk, double[] tmp, float[] preds ) {\n    assert chks.length>=_names.length; // Last chunk is for the response\n    for( int i=0; i<_names.length-1; i++ ) // Do not include last value since it can contains a response\n      tmp[i] = chks[i].at0(row_in_chunk);\n    return score0(tmp,preds);\n  }","commit_id":"b54f58780d0393f3c02cdc8d23be33d5ec29b097","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/** Score already adapted frame.\n   *\n   * @param fr\n   * @return\n   */\n  private Frame scoreImpl(Frame adaptFrm) {\n    int ridx = adaptFrm.find(_names[_names.length-1]);\n    assert ridx == -1 : \"Adapted frame should not contain response in scoring method!\";\n    // Create a new vector for response\n    Vec v = adaptFrm.anyVec().makeZero();\n    // If the model produces a classification/enum, copy the domain into the\n    // result vector.\n    v._domain = _domains[_domains.length-1];\n    adaptFrm.add(\"predict\",v);\n    if( nclasses() > 1 ) {\n      String prefix = \"\";\n      for( int c=0; c<nclasses(); c++ ) // if any class is the same as column name in frame, then prefix all classnames\n        if (contains(adaptFrm._names, classNames()[c])) { prefix = \"class_\"; break; }\n      for( int c=0; c<nclasses(); c++ )\n        adaptFrm.add(prefix+classNames()[c],adaptFrm.anyVec().makeZero());\n    }\n    new MRTask2() {\n      @Override public void map( Chunk chks[] ) {\n        double tmp [] = new double[_names.length];\n        float preds[] = new float [nclasses()==1?1:nclasses()+1];\n        int len = chks[0]._len;\n        for( int row=0; row<len; row++ ) {\n          float p[] = score0(chks,row,tmp,preds);\n          for( int c=0; c<preds.length; c++ )\n            chks[_names.length-1+c].set0(row,p[c]);\n        }\n      }\n    }.doAll(adaptFrm);\n    // Return just the output columns\n    int x=_names.length-1, y=adaptFrm.numCols();\n    return adaptFrm.extractFrame(x, y);\n  }","id":69134,"modified_method":"/** Score already adapted frame.\n   *\n   * @param adaptFrm\n   * @return\n   */\n  private Frame scoreImpl(Frame adaptFrm) {\n    int ridx = adaptFrm.find(_names[_names.length-1]);\n    assert ridx == -1 : \"Adapted frame should not contain response in scoring method!\";\n    // Create a new vector for response\n    Vec v = adaptFrm.anyVec().makeZero();\n    // If the model produces a classification/enum, copy the domain into the\n    // result vector.\n    v._domain = _domains[_domains.length-1];\n    adaptFrm.add(\"predict\",v);\n    if( nclasses() > 1 ) {\n      String prefix = \"\";\n      for( int c=0; c<nclasses(); c++ ) // if any class is the same as column name in frame, then prefix all classnames\n        if (contains(adaptFrm._names, classNames()[c])) { prefix = \"class_\"; break; }\n      for( int c=0; c<nclasses(); c++ )\n        adaptFrm.add(prefix+classNames()[c],adaptFrm.anyVec().makeZero());\n    }\n    new MRTask2() {\n      @Override public void map( Chunk chks[] ) {\n        double tmp [] = new double[_names.length];\n        float preds[] = new float [nclasses()==1?1:nclasses()+1];\n        int len = chks[0]._len;\n        for( int row=0; row<len; row++ ) {\n          float p[] = score0(chks,row,tmp,preds);\n          for( int c=0; c<preds.length; c++ )\n            chks[_names.length-1+c].set0(row,p[c]);\n        }\n      }\n    }.doAll(adaptFrm);\n    // Return just the output columns\n    int x=_names.length-1, y=adaptFrm.numCols();\n    return adaptFrm.extractFrame(x, y);\n  }","commit_id":"b6a8d4c74904bb8a565bde9c6662a0c0fb3ed8de","url":"https://github.com/h2oai/h2o-2"},{"original_method":"/** Bulk scoring API for one row.  Chunks are all compatible with the model,\n   *  and expect the last Chunks are for the final distribution & prediction.\n   *  Default method is to just load the data into the tmp array, then call\n   *  subclass scoring logic. */\n  protected float[] score0( Chunk chks[], int row_in_chunk, double[] tmp, float[] preds ) {\n    assert chks.length>=_names.length; // Last chunk is for the response\n    for( int i=0; i<_names.length; i++ )\n      tmp[i] = chks[i].at0(row_in_chunk);\n    return score0(tmp,preds);\n  }","id":69135,"modified_method":"/** Bulk scoring API for one row.  Chunks are all compatible with the model,\n   *  and expect the last Chunks are for the final distribution & prediction.\n   *  Default method is to just load the data into the tmp array, then call\n   *  subclass scoring logic. */\n  protected float[] score0( Chunk chks[], int row_in_chunk, double[] tmp, float[] preds ) {\n    assert chks.length>=_names.length; // Last chunk is for the response\n    for( int i=0; i<_names.length; i++ )\n      tmp[i] = chks[i].at0(row_in_chunk);\n    float[] scored = score0(tmp,preds);\n    // Correct probabilities obtained from training on oversampled data back to original distribution\n    // C.f. http://gking.harvard.edu/files/0s.pdf Eq.(27)\n    if (isClassifier() && _priorClassDist != null && _modelClassDist != null) {\n      assert(scored.length == nclasses()+1); //1 label + nclasses probs\n      double probsum=0;\n      for( int c=1; c<scored.length; c++ ) {\n        final double original_fraction = _priorClassDist[c-1];\n        assert(original_fraction > 0);\n        final double oversampled_fraction = _modelClassDist[c-1];\n        assert(oversampled_fraction > 0);\n        assert(!Double.isNaN(scored[c]));\n        scored[c] *= original_fraction / oversampled_fraction;\n        probsum += scored[c];\n      }\n      for (int i=1;i<scored.length;++i) scored[i] /= probsum;\n      //set label based on corrected probabilities (max value wins, with deterministic tie-breaking)\n      scored[0] = ModelUtils.getPrediction(scored, tmp);\n    }\n    return scored;\n  }","commit_id":"b6a8d4c74904bb8a565bde9c6662a0c0fb3ed8de","url":"https://github.com/h2oai/h2o-2"},{"original_method":"/** Bulk score the frame <code>fr<\/code>, producing a Frame result; the 1st Vec is the\n   *  predicted class, the remaining Vecs are the probability distributions.\n   *  For Regression (single-class) models, the 1st and only Vec is the\n   *  prediction value.\n   *\n   *  The flat <code>adapt<\/code>\n   * @param fr frame which should be scored\n   * @param adapt a flag enforcing an adaptation of <code>fr<\/code> to this model. If flag\n   *        is <code>false<\/code> scoring code expect that <code>fr<\/code> is already adapted.\n   * @return a new frame containing a predicted values. For classification it contains a column with\n   *         prediction and distribution for all response classes. For regression it contains only\n   *         one column with predicted values.\n   */\n  public final Frame score(Frame fr, boolean adapt) {\n    int ridx = fr.find(_names[_names.length-1]);\n    if (ridx != -1) { // drop the response for scoring!\n      fr = new Frame(fr);\n      fr.remove(ridx);\n    }\n    // Adapt the Frame layout - returns adapted frame and frame containing only\n    // newly created vectors\n    Frame[] adaptFrms = adapt ? adapt(fr,false) : null;\n    // Adapted frame containing all columns - mix of original vectors from fr\n    // and newly created vectors serving as adaptors\n    Frame adaptFrm = adapt ? adaptFrms[0] : fr;\n    // Contains only newly created vectors. The frame eases deletion of these vectors.\n    Frame onlyAdaptFrm = adapt ? adaptFrms[1] : null;\n    // Invoke scoring\n    Frame output = scoreImpl(adaptFrm);\n    // Correct probabilities after per-class stratified sampling\n    if (isClassifier()) water.util.MRUtils.correctProbabilities(output, _priorClassDist, _modelClassDist);\n    // Be nice to DKV and delete vectors which i created :-)\n    if (adapt) onlyAdaptFrm.delete();\n    return output;\n  }","id":69136,"modified_method":"/** Bulk score the frame <code>fr<\/code>, producing a Frame result; the 1st Vec is the\n   *  predicted class, the remaining Vecs are the probability distributions.\n   *  For Regression (single-class) models, the 1st and only Vec is the\n   *  prediction value.\n   *\n   *  The flat <code>adapt<\/code>\n   * @param fr frame which should be scored\n   * @param adapt a flag enforcing an adaptation of <code>fr<\/code> to this model. If flag\n   *        is <code>false<\/code> scoring code expect that <code>fr<\/code> is already adapted.\n   * @return a new frame containing a predicted values. For classification it contains a column with\n   *         prediction and distribution for all response classes. For regression it contains only\n   *         one column with predicted values.\n   */\n  public final Frame score(Frame fr, boolean adapt) {\n    int ridx = fr.find(_names[_names.length-1]);\n    if (ridx != -1) { // drop the response for scoring!\n      fr = new Frame(fr);\n      fr.remove(ridx);\n    }\n    // Adapt the Frame layout - returns adapted frame and frame containing only\n    // newly created vectors\n    Frame[] adaptFrms = adapt ? adapt(fr,false) : null;\n    // Adapted frame containing all columns - mix of original vectors from fr\n    // and newly created vectors serving as adaptors\n    Frame adaptFrm = adapt ? adaptFrms[0] : fr;\n    // Contains only newly created vectors. The frame eases deletion of these vectors.\n    Frame onlyAdaptFrm = adapt ? adaptFrms[1] : null;\n    // Invoke scoring\n    Frame output = scoreImpl(adaptFrm);\n    // Be nice to DKV and delete vectors which i created :-)\n    if (adapt) onlyAdaptFrm.delete();\n    return output;\n  }","commit_id":"b6a8d4c74904bb8a565bde9c6662a0c0fb3ed8de","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public Vec score( Frame fr ) { return drf_model.score(fr,Key.make());  }","id":69137,"modified_method":"public Vec score( Frame fr ) { return drf_model.score(fr,true);  }","commit_id":"ecee7ba6f03fdf336ad60195d2cb2f780be6bd5c","url":"https://github.com/h2oai/h2o-2"},{"original_method":"/** Simple shallow copy constructor to a new Key */\n  public Model( Key selfKey, Model m ) { this(selfKey,m._dataKey,m._names,m._domain); }","id":69138,"modified_method":"/** Simple shallow copy constructor to a new Key */\n  public Model( Key selfKey, Model m ) { this(selfKey,m._dataKey,m._names,m._domains); }","commit_id":"ecee7ba6f03fdf336ad60195d2cb2f780be6bd5c","url":"https://github.com/h2oai/h2o-2"},{"original_method":"/** Bulk score the frame 'fr', producing a single output vector */\n  public Vec score( Frame fr, Key key ) {\n    Vec v = fr.anyVec().makeZero();\n    fr.add(\"predict\",v);\n    new MRTask2() {\n      @Override public void map( Chunk chks[] ) {\n        double tmp[] = new double[_names.length];\n        Chunk p = chks[chks.length-1];\n        for( int i=0; i<p._len; i++ )\n          p.set0(i,score0(chks,i,tmp));\n      }\n    }.doAll(fr);\n    fr.remove(fr.numCols()-1);\n    return v;\n  }","id":69139,"modified_method":"/** Bulk score the frame 'fr', producing a single output vector.  Also passed\n   *  in a flag describing how hard we try to adapt the frame.  */\n  public Vec score( Frame fr, boolean exact ) {\n    Frame fr2 = adapt(fr,exact); // Adapt the Frame layout\n    Vec v = fr2.anyVec().makeZero();\n    // If the model produces a classification/enum, copy the domain into the\n    // result vector.\n    v._domain = _domains[_domains.length-1];\n    fr2.add(\"predict\",v);\n    new MRTask2() {\n      @Override public void map( Chunk chks[] ) {\n        double tmp[] = new double[_names.length];\n        Chunk p = chks[chks.length-1];\n        for( int i=0; i<p._len; i++ )\n          p.set0(i,score0(chks,i,tmp));\n      }\n    }.doAll(fr2);\n    return v;\n  }","commit_id":"ecee7ba6f03fdf336ad60195d2cb2f780be6bd5c","url":"https://github.com/h2oai/h2o-2"},{"original_method":"/** Build an adapted Frame from the given Frame.  Useful for efficient bulk scoring\n   *  of a new dataset to an existing model.  Same adaption as above, but expressed\n   *  as a Frame instead of as an int[][].  */\n  public Frame adapt( Frame fr ) {\n    throw H2O.unimpl();\n  }","id":69140,"modified_method":"/** Build an adapted Frame from the given Frame.  Useful for efficient bulk\n   *  scoring of a new dataset to an existing model.  Same adaption as above,\n   *  but expressed as a Frame instead of as an int[][].     */\n  public Frame adapt( Frame fr, boolean exact ) {\n    int[][] map = adapt(fr.names(),fr.domains(),exact);\n    for( int i=0; i<map.length; i++ )\n      if( map[i] != null ) throw H2O.unimpl();\n    return new Frame(fr);\n  }","commit_id":"ecee7ba6f03fdf336ad60195d2cb2f780be6bd5c","url":"https://github.com/h2oai/h2o-2"},{"original_method":"/** Build an adaption array.  The length is equal to the Model's vector\n   *  length plus a response mapping plus a column mapping.  Each inner array\n   *  is a domain map from user domains to model domains - or null for non-enum\n   *  columns.  The extra final int[] is the column mapping itself.  */\n  private int[][] adapt( String names[], String domains[][] ) {\n    throw H2O.unimpl();\n  }","id":69141,"modified_method":"/** Build an adaption array.  The length is equal to the Model's vector\n   *  length minus the response plus a column mapping.  Each inner array\n   *  is a domain map from user domains to model domains - or null for non-enum\n   *  columns.  The extra final int[] is the column mapping itself.  \n   *  If 'exact' is true, will throw if there are:\n   *    any columns in the model but not in the input set; \n   *    any enums in the data that the model does not understand\n   *    any enums returned by the model that the data does not understand.\n   *  If 'exact' is false, these situations will use or return NA's instead.\n   */\n  private int[][] adapt( String names[], String domains[][], boolean exact ) {\n    // Make sure all are compatible\n    for( int i=0; i<_names.length-1; i++ ) {\n      if( !_names[i].equals(names[i]) ) throw H2O.unimpl();\n      if( _domains[i] != domains[i] ) {\n        if( _domains[i] == null || domains[i] == null ) {\n          if( exact ) \n            throw new IllegalArgumentException(\"Model expects \"+Arrays.toString(_domains[i])+\" but was passed \"+Arrays.toString(domains[i]));\n          throw H2O.unimpl();\n        }\n        for( int j=0; j<_names.length; j++ ) {\n          if( !(_domains[i][j].equals(domains[i][j])) )\n            throw H2O.unimpl();\n        }\n      }\n    }\n    // Trivial non-mapping map\n    return new int[names.length][];\n  }","commit_id":"ecee7ba6f03fdf336ad60195d2cb2f780be6bd5c","url":"https://github.com/h2oai/h2o-2"},{"original_method":"/** Full constructor */\n  public Model( Key selfKey, Key dataKey, String names[], String domain[][] ) {\n    if( domain == null ) domain=new String[names.length+1][];\n    assert domain.length==names.length;\n    assert names.length > 1;\n    assert names[names.length-1] != null; // Have a valid response-column name?\n    _selfKey = selfKey;\n    _dataKey = dataKey;\n    _names = names;\n    _domain = domain;\n  }","id":69142,"modified_method":"/** Full constructor */\n  public Model( Key selfKey, Key dataKey, String names[], String domains[][] ) {\n    if( domains == null ) domains=new String[names.length+1][];\n    assert domains.length==names.length;\n    assert names.length > 1;\n    assert names[names.length-1] != null; // Have a valid response-column name?\n    _selfKey = selfKey;\n    _dataKey = dataKey;\n    _names  =   names;\n    _domains= domains;\n  }","commit_id":"ecee7ba6f03fdf336ad60195d2cb2f780be6bd5c","url":"https://github.com/h2oai/h2o-2"},{"original_method":"/** Single row scoring, on a compatible set of data.  Fairly expensive to adapt. */\n  public final double score( String names[], String domains[][], double row[] ) {\n    return score(adapt(names,domains),row);\n  }","id":69143,"modified_method":"/** Single row scoring, on a compatible set of data.  Fairly expensive to adapt. */\n  public final double score( String names[], String domains[][], boolean exact, double row[] ) {\n    return score(adapt(names,domains,exact),row);\n  }","commit_id":"ecee7ba6f03fdf336ad60195d2cb2f780be6bd5c","url":"https://github.com/h2oai/h2o-2"},{"original_method":"/** Single row scoring, on a compatible (but not adapted) Frame.  Fairly expensive to adapt.  */\n  public final double score( Frame fr, int row ) {\n    double tmp[] = new double[fr.numCols()];\n    for( int i=0; i<tmp.length; i++ )\n      tmp[i] = fr._vecs[i].at(row);\n    return score(fr.names(),fr.domains(),tmp);\n  }","id":69144,"modified_method":"/** Single row scoring, on a compatible (but not adapted) Frame.  Fairly expensive to adapt.  */\n  public final double score( Frame fr, boolean exact, int row ) {\n    double tmp[] = new double[fr.numCols()];\n    for( int i=0; i<tmp.length; i++ )\n      tmp[i] = fr._vecs[i].at(row);\n    return score(fr.names(),fr.domains(),exact,tmp);\n  }","commit_id":"ecee7ba6f03fdf336ad60195d2cb2f780be6bd5c","url":"https://github.com/h2oai/h2o-2"},{"original_method":"/** Single row scoring, on a compatible set of data, given an adaption vector */\n  public final double score( int map[][], double row[] ) {\n    int[] resMap = map[map.length-2]; // Response mapping is the almost last array\n    int[] colMap = map[map.length-1]; // Column   mapping is the final array\n    assert colMap.length == _names.length;\n    double tmp[] = new double[_names.length]; // The adapted data\n    for( int i=0; i<_names.length; i++ ) {\n      // Column mapping, or NaN for missing columns\n      double d = colMap[i]==-1 ? Double.NaN : row[colMap[i]];\n      if( map[i] != null ) {    // Enum mapping\n        int e = (int)d;\n        d = e >= 0 && e < map[i].length ? (double)map[i][e] : Double.NaN;\n      }\n      tmp[i] = d;\n    }\n    double d = score0(tmp);     // The results.\n    int e = (int)d;             // For enum results\n    // Convert the model's enum result back to the user's enum result\n    return resMap == null ? d : ((e>=0 && e<resMap.length) ? resMap[e] : Double.NaN);\n  }","id":69145,"modified_method":"/** Single row scoring, on a compatible set of data, given an adaption vector */\n  public final double score( int map[][], double row[] ) {\n    int[] colMap = map[map.length-1]; // Column mapping is the final array\n    assert colMap.length == _names.length;\n    double tmp[] = new double[_names.length]; // The adapted data\n    for( int i=0; i<_names.length; i++ ) {\n      // Column mapping, or NaN for missing columns\n      double d = colMap[i]==-1 ? Double.NaN : row[colMap[i]];\n      if( map[i] != null ) {    // Enum mapping\n        int e = (int)d;\n        if( e < 0 || e >= map[i].length ) d = Double.NaN; // User data is out of adapt range\n        else { \n          e = map[i][e];\n          d = e==-1 ? Double.NaN : (double)e;\n        }\n      }\n      tmp[i] = d;\n    }\n    return score0(tmp);         // The results.\n  }","commit_id":"ecee7ba6f03fdf336ad60195d2cb2f780be6bd5c","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override\n\tpublic void create () {\n\t\tinit();\n\t\tmodelBatch = new ModelBatch();\n\t\t\n\t\tworld = createWorld();\n\t\tworld.performanceCounter = performanceCounter;\n\n\t\tfinal float width = Gdx.graphics.getWidth();\n\t\tfinal float height = Gdx.graphics.getHeight();\n\t\tif (width > height)\n\t\t\tcamera = new PerspectiveCamera(67f, 3f * width / height, 3f);\n\t\telse\n\t\t\tcamera = new PerspectiveCamera(67f, 3f, 3f * height / width);\n\t\tcamera.position.set(10f, 10f, 10f);\n\t\tcamera.lookAt(0, 0, 0);\n\t\tcamera.update();\n\t\t\n\t\t// Create some simple meshes\n\t\tfinal Model groundModel = modelBuilder.createRect(20f, 0f, 20f, 20f, 0f, -20f, -20f, 0f, 20f, -20f, 0f, -20f, 0, 1, 0, new Material(new ColorAttribute(ColorAttribute.Diffuse, Color.WHITE)), new VertexAttributes(new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE)));\n\t\tfinal Model boxModel = modelBuilder.createBox(1f, 1f, 1f, new Material(new ColorAttribute(ColorAttribute.Diffuse, Color.WHITE)), new VertexAttributes(new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE))); \n\n\t\t// Add the constructors\n\t\tworld.addConstructor(\"ground\", new BulletConstructor(groundModel, 0f)); // mass = 0: static body\n\t\tworld.addConstructor(\"box\", new BulletConstructor(boxModel, 1f)); // mass = 1kg: dynamic body\n\t\tworld.addConstructor(\"staticbox\", new BulletConstructor(boxModel, 0f)); // mass = 0: static body\n\t}","id":69146,"modified_method":"@Override\n\tpublic void create () {\n\t\tinit();\n\t\tmodelBatch = new ModelBatch();\n\t\t\n\t\tworld = createWorld();\n\t\tworld.performanceCounter = performanceCounter;\n\n\t\tfinal float width = Gdx.graphics.getWidth();\n\t\tfinal float height = Gdx.graphics.getHeight();\n\t\tif (width > height)\n\t\t\tcamera = new PerspectiveCamera(67f, 3f * width / height, 3f);\n\t\telse\n\t\t\tcamera = new PerspectiveCamera(67f, 3f, 3f * height / width);\n\t\tcamera.position.set(10f, 10f, 10f);\n\t\tcamera.lookAt(0, 0, 0);\n\t\tcamera.update();\n\t\t\n\t\t// Create some simple meshes\n\t\tfinal Model groundModel = modelBuilder.createRect(20f, 0f, 20f, 20f, 0f, -20f, -20f, 0f, 20f, -20f, 0f, -20f, 0, 1, 0, \n\t\t\tnew Material(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE), FloatAttribute.createShininess(16f)),\n\t\t\tnew VertexAttributes(new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE)));\n\t\tfinal Model boxModel = modelBuilder.createBox(1f, 1f, 1f,\n\t\t\tnew Material(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE), FloatAttribute.createShininess(64f)), \n\t\t\tnew VertexAttributes(new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE)));\n\n\t\t// Add the constructors\n\t\tworld.addConstructor(\"ground\", new BulletConstructor(groundModel, 0f)); // mass = 0: static body\n\t\tworld.addConstructor(\"box\", new BulletConstructor(boxModel, 1f)); // mass = 1kg: dynamic body\n\t\tworld.addConstructor(\"staticbox\", new BulletConstructor(boxModel, 0f)); // mass = 0: static body\n\t}","commit_id":"f1fbbe1eef479771c7750281eab6e741c5eafde6","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\n\tpublic void create () {\n\t\tsuper.create();\n\n\t\ttexture = new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n\t\tfinal Material material = new Material(new TextureAttribute(TextureAttribute.Diffuse, new TextureDescriptor(texture)));\n\t\tfinal VertexAttributes attributes = new VertexAttributes(\n\t\t\t\t\t\tnew VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE),\n\t\t\t\t\t\tnew VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE),\n\t\t\t\t\t\tnew VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE+\"0\"));\n\t\t\n\t\tfinal Model sphere = modelBuilder.createSphere(4f, 4f, 4f, 24, 24, material, attributes);\n\t\tworld.addConstructor(\"sphere\", new BulletConstructor(sphere, 10f, new btSphereShape(2f)));\n\t\t\n\t\tfinal Model cylinder = modelBuilder.createCylinder(4f, 6f, 4f, 16, material, attributes);\n\t\tworld.addConstructor(\"cylinder\", new BulletConstructor(cylinder, 10f, new btCylinderShape(Vector3.tmp.set(2f, 3f, 2f))));\n\t\t\n\t\tfinal Model box = modelBuilder.createBox(4f, 4f, 2f, material, attributes);\n\t\tworld.addConstructor(\"box2\", new BulletConstructor(box, 10f, new btBoxShape(Vector3.tmp.set(2f, 2f, 1f))));\n\t\t\n\t\tfinal Model cone = modelBuilder.createCone(4f, 6f, 4f, 16, material, attributes);\n\t\tworld.addConstructor(\"cone\", new BulletConstructor(cone, 10f, new btConeShape(2f,6f)));\n\t\t\t\n\t\t// Create the entities\n\t\t(ground = world.add(\"ground\", 0f, 0f, 0f))\n\t\t\t.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);\n\t\tworld.add(\"sphere\", 0, 5, 5);\n\t\tworld.add(\"cylinder\", 5, 5, 0);\n\t\tworld.add(\"box2\", 0, 5, 0);\n\t\tworld.add(\"cone\", 5, 5, 5);\n\t}","id":69147,"modified_method":"@Override\n\tpublic void create () {\n\t\tsuper.create();\n\n\t\ttexture = new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n\t\tfinal Material material = new Material(ColorAttribute.createSpecular(1,1,1,1), new TextureAttribute(TextureAttribute.Diffuse, new TextureDescriptor(texture)));\n\t\tfinal VertexAttributes attributes = new VertexAttributes(\n\t\t\t\t\t\tnew VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE),\n\t\t\t\t\t\tnew VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE),\n\t\t\t\t\t\tnew VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE+\"0\"));\n\t\t\n\t\tfinal Model sphere = modelBuilder.createSphere(4f, 4f, 4f, 24, 24, material, attributes);\n\t\tworld.addConstructor(\"sphere\", new BulletConstructor(sphere, 10f, new btSphereShape(2f)));\n\t\t\n\t\tfinal Model cylinder = modelBuilder.createCylinder(4f, 6f, 4f, 16, material, attributes);\n\t\tworld.addConstructor(\"cylinder\", new BulletConstructor(cylinder, 10f, new btCylinderShape(Vector3.tmp.set(2f, 3f, 2f))));\n\t\t\n\t\tfinal Model box = modelBuilder.createBox(4f, 4f, 2f, material, attributes);\n\t\tworld.addConstructor(\"box2\", new BulletConstructor(box, 10f, new btBoxShape(Vector3.tmp.set(2f, 2f, 1f))));\n\t\t\n\t\tfinal Model cone = modelBuilder.createCone(4f, 6f, 4f, 16, material, attributes);\n\t\tworld.addConstructor(\"cone\", new BulletConstructor(cone, 10f, new btConeShape(2f,6f)));\n\t\t\t\n\t\t// Create the entities\n\t\t(ground = world.add(\"ground\", 0f, 0f, 0f))\n\t\t\t.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);\n\t\tworld.add(\"sphere\", 0, 5, 5);\n\t\tworld.add(\"cylinder\", 5, 5, 0);\n\t\tworld.add(\"box2\", 0, 5, 0);\n\t\tworld.add(\"cone\", 5, 5, 5);\n\t}","commit_id":"f1fbbe1eef479771c7750281eab6e741c5eafde6","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\n\tpublic void create () {\n\t\tsuper.create();\n\n\t\tfinal Model sceneModel = objLoader.loadObj(Gdx.files.internal(\"data/car.obj\"));\n\t\tworld.addConstructor(\"car\", new BulletConstructor(sceneModel, 5f, createConvexHullShape(sceneModel)));\n\n\t\t// Create the entities\n\t\tworld.add(\"ground\", 0f, 0f, 0f)\n\t\t\t.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);\n\t\t\n\t\tfor (float y = 10f; y < 50f; y += 5f)\n\t\t\tworld.add(\"car\", -2f+(float)Math.random()*4f, y, -2f+(float)Math.random()*4f)\n\t\t\t\t.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);\n\t}","id":69148,"modified_method":"@Override\n\tpublic void create () {\n\t\tsuper.create();\n\n\t\tfinal Model sceneModel = objLoader.loadObj(Gdx.files.internal(\"data/car.obj\"));\n\t\tsceneModel.materials.get(0).clear();\n\t\tsceneModel.materials.get(0).add(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE));\n\t\tworld.addConstructor(\"car\", new BulletConstructor(sceneModel, 5f, createConvexHullShape(sceneModel)));\n\n\t\t// Create the entities\n\t\tworld.add(\"ground\", 0f, 0f, 0f)\n\t\t\t.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);\n\t\t\n\t\tfor (float y = 10f; y < 50f; y += 5f)\n\t\t\tworld.add(\"car\", -2f+(float)Math.random()*4f, y, -2f+(float)Math.random()*4f)\n\t\t\t\t.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);\n\t}","commit_id":"f1fbbe1eef479771c7750281eab6e741c5eafde6","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\n\tpublic void begin (final Camera camera, final RenderContext context) {\n\t\tthis.context = context;\n\t\tthis.camera = camera;\n\t\tprogram.begin();\n\t\tcontext.setDepthTest(true, GL10.GL_LEQUAL);\n\t\tprogram.setUniformMatrix(projTransLoc, camera.combined);\n\t\tif (currentLights != null)\n\t\t\tfor (int i = 0; i < currentLights.length; i++)\n\t\t\t\tcurrentLights[i].set(null);\n\t\tambient.set(0,0,0,0);\n\t}","id":69149,"modified_method":"@Override\n\tpublic void begin (final Camera camera, final RenderContext context) {\n\t\tthis.context = context;\n\t\tthis.camera = camera;\n\t\tprogram.begin();\n\t\tcontext.setDepthTest(true, GL10.GL_LEQUAL);\n\t\t\n\t\tif (projTransLoc >= 0)\n\t\t\tprogram.setUniformMatrix(projTransLoc, camera.combined);\n\t\tif (cameraPosLoc >= 0)\n\t\t\tprogram.setUniformf(cameraPosLoc, camera.position);\n\t\tif (cameraDirLoc >= 0)\n\t\t\tprogram.setUniformf(cameraDirLoc, camera.direction);\n\t\tif (cameraUpLoc >= 0)\n\t\t\tprogram.setUniformf(cameraUpLoc, camera.up);\n\t\t\n\t\tif (currentLights != null)\n\t\t\tfor (int i = 0; i < currentLights.length; i++)\n\t\t\t\tcurrentLights[i].set(null);\n\t\tambient.set(0,0,0,0);\n\t}","commit_id":"f1fbbe1eef479771c7750281eab6e741c5eafde6","url":"https://github.com/libgdx/libgdx"},{"original_method":"public DefaultShader(final String vertexShader, final String fragmentShader, final long mask, int maxLightsCount) {\n\t\tif (!Gdx.graphics.isGL20Available())\n\t\t\tthrow new GdxRuntimeException(\"This shader requires OpenGL ES 2.0\");\n\t\t\n\t\tcurrentLights = maxLightsCount < 0 ? null : new Light[maxLightsCount];\n\t\tif (currentLights != null)\n\t\t\tfor (int i = 0; i < currentLights.length; i++)\n\t\t\t\tcurrentLights[i] = new Light();\n\t\t\n\t\tString prefix = \"\";\n\t\tthis.mask = mask;\n\t\t\n\t\tif (!ignoreUnimplemented && (implementedFlags & mask) != mask)\n\t\t\tthrow new GdxRuntimeException(\"Some attributes not implemented yet (\"+mask+\")\");\n\t\t\n\t\tif (maxLightsCount > 0)\n\t\t\tprefix += \"#define lightsCount \"+maxLightsCount+\"\\n\";\n\t\tif ((mask & BlendingAttribute.Type) == BlendingAttribute.Type)\n\t\t\tprefix += \"#define \"+BlendingAttribute.Alias+\"Flag\\n\";\n\t\tif ((mask & TextureAttribute.Diffuse) == TextureAttribute.Diffuse)\n\t\t\tprefix += \"#define \"+TextureAttribute.DiffuseAlias+\"Flag\\n\";\n\t\tif ((mask & ColorAttribute.Diffuse) == ColorAttribute.Diffuse)\n\t\t\tprefix += \"#define \"+ColorAttribute.DiffuseAlias+\"Flag\\n\";\n\n\t\tprogram = new ShaderProgram(prefix + vertexShader, prefix + fragmentShader);\n\t\tif (!program.isCompiled())\n\t\t\tthrow new GdxRuntimeException(program.getLog());\n\t\t\n\t\tprojTransLoc = program.getUniformLocation(PROJECTION_TRANSFORM);\n\t\tmodelTransLoc = program.getUniformLocation(MODEL_TRANSFORM);\n\t\tnormalTransLoc = program.getUniformLocation(NORMAL_TRANSFORM);\n\t\tdiffuseTextureLoc = ((mask & TextureAttribute.Diffuse) != TextureAttribute.Diffuse) ? -1 : program.getUniformLocation(TextureAttribute.DiffuseAlias);\n\t\tdiffuseColorLoc = ((mask & ColorAttribute.Diffuse) != ColorAttribute.Diffuse) ? -1 : program.getUniformLocation(ColorAttribute.DiffuseAlias);\n\t\tambientLoc = maxLightsCount < 0 ? -1 : program.getUniformLocation(\"ambient\");\n\t\tlightsLoc = maxLightsCount > 0 ? program.getUniformLocation(\"lights[0].type\") : -1;\n\t\tlightSize = (lightsLoc >= 0 && maxLightsCount > 1) ? (program.getUniformLocation(\"lights[1].type\") - lightsLoc) : -1;\n\t\tlightTypeOffset = 0;\n\t\tlightColorOffset = lightsLoc >= 0 ? program.getUniformLocation(\"lights[0].color\") - lightsLoc : -1;\n\t\tlightPositionOffset = lightsLoc >= 0 ? program.getUniformLocation(\"lights[0].position\") - lightsLoc : -1;\n\t\tlightAttenuationOffset = lightsLoc >= 0 ? program.getUniformLocation(\"lights[0].attenuation\") - lightsLoc : -1;\n\t\tlightDirectionOffset = lightsLoc >= 0 ? program.getUniformLocation(\"lights[0].direction\") - lightsLoc : -1;\n\t\tlightAngleOffset = lightsLoc >= 0 ? program.getUniformLocation(\"lights[0].angle\") - lightsLoc : -1;\n\t\tlightExponentOffset = lightsLoc >= 0 ? program.getUniformLocation(\"lights[0].exponent\") - lightsLoc : -1;\n\t}","id":69150,"modified_method":"public DefaultShader(final String vertexShader, final String fragmentShader, final long mask, int maxLightsCount) {\n\t\tif (!Gdx.graphics.isGL20Available())\n\t\t\tthrow new GdxRuntimeException(\"This shader requires OpenGL ES 2.0\");\n\t\t\n\t\tcurrentLights = maxLightsCount < 0 ? null : new Light[maxLightsCount];\n\t\tif (currentLights != null)\n\t\t\tfor (int i = 0; i < currentLights.length; i++)\n\t\t\t\tcurrentLights[i] = new Light();\n\t\t\n\t\tString prefix = \"\";\n\t\tthis.mask = mask;\n\t\t\n\t\tif (!ignoreUnimplemented && (implementedFlags & mask) != mask)\n\t\t\tthrow new GdxRuntimeException(\"Some attributes not implemented yet (\"+mask+\")\");\n\t\t\n\t\tif (maxLightsCount > 0)\n\t\t\tprefix += \"#define lightsCount \"+maxLightsCount+\"\\n\";\n\t\tif (can(BlendingAttribute.Type))\n\t\t\tprefix += \"#define \"+BlendingAttribute.Alias+\"Flag\\n\";\n\t\tif (can(TextureAttribute.Diffuse))\n\t\t\tprefix += \"#define \"+TextureAttribute.DiffuseAlias+\"Flag\\n\";\n\t\tif (can(ColorAttribute.Diffuse))\n\t\t\tprefix += \"#define \"+ColorAttribute.DiffuseAlias+\"Flag\\n\";\n\t\tif (can(ColorAttribute.Specular))\n\t\t\tprefix += \"#define \"+ColorAttribute.SpecularAlias+\"Flag\\n\";\n\t\tif (can(FloatAttribute.Shininess))\n\t\t\tprefix += \"#define \"+FloatAttribute.ShininessAlias+\"Flag\\n\";\n\n\t\tprogram = new ShaderProgram(prefix + vertexShader, prefix + fragmentShader);\n\t\tif (!program.isCompiled())\n\t\t\tthrow new GdxRuntimeException(program.getLog());\n\t\t\n\t\t// General uniforms\n\t\tprojTransLoc = program.getUniformLocation(PROJECTION_TRANSFORM);\n\t\tmodelTransLoc = program.getUniformLocation(MODEL_TRANSFORM);\n\t\tnormalTransLoc = program.getUniformLocation(NORMAL_TRANSFORM);\n\t\tcameraPosLoc = program.getUniformLocation(CAMERA_POSITION);\n\t\tcameraDirLoc = program.getUniformLocation(CAMERA_DIRECTION);\n\t\tcameraUpLoc = program.getUniformLocation(CAMERA_UP);\n\t\t\n\t\t// Material uniforms\n\t\tdiffuseTextureLoc = !can(TextureAttribute.Diffuse) ? -1 : program.getUniformLocation(TextureAttribute.DiffuseAlias);\n\t\tdiffuseColorLoc = !can(ColorAttribute.Diffuse) ? -1 : program.getUniformLocation(ColorAttribute.DiffuseAlias);\n\t\tspecularColorLoc = !can(ColorAttribute.Specular) ? -1 : program.getUniformLocation(ColorAttribute.SpecularAlias);\n\t\tshininessLoc = !can(FloatAttribute.Shininess) ? -1 : program.getUniformLocation(FloatAttribute.ShininessAlias);\n\t\t\n\t\t// Lighting uniforms\n\t\tambientLoc = maxLightsCount < 0 ? -1 : program.getUniformLocation(\"ambient\");\n\t\tlightsLoc = maxLightsCount > 0 ? program.getUniformLocation(\"lights[0].type\") : -1;\n\t\tlightSize = (lightsLoc >= 0 && maxLightsCount > 1) ? (program.getUniformLocation(\"lights[1].type\") - lightsLoc) : -1;\n\t\tlightTypeOffset = 0;\n\t\tlightColorOffset = lightsLoc >= 0 ? program.getUniformLocation(\"lights[0].color\") - lightsLoc : -1;\n\t\tlightPositionOffset = lightsLoc >= 0 ? program.getUniformLocation(\"lights[0].position\") - lightsLoc : -1;\n\t\tlightAttenuationOffset = lightsLoc >= 0 ? program.getUniformLocation(\"lights[0].attenuation\") - lightsLoc : -1;\n\t\tlightDirectionOffset = lightsLoc >= 0 ? program.getUniformLocation(\"lights[0].direction\") - lightsLoc : -1;\n\t\tlightAngleOffset = lightsLoc >= 0 ? program.getUniformLocation(\"lights[0].angle\") - lightsLoc : -1;\n\t\tlightExponentOffset = lightsLoc >= 0 ? program.getUniformLocation(\"lights[0].exponent\") - lightsLoc : -1;\n\t\t\n\t\t// FIXME Cache vertex attribute locations...\n\t}","commit_id":"f1fbbe1eef479771c7750281eab6e741c5eafde6","url":"https://github.com/libgdx/libgdx"},{"original_method":"private final void bindMaterial(final Renderable renderable) {\n\t\tif (currentMaterial == renderable.material)\n\t\t\treturn;\n\t\tcurrentMaterial = renderable.material;\n\t\tfor (Material.Attribute attr : currentMaterial) {\n\t\t\tfinal long t = attr.type;\n\t\t\tif (BlendingAttribute.is(t))\n\t\t\t\tcontext.setBlending(true, ((BlendingAttribute)attr).sourceFunction, ((BlendingAttribute)attr).destFunction);\n\t\t\telse if (ColorAttribute.is(t)) {\n\t\t\t\tColorAttribute col = (ColorAttribute)attr;\n\t\t\t\tif ((t & ColorAttribute.Diffuse) == ColorAttribute.Diffuse)\n\t\t\t\t\tprogram.setUniformf(diffuseColorLoc, col.color);\n\t\t\t\t// TODO else if (..)\n\t\t\t}\n\t\t\telse if (TextureAttribute.is(t)) {\n\t\t\t\tTextureAttribute tex = (TextureAttribute)attr;\n\t\t\t\tif ((t & TextureAttribute.Diffuse) == TextureAttribute.Diffuse)\n\t\t\t\t\tbindTextureAttribute(diffuseTextureLoc, tex);\n\t\t\t\t// TODO else if (..)\n\t\t\t}  \n\t\t\telse {\n\t\t\t\tif(!ignoreUnimplemented) {\n\t\t\t\t\tthrow new GdxRuntimeException(\"unknown attribute\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":69151,"modified_method":"private final void bindMaterial(final Renderable renderable) {\n\t\tif (currentMaterial == renderable.material)\n\t\t\treturn;\n\t\tcurrentMaterial = renderable.material;\n\t\tfor (Material.Attribute attr : currentMaterial) {\n\t\t\tfinal long t = attr.type;\n\t\t\tif (BlendingAttribute.is(t))\n\t\t\t\tcontext.setBlending(true, ((BlendingAttribute)attr).sourceFunction, ((BlendingAttribute)attr).destFunction);\n\t\t\telse if (ColorAttribute.is(t)) {\n\t\t\t\tColorAttribute col = (ColorAttribute)attr;\n\t\t\t\tif ((t & ColorAttribute.Diffuse) == ColorAttribute.Diffuse)\n\t\t\t\t\tprogram.setUniformf(diffuseColorLoc, col.color);\n\t\t\t\telse if ((t & ColorAttribute.Specular) == ColorAttribute.Specular)\n\t\t\t\t\tprogram.setUniformf(specularColorLoc, col.color);\n\t\t\t}\n\t\t\telse if (TextureAttribute.is(t)) {\n\t\t\t\tTextureAttribute tex = (TextureAttribute)attr;\n\t\t\t\tif ((t & TextureAttribute.Diffuse) == TextureAttribute.Diffuse)\n\t\t\t\t\tbindTextureAttribute(diffuseTextureLoc, tex);\n\t\t\t\t// TODO else if (..)\n\t\t\t}\n\t\t\telse if ((t & FloatAttribute.Shininess) == FloatAttribute.Shininess)\n\t\t\t\tprogram.setUniformf(shininessLoc, ((FloatAttribute)attr).value);\n\t\t\telse if(!ignoreUnimplemented)\n\t\t\t\t\tthrow new GdxRuntimeException(\"Unknown material attribute: \"+attr.toString());\n\t\t}\n\t}","commit_id":"f1fbbe1eef479771c7750281eab6e741c5eafde6","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\n\tpublic void create () {\n\t\tsuper.create();\n\t\t\n\t\tfinal Model sphereModel = modelBuilder.createSphere(0.5f, 0.5f, 0.5f, 8, 8, new Material(new ColorAttribute(ColorAttribute.Diffuse, Color.WHITE)), new VertexAttributes(new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE))); \n\t\tfinal BulletConstructor sphereConstructor = new BulletConstructor(sphereModel, 0.25f, new btSphereShape(0.25f));\n\t\tsphereConstructor.bodyInfo.setM_restitution(1f);\n\t\tworld.addConstructor(\"sphere\", sphereConstructor);\n\t\t\n\t\tfinal Model sceneModel = objLoader.loadObj(Gdx.files.internal(\"data/scene.obj\"));\n\t\tfinal BulletConstructor sceneConstructor = new BulletConstructor(sceneModel, 0f, new btBvhTriangleMeshShape(true, sceneModel));\n\t\tsceneConstructor.bodyInfo.setM_restitution(0.25f);\n\t\tworld.addConstructor(\"scene\", sceneConstructor);\n\t\t\n\t\tworld.add(\"scene\", (new Matrix4()).setToTranslation(0f, 2f, 0f).rotate(Vector3.Y, -90))\n\t\t\t.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);\n\n\t\tworld.add(\"ground\", 0f, 0f, 0f)\n\t\t\t.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);\n\t\t\n\t\tfor (float x = -3; x < 7; x++) {\n\t\t\tfor (float z = -5; z < 5; z++) {\n\t\t\t\tworld.add(\"sphere\", x, 10f + (float)Math.random() * 0.1f, z)\n\t\t\t\t\t.setColor(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);\n\t\t\t}\n\t\t}\n\t}","id":69152,"modified_method":"@Override\n\tpublic void create () {\n\t\tsuper.create();\n\t\t\n\t\tfinal Model sphereModel = modelBuilder.createSphere(0.5f, 0.5f, 0.5f, 8, 8, \n\t\t\tnew Material(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE)), \n\t\t\tnew VertexAttributes(new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE))); \n\t\tfinal BulletConstructor sphereConstructor = new BulletConstructor(sphereModel, 0.25f, new btSphereShape(0.25f));\n\t\tsphereConstructor.bodyInfo.setM_restitution(1f);\n\t\tworld.addConstructor(\"sphere\", sphereConstructor);\n\t\t\n\t\tfinal Model sceneModel = objLoader.loadObj(Gdx.files.internal(\"data/scene.obj\"));\n\t\tfinal BulletConstructor sceneConstructor = new BulletConstructor(sceneModel, 0f, new btBvhTriangleMeshShape(true, sceneModel));\n\t\tsceneConstructor.bodyInfo.setM_restitution(0.25f);\n\t\tworld.addConstructor(\"scene\", sceneConstructor);\n\t\t\n\t\tworld.add(\"scene\", (new Matrix4()).setToTranslation(0f, 2f, 0f).rotate(Vector3.Y, -90))\n\t\t\t.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);\n\n\t\tworld.add(\"ground\", 0f, 0f, 0f)\n\t\t\t.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);\n\t\t\n\t\tfor (float x = -3; x < 7; x++) {\n\t\t\tfor (float z = -5; z < 5; z++) {\n\t\t\t\tworld.add(\"sphere\", x, 10f + (float)Math.random() * 0.1f, z)\n\t\t\t\t\t.setColor(0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 0.5f + 0.5f * (float)Math.random(), 1f);\n\t\t\t}\n\t\t}\n\t}","commit_id":"f1fbbe1eef479771c7750281eab6e741c5eafde6","url":"https://github.com/libgdx/libgdx"},{"original_method":"protected Model createCapsuleModel(float radius, float height) {\n\t\tfinal float hh = radius + 0.5f * height;\n\t\t// return ModelBuilder\n\t\treturn modelBuilder.createCylinder(radius * 2, hh * 2f, radius * 2f, 16, new Material(new ColorAttribute(ColorAttribute.Diffuse, Color.WHITE)), new VertexAttributes(new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE)));\n\t\t// return ModelBuilder.createBox(radius*2f, hh*2f, radius*2f, new NewMaterial(new ColorAttribute(ColorAttribute.Diffuse, Color.WHITE)));\n\t}","id":69153,"modified_method":"protected Model createCapsuleModel(float radius, float height) {\n\t\tfinal float hh = radius + 0.5f * height;\n\t\t// return ModelBuilder\n\t\treturn modelBuilder.createCylinder(radius * 2, hh * 2f, radius * 2f, 16, \n\t\t\tnew Material(ColorAttribute.createDiffuse(Color.WHITE), ColorAttribute.createSpecular(Color.WHITE)), \n\t\t\tnew VertexAttributes(new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE)));\n\t\t// return ModelBuilder.createBox(radius*2f, hh*2f, radius*2f, new NewMaterial(new ColorAttribute(ColorAttribute.Diffuse, Color.WHITE)));\n\t}","commit_id":"f1fbbe1eef479771c7750281eab6e741c5eafde6","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\n\tpublic void create () {\n\t\tsuper.create();\n\t\t\n\t\tworld.add(\"ground\", 0f, 0f, 0f)\n\t\t.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);\n\t\t\n\t\tfloat x0 = -2f, y0 = 6f, z0 = -2f;\n\t\tfloat x1 = 8f, y1 = 6f, z1 = 8f;\n\t\tVector3 patch00 = new Vector3(x0, y0, z0);\n\t\tVector3 patch10 = new Vector3(x1, y1, z0);\n\t\tVector3 patch01 = new Vector3(x0, y0, z1);\n\t\tVector3 patch11 = new Vector3(x1, y1, z1);\n\t\tsoftBody = btSoftBodyHelpers.CreatePatch(worldInfo, patch00, patch10, patch01, patch11, 15, 15, 15, false);\n\t\tsoftBody.takeOwnership();\n\t\tsoftBody.setTotalMass(100f);\n\t\t((btSoftRigidDynamicsWorld)(world.collisionWorld)).addSoftBody(softBody);\n\t\t\n\t\tfinal int vertCount = softBody.getNodeCount();\n\t\tfinal int faceCount = softBody.getFaceCount(); \n\t\tmesh = new Mesh(false, vertCount, faceCount*3,  new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE), new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + \"0\"));\n\t\tfinal int vertSize = mesh.getVertexSize() / 4;\n\t\tmesh.getVerticesBuffer().position(0);\n\t\tmesh.getVerticesBuffer().limit(vertCount * vertSize);\n\t\tmesh.getIndicesBuffer().position(0);\n\t\tmesh.getIndicesBuffer().limit(faceCount * 3);\n\t\tsoftBody.getVertices(mesh.getVerticesBuffer(), vertCount, mesh.getVertexSize(), 0);\n\t\tsoftBody.getIndices(mesh.getIndicesBuffer(), faceCount);\n\t\t\n\t\tfinal float[] verts = new float[vertCount * vertSize];\n\t\tfinal int uvOffset = mesh.getVertexAttribute(Usage.TextureCoordinates).offset / 4;\n\t\tfinal int normalOffset = mesh.getVertexAttribute(Usage.Normal).offset / 4;\n\t\tmesh.getVertices(verts);\n\t\tfor (int i = 0; i < vertCount; i++) {\n\t\t\tverts[i*vertSize+normalOffset] = 0f;\n\t\t\tverts[i*vertSize+normalOffset+1] = 1f;\n\t\t\tverts[i*vertSize+normalOffset+2] = 0f;\n\t\t\tverts[i*vertSize+uvOffset] = (verts[i*vertSize] - x0) / (x1 - x0);\n\t\t\tverts[i*vertSize+uvOffset+1] = (verts[i*vertSize+2] - z0) / (z1 - z0);\n\t\t}\n\t\tmesh.setVertices(verts);\n\t\ttexture = new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n\t\t\n\t\tmodel = ModelBuilder.createFromMesh(mesh, GL10.GL_TRIANGLES, new Material(new TextureAttribute(TextureAttribute.Diffuse, new TextureDescriptor(texture))));\n\t\tinstance = new ModelInstance(model);\n\t}","id":69154,"modified_method":"@Override\n\tpublic void create () {\n\t\tsuper.create();\n\t\t\n\t\tworld.add(\"ground\", 0f, 0f, 0f)\n\t\t.setColor(0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 0.25f + 0.5f * (float)Math.random(), 1f);\n\t\t\n\t\tfloat x0 = -2f, y0 = 6f, z0 = -2f;\n\t\tfloat x1 = 8f, y1 = 6f, z1 = 8f;\n\t\tVector3 patch00 = new Vector3(x0, y0, z0);\n\t\tVector3 patch10 = new Vector3(x1, y1, z0);\n\t\tVector3 patch01 = new Vector3(x0, y0, z1);\n\t\tVector3 patch11 = new Vector3(x1, y1, z1);\n\t\tsoftBody = btSoftBodyHelpers.CreatePatch(worldInfo, patch00, patch10, patch01, patch11, 15, 15, 15, false);\n\t\tsoftBody.takeOwnership();\n\t\tsoftBody.setTotalMass(100f);\n\t\t((btSoftRigidDynamicsWorld)(world.collisionWorld)).addSoftBody(softBody);\n\t\t\n\t\tfinal int vertCount = softBody.getNodeCount();\n\t\tfinal int faceCount = softBody.getFaceCount(); \n\t\tmesh = new Mesh(false, vertCount, faceCount*3,  new VertexAttribute(Usage.Position, 3, ShaderProgram.POSITION_ATTRIBUTE), new VertexAttribute(Usage.Normal, 3, ShaderProgram.NORMAL_ATTRIBUTE), new VertexAttribute(Usage.TextureCoordinates, 2, ShaderProgram.TEXCOORD_ATTRIBUTE + \"0\"));\n\t\tfinal int vertSize = mesh.getVertexSize() / 4;\n\t\tmesh.getVerticesBuffer().position(0);\n\t\tmesh.getVerticesBuffer().limit(vertCount * vertSize);\n\t\tmesh.getIndicesBuffer().position(0);\n\t\tmesh.getIndicesBuffer().limit(faceCount * 3);\n\t\tsoftBody.getVertices(mesh.getVerticesBuffer(), vertCount, mesh.getVertexSize(), 0);\n\t\tsoftBody.getIndices(mesh.getIndicesBuffer(), faceCount);\n\t\t\n\t\tfinal float[] verts = new float[vertCount * vertSize];\n\t\tfinal int uvOffset = mesh.getVertexAttribute(Usage.TextureCoordinates).offset / 4;\n\t\tfinal int normalOffset = mesh.getVertexAttribute(Usage.Normal).offset / 4;\n\t\tmesh.getVertices(verts);\n\t\tfor (int i = 0; i < vertCount; i++) {\n\t\t\tverts[i*vertSize+normalOffset] = 0f;\n\t\t\tverts[i*vertSize+normalOffset+1] = 1f;\n\t\t\tverts[i*vertSize+normalOffset+2] = 0f;\n\t\t\tverts[i*vertSize+uvOffset] = (verts[i*vertSize] - x0) / (x1 - x0);\n\t\t\tverts[i*vertSize+uvOffset+1] = (verts[i*vertSize+2] - z0) / (z1 - z0);\n\t\t}\n\t\tmesh.setVertices(verts);\n\t\ttexture = new Texture(Gdx.files.internal(\"data/badlogic.jpg\"));\n\t\t\n\t\tmodel = ModelBuilder.createFromMesh(mesh, GL10.GL_TRIANGLES, \n\t\t\tnew Material(TextureAttribute.createDiffuse(texture), ColorAttribute.createSpecular(Color.WHITE)));\n\t\tinstance = new ModelInstance(model);\n\t}","commit_id":"f1fbbe1eef479771c7750281eab6e741c5eafde6","url":"https://github.com/libgdx/libgdx"},{"original_method":"public void create () {\r\n\r\n\t\tlightManager = new LightManager(LIGHTS_NUM, LightQuality.FRAGMENT);\r\n\t\tfor (int i = 0; i < LIGHTS_NUM; i++) {\r\n\t\t\tPointLight l = new PointLight();\r\n\t\t\tl.position.set(MathUtils.random(6) - 3, 1 + MathUtils.random(6), MathUtils.random(6) - 3);\r\n\t\t\tl.color.r = MathUtils.random();\r\n\t\t\tl.color.b = MathUtils.random();\r\n\t\t\tl.color.g = MathUtils.random();\r\n\t\t\tl.intensity = LIGHT_INTESITY;\r\n\t\t\tlightManager.addLigth(l);\r\n\t\t}\r\n\t\tlightManager.dirLight = new DirectionalLight();\r\n\t\tlightManager.dirLight.color.set(0.1f, 0.1f, 0.1f, 1);\r\n\t\tlightManager.dirLight.direction.set(-.4f, -1, 0.03f).nor();\r\n\r\n\t\tlightManager.ambientLight.set(.01f, 0.01f, 0.03f, 0f);\r\n\r\n\t\tcam = new PerspectiveCamera(45, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\r\n\t\tcam.near = 0.1f;\r\n\t\tcam.far = 264f;\r\n\t\tcam.position.set(-2, 1.75f, -2f);\r\n\t\tcam.update();\r\n\r\n\t\tcamController = new PerspectiveCamController(cam);\r\n\t\tGdx.input.setInputProcessor(camController);\r\n\r\n\t\ttexture = new Texture(Gdx.files.internal(\"data/multipleuvs_1.png\"), Format.RGB565, true);\r\n\t\ttexture.setFilter(TextureFilter.MipMapLinearNearest, TextureFilter.Linear);\r\n\t\ttexture2 = new Texture(Gdx.files.internal(\"data/texture2UV1N.png\"), Format.RGB565, true);\r\n\t\ttexture2.setFilter(TextureFilter.MipMapLinearNearest, TextureFilter.Linear);\r\n\r\n\t\tmodel = ModelLoaderRegistry.loadStillModel(Gdx.files.internal(\"data/models/sphere.obj\"));\r\n\t\tmodel2 = ModelLoaderRegistry.loadStillModel(Gdx.files.internal(\"data/models/basicscene.obj\"));\r\n\r\n\t\tinstance = new StillModelNode();\r\n\t\tinstance.getTransform().translate(2, 0, -5);\r\n\t\tinstance2 = new StillModelNode();\r\n\r\n\t\tBoundingBox box = new BoundingBox();\r\n\t\tmodel.getBoundingBox(box);\r\n\t\tinstance.radius = box.getDimensions().len() / 2;\r\n\r\n\t\tmodel2.getBoundingBox(box);\r\n\t\tinstance2.radius = box.getDimensions().len() / 2;\r\n\t\tinstance2.matrix.scale(2, 1, 2);\r\n\r\n\t\tprotoRenderer = new PrototypeRendererGL20(lightManager);\r\n\t\tprotoRenderer.cam = cam;\r\n\r\n\t\tMaterialAttribute c1 = new ColorAttribute(new Color(0.75f, 0.75f, 0.75f, 0.6f), ColorAttribute.diffuse);\r\n\t\tMaterialAttribute c2 = new ColorAttribute(new Color(0.35f, 0.35f, 0.35f, 0.35f), ColorAttribute.specular);\r\n\t\tMaterialAttribute c3 = new ColorAttribute(new Color(0.2f, 1f, 0.15f, 1.0f), ColorAttribute.rim);\r\n\t\tMaterialAttribute t1 = new TextureAttribute(texture, 0, TextureAttribute.diffuseTexture);\r\n\t\tMaterialAttribute t2 = new TextureAttribute(texture2, 1, TextureAttribute.specularTexture);\r\n\r\n\t\tMaterialAttribute b = new BlendingAttribute(BlendingAttribute.translucent);\r\n\r\n\t\tMaterial material2 = new Material(\"basic\", c2, t1);\r\n\t\tmodel2.setMaterial(material2);\r\n\r\n\t\tMaterial material = new Material(\"shiningBall\", c1, c2);\r\n\t\tmodel.setMaterial(material);\r\n\r\n\t\tmodel3 = ModelLoaderRegistry.loadKeyframedModel(Gdx.files.internal(\"data/models/knight.md2\"));\r\n\t\tanimInstance = new AnimatedModelNode();\r\n\t\tanimInstance.animation = model3.getAnimations()[0].name;\r\n\t\tanimInstance.looping = true;\r\n\t\tmodel3.getBoundingBox(box);\r\n\r\n\t\tanimInstance.matrix.trn(-1.75f, 0f, -5.5f);\r\n\t\tanimInstance.matrix.scale(0.05f, 0.05f, 0.05f);\r\n\t\tbox.mul(animInstance.matrix);\r\n\t\tanimInstance.radius = (box.getDimensions().len() / 2);\r\n\t\ttexture3 = new Texture(Gdx.files.internal(\"data/models/knight.jpg\"), Format.RGB565, true);\r\n\t\ttexture3.setFilter(TextureFilter.MipMapLinearNearest, TextureFilter.Linear);\r\n\r\n\t\tMaterialAttribute t3 = new TextureAttribute(texture3, 0, TextureAttribute.diffuseTexture);\r\n\t\tMaterial material3 = new Material(\"s\", t2, t3, c3);\r\n\t\tmodel3.setMaterial(material3);\r\n\r\n\t}","id":69155,"modified_method":"public void create () {\r\n\r\n\t\tlightManager = new LightManager(LIGHTS_NUM, LightQuality.FRAGMENT);\r\n\t\tfor (int i = 0; i < LIGHTS_NUM; i++) {\r\n\t\t\tPointLight l = new PointLight();\r\n\t\t\tl.position.set(MathUtils.random(6) - 3, 1 + MathUtils.random(6), MathUtils.random(6) - 3);\r\n\t\t\tl.color.r = MathUtils.random();\r\n\t\t\tl.color.b = MathUtils.random();\r\n\t\t\tl.color.g = MathUtils.random();\r\n\t\t\tl.intensity = LIGHT_INTESITY;\r\n\t\t\tlightManager.addLigth(l);\r\n\t\t}\r\n\t\tlightManager.dirLight = new DirectionalLight();\r\n\t\tlightManager.dirLight.color.set(0.1f, 0.1f, 0.1f, 1);\r\n\t\tlightManager.dirLight.direction.set(-.4f, -1, 0.03f).nor();\r\n\r\n\t\tlightManager.ambientLight.set(.01f, 0.01f, 0.03f, 0f);\r\n\r\n\t\tcam = new PerspectiveCamera(45, Gdx.graphics.getWidth(), Gdx.graphics.getHeight());\r\n\t\tcam.near = 0.1f;\r\n\t\tcam.far = 264f;\r\n\t\tcam.position.set(-2, 1.75f, -2f);\r\n\t\tcam.update();\r\n\r\n\t\tcamController = new PerspectiveCamController(cam);\r\n\t\tGdx.input.setInputProcessor(camController);\r\n\r\n\t\ttexture = new Texture(Gdx.files.internal(\"data/multipleuvs_1.png\"), Format.RGB565, true);\r\n\t\ttexture.setFilter(TextureFilter.MipMapLinearNearest, TextureFilter.Linear);\r\n\t\ttexture2 = new Texture(Gdx.files.internal(\"data/texture2UV1N.png\"), Format.RGB565, true);\r\n\t\ttexture2.setFilter(TextureFilter.MipMapLinearNearest, TextureFilter.Linear);\r\n\r\n\t\tmodel = ModelLoaderRegistry.loadStillModel(Gdx.files.internal(\"data/models/sphere.obj\"));\r\n\t\tmodel2 = ModelLoaderRegistry.loadStillModel(Gdx.files.internal(\"data/models/basicscene.obj\"));\r\n\r\n\t\tinstance = new StillModelNode();\r\n\t\tinstance.getTransform().translate(2, 0, -5);\r\n\t\tinstance2 = new StillModelNode();\r\n\r\n\t\tBoundingBox box = new BoundingBox();\r\n\t\tmodel.getBoundingBox(box);\r\n\t\tinstance.radius = box.getDimensions().len() / 2;\r\n\r\n\t\tmodel2.getBoundingBox(box);\r\n\t\tinstance2.radius = box.getDimensions().len() / 2;\r\n\t\tinstance2.matrix.scale(2, 1, 2);\r\n\r\n\t\tprotoRenderer = new PrototypeRendererGL20(lightManager);\r\n\t\tprotoRenderer.cam = cam;\r\n\r\n\t\tMaterialAttribute c1 = new ColorAttribute(new Color(0.75f, 0.75f, 0.75f, 0.3f), ColorAttribute.diffuse);\r\n\t\tMaterialAttribute c2 = new ColorAttribute(new Color(0.35f, 0.35f, 0.35f, 0.35f), ColorAttribute.specular);\r\n\t\tMaterialAttribute c3 = new ColorAttribute(new Color(0.2f, 1f, 0.15f, 1.0f), ColorAttribute.rim);\r\n\t\tMaterialAttribute t1 = new TextureAttribute(texture, 0, TextureAttribute.diffuseTexture);\r\n\t\tMaterialAttribute t2 = new TextureAttribute(texture2, 1, TextureAttribute.specularTexture);\r\n\r\n\t\tMaterialAttribute b = new BlendingAttribute(BlendingAttribute.translucent);\r\n\r\n\t\tMaterial material2 = new Material(\"basic\", c2, t1);\r\n\t\tmodel2.setMaterial(material2);\r\n\r\n\t\tMaterial material = new Material(\"shiningBall\", c1, c2);\r\n\t\tmodel.setMaterial(material);\r\n\r\n\t\tmodel3 = ModelLoaderRegistry.loadKeyframedModel(Gdx.files.internal(\"data/models/knight.md2\"));\r\n\t\tanimInstance = new AnimatedModelNode();\r\n\t\tanimInstance.animation = model3.getAnimations()[0].name;\r\n\t\tanimInstance.looping = true;\r\n\t\tmodel3.getBoundingBox(box);\r\n\r\n\t\tanimInstance.matrix.trn(-1.75f, 0f, -5.5f);\r\n\t\tanimInstance.matrix.scale(0.05f, 0.05f, 0.05f);\r\n\t\tbox.mul(animInstance.matrix);\r\n\t\tanimInstance.radius = (box.getDimensions().len() / 2);\r\n\t\ttexture3 = new Texture(Gdx.files.internal(\"data/models/knight.jpg\"), Format.RGB565, true);\r\n\t\ttexture3.setFilter(TextureFilter.MipMapLinearNearest, TextureFilter.Linear);\r\n\r\n\t\tMaterialAttribute t3 = new TextureAttribute(texture3, 0, TextureAttribute.diffuseTexture);\r\n\t\tMaterial material3 = new Material(\"s\", t2, t3);\r\n\t\tmodel3.setMaterial(material3);\r\n\r\n\t}","commit_id":"e7cf736b564a35f9a146cd04579d4c5f8ef99695","url":"https://github.com/libgdx/libgdx"},{"original_method":"public void render () {\r\n\r\n\t\tlogger.log();\r\n\r\n\t\tfinal float delta = Gdx.graphics.getDeltaTime();\r\n\t\tcamController.update(delta);\r\n\r\n\t\ttimer += delta;\r\n\t\tfor (int i = 0; i < 1 && i < lightManager.pointLights.size; i++) {\r\n\t\t\tfinal Vector3 v = lightManager.pointLights.get(i).position;\r\n\t\t\tv.set(animInstance.getSortCenter());\r\n\t\t\tv.x += MathUtils.sin(timer);\r\n\t\t\tv.z += MathUtils.cos(timer);\r\n\t\t}\r\n\r\n\t\tanimInstance.time += delta;\r\n\t\tif (Gdx.input.justTouched()) {\r\n\t\t\tcurrAnimIdx++;\r\n\t\t\tif (currAnimIdx == model3.getAnimations().length) currAnimIdx = 0;\r\n\t\t\tanimInstance.animation = model3.getAnimations()[currAnimIdx].name;\r\n\t\t\tanimInstance.time = 0;\r\n\t\t}\r\n\t\tif (animInstance.time > model3.getAnimations()[currAnimIdx].totalDuration) {\r\n\t\t\tanimInstance.time = 0;\r\n\t\t}\r\n\t\tGdx.gl.glEnable(GL10.GL_CULL_FACE);\r\n\t\tGdx.gl.glFrontFace(GL10.GL_CCW);\r\n\t\tGdx.gl.glCullFace(GL10.GL_FRONT);\r\n\r\n\t\tGdx.gl.glEnable(GL10.GL_DEPTH_TEST);\r\n\t\tGdx.gl.glDepthMask(true);\r\n\r\n\t\tGdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT\r\n\t\t\t| (Gdx.graphics.getBufferFormat().coverageSampling ? GL20.GL_COVERAGE_BUFFER_BIT_NV : 0));\r\n\r\n\t\tprotoRenderer.begin();\r\n\t\tfloat tim = animInstance.time;\r\n\t\tfor (int i = 1; i < 7; i++) {\r\n\t\t\tfor (int j = 1; j < 7; j++) {\r\n\t\t\t\tanimInstance.matrix.val[12] = -i * 2 + 8;\r\n\t\t\t\tanimInstance.matrix.val[14] = -j * 2 - 4;\r\n\t\t\t\tprotoRenderer.draw(model3, animInstance);\r\n\t\t\t}\r\n\t\t}\r\n\t\tprotoRenderer.end();\r\n\r\n\t\tGdx.gl.glCullFace(GL10.GL_BACK);\r\n\r\n\t// protoRenderer.draw(model, instance2);\r\n\t// protoRenderer.draw(model, instance);\r\n\t\tprotoRenderer.begin();\r\n\t\tprotoRenderer.draw(model2, instance2);\r\n\t\tprotoRenderer.end();\r\n\t}","id":69156,"modified_method":"public void render () {\r\n\r\n\t\tlogger.log();\r\n\r\n\t\tfinal float delta = Gdx.graphics.getDeltaTime();\r\n\t\tcamController.update(delta);\r\n\r\n\t\ttimer += delta;\r\n\t\tfor (int i = 0; i < 1 && i < lightManager.pointLights.size; i++) {\r\n\t\t\tfinal Vector3 v = lightManager.pointLights.get(i).position;\r\n\t\t\tv.set(animInstance.getSortCenter());\r\n\t\t\tv.x += MathUtils.sin(timer);\r\n\t\t\tv.z += MathUtils.cos(timer);\r\n\t\t}\r\n\r\n\t\tanimInstance.time += delta;\r\n\t\tif (Gdx.input.justTouched()) {\r\n\t\t\tcurrAnimIdx++;\r\n\t\t\tif (currAnimIdx == model3.getAnimations().length) currAnimIdx = 0;\r\n\t\t\tanimInstance.animation = model3.getAnimations()[currAnimIdx].name;\r\n\t\t\tanimInstance.time = 0;\r\n\t\t}\r\n\t\tif (animInstance.time > model3.getAnimations()[currAnimIdx].totalDuration) {\r\n\t\t\tanimInstance.time = 0;\r\n\t\t}\r\n\t\tGdx.gl.glEnable(GL10.GL_CULL_FACE);\r\n\t\tGdx.gl.glFrontFace(GL10.GL_CCW);\r\n\t\tGdx.gl.glCullFace(GL10.GL_FRONT);\r\n\r\n\t\tGdx.gl.glEnable(GL10.GL_DEPTH_TEST);\r\n\t\tGdx.gl.glDepthMask(true);\r\n\r\n\t\tGdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT\r\n\t\t\t| (Gdx.graphics.getBufferFormat().coverageSampling ? GL20.GL_COVERAGE_BUFFER_BIT_NV : 0));\r\n\r\n\t\tprotoRenderer.begin();\r\n\t\tfloat tim = animInstance.time;\r\n\t\tfor (int i = 1; i < 7; i++) {\r\n\t\t\tfor (int j = 1; j < 7; j++) {\r\n\t\t\t\tanimInstance.matrix.val[12] = -i * 2 + 8;\r\n\t\t\t\tanimInstance.matrix.val[14] = -j * 2 - 4;\r\n\t\t\t\tprotoRenderer.draw(model3, animInstance);\r\n\t\t\t}\r\n\t\t}\r\n\t\tprotoRenderer.end();\r\n\r\n\t\tGdx.gl.glCullFace(GL10.GL_BACK);\r\n\r\n\t\tprotoRenderer.begin();\r\n\t\tprotoRenderer.draw(model2, instance2);\r\n\t\tprotoRenderer.draw(model, instance2);\r\n\t\tprotoRenderer.draw(model, instance);\r\n\t\tprotoRenderer.end();\r\n\t}","commit_id":"e7cf736b564a35f9a146cd04579d4c5f8ef99695","url":"https://github.com/libgdx/libgdx"},{"original_method":"public static void main (String[] argv) {\r\n\t\tJoglApplicationConfiguration config = new JoglApplicationConfiguration();\r\n\t\tconfig.title = \"Hybrid Light\";\r\n\t\tconfig.width = 800;\r\n\t\tconfig.height = 480;\r\n\t\tconfig.samples = 8;\r\n\t\tconfig.vSyncEnabled = true;\r\n\t\tconfig.useGL20 = true;\r\n\t\tnew JoglApplication(new HybridLightTest(), config);\r\n\t}","id":69157,"modified_method":"public static void main (String[] argv) {\r\n\t\tJoglApplicationConfiguration config = new JoglApplicationConfiguration();\r\n\t\tconfig.title = \"Hybrid Light\";\r\n\t\tconfig.width = 800;\r\n\t\tconfig.height = 480;\r\n\t\tconfig.samples = 8;\r\n\t\tconfig.vSyncEnabled = false;\r\n\t\tconfig.useGL20 = true;\r\n\t\tnew JoglApplication(new HybridLightTest(), config);\r\n\t}","commit_id":"e7cf736b564a35f9a146cd04579d4c5f8ef99695","url":"https://github.com/libgdx/libgdx"},{"original_method":"public Material (String name, Array<MaterialAttribute> attributes) {\r\n\t\tthis.name = name;\r\n\t\tthis.attributes = attributes;\r\n\r\n\t\t// this way we foresee if blending is needed with this material and rendering can deferred more easily\r\n\t\tboolean blendingNeeded = false;\r\n\t\tfor (int i = 0; i < this.attributes.size; i++) {\r\n\t\t\tif (this.attributes.get(i) instanceof BlendingAttribute) blendingNeeded = true;\r\n\t\t}\r\n\t\tthis.needBlending = blendingNeeded;\r\n\t}","id":69158,"modified_method":"public Material (String name, Array<MaterialAttribute> attributes) {\r\n\t\tthis.name = name;\r\n\t\tthis.attributes = attributes;\r\n\r\n\t\t// this way we foresee if blending is needed with this material and rendering can deferred more easily\r\n\t\tthis.needBlending = false;\r\n\t\tfor (int i = 0; i < this.attributes.size; i++) {\r\n\t\t\tif (this.attributes.get(i) instanceof BlendingAttribute) {\r\n\t\t\t\tthis.needBlending = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}","commit_id":"e7cf736b564a35f9a146cd04579d4c5f8ef99695","url":"https://github.com/libgdx/libgdx"},{"original_method":"public Material (String name, MaterialAttribute... attributes) {\r\n\t\tthis.name = name;\r\n\t\tthis.attributes = new Array<MaterialAttribute>(attributes);\r\n\r\n\t\t// this way we foresee if blending is needed with this material and rendering can deferred more easily\r\n\t\tboolean blendingNeeded = false;\r\n\t\tfor (int i = 0; i < this.attributes.size; i++) {\r\n\t\t\tif (this.attributes.get(i) instanceof BlendingAttribute) blendingNeeded = true;\r\n\t\t}\r\n\t\tthis.needBlending = blendingNeeded;\r\n\r\n\t}","id":69159,"modified_method":"public Material (String name, MaterialAttribute... attributes) {\r\n\t\tthis.name = name;\r\n\t\tthis.attributes = new Array<MaterialAttribute>(attributes);\r\n\r\n\t\t// this way we foresee if blending is needed with this material and rendering can deferred more easily\r\n\t\tthis.needBlending = false;\r\n\t\tfor (int i = 0; i < this.attributes.size; i++) {\r\n\t\t\tif (this.attributes.get(i) instanceof BlendingAttribute) {\r\n\t\t\t\tthis.needBlending = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}","commit_id":"e7cf736b564a35f9a146cd04579d4c5f8ef99695","url":"https://github.com/libgdx/libgdx"},{"original_method":"public void add (StillModel model, StillModelInstance instance) {\r\n\t\t\tDrawable drawable = drawablePool.obtain();\r\n\t\t\tdrawable.set(model, instance);\r\n\t\t\tdrawables.add(drawable);\r\n\t\t}","id":69160,"modified_method":"public void add (StillModel model, StillModelInstance instance) {\r\n\t\t\tDrawable drawable = drawablePool.obtain();\r\n\t\t\tdrawable.set(model, instance);\r\n\r\n\t\t\tif (drawable.blending)\r\n\t\t\t\tdrawablesBlended.add(drawable);\r\n\t\t\telse\r\n\t\t\t\tdrawables.add(drawable);\r\n\t\t}","commit_id":"e7cf736b564a35f9a146cd04579d4c5f8ef99695","url":"https://github.com/libgdx/libgdx"},{"original_method":"private void flush () {\r\n\t\tfor (int i = 0, size = drawableManager.drawables.size; i < size; i++) {\r\n\r\n\t\t\tfinal Drawable drawable = drawableManager.drawables.get(i);\r\n\r\n\t\t\tfinal Vector3 center = drawable.sortCenter;\r\n\t\t\tlightManager.calculateLights(center.x, center.y, center.z);\r\n\r\n\t\t\tfinal Matrix4 modelMatrix = drawable.transform;\r\n\t\t\tnormalMatrix.set(modelMatrix);\r\n\r\n\t\t\tif (drawable.isAnimated)\r\n\t\t\t\t((AnimatedModel)(drawable.model)).setAnimation(drawable.animation, drawable.animationTime, drawable.isLooping);\r\n\r\n\t\t\tfinal SubMesh subMeshes[] = drawable.model.getSubMeshes();\r\n\r\n\t\t\tboolean matrixChanged = true;\r\n\t\t\tfor (int j = 0; j < subMeshes.length; j++) {\r\n\r\n\t\t\t\tfinal SubMesh subMesh = subMeshes[j];\r\n\t\t\t\tfinal Material material = drawable.materials.get(j);\r\n\r\n\t\t\t\tif (material.isNeedBlending()) {\r\n\t\t\t\t\taddTranparentQueu(material, subMesh, modelMatrix, center);\r\n\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// bind new shader if material can't use old one\r\n\t\t\t\tfinal boolean shaderChanged = bindShader(material);\r\n\r\n\t\t\t\tif (shaderChanged || matrixChanged) {\r\n\t\t\t\t\tcurrentShader.setUniformMatrix(\"u_normalMatrix\", normalMatrix, false);\r\n\t\t\t\t\tcurrentShader.setUniformMatrix(\"u_modelMatrix\", modelMatrix, false);\r\n\t\t\t\t\tmatrixChanged = false;\r\n\t\t\t\t}\r\n\t\t\t\tif ((material != null)) {\r\n\r\n\t\t\t\t\tfor (int k = 0, len = material.attributes.size; k < len; k++) {\r\n\t\t\t\t\t\tfinal MaterialAttribute atrib = material.attributes.get(k);\r\n\r\n\t\t\t\t\t\t// special case for textures. really important to batch these\r\n\t\t\t\t\t\tif (atrib instanceof TextureAttribute) {\r\n\t\t\t\t\t\t\tfinal TextureAttribute texAtrib = (TextureAttribute)atrib;\r\n\t\t\t\t\t\t\tif (!texAtrib.texturePortionEquals(lastTexture[texAtrib.unit])) {\r\n\t\t\t\t\t\t\t\tlastTexture[texAtrib.unit] = texAtrib;\r\n\t\t\t\t\t\t\t\ttexAtrib.bind(currentShader);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// need to be done, shader textureAtribute name could be changed.\r\n\t\t\t\t\t\t\t\tcurrentShader.setUniformi(texAtrib.name, texAtrib.unit);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tatrib.bind(currentShader);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// finally render current submesh\r\n\t\t\t\tsubMesh.getMesh().render(currentShader, subMesh.primitiveType);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if transparent queue is not empty enable blending(this force gpu to\r\n\t\t// flush and there is some time to sort)\r\n\t\tif (blendQueue.size > 0) renderBlended();\r\n\r\n\t\t// cleaning\r\n\r\n\t\tif (currentShader != null) {\r\n\t\t\tcurrentShader.end();\r\n\t\t\tcurrentShader = null;\r\n\t\t}\r\n\t\tfor (int i = 0, len = TextureAttribute.MAX_TEXTURE_UNITS; i < len; i++)\r\n\t\t\tlastTexture[i] = null;\r\n\t\t// clear all queus\r\n\r\n\t\tdrawing = false;\r\n\r\n\t\tdrawableManager.clear();\r\n\t}","id":69161,"modified_method":"private void flush () {\r\n\r\n\t\t// opaque is sorted front to back\r\n\t\t// transparent is sorted back to front\r\n\t\tdrawableManager.drawables.sort();\r\n\t\tfor (int i = drawableManager.drawables.size - 1; i >= 0; i--) {\r\n\r\n\t\t\tfinal Drawable drawable = drawableManager.drawables.get(i);\r\n\r\n\t\t\tfinal Vector3 center = drawable.sortCenter;\r\n\t\t\tlightManager.calculateLights(center.x, center.y, center.z);\r\n\r\n\t\t\tfinal Matrix4 modelMatrix = drawable.transform;\r\n\t\t\tnormalMatrix.set(modelMatrix);\r\n\r\n\t\t\tif (drawable.isAnimated)\r\n\t\t\t\t((AnimatedModel)(drawable.model)).setAnimation(drawable.animation, drawable.animationTime, drawable.isLooping);\r\n\r\n\t\t\tfinal SubMesh subMeshes[] = drawable.model.getSubMeshes();\r\n\r\n\t\t\tboolean matrixChanged = true;\r\n\t\t\tfor (int j = 0; j < subMeshes.length; j++) {\r\n\r\n\t\t\t\tfinal SubMesh subMesh = subMeshes[j];\r\n\t\t\t\tfinal Material material = drawable.materials.get(j);\r\n\r\n\t\t\t\t// bind new shader if material can't use old one\r\n\t\t\t\tfinal boolean shaderChanged = bindShader(material);\r\n\r\n\t\t\t\tif (shaderChanged || matrixChanged) {\r\n\t\t\t\t\tcurrentShader.setUniformMatrix(\"u_normalMatrix\", normalMatrix, false);\r\n\t\t\t\t\tcurrentShader.setUniformMatrix(\"u_modelMatrix\", modelMatrix, false);\r\n\t\t\t\t\tmatrixChanged = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (int k = 0, len = material.attributes.size; k < len; k++) {\r\n\t\t\t\t\tfinal MaterialAttribute atrib = material.attributes.get(k);\r\n\r\n\t\t\t\t\t// special case for textures. really important to batch these\r\n\t\t\t\t\tif (atrib instanceof TextureAttribute) {\r\n\t\t\t\t\t\tfinal TextureAttribute texAtrib = (TextureAttribute)atrib;\r\n\t\t\t\t\t\tif (!texAtrib.texturePortionEquals(lastTexture[texAtrib.unit])) {\r\n\t\t\t\t\t\t\tlastTexture[texAtrib.unit] = texAtrib;\r\n\t\t\t\t\t\t\ttexAtrib.bind(currentShader);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// need to be done, shader textureAtribute name could be changed.\r\n\t\t\t\t\t\t\tcurrentShader.setUniformi(texAtrib.name, texAtrib.unit);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tatrib.bind(currentShader);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// finally render current submesh\r\n\t\t\t\tsubMesh.getMesh().render(currentShader, subMesh.primitiveType);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// if transparent queue is not empty enable blending(this force gpu to\r\n\t\t// flush and there is some time to sort)\r\n\t\tif (drawableManager.drawablesBlended.size > 0) renderBlended();\r\n\r\n\t\t// cleaning\r\n\r\n\t\tif (currentShader != null) {\r\n\t\t\tcurrentShader.end();\r\n\t\t\tcurrentShader = null;\r\n\t\t}\r\n\t\tfor (int i = 0, len = TextureAttribute.MAX_TEXTURE_UNITS; i < len; i++)\r\n\t\t\tlastTexture[i] = null;\r\n\t\t// clear all queus\r\n\r\n\t\tdrawing = false;\r\n\r\n\t\tdrawableManager.clear();\r\n\t}","commit_id":"e7cf736b564a35f9a146cd04579d4c5f8ef99695","url":"https://github.com/libgdx/libgdx"},{"original_method":"public void add (AnimatedModel model, AnimatedModelInstance instance) {\r\n\t\t\tDrawable drawable = drawablePool.obtain();\r\n\t\t\tdrawable.set(model, instance);\r\n\t\t\tdrawables.add(drawable);\r\n\t\t}","id":69162,"modified_method":"public void add (AnimatedModel model, AnimatedModelInstance instance) {\r\n\t\t\tDrawable drawable = drawablePool.obtain();\r\n\t\t\tdrawable.set(model, instance);\r\n\r\n\t\t\tif (drawable.blending)\r\n\t\t\t\tdrawablesBlended.add(drawable);\r\n\t\t\telse\r\n\t\t\t\tdrawables.add(drawable);\r\n\t\t}","commit_id":"e7cf736b564a35f9a146cd04579d4c5f8ef99695","url":"https://github.com/libgdx/libgdx"},{"original_method":"private void setCommon (Model model, StillModelInstance instance) {\r\n\t\t\t\tthis.model = model;\r\n\t\t\t\t// transform.set(instance.getTransform().val);\r\n\t\t\t\tSystem.arraycopy(instance.getTransform().val, 0, transform.val, 0, 16);\r\n\r\n\t\t\t\tsortCenter.set(instance.getSortCenter());\r\n\t\t\t\tboundingSphereRadius = instance.getBoundingSphereRadius();\r\n\t\t\t\tif (instance.getMaterials() != null) {\r\n\t\t\t\t\tfor (Material material : instance.getMaterials()) {\r\n\t\t\t\t\t\tif (material.getShader() == null) material.generateShader(materialShaderHandler);\r\n\r\n\t\t\t\t\t\tfinal Material copy = materialPool.obtain();\r\n\t\t\t\t\t\tcopy.setPooled(material);\r\n\t\t\t\t\t\tmaterials.add(copy);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (SubMesh subMesh : model.getSubMeshes()) {\r\n\t\t\t\t\t\tfinal Material material = subMesh.material;\r\n\t\t\t\t\t\tif (material.getShader() == null) material.generateShader(materialShaderHandler);\r\n\r\n\t\t\t\t\t\tfinal Material copy = materialPool.obtain();\r\n\t\t\t\t\t\tcopy.setPooled(material);\r\n\t\t\t\t\t\tmaterials.add(copy);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}","id":69163,"modified_method":"private void setCommon (Model model, StillModelInstance instance) {\r\n\t\t\t\tthis.model = model;\r\n\t\t\t\t// transform.set(instance.getTransform().val);\r\n\t\t\t\tSystem.arraycopy(instance.getTransform().val, 0, transform.val, 0, 16);\r\n\r\n\t\t\t\tsortCenter.set(instance.getSortCenter());\r\n\t\t\t\tdistance = (int)(PRIORITY_DISCRETE_STEPS * sortCenter.dst(cam.position));\r\n\t\t\t\tboundingSphereRadius = instance.getBoundingSphereRadius();\r\n\t\t\t\tif (instance.getMaterials() != null) {\r\n\t\t\t\t\tfor (Material material : instance.getMaterials()) {\r\n\t\t\t\t\t\tif (material.getShader() == null) material.generateShader(materialShaderHandler);\r\n\r\n\t\t\t\t\t\tfinal Material copy = materialPool.obtain();\r\n\t\t\t\t\t\tcopy.setPooled(material);\r\n\t\t\t\t\t\tmaterials.add(copy);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (SubMesh subMesh : model.getSubMeshes()) {\r\n\t\t\t\t\t\tfinal Material material = subMesh.material;\r\n\t\t\t\t\t\tif (material.getShader() == null) material.generateShader(materialShaderHandler);\r\n\r\n\t\t\t\t\t\tfinal Material copy = materialPool.obtain();\r\n\t\t\t\t\t\tcopy.setPooled(material);\r\n\t\t\t\t\t\tmaterials.add(copy);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tblending = false;\r\n\t\t\t\tfor (Material mat : materials) {\r\n\t\t\t\t\tif (mat.isNeedBlending()) {\r\n\t\t\t\t\t\tblending = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}","commit_id":"e7cf736b564a35f9a146cd04579d4c5f8ef99695","url":"https://github.com/libgdx/libgdx"},{"original_method":"public void clear () {\r\n\r\n\t\t\twhile (drawables.size > 0) {\r\n\t\t\t\tfinal Drawable drawable = drawables.pop();\r\n\r\n\t\t\t\t// return all materials and attribuets to the pools\r\n\t\t\t\twhile (drawable.materials.size > 0) {\r\n\t\t\t\t\tfinal Material material = drawable.materials.pop();\r\n\r\n\t\t\t\t\twhile (material.attributes.size > 0) {\r\n\t\t\t\t\t\tmaterial.attributes.pop().free();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmaterial.resetShader();\r\n\t\t\t\t\tmaterialPool.free(material);\r\n\t\t\t\t}\r\n\t\t\t\t// reset the drawable and return it to the drawable pool\r\n\t\t\t\tdrawablePool.free(drawable);\r\n\t\t\t}\r\n\t\t}","id":69164,"modified_method":"public void clear () {\r\n\t\t\tclear(drawables);\r\n\t\t\tclear(drawablesBlended);\r\n\t\t}","commit_id":"e7cf736b564a35f9a146cd04579d4c5f8ef99695","url":"https://github.com/libgdx/libgdx"},{"original_method":"private void renderBlended () {\r\n\t\tGdx.gl.glEnable(GL10.GL_BLEND);\r\n\t\tGdx.gl.glDepthMask(false);\r\n\t\tblendQueue.sort();\r\n\r\n\t\t// find N nearest lights per model\r\n\t\t// draw all models from opaque queue\r\n\r\n\t\tint lastSrcBlend = -1;\r\n\t\tint lastDstBlend = -1;\r\n\r\n\t\tfor (int i = 0; i < blendQueue.size; i++) {\r\n\t\t\tfinal BlendedMesh instance = blendQueue.get(i);\r\n\t\t\tfinal Material material = instance.material;\r\n\t\t\tlightManager.calculateLights(instance.center.x, instance.center.y, instance.center.z);\r\n\t\t\tnormalMatrix.set(instance.modelMatrix);\r\n\r\n\t\t\t// bind new shader if material can't use old one\r\n\t\t\tfinal boolean shaderChanged = bindShader(material);\r\n\r\n\t\t\t// if shaderChanged can't batch material\r\n\t\t\tcurrentShader.setUniformMatrix(\"u_normalMatrix\", normalMatrix, false);\r\n\t\t\tcurrentShader.setUniformMatrix(\"u_modelMatrix\", instance.modelMatrix, false);\r\n\r\n\t\t\tif ((material != null)) {\r\n\t\t\t\tfor (int k = 0, len = material.attributes.size; k < len; k++) {\r\n\t\t\t\t\tfinal MaterialAttribute atrib = material.attributes.get(k);\r\n\r\n\t\t\t\t\t// yet another instanceof. TODO is there any better way to do this? maybe stuffing this to material\r\n\t\t\t\t\tif (atrib instanceof BlendingAttribute) {\r\n\t\t\t\t\t\tfinal BlendingAttribute blending = (BlendingAttribute)atrib;\r\n\t\t\t\t\t\tif (blending.blendSrcFunc != lastSrcBlend || blending.blendDstFunc != lastDstBlend) {\r\n\t\t\t\t\t\t\tatrib.bind(currentShader);\r\n\t\t\t\t\t\t\tlastSrcBlend = blending.blendSrcFunc;\r\n\t\t\t\t\t\t\tlastDstBlend = blending.blendDstFunc;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (atrib instanceof TextureAttribute) {\r\n\t\t\t\t\t\t// special case for textures. really important to batch these\r\n\t\t\t\t\t\tfinal TextureAttribute texAtrib = (TextureAttribute)atrib;\r\n\t\t\t\t\t\tif (!texAtrib.texturePortionEquals(lastTexture[texAtrib.unit])) {\r\n\t\t\t\t\t\t\tlastTexture[texAtrib.unit] = texAtrib;\r\n\t\t\t\t\t\t\ttexAtrib.bind(currentShader);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// need to be done, shader textureAtribute name could be changed.\r\n\t\t\t\t\t\t\tcurrentShader.setUniformi(texAtrib.name, texAtrib.unit);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tatrib.bind(currentShader);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// finally render current submesh\r\n\t\t\tinstance.subMesh.getMesh().render(currentShader, instance.subMesh.primitiveType);\r\n\t\t}\r\n\r\n\t\tGdx.gl.glDepthMask(true);\r\n\t\tGdx.gl.glDisable(GL10.GL_BLEND);\r\n\t\tblendQueue.clear();\r\n\t}","id":69165,"modified_method":"private void renderBlended () {\r\n\r\n\t\tGdx.gl.glEnable(GL10.GL_BLEND);\r\n\t\tfinal Array<Drawable> transparentDrawables = drawableManager.drawablesBlended;\r\n\t\ttransparentDrawables.sort();\r\n\r\n\t\t// find N nearest lights per model\r\n\t\t// draw all models from opaque queue\r\n\r\n\t\tint lastSrcBlend = -1;\r\n\t\tint lastDstBlend = -1;\r\n\r\n\t\tfor (int i = 0, size = transparentDrawables.size; i < size; i++) {\r\n\r\n\t\t\tfinal Drawable drawable = transparentDrawables.get(i);\r\n\r\n\t\t\tfinal Vector3 center = drawable.sortCenter;\r\n\t\t\tlightManager.calculateLights(center.x, center.y, center.z);\r\n\r\n\t\t\tfinal Matrix4 modelMatrix = drawable.transform;\r\n\t\t\tnormalMatrix.set(modelMatrix);\r\n\r\n\t\t\tif (drawable.isAnimated)\r\n\t\t\t\t((AnimatedModel)(drawable.model)).setAnimation(drawable.animation, drawable.animationTime, drawable.isLooping);\r\n\r\n\t\t\tfinal SubMesh subMeshes[] = drawable.model.getSubMeshes();\r\n\r\n\t\t\tboolean matrixChanged = true;\r\n\t\t\tfor (int j = 0; j < subMeshes.length; j++) {\r\n\r\n\t\t\t\tfinal SubMesh subMesh = subMeshes[j];\r\n\t\t\t\tfinal Material material = drawable.materials.get(j);\r\n\r\n\t\t\t\t// bind new shader if material can't use old one\r\n\t\t\t\tfinal boolean shaderChanged = bindShader(material);\r\n\r\n\t\t\t\tif (shaderChanged || matrixChanged) {\r\n\t\t\t\t\tcurrentShader.setUniformMatrix(\"u_normalMatrix\", normalMatrix, false);\r\n\t\t\t\t\tcurrentShader.setUniformMatrix(\"u_modelMatrix\", modelMatrix, false);\r\n\t\t\t\t\tmatrixChanged = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (int k = 0, len = material.attributes.size; k < len; k++) {\r\n\t\t\t\t\tfinal MaterialAttribute atrib = material.attributes.get(k);\r\n\r\n\t\t\t\t\t// yet another instanceof. TODO is there any better way to do this? maybe stuffing this to material\r\n\t\t\t\t\tif (atrib instanceof BlendingAttribute) {\r\n\t\t\t\t\t\tfinal BlendingAttribute blending = (BlendingAttribute)atrib;\r\n\t\t\t\t\t\tif (blending.blendSrcFunc != lastSrcBlend || blending.blendDstFunc != lastDstBlend) {\r\n\t\t\t\t\t\t\tatrib.bind(currentShader);\r\n\t\t\t\t\t\t\tlastSrcBlend = blending.blendSrcFunc;\r\n\t\t\t\t\t\t\tlastDstBlend = blending.blendDstFunc;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (atrib instanceof TextureAttribute) {\r\n\t\t\t\t\t\t// special case for textures. really important to batch these\r\n\t\t\t\t\t\tfinal TextureAttribute texAtrib = (TextureAttribute)atrib;\r\n\t\t\t\t\t\tif (!texAtrib.texturePortionEquals(lastTexture[texAtrib.unit])) {\r\n\t\t\t\t\t\t\tlastTexture[texAtrib.unit] = texAtrib;\r\n\t\t\t\t\t\t\ttexAtrib.bind(currentShader);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// need to be done, shader textureAtribute name could be changed.\r\n\t\t\t\t\t\t\tcurrentShader.setUniformi(texAtrib.name, texAtrib.unit);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tatrib.bind(currentShader);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// finally render current submesh\r\n\t\t\t\tsubMesh.getMesh().render(currentShader, subMesh.primitiveType);\r\n\t\t\t}\r\n\t\t}\r\n\t\tGdx.gl.glDisable(GL10.GL_BLEND);\r\n\t}","commit_id":"e7cf736b564a35f9a146cd04579d4c5f8ef99695","url":"https://github.com/libgdx/libgdx"},{"original_method":"/**\n     * Handles the change to any of the node properties relevant for vanity URL\n     * mappings. The {@link #MapEntries(ResourceResolverFactoryImpl, BundleContext, EventAdmin)}\n     * constructor makes sure the event listener is registered to only get\n     * appropriate events.\n     */\n    public void handleEvent(final Event event) {\n\n        // check for path (used for some tests below\n        final Object p = event.getProperty(SlingConstants.PROPERTY_PATH);\n        final String path;\n        if (p instanceof String) {\n            path = (String) p;\n        } else {\n            // not a string path or null, ignore this event\n            return;\n        }\n\n        // don't care for system area\n        if (path.startsWith(JCR_SYSTEM_PREFIX)) {\n            return;\n        }\n\n        //removal of a node is handled differently\n        if (SlingConstants.TOPIC_RESOURCE_REMOVED.equals(event.getTopic())) {\n            final String actualContentPath = getActualContentPath(path);\n            for (final String target : this.vanityTargets.keySet()) {\n                if (target.startsWith(actualContentPath)) {\n                    doRemoveAttributes(actualContentPath, new String [] {\"sling:vanityPath\"}, true);\n                }\n            }\n            for (final String target : this.aliasMap.keySet()) {\n                if (actualContentPath.startsWith(target)) {\n                    doRemoveAttributes(actualContentPath, new String [] {\"sling:alias\"}, true);\n                }\n            }\n        } else {\n            String [] addedAttributes = (String []) event.getProperty(SlingConstants.PROPERTY_ADDED_ATTRIBUTES);    \n            if (addedAttributes != null) {\n                if (log.isDebugEnabled()) {\n                    log.debug(\"found added attributes {}\", addedAttributes);\n                }\n                doAddAttributes(path, addedAttributes);\n            }\n\n            String [] changedAttributes = (String []) event.getProperty(SlingConstants.PROPERTY_CHANGED_ATTRIBUTES);        \n            if (changedAttributes != null) {\n                if (log.isDebugEnabled()) {\n                    log.debug(\"found changed attributes {}\", changedAttributes);\n                }\n                doUpdateAttributes(path, changedAttributes);\n            }\n\n            String [] removedAttributes = (String []) event.getProperty(SlingConstants.PROPERTY_REMOVED_ATTRIBUTES);        \n            if (removedAttributes != null) {\n                if (log.isDebugEnabled()) {\n                    log.debug(\"found removed attributes {}\", removedAttributes);\n                }\n                final String checkPath = getActualContentPath(path);\n                doRemoveAttributes(checkPath, removedAttributes, false);\n            } \n        }\n    }","id":69166,"modified_method":"/**\n     * Handles the change to any of the node properties relevant for vanity URL\n     * mappings. The {@link #MapEntries(ResourceResolverFactoryImpl, BundleContext, EventAdmin)}\n     * constructor makes sure the event listener is registered to only get\n     * appropriate events.\n     */\n    public void handleEvent(final Event event) {\n\n        // check for path (used for some tests below\n        final Object p = event.getProperty(SlingConstants.PROPERTY_PATH);\n        final String path;\n        if (p instanceof String) {\n            path = (String) p;\n        } else {\n            // not a string path or null, ignore this event\n            return;\n        }\n\n        // don't care for system area\n        if (path.startsWith(JCR_SYSTEM_PREFIX)) {\n            return;\n        }\n\n        boolean wasResolverRefreshed = false;\n\n        //removal of a node is handled differently\n        if (SlingConstants.TOPIC_RESOURCE_REMOVED.equals(event.getTopic())) {\n            final String actualContentPath = getActualContentPath(path);\n            for (final String target : this.vanityTargets.keySet()) {\n                if (target.startsWith(actualContentPath)) {\n                    wasResolverRefreshed = doRemoveAttributes(actualContentPath, new String [] {\"sling:vanityPath\"}, true, wasResolverRefreshed);\n                }\n            }\n            for (final String target : this.aliasMap.keySet()) {\n                if (actualContentPath.startsWith(target)) {\n                    wasResolverRefreshed = doRemoveAttributes(actualContentPath, new String [] {\"sling:alias\"}, true, wasResolverRefreshed);\n                }\n            }\n        } else {\n            String [] addedAttributes = (String []) event.getProperty(SlingConstants.PROPERTY_ADDED_ATTRIBUTES);\n            if (addedAttributes != null) {\n                if (log.isDebugEnabled()) {\n                    log.debug(\"found added attributes {}\", addedAttributes);\n                }\n                wasResolverRefreshed = doAddAttributes(path, addedAttributes, wasResolverRefreshed);\n            }\n\n            String [] changedAttributes = (String []) event.getProperty(SlingConstants.PROPERTY_CHANGED_ATTRIBUTES);\n            if (changedAttributes != null) {\n                if (log.isDebugEnabled()) {\n                    log.debug(\"found changed attributes {}\", changedAttributes);\n                }\n                wasResolverRefreshed = doUpdateAttributes(path, changedAttributes, wasResolverRefreshed);\n            }\n\n            String [] removedAttributes = (String []) event.getProperty(SlingConstants.PROPERTY_REMOVED_ATTRIBUTES);\n            if (removedAttributes != null) {\n                if (log.isDebugEnabled()) {\n                    log.debug(\"found removed attributes {}\", removedAttributes);\n                }\n                final String checkPath = getActualContentPath(path);\n                wasResolverRefreshed = doRemoveAttributes(checkPath, removedAttributes, false, wasResolverRefreshed);\n            } \n        }\n    }","commit_id":"00c5707ace2857881243fb3b8199654fc3d2eb90","url":"https://github.com/apache/sling"},{"original_method":"private void doAddAttributes(String path, String[] addedAttributes) {\n        this.initializing.lock();\n        try {\n            boolean configurationUpdate = false;\n            for (String changedAttribute:addedAttributes){\n                if (\"sling:vanityPath\".equals(changedAttribute)) {\n                    doAddVanity(path); \n                } else if (\"sling:vanityOrder\".equals(changedAttribute)) {\n                    doUpdateVanityOrder(path, false);\n                } else if (\"sling:alias\".equals(changedAttribute)) {\n                    doAddAlias(path);\n                } else {\n                    configurationUpdate = true;\n                }\n            }\n            if (configurationUpdate) {\n                doUpdateConfiguration();\n            }\n            sendChangeEvent();\n        } finally {\n            this.initializing.unlock();\n        }\n    }","id":69167,"modified_method":"private boolean doAddAttributes(String path, String[] addedAttributes, boolean refreshed) {\n        this.initializing.lock();\n        boolean newRefreshed = refreshed;\n        if (!newRefreshed) {\n            resolver.refresh();\n            newRefreshed = true;\n        }\n        try {\n            boolean configurationUpdate = false;\n            for (String changedAttribute:addedAttributes){\n                if (\"sling:vanityPath\".equals(changedAttribute)) {\n                    doAddVanity(path); \n                } else if (\"sling:vanityOrder\".equals(changedAttribute)) {\n                    doUpdateVanityOrder(path, false);\n                } else if (\"sling:alias\".equals(changedAttribute)) {\n                    doAddAlias(path);\n                } else {\n                    configurationUpdate = true;\n                }\n            }\n            if (configurationUpdate) {\n                doUpdateConfiguration();\n            }\n            sendChangeEvent();\n        } finally {\n            this.initializing.unlock();\n        }\n        return newRefreshed;\n    }","commit_id":"00c5707ace2857881243fb3b8199654fc3d2eb90","url":"https://github.com/apache/sling"},{"original_method":"private void doUpdateAttributes(String path, String[] changedAttributes) {\n        this.initializing.lock();\n        try {\n            boolean configurationUpdate = false;\n            for (String changedAttribute:changedAttributes){\n                if (\"sling:vanityPath\".equals(changedAttribute)) {\n                    doUpdateVanity(path);\n                } else if (\"sling:vanityOrder\".equals(changedAttribute)) {\n                    doUpdateVanityOrder(path, false);\n                } else if (\"sling:alias\".equals(changedAttribute)) {\n                    doUpdateAlias(path);\n                } else {\n                    configurationUpdate = true;\n                }\n            }\n            if (configurationUpdate) {\n                doUpdateConfiguration();\n            }\n            sendChangeEvent();\n        } finally {\n            this.initializing.unlock();\n        }\n    }","id":69168,"modified_method":"private boolean doUpdateAttributes(String path, String[] changedAttributes, boolean refreshed) {\n        this.initializing.lock();\n        boolean newRefreshed = refreshed;\n        if (!newRefreshed) {\n            resolver.refresh();\n            newRefreshed = true;\n        }\n        try {\n            boolean configurationUpdate = false;\n            for (String changedAttribute:changedAttributes){\n                if (\"sling:vanityPath\".equals(changedAttribute)) {\n                    doUpdateVanity(path);\n                } else if (\"sling:vanityOrder\".equals(changedAttribute)) {\n                    doUpdateVanityOrder(path, false);\n                } else if (\"sling:alias\".equals(changedAttribute)) {\n                    doUpdateAlias(path);\n                } else {\n                    configurationUpdate = true;\n                }\n            }\n            if (configurationUpdate) {\n                doUpdateConfiguration();\n            }\n            sendChangeEvent();\n        } finally {\n            this.initializing.unlock();\n        }\n        return newRefreshed;\n    }","commit_id":"00c5707ace2857881243fb3b8199654fc3d2eb90","url":"https://github.com/apache/sling"},{"original_method":"private void doRemoveAttributes(String path, String[] removedAttributes, boolean nodeDeletion) {\n        this.initializing.lock();\n        try {\n            boolean configurationUpdate = false;\n            for (String changedAttribute:removedAttributes){\n                if (\"sling:vanityPath\".equals(changedAttribute)){\n                    doRemoveVanity(path);\n                } else if (\"sling:vanityOrder\".equals(changedAttribute)) {\n                    doUpdateVanityOrder(path, true);\n                } else if (\"sling:alias\".equals(changedAttribute)) {\n                    doRemoveAlias(path, nodeDeletion);\n                } else {\n                    configurationUpdate = true;\n                }\n            }\n            if (configurationUpdate) {\n                doUpdateConfiguration();\n            }\n            sendChangeEvent();\n        } finally {\n            this.initializing.unlock();\n        }\n    }","id":69169,"modified_method":"private boolean doRemoveAttributes(String path, String[] removedAttributes, boolean nodeDeletion, boolean refreshed) {\n        this.initializing.lock();\n        boolean newRefreshed = refreshed;\n        if (!newRefreshed) {\n            resolver.refresh();\n            newRefreshed = true;\n        }\n        try {\n            boolean configurationUpdate = false;\n            for (String changedAttribute:removedAttributes){\n                if (\"sling:vanityPath\".equals(changedAttribute)){\n                    doRemoveVanity(path);\n                } else if (\"sling:vanityOrder\".equals(changedAttribute)) {\n                    doUpdateVanityOrder(path, true);\n                } else if (\"sling:alias\".equals(changedAttribute)) {\n                    doRemoveAlias(path, nodeDeletion);\n                } else {\n                    configurationUpdate = true;\n                }\n            }\n            if (configurationUpdate) {\n                doUpdateConfiguration();\n            }\n            sendChangeEvent();\n        } finally {\n            this.initializing.unlock();\n        }\n        return newRefreshed;\n    }","commit_id":"00c5707ace2857881243fb3b8199654fc3d2eb90","url":"https://github.com/apache/sling"},{"original_method":"public void testRetryDelay() throws Exception {\n        OptimisticLockRetryPolicy policy = new OptimisticLockRetryPolicy();\n        policy.setRandomBackOff(false);\n        policy.setExponentialBackOff(false);\n        policy.setMaximumRetryDelay(0L);\n        policy.setRetryDelay(50L);\n\n        for (int i = 0; i < 10; i++) {\n            long start = System.currentTimeMillis();\n            policy.doDelay(i);\n            long elapsed = System.currentTimeMillis() - start;\n            assertTrue(elapsed <= policy.getRetryDelay() + precision);\n            assertTrue(elapsed >= policy.getRetryDelay() - precision);\n        }\n    }","id":69170,"modified_method":"public void testRetryDelay() throws Exception {\n        OptimisticLockRetryPolicy policy = new OptimisticLockRetryPolicy();\n        policy.setRandomBackOff(false);\n        policy.setExponentialBackOff(false);\n        policy.setMaximumRetryDelay(0L);\n        policy.setRetryDelay(50L);\n\n        for (int i = 0; i < 10; i++) {\n            long elapsed = doDelay(policy, i);\n\n            assertDelay(50L, elapsed);\n        }\n    }","commit_id":"35e1a82c0f8ee0c569ebb077e707ada5080487a8","url":"https://github.com/apache/camel"},{"original_method":"public void testExponentialBackOffMaximumRetryDelay() throws Exception {\n        OptimisticLockRetryPolicy policy = new OptimisticLockRetryPolicy();\n        policy.setRandomBackOff(false);\n        policy.setExponentialBackOff(true);\n        policy.setMaximumRetryDelay(200L);\n        policy.setRetryDelay(50L);\n\n        for (int i = 0; i < 10; i++) {\n            long start = System.currentTimeMillis();\n            policy.doDelay(i);\n            long elapsed = System.currentTimeMillis() - start;\n            switch (i) {\n            case 0:\n                assertTrue(elapsed <= 50 + precision);\n                assertTrue(elapsed >= 50 - precision);\n                break;\n            case 1:\n                assertTrue(elapsed <= 100 + precision);\n                assertTrue(elapsed >= 100 - precision);\n                break;\n            default:\n                assertTrue(elapsed <= 200 + precision);\n                assertTrue(elapsed >= 200 - precision);\n                break;\n            }\n        }\n    }","id":69171,"modified_method":"public void testExponentialBackOffMaximumRetryDelay() throws Exception {\n        OptimisticLockRetryPolicy policy = new OptimisticLockRetryPolicy();\n        policy.setRandomBackOff(false);\n        policy.setExponentialBackOff(true);\n        policy.setMaximumRetryDelay(200L);\n        policy.setRetryDelay(50L);\n\n        for (int i = 0; i < 10; i++) {\n            long elapsed = doDelay(policy, i);\n\n            switch (i) {\n            case 0:\n                assertDelay(50L, elapsed);\n                break;\n            case 1:\n                assertDelay(100L, elapsed);\n                break;\n            default:\n                assertDelay(200L, elapsed);\n                break;\n            }\n        }\n    }","commit_id":"35e1a82c0f8ee0c569ebb077e707ada5080487a8","url":"https://github.com/apache/camel"},{"original_method":"public void testExponentialBackOff() throws Exception {\n        OptimisticLockRetryPolicy policy = new OptimisticLockRetryPolicy();\n        policy.setRandomBackOff(false);\n        policy.setExponentialBackOff(true);\n        policy.setMaximumRetryDelay(0L);\n        policy.setRetryDelay(50L);\n\n        for (int i = 0; i < 10; i++) {\n            long start = System.currentTimeMillis();\n            policy.doDelay(i);\n            long elapsed = System.currentTimeMillis() - start;\n            assertTrue(elapsed >= (policy.getRetryDelay() << i) - precision);\n            assertTrue(elapsed <= (policy.getRetryDelay() << i) + precision);\n        }\n    }","id":69172,"modified_method":"public void testExponentialBackOff() throws Exception {\n        OptimisticLockRetryPolicy policy = new OptimisticLockRetryPolicy();\n        policy.setRandomBackOff(false);\n        policy.setExponentialBackOff(true);\n        policy.setMaximumRetryDelay(0L);\n        policy.setRetryDelay(50L);\n\n        for (int i = 0; i < 6; i++) {\n            long elapsed = doDelay(policy, i);\n\n            assertDelay(50L << i, elapsed);\n        }\n    }","commit_id":"35e1a82c0f8ee0c569ebb077e707ada5080487a8","url":"https://github.com/apache/camel"},{"original_method":"public void testRandomBackOff() throws Exception {\n        OptimisticLockRetryPolicy policy = new OptimisticLockRetryPolicy();\n        policy.setRandomBackOff(true);\n        policy.setExponentialBackOff(false);\n        policy.setMaximumRetryDelay(500L);\n\n        for (int i = 0; i < 10; i++) {\n            long start = System.currentTimeMillis();\n            policy.doDelay(i);\n            long elapsed = System.currentTimeMillis() - start;\n            assertTrue(elapsed <= policy.getMaximumRetryDelay() + precision && elapsed >= 0);\n        }\n    }","id":69173,"modified_method":"public void testRandomBackOff() throws Exception {\n        OptimisticLockRetryPolicy policy = new OptimisticLockRetryPolicy();\n        policy.setRandomBackOff(true);\n        policy.setExponentialBackOff(false);\n        policy.setMaximumRetryDelay(500L);\n\n        for (int i = 0; i < 10; i++) {\n            long elapsed = doDelay(policy, i);\n\n            assertTrue(elapsed <= policy.getMaximumRetryDelay() + precision && elapsed >= 0);\n        }\n    }","commit_id":"35e1a82c0f8ee0c569ebb077e707ada5080487a8","url":"https://github.com/apache/camel"},{"original_method":"private LWComponent createNodeAndResource(DropContext drop, String resourceSpec, Map properties, Point2D where)\n    {\n        URLResource resource = new URLResource(resourceSpec);\n\n        if (DEBUG.DND) out(\"createNodeAndResource \" + resourceSpec + \" \" + properties + \" \" + where);\n\n        LWComponent c = createNode(drop, resource, properties, where, true);\n\n        // TODO: get this so that one call is triggering the async stuff for both\n        // meta-data and image loading.  Maybe the resource can will load the image...,\n        // yeah, probably.  Tho we also need activate separate animation threads that\n        // are going to wait on the data loading threads...\n\n        // Establish an undo for the node creation, and then one for the title update,\n        // so you can just undo to get the http title back if you want.  Will need to\n        // make undo for at least this case or maybe all cases to treat the stopping of\n        // thread as an undo action itself also so you can stop it in the middle?\n\n        // How to handle group drops tho?  There will be a ton of threads.\n        // I guess it would have to be all or nothing, and somehow group\n        // ALL the loading threads under a single undo thread mark?\n        \n        // TODO: if an image, let async image loader do this so we don't\n        // have two threads both pulling data from the same URL!\n\n        // Could wait to start this till end of all drop processing\n        // and pull it from drop.added\n\n        //resource.scanForMetaDataAsync(c, true);\n\n        return c;\n    }","id":69174,"modified_method":"private LWComponent createNodeAndResource(DropContext drop, String resourceSpec, Map properties, Point2D where)\n    {\n        URLResource resource = new URLResource(resourceSpec);\n\n        if (DEBUG.DND) out(\"createNodeAndResource \" + resourceSpec + \" \" + properties + \" where=\" + where);\n\n        LWComponent c = createNode(drop, resource, properties, where, true);\n\n        // TODO: get this so that one call is triggering the async stuff for both\n        // meta-data and image loading.  Maybe the resource can will load the image...,\n        // yeah, probably.  Tho we also need activate separate animation threads that\n        // are going to wait on the data loading threads...\n\n        // Establish an undo for the node creation, and then one for the title update,\n        // so you can just undo to get the http title back if you want.  Will need to\n        // make undo for at least this case or maybe all cases to treat the stopping of\n        // thread as an undo action itself also so you can stop it in the middle?\n\n        // How to handle group drops tho?  There will be a ton of threads.\n        // I guess it would have to be all or nothing, and somehow group\n        // ALL the loading threads under a single undo thread mark?\n        \n        // TODO: if an image, let async image loader do this so we don't\n        // have two threads both pulling data from the same URL!\n\n        // Could wait to start this till end of all drop processing\n        // and pull it from drop.added\n\n        //resource.scanForMetaDataAsync(c, true);\n\n        return c;\n    }","commit_id":"3b7a8eb244d45add8b0f36e49fb456a526157282","url":"https://github.com/VUE/VUE"},{"original_method":"private boolean processDroppedText(DropContext drop)\n    {\n        if (DEBUG.DND) out(\"processDroppedText\");\n        \n        // Attempt to make a URL of any string dropped -- if fails, just treat as\n        // regular pasted text.  todo: if newlines in middle of string, don't do this,\n        // or possibly attempt to split into list of multiple URL's (tho only if *every*\n        // line succeeds as a URL -- prob too hairy to bother)\n\n        String[] rows = drop.text.split(\"\\n\");\n        URL foundURL = null;\n        Map properties = new HashMap();\n        \n        if (rows.length < 3) {\n            foundURL = makeURL(rows[0]);\n            if (rows.length > 1) {\n                // Current version of Mozilla (at least on Windows XP, as of 2004-02-22)\n                // includes the HTML <title> as second row of text.\n                properties.put(\"title\", rows[1]);\n            }\n        }\n\n        if (foundURL != null && foundURL.getQuery() != null && !drop.isLinkAction) {\n            // if this URL is from a common search engine, we can find\n            // the original source for the image instead of the search\n            // engine's context page for the image.\n            foundURL = decodeSearchEngineLightBoxURL(foundURL, properties);\n        }\n                \n        if (foundURL != null) {\n\n            boolean processed = true;\n            boolean overwriteResource = drop.isLinkAction;\n            \n            if (drop.hit != null) {\n                if (overwriteResource) {\n                    drop.hit.setResource(foundURL.toString());\n                    // TODO: clean this up:  resource should load meta-data on CREATION.\n                    ((URLResource)drop.hit.getResource()).scanForMetaDataAsync(drop.hit);\n                } else if (drop.hitNode != null) {\n                    drop.hitNode.addChild(createNodeAndResource(drop, foundURL.toString(), properties, drop.location));\n                } else {\n                    processed = false;\n                }\n            }\n            \n            if (drop.hit == null || !processed)\n                createNodeAndResource(drop, foundURL.toString(), properties, drop.location);\n\n        } else {\n            // create a text node\n            drop.add(createTextNode(drop.text, drop.location));\n        }\n        \n        return true;\n    }","id":69175,"modified_method":"private boolean processDroppedText(DropContext drop)\n    {\n        if (DEBUG.DND) out(\"processDroppedText\");\n        \n        // Attempt to make a URL of any string dropped -- if fails, just treat as\n        // regular pasted text.  todo: if newlines in middle of string, don't do this,\n        // or possibly attempt to split into list of multiple URL's (tho only if *every*\n        // line succeeds as a URL -- prob too hairy to bother)\n\n        String[] rows = drop.text.split(\"\\n\");\n        URL foundURL = null;\n        Map properties = new HashMap();\n        \n        if (rows.length < 3) {\n            foundURL = makeURL(rows[0]);\n            if (rows.length > 1) {\n                // Current version of Mozilla (at least on Windows XP, as of 2004-02-22)\n                // includes the HTML <title> as second row of text.\n                properties.put(\"title\", rows[1]);\n            }\n        }\n\n        if (foundURL != null && foundURL.getQuery() != null && !drop.isLinkAction) {\n            // if this URL is from a common search engine, we can find\n            // the original source for the image instead of the search\n            // engine's context page for the image.\n            foundURL = decodeSearchEngineLightBoxURL(foundURL, properties);\n        }\n                \n        if (foundURL != null) {\n\n            boolean processed = true;\n            boolean overwriteResource = drop.isLinkAction;\n            \n            if (drop.hit != null) {\n                if (overwriteResource) {\n                    // TODO: master slides in slide-viewer are \"hit\", thus we can set a resource on them this way!\n                    drop.hit.setResource(foundURL.toString());\n                    // TODO: clean this up:  resource should load meta-data on CREATION.\n                    ((URLResource)drop.hit.getResource()).scanForMetaDataAsync(drop.hit);\n                } else if (drop.hitParent != null) {\n                    drop.hitParent.addChild(createNodeAndResource(drop, foundURL.toString(), properties, drop.location));\n                } else {\n                    processed = false;\n                }\n            }\n            \n            if (drop.hit == null || !processed)\n                createNodeAndResource(drop, foundURL.toString(), properties, drop.location);\n\n        } else {\n            // create a text node\n            drop.add(createTextNode(drop.text, drop.location));\n        }\n        \n        return true;\n    }","commit_id":"3b7a8eb244d45add8b0f36e49fb456a526157282","url":"https://github.com/VUE/VUE"},{"original_method":"private boolean processDroppedNodes(DropContext drop)\n    {\n        if (DEBUG.DND) out(\"processDroppedNodes\");\n        \n        // now add them to the map\n\n        if (drop.hitNode != null) {\n            drop.hitNode.addChildren(drop.list);\n        } else {\n            setCenterAt(drop.list, drop.location);\n            mViewer.getMap().addChildren(drop.list);\n        }\n        drop.added.addAll(drop.list);\n            \n        return true;\n    }","id":69176,"modified_method":"private boolean processDroppedNodes(DropContext drop)\n    {\n        if (DEBUG.DND) out(\"processDroppedNodes\");\n        \n        // now add them to the map\n\n        // Always to the set center, in case hitParent isn't something\n        // that is going to auto-layout the new children\n        setCenterAt(drop.list, drop.location);\n\n        if (drop.hitParent != null) {\n            drop.hitParent.addChildren(drop.list);\n        } else {\n            mViewer.getFocal().addChildren(drop.list);\n        }\n        drop.added.addAll(drop.list);\n            \n        return true;\n    }","commit_id":"3b7a8eb244d45add8b0f36e49fb456a526157282","url":"https://github.com/VUE/VUE"},{"original_method":"private void out(String s) {\n        final String name;\n        if (mViewer.getMap() != null)\n            name = mViewer.getMap().getLabel();\n        else\n            name = mViewer.toString();\n        System.out.println(\"MapDropTarget(\" + name + \") \" + s);\n    }","id":69177,"modified_method":"private void out(String s) {\n        final String name;\n        if (mViewer.getFocal() != null)\n            name = mViewer.getFocal().getLabel();\n        else\n            name = mViewer.toString();\n        System.out.println(\"MapDropTarget(\" + name + \") \" + s);\n    }","commit_id":"3b7a8eb244d45add8b0f36e49fb456a526157282","url":"https://github.com/VUE/VUE"},{"original_method":"private boolean processDroppedResourceList(DropContext drop)\n    {\n        if (DEBUG.DND) out(\"processDroppedResourceList\");\n        \n        if (drop.list.size() == 1 && drop.hit != null && drop.isLinkAction) {\n            \n            // Only one item is in the list, and we've hit a component, and\n            // it's a link-action drop: replace the hit component resource\n            drop.hit.setResource((Resource)drop.list.get(0));\n            \n        } else {\n            \n            Iterator i = drop.list.iterator();\n            while (i.hasNext()) {\n                Resource resource = (Resource) i.next();\n\n                if (drop.hitNode != null && !drop.isLinkAction) {\n\n                    // create new node children of the hit node\n                    drop.hitNode.addChild(createNode(drop, resource, null));\n                \n                } else {\n                    \n                    createNode(drop, resource, drop.nextDropLocation());\n                }\n            }\n        }\n        return true;\n    }","id":69178,"modified_method":"private boolean processDroppedResourceList(DropContext drop)\n    {\n        if (DEBUG.DND) out(\"processDroppedResourceList\");\n        \n        if (drop.list.size() == 1 && drop.hit != null && drop.isLinkAction) {\n            \n            // Only one item is in the list, and we've hit a component, and\n            // it's a link-action drop: replace the hit component resource\n            drop.hit.setResource((Resource)drop.list.get(0));\n            \n        } else {\n            \n            Iterator i = drop.list.iterator();\n            while (i.hasNext()) {\n                Resource resource = (Resource) i.next();\n\n                if (drop.hitParent != null && !drop.isLinkAction) {\n\n                    // create new node children of the hit node\n                    //drop.hitParent.addChild(createNode(drop, resource, null));\n                    drop.hitParent.addChild(createNode(drop, resource, drop.nextDropLocation()));\n                \n                } else {\n                    \n                    createNode(drop, resource, drop.nextDropLocation());\n                }\n            }\n        }\n        return true;\n    }","commit_id":"3b7a8eb244d45add8b0f36e49fb456a526157282","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     * Process any transferrable: @param e can be null if don't have a drop event\n     * (e.g., could use to process clipboard contents as well as drop events)\n     * A sucessful result will be newly created items on the map.\n     * @return true if succeeded\n     */\n    public boolean processTransferable(Transferable transfer, DropTargetDropEvent e)\n    {\n        Point dropLocation = null;\n        Point2D.Float mapLocation = null;\n        int dropAction = DnDConstants.ACTION_COPY; // default action, in case no DropTargetDropEvent\n\n        // On current JVM's on Mac and PC, default action for dragging a desktop item is\n        // MOVE, and holding CTRL down (both platforms) changes action to COPY.\n        // However, when dragging a link from Internet Explorer on Win2k, or Safari on\n        // OS X 10.4.2, CTRL doesn't change drop action at all, SHIFT changes drop\n        // action to NONE, and only CTRL-SHIFT changes action to LINK, which fortunately\n        // is at least the same on the mac: CTRL-SHIFT gets you LINK.\n        //\n        // Note: In both Safari & IE6/W2K, dragging an image from within a web page will\n        // NOT allow ACTION_LINK, so we can't change a resource that way on the mac.\n        // Also note that Safari will give you the real URL of the image, where as at\n        // least as of IE 6 on Win2k, it will only give you the image file from your\n        // cache.  (IE does also give you HTML snippets as data transfer options, with\n        // the IMG tag, but it gives you no base URL to add to the relative locations\n        // usually named in IMG tags!)\n\n        // Also: Dragging a URL from Safari address bar CLAIMS to support COPY & LINK\n        // source actions, but drop action is fixed at COPY can never ba changed to LINK\n        // no matter what modifier keys you hold down (MacOSX 10.4, JVM 1.5.0_06-93)\n        \n        if (e != null) {\n            dropLocation = e.getLocation();\n            dropAction = e.getDropAction();\n            mapLocation = dropToMapLocation(dropLocation);\n            if (DEBUG.DND) out(\"processTransferable: \" + GUI.dropName(e));\n        }\n\n        LWComponent dropTarget = null;\n\n        if (dropLocation != null) {\n            dropTarget = mViewer.pickDropTarget(mapLocation, null);\n            /*\n              // handle via traversal picking code:\n            if (dropTarget instanceof LWImage) { // todo: does LWComponent accept drop events...\n                if (DEBUG.DND) out(\"dropHit=\" + dropTarget + \" (ignored)\");\n                dropTarget = null;\n            } else \n                if (DEBUG.DND) out(\"dropHit=\" + dropTarget);\n            */\n        } else {\n            // if no drop location (e.g., we did a \"Paste\") then assume where\n            // they last clicked.\n            dropLocation = mViewer.getLastMousePressPoint();\n            mapLocation = dropToMapLocation(dropLocation);\n        }\n            \n            \n        DataFlavor foundFlavor = null;\n        Object foundData = null;\n        String dropText = null;\n        Collection dropItems = null;\n        \n        int dropType = 0;\n\n        if (DEBUG.DND) dumpFlavors(transfer);\n\n        try {\n\n            // We want to repeatedly do the casts below for each case\n            // to make sure the data type we got is what we expected.\n            // (Can be a problem if somebody creates a bad Transferable)\n            \n            if (transfer.isDataFlavorSupported(LWComponent.DataFlavor)) {\n                \n                foundFlavor = LWComponent.DataFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_NODE_LIST;\n                dropItems = (List) foundData;\n                \n            } else if (transfer.isDataFlavorSupported(Resource.DataFlavor)) {\n                \n                foundFlavor = Resource.DataFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_RESOURCE_LIST;\n                dropItems = (List) foundData;\n            \n                /*                \n            } else if (transfer.isDataFlavorSupported(MapResource.DataFlavor)) {\n                \n                foundFlavor = MapResource.DataFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_RESOURCE_LIST;\n                dropItems = (List) foundData;\n                */\n                \n            } else if (transfer.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {\n\n                foundFlavor = DataFlavor.javaFileListFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_FILE_LIST;\n                dropItems = (Collection) foundData;\n\n            } else if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n                \n                foundFlavor = DataFlavor.stringFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_TEXT;\n                dropText = (String) foundData;\n            \n            } else {\n                if (DEBUG.Enabled) {\n                    System.out.println(\"TRANSFER: found no supported dataFlavors\");\n                    dumpFlavors(transfer);\n                }\n                return false;\n            }\n        } catch (ClassCastException ex) {\n            Util.printStackTrace(ex, \"TRANSFER: Transfer data did not match expected type:\"\n                                 + \"\\n\\tflavor=\" + foundFlavor\n                                 + \"\\n\\t  type=\" + foundData.getClass());\n            return false;\n\n        } catch (Throwable t) {\n            Util.printStackTrace(t, \"TRANSFER: data extraction failure\");\n            return false;\n        }\n\n        if (foundData == DATA_FAILURE)\n            return false;\n\n        if (DEBUG.Enabled) {\n            String size = \"\";\n            String bagType0 = \"\";\n            if (foundData instanceof Collection) {\n                Collection bag = (Collection) foundData;\n                size = \" (Collection size \" + bag.size() + \")\";\n                if (bag.size() > 0)\n                    bagType0 =   \"\\n\\ttype[0]: \" + bag.iterator().next().getClass();\n                \n            }\n            System.out.println(\"TRANSFER: Found supported flavor \\\"\" + foundFlavor.getHumanPresentableName() + \"\\\"\"\n                               + \"\\n\\t   type: \" + Util.tag(foundData) + size\n                               + bagType0\n                               + \"\\n\\t flavor: \" + foundFlavor\n                               + \"\\n\\t   data: [\" + foundData + \"]\"\n                               //+ \"\\n\\tdropptedText=[\" + droppedText + \"]\"\n                               );\n        }\n\n        final boolean isLinkAction = (dropAction == DnDConstants.ACTION_LINK);\n\n        DropContext drop =\n            new DropContext(transfer,\n                            //dropLocation,\n                            mapLocation,\n                            dropItems,\n                            dropText,\n                            dropTarget,\n                            isLinkAction);\n\n        boolean success = false;\n\n        if (dropItems != null && dropItems.size() > 1)\n            CenterNodesOnDrop = false;\n        else\n            CenterNodesOnDrop = true;\n\n        try {\n            switch (dropType) {\n\n            case DROP_FILE_LIST:\n                success = processDroppedFileList(drop);\n                break;\n            case DROP_NODE_LIST:\n                success = processDroppedNodes(drop);\n                break;\n            case DROP_RESOURCE_LIST:\n                success = processDroppedResourceList(drop);\n                break;\n            case DROP_TEXT:\n                success = processDroppedText(drop);\n                break;\n\n            default:\n                // should never happen\n                throw new Error(\"unknown drop type \" + dropType);\n            }\n\n            if (drop.added.size() > 0) {\n\n                // Must make sure the selection is owned\n                // by this map before we try and change it.\n                mViewer.grabVueApplicationFocus(\"drop\", null);\n                \n                // todo: would be cleaner to have viewer.getSelection(),\n                // that could grab the vue app focus?\n                VUE.getSelection().setTo(drop.added);\n\n            }\n            \n        } catch (Throwable t) {\n            Util.printStackTrace(t, \"drop processing failed\");\n        }\n\n        // Even if we had an exception during processing,\n        // mark the drop in case there were partial results for Undo.\n        \n        mViewer.getMap().getUndoManager().mark(\"Drop\");\n\n        return success;\n    }","id":69179,"modified_method":"/**\n     * Process any transferrable: @param e can be null if don't have a drop event\n     * (e.g., could use to process clipboard contents as well as drop events)\n     * A sucessful result will be newly created items on the map.\n     * @return true if succeeded\n     */\n    public boolean processTransferable(Transferable transfer, DropTargetDropEvent e)\n    {\n        Point dropLocation = null;\n        Point2D.Float mapLocation = null;\n        int dropAction = DnDConstants.ACTION_COPY; // default action, in case no DropTargetDropEvent\n\n        // On current JVM's on Mac and PC, default action for dragging a desktop item is\n        // MOVE, and holding CTRL down (both platforms) changes action to COPY.\n        // However, when dragging a link from Internet Explorer on Win2k, or Safari on\n        // OS X 10.4.2, CTRL doesn't change drop action at all, SHIFT changes drop\n        // action to NONE, and only CTRL-SHIFT changes action to LINK, which fortunately\n        // is at least the same on the mac: CTRL-SHIFT gets you LINK.\n        //\n        // Note: In both Safari & IE6/W2K, dragging an image from within a web page will\n        // NOT allow ACTION_LINK, so we can't change a resource that way on the mac.\n        // Also note that Safari will give you the real URL of the image, where as at\n        // least as of IE 6 on Win2k, it will only give you the image file from your\n        // cache.  (IE does also give you HTML snippets as data transfer options, with\n        // the IMG tag, but it gives you no base URL to add to the relative locations\n        // usually named in IMG tags!)\n\n        // Also: Dragging a URL from Safari address bar CLAIMS to support COPY & LINK\n        // source actions, but drop action is fixed at COPY can never ba changed to LINK\n        // no matter what modifier keys you hold down (MacOSX 10.4, JVM 1.5.0_06-93)\n        \n        if (e != null) {\n            dropLocation = e.getLocation();\n            dropAction = e.getDropAction();\n            mapLocation = dropToMapLocation(dropLocation);\n            if (DEBUG.DND) out(\"processTransferable: \" + GUI.dropName(e)\n                               + \"\\n\\tdropScreenLoc: \" + dropLocation\n                               + \"\\n\\t   dropMapLoc: \" + mapLocation\n                               );\n        } else {\n            if (DEBUG.DND) out(\"processTransferable: (no drop event) transfer=\" + transfer);\n        }\n\n        LWComponent dropTarget = null;\n\n        if (dropLocation != null) {\n            dropTarget = mViewer.pickDropTarget(mapLocation, null);\n            if (DEBUG.DND) out(\"dropTarget=\" + dropTarget);\n            /*\n              // handle via traversal picking code:\n            if (dropTarget instanceof LWImage) { // todo: does LWComponent accept drop events...\n                if (DEBUG.DND) out(\"dropHit=\" + dropTarget + \" (ignored)\");\n                dropTarget = null;\n            } else \n                if (DEBUG.DND) out(\"dropHit=\" + dropTarget);\n            */\n        } else {\n            // if no drop location (e.g., we did a \"Paste\") then assume where\n            // they last clicked.\n            dropLocation = mViewer.getLastMousePressPoint();\n            mapLocation = dropToMapLocation(dropLocation);\n        }\n            \n            \n        DataFlavor foundFlavor = null;\n        Object foundData = null;\n        String dropText = null;\n        Collection dropItems = null;\n        \n        int dropType = 0;\n\n        if (DEBUG.DND) dumpFlavors(transfer);\n\n        try {\n\n            // We want to repeatedly do the casts below for each case\n            // to make sure the data type we got is what we expected.\n            // (Can be a problem if somebody creates a bad Transferable)\n            \n            if (transfer.isDataFlavorSupported(LWComponent.DataFlavor)) {\n                \n                foundFlavor = LWComponent.DataFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_NODE_LIST;\n                dropItems = (List) foundData;\n                \n            } else if (transfer.isDataFlavorSupported(Resource.DataFlavor)) {\n                \n                foundFlavor = Resource.DataFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_RESOURCE_LIST;\n                dropItems = (List) foundData;\n            \n                /*                \n            } else if (transfer.isDataFlavorSupported(MapResource.DataFlavor)) {\n                \n                foundFlavor = MapResource.DataFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_RESOURCE_LIST;\n                dropItems = (List) foundData;\n                */\n                \n            } else if (transfer.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {\n\n                foundFlavor = DataFlavor.javaFileListFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_FILE_LIST;\n                dropItems = (Collection) foundData;\n\n            } else if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n                \n                foundFlavor = DataFlavor.stringFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_TEXT;\n                dropText = (String) foundData;\n            \n            } else {\n                if (DEBUG.Enabled) {\n                    System.out.println(\"TRANSFER: found no supported dataFlavors\");\n                    dumpFlavors(transfer);\n                }\n                return false;\n            }\n        } catch (ClassCastException ex) {\n            Util.printStackTrace(ex, \"TRANSFER: Transfer data did not match expected type:\"\n                                 + \"\\n\\tflavor=\" + foundFlavor\n                                 + \"\\n\\t  type=\" + foundData.getClass());\n            return false;\n\n        } catch (Throwable t) {\n            Util.printStackTrace(t, \"TRANSFER: data extraction failure\");\n            return false;\n        }\n\n        if (foundData == DATA_FAILURE)\n            return false;\n\n        if (DEBUG.Enabled) {\n            String size = \"\";\n            String bagType0 = \"\";\n            if (foundData instanceof Collection) {\n                Collection bag = (Collection) foundData;\n                size = \" (Collection size \" + bag.size() + \")\";\n                if (bag.size() > 0)\n                    bagType0 =   \"\\n\\ttype[0]: \" + bag.iterator().next().getClass();\n                \n            }\n            System.out.println(\"TRANSFER: Found supported flavor \\\"\" + foundFlavor.getHumanPresentableName() + \"\\\"\"\n                               + \"\\n\\t   type: \" + Util.tag(foundData) + size\n                               + bagType0\n                               + \"\\n\\t flavor: \" + foundFlavor\n                               + \"\\n\\t   data: [\" + foundData + \"]\"\n                               //+ \"\\n\\tdropptedText=[\" + droppedText + \"]\"\n                               );\n        }\n\n        final boolean isLinkAction = (dropAction == DnDConstants.ACTION_LINK);\n\n        DropContext drop =\n            new DropContext(transfer,\n                            //dropLocation,\n                            mapLocation,\n                            dropItems,\n                            dropText,\n                            dropTarget,\n                            isLinkAction);\n\n        boolean success = false;\n\n        if (dropItems != null && dropItems.size() > 1)\n            CenterNodesOnDrop = false;\n        else\n            CenterNodesOnDrop = true;\n\n        try {\n            switch (dropType) {\n\n            case DROP_FILE_LIST:\n                success = processDroppedFileList(drop);\n                break;\n            case DROP_NODE_LIST:\n                success = processDroppedNodes(drop);\n                break;\n            case DROP_RESOURCE_LIST:\n                success = processDroppedResourceList(drop);\n                break;\n            case DROP_TEXT:\n                success = processDroppedText(drop);\n                break;\n\n            default:\n                // should never happen\n                throw new Error(\"unknown drop type \" + dropType);\n            }\n\n            if (drop.added.size() > 0) {\n\n                // Must make sure the selection is owned\n                // by this map before we try and change it.\n                // TODO: SlideViewer currently not handling this properly...\n                mViewer.grabVueApplicationFocus(\"drop\", null);\n                \n                // todo: would be cleaner to have viewer.getSelection(),\n                // that could grab the vue app focus?\n                VUE.getSelection().setTo(drop.added);\n\n            }\n            \n        } catch (Throwable t) {\n            Util.printStackTrace(t, \"drop processing failed\");\n        }\n\n        // Even if we had an exception during processing,\n        // mark the drop in case there were partial results for Undo.\n        \n        mViewer.getMap().getUndoManager().mark(\"Drop\");\n\n        return success;\n    }","commit_id":"3b7a8eb244d45add8b0f36e49fb456a526157282","url":"https://github.com/VUE/VUE"},{"original_method":"private LWComponent createNode(DropContext drop,\n                                   Resource resource,\n                                   Map properties,\n                                   Point2D where,\n                                   boolean newResource)\n    {\n        if (DEBUG.DND) out(\"createNode \" + resource + \" \" + properties + \" \" + where);\n\n        if (properties == null)\n            properties = Collections.EMPTY_MAP;\n\n        // can't currently generate link action when dragging an image from\n        // a web browser.\n        boolean dropImagesAsNodes = DropImagesAsNodes && !drop.isLinkAction /*&& !DEBUG.IMAGE*/;\n\n        LWComponent node;\n        LWImage lwImage = null;\n        String displayName = (String) properties.get(\"title\");\n\n        if (displayName == null)\n            displayName = makeNodeTitle(resource);\n\n        String shortName = displayName;\n\n        if (shortName.length() > MaxNodeTitleLen)\n            shortName = shortName.substring(0,MaxNodeTitleLen) + \"...\";\n\n        /*\n        MapResource mapResource = null;\n        if (resource instanceof MapResource) { // todo: fix Resource so no more of this kind of hacking\n            mapResource = (MapResource) resource;\n        }\n        */\n        \n        /*\n         * To accomodate for the MapDisplay->Image Size preference, I needed to do this so that\n         * when Image Size is set to Off Images aren't added to the node. MK\n         */\n        if (resource.isImage() && LWImage.getMaxRenderSize() > 0) {\n            if (DEBUG.DND || DEBUG.IMAGE) out(\"IMAGE DROP \" + resource + \" \" + properties);\n            //node = new LWImage(resource, viewer.getMap().getUndoManager());\n            lwImage = new LWImage();\n            String ws = (String) properties.get(\"width\");\n            String hs = (String) properties.get(\"height\");\n            if (ws != null && hs != null) {\n                int w = Integer.parseInt(ws);\n                int h = Integer.parseInt(hs);\n                lwImage.setImageSize(w, h);\n                resource.setProperty(\"image.width\", ws);\n                resource.setProperty(\"image.height\", hs);\n                /*\n                if (mapResource != null) {\n                    mapResource.setProperty(\"image.width\", ws);\n                    mapResource.setProperty(\"image.height\", hs);\n                }\n                */\n            }\n            lwImage.setLabel(displayName);\n        }\n        \n        if (lwImage == null || dropImagesAsNodes) {\n            if (false && where == null && lwImage != null) {\n                // don't wrap image if we're about to drop it into something else\n                node = lwImage;\n            } else {\n                node = NodeTool.createNode(shortName);\n                node.setResource(resource);\n                if (lwImage != null)\n                    ((LWNode)node).addChild(lwImage);\n            }\n        } else {\n            // we're dropping the image raw (either on map or into something else)\n            node = lwImage;\n        }\n\n        // if \"where\" is null, the caller is adding this to another\n        // existing node, so we don't add it to the map here\n\n        if (where != null)\n            addNodeToMap(node, where);\n\n        if (lwImage != null) {\n            // this will cause the LWImage to start loading the image\n            lwImage.setResourceAndLoad(resource, mViewer.getMap().getUndoManager());\n        } else if (newResource) {\n            // if image, it will do this at end of loading\n            ((URLResource)resource).scanForMetaDataAsync(node, true);\n        }\n\n        drop.add(node);\n\n        return node;\n    }","id":69180,"modified_method":"private LWComponent createNode(DropContext drop,\n                                   Resource resource,\n                                   Map properties,\n                                   Point2D where,\n                                   boolean newResource)\n    {\n        if (DEBUG.DND) out(\"createNode \" + resource + \" \" + properties + \" where=\" + where);\n\n        if (properties == null)\n            properties = Collections.EMPTY_MAP;\n\n        // can't currently generate link action when dragging an image from\n        // a web browser.\n        boolean dropImagesAsNodes = DropImagesAsNodes && !drop.isLinkAction /*&& !DEBUG.IMAGE*/;\n\n        LWComponent node;\n        LWImage lwImage = null;\n        String displayName = (String) properties.get(\"title\");\n\n        if (displayName == null)\n            displayName = makeNodeTitle(resource);\n\n        String shortName = displayName;\n\n        if (shortName.length() > MaxNodeTitleLen)\n            shortName = shortName.substring(0,MaxNodeTitleLen) + \"...\";\n\n        /*\n        MapResource mapResource = null;\n        if (resource instanceof MapResource) { // todo: fix Resource so no more of this kind of hacking\n            mapResource = (MapResource) resource;\n        }\n        */\n        \n        /*\n         * To accomodate for the MapDisplay->Image Size preference, I needed to do this so that\n         * when Image Size is set to Off Images aren't added to the node. MK\n         */\n        if (resource.isImage() && LWImage.getMaxRenderSize() > 0) {\n            if (DEBUG.DND || DEBUG.IMAGE) out(\"IMAGE DROP \" + resource + \" \" + properties);\n            //node = new LWImage(resource, viewer.getMap().getUndoManager());\n            lwImage = new LWImage();\n            String ws = (String) properties.get(\"width\");\n            String hs = (String) properties.get(\"height\");\n            if (ws != null && hs != null) {\n                int w = Integer.parseInt(ws);\n                int h = Integer.parseInt(hs);\n                lwImage.setImageSize(w, h);\n                resource.setProperty(\"image.width\", ws);\n                resource.setProperty(\"image.height\", hs);\n                /*\n                if (mapResource != null) {\n                    mapResource.setProperty(\"image.width\", ws);\n                    mapResource.setProperty(\"image.height\", hs);\n                }\n                */\n            }\n            lwImage.setLabel(displayName);\n        }\n        \n        if (lwImage == null || dropImagesAsNodes) {\n            if (false && where == null && lwImage != null) {\n                // don't wrap image if we're about to drop it into something else\n                node = lwImage;\n            } else {\n                node = NodeTool.createNode(shortName);\n                node.setResource(resource);\n                if (lwImage != null)\n                    ((LWNode)node).addChild(lwImage);\n            }\n        } else {\n            // we're dropping the image raw (either on map or into something else)\n            node = lwImage;\n        }\n\n        // if \"where\" is null, the caller is adding this to another\n        // existing node, so we don't add it to the map here\n        // TODO: this is a confusing side-effect!\n        // TODO: merge all hitParent v.s. not swtiches above into a unified hanlder case\n        // FYI, this is now overdone!  We always provide the location now,\n        // so on the slideviewer for master slide, where the slide is \"hittable\",\n        // and looks like the parent, it's added to map first needlessly, then\n        // reparented to where it needs to go.\n\n        if (where != null)\n            addNodeToMap(node, where);\n\n        if (lwImage != null) {\n            // this will cause the LWImage to start loading the image\n            lwImage.setResourceAndLoad(resource, mViewer.getMap().getUndoManager());\n        } else if (newResource) {\n            // if image, it will do this at end of loading\n            ((URLResource)resource).scanForMetaDataAsync(node, true);\n        }\n\n        drop.add(node);\n\n        return node;\n    }","commit_id":"3b7a8eb244d45add8b0f36e49fb456a526157282","url":"https://github.com/VUE/VUE"},{"original_method":"DropContext(Transferable t,\n                    Point2D.Float mapLocation,\n                    Collection items,\n                    String text,\n                    LWComponent hit,\n                    boolean isLinkAction)\n        {\n            this.transfer = t;\n            this.location = mapLocation;\n            this.items = items;\n            this.text = text;\n            this.hit = hit;\n\n            if (items instanceof java.util.List)\n                list = (List) items;\n            else\n                list = null;\n            \n            /*\n            if (hit instanceof LWNode)\n                hitNode = (LWNode) hit;\n            else\n                hitNode = null;\n            */\n            if (hit instanceof LWContainer)\n                hitNode = (LWContainer) hit;\n            else\n                hitNode = null;\n\n            this.isLinkAction = isLinkAction;\n\n            nextX = mapLocation.x;\n            nextY = mapLocation.y;\n        }","id":69181,"modified_method":"DropContext(Transferable t,\n                    Point2D.Float mapLocation,\n                    Collection items,\n                    String text,\n                    LWComponent hit,\n                    boolean isLinkAction)\n        {\n            this.transfer = t;\n            this.location = mapLocation;\n            this.items = items;\n            this.text = text;\n            this.hit = hit;\n\n            if (items instanceof java.util.List)\n                list = (List) items;\n            else\n                list = null;\n            \n            if (hit instanceof LWContainer)\n                hitParent = (LWContainer) hit;\n            else\n                hitParent = null;\n\n            this.isLinkAction = isLinkAction;\n\n            nextX = mapLocation.x;\n            nextY = mapLocation.y;\n\n            if (DEBUG.DND) System.out.println(\"DropContext:\"\n                                              + \"\\n\\t   mapLoc: \" + mapLocation\n                                              + \"\\n\\t      hit: \" + hit\n                                              + \"\\n\\thitParent: \" + hitParent\n                                              );\n        }","commit_id":"3b7a8eb244d45add8b0f36e49fb456a526157282","url":"https://github.com/VUE/VUE"},{"original_method":"private LWComponent addNodeToMap(LWComponent node, Point2D where)\n    {\n        if (CenterNodesOnDrop)\n            node.setCenterAt(where);\n        else\n            node.setLocation(where);\n        mViewer.getMap().addLWC(node);\n        return node;\n    }","id":69182,"modified_method":"private LWComponent addNodeToMap(LWComponent node, Point2D where)\n    {\n        if (CenterNodesOnDrop)\n            node.setCenterAt(where);\n        else\n            node.setLocation(where);\n        mViewer.getFocal().addChild(node);\n        return node;\n    }","commit_id":"3b7a8eb244d45add8b0f36e49fb456a526157282","url":"https://github.com/VUE/VUE"},{"original_method":"private void processDroppedFile(File file, DropContext drop)\n    {\n        String resourceSpec = file.getPath();\n        String path = file.getPath();\n\n        Map props = new HashMap();\n\n        if (path.toLowerCase().endsWith(\".url\")) {\n            // Search a windows .url file (an internet shortcut)\n            // for the actual web reference.\n            String url = convertWindowsURLShortCutToURL(file);\n            if (url != null) {\n                resourceSpec = url;\n\n                // We compute the resource name here as it's coming from a short-cut\n                // that we extract a URL from, in which case we want to use the name of\n                // the original shortcut, and not compute the resource title from it's\n                // source URL.\n        \n                String resourceName;\n\n                if (file.getName().length() > 4)\n                    resourceName = file.getName().substring(0, file.getName().length() - 4);\n                else\n                    resourceName = file.getName();\n\n                props.put(\"title\", resourceName);\n                \n            }\n        } else if (path.endsWith(\".textClipping\")  || path.endsWith(\".webloc\") || path.endsWith(\".fileloc\")) {\n\n            // TODO: we can handle Mac .fileloc's if we check multiple data-flavors: the initial LIST\n            // flavor gives us the .fileloc, which we could even pull a name from if we want, and in\n            // any case, a later STRING data-flavor actually gives us the source of the link!\n            // SAME APPLIES TO .webloc files... AND .textClipping files\n            // Of course, if they drop multple ones of these, we're screwed, as only the last\n            // one gets translated for us in the later string data-flavor.  Oh well -- at least\n            // we can handle the single case if we want.\n\n            if (drop.transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n\n                // Unforunately, this only works if there's ONE ITEM IN THE LIST,\n                // or more accurately, the last item in the list, or perhaps even\n                // more accurately, the item that also shows up as the application/x-java-url.\n                // Which is why ultimately we'll want to put all this type of processing\n                // in a full-and-fancy filing OSID to end all filing OSID's, that'll\n                // handle windows .url shortcuts, the above mac cases plus mac aliases, etc, etc.\n\n                String unicodeString;\n                try {\n                    unicodeString = (String) drop.transfer.getTransferData(DataFlavor.stringFlavor);\n                    if (DEBUG.Enabled) out(\"*** GOT MAC REDIRECT DATA [\" + unicodeString + \"]\");\n                } catch (Exception ex) {\n                    ex.printStackTrace();\n                }\n\n                // for textClipping, the string data is raw dropped text, for webloc,\n                // it's URL be we already have text->URL in dropped text code below,\n                // and same for .fileloc...  REFACTOR THIS MESS.\n\n                //resourceSpec = unicodeString; \n                //resourceName = \n                // NOW WE NEED TO JUMP DOWN TO HANDLING DROPPED TEXT...\n            }\n        }\n                \n        //if (debug) System.out.println(\"\\t\" + file.getClass().getName() + \" \" + file);\n        //if (hitComponent != null && fileList.size() == 1) {\n                \n        if (drop.hit != null) {\n            // TODO: CONSOLODATE THE SET-RESOURCE CODE FROM ALL THE PROCESSING SUB-ROUTINES\n            if (drop.isLinkAction || drop.hit instanceof LWLink) { // hack for now: if a link, just always set resource...\n                drop.hit.setResource(resourceSpec);\n            } else if (drop.hitNode != null) {\n                drop.hitNode.addChild(createNodeAndResource(drop, resourceSpec, props, null));\n            }\n        } else {\n            createNodeAndResource(drop, resourceSpec, props, drop.nextDropLocation());\n        }\n    }","id":69183,"modified_method":"private void processDroppedFile(File file, DropContext drop)\n    {\n        String resourceSpec = file.getPath();\n        String path = file.getPath();\n\n        Map props = new HashMap();\n\n        if (path.toLowerCase().endsWith(\".url\")) {\n            // Search a windows .url file (an internet shortcut)\n            // for the actual web reference.\n            String url = convertWindowsURLShortCutToURL(file);\n            if (url != null) {\n                resourceSpec = url;\n\n                // We compute the resource name here as it's coming from a short-cut\n                // that we extract a URL from, in which case we want to use the name of\n                // the original shortcut, and not compute the resource title from it's\n                // source URL.\n        \n                String resourceName;\n\n                if (file.getName().length() > 4)\n                    resourceName = file.getName().substring(0, file.getName().length() - 4);\n                else\n                    resourceName = file.getName();\n\n                props.put(\"title\", resourceName);\n                \n            }\n        } else if (path.endsWith(\".textClipping\")  || path.endsWith(\".webloc\") || path.endsWith(\".fileloc\")) {\n\n            // TODO: we can handle Mac .fileloc's if we check multiple data-flavors: the initial LIST\n            // flavor gives us the .fileloc, which we could even pull a name from if we want, and in\n            // any case, a later STRING data-flavor actually gives us the source of the link!\n            // SAME APPLIES TO .webloc files... AND .textClipping files\n            // Of course, if they drop multple ones of these, we're screwed, as only the last\n            // one gets translated for us in the later string data-flavor.  Oh well -- at least\n            // we can handle the single case if we want.\n\n            if (drop.transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n\n                // Unforunately, this only works if there's ONE ITEM IN THE LIST,\n                // or more accurately, the last item in the list, or perhaps even\n                // more accurately, the item that also shows up as the application/x-java-url.\n                // Which is why ultimately we'll want to put all this type of processing\n                // in a full-and-fancy filing OSID to end all filing OSID's, that'll\n                // handle windows .url shortcuts, the above mac cases plus mac aliases, etc, etc.\n\n                String unicodeString;\n                try {\n                    unicodeString = (String) drop.transfer.getTransferData(DataFlavor.stringFlavor);\n                    if (DEBUG.Enabled) out(\"*** GOT MAC REDIRECT DATA [\" + unicodeString + \"]\");\n                } catch (Exception ex) {\n                    ex.printStackTrace();\n                }\n\n                // for textClipping, the string data is raw dropped text, for webloc,\n                // it's URL be we already have text->URL in dropped text code below,\n                // and same for .fileloc...  REFACTOR THIS MESS.\n\n                //resourceSpec = unicodeString; \n                //resourceName = \n                // NOW WE NEED TO JUMP DOWN TO HANDLING DROPPED TEXT...\n            }\n        }\n                \n        //if (debug) System.out.println(\"\\t\" + file.getClass().getName() + \" \" + file);\n        //if (hitComponent != null && fileList.size() == 1) {\n                \n        if (drop.hit != null) {\n            // TODO: CONSOLODATE THE SET-RESOURCE CODE FROM ALL THE PROCESSING SUB-ROUTINES\n            if (drop.isLinkAction || drop.hit instanceof LWLink) { // hack for now: if a link, just always set resource...\n                drop.hit.setResource(resourceSpec);\n            } else if (drop.hitParent != null) {\n                drop.hitParent.addChild(createNodeAndResource(drop, resourceSpec, props, drop.nextDropLocation()));\n                // Why were we leaving out the location here?  Oh: when hitParent could only be a node (auto-layout), that made sense\n                //drop.hitNode.addChild(createNodeAndResource(drop, resourceSpec, props, null));\n            }\n        } else {\n            createNodeAndResource(drop, resourceSpec, props, drop.nextDropLocation());\n        }\n    }","commit_id":"3b7a8eb244d45add8b0f36e49fb456a526157282","url":"https://github.com/VUE/VUE"},{"original_method":"private Point2D.Float dropToMapLocation(int x, int y)\n    {\n        return  mViewer.screenToMapPoint(x, y);\n    }","id":69184,"modified_method":"private Point2D.Float dropToMapLocation(int x, int y)\n    {\n        final Point2D.Float mapLoc = mViewer.screenToMapPoint(x, y);\n        //if (DEBUG.DND) out(\"dropToMapLocation \" + x + \",\" + y + \" = \" + mapLoc);\n        return mapLoc;\n    }","commit_id":"3b7a8eb244d45add8b0f36e49fb456a526157282","url":"https://github.com/VUE/VUE"},{"original_method":"private Point2D dropToMapLocation(int x, int y)\n    {\n        return viewer.screenToMapPoint(x, y);\n        /*\n        java.awt.Insets mapInsets = viewer.getInsets();\n        java.awt.Point mapLocation = viewer.getLocation();\n        System.out.println(\"viewer insets=\" + mapInsets);\n        System.out.println(\"viewer location=\" + mapLocation);\n        x -= mapLocation.x;\n        y -= mapLocation.y;\n        x -= mapInsets.left;\n        y -= mapInsets.top;\n        */\n    }","id":69185,"modified_method":"private Point2D dropToMapLocation(int x, int y)\n    {\n        Point2D p = viewer.screenToMapPoint(x, y);\n        //if (DEBUG.DND) System.out.println(\"drop location \" + x + \",\" + y + \" mapLoc=\" + p);\n        return p;\n        /*\n        java.awt.Insets mapInsets = viewer.getInsets();\n        java.awt.Point mapLocation = viewer.getLocation();\n        System.out.println(\"viewer insets=\" + mapInsets);\n        System.out.println(\"viewer location=\" + mapLocation);\n        x -= mapLocation.x;\n        y -= mapLocation.y;\n        x -= mapInsets.left;\n        y -= mapInsets.top;\n        */\n    }","commit_id":"d96a5dbcba224f53c82f13422ac2873828499758","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     * Process any transferrable: @param e can be null if don't have a drop event\n     * (e.g., could use to process clipboard contents as well as drop events)\n     */\n    public boolean processTransferable(Transferable transfer, DropTargetDropEvent e)\n    {\n        Point dropLocation = null;\n        int dropAction = DnDConstants.ACTION_MOVE; // default action\n        boolean modifierKeyWasDown = false;\n        \n        if (e != null) {\n            //dropLocation = e.getLocation();\n            //dropAction = e.getDropAction();\n\n            if (DEBUG.DND) System.out.println(\"MapDropTarget: processTransferable: dropAction is \" + dropName(e.getDropAction()));\n\n            // BELOW HAS CHANGED AS OF AT LEAST OS X 10.4.2 / JVM 1.4.2:\n            // Mac now ACTION_MOVE as the default action, just like the PC\n            // \n            // [OLD] ACTION_MOVE action is default action on PC, COPY on the\n            // Mac, so if not that, assume a modifier key was being\n            // held down to change the from the default OS drag\n            // action.  We have no way of knowing anything about\n            // actual keyboard state that initiated the drag.\n\n            //if (VueUtil.isMacPlatform())\n            //    modifierKeyWasDown = (dropAction != DnDConstants.ACTION_COPY);\n            //else\n            //    modifierKeyWasDown = (dropAction != DnDConstants.ACTION_MOVE);\n\n            // Okay, can't reliably determine if modifier key was down\n            // on all platforms and drag operations: e.g.: on Windows XP,\n            // default action is different in drag from windows file explorer\n            // than on drag from Mozilla (or maybe web browsers in general)\n\n            // [ The below has been fixed as of at least OS X 10.4.2 JVM 1.4.2 ]\n            // \n            // [OLD] FYI, Mac OS X 10.2.8/JVM 1.4.1_01 is not telling us about\n            // changes to dropAction that happen when the drag was\n            // initiated (e.g., ctrl was down) -- this is a BUG, however,\n            // if you press ctrl down AFTER the drop starts, sourceAction\n            // & dropAction will be set to some rediculous number -- so at\n            // least we can detect that by making modifer down the default\n            // if drop action anything other than the default.  ALSO:\n            // somtimes we get ACTION_NONE, which is 0, which will always\n            // fail our acceptable drop types test.\n        }\n\n        LWComponent hitComponent = null;\n\n        if (dropLocation != null) {\n            hitComponent = viewer.getMap().findChildAt(dropToMapLocation(dropLocation));\n            System.out.println(\"\\thitComponent=\" + hitComponent);\n        }\n\n        // Now: when either CTRl or ALT is down on the mac, drop action changes from\n        // default of 2 (MOVE) to 1 (COPY)\n        if (VueUtil.isMacPlatform()) {\n            if (dropAction > 2) // hack: drop action == 1073741842 with Ctrl down on mac [OLD OS X / JVM].\n                modifierKeyWasDown = true;\n        } else {\n            // not safe: see above re: unpredictable due to drags from browsers and/or WinXP\n            //if (dropAction == 1)\n            //modifierKeyWasDown = true;\n        }\n            \n        \n        boolean createAsChildren = !modifierKeyWasDown && hitComponent instanceof LWNode;\n        boolean overwriteResource = modifierKeyWasDown;\n\n        // if no drop location (e.g., we did a \"Paste\") then assume where\n        // they last clicked.\n        if (dropLocation == null)\n            dropLocation = viewer.getLastMousePressPoint();\n        //dropLocation = new java.awt.Point(viewer.getWidth()/2, viewer.getHeight()/2);\n        \n        List resourceList = null;\n        List fileList = null;        \n        String droppedText = null;\n        DataFlavor foundFlavor = null;\n        Object foundData = null;\n\n        DataFlavor[] dataFlavors = transfer.getTransferDataFlavors();\n        if (debug) System.out.println(\"TRANSFER: found \" + dataFlavors.length + \" dataFlavors\");\n        if (DEBUG.DND) dumpFlavors(transfer);\n\n        try {\n            if (transfer.isDataFlavorSupported(VueDragTreeNodeSelection.resourceFlavor)) {\n                \n                foundFlavor = VueDragTreeNodeSelection.resourceFlavor;\n                foundData = transfer.getTransferData(foundFlavor);\n                resourceList = (java.util.List) foundData;\n            \n            } else if (transfer.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {\n\n                foundFlavor = DataFlavor.javaFileListFlavor;\n                foundData = transfer.getTransferData(foundFlavor);\n                fileList = (java.util.List) foundData;\n\n            } else if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n            \n                foundFlavor = DataFlavor.stringFlavor;\n                foundData = transfer.getTransferData(DataFlavor.stringFlavor);\n                droppedText = (String) foundData;\n            \n            } else {\n                System.out.println(\"TRANSFER: found no supported dataFlavors\");\n                dumpFlavors(transfer);\n                return false;\n            }\n        } catch (UnsupportedFlavorException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: Transfer lied about supporting \" + foundFlavor);\n            return false;\n        } catch (ClassCastException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: Transfer data did not match declared type! flavor=\"\n                               + foundFlavor + \" data=\" + foundData.getClass());\n            return false;\n        } catch (java.io.IOException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: data no longer available\");\n            return false;\n        }\n\n        System.out.println(\"TRANSFER: Found supported flavor \\\"\" + foundFlavor.getHumanPresentableName() + \"\\\"\"\n                           + \"\\n\\tflavor=\" + foundFlavor\n                           + \"\\n\\t  data=[\" + foundData + \"]\"\n                           //+ \"\\n\\tdropptedText=[\" + droppedText + \"]\"\n                           );\n\n        boolean success = false;\n\n        // TODO: we can handle Mac .fileloc's if we check multiple data-flavors: the initial LIST\n        // flavor gives us the .fileloc, which we could even pull a name from if we want, and in\n        // any case, a later STRING data-flavor actually gives us the source of the link!\n        // SAME APPLIES TO .webloc files...\n        // Of course, if they drop multple ones of these, we're screwed, as only the last\n        // one gets translated for us in the later string data-flavor.  Oh well -- at least\n        // we can handle the single case if we want.\n\n        if (fileList != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING LIST, size= \" + fileList.size());\n            java.util.Iterator iter = fileList.iterator();\n            int x = dropLocation.x;\n            int y = dropLocation.y;\n\n            List addedNodes = new java.util.ArrayList();\n            while (iter.hasNext()) {\n                File file = (File) iter.next();\n\n                //String resourceSpec = \"file://\" + file.getPath(); // why was this done? it breaks URL shortcuts\n                String resourceSpec = file.getPath();\n                String resourceName = file.getName();\n                \n                if (file.getPath().toLowerCase().endsWith(\".url\")) {\n                    // Search a windows .url file (an internet shortcut)\n                    // for the actual web reference.\n                    String url = convertWindowsURLShortCutToURL(file);\n                    if (url != null) {\n                       resourceSpec = url;\n                       // why was this done?  It breaks URL shortcuts...\n                       //   resourceSpec = \"file://\" + url;\n                        if (file.getName().length() > 4)\n                            resourceName = file.getName().substring(0, file.getName().length() - 4);\n                        else\n                            resourceName = file.getName();\n                    }\n                }\n                \n                //if (debug) System.out.println(\"\\t\" + file.getClass().getName() + \" \" + file);\n                //if (hitComponent != null && fileList.size() == 1) {\n                \n                if (hitComponent != null) {\n                    if (createAsChildren) {\n                        ((LWNode)hitComponent).addChild(createNewNode(resourceSpec, resourceName, null));\n                    } else {\n                        hitComponent.setResource(resourceSpec);\n                    }\n                } else {\n                    addedNodes.add(createNewNode(resourceSpec, resourceName, new java.awt.Point(x, y)));\n                    x += 15;\n                    y += 15;\n                }\n                success = true;\n            }\n            if (addedNodes.size() > 0)\n                VUE.getSelection().setTo(addedNodes.iterator());\n         \n        } else if (resourceList != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING RESOURCE LIST, size= \" + resourceList.size());\n            //if (resourceList.size() == 1 && hitComponent != null && overwriteResource) {\n            if (resourceList.size() == 1 && hitComponent != null && !createAsChildren) {\n                // modifier key was down: force resetting of the resource\n                hitComponent.setResource((Resource)resourceList.get(0));\n            } else {\n                java.util.Iterator iter = resourceList.iterator();\n                int x = dropLocation.x;\n                int y = dropLocation.y;\n                while (iter.hasNext()) {\n                    Resource resource = (Resource) iter.next();\n                    if (createAsChildren) {\n                        ((LWNode)hitComponent).addChild(createNewNode(resource, null));\n                    } else {\n                        createNewNode(resource, new java.awt.Point(x,y));\n                        x += 15;\n                        y += 15;\n                    }\n                    success = true;\n                }\n            }\n        } else if (droppedText != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING DROPPED TEXT\");\n            // Attempt to make a URL of any string dropped -- if fails,\n            // just treat as regular pasted text.  todo: if newlines\n            // in middle of string, don't do this, or possibly attempt\n            // to split into list of multiple URL's (tho only if *every*\n            // line succeeds as a URL -- prob too hairy to bother)\n\n            String[] rows = droppedText.split(\"\\n\");\n            URL url = null;\n            String resourceTitle = null;\n\n            if (rows.length < 3) {\n                try {\n                    url = new URL(rows[0]);\n                } catch (MalformedURLException ex) {}\n                if (rows.length > 1) {\n                    // Current version of Mozilla (at least on Windows XP, as of 2004-02-22)\n                    // includes the HTML <title> as second row of text.\n                    resourceTitle = rows[1];\n                }\n            }\n\n            if (url != null) {\n                if (hitComponent != null) {\n                    if (createAsChildren)\n                        ((LWNode)hitComponent).addChild(createNewNode(url.toString(), resourceTitle, dropLocation));\n                    else\n                        hitComponent.setResource(url.toString());\n                } else {\n                    createNewNode(url.toString(), resourceTitle, dropLocation);\n                }\n            } else {\n                createNewTextNode(droppedText, dropLocation);\n            }\n            success = true;\n        }\n\n        if (success)\n            VUE.getUndoManager().mark(\"Drop\");\n\n        return success;\n    }","id":69186,"modified_method":"/**\n     * Process any transferrable: @param e can be null if don't have a drop event\n     * (e.g., could use to process clipboard contents as well as drop events)\n     */\n    public boolean processTransferable(Transferable transfer, DropTargetDropEvent e)\n    {\n        Point dropLocation = null;\n        int dropAction = DnDConstants.ACTION_MOVE; // default action\n        boolean modifierKeyWasDown = false;\n        \n        if (e != null) {\n            dropLocation = e.getLocation();\n            //dropAction = e.getDropAction();\n\n            if (DEBUG.DND) System.out.println(\"MapDropTarget: processTransferable: dropAction is \" + dropName(e.getDropAction()));\n\n            // BELOW HAS CHANGED AS OF AT LEAST OS X 10.4.2 / JVM 1.4.2:\n            // Mac now ACTION_MOVE as the default action, just like the PC\n            // \n            // [OLD] ACTION_MOVE action is default action on PC, COPY on the\n            // Mac, so if not that, assume a modifier key was being\n            // held down to change the from the default OS drag\n            // action.  We have no way of knowing anything about\n            // actual keyboard state that initiated the drag.\n\n            //if (VueUtil.isMacPlatform())\n            //    modifierKeyWasDown = (dropAction != DnDConstants.ACTION_COPY);\n            //else\n            //    modifierKeyWasDown = (dropAction != DnDConstants.ACTION_MOVE);\n\n            // Okay, can't reliably determine if modifier key was down\n            // on all platforms and drag operations: e.g.: on Windows XP,\n            // default action is different in drag from windows file explorer\n            // than on drag from Mozilla (or maybe web browsers in general)\n\n            // [ The below has been fixed as of at least OS X 10.4.2 JVM 1.4.2 ]\n            // \n            // [OLD] FYI, Mac OS X 10.2.8/JVM 1.4.1_01 is not telling us about\n            // changes to dropAction that happen when the drag was\n            // initiated (e.g., ctrl was down) -- this is a BUG, however,\n            // if you press ctrl down AFTER the drop starts, sourceAction\n            // & dropAction will be set to some rediculous number -- so at\n            // least we can detect that by making modifer down the default\n            // if drop action anything other than the default.  ALSO:\n            // somtimes we get ACTION_NONE, which is 0, which will always\n            // fail our acceptable drop types test.\n        }\n\n        LWComponent hitComponent = null;\n\n        if (dropLocation != null) {\n            hitComponent = viewer.getMap().findChildAt(dropToMapLocation(dropLocation));\n            System.out.println(\"\\thitComponent=\" + hitComponent);\n        }\n\n        // Now: when either CTRl or ALT is down on the mac, drop action changes from\n        // default of 2 (MOVE) to 1 (COPY)\n        if (VueUtil.isMacPlatform()) {\n            if (dropAction > 2) // hack: drop action == 1073741842 with Ctrl down on mac [OLD OS X / JVM].\n                modifierKeyWasDown = true;\n        } else {\n            // not safe: see above re: unpredictable due to drags from browsers and/or WinXP\n            //if (dropAction == 1)\n            //modifierKeyWasDown = true;\n        }\n            \n        \n        boolean createAsChildren = !modifierKeyWasDown && hitComponent instanceof LWNode;\n        boolean overwriteResource = modifierKeyWasDown;\n\n        // if no drop location (e.g., we did a \"Paste\") then assume where\n        // they last clicked.\n        if (dropLocation == null)\n            dropLocation = viewer.getLastMousePressPoint();\n        //dropLocation = new java.awt.Point(viewer.getWidth()/2, viewer.getHeight()/2);\n        \n        List resourceList = null;\n        List fileList = null;        \n        String droppedText = null;\n        DataFlavor foundFlavor = null;\n        Object foundData = null;\n\n        DataFlavor[] dataFlavors = transfer.getTransferDataFlavors();\n        if (debug) System.out.println(\"TRANSFER: found \" + dataFlavors.length + \" dataFlavors\");\n        if (DEBUG.DND) dumpFlavors(transfer);\n\n        try {\n            if (transfer.isDataFlavorSupported(VueDragTreeNodeSelection.resourceFlavor)) {\n                \n                foundFlavor = VueDragTreeNodeSelection.resourceFlavor;\n                foundData = transfer.getTransferData(foundFlavor);\n                resourceList = (java.util.List) foundData;\n            \n            } else if (transfer.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {\n\n                foundFlavor = DataFlavor.javaFileListFlavor;\n                foundData = transfer.getTransferData(foundFlavor);\n                fileList = (java.util.List) foundData;\n\n            } else if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n                \n                foundFlavor = DataFlavor.stringFlavor;\n                foundData = transfer.getTransferData(DataFlavor.stringFlavor);\n                droppedText = (String) foundData;\n            \n            } else {\n                System.out.println(\"TRANSFER: found no supported dataFlavors\");\n                dumpFlavors(transfer);\n                return false;\n            }\n        } catch (UnsupportedFlavorException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: Transfer lied about supporting \" + foundFlavor);\n            return false;\n        } catch (ClassCastException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: Transfer data did not match declared type! flavor=\"\n                               + foundFlavor + \" data=\" + foundData.getClass());\n            return false;\n        } catch (java.io.IOException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: data no longer available\");\n            return false;\n        }\n\n        System.out.println(\"TRANSFER: Found supported flavor \\\"\" + foundFlavor.getHumanPresentableName() + \"\\\"\"\n                           + \"\\n\\tflavor=\" + foundFlavor\n                           + \"\\n\\t  data=[\" + foundData + \"]\"\n                           //+ \"\\n\\tdropptedText=[\" + droppedText + \"]\"\n                           );\n\n        boolean success = false;\n\n        // TODO: we can handle Mac .fileloc's if we check multiple data-flavors: the initial LIST\n        // flavor gives us the .fileloc, which we could even pull a name from if we want, and in\n        // any case, a later STRING data-flavor actually gives us the source of the link!\n        // SAME APPLIES TO .webloc files... AND .textClipping files\n        // Of course, if they drop multple ones of these, we're screwed, as only the last\n        // one gets translated for us in the later string data-flavor.  Oh well -- at least\n        // we can handle the single case if we want.\n\n        if (fileList != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING LIST, size= \" + fileList.size());\n            java.util.Iterator iter = fileList.iterator();\n            int x = dropLocation.x;\n            int y = dropLocation.y;\n\n            List addedNodes = new java.util.ArrayList();\n            while (iter.hasNext()) {\n                File file = (File) iter.next();\n\n                //String resourceSpec = \"file://\" + file.getPath(); // why was this done? it breaks URL shortcuts\n                String resourceSpec = file.getPath();\n                String resourceName = file.getName();\n                String path = file.getPath();\n                \n                if (path.toLowerCase().endsWith(\".url\")) {\n                    // Search a windows .url file (an internet shortcut)\n                    // for the actual web reference.\n                    String url = convertWindowsURLShortCutToURL(file);\n                    if (url != null) {\n                       resourceSpec = url;\n                       // why was this done?  It breaks URL shortcuts...\n                       //   resourceSpec = \"file://\" + url;\n                        if (file.getName().length() > 4)\n                            resourceName = file.getName().substring(0, file.getName().length() - 4);\n                        else\n                            resourceName = file.getName();\n                    }\n                } else if (path.endsWith(\".textClipping\")  || path.endsWith(\".webloc\") || path.endsWith(\".fileloc\")) {\n\n                    if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n\n                        // Unforunately, this only works if there's ONE ITEM IN THE LIST,\n                        // or more accurately, the last item in the list, or perhaps even\n                        // more accurately, the item that also shows up as the application/x-java-url.\n                        // Which is why ultimately we'll want to put all this type of processing\n                        // in a full-and-fancy filing OSID to end all filing OSID's, that'll\n                        // handle windows .url shortcuts, the above mac cases plus mac aliases, etc, etc.\n\n                        String unicodeString;\n                        try {\n                            unicodeString = (String) transfer.getTransferData(DataFlavor.stringFlavor);\n                            System.out.println(\"*** GOT MAC REDIRECT DATA [\" + unicodeString + \"]\");\n                        } catch (Exception ex) {\n                            ex.printStackTrace();\n                        }\n\n                        // for textClipping, the string data is raw dropped text, for webloc,\n                        // it's URL be we already have text->URL in dropped text code below,\n                        // and same for .fileloc...  REFACTOR THIS MESS.\n\n                        //resourceSpec = unicodeString; \n                        //resourceName = \n                        // NOW WE NEED TO JUMP DOWN TO HANDLING DROPPED TEXT...\n                    }\n                }\n                \n                //if (debug) System.out.println(\"\\t\" + file.getClass().getName() + \" \" + file);\n                //if (hitComponent != null && fileList.size() == 1) {\n                \n                if (hitComponent != null) {\n                    if (createAsChildren) {\n                        ((LWNode)hitComponent).addChild(createNewNode(resourceSpec, resourceName, null));\n                    } else {\n                        hitComponent.setResource(resourceSpec);\n                    }\n                } else {\n                    addedNodes.add(createNewNode(resourceSpec, resourceName, new java.awt.Point(x, y)));\n                    x += 15;\n                    y += 15;\n                }\n                success = true;\n            }\n            if (addedNodes.size() > 0)\n                VUE.getSelection().setTo(addedNodes.iterator());\n         \n        } else if (resourceList != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING RESOURCE LIST, size= \" + resourceList.size());\n            //if (resourceList.size() == 1 && hitComponent != null && overwriteResource) {\n            if (resourceList.size() == 1 && hitComponent != null && !createAsChildren) {\n                // modifier key was down: force resetting of the resource\n                hitComponent.setResource((Resource)resourceList.get(0));\n            } else {\n                java.util.Iterator iter = resourceList.iterator();\n                int x = dropLocation.x;\n                int y = dropLocation.y;\n                while (iter.hasNext()) {\n                    Resource resource = (Resource) iter.next();\n                    if (createAsChildren) {\n                        ((LWNode)hitComponent).addChild(createNewNode(resource, null));\n                    } else {\n                        createNewNode(resource, new java.awt.Point(x,y));\n                        x += 15;\n                        y += 15;\n                    }\n                    success = true;\n                }\n            }\n        } else if (droppedText != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING DROPPED TEXT\");\n            // Attempt to make a URL of any string dropped -- if fails,\n            // just treat as regular pasted text.  todo: if newlines\n            // in middle of string, don't do this, or possibly attempt\n            // to split into list of multiple URL's (tho only if *every*\n            // line succeeds as a URL -- prob too hairy to bother)\n\n            String[] rows = droppedText.split(\"\\n\");\n            URL url = null;\n            String resourceTitle = null;\n\n            if (rows.length < 3) {\n                url = makeURL(rows[0]);\n                if (rows.length > 1) {\n                    // Current version of Mozilla (at least on Windows XP, as of 2004-02-22)\n                    // includes the HTML <title> as second row of text.\n                    resourceTitle = rows[1];\n                }\n            }\n\n            if (url != null && url.getQuery() != null) {\n                final String query = url.getQuery();\n                // special case for google image search:\n                System.out.println(\"host \" + url.getHost() + \" query \" + url.getQuery());\n                if (\"images.google.com\".equals(url.getHost()) && query.startsWith(\"imgurl=\")) {\n                    int endURLindex = query.indexOf('&');\n                    String imageURL = query.substring(7, endURLindex);\n\n                    //-------------------------------------------------------\n                    // WIERD -- what is google doing here? or is %2520 some obscure\n                    // whitespace code not understood on mac?\n                    imageURL = imageURL.replaceAll(\"%2520\", \"%20\");\n                    //-------------------------------------------------------\n                    \n                    System.out.println(\"redirect to google image search url \" + imageURL);\n                    url = makeURL(imageURL);\n                }\n            }\n\n                \n            if (url != null) {\n\n                if (hitComponent != null) {\n                    if (createAsChildren)\n                        ((LWNode)hitComponent).addChild(createNewNode(url.toString(), resourceTitle, dropLocation));\n                    else\n                        hitComponent.setResource(url.toString());\n                } else {\n                    createNewNode(url.toString(), resourceTitle, dropLocation);\n                }\n            } else {\n                createNewTextNode(droppedText, dropLocation);\n            }\n            success = true;\n        }\n\n        if (success)\n            VUE.getUndoManager().mark(\"Drop\");\n\n        return success;\n    }","commit_id":"d96a5dbcba224f53c82f13422ac2873828499758","url":"https://github.com/VUE/VUE"},{"original_method":"/**\n     * Process any transferrable: @param e can be null if don't have a drop event\n     * (e.g., could use to process clipboard contents as well as drop events)\n     */\n    // todo: break this method and all supporting code out into it's own class file\n    public boolean processTransferable(Transferable transfer, DropTargetDropEvent e)\n    {\n        // Make us the active viewer.  Otherwise we'll need special code for\n        // repaint updates and setting the selection.\n        // Okay, that's no good: they can still switch to another viewer after the drop begins.\n        //VUE.setActiveViewer(viewer);\n        \n        Point dropLocation = null;\n        int dropAction = DnDConstants.ACTION_COPY; // default action, in case no DropTargetDropEvent\n        //boolean modifierKeyWasDown = false;\n\n        // On current JVM's on Mac and PC, default action for dragging\n        // a desktop item is MOVE, and holding CTRL down (both\n        // platforms) changes action to COPY.  However, when dragging\n        // a link from Internet Explorer on Win2k, or Safari on OS X\n        // 10.4.2, CTRL doesn't change drop action at all, SHIFT\n        // changes drop action to NONE, and only CTRL-SHIFT changes\n        // action to LINK, which fortunately is at least the same on\n        // the mac: CTRL-SHIFT gets you LINK.\n        //\n        // Note: In both Safari & IE6/W2K, dragging an image from\n        // within a web page will NOT allow ACTION_LINK, so we can't\n        // change a resource that way on the mac.  Also note that\n        // Safari will give you the real URL of the image, where as at\n        // least as of IE 6 on Win2k, it will only give you the image\n        // file from your cache.  (IE does also give you HTML snippets\n        // as data transfer options, with the IMG tag, but it gives\n        // you no base URL to add to the relative locations usually\n        // named in IMG tags!)\n        \n        if (e != null) {\n            dropLocation = e.getLocation();\n            dropAction = e.getDropAction();\n\n            if (DEBUG.DND) System.out.println(\"MapDropTarget: processTransferable: dropAction is \" + dropName(e.getDropAction()));\n\n            // BELOW HAS CHANGED AS OF AT LEAST OS X 10.4.2 / JVM 1.4.2:\n            // Mac now ACTION_MOVE as the default action, just like the PC\n            // \n            // [OLD] ACTION_MOVE action is default action on PC, COPY on the\n            // Mac, so if not that, assume a modifier key was being\n            // held down to change the from the default OS drag\n            // action.  We have no way of knowing anything about\n            // actual keyboard state that initiated the drag.\n\n            //if (VueUtil.isMacPlatform())\n            //    modifierKeyWasDown = (dropAction != DnDConstants.ACTION_COPY);\n            //else\n            //    modifierKeyWasDown = (dropAction != DnDConstants.ACTION_MOVE);\n\n            // Okay, can't reliably determine if modifier key was down\n            // on all platforms and drag operations: e.g.: on Windows XP,\n            // default action is different in drag from windows file explorer\n            // than on drag from Mozilla (or maybe web browsers in general)\n\n            // [ The below has been fixed as of at least OS X 10.4.2 JVM 1.4.2 ]\n            // \n            // [OLD] FYI, Mac OS X 10.2.8/JVM 1.4.1_01 is not telling us about\n            // changes to dropAction that happen when the drag was\n            // initiated (e.g., ctrl was down) -- this is a BUG, however,\n            // if you press ctrl down AFTER the drop starts, sourceAction\n            // & dropAction will be set to some rediculous number -- so at\n            // least we can detect that by making modifer down the default\n            // if drop action anything other than the default.  ALSO:\n            // somtimes we get ACTION_NONE, which is 0, which will always\n            // fail our acceptable drop types test.\n        }\n\n        LWComponent hitComponent = null;\n\n        if (dropLocation != null) {\n            hitComponent = viewer.getMap().findChildAt(dropToMapLocation(dropLocation));\n            if (hitComponent instanceof LWImage) { // todo: does LWComponent accept drop events...\n                System.out.println(\"\\thitComponent=\" + hitComponent + \" (ignored)\");\n                hitComponent = null;\n            } else \n                System.out.println(\"\\thitComponent=\" + hitComponent);\n        }\n        \n        /*\n        // Now: when either CTRl or ALT is down on the mac, drop action changes from\n        // default of 2 (MOVE) to 1 (COPY)\n        if (VueUtil.isMacPlatform()) {\n            if (dropAction > 2) // hack: drop action == 1073741842 with Ctrl down on mac [OLD OS X / JVM].\n                modifierKeyWasDown = true;\n        } else {\n            // not safe: see above re: unpredictable due to drags from browsers and/or WinXP\n            //if (dropAction == 1)\n            //modifierKeyWasDown = true;\n        }\n        boolean createAsChildren = !modifierKeyWasDown && hitComponent instanceof LWNode;\n        boolean overwriteResource = modifierKeyWasDown;\n        */\n            \n        boolean isLinkAction = (dropAction == DnDConstants.ACTION_LINK);\n        boolean overwriteResource = (dropAction == DnDConstants.ACTION_LINK);\n        boolean createAsChildren = !overwriteResource && hitComponent instanceof LWNode;\n\n        // if no drop location (e.g., we did a \"Paste\") then assume where\n        // they last clicked.\n        if (dropLocation == null)\n            dropLocation = viewer.getLastMousePressPoint();\n        //dropLocation = new java.awt.Point(viewer.getWidth()/2, viewer.getHeight()/2);\n        \n        List resourceList = null;\n        List fileList = null;        \n        String droppedText = null;\n        DataFlavor foundFlavor = null;\n        Object foundData = null;\n\n        DataFlavor[] dataFlavors = transfer.getTransferDataFlavors();\n        if (debug) System.out.println(\"TRANSFER: found \" + dataFlavors.length + \" dataFlavors\");\n        if (DEBUG.DND) dumpFlavors(transfer);\n\n        try {\n            if (transfer.isDataFlavorSupported(VueDragTreeNodeSelection.resourceFlavor)) {\n                \n                foundFlavor = VueDragTreeNodeSelection.resourceFlavor;\n                foundData = transfer.getTransferData(foundFlavor);\n                resourceList = (java.util.List) foundData;\n            \n            } else if (transfer.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {\n\n                foundFlavor = DataFlavor.javaFileListFlavor;\n                foundData = transfer.getTransferData(foundFlavor);\n                fileList = (java.util.List) foundData;\n\n            } else if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n                \n                foundFlavor = DataFlavor.stringFlavor;\n                foundData = transfer.getTransferData(DataFlavor.stringFlavor);\n                droppedText = (String) foundData;\n            \n            } else {\n                System.out.println(\"TRANSFER: found no supported dataFlavors\");\n                dumpFlavors(transfer);\n                return false;\n            }\n        } catch (UnsupportedFlavorException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: Transfer lied about supporting \" + foundFlavor);\n            return false;\n        } catch (ClassCastException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: Transfer data did not match declared type! flavor=\"\n                               + foundFlavor + \" data=\" + foundData.getClass());\n            return false;\n        } catch (java.io.IOException ex) {\n            ex.printStackTrace();\n            System.err.println(\"TRANSFER: data no longer available\");\n            return false;\n        }\n\n        System.out.println(\"TRANSFER: Found supported flavor \\\"\" + foundFlavor.getHumanPresentableName() + \"\\\"\"\n                           + \"\\n\\tflavor=\" + foundFlavor\n                           + \"\\n\\t  data=[\" + foundData + \"]\"\n                           //+ \"\\n\\tdropptedText=[\" + droppedText + \"]\"\n                           );\n\n        boolean success = false;\n\n        // TODO: we can handle Mac .fileloc's if we check multiple data-flavors: the initial LIST\n        // flavor gives us the .fileloc, which we could even pull a name from if we want, and in\n        // any case, a later STRING data-flavor actually gives us the source of the link!\n        // SAME APPLIES TO .webloc files... AND .textClipping files\n        // Of course, if they drop multple ones of these, we're screwed, as only the last\n        // one gets translated for us in the later string data-flavor.  Oh well -- at least\n        // we can handle the single case if we want.\n\n        if (fileList != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING LIST, size= \" + fileList.size());\n            java.util.Iterator iter = fileList.iterator();\n            int x = dropLocation.x;\n            int y = dropLocation.y;\n\n            List addedNodes = new java.util.ArrayList();\n            while (iter.hasNext()) {\n                File file = (File) iter.next();\n\n                //String resourceSpec = \"file://\" + file.getPath(); // why was this done? it breaks URL shortcuts\n                String resourceSpec = file.getPath();\n                String resourceName = file.getName();\n                String path = file.getPath();\n                \n                if (path.toLowerCase().endsWith(\".url\")) {\n                    // Search a windows .url file (an internet shortcut)\n                    // for the actual web reference.\n                    String url = convertWindowsURLShortCutToURL(file);\n                    if (url != null) {\n                       resourceSpec = url;\n                       // why was this done?  It breaks URL shortcuts...\n                       //   resourceSpec = \"file://\" + url;\n                        if (file.getName().length() > 4)\n                            resourceName = file.getName().substring(0, file.getName().length() - 4);\n                        else\n                            resourceName = file.getName();\n                    }\n                } else if (path.endsWith(\".textClipping\")  || path.endsWith(\".webloc\") || path.endsWith(\".fileloc\")) {\n\n                    if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n\n                        // Unforunately, this only works if there's ONE ITEM IN THE LIST,\n                        // or more accurately, the last item in the list, or perhaps even\n                        // more accurately, the item that also shows up as the application/x-java-url.\n                        // Which is why ultimately we'll want to put all this type of processing\n                        // in a full-and-fancy filing OSID to end all filing OSID's, that'll\n                        // handle windows .url shortcuts, the above mac cases plus mac aliases, etc, etc.\n\n                        String unicodeString;\n                        try {\n                            unicodeString = (String) transfer.getTransferData(DataFlavor.stringFlavor);\n                            System.out.println(\"*** GOT MAC REDIRECT DATA [\" + unicodeString + \"]\");\n                        } catch (Exception ex) {\n                            ex.printStackTrace();\n                        }\n\n                        // for textClipping, the string data is raw dropped text, for webloc,\n                        // it's URL be we already have text->URL in dropped text code below,\n                        // and same for .fileloc...  REFACTOR THIS MESS.\n\n                        //resourceSpec = unicodeString; \n                        //resourceName = \n                        // NOW WE NEED TO JUMP DOWN TO HANDLING DROPPED TEXT...\n                    }\n                }\n                \n                //if (debug) System.out.println(\"\\t\" + file.getClass().getName() + \" \" + file);\n                //if (hitComponent != null && fileList.size() == 1) {\n                \n                if (hitComponent != null) {\n                    if (createAsChildren) {\n                        ((LWNode)hitComponent).addChild(createNewNode(resourceSpec, resourceName, null));\n                    } else {\n                        hitComponent.setResource(resourceSpec);\n                    }\n                } else {\n                    addedNodes.add(createNewNode(resourceSpec, resourceName, new java.awt.Point(x, y)));\n                    x += 15;\n                    y += 15;\n                }\n                success = true;\n            }\n            if (addedNodes.size() > 0)\n                VUE.getSelection().setTo(addedNodes.iterator());\n         \n        } else if (resourceList != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING RESOURCE LIST, size= \" + resourceList.size());\n            //if (resourceList.size() == 1 && hitComponent != null && overwriteResource) {\n            if (resourceList.size() == 1 && hitComponent != null && !createAsChildren) {\n                // modifier key was down: force resetting of the resource\n                hitComponent.setResource((Resource)resourceList.get(0));\n            } else {\n                java.util.Iterator iter = resourceList.iterator();\n                int x = dropLocation.x;\n                int y = dropLocation.y;\n                while (iter.hasNext()) {\n                    Resource resource = (Resource) iter.next();\n                    if (createAsChildren) {\n                        ((LWNode)hitComponent).addChild(createNewNode(resource, null));\n                    } else {\n                        createNewNode(resource, new java.awt.Point(x,y));\n                        x += 15;\n                        y += 15;\n                    }\n                    success = true;\n                }\n            }\n        } else if (droppedText != null) {\n            if (DEBUG.DND) System.out.println(\"\\tHANDLING DROPPED TEXT\");\n            // Attempt to make a URL of any string dropped -- if fails,\n            // just treat as regular pasted text.  todo: if newlines\n            // in middle of string, don't do this, or possibly attempt\n            // to split into list of multiple URL's (tho only if *every*\n            // line succeeds as a URL -- prob too hairy to bother)\n\n            String[] rows = droppedText.split(\"\\n\");\n            URL url = null;\n            String resourceTitle = null;\n\n            if (rows.length < 3) {\n                url = makeURL(rows[0]);\n                if (rows.length > 1) {\n                    // Current version of Mozilla (at least on Windows XP, as of 2004-02-22)\n                    // includes the HTML <title> as second row of text.\n                    resourceTitle = rows[1];\n                }\n            }\n\n            int width = -1;\n            int height = -1;\n\n            Map properties = new HashMap();\n\n            if (resourceTitle != null)\n                properties.put(\"title\", resourceTitle);\n            \n            if (url != null && url.getQuery() != null && isLinkAction == false) {\n                // if this URL is from a common search engine, we can find\n                // the original source for the image instead of the search\n                // engine's context page for the image.\n                url = decodeSearchEngineLightBoxURL(url, properties);\n            }\n                \n            if (url != null) {\n                if (hitComponent != null) {\n                    if (createAsChildren) {\n                        //((LWNode)hitComponent).addChild(createNewNode(url.toString(), resourceTitle, dropLocation));\n                        ((LWNode)hitComponent).addChild(createNewNode(url.toString(), properties, dropLocation));\n                    } else {\n                        hitComponent.setResource(url.toString());\n                        // HACK: clean this up:  resource should load meta-data on CREATION.\n                        ((MapResource)hitComponent.getResource()).setTitleFromContentAsync(hitComponent);\n                    }\n                } else {\n                    // if action is LINK and this is an image, create a node, not the image,\n                    // otherwise LINK when not over a node does nothing special.\n                    createNewNode(url.toString(), properties, dropLocation);\n                    //createNewNode(url.toString(), resourceTitle, dropLocation);\n                }\n            } else {\n                // create a text node\n                createNewTextNode(droppedText, dropLocation);\n            }\n            success = true;\n        }\n\n        if (success)\n            viewer.getMap().getUndoManager().mark(\"Drop\");\n\n        return success;\n    }","id":69187,"modified_method":"/**\n     * Process any transferrable: @param e can be null if don't have a drop event\n     * (e.g., could use to process clipboard contents as well as drop events)\n     * A sucessful result will be newly created items on the map.\n     * @return true if succeeded\n     */\n    public boolean processTransferable(Transferable transfer, DropTargetDropEvent e)\n    {\n        Point dropLocation = null;\n        Point2D.Float mapLocation = null;\n        int dropAction = DnDConstants.ACTION_COPY; // default action, in case no DropTargetDropEvent\n\n        // On current JVM's on Mac and PC, default action for dragging a desktop item is\n        // MOVE, and holding CTRL down (both platforms) changes action to COPY.\n        // However, when dragging a link from Internet Explorer on Win2k, or Safari on\n        // OS X 10.4.2, CTRL doesn't change drop action at all, SHIFT changes drop\n        // action to NONE, and only CTRL-SHIFT changes action to LINK, which fortunately\n        // is at least the same on the mac: CTRL-SHIFT gets you LINK.\n        //\n        // Note: In both Safari & IE6/W2K, dragging an image from within a web page will\n        // NOT allow ACTION_LINK, so we can't change a resource that way on the mac.\n        // Also note that Safari will give you the real URL of the image, where as at\n        // least as of IE 6 on Win2k, it will only give you the image file from your\n        // cache.  (IE does also give you HTML snippets as data transfer options, with\n        // the IMG tag, but it gives you no base URL to add to the relative locations\n        // usually named in IMG tags!)\n\n        // Also: Dragging a URL from Safari address bar CLAIMS to support COPY & LINK\n        // source actions, but drop action is fixed at COPY can never ba changed to LINK\n        // no matter what modifier keys you hold down (MacOSX 10.4, JVM 1.5.0_06-93)\n        \n        if (e != null) {\n            dropLocation = e.getLocation();\n            dropAction = e.getDropAction();\n            mapLocation = dropToMapLocation(dropLocation);\n            if (DEBUG.DND) out(\"processTransferable: \" + GUI.dropName(e));\n        }\n\n        LWComponent hitComponent = null;\n\n        if (dropLocation != null) {\n            hitComponent = mViewer.getMap().findChildAt(mapLocation);\n            if (hitComponent instanceof LWImage) { // todo: does LWComponent accept drop events...\n                if (DEBUG.DND) out(\"hitComponent=\" + hitComponent + \" (ignored)\");\n                hitComponent = null;\n            } else \n                if (DEBUG.DND) out(\"hitComponent=\" + hitComponent);\n        } else {\n            // if no drop location (e.g., we did a \"Paste\") then assume where\n            // they last clicked.\n            dropLocation = mViewer.getLastMousePressPoint();\n            mapLocation = dropToMapLocation(dropLocation);\n        }\n            \n            \n        DataFlavor foundFlavor = null;\n        Object foundData = null;\n        String dropText = null;\n        Collection dropItems = null;\n        \n        int dropType = 0;\n\n        if (DEBUG.DND) dumpFlavors(transfer);\n\n        try {\n\n            // We want to repeatedly do the casts below for each case\n            // to make sure the data type we got is what we expected.\n            // (Can be a problem if somebody creates a bad Transferable)\n            \n            if (transfer.isDataFlavorSupported(LWComponent.DataFlavor)) {\n                \n                foundFlavor = LWComponent.DataFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_NODE_LIST;\n                dropItems = (List) foundData;\n                \n            } else if (transfer.isDataFlavorSupported(Resource.DataFlavor)) {\n                \n                foundFlavor = Resource.DataFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_RESOURCE_LIST;\n                dropItems = (List) foundData;\n            \n            } else if (transfer.isDataFlavorSupported(MapResource.DataFlavor)) {\n                \n                foundFlavor = MapResource.DataFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_RESOURCE_LIST;\n                dropItems = (List) foundData;\n            \n            } else if (transfer.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {\n\n                foundFlavor = DataFlavor.javaFileListFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_FILE_LIST;\n                dropItems = (Collection) foundData;\n\n            } else if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n                \n                foundFlavor = DataFlavor.stringFlavor;\n                foundData = extractData(transfer, foundFlavor);\n                dropType = DROP_TEXT;\n                dropText = (String) foundData;\n            \n            } else {\n                if (DEBUG.Enabled) {\n                    System.out.println(\"TRANSFER: found no supported dataFlavors\");\n                    dumpFlavors(transfer);\n                }\n                return false;\n            }\n        } catch (ClassCastException ex) {\n            Util.printStackTrace(ex, \"TRANSFER: Transfer data did not match expected type:\"\n                                 + \"\\n\\tflavor=\" + foundFlavor\n                                 + \"\\n\\t  type=\" + foundData.getClass());\n            return false;\n\n        } catch (Throwable t) {\n            Util.printStackTrace(t, \"TRANSFER: data extraction failure\");\n            return false;\n        }\n\n        if (foundData == DATA_FAILURE)\n            return false;\n\n        if (DEBUG.Enabled) {\n            String size = \"\";\n            String bagType0 = \"\";\n            if (foundData instanceof Collection) {\n                Collection bag = (Collection) foundData;\n                size = \" (Collection size \" + bag.size() + \")\";\n                if (bag.size() > 0)\n                    bagType0 =   \"\\n\\ttype[0]: \" + bag.iterator().next().getClass();\n                \n            }\n            System.out.println(\"TRANSFER: Found supported flavor \\\"\" + foundFlavor.getHumanPresentableName() + \"\\\"\"\n                               + \"\\n\\t   type: \" + Util.tag(foundData) + size\n                               + bagType0\n                               + \"\\n\\t   data: [\" + foundData + \"]\"\n                               + \"\\n\\t flavor: \" + foundFlavor\n                               //+ \"\\n\\tdropptedText=[\" + droppedText + \"]\"\n                               );\n        }\n\n        final boolean isLinkAction = (dropAction == DnDConstants.ACTION_LINK);\n\n        DropContext drop =\n            new DropContext(transfer,\n                            //dropLocation,\n                            mapLocation,\n                            dropItems,\n                            dropText,\n                            hitComponent,\n                            isLinkAction);\n\n        boolean success = false;\n\n        if (dropItems != null && dropItems.size() > 1)\n            CenterNodesOnDrop = false;\n        else\n            CenterNodesOnDrop = true;\n\n        try {\n            switch (dropType) {\n\n            case DROP_FILE_LIST:\n                success = processDroppedFileList(drop);\n                break;\n            case DROP_NODE_LIST:\n                success = processDroppedNodes(drop);\n                break;\n            case DROP_RESOURCE_LIST:\n                success = processDroppedResourceList(drop);\n                break;\n            case DROP_TEXT:\n                success = processDroppedText(drop);\n                break;\n\n            default:\n                // should never happen\n                throw new Error(\"unknown drop type \" + dropType);\n            }\n\n            if (drop.added.size() > 0) {\n                mViewer.requestFocus();\n                VUE.getSelection().setTo(drop.added.iterator());\n            }\n            \n        } catch (Throwable t) {\n            Util.printStackTrace(t, \"drop processing failed\");\n        }\n\n        // Even if we had an exception during processing,\n        // mark the drop in case there were partial results for Undo.\n        \n        mViewer.getMap().getUndoManager().mark(\"Drop\");\n\n        return success;\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"public void dragEnter(DropTargetDragEvent e)\n    {\n        //e.acceptDrag(ACCEPTABLE_DROP_TYPES);\n        //if (VueUtil.isMacPlatform()) e.acceptDrag(DnDConstants.ACTION_COPY);\n        if (debug) System.out.println(\"MapDropTarget: dragEnter \" + e);\n    }","id":69188,"modified_method":"/** DropTargetListener */\n    public void dragEnter(DropTargetDragEvent e)\n    {\n        if (DEBUG.DND) out(\"dragEnter \" + GUI.dragName(e));\n        trackDrag(e);\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"public static String dropName(int dropAction) {\n        String name = \"\";\n        if ((dropAction & DnDConstants.ACTION_COPY) != 0) name += \"COPY\";\n        if ((dropAction & DnDConstants.ACTION_MOVE) != 0) name += \"MOVE\";\n        if ((dropAction & DnDConstants.ACTION_LINK) != 0) name += \"LINK\";\n        if (name.length() < 1)\n            name = \"NONE\";\n        name += \" (0x\" + Integer.toHexString(dropAction) + \")\";\n        return name;\n    }","id":69189,"modified_method":"private static String dropName(int dropAction) {\n        return GUI.dropName(dropAction);\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"private void dumpFlavors(Transferable transfer)\n    {\n        DataFlavor[] dataFlavors = transfer.getTransferDataFlavors();\n\n        System.out.println(\"TRANSFERABLE: \" + transfer + \" has \" + dataFlavors.length + \" dataFlavors:\");\n        for (int i = 0; i < dataFlavors.length; i++) {\n            DataFlavor flavor = dataFlavors[i];\n            System.out.print(\"flavor \" + (i<10?\" \":\"\") + i\n                             + \" \\\"\" + flavor.getHumanPresentableName() + \"\\\"\"\n                             + \" \" + flavor.getMimeType()\n                             );\n            try {\n                Object data = transfer.getTransferData(flavor);\n                System.out.println(\" [\" + data + \"]\");\n                //if (flavor.getHumanPresentableName().equals(\"text/uri-list\")) readTextFlavor(flavor, transfer);\n            } catch (Exception ex) {\n                System.out.println(\"\\tEXCEPTION: getTransferData: \" + ex);\n            }\n        }\n    }","id":69190,"modified_method":"private void dumpFlavors(Transferable transfer)\n    {\n        DataFlavor[] dataFlavors = transfer.getTransferDataFlavors();\n\n        System.out.println(\"TRANSFERABLE: \" + transfer + \" has \" + dataFlavors.length + \" dataFlavors:\");\n        for (int i = 0; i < dataFlavors.length; i++) {\n            DataFlavor flavor = dataFlavors[i];\n            String name = flavor.getHumanPresentableName();\n            if (flavor.getMimeType().toString().startsWith(name + \";\"))\n                name = \"\";\n            else\n                name = \" \\\"\" + name + \"\\\"\";\n            System.out.print(\"flavor \" + (i<10?\" \":\"\") + i\n                             + VueUtil.pad(17, name)\n                             + \" \" + flavor.getMimeType()\n                             );\n            try {\n                Object data = transfer.getTransferData(flavor);\n                System.out.println(\" [\" + data + \"]\");\n                //if (flavor.getHumanPresentableName().equals(\"text/uri-list\")) readTextFlavor(flavor, transfer);\n            } catch (Exception ex) {\n                System.out.println(\"\\tEXCEPTION: getTransferData: \" + ex);\n            }\n        }\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"private String readTextFlavor(DataFlavor flavor, Transferable transfer)\n    {\n        java.io.Reader reader = null;\n        String value = null;\n        try {\n            reader = flavor.getReaderForText(transfer);\n            if (debug) System.out.println(\"\\treader=\" + reader);\n            char buf[] = new char[512];\n            int got = reader.read(buf);\n            value = new String(buf, 0, got);\n            if (debug) System.out.println(\"\\t[\" + value + \"]\");\n            if (reader.read() != -1)\n                System.out.println(\"there was more data in the reader\");\n        } catch (Exception e) {\n            System.err.println(\"readTextFlavor: \" + e);\n        }\n        return value;\n    }","id":69191,"modified_method":"private static Object extractData(Transferable transfer, DataFlavor flavor)\n    {\n        Object data = DATA_FAILURE;\n        try {\n\n            data = transfer.getTransferData(flavor);\n\n        } catch (UnsupportedFlavorException ex) {\n            \n            Util.printStackTrace(ex, \"TRANSFER: Transfer lied about supporting flavor \"\n                                 + \"\\\"\" + flavor.getHumanPresentableName() + \"\\\" \"\n                                 + flavor\n                                 );\n            \n        } catch (java.io.IOException ex) {\n            \n            Util.printStackTrace(ex, \"TRANSFER: data no longer available\");\n            \n        }\n        \n        return data;\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"public void dropActionChanged(DropTargetDragEvent e)\n    {\n        if (debug) System.out.println(\"MapDropTarget: dropActionChanged to \" + dropName(e.getDropAction()));\n\n    }","id":69192,"modified_method":"/** DropTargetListener */\n    public void dropActionChanged(DropTargetDragEvent e) {\n        if (DEBUG.DND) out(\"dropActionChanged: \" + GUI.dragName(e));\n        trackDrag(e);\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"private static String convertWindowsURLShortCutToURL(File file)\n    {\n        String url = null;\n        try {\n            if (debug) System.out.println(\"*** Searching for URL in: \" + file);\n            FileInputStream is = new FileInputStream(file);\n            byte[] buf = new byte[2048]; // if not in first 2048, don't bother\n            int len = is.read(buf);\n            is.close();\n            String str = new String(buf, 0, len);\n            if (debug) System.out.println(\"*** size=\"+str.length() +\"[\"+str+\"]\");\n            Matcher m = URL_Line.matcher(str);\n            if (m.lookingAt()) {\n                url = m.group(1);\n                if (url != null)\n                    url = url.trim();\n                if (debug) System.out.println(\"*** FOUND URL [\"+url+\"]\");\n                int i = url.indexOf(\"|/\");\n                if (i > -1) {\n                    // odd: have found \"file:///D|/dir/file.html\" example\n                    // where '|' is where ':' should be -- still works\n                    // for Windows 2000 as a shortcut, but NOT using\n                    // Windows 2000 url DLL, so VUE can't open it.\n                    url = url.substring(0,i) + \":\" + url.substring(i+1);\n                    System.out.println(\"**PATCHED URL [\"+url+\"]\");\n                }\n                // if this is a file:/// url to a local html page,\n                // AND we can determine that we're on another computer\n                // accessing this file via the network (can we?)\n                // then we should not covert this shortcut.\n                // Okay, this is good enough for now, tho it also\n                // won't end up converting a bad shortcut, and\n                // ideally that wouldn't be our decision.\n                // [this is not worth it]\n                /*\n                URL u = new URL(url);\n                if (u.getProtocol().equals(\"file\")) {\n                    File f = new File(u.getFile());\n                    if (!f.exists()) {\n                       url = null;\n                        System.out.println(\"***  BAD FILE [\"+f+\"]\");\n                    }\n                }\n                */\n            }\n        } catch (Exception e) {\n            System.out.println(e);\n        }\n        return url;\n    }","id":69193,"modified_method":"private static String convertWindowsURLShortCutToURL(File file)\n    {\n        String url = null;\n        try {\n            if (DEBUG.DND) System.out.println(\"*** Searching for URL in: \" + file);\n            FileInputStream is = new FileInputStream(file);\n            byte[] buf = new byte[2048]; // if not in first 2048, don't bother\n            int len = is.read(buf);\n            is.close();\n            String str = new String(buf, 0, len);\n            if (DEBUG.DND) System.out.println(\"*** size=\"+str.length() +\"[\"+str+\"]\");\n            Matcher m = URL_Line.matcher(str);\n            if (m.lookingAt()) {\n                url = m.group(1);\n                if (url != null)\n                    url = url.trim();\n                if (DEBUG.DND) System.out.println(\"*** FOUND URL [\"+url+\"]\");\n                int i = url.indexOf(\"|/\");\n                if (i > -1) {\n                    // odd: have found \"file:///D|/dir/file.html\" example\n                    // where '|' is where ':' should be -- still works\n                    // for Windows 2000 as a shortcut, but NOT using\n                    // Windows 2000 url DLL, so VUE can't open it.\n                    url = url.substring(0,i) + \":\" + url.substring(i+1);\n                    System.out.println(\"**PATCHED URL [\"+url+\"]\");\n                }\n                // if this is a file:/// url to a local html page,\n                // AND we can determine that we're on another computer\n                // accessing this file via the network (can we?)\n                // then we should not covert this shortcut.\n                // Okay, this is good enough for now, tho it also\n                // won't end up converting a bad shortcut, and\n                // ideally that wouldn't be our decision.\n                // [this is not worth it]\n                /*\n                URL u = new URL(url);\n                if (u.getProtocol().equals(\"file\")) {\n                    File f = new File(u.getFile());\n                    if (!f.exists()) {\n                       url = null;\n                        System.out.println(\"***  BAD FILE [\"+f+\"]\");\n                    }\n                }\n                */\n            }\n        } catch (Exception e) {\n            System.out.println(e);\n        }\n        return url;\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"private Point2D dropToMapLocation(int x, int y)\n    {\n        Point2D p = viewer.screenToMapPoint(x, y);\n        //if (DEBUG.DND) System.out.println(\"drop location \" + x + \",\" + y + \" mapLoc=\" + p);\n        return p;\n        /*\n        java.awt.Insets mapInsets = viewer.getInsets();\n        java.awt.Point mapLocation = viewer.getLocation();\n        System.out.println(\"viewer insets=\" + mapInsets);\n        System.out.println(\"viewer location=\" + mapLocation);\n        x -= mapLocation.x;\n        y -= mapLocation.y;\n        x -= mapInsets.left;\n        y -= mapInsets.top;\n        */\n    }","id":69194,"modified_method":"private Point2D.Float dropToMapLocation(int x, int y)\n    {\n        return  mViewer.screenToMapPoint(x, y);\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"private void createNewTextNode(String text, java.awt.Point p)\n    {\n        LWNode node = NodeTool.createTextNode(text);\n        if (CenterNodesOnDrop)\n            node.setCenterAt(dropToMapLocation(p));\n        else\n            node.setLocation(dropToMapLocation(p));\n        viewer.getMap().addNode(node);\n    }","id":69195,"modified_method":"private LWComponent createTextNode(String text, Point2D where)\n    {\n        return addNodeToMap(NodeTool.createTextNode(text), where);\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"public void drop(DropTargetDropEvent e)\n    {\n        if (DEBUG.Enabled) {\n            try {\n                System.out.println(\"caps state=\"+VUE.getActiveViewer().getToolkit().getLockingKeyState(java.awt.event.KeyEvent.VK_CAPS_LOCK));\n            } catch (Exception ex) {\n                System.err.println(ex);\n            }\n        }\n        if (debug) System.out.println(\"MapDropTarget: DROP \" + e\n                                      + \"\\n\\tdropAction is \" + dropName(e.getDropAction())\n                                      + \"\\n\\tsourceActions are \" + dropName(e.getSourceActions())\n                                      + \"\\n\\tlocation=\" + e.getLocation()\n                                      );\n\n        //if ((e.getSourceActions() & DnDConstants.ACTION_COPY) != 0) {\n        if (false&&(e.getSourceActions() & DnDConstants.ACTION_LINK) != 0) {\n            e.acceptDrop(DnDConstants.ACTION_LINK);\n        } else if (false&&(e.getSourceActions() & DnDConstants.ACTION_COPY) != 0) {\n            e.acceptDrop(DnDConstants.ACTION_COPY);\n            //} else if ((e.getSourceActions() & ACCEPTABLE_DROP_TYPES) != 0) {\n        } else {\n            e.acceptDrop(e.getDropAction());\n            //e.acceptDrop(DnDConstants.ACTION_COPY);\n            //e.acceptDrop(DnDConstants.ACTION_LINK);\n        }\n        /*\n        else {\n            if (debug) System.out.println(\"MapDropTarget: rejecting drop\");\n            e.rejectDrop();\n            return;\n        }\n        */\n\n        // Scan thru the data-flavors, looking for a useful mime-type\n\n        //boolean success = processTransferable(e.getTransferable(), e.getLocation());\n        boolean success = processTransferable(e.getTransferable(), e);\n\n        e.dropComplete(success);\n        viewer.clearIndicated();        \n    }","id":69196,"modified_method":"/** DropTargetListener */\n    public void drop(DropTargetDropEvent e)\n    {\n        if (DEBUG.DND) out(\"DROP \" + e\n                           + \"\\n\\t   dropAction: \" + dropName(e.getDropAction())\n                           + \"\\n\\tsourceActions: \" + dropName(e.getSourceActions())\n                           + \"\\n\\t     location: \" + e.getLocation()\n                           );\n\n        /* UnsupportedOperation (tring to discover key's being held down ourselves) try {\n            System.out.println(\"caps state=\"+mViewer.getToolkit()\n                               .getLockingKeyState(java.awt.event.KeyEvent.VK_CAPS_LOCK));\n                               } catch (Exception ex) { System.err.println(ex); }*/\n\n        \n        e.acceptDrop(e.getDropAction());\n        \n        // Scan thru the data-flavors, looking for a useful mime-type\n        boolean success =\n            processTransferable(e.getTransferable(), e);\n\n        e.dropComplete(success);\n        \n        mViewer.clearIndicated();        \n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"public MapDropTarget(MapViewer viewer)\n    {\n       this.viewer = viewer;\n    }","id":69197,"modified_method":"public MapDropTarget(MapViewer viewer) {\n       mViewer = viewer;\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"public void dragExit(DropTargetEvent e)\n    {\n        if (debug) System.out.println(\"MapDropTarget: dragExit \" + e);\n    }","id":69198,"modified_method":"/** DropTargetListener */\n    public void dragExit(DropTargetEvent e) {\n        if (DEBUG.DND) out(\"dragExit \" + e);\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"/**  \n    private void createNewNode(Asset asset, java.awt.Point p) {\n        String resourceTitle = \"Fedora Node\";\n        Resource resource =new Resource(resourceTitle);\n        try {\n            resourceTitle = asset.getDisplayName();\n             resource.setAsset(asset);\n        } catch(Exception e) { System.out.println(\"MapDropTarget.createNewNode \" +e ) ; }\n      \n       \n        LWNode node = NodeTool.createNode(resourceTitle);\n        node.setCenterAt(dropToMapLocation(p));\n        node.setResource(resource);\n        viewer.getMap().addNode(node);\n    }\n   */\n    private Point2D dropToMapLocation(java.awt.Point p)\n    {\n        return dropToMapLocation(p.x, p.y);\n    }","id":69199,"modified_method":"private Point2D.Float dropToMapLocation(Point p)\n    {\n        return dropToMapLocation(p.x, p.y);\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"public void dragOver(DropTargetDragEvent e)\n    {\n        LWComponent over = viewer.getMap().findChildAt(dropToMapLocation(e.getLocation()));\n        if (over instanceof LWNode || over instanceof LWLink) {\n            // todo: if over resource icon and we can set THAT indicated, do\n            // so and also use that to indicate we'd like to set the resource\n            // instead of adding a new child\n            viewer.setIndicated(over);\n            //e.acceptDrag(DnDConstants.ACTION_COPY);\n        } else\n            viewer.clearIndicated();\n\n        // as of at least OS X 10.4.2 JVM 1.4.2, accepting drag here\n        // appears totally optional, and has no effect on cursor\n\n        // [OLD] doing this will turn on green \"+\" icon as the default, which is appropriate,\n        // yet doesn't allow for changing the indicator to the shortcut icon if CTRL\n        // is pressed, and the drop code for that is the huge bogus # on the mac,\n        // so we're skipping this for now.\n        //if (VueUtil.isMacPlatform())\n        //  e.acceptDrag(DnDConstants.ACTION_COPY);\n\n        //e.acceptDrag(ACCEPTABLE_DROP_TYPES);\n    }","id":69200,"modified_method":"/** DropTargetListener */\n    public void dragOver(DropTargetDragEvent e)\n    {\n        if (DEBUG.DND && DEBUG.META) out(\"dragOver \" + GUI.dragName(e));\n\n        LWComponent over = mViewer.getMap().findChildAt(dropToMapLocation(e.getLocation()));\n        if (over instanceof LWNode || over instanceof LWLink) {\n            // todo: if over resource icon and we can set THAT indicated, do\n            // so and also use that to indicate we'd like to set the resource\n            // instead of adding a new child\n            mViewer.setIndicated(over);\n        } else\n            mViewer.clearIndicated();\n\n        trackDrag(e);\n    }","commit_id":"d5485b9e490e26a269532288fc182bc67a495ece","url":"https://github.com/VUE/VUE"},{"original_method":"public void addZippedPlugin(String resource) throws IOException, URISyntaxException\n    {\n        URI uri = getClass().getClassLoader().getResource(resource).toURI();\n        String baseName = FilenameUtils.getName(uri.getPath());\n        File tempFile = new File(getPluginsDir(), baseName);\n        FileUtils.copyURLToFile(uri.toURL(), tempFile);\n    }","id":69201,"modified_method":"public void addZippedPlugin(String resource) throws IOException, URISyntaxException\n    {\n        URL url = getClass().getClassLoader().getResource(resource).toURI().toURL();\n        String baseName = FilenameUtils.getName(url.getPath());\n        File tempFile = new File(getPluginsDir(), baseName);\n        FileUtils.copyURLToFile(url, tempFile);\n    }","commit_id":"0706d00c4f35be3c351c53f5bfc4aecf4c8568a3","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void doTemplate( URI root, File path, ResourceImpl resource ) throws IOException, URISyntaxException\n    {\n        path = path.getAbsoluteFile().getCanonicalFile();\n        String finalUri = root.relativize( path.toURI() ).toString();\n        if ( \"maven\".equals( urlTemplate ) )\n        {\n            String dir = root.relativize( path.toURI() ).toString();\n            String[] p = dir.split( \"/\" );\n            if ( p.length >= 4 && p[p.length - 1].startsWith( p[p.length - 3] + \"-\" + p[p.length - 2] ) )\n            {\n                String artifactId = p[p.length - 3];\n                String version = p[p.length - 2];\n                String classifier;\n                String type;\n                String artifactIdVersion = artifactId + \"-\" + version;\n                StringBuffer sb = new StringBuffer();\n                if ( p[p.length - 1].charAt( artifactIdVersion.length() ) == '-' )\n                {\n                    classifier = p[p.length - 1].substring( artifactIdVersion.length() + 1,\n                        p[p.length - 1].lastIndexOf( '.' ) );\n                }\n                else\n                {\n                    classifier = null;\n                }\n                type = p[p.length - 1].substring( p[p.length - 1].lastIndexOf( '.' ) + 1 );\n                sb.append( \"mvn:\" );\n                for ( int j = 0; j < p.length - 3; j++ )\n                {\n                    if ( j > 0 )\n                    {\n                        sb.append( '.' );\n                    }\n                    sb.append( p[j] );\n                }\n                sb.append( '/' ).append( artifactId ).append( '/' ).append( version );\n                if ( !\"jar\".equals( type ) || classifier != null )\n                {\n                    sb.append( '/' );\n                    if ( !\"jar\".equals( type ) )\n                    {\n                        sb.append( type );\n                    }\n                    if ( classifier != null )\n                    {\n                        sb.append( '/' ).append( classifier );\n                    }\n                }\n                finalUri = sb.toString();\n            }\n        }\n        else if ( urlTemplate != null )\n        {\n            String dir = path.getParentFile().toURI().toURL().toString();\n            if ( dir.endsWith( \"/\" ) )\n                dir = dir.substring( 0, dir.length() - 1 );\n\n            if ( dir.startsWith( root.toString() ) )\n                dir = dir.substring( root.toString().length() );\n\n            String url = urlTemplate.replaceAll( \"%v\", \"\" + resource.getVersion() );\n            url = url.replaceAll( \"%s\", resource.getSymbolicName() );\n            url = url.replaceAll( \"%f\", path.getName() );\n            url = url.replaceAll( \"%p\", dir );\n            finalUri = url;\n        }\n        resource.put( Resource.URI, finalUri, Property.URI );\n    }","id":69202,"modified_method":"protected void doTemplate( URI root, File path, ResourceImpl resource ) throws IOException, URISyntaxException\n    {\n        path = path.getAbsoluteFile().getCanonicalFile();\n        String finalUri = root.relativize( path.toURI() ).toString();\n        if ( \"maven\".equals( urlTemplate ) )\n        {\n            String dir = root.relativize( path.toURI() ).toString();\n            String[] p = dir.split( \"/\" );\n            if ( p.length >= 4 && p[p.length - 1].startsWith( p[p.length - 3] + \"-\" + p[p.length - 2] ) )\n            {\n                String artifactId = p[p.length - 3];\n                String version = p[p.length - 2];\n                String classifier;\n                String type;\n                String artifactIdVersion = artifactId + \"-\" + version;\n                StringBuffer sb = new StringBuffer();\n                if ( p[p.length - 1].charAt( artifactIdVersion.length() ) == '-' )\n                {\n                    classifier = p[p.length - 1].substring( artifactIdVersion.length() + 1,\n                        p[p.length - 1].lastIndexOf( '.' ) );\n                }\n                else\n                {\n                    classifier = null;\n                }\n                type = p[p.length - 1].substring( p[p.length - 1].lastIndexOf( '.' ) + 1 );\n                sb.append( \"mvn:\" );\n                for ( int j = 0; j < p.length - 3; j++ )\n                {\n                    if ( j > 0 )\n                    {\n                        sb.append( '.' );\n                    }\n                    sb.append( p[j] );\n                }\n                sb.append( '/' ).append( artifactId ).append( '/' ).append( version );\n                if ( !\"jar\".equals( type ) || classifier != null )\n                {\n                    sb.append( '/' );\n                    if ( !\"jar\".equals( type ) )\n                    {\n                        sb.append( type );\n                    }\n                    if ( classifier != null )\n                    {\n                        sb.append( '/' ).append( classifier );\n                    }\n                }\n                finalUri = sb.toString();\n            }\n        }\n        else if ( urlTemplate != null )\n        {\n            URI parentDir = path.getParentFile().toURI();\n\n            String absoluteDir = trim( root.toString(), parentDir.toURL().toString() );\n            String relativeDir = trim( root.toString(), root.relativize( parentDir ).toString() );\n\n            String url = urlTemplate.replaceAll( \"%v\", \"\" + resource.getVersion() );\n            url = url.replaceAll( \"%s\", resource.getSymbolicName() );\n            url = url.replaceAll( \"%f\", path.getName() );\n            url = url.replaceAll( \"%p\", absoluteDir );\n            url = url.replaceAll( \"%rp\", relativeDir );\n            finalUri = url;\n        }\n        resource.put( Resource.URI, finalUri, Property.URI );\n    }","commit_id":"f621f779f253ff42dbdb07cc32fd6121209eaf7a","url":"https://github.com/apache/felix"},{"original_method":"@Test\n    public void testVCFJarClassLoading() throws ClassNotFoundException, MalformedURLException {\n        URI vcfURI = new File(\"dist/vcf.jar\").toURI();\n        URI tribbleURI = getTribbleJarFile().toURI();\n\n        ClassLoader classLoader = new URLClassLoader(new URL[] {vcfURI.toURL(),tribbleURI.toURL()}, null);\n        classLoader.loadClass(\"org.broadinstitute.sting.utils.variantcontext.VariantContext\");\n        classLoader.loadClass(\"org.broadinstitute.sting.utils.codecs.vcf.VCFCodec\");\n        classLoader.loadClass(\"org.broadinstitute.sting.utils.codecs.vcf.VCF3Codec\");\n        classLoader.loadClass(\"org.broadinstitute.sting.utils.codecs.vcf.VCFWriter\");\n        classLoader.loadClass(\"org.broadinstitute.sting.utils.codecs.vcf.StandardVCFWriter\");\n    }","id":69203,"modified_method":"@Test\n    public void testVCFJarClassLoading() throws ClassNotFoundException, MalformedURLException {\n        URL[] jarURLs;\n\n        try {\n            jarURLs = new URL[] { getVCFJarFile().toURI().toURL(), getTribbleJarFile().toURI().toURL() };\n        }\n        catch ( FileNotFoundException e ) {\n            throw new ReviewedStingException(\"Could not find the VCF jar and/or its dependencies\", e);\n        }\n\n        ClassLoader classLoader = new URLClassLoader(jarURLs, null);\n        classLoader.loadClass(\"org.broadinstitute.sting.utils.variantcontext.VariantContext\");\n        classLoader.loadClass(\"org.broadinstitute.sting.utils.codecs.vcf.VCFCodec\");\n        classLoader.loadClass(\"org.broadinstitute.sting.utils.codecs.vcf.VCF3Codec\");\n        classLoader.loadClass(\"org.broadinstitute.sting.utils.codecs.vcf.VCFWriter\");\n        classLoader.loadClass(\"org.broadinstitute.sting.utils.codecs.vcf.StandardVCFWriter\");\n    }","commit_id":"2794e5c1d48512c2e2d0576c6e052a8f23fdf402","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * A very unsafe way of determining the current location of the Tribble jar file.  Assumes that\n     * the tribble jar (as opposed to the constituent tribble classes) is on the classpath.\n     *\n     * This method might or might not work when built via IntelliJ's debugger.\n     *\n     * @return The file representing the tribble jar.\n     */\n    private File getTribbleJarFile() {\n        String[] classPath = System.getProperty(\"java.class.path\").split(File.pathSeparator);\n        for(String classPathEntry: classPath) {\n            if(classPathEntry.contains(\"tribble\"))\n                return new File(classPathEntry);\n        }\n        throw new ReviewedStingException(\"Unable to find Tribble jar file\");\n    }","id":69204,"modified_method":"/**\n     * Locates the tribble jar within the dist directory.\n     *\n     * Makes the horrible assumption that tests will always be run from the root of a Sting clone,\n     * but this is much less problematic than using the classpath to locate tribble, since\n     * the classpath won't explicitly contain tribble when we're testing the fully-packaged\n     * GATK jar.\n     *\n     * @return The tribble jar file, if found\n     * @throws FileNotFoundException If we couldn't locate a tribble jar within the dist directory\n     */\n    private File getTribbleJarFile() throws FileNotFoundException {\n        File distDir = new File(\"dist\");\n        if ( ! distDir.isDirectory() ) {\n            throw new FileNotFoundException(\"The dist directory does not exist\");\n        }\n\n        for ( File distDirEntry : distDir.listFiles() ) {\n            if ( distDirEntry.getName().startsWith(\"tribble\") && distDirEntry.getName().endsWith(\".jar\") ) {\n                return distDirEntry;\n            }\n        }\n\n        throw new FileNotFoundException(\"Could not find a tribble jar file in the dist directory.\");\n    }","commit_id":"2794e5c1d48512c2e2d0576c6e052a8f23fdf402","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static StringBuffer process (StringBuffer data, Charset charset, DigestURI url, RequestHeader requestHeader) {\n\n\t\tglobalrequestHeader = requestHeader;\n\n\t\tSwitchboard sb = Switchboard.getSwitchboard();\n\n\t\tboolean augmented = false;\n\n\t\ttry {\n\t\t\tLog.logInfo(\"AUGMENTATION\", url.getName());\n\t\t} catch (IOException e1) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te1.printStackTrace();\n\t\t}\n\n\t\tString Doc = data.toString();\n\n\t\t// Send document to REFLECT (http://www.reflect.ws/REST_API.html)\n\t\tif (sb.getConfigBool(\"augmentation.reflect\", false) == true) {\n\t\t\ttry {\n\n\t\t\t\tDoc = processExternal(\"http://reflect.ws/REST/GetHTML\",\n\t\t\t\t\t\t\"document\", Doc);\n\t\t\t\tLog.logInfo(\"AUGMENTATION\", \"reflected \" + url);\n\t\t\t\taugmented = true;\n\t\t\t} catch (Exception e) {\n\n\t\t\t}\n\t\t}\n\n\t\t// Add DOCTYPE if not present.\n\t\t// This is required for IE to render position:absolute correctly.\n\n\t\tif (sb.getConfigBool(\"augmentation.addDoctype\", true) == true) {\n\t\t\tDoc = processAddDoctype(Doc);\n\t\t\taugmented = true;\n\t\t}\n\n\n\t\tif (sb.getConfigBool(\"augmentation.reparse\", true) == true) {\n\n\t\t\tNodeList list = new NodeList();\n\n\t\t\t// Fill NodeList with parsed Document\n\t\t\ttry {\n\n\t\t\t\torg.htmlparser.Parser par = new org.htmlparser.Parser();\n\n\t\t\t\tpar.setInputHTML(Doc);\n\n\t\t\t\tlist = par.parse(null);\n\n\t\t\t\tLog.logInfo (\"AUGMENTATION\", url.toString());\n\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\n\t\t\t// Add Unique ID to every node element which has no id yet.\n\t\t\t// This allows consistent interaction between client (browser) and\n\t\t\t// back-end (data store) by providing \"position awareness\" in the\n\t\t\t// document.\n\t\t\tif (sb.getConfigBool(\"augmentation.reparse.adduniqueid\", true) == true) {\n\t\t\t\ttry {\n\n\t\t\t\t\tNodeVisitor visitorAddUniqueID = new AugmentHtmlStream.VisitorAddUniqueID();\n\t\t\t\t\tlist.visitAllNodesWith(visitorAddUniqueID);\n\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Inspect on text tags\n\n\t\t\ttry {\n\n\t\t\t\tNodeVisitor visitorText = new AugmentHtmlStream.VisitorText();\n\t\t\t\tlist.visitAllNodesWith(visitorText);\n\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\n\t\t\tString SCI_GUID = \"\";\n\n\t\t\tString SCI_GUID_DOI = \"\";\n\t\t\tString SCI_GUID_PMID = \"\";\n\n\t\t\tString SCI_TITLE = \"\";\n\t\t\tString SCI_CREATOR = \"\";\n\t\t\tString SCI_DESCRIPTION = \"\";\n\t\t\tString SCI_IDENTIFIER = \"\";\n\n\t\t\tString SCI_WHITELIST = \"\";\n\n\t\t\tString SCI_URL = \"\";\n\n\t\t\tString SCI_HASH = \"\";\n\n\t\t\tSCI_URL = url.toString();\n\n\t\t\t// System.out.println(\"Starting augmentation for \" + url);\n\t\t\t// System.out.println(\"Content: \" + Doc);\n\n\t\t\tif (!(list == null)) {\n\n\t\t\t\t// DOCUMENT IS MANIPULABLE BY HTML REWRITER\n\n\t\t\t\t// SO SEND IT TO YACY PARSER\n\n\t\t\t\tDocument document = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tfinal StringReader stringReader = new StringReader(Doc);\n\t\t\t\t\tInputStream inputStream = new InputStream() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic int read() throws IOException {\n\t\t\t\t\t\t\treturn stringReader.read();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tdocument = Document.mergeDocuments(\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\"text/html\",\n\t\t\t\t\t\t\tTextParser.parseSource(url, \"text/html\", null,\n\t\t\t\t\t\t\t\t\tdata.length(), inputStream));\n\n\t\t\t\t} catch (Exception e) {\n\n\t\t\t\t}\n\n\t\t\t\tif (document != null) {\n\n\t\t\t\t\tif (document.dc_format() == \"text/html\") {\n\n\t\t\t\t\t\tSCI_TITLE = document.dc_title();\n\t\t\t\t\t\tSCI_CREATOR = document.dc_creator();\n\t\t\t\t\t\tSCI_DESCRIPTION = document.dc_description();\n\t\t\t\t\t\tSCI_IDENTIFIER = document.dc_identifier();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tSCI_HASH = \"\" + url.hashCode();\n\n\t\t\t\t// ADD AUGMENTED HEADER INFORMATION\n\n\t\t\t\tNodeList header = list.extractAllNodesThatMatch(\n\t\t\t\t\t\tnew org.htmlparser.filters.NodeClassFilter(\n\t\t\t\t\t\t\t\torg.htmlparser.tags.HeadTag.class), true);\n\n\t\t\t\torg.htmlparser.util.SimpleNodeIterator iterHeader = header\n\t\t\t\t\t\t.elements();\n\n\t\t\t\twhile (iterHeader.hasMoreNodes()) {\n\t\t\t\t\torg.htmlparser.tags.HeadTag ht = ((org.htmlparser.tags.HeadTag) iterHeader\n\t\t\t\t\t\t\t.nextNode());\n\n\t\t\t\t\tNodeList headchildren = ht.getChildren();\n\n\t\t\t\t\theadchildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"env/templates/jqueryheader.template\", requestHeader)));\n\t\t\t\t//\theadchildren.add(new org.htmlparser.nodes.TextNode(\"<script type='text/javascript'>\"+loadInternal(\"interaction/formdata.js\", requestHeader)+\"<\/script>\"));\n\n\t\t\t\t//\theadchildren.add(new org.htmlparser.nodes.TextNode(\"<script type='text/javascript'>\"+loadInternal(\"interaction/interaction_sciety.js\", requestHeader)+\"<\/script>\"));\n\n\t\t\t\t\theadchildren.add(new org.htmlparser.nodes.TextNode(\"<script type='text/javascript'>\"+loadInternal(\"interaction/interaction.js\", requestHeader)+\"<\/script>\"));\n\n\t\t\t\t\taugmented = true;\n\n\t\t\t\t\tht.setChildren(headchildren);\n\t\t\t\t}\n\n\t\t\t\t// ADD AUGMENTED BODY INFORMATION\n\n\t\t\t\tNodeList body = list.extractAllNodesThatMatch(\n\t\t\t\t\t\tnew org.htmlparser.filters.NodeClassFilter(\n\t\t\t\t\t\t\t\torg.htmlparser.tags.BodyTag.class), true);\n\n\t\t\t\torg.htmlparser.util.SimpleNodeIterator iterBody = body\n\t\t\t\t\t\t.elements();\n\n\t\t\t\twhile (iterBody.hasMoreNodes()) {\n\n\t\t\t\t\torg.htmlparser.tags.BodyTag bt = ((org.htmlparser.tags.BodyTag) iterBody\n\t\t\t\t\t\t\t.nextNode());\n\n\t\t\t\t\tNodeList bodychildren = bt.getChildren();\n\n\n\t\t\t\t\tbodychildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interaction/Footer.html\", requestHeader)));\n\n\t\t\t\t\t// bodychildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interaction/OverlayReview.html?link=\"+url.toNormalform(true, false), requestHeader)));\n\n\t\t\t\t\tbodychildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interaction/Overlay.html?link=\"+url.toNormalform(true, false), requestHeader)));\n\n\n\t\t\t\t\t// ADD AUGMENTED INFO\n\n\t\t\t\t\torg.htmlparser.tags.Div sci_aug = new org.htmlparser.tags.Div();\n\n\t\t\t\t\tsci_aug.setTagName(\"div\");\n\n\t\t\t\t\tsci_aug.setAttribute(\"id\", \"sciety_augmented\");\n\t\t\t\t\tsci_aug.setAttribute(\"style\",\n\t\t\t\t\t\t\t\"visibility: hidden; position: absolute; overflow: hidden;\");\n\n\t\t\t\t\torg.htmlparser.util.NodeList childr = new org.htmlparser.util.NodeList();\n\n\n\t\t\t\t\tsci_aug.setChildren(childr);\n\n\t\t\t\t\torg.htmlparser.tags.Div sci_aug_endtag = new org.htmlparser.tags.Div();\n\n\t\t\t\t\tsci_aug_endtag.setTagName(\"/div\");\n\n\t\t\t\t\tsci_aug.setEndTag(sci_aug_endtag);\n\n\t\t\t\t\tbodychildren.add(sci_aug);\n\n\t\t\t\t\tbt.setChildren(bodychildren);\n\n\t\t\t\t\taugmented = true;\n\n\t\t\t\t}\n\n\t\t\t\tDoc = list.toHtml(true);\n\n\t\t\t\taugmented = true;\n\n\t\t\t} // not list = null\n\n\t\t} // reparse\n\n\t\tif (augmented) {\n\n\t\t\treturn (new StringBuffer (Doc));\n\t\t} else {\n\t\t\treturn (data);\n\t\t}\n\t}","id":69205,"modified_method":"public static StringBuffer process (StringBuffer data, Charset charset, DigestURI url, RequestHeader requestHeader) {\n\n        globalrequestHeader = requestHeader;\n\n        Switchboard sb = Switchboard.getSwitchboard();\n\n        boolean augmented = false;\n\n        try {\n            Log.logInfo(\"AUGMENTATION\", url.getName());\n        } catch (IOException e1) {\n            // TODO Auto-generated catch block\n            e1.printStackTrace();\n        }\n\n        String Doc = data.toString();\n\n        // Send document to REFLECT (http://www.reflect.ws/REST_API.html)\n        if (sb.getConfigBool(\"augmentation.reflect\", false) == true) {\n            try {\n\n                Doc = processExternal(\"http://reflect.ws/REST/GetHTML\",\n                        \"document\", Doc);\n                Log.logInfo(\"AUGMENTATION\", \"reflected \" + url);\n                augmented = true;\n            } catch (Exception e) {\n\n            }\n        }\n\n        // Add DOCTYPE if not present.\n        // This is required for IE to render position:absolute correctly.\n\n        if (sb.getConfigBool(\"augmentation.addDoctype\", true) == true) {\n            Doc = processAddDoctype(Doc);\n            augmented = true;\n        }\n\n\n        if (sb.getConfigBool(\"augmentation.reparse\", true) == true) {\n\n            NodeList list = new NodeList();\n\n            // Fill NodeList with parsed Document\n            try {\n\n                org.htmlparser.Parser par = new org.htmlparser.Parser();\n\n                par.setInputHTML(Doc);\n\n                list = par.parse(null);\n\n                Log.logInfo (\"AUGMENTATION\", url.toString());\n\n            } catch (Exception e) {\n            }\n\n            // Add Unique ID to every node element which has no id yet.\n            // This allows consistent interaction between client (browser) and\n            // back-end (data store) by providing \"position awareness\" in the\n            // document.\n            if (sb.getConfigBool(\"augmentation.reparse.adduniqueid\", true) == true) {\n                try {\n\n                    NodeVisitor visitorAddUniqueID = new AugmentHtmlStream.VisitorAddUniqueID();\n                    list.visitAllNodesWith(visitorAddUniqueID);\n\n                } catch (Exception e) {\n                }\n            }\n\n            // Inspect on text tags\n\n            try {\n\n                NodeVisitor visitorText = new AugmentHtmlStream.VisitorText();\n                list.visitAllNodesWith(visitorText);\n\n            } catch (Exception e) {\n            }\n\n            String SCI_GUID = \"\";\n\n            String SCI_GUID_DOI = \"\";\n            String SCI_GUID_PMID = \"\";\n\n            String SCI_TITLE = \"\";\n            String SCI_CREATOR = \"\";\n            String SCI_DESCRIPTION = \"\";\n            String SCI_IDENTIFIER = \"\";\n\n            String SCI_WHITELIST = \"\";\n\n            String SCI_URL = \"\";\n\n            String SCI_HASH = \"\";\n\n            SCI_URL = url.toString();\n\n            // System.out.println(\"Starting augmentation for \" + url);\n            // System.out.println(\"Content: \" + Doc);\n\n            if (!(list == null)) {\n\n                // DOCUMENT IS MANIPULABLE BY HTML REWRITER\n\n                // SO SEND IT TO YACY PARSER\n\n                Document document = null;\n\n                try {\n                    final StringReader stringReader = new StringReader(Doc);\n                    InputStream inputStream = new InputStream() {\n\n                        @Override\n                        public int read() throws IOException {\n                            return stringReader.read();\n                        }\n                    };\n\n                    document = Document.mergeDocuments(\n                            url,\n                            \"text/html\",\n                            TextParser.parseSource(url, \"text/html\", null,\n                                    data.length(), inputStream));\n\n                } catch (Exception e) {\n\n                }\n\n                if (document != null) {\n\n                    if (document.dc_format() == \"text/html\") {\n\n                        SCI_TITLE = document.dc_title();\n                        SCI_CREATOR = document.dc_creator();\n                        SCI_DESCRIPTION = document.dc_description();\n                        SCI_IDENTIFIER = document.dc_identifier();\n\n                    }\n\n                }\n\n                SCI_HASH = \"\" + url.hashCode();\n\n                // ADD AUGMENTED HEADER INFORMATION\n\n                NodeList header = list.extractAllNodesThatMatch(\n                        new org.htmlparser.filters.NodeClassFilter(\n                                org.htmlparser.tags.HeadTag.class), true);\n\n                org.htmlparser.util.SimpleNodeIterator iterHeader = header\n                        .elements();\n\n                while (iterHeader.hasMoreNodes()) {\n                    org.htmlparser.tags.HeadTag ht = ((org.htmlparser.tags.HeadTag) iterHeader\n                            .nextNode());\n\n                    NodeList headchildren = ht.getChildren();\n\n                    headchildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"env/templates/jqueryheader.template\", requestHeader)));\n                    headchildren.add(new org.htmlparser.nodes.TextNode(\"<script type='text/javascript'>\"+loadInternal(\"interaction/interaction.js\", requestHeader)+\"<\/script>\"));\n                    headchildren.add(new org.htmlparser.nodes.TextNode(\"<script type='text/javascript'>\"+loadInternal(\"interaction/interaction_sciety.js\", requestHeader)+\"<\/script>\"));\n                    headchildren.add(new org.htmlparser.nodes.TextNode(\"<script type='text/javascript'>\"+loadInternal(\"interaction/interaction_metadata.js\", requestHeader)+\"<\/script>\"));\n\n                    augmented = true;\n\n                    ht.setChildren(headchildren);\n                }\n\n                // ADD AUGMENTED BODY INFORMATION\n\n                NodeList body = list.extractAllNodesThatMatch(\n                        new org.htmlparser.filters.NodeClassFilter(\n                                org.htmlparser.tags.BodyTag.class), true);\n\n                org.htmlparser.util.SimpleNodeIterator iterBody = body\n                        .elements();\n\n                while (iterBody.hasMoreNodes()) {\n\n                    org.htmlparser.tags.BodyTag bt = ((org.htmlparser.tags.BodyTag) iterBody\n                            .nextNode());\n\n                    NodeList bodychildren = bt.getChildren();\n\n\n                    // bodychildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interaction/Footer.html\", requestHeader)));\n\n                    bodychildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interaction/OverlayReview.html?link=\"+url.toNormalform(true, false), requestHeader)));\n\n                    bodychildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interaction/Sidepanel_part.html?link=\"+url.toNormalform(true, false), requestHeader)));\n\n                    // bodychildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interaction/Overlay.html?link=\"+url.toNormalform(true, false), requestHeader)));\n\n\n                    // ADD AUGMENTED INFO\n\n                    org.htmlparser.tags.Div sci_aug = new org.htmlparser.tags.Div();\n\n                    sci_aug.setTagName(\"div\");\n\n                    sci_aug.setAttribute(\"id\", \"sciety_augmented\");\n                    sci_aug.setAttribute(\"style\",\n                            \"visibility: hidden; position: absolute; overflow: hidden;\");\n\n                    org.htmlparser.util.NodeList childr = new org.htmlparser.util.NodeList();\n\n\n                    sci_aug.setChildren(childr);\n\n                    org.htmlparser.tags.Div sci_aug_endtag = new org.htmlparser.tags.Div();\n\n                    sci_aug_endtag.setTagName(\"/div\");\n\n                    sci_aug.setEndTag(sci_aug_endtag);\n\n                    bodychildren.add(sci_aug);\n\n                    bt.setChildren(bodychildren);\n\n                    augmented = true;\n\n                }\n\n                Doc = list.toHtml(true);\n\n                augmented = true;\n\n            } // not list = null\n\n        } // reparse\n\n\n        if (augmented) {\n\n            return (new StringBuffer (Doc));\n        } else {\n            return (data);\n        }\n    }","commit_id":"aa0295917cef2da483d3440f025a9f1348459e5b","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static StringBuffer process (StringBuffer data, Charset charset, DigestURI url, RequestHeader requestHeader) {\n\n\t\tglobalrequestHeader = requestHeader;\n\n\t\tSwitchboard sb = Switchboard.getSwitchboard();\n\n\t\tboolean augmented = false;\n\t\t\n\t\ttry {\n\t\t\tLog.logInfo(\"AUGMENTATION\", url.getName());\n\t\t} catch (IOException e1) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te1.printStackTrace();\n\t\t}\n\n\t\tString Doc = data.toString();\n\n\t\t// Send document to REFLECT (http://www.reflect.ws/REST_API.html)\n\t\tif (sb.getConfigBool(\"augmentation.reflect\", false) == true) {\n\t\t\ttry {\n\n\t\t\t\tDoc = processExternal(\"http://reflect.ws/REST/GetHTML\",\n\t\t\t\t\t\t\"document\", Doc);\n\t\t\t\tLog.logInfo(\"AUGMENTATION\", \"reflected \" + url);\n\t\t\t\taugmented = true;\n\t\t\t} catch (Exception e) {\n\n\t\t\t}\n\t\t}\n\n\t\t// Add DOCTYPE if not present.\n\t\t// This is required for IE to render position:absolute correctly.\n\n\t\tif (sb.getConfigBool(\"augmentation.addDoctype\", true) == true) {\n\t\t\tDoc = processAddDoctype(Doc);\n\t\t\taugmented = true;\n\t\t}\n\n\n\t\tif (sb.getConfigBool(\"augmentation.reparse\", true) == true) {\n\n\t\t\tNodeList list = new NodeList();\n\n\t\t\t// Fill NodeList with parsed Document\n\t\t\ttry {\n\n\t\t\t\torg.htmlparser.Parser par = new org.htmlparser.Parser();\n\n\t\t\t\tpar.setInputHTML(Doc);\n\n\t\t\t\tlist = par.parse(null);\n\n\t\t\t\tLog.logInfo (\"AUGMENTATION\", url.toString());\n\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\n\t\t\t// Add Unique ID to every node element which has no id yet.\n\t\t\t// This allows consistent interaction between client (browser) and\n\t\t\t// back-end (data store) by providing \"position awareness\" in the\n\t\t\t// document.\n\t\t\tif (sb.getConfigBool(\"augmentation.reparse.adduniqueid\", true) == true) {\n\t\t\t\ttry {\n\n\t\t\t\t\tNodeVisitor visitorAddUniqueID = new AugmentHtmlStream.VisitorAddUniqueID();\n\t\t\t\t\tlist.visitAllNodesWith(visitorAddUniqueID);\n\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Inspect on text tags\n\n\t\t\ttry {\n\n\t\t\t\tNodeVisitor visitorText = new AugmentHtmlStream.VisitorText();\n\t\t\t\tlist.visitAllNodesWith(visitorText);\n\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\n\t\t\tString SCI_GUID = \"\";\n\n\t\t\tString SCI_GUID_DOI = \"\";\n\t\t\tString SCI_GUID_PMID = \"\";\n\n\t\t\tString SCI_TITLE = \"\";\n\t\t\tString SCI_CREATOR = \"\";\n\t\t\tString SCI_DESCRIPTION = \"\";\n\t\t\tString SCI_IDENTIFIER = \"\";\n\n\t\t\tString SCI_WHITELIST = \"\";\n\n\t\t\tString SCI_URL = \"\";\n\n\t\t\tString SCI_HASH = \"\";\n\n\t\t\tSCI_URL = url.toString();\n\n\t\t\t// System.out.println(\"Starting augmentation for \" + url);\n\t\t\t// System.out.println(\"Content: \" + Doc);\n\n\t\t\tif (!(list == null)) {\n\n\t\t\t\t// DOCUMENT IS MANIPULABLE BY HTML REWRITER\n\n\t\t\t\t// SO SEND IT TO YACY PARSER\n\n\t\t\t\tDocument document = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tfinal StringReader stringReader = new StringReader(Doc);\n\t\t\t\t\tInputStream inputStream = new InputStream() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic int read() throws IOException {\n\t\t\t\t\t\t\treturn stringReader.read();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tdocument = Document.mergeDocuments(\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\"text/html\",\n\t\t\t\t\t\t\tTextParser.parseSource(url, \"text/html\", null,\n\t\t\t\t\t\t\t\t\tdata.length(), inputStream));\n\n\t\t\t\t} catch (Exception e) {\n\n\t\t\t\t}\n\n\t\t\t\tif (document != null) {\n\n\t\t\t\t\tif (document.dc_format() == \"text/html\") {\n\n\t\t\t\t\t\tSCI_TITLE = document.dc_title();\n\t\t\t\t\t\tSCI_CREATOR = document.dc_creator();\n\t\t\t\t\t\tSCI_DESCRIPTION = document.dc_description();\n\t\t\t\t\t\tSCI_IDENTIFIER = document.dc_identifier();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tSCI_HASH = \"\" + url.hashCode();\n\n\t\t\t\t// ADD AUGMENTED HEADER INFORMATION\n\n\t\t\t\tNodeList header = list.extractAllNodesThatMatch(\n\t\t\t\t\t\tnew org.htmlparser.filters.NodeClassFilter(\n\t\t\t\t\t\t\t\torg.htmlparser.tags.HeadTag.class), true);\n\n\t\t\t\torg.htmlparser.util.SimpleNodeIterator iterHeader = header\n\t\t\t\t\t\t.elements();\n\n\t\t\t\twhile (iterHeader.hasMoreNodes()) {\n\t\t\t\t\torg.htmlparser.tags.HeadTag ht = ((org.htmlparser.tags.HeadTag) iterHeader\n\t\t\t\t\t\t\t.nextNode());\n\n\t\t\t\t\tNodeList headchildren = ht.getChildren();\n\n\t\t\t\t\theadchildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interactionparts/interaction.html\", requestHeader)));\n\n\t\t\t\t\taugmented = true;\n\n\t\t\t\t\tht.setChildren(headchildren);\n\t\t\t\t}\n\n\t\t\t\t// ADD AUGMENTED BODY INFORMATION\n\n\t\t\t\tNodeList body = list.extractAllNodesThatMatch(\n\t\t\t\t\t\tnew org.htmlparser.filters.NodeClassFilter(\n\t\t\t\t\t\t\t\torg.htmlparser.tags.BodyTag.class), true);\n\n\t\t\t\torg.htmlparser.util.SimpleNodeIterator iterBody = body\n\t\t\t\t\t\t.elements();\n\n\t\t\t\twhile (iterBody.hasMoreNodes()) {\n\n\t\t\t\t\torg.htmlparser.tags.BodyTag bt = ((org.htmlparser.tags.BodyTag) iterBody\n\t\t\t\t\t\t\t.nextNode());\n\n\t\t\t\t\tNodeList bodychildren = bt.getChildren();\n\n\t\t\t\t\tbodychildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interaction/Footer.html\", requestHeader)));\n\n\t\t\t\t\tbodychildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interaction/OverlayInteraction.html?link=\"+url.toNormalform(true, false), requestHeader)));\n\n\t\t\t\t\t// ADD AUGMENTED INFO\n\n\t\t\t\t\torg.htmlparser.tags.Div sci_aug = new org.htmlparser.tags.Div();\n\n\t\t\t\t\tsci_aug.setTagName(\"div\");\n\n\t\t\t\t\tsci_aug.setAttribute(\"id\", \"sciety_augmented\");\n\t\t\t\t\tsci_aug.setAttribute(\"style\",\n\t\t\t\t\t\t\t\"visibility: hidden; position: absolute; overflow: hidden;\");\n\n\t\t\t\t\torg.htmlparser.util.NodeList childr = new org.htmlparser.util.NodeList();\n\n\n\t\t\t\t\tsci_aug.setChildren(childr);\n\n\t\t\t\t\torg.htmlparser.tags.Div sci_aug_endtag = new org.htmlparser.tags.Div();\n\n\t\t\t\t\tsci_aug_endtag.setTagName(\"/div\");\n\n\t\t\t\t\tsci_aug.setEndTag(sci_aug_endtag);\n\n\t\t\t\t\tbodychildren.add(sci_aug);\n\n\t\t\t\t\tbt.setChildren(bodychildren);\n\n\t\t\t\t\taugmented = true;\n\n\t\t\t\t}\n\n\t\t\t\tDoc = list.toHtml(true);\n\n\t\t\t\taugmented = true;\n\n\t\t\t} // not list = null\n\n\t\t} // reparse\n\n\t\tif (augmented) {\n\n\t\t\treturn (new StringBuffer (Doc));\n\t\t} else {\n\t\t\treturn (data);\n\t\t}\n\t}","id":69206,"modified_method":"public static StringBuffer process (StringBuffer data, Charset charset, DigestURI url, RequestHeader requestHeader) {\n\n\t\tglobalrequestHeader = requestHeader;\n\n\t\tSwitchboard sb = Switchboard.getSwitchboard();\n\n\t\tboolean augmented = false;\n\n\t\ttry {\n\t\t\tLog.logInfo(\"AUGMENTATION\", url.getName());\n\t\t} catch (IOException e1) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te1.printStackTrace();\n\t\t}\n\n\t\tString Doc = data.toString();\n\n\t\t// Send document to REFLECT (http://www.reflect.ws/REST_API.html)\n\t\tif (sb.getConfigBool(\"augmentation.reflect\", false) == true) {\n\t\t\ttry {\n\n\t\t\t\tDoc = processExternal(\"http://reflect.ws/REST/GetHTML\",\n\t\t\t\t\t\t\"document\", Doc);\n\t\t\t\tLog.logInfo(\"AUGMENTATION\", \"reflected \" + url);\n\t\t\t\taugmented = true;\n\t\t\t} catch (Exception e) {\n\n\t\t\t}\n\t\t}\n\n\t\t// Add DOCTYPE if not present.\n\t\t// This is required for IE to render position:absolute correctly.\n\n\t\tif (sb.getConfigBool(\"augmentation.addDoctype\", true) == true) {\n\t\t\tDoc = processAddDoctype(Doc);\n\t\t\taugmented = true;\n\t\t}\n\n\n\t\tif (sb.getConfigBool(\"augmentation.reparse\", true) == true) {\n\n\t\t\tNodeList list = new NodeList();\n\n\t\t\t// Fill NodeList with parsed Document\n\t\t\ttry {\n\n\t\t\t\torg.htmlparser.Parser par = new org.htmlparser.Parser();\n\n\t\t\t\tpar.setInputHTML(Doc);\n\n\t\t\t\tlist = par.parse(null);\n\n\t\t\t\tLog.logInfo (\"AUGMENTATION\", url.toString());\n\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\n\t\t\t// Add Unique ID to every node element which has no id yet.\n\t\t\t// This allows consistent interaction between client (browser) and\n\t\t\t// back-end (data store) by providing \"position awareness\" in the\n\t\t\t// document.\n\t\t\tif (sb.getConfigBool(\"augmentation.reparse.adduniqueid\", true) == true) {\n\t\t\t\ttry {\n\n\t\t\t\t\tNodeVisitor visitorAddUniqueID = new AugmentHtmlStream.VisitorAddUniqueID();\n\t\t\t\t\tlist.visitAllNodesWith(visitorAddUniqueID);\n\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Inspect on text tags\n\n\t\t\ttry {\n\n\t\t\t\tNodeVisitor visitorText = new AugmentHtmlStream.VisitorText();\n\t\t\t\tlist.visitAllNodesWith(visitorText);\n\n\t\t\t} catch (Exception e) {\n\t\t\t}\n\n\t\t\tString SCI_GUID = \"\";\n\n\t\t\tString SCI_GUID_DOI = \"\";\n\t\t\tString SCI_GUID_PMID = \"\";\n\n\t\t\tString SCI_TITLE = \"\";\n\t\t\tString SCI_CREATOR = \"\";\n\t\t\tString SCI_DESCRIPTION = \"\";\n\t\t\tString SCI_IDENTIFIER = \"\";\n\n\t\t\tString SCI_WHITELIST = \"\";\n\n\t\t\tString SCI_URL = \"\";\n\n\t\t\tString SCI_HASH = \"\";\n\n\t\t\tSCI_URL = url.toString();\n\n\t\t\t// System.out.println(\"Starting augmentation for \" + url);\n\t\t\t// System.out.println(\"Content: \" + Doc);\n\n\t\t\tif (!(list == null)) {\n\n\t\t\t\t// DOCUMENT IS MANIPULABLE BY HTML REWRITER\n\n\t\t\t\t// SO SEND IT TO YACY PARSER\n\n\t\t\t\tDocument document = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tfinal StringReader stringReader = new StringReader(Doc);\n\t\t\t\t\tInputStream inputStream = new InputStream() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic int read() throws IOException {\n\t\t\t\t\t\t\treturn stringReader.read();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tdocument = Document.mergeDocuments(\n\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\"text/html\",\n\t\t\t\t\t\t\tTextParser.parseSource(url, \"text/html\", null,\n\t\t\t\t\t\t\t\t\tdata.length(), inputStream));\n\n\t\t\t\t} catch (Exception e) {\n\n\t\t\t\t}\n\n\t\t\t\tif (document != null) {\n\n\t\t\t\t\tif (document.dc_format() == \"text/html\") {\n\n\t\t\t\t\t\tSCI_TITLE = document.dc_title();\n\t\t\t\t\t\tSCI_CREATOR = document.dc_creator();\n\t\t\t\t\t\tSCI_DESCRIPTION = document.dc_description();\n\t\t\t\t\t\tSCI_IDENTIFIER = document.dc_identifier();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tSCI_HASH = \"\" + url.hashCode();\n\n\t\t\t\t// ADD AUGMENTED HEADER INFORMATION\n\n\t\t\t\tNodeList header = list.extractAllNodesThatMatch(\n\t\t\t\t\t\tnew org.htmlparser.filters.NodeClassFilter(\n\t\t\t\t\t\t\t\torg.htmlparser.tags.HeadTag.class), true);\n\n\t\t\t\torg.htmlparser.util.SimpleNodeIterator iterHeader = header\n\t\t\t\t\t\t.elements();\n\n\t\t\t\twhile (iterHeader.hasMoreNodes()) {\n\t\t\t\t\torg.htmlparser.tags.HeadTag ht = ((org.htmlparser.tags.HeadTag) iterHeader\n\t\t\t\t\t\t\t.nextNode());\n\n\t\t\t\t\tNodeList headchildren = ht.getChildren();\n\n\t\t\t\t\theadchildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"env/templates/jqueryheader.template\", requestHeader)));\n\t\t\t\t//\theadchildren.add(new org.htmlparser.nodes.TextNode(\"<script type='text/javascript'>\"+loadInternal(\"interaction/formdata.js\", requestHeader)+\"<\/script>\"));\n\n\t\t\t\t//\theadchildren.add(new org.htmlparser.nodes.TextNode(\"<script type='text/javascript'>\"+loadInternal(\"interaction/interaction_sciety.js\", requestHeader)+\"<\/script>\"));\n\n\t\t\t\t\theadchildren.add(new org.htmlparser.nodes.TextNode(\"<script type='text/javascript'>\"+loadInternal(\"interaction/interaction.js\", requestHeader)+\"<\/script>\"));\n\n\t\t\t\t\taugmented = true;\n\n\t\t\t\t\tht.setChildren(headchildren);\n\t\t\t\t}\n\n\t\t\t\t// ADD AUGMENTED BODY INFORMATION\n\n\t\t\t\tNodeList body = list.extractAllNodesThatMatch(\n\t\t\t\t\t\tnew org.htmlparser.filters.NodeClassFilter(\n\t\t\t\t\t\t\t\torg.htmlparser.tags.BodyTag.class), true);\n\n\t\t\t\torg.htmlparser.util.SimpleNodeIterator iterBody = body\n\t\t\t\t\t\t.elements();\n\n\t\t\t\twhile (iterBody.hasMoreNodes()) {\n\n\t\t\t\t\torg.htmlparser.tags.BodyTag bt = ((org.htmlparser.tags.BodyTag) iterBody\n\t\t\t\t\t\t\t.nextNode());\n\n\t\t\t\t\tNodeList bodychildren = bt.getChildren();\n\n\n\t\t\t\t\tbodychildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interaction/Footer.html\", requestHeader)));\n\n\t\t\t\t\t// bodychildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interaction/OverlayReview.html?link=\"+url.toNormalform(true, false), requestHeader)));\n\n\t\t\t\t\tbodychildren.add(new org.htmlparser.nodes.TextNode(loadInternal(\"interaction/Overlay.html?link=\"+url.toNormalform(true, false), requestHeader)));\n\n\n\t\t\t\t\t// ADD AUGMENTED INFO\n\n\t\t\t\t\torg.htmlparser.tags.Div sci_aug = new org.htmlparser.tags.Div();\n\n\t\t\t\t\tsci_aug.setTagName(\"div\");\n\n\t\t\t\t\tsci_aug.setAttribute(\"id\", \"sciety_augmented\");\n\t\t\t\t\tsci_aug.setAttribute(\"style\",\n\t\t\t\t\t\t\t\"visibility: hidden; position: absolute; overflow: hidden;\");\n\n\t\t\t\t\torg.htmlparser.util.NodeList childr = new org.htmlparser.util.NodeList();\n\n\n\t\t\t\t\tsci_aug.setChildren(childr);\n\n\t\t\t\t\torg.htmlparser.tags.Div sci_aug_endtag = new org.htmlparser.tags.Div();\n\n\t\t\t\t\tsci_aug_endtag.setTagName(\"/div\");\n\n\t\t\t\t\tsci_aug.setEndTag(sci_aug_endtag);\n\n\t\t\t\t\tbodychildren.add(sci_aug);\n\n\t\t\t\t\tbt.setChildren(bodychildren);\n\n\t\t\t\t\taugmented = true;\n\n\t\t\t\t}\n\n\t\t\t\tDoc = list.toHtml(true);\n\n\t\t\t\taugmented = true;\n\n\t\t\t} // not list = null\n\n\t\t} // reparse\n\n\t\tif (augmented) {\n\n\t\t\treturn (new StringBuffer (Doc));\n\t\t} else {\n\t\t\treturn (data);\n\t\t}\n\t}","commit_id":"ed2ea0f08ec0214bc8b9878681ca4d08e29b65a5","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"protected static void setupLayouts(long companyId)\n\t\tthrows PortalException, SystemException {\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(\n\t\t\tcompanyId, GroupConstants.GUEST);\n\n\t\tLayout layout = LayoutLocalServiceUtil.getLayout(\n\t\t\tgroup.getGroupId(), false, 1);\n\n\t\tlong defaultUserId = UserLocalServiceUtil.getDefaultUserId(\n\t\t\tlayout.getCompanyId());\n\n\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t(LayoutTypePortlet)layout.getLayoutType();\n\n\t\tlayoutTypePortlet.setLayoutTemplateId(0, \"1_column\", false);\n\n\t\tif (layoutTypePortlet.hasPortletId(\"47\")) {\n\t\t\tlayoutTypePortlet.removePortletId(defaultUserId, \"47\");\n\t\t}\n\n\t\tif (!layoutTypePortlet.hasPortletId(PortletKeys.LOGIN)) {\n\t\t\tLayoutTemplate layoutTemplate =\n\t\t\t\tlayoutTypePortlet.getLayoutTemplate();\n\n\t\t\tList<String> columns = layoutTemplate.getColumns();\n\n\t\t\tlayoutTypePortlet.setPortletIds(columns.get(0), PortletKeys.LOGIN);\n\t\t}\n\n\t\tLayoutLocalServiceUtil.updateLayout(\n\t\t\tlayout.getGroupId(), layout.isPrivateLayout(), layout.getLayoutId(),\n\t\t\tlayout.getTypeSettings());\n\n\t\tLayoutLocalServiceUtil.updateFriendlyURL(layout.getPlid(), \"/login\");\n\n\t\tLayoutSetLocalServiceUtil.updateLookAndFeel(\n\t\t\tlayout.getGroupId(), false, \"so_WAR_sotheme\", \"01\", \"\", false);\n\t}","id":69207,"modified_method":"protected static void setupLoginLayout(long companyId)\n\t\tthrows PortalException, SystemException {\n\n\t\tGroup group = GroupLocalServiceUtil.getGroup(\n\t\t\tcompanyId, GroupConstants.GUEST);\n\n\t\tLayout layout = LayoutLocalServiceUtil.getLayout(\n\t\t\tgroup.getGroupId(), false, 1);\n\n\t\tlong defaultUserId = UserLocalServiceUtil.getDefaultUserId(\n\t\t\tlayout.getCompanyId());\n\n\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t(LayoutTypePortlet)layout.getLayoutType();\n\n\t\tlayoutTypePortlet.setLayoutTemplateId(0, \"1_column\", false);\n\n\t\tif (layoutTypePortlet.hasPortletId(\"47\")) {\n\t\t\tlayoutTypePortlet.removePortletId(defaultUserId, \"47\");\n\t\t}\n\n\t\tif (!layoutTypePortlet.hasPortletId(PortletKeys.LOGIN)) {\n\t\t\tLayoutTemplate layoutTemplate =\n\t\t\t\tlayoutTypePortlet.getLayoutTemplate();\n\n\t\t\tList<String> columns = layoutTemplate.getColumns();\n\n\t\t\tlayoutTypePortlet.setPortletIds(columns.get(0), PortletKeys.LOGIN);\n\t\t}\n\n\t\tLayoutLocalServiceUtil.updateLayout(\n\t\t\tlayout.getGroupId(), layout.isPrivateLayout(), layout.getLayoutId(),\n\t\t\tlayout.getTypeSettings());\n\n\t\tLayoutLocalServiceUtil.updateFriendlyURL(layout.getPlid(), \"/login\");\n\n\t\tLayoutSetLocalServiceUtil.updateLookAndFeel(\n\t\t\tlayout.getGroupId(), false, \"so_WAR_sotheme\", \"01\", \"\", false);\n\t}","commit_id":"bbf2dd1761fd85c96b0371ec00bdd2cc11384338","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public static void initInstance(long companyId)\n\t\tthrows PortalException, SystemException {\n\n\t\ttry {\n\t\t\tPortletPreferencesThreadLocal.setStrict(false);\n\n\t\t\tsetupCompany(companyId);\n\t\t\tsetupPermissions(companyId);\n\t\t\tsetupLayouts(companyId);\n\t\t\tsetupUsers(companyId);\n\t\t}\n\t\tfinally {\n\t\t\tPortletPreferencesThreadLocal.setStrict(true);\n\t\t}\n\t}","id":69208,"modified_method":"public static void initInstance(long companyId)\n\t\tthrows PortalException, SystemException {\n\n\t\ttry {\n\t\t\tPortletPreferencesThreadLocal.setStrict(false);\n\n\t\t\tsetupCompany(companyId);\n\t\t\tsetupPermissions(companyId);\n\t\t\tsetupLoginLayout(companyId);\n\t\t\tsetupCommunityTemplate(companyId);\n\t\t\tsetupUsers(companyId);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t}\n\t\tfinally {\n\t\t\tPortletPreferencesThreadLocal.setStrict(true);\n\t\t}\n\t}","commit_id":"bbf2dd1761fd85c96b0371ec00bdd2cc11384338","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void addUserLayouts(Group group) throws Exception {\n\n\t\t// Look and Feel\n\n\t\tupdateLookAndFeel(group);\n\n\t\t// Home\n\n\t\tLayout layout = addLayout(\n\t\t\tgroup, \"Home\", \"/home\", PortletPropsValues.USER_LAYOUT_TEMPLATE);\n\n\t\taddPortlets(group, layout);\n\n\t\tupdatePermissions(layout, false);\n\n\t\t// Profile\n\n\t\tlayout = addLayout(group, \"Profile\", \"/profile\", \"2_columns_ii\");\n\n\t\taddResources(layout, \"1_WAR_soportlet\");\n\t\taddResources(layout, \"4_WAR_soportlet\");\n\n\t\tremovePortletBorder(layout, \"4_WAR_soportlet\");\n\n\t\tupdatePermissions(layout, true);\n\n\t\t// Mail\n\n\t\tlayout = addLayout(group, \"Mail\", \"/mail\", \"1_column\");\n\n\t\taddResources(layout, \"1_WAR_mailportlet\");\n\n\t\tupdatePermissions(layout, false);\n\t}","id":69209,"modified_method":"protected void addUserLayouts(Group group) throws Exception {\n\n\t\t// Look and Feel\n\n\t\tLayoutSetLocalServiceUtil.updateLookAndFeel(\n\t\t\tgroup.getGroupId(), \"so_WAR_sotheme\", \"01\", \"\", false);\n\n\t\t// Home\n\n\t\tLayout layout = addLayout(\n\t\t\tgroup, \"Home\", \"/home\", PortletPropsValues.USER_LAYOUT_TEMPLATE);\n\n\t\taddPortlets(group, layout, \"/home\");\n\n\t\tupdatePermissions(layout, false);\n\n\t\t// Profile\n\n\t\tlayout = addLayout(group, \"Profile\", \"/profile\", \"2_columns_ii\");\n\n\t\taddResources(layout, \"1_WAR_soportlet\");\n\t\taddResources(layout, \"4_WAR_soportlet\");\n\n\t\tremovePortletBorder(layout, \"4_WAR_soportlet\");\n\n\t\tupdatePermissions(layout, true);\n\n\t\t// Mail\n\n\t\tlayout = addLayout(group, \"Mail\", \"/mail\", \"1_column\");\n\n\t\taddResources(layout, \"1_WAR_mailportlet\");\n\n\t\tupdatePermissions(layout, false);\n\t}","commit_id":"bbf2dd1761fd85c96b0371ec00bdd2cc11384338","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void onAfterCreate(LayoutSet layoutSet)\n\t\tthrows ModelListenerException {\n\n\t\ttry {\n\t\t\tif (layoutSet.isPrivateLayout()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tGroup group = GroupLocalServiceUtil.getGroup (\n\t\t\t\tlayoutSet.getGroupId());\n\n\t\t\tString name = group.getName();\n\n\t\t\tif (name.equals(GroupConstants.GUEST)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (group.isCommunity()) {\n\t\t\t\taddCommunityLayouts(group);\n\t\t\t}\n\t\t\telse if (group.isUser()) {\n\t\t\t\taddUserLayouts(group);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new ModelListenerException(e);\n\t\t}\n\t}","id":69210,"modified_method":"public void onAfterCreate(LayoutSet layoutSet)\n\t\tthrows ModelListenerException {\n\n\t\ttry {\n\t\t\tif (layoutSet.isPrivateLayout()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tGroup group = GroupLocalServiceUtil.getGroup (\n\t\t\t\tlayoutSet.getGroupId());\n\n\t\t\tString name = group.getName();\n\n\t\t\tif (group.isUser()) {\n\t\t\t\taddUserLayouts(group);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow new ModelListenerException(e);\n\t\t}\n\t}","commit_id":"bbf2dd1761fd85c96b0371ec00bdd2cc11384338","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void addPortlets(Group group, Layout layout) throws Exception {\n\t\tString prefix = PortletPropsKeys.SITE_LAYOUT_PORTLETS;\n\n\t\tif (group.isUser()) {\n\t\t\tprefix = PortletPropsKeys.USER_LAYOUT_PORTLETS;\n\t\t}\n\n\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t(LayoutTypePortlet)layout.getLayoutType();\n\n\t\tLayoutTemplate layoutTemplate = layoutTypePortlet.getLayoutTemplate();\n\n\t\tList<String> columns = layoutTemplate.getColumns();\n\n\t\tfor (String column : columns) {\n\t\t\tlayoutTypePortlet.setPortletIds(\n\t\t\t\tcolumn, PortletProps.get(prefix + column));\n\t\t}\n\n\t\tLayoutLocalServiceUtil.updateLayout(\n\t\t\tlayout.getGroupId(), layout.isPrivateLayout(), layout.getLayoutId(),\n\t\t\tlayout.getTypeSettings());\n\n\t\tList<String> portletIds = layoutTypePortlet.getPortletIds();\n\n\t\tfor (String portletId : portletIds) {\n\t\t\taddResources(layout, portletId);\n\n\t\t\tif (portletId.equals(\"1_WAR_wysiwygportlet\")) {\n\t\t\t\tupdatePortletTitle(layout, \"1_WAR_wysiwygportlet\", \"Welcome\");\n\t\t\t}\n\t\t}\n\t}","id":69211,"modified_method":"protected void addPortlets(Group group, Layout layout, String name)\n\t\tthrows Exception {\n\n\t\tFilter filter = new Filter(name);\n\n\t\tString prefix = PortletPropsKeys.SITE_TEMPLATE_PORTLETS;\n\n\t\tif (group.isUser()) {\n\t\t\tprefix = PortletPropsKeys.USER_LAYOUT_PORTLETS;\n\t\t}\n\n\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t(LayoutTypePortlet)layout.getLayoutType();\n\n\t\tLayoutTemplate layoutTemplate = layoutTypePortlet.getLayoutTemplate();\n\n\t\tList<String> columns = layoutTemplate.getColumns();\n\n\t\tfor (String column : columns) {\n\t\t\tString[] portletIds = PortletProps.getArray(\n\t\t\t\tprefix + column, filter);\n\n\t\t\tString portlets = StringPool.BLANK;\n\n\t\t\tfor (String portletId : portletIds) {\n\t\t\t\tportlets = StringUtil.add(portlets, portletId);\n\t\t\t}\n\n\t\t\tlayoutTypePortlet.setPortletIds(column, portlets);\n\t\t}\n\n\t\tLayoutLocalServiceUtil.updateLayout(\n\t\t\tlayout.getGroupId(), layout.isPrivateLayout(), layout.getLayoutId(),\n\t\t\tlayout.getTypeSettings());\n\n\t\tList<String> portletIds = layoutTypePortlet.getPortletIds();\n\n\t\tfor (String portletId : portletIds) {\n\t\t\taddResources(layout, portletId);\n\n\t\t\tif (portletId.equals(\"1_WAR_wysiwygportlet\")) {\n\t\t\t\tupdatePortletTitle(layout, \"1_WAR_wysiwygportlet\", \"Welcome\");\n\t\t\t}\n\t\t}\n\t}","commit_id":"bbf2dd1761fd85c96b0371ec00bdd2cc11384338","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected void updatePortlets(Group group, Layout layout) throws Exception {\n\t\tString prefix = PortletPropsKeys.SITE_LAYOUT_PORTLETS;\n\n\t\tif (group.isUser()) {\n\t\t\tprefix = PortletPropsKeys.USER_LAYOUT_PORTLETS;\n\t\t}\n\n\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t(LayoutTypePortlet)layout.getLayoutType();\n\n\t\tLayoutTemplate layoutTemplate = layoutTypePortlet.getLayoutTemplate();\n\n\t\tList<String> columns = layoutTemplate.getColumns();\n\n\t\tfor (String column : columns) {\n\t\t\tlayoutTypePortlet.setPortletIds(\n\t\t\t\tcolumn, PortletProps.get(prefix + column));\n\t\t}\n\n\t\tLayoutLocalServiceUtil.updateLayout(\n\t\t\tlayout.getGroupId(), layout.isPrivateLayout(), layout.getLayoutId(),\n\t\t\tlayout.getTypeSettings());\n\n\t\tif (!layoutTypePortlet.hasPortletId(\"1_WAR_soportlet\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tPortletPreferences portletSetup =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, \"1_WAR_soportlet\");\n\n\t\tportletSetup.setValue(\n\t\t\t\"portlet-setup-show-borders\", String.valueOf(Boolean.TRUE));\n\n\t\tportletSetup.store();\n\t}","id":69212,"modified_method":"protected void updatePortlets(Group group, Layout layout) throws Exception {\n\t\tString prefix = PortletPropsKeys.SITE_TEMPLATE_PORTLETS;\n\n\t\tFilter filter = new Filter(layout.getFriendlyURL());\n\n\t\tif (group.isUser()) {\n\t\t\tprefix = PortletPropsKeys.USER_LAYOUT_PORTLETS;\n\t\t}\n\n\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t(LayoutTypePortlet)layout.getLayoutType();\n\n\t\tLayoutTemplate layoutTemplate = layoutTypePortlet.getLayoutTemplate();\n\n\t\tList<String> columns = layoutTemplate.getColumns();\n\n\t\tfor (String column : columns) {\n\t\t\tString[] portletIds = PortletProps.getArray(\n\t\t\t\tprefix + column, filter);\n\n\t\t\tString portlets = StringPool.BLANK;\n\n\t\t\tfor (String portletId : portletIds) {\n\t\t\t\tportlets = StringUtil.add(portlets, portletId);\n\t\t\t}\n\n\t\t\tlayoutTypePortlet.setPortletIds(column, portlets);\n\t\t}\n\n\t\tif (!layoutTypePortlet.hasPortletId(\"1_WAR_soportlet\")) {\n\t\t\treturn;\n\t\t}\n\n\t\tPortletPreferences portletSetup =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, \"1_WAR_soportlet\");\n\n\t\tportletSetup.setValue(\n\t\t\t\"portlet-setup-show-borders\", String.valueOf(Boolean.TRUE));\n\n\t\tportletSetup.store();\n\t}","commit_id":"bbf2dd1761fd85c96b0371ec00bdd2cc11384338","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected String readOpenIdResponse(\n\t\t\tThemeDisplay themeDisplay, ActionRequest actionRequest,\n\t\t\tActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tactionRequest);\n\t\tHttpSession session = request.getSession();\n\n\t\tConsumerManager manager = OpenIdUtil.getConsumerManager();\n\n\t\tParameterList params = new ParameterList(\n\t\t\tactionRequest.getParameterMap());\n\n\t\tDiscoveryInformation discovered =\n\t\t\t(DiscoveryInformation)session.getAttribute(WebKeys.OPEN_ID_DISCO);\n\n\t\tif (discovered == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tString receivingUrl = ParamUtil.getString(\n\t\t\tactionRequest, \"openid.return_to\");\n\n\t\tVerificationResult verification = manager.verify(\n\t\t\treceivingUrl, params, discovered);\n\n\t\tIdentifier verified = verification.getVerifiedId();\n\n\t\tif (verified == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tAuthSuccess authSuccess = (AuthSuccess)verification.getAuthResponse();\n\n\t\tString firstName = null;\n\t\tString lastName = null;\n\t\tString emailAddress = null;\n\n\t\tif (authSuccess.hasExtension(SRegMessage.OPENID_NS_SREG)) {\n\t\t\tMessageExtension ext = authSuccess.getExtension(\n\t\t\t\tSRegMessage.OPENID_NS_SREG);\n\n\t\t\tif (ext instanceof SRegResponse) {\n\t\t\t\tSRegResponse sregResp = (SRegResponse)ext;\n\n\t\t\t\tString fullName = GetterUtil.getString(\n\t\t\t\t\tsregResp.getAttributeValue(_OPEN_ID_ATTR_FULLNAME));\n\n\t\t\t\tString[] names = splitName(fullName);\n\n\t\t\t\tif (names != null) {\n\t\t\t\t\tfirstName = names[0];\n\t\t\t\t\tlastName = names[1];\n\t\t\t\t}\n\n\t\t\t\temailAddress = sregResp.getAttributeValue(_OPEN_ID_ATTR_EMAIL);\n\t\t\t}\n\t\t}\n\n\t\tif (authSuccess.hasExtension(AxMessage.OPENID_NS_AX)) {\n\t\t\tMessageExtension ext = authSuccess.getExtension(\n\t\t\t\tAxMessage.OPENID_NS_AX);\n\n\t\t\tif (ext instanceof FetchResponse) {\n\t\t\t\tFetchResponse fetchResp = (FetchResponse)ext;\n\n\t\t\t\tif (Validator.isNull(emailAddress)) {\n\t\t\t\t\temailAddress = getFirstValue(\n\t\t\t\t\t\tfetchResp.getAttributeValues(_OPEN_ID_ATTR_EMAIL));\n\t\t\t\t}\n\n\t\t\t\tURL endpoint = discovered.getOPEndpoint();\n\n\t\t\t\tif (isYahooOpenId(endpoint)) {\n\t\t\t\t\tString fullName = fetchResp.getAttributeValue(\n\t\t\t\t\t\t_OPEN_ID_ATTR_FULLNAME);\n\n\t\t\t\t\tString[] names = splitName(fullName);\n\n\t\t\t\t\tif (names != null) {\n\t\t\t\t\t\tif (Validator.isNull(firstName)) {\n\t\t\t\t\t\t\tfirstName = names[0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Validator.isNull(lastName)) {\n\t\t\t\t\t\t\tlastName = names[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (Validator.isNull(firstName)) {\n\t\t\t\t\t\tfirstName = getFirstValue(\n\t\t\t\t\t\t\tfetchResp.getAttributeValues(\n\t\t\t\t\t\t\t\t_OPEN_ID_ATTR_FIRSTNAME));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Validator.isNull(lastName)) {\n\t\t\t\t\t\tlastName = getFirstValue(\n\t\t\t\t\t\t\tfetchResp.getAttributeValues(\n\t\t\t\t\t\t\t\t_OPEN_ID_ATTR_LASTNAME));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tString openId = OpenIdUtil.normalize(authSuccess.getIdentity());\n\n\t\tUser user = null;\n\n\t\ttry {\n\t\t\tuser = UserLocalServiceUtil.getUserByOpenId(\n\t\t\t\tthemeDisplay.getCompanyId(), openId);\n\t\t}\n\t\tcatch (NoSuchUserException nsue) {\n\t\t\tif (Validator.isNull(firstName) || Validator.isNull(lastName) ||\n\t\t\t\tValidator.isNull(emailAddress)) {\n\n\t\t\t\tSessionMessages.add(request, \"missingOpenIdUserInformation\");\n\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\"The OpenID provider did not send the required \" +\n\t\t\t\t\t\t\t\"attributes to create an account\");\n\t\t\t\t}\n\n\t\t\t\tString createAccountURL = PortalUtil.getCreateAccountURL(\n\t\t\t\t\trequest, themeDisplay);\n\n\t\t\t\tcreateAccountURL = HttpUtil.setParameter(\n\t\t\t\t\tcreateAccountURL, \"openId\", openId);\n\n\t\t\t\tsession.setAttribute(\n\t\t\t\t\tWebKeys.OPEN_ID_LOGIN_PENDING, Boolean.TRUE);\n\n\t\t\t\treturn createAccountURL;\n\t\t\t}\n\n\t\t\tlong creatorUserId = 0;\n\t\t\tlong companyId = themeDisplay.getCompanyId();\n\t\t\tboolean autoPassword = false;\n\t\t\tString password1 = PwdGenerator.getPassword();\n\t\t\tString password2 = password1;\n\t\t\tboolean autoScreenName = true;\n\t\t\tString screenName = StringPool.BLANK;\n\t\t\tlong facebookId = 0;\n\t\t\tLocale locale = themeDisplay.getLocale();\n\t\t\tString middleName = StringPool.BLANK;\n\t\t\tint prefixId = 0;\n\t\t\tint suffixId = 0;\n\t\t\tboolean male = true;\n\t\t\tint birthdayMonth = Calendar.JANUARY;\n\t\t\tint birthdayDay = 1;\n\t\t\tint birthdayYear = 1970;\n\t\t\tString jobTitle = StringPool.BLANK;\n\t\t\tlong[] groupIds = null;\n\t\t\tlong[] organizationIds = null;\n\t\t\tlong[] roleIds = null;\n\t\t\tlong[] userGroupIds = null;\n\t\t\tboolean sendEmail = false;\n\n\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\tuser = UserLocalServiceUtil.addUser(\n\t\t\t\tcreatorUserId, companyId, autoPassword, password1, password2,\n\t\t\t\tautoScreenName, screenName, emailAddress, facebookId, openId,\n\t\t\t\tlocale, firstName, middleName, lastName, prefixId, suffixId,\n\t\t\t\tmale, birthdayMonth, birthdayDay, birthdayYear, jobTitle,\n\t\t\t\tgroupIds, organizationIds, roleIds, userGroupIds, sendEmail,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\tsession.setAttribute(WebKeys.OPEN_ID_LOGIN, new Long(user.getUserId()));\n\n\t\treturn null;\n\t}","id":69213,"modified_method":"protected String readOpenIdResponse(\n\t\t\tThemeDisplay themeDisplay, ActionRequest actionRequest,\n\t\t\tActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tactionRequest);\n\t\tHttpSession session = request.getSession();\n\n\t\tConsumerManager manager = OpenIdUtil.getConsumerManager();\n\n\t\tParameterList params = new ParameterList(\n\t\t\tactionRequest.getParameterMap());\n\n\t\tDiscoveryInformation discovered =\n\t\t\t(DiscoveryInformation)session.getAttribute(WebKeys.OPEN_ID_DISCO);\n\n\t\tif (discovered == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tString receivingUrl = ParamUtil.getString(\n\t\t\tactionRequest, \"openid.return_to\");\n\n\t\tVerificationResult verification = manager.verify(\n\t\t\treceivingUrl, params, discovered);\n\n\t\tIdentifier verified = verification.getVerifiedId();\n\n\t\tif (verified == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tAuthSuccess authSuccess = (AuthSuccess)verification.getAuthResponse();\n\n\t\tString firstName = null;\n\t\tString lastName = null;\n\t\tString emailAddress = null;\n\n\t\tif (authSuccess.hasExtension(SRegMessage.OPENID_NS_SREG)) {\n\t\t\tMessageExtension ext = authSuccess.getExtension(\n\t\t\t\tSRegMessage.OPENID_NS_SREG);\n\n\t\t\tif (ext instanceof SRegResponse) {\n\t\t\t\tSRegResponse sregResp = (SRegResponse)ext;\n\n\t\t\t\tString fullName = GetterUtil.getString(\n\t\t\t\t\tsregResp.getAttributeValue(_OPEN_ID_ATTR_FULLNAME));\n\n\t\t\t\tString[] names = splitName(fullName);\n\n\t\t\t\tif (names != null) {\n\t\t\t\t\tfirstName = names[0];\n\t\t\t\t\tlastName = names[1];\n\t\t\t\t}\n\n\t\t\t\temailAddress = sregResp.getAttributeValue(_OPEN_ID_ATTR_EMAIL);\n\t\t\t}\n\t\t}\n\n\t\tif (authSuccess.hasExtension(AxMessage.OPENID_NS_AX)) {\n\t\t\tMessageExtension ext = authSuccess.getExtension(\n\t\t\t\tAxMessage.OPENID_NS_AX);\n\n\t\t\tif (ext instanceof FetchResponse) {\n\t\t\t\tFetchResponse fetchResp = (FetchResponse)ext;\n\n\t\t\t\tURL endpoint = discovered.getOPEndpoint();\n\n\t\t\t\tString openIdHost = getOpenIdHostType(endpoint);\n\n\t\t\t\tString[] openIdAXTypes = PropsUtil.getArray(\n\t\t\t\t\tPropsKeys.OPEN_ID_AX_TYPES, new Filter(openIdHost));\n\n\t\t\t\tfor (String openIdAXType : openIdAXTypes) {\n\t\t\t\t\tif (openIdAXType.equals(_OPEN_ID_ATTR_EMAIL)) {\n\t\t\t\t\t\tif (Validator.isNull(emailAddress)) {\n\t\t\t\t\t\t\temailAddress = getFirstValue(\n\t\t\t\t\t\t\t\tfetchResp.getAttributeValues(\n\t\t\t\t\t\t\t\t\t_OPEN_ID_ATTR_EMAIL));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (openIdAXType.equals(_OPEN_ID_ATTR_FIRSTNAME)) {\n\t\t\t\t\t\tif (Validator.isNull(firstName)) {\n\t\t\t\t\t\t\tfirstName = getFirstValue(\n\t\t\t\t\t\t\t\tfetchResp.getAttributeValues(\n\t\t\t\t\t\t\t\t\t_OPEN_ID_ATTR_FIRSTNAME));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (openIdAXType.equals(_OPEN_ID_ATTR_FULLNAME)) {\n\t\t\t\t\t\tString fullName = fetchResp.getAttributeValue(\n\t\t\t\t\t\t\t_OPEN_ID_ATTR_FULLNAME);\n\n\t\t\t\t\t\tString[] names = splitName(fullName);\n\n\t\t\t\t\t\tif (names != null) {\n\t\t\t\t\t\t\tif (Validator.isNull(firstName)) {\n\t\t\t\t\t\t\t\tfirstName = names[0];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (Validator.isNull(lastName)) {\n\t\t\t\t\t\t\t\tlastName = names[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (openIdAXType.equals(_OPEN_ID_ATTR_LASTNAME)) {\n\t\t\t\t\t\tif (Validator.isNull(lastName)) {\n\t\t\t\t\t\t\tlastName = getFirstValue(\n\t\t\t\t\t\t\t\tfetchResp.getAttributeValues(\n\t\t\t\t\t\t\t\t\t_OPEN_ID_ATTR_LASTNAME));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tString openId = OpenIdUtil.normalize(authSuccess.getIdentity());\n\n\t\tUser user = null;\n\n\t\ttry {\n\t\t\tuser = UserLocalServiceUtil.getUserByOpenId(\n\t\t\t\tthemeDisplay.getCompanyId(), openId);\n\t\t}\n\t\tcatch (NoSuchUserException nsue) {\n\t\t\tif (Validator.isNull(firstName) || Validator.isNull(lastName) ||\n\t\t\t\tValidator.isNull(emailAddress)) {\n\n\t\t\t\tSessionMessages.add(request, \"missingOpenIdUserInformation\");\n\n\t\t\t\tif (_log.isInfoEnabled()) {\n\t\t\t\t\t_log.info(\n\t\t\t\t\t\t\"The OpenID provider did not send the required \" +\n\t\t\t\t\t\t\t\"attributes to create an account\");\n\t\t\t\t}\n\n\t\t\t\tString createAccountURL = PortalUtil.getCreateAccountURL(\n\t\t\t\t\trequest, themeDisplay);\n\n\t\t\t\tcreateAccountURL = HttpUtil.setParameter(\n\t\t\t\t\tcreateAccountURL, \"openId\", openId);\n\n\t\t\t\tsession.setAttribute(\n\t\t\t\t\tWebKeys.OPEN_ID_LOGIN_PENDING, Boolean.TRUE);\n\n\t\t\t\treturn createAccountURL;\n\t\t\t}\n\n\t\t\tlong creatorUserId = 0;\n\t\t\tlong companyId = themeDisplay.getCompanyId();\n\t\t\tboolean autoPassword = false;\n\t\t\tString password1 = PwdGenerator.getPassword();\n\t\t\tString password2 = password1;\n\t\t\tboolean autoScreenName = true;\n\t\t\tString screenName = StringPool.BLANK;\n\t\t\tlong facebookId = 0;\n\t\t\tLocale locale = themeDisplay.getLocale();\n\t\t\tString middleName = StringPool.BLANK;\n\t\t\tint prefixId = 0;\n\t\t\tint suffixId = 0;\n\t\t\tboolean male = true;\n\t\t\tint birthdayMonth = Calendar.JANUARY;\n\t\t\tint birthdayDay = 1;\n\t\t\tint birthdayYear = 1970;\n\t\t\tString jobTitle = StringPool.BLANK;\n\t\t\tlong[] groupIds = null;\n\t\t\tlong[] organizationIds = null;\n\t\t\tlong[] roleIds = null;\n\t\t\tlong[] userGroupIds = null;\n\t\t\tboolean sendEmail = false;\n\n\t\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\t\tuser = UserLocalServiceUtil.addUser(\n\t\t\t\tcreatorUserId, companyId, autoPassword, password1, password2,\n\t\t\t\tautoScreenName, screenName, emailAddress, facebookId, openId,\n\t\t\t\tlocale, firstName, middleName, lastName, prefixId, suffixId,\n\t\t\t\tmale, birthdayMonth, birthdayDay, birthdayYear, jobTitle,\n\t\t\t\tgroupIds, organizationIds, roleIds, userGroupIds, sendEmail,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\tsession.setAttribute(WebKeys.OPEN_ID_LOGIN, new Long(user.getUserId()));\n\n\t\treturn null;\n\t}","commit_id":"4e4e991233f309d4178b289c381e9d4508b82da4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void sendOpenIdRequest(\n\t\t\tThemeDisplay themeDisplay, ActionRequest actionRequest,\n\t\t\tActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tactionRequest);\n\t\tHttpServletResponse response = PortalUtil.getHttpServletResponse(\n\t\t\tactionResponse);\n\t\tHttpSession session = request.getSession();\n\n\t\tActionResponseImpl actionResponseImpl =\n\t\t\t(ActionResponseImpl)actionResponse;\n\n\t\tString openId = ParamUtil.getString(actionRequest, \"openId\");\n\n\t\tPortletURL portletURL = actionResponseImpl.createActionURL();\n\n\t\tportletURL.setParameter(\"struts_action\", \"/login/open_id\");\n\t\tportletURL.setParameter(Constants.CMD, Constants.READ);\n\t\tportletURL.setParameter(\"saveLastPath\", \"0\");\n\n\t\tConsumerManager manager = OpenIdUtil.getConsumerManager();\n\n\t\tList<DiscoveryInformation> discoveries = manager.discover(openId);\n\n\t\tDiscoveryInformation discovered = manager.associate(discoveries);\n\n\t\tsession.setAttribute(WebKeys.OPEN_ID_DISCO, discovered);\n\n\t\tAuthRequest authRequest = manager.authenticate(\n\t\t\tdiscovered, portletURL.toString(), themeDisplay.getPortalURL());\n\n\t\ttry {\n\t\t\tUserLocalServiceUtil.getUserByOpenId(\n\t\t\t\tthemeDisplay.getCompanyId(), openId);\n\t\t}\n\t\tcatch (NoSuchUserException nsue) {\n\t\t\tString screenName = OpenIdUtil.getScreenName(openId);\n\n\t\t\ttry {\n\t\t\t\tUser user = UserLocalServiceUtil.getUserByScreenName(\n\t\t\t\t\tthemeDisplay.getCompanyId(), screenName);\n\n\t\t\t\tUserLocalServiceUtil.updateOpenId(user.getUserId(), openId);\n\t\t\t}\n\t\t\tcatch (NoSuchUserException nsue2) {\n\t\t\t\tFetchRequest fetch = FetchRequest.createFetchRequest();\n\n\t\t\t\tURL endpoint = discovered.getOPEndpoint();\n\n\t\t\t\tString openIdProvider = \"default\";\n\n\t\t\t\tif (isYahooOpenId(endpoint)) {\n\t\t\t\t\topenIdProvider = \"yahoo\";\n\n\t\t\t\t\tfetch.addAttribute(\n\t\t\t\t\t\t_OPEN_ID_ATTR_EMAIL,\n\t\t\t\t\t\tPropsUtil.get(\n\t\t\t\t\t\t\tPropsKeys.OPEN_ID_AX_TYPE_EMAIL,\n\t\t\t\t\t\t\tnew Filter(openIdProvider)), true);\n\n\t\t\t\t\tfetch.addAttribute(\n\t\t\t\t\t\t_OPEN_ID_ATTR_FULLNAME,\n\t\t\t\t\t\tPropsUtil.get(\n\t\t\t\t\t\t\tPropsKeys.OPEN_ID_AX_TYPE_FULL_NAME,\n\t\t\t\t\t\t\t\tnew Filter(openIdProvider)), true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfetch.addAttribute(\n\t\t\t\t\t\t_OPEN_ID_ATTR_EMAIL,\n\t\t\t\t\t\tPropsUtil.get(\n\t\t\t\t\t\t\tPropsKeys.OPEN_ID_AX_TYPE_EMAIL,\n\t\t\t\t\t\t\tnew Filter(openIdProvider)), true);\n\n\t\t\t\t\tfetch.addAttribute(\n\t\t\t\t\t\t_OPEN_ID_ATTR_FIRSTNAME,\n\t\t\t\t\t\tPropsUtil.get(\n\t\t\t\t\t\t\tPropsKeys.OPEN_ID_AX_TYPE_FIRST_NAME,\n\t\t\t\t\t\t\tnew Filter(openIdProvider)), true);\n\n\t\t\t\t\tfetch.addAttribute(\n\t\t\t\t\t\t_OPEN_ID_ATTR_LASTNAME,\n\t\t\t\t\t\tPropsUtil.get(\n\t\t\t\t\t\t\tPropsKeys.OPEN_ID_AX_TYPE_LAST_NAME,\n\t\t\t\t\t\t\tnew Filter(openIdProvider)), true);\n\t\t\t\t}\n\n\t\t\t\tauthRequest.addExtension(fetch);\n\n\t\t\t\tSRegRequest sregRequest = SRegRequest.createFetchRequest();\n\n\t\t\t\tsregRequest.addAttribute(_OPEN_ID_ATTR_FULLNAME, true);\n\t\t\t\tsregRequest.addAttribute(_OPEN_ID_ATTR_EMAIL, true);\n\n\t\t\t\tauthRequest.addExtension(sregRequest);\n\t\t\t}\n\t\t}\n\n\t\tresponse.sendRedirect(authRequest.getDestinationUrl(true));\n\t}","id":69214,"modified_method":"protected void sendOpenIdRequest(\n\t\t\tThemeDisplay themeDisplay, ActionRequest actionRequest,\n\t\t\tActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tactionRequest);\n\t\tHttpServletResponse response = PortalUtil.getHttpServletResponse(\n\t\t\tactionResponse);\n\t\tHttpSession session = request.getSession();\n\n\t\tActionResponseImpl actionResponseImpl =\n\t\t\t(ActionResponseImpl)actionResponse;\n\n\t\tString openId = ParamUtil.getString(actionRequest, \"openId\");\n\n\t\tPortletURL portletURL = actionResponseImpl.createActionURL();\n\n\t\tportletURL.setParameter(\"struts_action\", \"/login/open_id\");\n\t\tportletURL.setParameter(Constants.CMD, Constants.READ);\n\t\tportletURL.setParameter(\"saveLastPath\", \"0\");\n\n\t\tConsumerManager manager = OpenIdUtil.getConsumerManager();\n\n\t\tList<DiscoveryInformation> discoveries = manager.discover(openId);\n\n\t\tDiscoveryInformation discovered = manager.associate(discoveries);\n\n\t\tsession.setAttribute(WebKeys.OPEN_ID_DISCO, discovered);\n\n\t\tAuthRequest authRequest = manager.authenticate(\n\t\t\tdiscovered, portletURL.toString(), themeDisplay.getPortalURL());\n\n\t\ttry {\n\t\t\tUserLocalServiceUtil.getUserByOpenId(\n\t\t\t\tthemeDisplay.getCompanyId(), openId);\n\t\t}\n\t\tcatch (NoSuchUserException nsue) {\n\t\t\tString screenName = OpenIdUtil.getScreenName(openId);\n\n\t\t\ttry {\n\t\t\t\tUser user = UserLocalServiceUtil.getUserByScreenName(\n\t\t\t\t\tthemeDisplay.getCompanyId(), screenName);\n\n\t\t\t\tUserLocalServiceUtil.updateOpenId(user.getUserId(), openId);\n\t\t\t}\n\t\t\tcatch (NoSuchUserException nsue2) {\n\t\t\t\tFetchRequest fetch = FetchRequest.createFetchRequest();\n\n\t\t\t\tURL endpoint = discovered.getOPEndpoint();\n\n\t\t\t\tString openIdHost = getOpenIdHostType(endpoint);\n\n\t\t\t\tString[] openIdAXTypes = PropsUtil.getArray\n\t\t\t\t\t(PropsKeys.OPEN_ID_AX_TYPES, new Filter(openIdHost));\n\n\t\t\t\tfor (String openIdAXType : openIdAXTypes) {\n\t\t\t\t\tif (openIdAXType.equals(_OPEN_ID_ATTR_EMAIL)) {\n\t\t\t\t\t\tfetch.addAttribute(\n\t\t\t\t\t\t\t_OPEN_ID_ATTR_EMAIL,\n\t\t\t\t\t\t\tPropsUtil.get(\n\t\t\t\t\t\t\t\tPropsKeys.OPEN_ID_AX_TYPE_EMAIL,\n\t\t\t\t\t\t\t\tnew Filter(openIdHost)), true);\n\t\t\t\t\t}\n\t\t\t\t\telse if (openIdAXType.equals(_OPEN_ID_ATTR_FIRSTNAME)) {\n\t\t\t\t\t\tfetch.addAttribute(\n\t\t\t\t\t\t\t_OPEN_ID_ATTR_FIRSTNAME,\n\t\t\t\t\t\t\tPropsUtil.get(\n\t\t\t\t\t\t\t\tPropsKeys.OPEN_ID_AX_TYPE_FIRST_NAME,\n\t\t\t\t\t\t\t\tnew Filter(openIdHost)), true);\n\t\t\t\t\t}\n\t\t\t\t\telse if (openIdAXType.equals(_OPEN_ID_ATTR_FULLNAME)) {\n\t\t\t\t\t\tfetch.addAttribute(\n\t\t\t\t\t\t\t_OPEN_ID_ATTR_FULLNAME,\n\t\t\t\t\t\t\tPropsUtil.get(\n\t\t\t\t\t\t\t\tPropsKeys.OPEN_ID_AX_TYPE_FULL_NAME,\n\t\t\t\t\t\t\t\t\tnew Filter(openIdHost)), true);\n\t\t\t\t\t}\n\t\t\t\t\telse if (openIdAXType.equals(_OPEN_ID_ATTR_LASTNAME)) {\n\t\t\t\t\t\tfetch.addAttribute(\n\t\t\t\t\t\t\t_OPEN_ID_ATTR_LASTNAME,\n\t\t\t\t\t\t\tPropsUtil.get(\n\t\t\t\t\t\t\t\tPropsKeys.OPEN_ID_AX_TYPE_LAST_NAME,\n\t\t\t\t\t\t\t\tnew Filter(openIdHost)), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tauthRequest.addExtension(fetch);\n\n\t\t\t\tSRegRequest sregRequest = SRegRequest.createFetchRequest();\n\n\t\t\t\tsregRequest.addAttribute(_OPEN_ID_ATTR_FULLNAME, true);\n\t\t\t\tsregRequest.addAttribute(_OPEN_ID_ATTR_EMAIL, true);\n\n\t\t\t\tauthRequest.addExtension(sregRequest);\n\t\t\t}\n\t\t}\n\n\t\tresponse.sendRedirect(authRequest.getDestinationUrl(true));\n\t}","commit_id":"4e4e991233f309d4178b289c381e9d4508b82da4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Concrete subclasses can override this to provide custom lookup behaviour\n\t * for <code>CrossReference<\/code>. This implementation delegates to the\n\t * injected LinkingService\n\t * \n\t * @return a list of <code>ICompletionProposal<\/code> matching the given\n\t *         assignment\n\t */\n\tprotected List<? extends ICompletionProposal> lookupCrossReference(CrossReference crossReference, EObject model,\n\t\t\tint offset) {\n\t\t\n\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\tif (linkingService != null) {\n\t\t\tEObject semanticModel = model instanceof AbstractNode ? NodeUtil.getNearestSemanticObject((AbstractNode) model) : model;\n\t\t\tList<Pair<String, URI>> candidates = linkingService.getLinkCandidates(semanticModel, crossReference, \"\");\n\t\t\tfor (Pair<String, URI> candidate : candidates) {\n\t\t\t\tcompletionProposalList.add(createCompletionProposal(candidate.getFirstElement(), offset));\n\t\t\t}\n\t\t}\n\n\t\treturn completionProposalList;\n\t}","id":69215,"modified_method":"/**\n\t * Concrete subclasses can override this to provide custom lookup behaviour\n\t * for <code>CrossReference<\/code>. This implementation delegates to the\n\t * injected LinkingService\n\t * \n\t * @return a list of <code>ICompletionProposal<\/code> matching the given\n\t *         assignment\n\t */\n\tprotected List<? extends ICompletionProposal> lookupCrossReference(CrossReference crossReference, EObject model,\n\t\t\tint offset) {\n\t\t\n\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\tif (linkingService != null && model instanceof AbstractNode) {\n\t\t\tEObject semanticModel = NodeUtil.getNearestSemanticObject((AbstractNode) model);\n\t\t\tList<Pair<String, URI>> candidates = linkingService.getLinkCandidates(semanticModel, crossReference, \"\");\n\t\t\tfor (Pair<String, URI> candidate : candidates) {\n\t\t\t\tcompletionProposalList.add(createCompletionProposal(candidate.getFirstElement(), offset));\n\t\t\t}\n\t\t}\n\n\t\treturn completionProposalList;\n\t}","commit_id":"ca33b0c79dbc02e34334570eb2bb6ca77bb68bca","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * Concrete subclasses can override this to provide custom lookup behaviour\n\t * for <code>CrossReference<\/code>. This implementation delegates to the\n\t * injected LinkingService\n\t * \n\t * @return a list of <code>ICompletionProposal<\/code> matching the given\n\t *         assignment\n\t */\n\tprotected List<? extends ICompletionProposal> lookupCrossReference(CrossReference crossReference, EObject model,\n\t\t\tint offset) {\n\t\t\n\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\tif (linkingService != null) {\n\t\t\tEObject semanticModel = model instanceof AbstractNode ? NodeUtil.getNearestSemanticObject((AbstractNode) model) : model;\n\t\t\tList<Pair<String, URI>> candidates = linkingService.getLinkCandidates(semanticModel, crossReference, \"\");\n\t\t\tfor (Pair<String, URI> candidate : candidates) {\n\t\t\t\tcompletionProposalList.add(createCompletionProposal(candidate.getFirstElement(), offset));\n\t\t\t}\n\t\t}\n\n\t\treturn completionProposalList;\n\t}","id":69216,"modified_method":"/**\n\t * Concrete subclasses can override this to provide custom lookup behaviour\n\t * for <code>CrossReference<\/code>. This implementation delegates to the\n\t * injected LinkingService\n\t * \n\t * @return a list of <code>ICompletionProposal<\/code> matching the given\n\t *         assignment\n\t */\n\tprotected List<? extends ICompletionProposal> lookupCrossReference(CrossReference crossReference, EObject model,\n\t\t\tint offset) {\n\t\t\n\t\tList<ICompletionProposal> completionProposalList = new ArrayList<ICompletionProposal>();\n\n\t\tif (linkingService != null && model instanceof AbstractNode) {\n\t\t\tEObject semanticModel = NodeUtil.getNearestSemanticObject((AbstractNode) model);\n\t\t\tList<Pair<String, URI>> candidates = linkingService.getLinkCandidates(semanticModel, crossReference, \"\");\n\t\t\tfor (Pair<String, URI> candidate : candidates) {\n\t\t\t\tcompletionProposalList.add(createCompletionProposal(candidate.getFirstElement(), offset));\n\t\t\t}\n\t\t}\n\n\t\treturn completionProposalList;\n\t}","commit_id":"f3c222b4c0a188b12e388e74a298b260018f6457","url":"https://github.com/eclipse/xtext"},{"original_method":"public VariantCallContext map(RefMetaDataTracker tracker, ReferenceContext refContext, AlignmentContext rawContext) {\n        Collection<VariantContext> VCs = tracker.getVariantContexts(refContext, \"allele\", null, rawContext.getLocation(), true, false);\n        if ( VCs.size() == 0 )\n            return null;\n        if ( VCs.size() > 1 ) {\n            logger.warn(\"Multiple records seen in the 'allele' ROD at position \" + rawContext.getLocation() + \"; skipping...\");\n            return null;\n        }\n        VariantContext vc = VCs.iterator().next();\n        if ( !vc.isBiallelic() ) {\n            logger.warn(\"The record in the 'allele' ROD at position \" + rawContext.getLocation() + \" is not biallelic; skipping...\");\n            return null;\n        }\n\n        return new VariantCallContext(UG_engine.calculateLikelihoods(tracker, refContext, rawContext, vc.getAlternateAllele(0), true), refContext.getBase(), true);\n    }","id":69217,"modified_method":"public VariantCallContext map(RefMetaDataTracker tracker, ReferenceContext refContext, AlignmentContext rawContext) {\n        Collection<VariantContext> VCs = tracker.getVariantContexts(refContext, \"allele\", null, rawContext.getLocation(), true, false);\n        if ( VCs.size() == 0 )\n            return null;\n        if ( VCs.size() > 1 ) {\n            logger.warn(\"Multiple records seen in the 'allele' ROD at position \" + rawContext.getLocation() + \"; skipping...\");\n            return null;\n        }\n        VariantContext vc = VCs.iterator().next();\n        if ( !vc.isBiallelic() ) {\n            logger.warn(\"The record in the 'allele' ROD at position \" + rawContext.getLocation() + \" is not biallelic; skipping...\");\n            return null;\n        }\n\n        VariantContext call = UG_engine.calculateLikelihoods(tracker, refContext, rawContext, vc.getAlternateAllele(0), true);\n        return call == null ? null : new VariantCallContext(call, refContext.getBase(), true);\n    }","commit_id":"2830dc70b7c6dde5df797477b671169192eca241","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void mutate(MutableModelNode modelNode, TaskContainer container, Inputs inputs) {\n            BinaryContainer binaries = inputs.get(0, ModelType.of(BinaryContainer.class)).getInstance();\n            for (T binary : binaries.withType(binaryType)) {\n                NamedEntityInstantiator<Task> instantiator = new Instantiator(binary, container);\n                DefaultCollectionBuilder<Task> collectionBuilder = new DefaultCollectionBuilder<Task>(\n                        instantiator,\n                        new SimpleModelRuleDescriptor(\"Project.<init>.tasks()\"),\n                        modelNode\n                );\n\n                invoke(inputs, collectionBuilder, binary, binaries);\n            }\n        }","id":69218,"modified_method":"public void mutate(MutableModelNode modelNode, TaskContainer container, Inputs inputs) {\n            BinaryContainer binaries = inputs.get(0, ModelType.of(BinaryContainer.class)).getInstance();\n            for (T binary : binaries.withType(binaryType)) {\n                NamedEntityInstantiator<Task> instantiator = new Instantiator(binary, container);\n                DefaultCollectionBuilder<Task> collectionBuilder = new DefaultCollectionBuilder<Task>(\n                        Task.class,\n                        instantiator,\n                        container,\n                        new SimpleModelRuleDescriptor(\"Project.<init>.tasks()\"),\n                        modelNode\n                );\n\n                invoke(inputs, collectionBuilder, binary, binaries);\n            }\n        }","commit_id":"aad4bd238a0c25c56bfbfadf6f5e7f8e2327310c","url":"https://github.com/gradle/gradle"},{"original_method":"public void mutate(MutableModelNode modelNode, final BinaryContainer binaries, final Inputs inputs) {\n            ComponentSpecContainer componentSpecs = inputs.get(0, ModelType.of(ComponentSpecContainer.class)).getInstance();\n\n            for (final ComponentSpec componentSpec : componentSpecs.withType(componentType)) {\n                NamedEntityInstantiator<S> namedEntityInstantiator = new Instantiator<S>(binaryType, componentSpec, binaries);\n                CollectionBuilder<S> collectionBuilder = new DefaultCollectionBuilder<S>(\n                        namedEntityInstantiator,\n                        new SimpleModelRuleDescriptor(\"Project.<init>.binaries()\"),\n                        modelNode);\n                invoke(inputs, collectionBuilder, componentSpec, componentSpecs);\n            }\n        }","id":69219,"modified_method":"public void mutate(MutableModelNode modelNode, final BinaryContainer binaries, final Inputs inputs) {\n            ComponentSpecContainer componentSpecs = inputs.get(0, ModelType.of(ComponentSpecContainer.class)).getInstance();\n\n            for (final ComponentSpec componentSpec : componentSpecs.withType(componentType)) {\n                NamedEntityInstantiator<S> namedEntityInstantiator = new Instantiator<S>(binaryType, componentSpec, binaries);\n                CollectionBuilder<S> collectionBuilder = new DefaultCollectionBuilder<S>(\n                        binaryType,\n                        namedEntityInstantiator,\n                        binaries,\n                        new SimpleModelRuleDescriptor(\"Project.<init>.binaries()\"),\n                        modelNode);\n                invoke(inputs, collectionBuilder, componentSpec, componentSpecs);\n            }\n        }","commit_id":"aad4bd238a0c25c56bfbfadf6f5e7f8e2327310c","url":"https://github.com/gradle/gradle"},{"original_method":"public <S extends T> void create(final String name, final Class<S> type, Action<? super S> configAction) {\n        doCreate(name, ModelType.of(type), configAction, new CustomTypeFactory<S>(name, type));\n    }","id":69220,"modified_method":"public <S extends T> void create(final String name, final Class<S> type, final Action<? super S> configAction) {\n        doCreate(name, ModelType.of(type), new Factory<S>() {\n            @Override\n            public S create() {\n                S element = instantiator.create(name, type);\n                configAction.execute(element);\n                target.add(element);\n                return element;\n            }\n        });\n    }","commit_id":"aad4bd238a0c25c56bfbfadf6f5e7f8e2327310c","url":"https://github.com/gradle/gradle"},{"original_method":"public <S extends T> void create(String name, Class<S> type) {\n        doCreate(name, ModelType.of(type), new CustomTypeFactory<S>(name, type));\n    }","id":69221,"modified_method":"public <S extends T> void create(final String name, final Class<S> type) {\n        doCreate(name, ModelType.of(type), new Factory<S>() {\n            @Override\n            public S create() {\n                S element = instantiator.create(name, type);\n                target.add(element);\n                return element;\n            }\n        });\n    }","commit_id":"aad4bd238a0c25c56bfbfadf6f5e7f8e2327310c","url":"https://github.com/gradle/gradle"},{"original_method":"public void create(String name, Action<? super T> configAction) {\n        doCreate(name, instantiator.getType(), configAction, new DefaultTypeFactory(name));\n    }","id":69222,"modified_method":"public void create(String name, Action<? super T> configAction) {\n        create(name, elementType, configAction);\n    }","commit_id":"aad4bd238a0c25c56bfbfadf6f5e7f8e2327310c","url":"https://github.com/gradle/gradle"},{"original_method":"public DefaultCollectionBuilder(NamedEntityInstantiator<T> instantiator, ModelRuleDescriptor sourceDescriptor, MutableModelNode modelNode) {\n        this.instantiator = instantiator;\n        this.sourceDescriptor = sourceDescriptor;\n        this.modelNode = modelNode;\n    }","id":69223,"modified_method":"public DefaultCollectionBuilder(Class<T> elementType, NamedEntityInstantiator<? super T> instantiator, Collection<? super T> target, ModelRuleDescriptor sourceDescriptor, MutableModelNode modelNode) {\n        this.elementType = elementType;\n        this.instantiator = instantiator;\n        this.target = target;\n        this.sourceDescriptor = sourceDescriptor;\n        this.modelNode = modelNode;\n    }","commit_id":"aad4bd238a0c25c56bfbfadf6f5e7f8e2327310c","url":"https://github.com/gradle/gradle"},{"original_method":"public void create(final String name) {\n        doCreate(name, instantiator.getType(), new DefaultTypeFactory(name));\n    }","id":69224,"modified_method":"public void create(final String name) {\n        create(name, elementType);\n    }","commit_id":"aad4bd238a0c25c56bfbfadf6f5e7f8e2327310c","url":"https://github.com/gradle/gradle"},{"original_method":"private <T, S extends M> ModelView<? extends T> toView(ModelRuleDescriptor sourceDescriptor, MutableModelNode node, Class<S> itemType, C container) {\n        CollectionBuilder<S> builder = new DefaultCollectionBuilder<S>(new EntityInstantiator<S>(itemType, container), sourceDescriptor, node);\n        ModelType<CollectionBuilder<S>> viewType = new ModelType.Builder<CollectionBuilder<S>>() {\n        }.where(new ModelType.Parameter<S>() {\n        }, ModelType.of(itemType)).build();\n        CollectionBuilderModelView<S> view = new CollectionBuilderModelView<S>(instantiator, viewType, builder, sourceDescriptor);\n        @SuppressWarnings(\"unchecked\") ModelView<T> cast = (ModelView<T>) view;\n        return cast;\n    }","id":69225,"modified_method":"private <T, S extends M> ModelView<? extends T> toView(ModelRuleDescriptor sourceDescriptor, MutableModelNode node, Class<S> itemType, C container) {\n        CollectionBuilder<S> builder = new DefaultCollectionBuilder<S>(itemType, container.getEntityInstantiator(), container, sourceDescriptor, node);\n        ModelType<CollectionBuilder<S>> viewType = new ModelType.Builder<CollectionBuilder<S>>() {\n        }.where(new ModelType.Parameter<S>() {\n        }, ModelType.of(itemType)).build();\n        CollectionBuilderModelView<S> view = new CollectionBuilderModelView<S>(instantiator, viewType, builder, sourceDescriptor);\n        @SuppressWarnings(\"unchecked\") ModelView<T> cast = (ModelView<T>) view;\n        return cast;\n    }","commit_id":"aad4bd238a0c25c56bfbfadf6f5e7f8e2327310c","url":"https://github.com/gradle/gradle"},{"original_method":"public static void setupMethodParameters(final PsiMethod method, final TemplateBuilder builder, final PsiElement contextElement,\n                                           final PsiSubstitutor substitutor, final PsiExpression[] arguments)\n    throws IncorrectOperationException {\n    PsiManager psiManager = method.getManager();\n    PsiElementFactory factory = JavaPsiFacade.getInstance(psiManager.getProject()).getElementFactory();\n\n    PsiParameterList parameterList = method.getParameterList();\n\n    GlobalSearchScope resolveScope = method.getResolveScope();\n\n    GuessTypeParameters guesser = new GuessTypeParameters(factory);\n\n    final boolean isInterface = method.getContainingClass().isInterface();\n    for (int i = 0; i < arguments.length; i++) {\n      PsiExpression arg = arguments[i];\n\n      SuggestedNameInfo suggestedInfo = JavaCodeStyleManager.getInstance(psiManager.getProject()).suggestVariableName(\n        VariableKind.PARAMETER, null, arg, null);\n      @NonNls String[] names = suggestedInfo.names; //TODO: callback about used name\n\n      if (names.length == 0) {\n        names = new String[]{\"p\" + i};\n      }\n\n      PsiType argType = arg.getType();\n      if (argType == null || argType == PsiType.NULL) {\n        argType = PsiType.getJavaLangObject(psiManager, resolveScope);\n      }\n\n      PsiParameter parameter = factory.createParameter(names[0], argType);\n      if (isInterface) {\n        PsiUtil.setModifierProperty(parameter, PsiModifier.FINAL, false);\n      }\n      parameter = (PsiParameter) parameterList.add(parameter);\n\n      ExpectedTypeInfo info = ExpectedTypesProvider.createInfo(argType, ExpectedTypeInfo.TYPE_OR_SUPERTYPE, argType, TailType.NONE);\n\n      PsiElement context = PsiTreeUtil.getParentOfType(contextElement, PsiClass.class, PsiMethod.class);\n      guesser.setupTypeElement(parameter.getTypeElement(), new ExpectedTypeInfo[]{info},\n                               substitutor, builder, context, method.getContainingClass());\n\n      Expression expression = new ParameterNameExpression(names);\n      builder.replaceElement(parameter.getNameIdentifier(), expression);\n    }\n  }","id":69226,"modified_method":"public static void setupMethodParameters(final PsiMethod method, final TemplateBuilder builder, final PsiElement contextElement,\n                                           final PsiSubstitutor substitutor, final PsiExpression[] arguments) {\n    setupMethodParameters(method, builder, contextElement, substitutor, ContainerUtil.map2List(arguments, new Function<PsiExpression, Pair<PsiExpression, PsiType>>() {\n      public Pair<PsiExpression, PsiType> fun(PsiExpression psiExpression) {\n        return Pair.create(psiExpression, null);\n      }\n    }));\n  }","commit_id":"7f2fbca45931c56be7aea5f3a40a52471a4b2258","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void invokeImpl(final PsiClass targetClass) {\n\n    if (targetClass == null) return;\n    PsiMethodCallExpression expression = getMethodCall();\n    if (expression == null) return;\n    final Project project = expression.getProject();\n    PsiReferenceExpression ref = expression.getMethodExpression();\n\n    if (isValidElement(expression)) return;\n\n    PsiClass parentClass = PsiTreeUtil.getParentOfType(expression, PsiClass.class);\n    PsiMember enclosingContext = PsiTreeUtil.getParentOfType(expression, PsiMethod.class, PsiField.class, PsiClassInitializer.class);\n\n    String methodName = ref.getReferenceName();\n    LOG.assertTrue(methodName != null);\n\n    try {\n      PsiElementFactory factory = JavaPsiFacade.getInstance(project).getElementFactory();\n\n      PsiMethod method = factory.createMethod(methodName, PsiType.VOID);\n\n      if (targetClass.equals(parentClass)) {\n        method = (PsiMethod)targetClass.addAfter(method, enclosingContext);\n      }\n      else {\n        PsiElement anchor = enclosingContext;\n        while (anchor != null && anchor.getParent() != null && !anchor.getParent().equals(targetClass)) {\n          anchor = anchor.getParent();\n        }\n        if (anchor != null && anchor.getParent() == null) anchor = null;\n        if (anchor != null) {\n          method = (PsiMethod)targetClass.addAfter(method, anchor);\n        }\n        else {\n          method = (PsiMethod)targetClass.add(method);\n        }\n      }\n\n      if (enclosingContext instanceof PsiMethod && methodName.equals(enclosingContext.getName()) &&\n          PsiTreeUtil.isAncestor(targetClass, parentClass, true)) {\n        FieldConflictsResolver.qualifyReference(ref, method, null);\n      }\n\n      PsiCodeBlock body = method.getBody();\n      assert body != null;\n      if (targetClass.isInterface()) {\n        body.delete();\n      }\n\n      setupVisibility(parentClass, targetClass, method.getModifierList());\n\n      if (shouldCreateStaticMember(expression.getMethodExpression(), targetClass) && !targetClass.isInterface()) {\n        PsiUtil.setModifierProperty(method, PsiModifier.STATIC, true);\n      }\n\n\n      final PsiElement context = PsiTreeUtil.getParentOfType(expression, PsiClass.class, PsiMethod.class);\n\n      method = CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(method);\n      if (method == null) return;\n\n      doCreate(targetClass, method, expression.getArgumentList().getExpressions(), context, getTargetSubstitutor(expression),\n               CreateFromUsageUtils.guessExpectedTypes(expression, true));\n    }\n    catch (IncorrectOperationException e) {\n      LOG.error(e);\n    }\n  }","id":69227,"modified_method":"protected void invokeImpl(final PsiClass targetClass) {\n\n    if (targetClass == null) return;\n    PsiMethodCallExpression expression = getMethodCall();\n    if (expression == null) return;\n    final Project project = expression.getProject();\n    PsiReferenceExpression ref = expression.getMethodExpression();\n\n    if (isValidElement(expression)) return;\n\n    PsiClass parentClass = PsiTreeUtil.getParentOfType(expression, PsiClass.class);\n    PsiMember enclosingContext = PsiTreeUtil.getParentOfType(expression, PsiMethod.class, PsiField.class, PsiClassInitializer.class);\n\n    String methodName = ref.getReferenceName();\n    LOG.assertTrue(methodName != null);\n\n    try {\n      PsiElementFactory factory = JavaPsiFacade.getInstance(project).getElementFactory();\n\n      PsiMethod method = factory.createMethod(methodName, PsiType.VOID);\n\n      if (targetClass.equals(parentClass)) {\n        method = (PsiMethod)targetClass.addAfter(method, enclosingContext);\n      }\n      else {\n        PsiElement anchor = enclosingContext;\n        while (anchor != null && anchor.getParent() != null && !anchor.getParent().equals(targetClass)) {\n          anchor = anchor.getParent();\n        }\n        if (anchor != null && anchor.getParent() == null) anchor = null;\n        if (anchor != null) {\n          method = (PsiMethod)targetClass.addAfter(method, anchor);\n        }\n        else {\n          method = (PsiMethod)targetClass.add(method);\n        }\n      }\n\n      if (enclosingContext instanceof PsiMethod && methodName.equals(enclosingContext.getName()) &&\n          PsiTreeUtil.isAncestor(targetClass, parentClass, true)) {\n        FieldConflictsResolver.qualifyReference(ref, method, null);\n      }\n\n      PsiCodeBlock body = method.getBody();\n      assert body != null;\n      if (targetClass.isInterface()) {\n        body.delete();\n      }\n\n      setupVisibility(parentClass, targetClass, method.getModifierList());\n\n      if (shouldCreateStaticMember(expression.getMethodExpression(), targetClass) && !targetClass.isInterface()) {\n        PsiUtil.setModifierProperty(method, PsiModifier.STATIC, true);\n      }\n\n      final PsiElement context = PsiTreeUtil.getParentOfType(expression, PsiClass.class, PsiMethod.class);\n\n      PsiExpression[] arguments = expression.getArgumentList().getExpressions();\n      doCreate(targetClass, method, ContainerUtil.map2List(arguments, new Function<PsiExpression, Pair<PsiExpression, PsiType>>() {\n        public Pair<PsiExpression, PsiType> fun(PsiExpression psiExpression) {\n          return Pair.create(psiExpression, null);\n        }\n      }), getTargetSubstitutor(expression), CreateFromUsageUtils.guessExpectedTypes(expression, true),\n               context);\n    }\n    catch (IncorrectOperationException e) {\n      LOG.error(e);\n    }\n  }","commit_id":"7f2fbca45931c56be7aea5f3a40a52471a4b2258","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void doCreate(PsiClass targetClass, PsiMethod method, PsiExpression[] expressions, @Nullable PsiElement context,\n                              PsiSubstitutor substitutor, ExpectedTypeInfo[] expectedTypes) {\n\n    final Project project = targetClass.getProject();\n    final PsiFile targetFile = targetClass.getContainingFile();\n    Document document = PsiDocumentManager.getInstance(project).getDocument(targetFile);\n\n    TemplateBuilder builder = new TemplateBuilder(method);\n\n    CreateFromUsageUtils.setupMethodParameters(method, builder, context, substitutor, expressions);\n    new GuessTypeParameters(JavaPsiFacade.getInstance(project).getElementFactory())\n      .setupTypeElement(method.getReturnTypeElement(), expectedTypes, substitutor, builder, context, targetClass);\n    PsiCodeBlock body = method.getBody();\n    assert body != null;\n    builder.setEndVariableAfter(targetClass.isInterface() ? method : body.getLBrace());\n    method = CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(method);\n    if (method == null) return;\n\n    assert document != null;\n    RangeMarker rangeMarker = document.createRangeMarker(method.getTextRange());\n    final Editor newEditor = positionCursor(project, targetFile, method);\n    Template template = builder.buildTemplate();\n    newEditor.getCaretModel().moveToOffset(rangeMarker.getStartOffset());\n    newEditor.getDocument().deleteString(rangeMarker.getStartOffset(), rangeMarker.getEndOffset());\n\n    if (!targetClass.isInterface()) {\n      startTemplate(newEditor, template, project, new TemplateEditingAdapter() {\n        public void templateFinished(Template template) {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              PsiDocumentManager.getInstance(project).commitDocument(newEditor.getDocument());\n              final int offset = newEditor.getCaretModel().getOffset();\n              PsiMethod method = PsiTreeUtil.findElementOfClassAtOffset(targetFile, offset - 1, PsiMethod.class, false);\n\n              if (method != null) {\n                try {\n                  CreateFromUsageUtils.setupMethodBody(method);\n                }\n                catch (IncorrectOperationException e) {\n                  LOG.error(e);\n                }\n\n                CreateFromUsageUtils.setupEditor(method, newEditor);\n              }\n            }\n          });\n        }\n      });\n    }\n    else {\n      startTemplate(newEditor, template, project);\n    }\n  }","id":69228,"modified_method":"public static void doCreate(PsiClass targetClass, PsiMethod method, List<Pair<PsiExpression, PsiType>> arguments, PsiSubstitutor substitutor,\n                              ExpectedTypeInfo[] expectedTypes, @Nullable PsiElement context) {\n\n    method = CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(method);\n\n    if (method == null) {\n      return;\n    }\n    final Project project = targetClass.getProject();\n    final PsiFile targetFile = targetClass.getContainingFile();\n    Document document = PsiDocumentManager.getInstance(project).getDocument(targetFile);\n\n    TemplateBuilder builder = new TemplateBuilder(method);\n\n    CreateFromUsageUtils.setupMethodParameters(method, builder, context, substitutor, arguments);\n    new GuessTypeParameters(JavaPsiFacade.getInstance(project).getElementFactory())\n      .setupTypeElement(method.getReturnTypeElement(), expectedTypes, substitutor, builder, context, targetClass);\n    PsiCodeBlock body = method.getBody();\n    assert body != null;\n    builder.setEndVariableAfter(targetClass.isInterface() ? method : body.getLBrace());\n    method = CodeInsightUtilBase.forcePsiPostprocessAndRestoreElement(method);\n    if (method == null) return;\n\n    assert document != null;\n    RangeMarker rangeMarker = document.createRangeMarker(method.getTextRange());\n    final Editor newEditor = positionCursor(project, targetFile, method);\n    Template template = builder.buildTemplate();\n    newEditor.getCaretModel().moveToOffset(rangeMarker.getStartOffset());\n    newEditor.getDocument().deleteString(rangeMarker.getStartOffset(), rangeMarker.getEndOffset());\n\n    if (!targetClass.isInterface()) {\n      startTemplate(newEditor, template, project, new TemplateEditingAdapter() {\n        public void templateFinished(Template template) {\n          ApplicationManager.getApplication().runWriteAction(new Runnable() {\n            public void run() {\n              PsiDocumentManager.getInstance(project).commitDocument(newEditor.getDocument());\n              final int offset = newEditor.getCaretModel().getOffset();\n              PsiMethod method = PsiTreeUtil.findElementOfClassAtOffset(targetFile, offset - 1, PsiMethod.class, false);\n\n              if (method != null) {\n                try {\n                  CreateFromUsageUtils.setupMethodBody(method);\n                }\n                catch (IncorrectOperationException e) {\n                  LOG.error(e);\n                }\n\n                CreateFromUsageUtils.setupEditor(method, newEditor);\n              }\n            }\n          });\n        }\n      });\n    }\n    else {\n      startTemplate(newEditor, template, project);\n    }\n  }","commit_id":"7f2fbca45931c56be7aea5f3a40a52471a4b2258","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setupTypeElement (PsiTypeElement typeElement, ExpectedTypeInfo[] infos, PsiSubstitutor substitutor,\n                                TemplateBuilder builder, @Nullable PsiElement context, PsiClass targetClass) {\n    LOG.assertTrue(typeElement.isValid());\n    ApplicationManager.getApplication().assertWriteAccessAllowed();\n\n    PsiManager manager = typeElement.getManager();\n    GlobalSearchScope scope = typeElement.getResolveScope();\n    Project project = manager.getProject();\n\n    if (infos.length == 1 && substitutor != null && substitutor != PsiSubstitutor.EMPTY) {\n      ExpectedTypeInfo info = infos[0];\n      Map<PsiTypeParameter, PsiType> map = substitutor.getSubstitutionMap();\n      PsiType[] vals = map.values().toArray(new PsiType[map.size()]);\n      PsiTypeParameter[] params = map.keySet().toArray(new PsiTypeParameter[map.size()]);\n\n      List<PsiType> types = matchingTypeParameters(vals, params, info);\n      if (!types.isEmpty()) {\n        types.addAll(Arrays.asList(ExpectedTypesProvider.processExpectedTypes(infos, new MyTypeVisitor(manager, scope), project)));\n        builder.replaceElement(typeElement, new TypeExpression(project, types.toArray(new PsiType[types.size()])));\n        return;\n      }\n      else {\n        PsiElementFactory factory = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();\n        PsiType type = info.getType();\n        PsiType defaultType = info.getDefaultType();\n        try {\n          PsiTypeElement inplaceTypeElement = ((PsiVariable)factory.createVariableDeclarationStatement(\"foo\", type, null).getDeclaredElements()[0]).getTypeElement();\n\n          PsiSubstitutor rawingSubstitutor = getRawingSubstitutor (context, targetClass);\n          int substitionResult = substituteToTypeParameters(typeElement, inplaceTypeElement, vals, params, builder, rawingSubstitutor, true);\n          if (substitionResult != SUBSTITUTED_NONE) {\n            if (substitionResult == SUBSTITUTED_IN_PARAMETERS) {\n              PsiJavaCodeReferenceElement refElement = typeElement.getInnermostComponentReferenceElement();\n              LOG.assertTrue(refElement != null && refElement.getReferenceNameElement() != null);\n              type = getComponentType(type);\n              LOG.assertTrue(type != null);\n              defaultType = getComponentType(defaultType);\n              LOG.assertTrue(defaultType != null);\n              ExpectedTypeInfo info1 = ExpectedTypesProvider.createInfo(((PsiClassType)defaultType).rawType(),\n                                                                   ExpectedTypeInfo.TYPE_STRICTLY,\n                                                                   ((PsiClassType)defaultType).rawType(),\n                                                                   info.getTailType());\n              MyTypeVisitor visitor = new MyTypeVisitor(manager, scope);\n              builder.replaceElement(refElement.getReferenceNameElement(),\n                                     new TypeExpression(project, ExpectedTypesProvider.processExpectedTypes(new ExpectedTypeInfo[]{info1}, visitor, project)));\n            }\n\n            return;\n          }\n        }\n        catch (IncorrectOperationException e) {\n          LOG.error(e);\n        }\n      }\n    }\n\n    builder.replaceElement(typeElement,\n                           new TypeExpression(project, ExpectedTypesProvider.processExpectedTypes(infos, new MyTypeVisitor(manager, scope), project)));\n  }","id":69229,"modified_method":"public void setupTypeElement (PsiTypeElement typeElement, ExpectedTypeInfo[] infos, PsiSubstitutor substitutor,\n                                TemplateBuilder builder, @Nullable PsiElement context, PsiClass targetClass) {\n    LOG.assertTrue(typeElement.isValid());\n    ApplicationManager.getApplication().assertWriteAccessAllowed();\n\n    PsiManager manager = typeElement.getManager();\n    GlobalSearchScope scope = typeElement.getResolveScope();\n    Project project = manager.getProject();\n\n    if (infos.length == 1 && substitutor != null && substitutor != PsiSubstitutor.EMPTY) {\n      ExpectedTypeInfo info = infos[0];\n      Map<PsiTypeParameter, PsiType> map = substitutor.getSubstitutionMap();\n      PsiType[] vals = map.values().toArray(new PsiType[map.size()]);\n      PsiTypeParameter[] params = map.keySet().toArray(new PsiTypeParameter[map.size()]);\n\n      List<PsiType> types = matchingTypeParameters(vals, params, info);\n      if (!types.isEmpty()) {\n        types.addAll(Arrays.asList(ExpectedTypesProvider.processExpectedTypes(infos, new MyTypeVisitor(manager, scope), project)));\n        builder.replaceElement(typeElement, new TypeExpression(project, types.toArray(new PsiType[types.size()])));\n        return;\n      }\n      else {\n        PsiElementFactory factory = JavaPsiFacade.getInstance(manager.getProject()).getElementFactory();\n        PsiType type = info.getType();\n        PsiType defaultType = info.getDefaultType();\n        try {\n          PsiTypeElement inplaceTypeElement = ((PsiVariable)factory.createVariableDeclarationStatement(\"foo\", type, null).getDeclaredElements()[0]).getTypeElement();\n\n          PsiSubstitutor rawingSubstitutor = getRawingSubstitutor (context, targetClass);\n          int substitionResult = substituteToTypeParameters(typeElement, inplaceTypeElement, vals, params, builder, rawingSubstitutor, true);\n          if (substitionResult != SUBSTITUTED_NONE) {\n            if (substitionResult == SUBSTITUTED_IN_PARAMETERS) {\n              PsiJavaCodeReferenceElement refElement = typeElement.getInnermostComponentReferenceElement();\n              LOG.assertTrue(refElement != null && refElement.getReferenceNameElement() != null);\n              type = getComponentType(type);\n              LOG.assertTrue(type != null);\n              defaultType = getComponentType(defaultType);\n              LOG.assertTrue(defaultType != null);\n              ExpectedTypeInfo info1 = ExpectedTypesProvider.createInfo(((PsiClassType)defaultType).rawType(),\n                                                                   ExpectedTypeInfo.TYPE_STRICTLY,\n                                                                   ((PsiClassType)defaultType).rawType(),\n                                                                   info.getTailType());\n              MyTypeVisitor visitor = new MyTypeVisitor(manager, scope);\n              builder.replaceElement(refElement.getReferenceNameElement(),\n                                     new TypeExpression(project, ExpectedTypesProvider.processExpectedTypes(new ExpectedTypeInfo[]{info1}, visitor, project)));\n            }\n\n            return;\n          }\n        }\n        catch (IncorrectOperationException e) {\n          LOG.error(e);\n        }\n      }\n    }\n\n    PsiType[] types = infos.length == 0 ? new PsiType[] {typeElement.getType()} : ExpectedTypesProvider.processExpectedTypes(infos, new MyTypeVisitor(manager, scope), project);\n    builder.replaceElement(typeElement,\n                           new TypeExpression(project, types));\n  }","commit_id":"7f2fbca45931c56be7aea5f3a40a52471a4b2258","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testUnsavedDocument_DoNotGC() throws Exception {\n    final VirtualFile file = createFile();\n    Document document = myDocumentManager.getDocument(file);\n    int idCode = System.identityHashCode(document);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        ObjectUtils.assertNotNull(myDocumentManager.getDocument(file)).insertString(0, \"xxx\");\n      }\n    });\n\n    //noinspection UnusedAssignment\n    document = null;\n\n    System.gc();\n    System.gc();\n\n    document = myDocumentManager.getDocument(file);\n    assertEquals(idCode, System.identityHashCode(document));\n  }","id":69230,"modified_method":"public void testUnsavedDocument_DoNotGC() throws Exception {\n    final VirtualFile file = createFile();\n    Document document = myDocumentManager.getDocument(file);\n    int idCode = System.identityHashCode(document);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      ObjectUtils.assertNotNull(myDocumentManager.getDocument(file)).insertString(0, \"xxx\");\n    });\n\n    //noinspection UnusedAssignment\n    document = null;\n\n    System.gc();\n    System.gc();\n\n    document = myDocumentManager.getDocument(file);\n    assertEquals(idCode, System.identityHashCode(document));\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testSaveAllDocuments_DocumentWasChanged() throws Exception {\n    final VirtualFile file = createFile();\n    final long stamp = file.getModificationStamp();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"xxx \");\n      }\n    });\n\n    myDocumentManager.saveAllDocuments();\n    assertNotEquals(stamp, file.getModificationStamp());\n    assertEquals(\"xxx test\", new String(file.contentsToByteArray(), CharsetToolkit.UTF8_CHARSET));\n  }","id":69231,"modified_method":"public void testSaveAllDocuments_DocumentWasChanged() throws Exception {\n    final VirtualFile file = createFile();\n    final long stamp = file.getModificationStamp();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      document.insertString(0, \"xxx \");\n    });\n\n    myDocumentManager.saveAllDocuments();\n    Assert.assertNotEquals(stamp, file.getModificationStamp());\n    assertEquals(\"xxx test\", new String(file.contentsToByteArray(), CharsetToolkit.UTF8_CHARSET));\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGetUnsavedDocuments_afterSaveAllDocuments() throws Exception {\n    final VirtualFile file = createFile();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(getProject(), new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"xxx\");\n      }\n    });\n\n\n    myDocumentManager.saveAllDocuments();\n    final Document[] unsavedDocuments = myDocumentManager.getUnsavedDocuments();\n    assertEquals(0, unsavedDocuments.length);\n  }","id":69232,"modified_method":"public void testGetUnsavedDocuments_afterSaveAllDocuments() throws Exception {\n    final VirtualFile file = createFile();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(getProject(), () -> {\n      document.insertString(0, \"xxx\");\n    });\n\n\n    myDocumentManager.saveAllDocuments();\n    final Document[] unsavedDocuments = myDocumentManager.getUnsavedDocuments();\n    assertEquals(0, unsavedDocuments.length);\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGetUnsavedDocuments_ModifiedDocument() throws Exception {\n    final VirtualFile file = createFile();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(getProject(), new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"xxx\");\n      }\n    });\n\n\n    final Document[] unsavedDocuments = myDocumentManager.getUnsavedDocuments();\n    assertEquals(1, unsavedDocuments.length);\n    assertSame(document, unsavedDocuments[0]);\n    assertEquals(\"test\", new String(file.contentsToByteArray(), CharsetToolkit.UTF8_CHARSET));\n  }","id":69233,"modified_method":"public void testGetUnsavedDocuments_ModifiedDocument() throws Exception {\n    final VirtualFile file = createFile();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(getProject(), () -> {\n      document.insertString(0, \"xxx\");\n    });\n\n\n    final Document[] unsavedDocuments = myDocumentManager.getUnsavedDocuments();\n    assertEquals(1, unsavedDocuments.length);\n    assertSame(document, unsavedDocuments[0]);\n    assertEquals(\"test\", new String(file.contentsToByteArray(), CharsetToolkit.UTF8_CHARSET));\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGetUnsavedDocuments_afterSaveDocuments() throws Exception {\n    final VirtualFile file = createFile();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(getProject(), new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"xxx\");\n      }\n    });\n\n\n    myDocumentManager.saveDocument(document);\n    final Document[] unsavedDocuments = myDocumentManager.getUnsavedDocuments();\n    assertEquals(0, unsavedDocuments.length);\n  }","id":69234,"modified_method":"public void testGetUnsavedDocuments_afterSaveDocuments() throws Exception {\n    final VirtualFile file = createFile();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(getProject(), () -> {\n      document.insertString(0, \"xxx\");\n    });\n\n\n    myDocumentManager.saveDocument(document);\n    final Document[] unsavedDocuments = myDocumentManager.getUnsavedDocuments();\n    assertEquals(0, unsavedDocuments.length);\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testContentChanged_DoNotReloadChangedDocument() throws Exception {\n    final VirtualFile file = createFile();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"old \");\n      }\n    });\n\n    myReloadFromDisk = Boolean.FALSE;\n    long oldDocumentStamp = document.getModificationStamp();\n\n    setBinaryContent(file, \"xxx\".getBytes(CharsetToolkit.UTF8_CHARSET));\n\n    assertEquals(\"old test\", document.getText());\n    assertEquals(oldDocumentStamp, document.getModificationStamp());\n  }","id":69235,"modified_method":"public void testContentChanged_DoNotReloadChangedDocument() throws Exception {\n    final VirtualFile file = createFile();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      document.insertString(0, \"old \");\n    });\n\n    myReloadFromDisk = Boolean.FALSE;\n    long oldDocumentStamp = document.getModificationStamp();\n\n    setBinaryContent(file, \"xxx\".getBytes(CharsetToolkit.UTF8_CHARSET));\n\n    assertEquals(\"old test\", document.getText());\n    assertEquals(oldDocumentStamp, document.getModificationStamp());\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testNoPSIModificationsDuringSave() throws IOException {\n    File ioFile = IoTestUtil.createTestFile(\"test.txt\", \"<html>some text<\/html>\");\n    VirtualFile virtualFile = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(ioFile);\n    assertNotNull(ioFile.getPath(), virtualFile);\n\n    FileDocumentManager documentManager = FileDocumentManager.getInstance();\n    Document original = documentManager.getDocument(virtualFile);\n    assertNotNull(virtualFile.getPath(), original);\n\n    final PsiFile file = getPsiFile(original);\n    assertNotNull(file);\n    FileDocumentManagerListener saveListener = new FileDocumentManagerAdapter() {\n      @Override\n      public void beforeDocumentSaving(@NotNull Document document) {\n        WriteCommandAction.runWriteCommandAction(getProject(), new Runnable() {\n          @Override\n          public void run() {\n            try {\n              file.getFirstChild().delete();\n              fail(\"Must not modify PSI inside save listener\");\n            }\n            catch (IncorrectOperationException e) {\n              assertEquals(\"Must not modify PSI inside save listener\", e.getMessage());\n            }\n          }\n        });\n      }\n    };\n    getProject().getMessageBus().connect(getTestRootDisposable()).subscribe(AppTopics.FILE_DOCUMENT_SYNC, saveListener);\n    final Document document = PsiDocumentManager.getInstance(getProject()).getDocument(file);\n    assertNotNull(document);\n    WriteCommandAction.runWriteCommandAction(getProject(), new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(1,\"y\");\n      }\n    });\n\n    FileDocumentManager.getInstance().saveAllDocuments();\n  }","id":69236,"modified_method":"public void testNoPSIModificationsDuringSave() throws IOException {\n    File ioFile = IoTestUtil.createTestFile(\"test.txt\", \"<html>some text<\/html>\");\n    VirtualFile virtualFile = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(ioFile);\n    assertNotNull(ioFile.getPath(), virtualFile);\n\n    FileDocumentManager documentManager = FileDocumentManager.getInstance();\n    Document original = documentManager.getDocument(virtualFile);\n    assertNotNull(virtualFile.getPath(), original);\n\n    final PsiFile file = getPsiFile(original);\n    assertNotNull(file);\n    FileDocumentManagerListener saveListener = new FileDocumentManagerAdapter() {\n      @Override\n      public void beforeDocumentSaving(@NotNull Document document) {\n        WriteCommandAction.runWriteCommandAction(getProject(), () -> {\n          try {\n            file.getFirstChild().delete();\n            fail(\"Must not modify PSI inside save listener\");\n          }\n          catch (IncorrectOperationException e) {\n            assertEquals(\"Must not modify PSI inside save listener\", e.getMessage());\n          }\n        });\n      }\n    };\n    getProject().getMessageBus().connect(getTestRootDisposable()).subscribe(AppTopics.FILE_DOCUMENT_SYNC, saveListener);\n    final Document document = PsiDocumentManager.getInstance(getProject()).getDocument(file);\n    assertNotNull(document);\n    WriteCommandAction.runWriteCommandAction(getProject(), () -> {\n      document.insertString(1,\"y\");\n    });\n\n    FileDocumentManager.getInstance().saveAllDocuments();\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGetDocument_CreateNew_ReadOnly() throws Exception {\n    final VirtualFile file = createFile();\n    ApplicationManager.getApplication().runWriteAction(new ThrowableComputable<Object, IOException>() {\n      @Override\n      public Object compute() throws IOException {\n        file.setWritable(false);\n        return null;\n      }\n    });\n\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(document);\n    assertEquals(\"test\", document.getText());\n    assertEquals(file.getModificationStamp(), document.getModificationStamp());\n    assertEquals(file.isWritable(), document.isWritable());\n  }","id":69237,"modified_method":"public void testGetDocument_CreateNew_ReadOnly() throws Exception {\n    final VirtualFile file = createFile();\n    ApplicationManager.getApplication().runWriteAction((ThrowableComputable<Object, IOException>)() -> {\n      file.setWritable(false);\n      return null;\n    });\n\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(document);\n    assertEquals(\"test\", document.getText());\n    assertEquals(file.getModificationStamp(), document.getModificationStamp());\n    assertEquals(file.isWritable(), document.isWritable());\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testContentChanged_ignoreEventsFromSelfOnSave() throws Exception {\n    final VirtualFile file = new MockVirtualFile(\"test.txt\", \"test\\rtest\") {\n      @NotNull\n      @Override\n      public OutputStream getOutputStream(final Object requestor, final long newModificationStamp, long newTimeStamp) throws IOException {\n        final VirtualFile self = this;\n        return new ByteArrayOutputStream() {\n          @Override\n          public void close() throws IOException {\n            super.close();\n            long oldStamp = getModificationStamp();\n            setModificationStamp(newModificationStamp);\n            setText(toString());\n            myDocumentManager.contentsChanged(new VirtualFileEvent(requestor, self, null, oldStamp, getModificationStamp()));\n          }\n        };\n      }\n    };\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"xxx\");\n      }\n    });\n\n    final long stamp = document.getModificationStamp();\n\n    myDocumentManager.saveAllDocuments();\n    assertEquals(stamp, document.getModificationStamp());\n  }","id":69238,"modified_method":"public void testContentChanged_ignoreEventsFromSelfOnSave() throws Exception {\n    final VirtualFile file = new MockVirtualFile(\"test.txt\", \"test\\rtest\") {\n      @NotNull\n      @Override\n      public OutputStream getOutputStream(final Object requestor, final long newModificationStamp, long newTimeStamp) throws IOException {\n        final VirtualFile self = this;\n        return new ByteArrayOutputStream() {\n          @Override\n          public void close() throws IOException {\n            super.close();\n            long oldStamp = getModificationStamp();\n            setModificationStamp(newModificationStamp);\n            setText(toString());\n            myDocumentManager.contentsChanged(new VirtualFileEvent(requestor, self, null, oldStamp, getModificationStamp()));\n          }\n        };\n      }\n    };\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      document.insertString(0, \"xxx\");\n    });\n\n    final long stamp = document.getModificationStamp();\n\n    myDocumentManager.saveAllDocuments();\n    assertEquals(stamp, document.getModificationStamp());\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testReplaceDocumentTextWithTheSameText() throws Exception {\n    final VirtualFile file = createFile();\n    final DocumentEx document = (DocumentEx)myDocumentManager.getDocument(file);\n\n    final String newText = \"test text\";\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        document.replaceString(0, document.getTextLength(), newText);\n        assertTrue(myDocumentManager.isDocumentUnsaved(document));\n        myDocumentManager.saveDocument(document);\n\n        getProject().getMessageBus().connect(getTestRootDisposable())\n          .subscribe(AppTopics.FILE_DOCUMENT_SYNC, new FileDocumentManagerAdapter() {\n            @Override\n            public void beforeDocumentSaving(@NotNull Document documentToSave) {\n              assertNotSame(document, documentToSave);\n            }\n          });\n\n        final long modificationStamp = document.getModificationStamp();\n\n        document.replaceString(0, document.getTextLength(), newText);\n        if (myDocumentManager.isDocumentUnsaved(document)) {\n          assertTrue(document.getModificationStamp() > modificationStamp);\n        }\n        else {\n          assertEquals(modificationStamp, document.getModificationStamp());\n        }\n      }\n    });\n  }","id":69239,"modified_method":"public void testReplaceDocumentTextWithTheSameText() throws Exception {\n    final VirtualFile file = createFile();\n    final DocumentEx document = (DocumentEx)myDocumentManager.getDocument(file);\n\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      final String newText = \"test text\";\n      document.replaceString(0, document.getTextLength(), newText);\n      assertTrue(myDocumentManager.isDocumentUnsaved(document));\n      myDocumentManager.saveDocument(document);\n\n      getProject().getMessageBus().connect(getTestRootDisposable())\n        .subscribe(AppTopics.FILE_DOCUMENT_SYNC, new FileDocumentManagerAdapter() {\n          @Override\n          public void beforeDocumentSaving(@NotNull Document documentToSave) {\n            assertNotSame(document, documentToSave);\n          }\n        });\n\n      final long modificationStamp = document.getModificationStamp();\n\n      document.replaceString(0, document.getTextLength(), newText);\n      if (myDocumentManager.isDocumentUnsaved(document)) {\n        assertTrue(document.getModificationStamp() > modificationStamp);\n      }\n      else {\n        assertEquals(modificationStamp, document.getModificationStamp());\n      }\n    });\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    myReloadFromDisk = Boolean.TRUE;\n    FileDocumentManagerImpl impl = (FileDocumentManagerImpl)FileDocumentManager.getInstance();\n    impl.setAskReloadFromDisk(getTestRootDisposable(), new PairProcessor<VirtualFile, Document>() {\n      @Override\n      public boolean process(VirtualFile file, Document document) {\n        if (myReloadFromDisk == null) {\n          fail();\n          return false;\n        }\n        return myReloadFromDisk.booleanValue();\n      }\n    });\n    myDocumentManager = impl;\n  }","id":69240,"modified_method":"@Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    myReloadFromDisk = Boolean.TRUE;\n    FileDocumentManagerImpl impl = (FileDocumentManagerImpl)FileDocumentManager.getInstance();\n    impl.setAskReloadFromDisk(getTestRootDisposable(), (file, document) -> {\n      if (myReloadFromDisk == null) {\n        fail();\n        return false;\n      }\n      return myReloadFromDisk.booleanValue();\n    });\n    myDocumentManager = impl;\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testSaveDocument_DocumentWasChanged() throws Exception {\n    final VirtualFile file = createFile();\n    final long stamp = file.getModificationStamp();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"xxx \");\n      }\n    });\n\n\n    myDocumentManager.saveDocument(document);\n    assertTrue(stamp != file.getModificationStamp());\n    assertEquals(document.getModificationStamp(), file.getModificationStamp());\n    assertEquals(\"xxx test\", new String(file.contentsToByteArray(), CharsetToolkit.UTF8_CHARSET));\n  }","id":69241,"modified_method":"public void testSaveDocument_DocumentWasChanged() throws Exception {\n    final VirtualFile file = createFile();\n    final long stamp = file.getModificationStamp();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      document.insertString(0, \"xxx \");\n    });\n\n\n    myDocumentManager.saveDocument(document);\n    assertTrue(stamp != file.getModificationStamp());\n    assertEquals(document.getModificationStamp(), file.getModificationStamp());\n    assertEquals(\"xxx test\", new String(file.contentsToByteArray(), CharsetToolkit.UTF8_CHARSET));\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testUnsavedDocument_GcAfterSave() throws Exception {\n    final VirtualFile file = createFile();\n    Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        ObjectUtils.assertNotNull(myDocumentManager.getDocument(file)).insertString(0, \"xxx\");\n      }\n    });\n\n    int idCode = System.identityHashCode(document);\n    //noinspection UnusedAssignment\n    document = null;\n\n    myDocumentManager.saveAllDocuments();\n\n    System.gc();\n    System.gc();\n\n    document = myDocumentManager.getDocument(file);\n    assertTrue(idCode != System.identityHashCode(document));\n  }","id":69242,"modified_method":"public void testUnsavedDocument_GcAfterSave() throws Exception {\n    final VirtualFile file = createFile();\n    Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      ObjectUtils.assertNotNull(myDocumentManager.getDocument(file)).insertString(0, \"xxx\");\n    });\n\n    int idCode = System.identityHashCode(document);\n    //noinspection UnusedAssignment\n    document = null;\n\n    myDocumentManager.saveAllDocuments();\n\n    System.gc();\n    System.gc();\n\n    document = myDocumentManager.getDocument(file);\n    assertTrue(idCode != System.identityHashCode(document));\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testSaveDocument_DoNotSaveIfModStampEqualsToFile() throws Exception {\n    final VirtualFile file = createFile();\n    final DocumentEx document = (DocumentEx)myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"zzz\");\n        document.setModificationStamp(file.getModificationStamp());\n      }\n    });\n\n    getProject().getMessageBus().connect(getTestRootDisposable()).subscribe(AppTopics.FILE_DOCUMENT_SYNC, new FileDocumentManagerAdapter() {\n      @Override\n      public void beforeDocumentSaving(@NotNull Document documentToSave) {\n        assertNotSame(document, documentToSave);\n      }\n    });\n\n    myDocumentManager.saveDocument(document);\n  }","id":69243,"modified_method":"public void testSaveDocument_DoNotSaveIfModStampEqualsToFile() throws Exception {\n    final VirtualFile file = createFile();\n    final DocumentEx document = (DocumentEx)myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      document.insertString(0, \"zzz\");\n      document.setModificationStamp(file.getModificationStamp());\n    });\n\n    getProject().getMessageBus().connect(getTestRootDisposable()).subscribe(AppTopics.FILE_DOCUMENT_SYNC, new FileDocumentManagerAdapter() {\n      @Override\n      public void beforeDocumentSaving(@NotNull Document documentToSave) {\n        assertNotSame(document, documentToSave);\n      }\n    });\n\n    myDocumentManager.saveDocument(document);\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testContentChanged_doNotReloadChangedDocumentOnSave() throws Exception {\n    final MockVirtualFile file =\n    new MockVirtualFile(\"test.txt\", \"test\") {\n      @Override\n      public void refresh(boolean asynchronous, boolean recursive, Runnable postRunnable) {\n        long oldStamp = getModificationStamp();\n        setModificationStamp(LocalTimeCounter.currentTime());\n        myDocumentManager.contentsChanged(new VirtualFileEvent(null, this, null, oldStamp, getModificationStamp()));\n      }\n    };\n\n    myReloadFromDisk = Boolean.FALSE;\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"old \");\n      }\n    });\n\n    long documentStamp = document.getModificationStamp();\n\n    file.setContent(null, \"xxx\", false);\n\n    myDocumentManager.saveAllDocuments();\n\n    assertEquals(\"old test\", document.getText());\n    assertEquals(file.getModificationStamp(), document.getModificationStamp());\n    assertEquals(\"old test\", new String(file.contentsToByteArray(), CharsetToolkit.UTF8_CHARSET));\n    assertEquals(documentStamp, document.getModificationStamp());\n  }","id":69244,"modified_method":"public void testContentChanged_doNotReloadChangedDocumentOnSave() throws Exception {\n    final MockVirtualFile file =\n    new MockVirtualFile(\"test.txt\", \"test\") {\n      @Override\n      public void refresh(boolean asynchronous, boolean recursive, Runnable postRunnable) {\n        long oldStamp = getModificationStamp();\n        setModificationStamp(LocalTimeCounter.currentTime());\n        myDocumentManager.contentsChanged(new VirtualFileEvent(null, this, null, oldStamp, getModificationStamp()));\n      }\n    };\n\n    myReloadFromDisk = Boolean.FALSE;\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      document.insertString(0, \"old \");\n    });\n\n    long documentStamp = document.getModificationStamp();\n\n    file.setContent(null, \"xxx\", false);\n\n    myDocumentManager.saveAllDocuments();\n\n    assertEquals(\"old test\", document.getText());\n    assertEquals(file.getModificationStamp(), document.getModificationStamp());\n    assertEquals(\"old test\", new String(file.contentsToByteArray(), CharsetToolkit.UTF8_CHARSET));\n    assertEquals(documentStamp, document.getModificationStamp());\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGetUnsavedDocuments_afterSaveDocumentWithProblems() throws Exception {\n    try {\n      final VirtualFile file = new MockVirtualFile(\"test.txt\", \"test\") {\n        @Override\n        @NotNull\n        public OutputStream getOutputStream(Object requestor, long newModificationStamp, long newTimeStamp) throws IOException {\n          throw new IOException(\"\");\n        }\n      };\n\n      final Document document = myDocumentManager.getDocument(file);\n      assertNotNull(file.toString(), document);\n      WriteCommandAction.runWriteCommandAction(getProject(), new Runnable() {\n        @Override\n        public void run() {\n          document.insertString(0, \"xxx\");\n        }\n      });\n\n\n      try {\n        myDocumentManager.saveDocument(document);\n        fail(\"must throw IOException\");\n      }\n      catch (RuntimeException e) {\n        assertTrue(e.getCause() instanceof IOException);\n      }\n\n      final Document[] unsavedDocuments = myDocumentManager.getUnsavedDocuments();\n      assertEquals(1, unsavedDocuments.length);\n      assertSame(document, unsavedDocuments[0]);\n      assertEquals(\"test\", new String(file.contentsToByteArray(), CharsetToolkit.UTF8_CHARSET));\n    }\n    finally {\n      ApplicationManager.getApplication().runWriteAction(new Runnable() {\n        @Override\n        public void run() {\n          myDocumentManager.dropAllUnsavedDocuments();\n        }\n      });\n    }\n  }","id":69245,"modified_method":"public void testGetUnsavedDocuments_afterSaveDocumentWithProblems() throws Exception {\n    try {\n      final VirtualFile file = new MockVirtualFile(\"test.txt\", \"test\") {\n        @Override\n        @NotNull\n        public OutputStream getOutputStream(Object requestor, long newModificationStamp, long newTimeStamp) throws IOException {\n          throw new IOException(\"\");\n        }\n      };\n\n      final Document document = myDocumentManager.getDocument(file);\n      assertNotNull(file.toString(), document);\n      WriteCommandAction.runWriteCommandAction(getProject(), () -> {\n        document.insertString(0, \"xxx\");\n      });\n\n\n      try {\n        myDocumentManager.saveDocument(document);\n        fail(\"must throw IOException\");\n      }\n      catch (RuntimeException e) {\n        assertTrue(e.getCause() instanceof IOException);\n      }\n\n      final Document[] unsavedDocuments = myDocumentManager.getUnsavedDocuments();\n      assertEquals(1, unsavedDocuments.length);\n      assertSame(document, unsavedDocuments[0]);\n      assertEquals(\"test\", new String(file.contentsToByteArray(), CharsetToolkit.UTF8_CHARSET));\n    }\n    finally {\n      ApplicationManager.getApplication().runWriteAction(() -> {\n        myDocumentManager.dropAllUnsavedDocuments();\n      });\n    }\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testContentChanged_reloadChangedDocument() throws Exception {\n    final VirtualFile file = createFile();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"zzz\");\n      }\n    });\n\n\n    myReloadFromDisk = Boolean.TRUE;\n    setFileText(file, \"xxx\");\n\n    assertEquals(\"xxx\", document.getText());\n    assertEquals(file.getModificationStamp(), document.getModificationStamp());\n    assertEquals(0, myDocumentManager.getUnsavedDocuments().length);\n  }","id":69246,"modified_method":"public void testContentChanged_reloadChangedDocument() throws Exception {\n    final VirtualFile file = createFile();\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      document.insertString(0, \"zzz\");\n    });\n\n\n    myReloadFromDisk = Boolean.TRUE;\n    setFileText(file, \"xxx\");\n\n    assertEquals(\"xxx\", document.getText());\n    assertEquals(file.getModificationStamp(), document.getModificationStamp());\n    assertEquals(0, myDocumentManager.getUnsavedDocuments().length);\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testRememberSeparators() throws Exception {\n    final VirtualFile file = new MockVirtualFile(\"test.txt\", \"test\\rtest\");\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, new Runnable() {\n      @Override\n      public void run() {\n        document.insertString(0, \"xxx \");\n      }\n    });\n\n    myDocumentManager.saveAllDocuments();\n    assertEquals(\"xxx test\\rtest\", new String(file.contentsToByteArray(), CharsetToolkit.UTF8_CHARSET));\n  }","id":69247,"modified_method":"public void testRememberSeparators() throws Exception {\n    final VirtualFile file = new MockVirtualFile(\"test.txt\", \"test\\rtest\");\n    final Document document = myDocumentManager.getDocument(file);\n    assertNotNull(file.toString(), document);\n    WriteCommandAction.runWriteCommandAction(myProject, () -> {\n      document.insertString(0, \"xxx \");\n    });\n\n    myDocumentManager.saveAllDocuments();\n    assertEquals(\"xxx test\\rtest\", new String(file.contentsToByteArray(), CharsetToolkit.UTF8_CHARSET));\n  }","commit_id":"3b01944af47d7a2189e36b028e89df4f8e06f201","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCreatePointerDoesNotLoadPsiTree() throws IOException {\n    VirtualFile vfile = myRoot.createChildData(this, \"X.java\");\n    VfsUtil.saveText(vfile, \"public class X { public int X; }\");\n\n    PsiClass aClass = myJavaFacade.findClass(\"X\", GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n    assertTrue(aClass.isValid());\n\n    PsiFileImpl file = (PsiFileImpl)aClass.getContainingFile();\n\n    assertTreeLoaded(file, false);\n\n    SmartPsiElementPointer p = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass);\n    assertNotNull(p);\n\n    assertTreeLoaded(file, false);\n\n    assertInstanceOf(p.getElement(), PsiClass.class);\n\n    assertTreeLoaded(file, false);\n\n    PsiDocumentManager documentManager = PsiDocumentManager.getInstance(myProject);\n    Document document = documentManager.getDocument(file);\n    document.insertString(0, \"/** asdasd */\");\n    documentManager.commitAllDocuments();\n\n    // loaded tree\n    assertTreeLoaded(file, true);\n\n    assertInstanceOf(p.getElement(), PsiClass.class);\n\n    assertTreeLoaded(file, true);\n  }","id":69248,"modified_method":"public void testCreatePointerDoesNotLoadPsiTree() throws IOException {\n    VirtualFile vfile = myRoot.createChildData(this, \"X.java\");\n    VfsUtil.saveText(vfile, \"public class X { public int X; }\");\n\n    PsiClass aClass = myJavaFacade.findClass(\"X\", GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n    assertTrue(aClass.isValid());\n\n    PsiFileImpl file = (PsiFileImpl)aClass.getContainingFile();\n\n    assertTreeLoaded(file, false);\n\n    SmartPsiElementPointer p = createPointer(aClass);\n    assertNotNull(p);\n\n    assertTreeLoaded(file, false);\n\n    assertInstanceOf(p.getElement(), PsiClass.class);\n\n    assertTreeLoaded(file, false);\n\n    PsiDocumentManager documentManager = PsiDocumentManager.getInstance(myProject);\n    Document document = documentManager.getDocument(file);\n    document.insertString(0, \"/** asdasd */\");\n    documentManager.commitAllDocuments();\n\n    // loaded tree\n    assertTreeLoaded(file, true);\n\n    assertInstanceOf(p.getElement(), PsiClass.class);\n\n    assertTreeLoaded(file, true);\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testNoAstLoadingWithoutDocumentChanges() {\n    PsiClass aClass = myJavaFacade.findClass(\"Test\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n    PsiFileImpl file = (PsiFileImpl)aClass.getContainingFile();\n\n    createEditor(file.getVirtualFile());\n    assertFalse(file.isContentsLoaded());\n\n    SmartPointerEx pointer = (SmartPointerEx)SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass);\n    assertFalse(file.isContentsLoaded());\n\n    //noinspection UnusedAssignment\n    aClass = null;\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(pointer.getCachedElement());\n\n    assertNotNull(pointer.getElement());\n    assertFalse(file.isContentsLoaded());\n  }","id":69249,"modified_method":"public void testNoAstLoadingWithoutDocumentChanges() {\n    PsiClass aClass = myJavaFacade.findClass(\"Test\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n    PsiFileImpl file = (PsiFileImpl)aClass.getContainingFile();\n\n    createEditor(file.getVirtualFile());\n    assertFalse(file.isContentsLoaded());\n\n    SmartPointerEx pointer = (SmartPointerEx)createPointer(aClass);\n    assertFalse(file.isContentsLoaded());\n\n    //noinspection UnusedAssignment\n    aClass = null;\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(pointer.getCachedElement());\n\n    assertNotNull(pointer.getElement());\n    assertFalse(file.isContentsLoaded());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testTextFileClearingDoesNotCrash() {\n    configureByText(PlainTextFileType.INSTANCE, \"foo bar goo\\n\");\n    SmartPsiElementPointer pointer = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(myFile.getFirstChild());\n\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertEquals(myFile.getFirstChild(), pointer.getElement());\n\n    Document document = myFile.getViewProvider().getDocument();\n    document.deleteString(0, document.getTextLength());\n\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertEquals(myFile.getFirstChild(), pointer.getElement());\n\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertEquals(myFile.getFirstChild(), pointer.getElement());\n  }","id":69250,"modified_method":"public void testTextFileClearingDoesNotCrash() {\n    configureByText(PlainTextFileType.INSTANCE, \"foo bar goo\\n\");\n    SmartPsiElementPointer pointer = createPointer(myFile.getFirstChild());\n\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertEquals(myFile.getFirstChild(), pointer.getElement());\n\n    Document document = myFile.getViewProvider().getDocument();\n    document.deleteString(0, document.getTextLength());\n\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertEquals(myFile.getFirstChild(), pointer.getElement());\n\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertEquals(myFile.getFirstChild(), pointer.getElement());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testPointersRefCount() throws Exception {\n    PsiFile file = configureByText(JavaFileType.INSTANCE, \"class X{}\");\n    PsiClass aClass = ((PsiClassOwner)file).getClasses()[0];\n    SmartPointerManagerImpl smartPointerManager = (SmartPointerManagerImpl)SmartPointerManager.getInstance(myProject);\n    SmartPsiElementPointer pointer1 = smartPointerManager.createSmartPsiElementPointer(aClass);\n    SmartPsiElementPointer pointer2 = smartPointerManager.createSmartPsiElementPointer(aClass);\n    assertSame(pointer1, pointer2);\n\n    assertNotNull(pointer1.getRange());\n\n    boolean removed2 = smartPointerManager.removePointer(pointer2);\n    assertFalse(removed2);\n    assertNotNull(pointer1.getRange());\n\n    boolean removed1 = smartPointerManager.removePointer(pointer1);\n    assertTrue(removed1);\n    assertNull(pointer1.getRange());\n  }","id":69251,"modified_method":"public void testPointersRefCount() throws Exception {\n    PsiFile file = configureByText(JavaFileType.INSTANCE, \"class X{}\");\n    PsiClass aClass = ((PsiClassOwner)file).getClasses()[0];\n    SmartPointerManagerImpl smartPointerManager = getPointerManager();\n    SmartPsiElementPointer pointer1 = createPointer(aClass);\n    SmartPsiElementPointer pointer2 = createPointer(aClass);\n    assertSame(pointer1, pointer2);\n\n    assertNotNull(pointer1.getRange());\n\n    boolean removed2 = smartPointerManager.removePointer(pointer2);\n    assertFalse(removed2);\n    assertNotNull(pointer1.getRange());\n\n    boolean removed1 = smartPointerManager.removePointer(pointer1);\n    assertTrue(removed1);\n    assertNull(pointer1.getRange());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testRetrieveOnUncommittedDocument() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n    document.insertString(0, \"/******/\");\n\n    SmartPointerEx pointer = (SmartPointerEx)SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass.getNameIdentifier());\n\n    //noinspection UnusedAssignment\n    aClass = null;\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(pointer.getCachedElement());\n\n    assertNotNull(pointer.getElement());\n\n    document.insertString(0, \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    assertTrue(element.getParent() instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","id":69252,"modified_method":"public void testRetrieveOnUncommittedDocument() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n    document.insertString(0, \"/******/\");\n\n    SmartPointerEx pointer = (SmartPointerEx)createPointer(aClass.getNameIdentifier());\n\n    //noinspection UnusedAssignment\n    aClass = null;\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(pointer.getCachedElement());\n\n    assertNotNull(pointer.getElement());\n\n    document.insertString(0, \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    assertTrue(element.getParent() instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testAnchorInfoSurvivesPsiChange() {\n    PsiJavaFile file = (PsiJavaFile)configureByText(JavaFileType.INSTANCE, \"class C1{}\\nclass C2 {}\");\n\n    SmartPsiElementPointer<PsiClass> pointer =\n      SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(file.getClasses()[1]);\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(((SmartPointerEx) pointer).getCachedElement());\n\n    file.getClasses()[1].delete();\n\n    assertNotNull(pointer.getElement());\n  }","id":69253,"modified_method":"public void testAnchorInfoSurvivesPsiChange() {\n    PsiJavaFile file = (PsiJavaFile)configureByText(JavaFileType.INSTANCE, \"class C1{}\\nclass C2 {}\");\n\n    SmartPsiElementPointer<PsiClass> pointer =\n      createPointer(file.getClasses()[1]);\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(((SmartPointerEx) pointer).getCachedElement());\n\n    file.getClasses()[1].delete();\n\n    assertNotNull(pointer.getElement());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testPointersRefCountSaturated() throws Exception {\n    PsiFile file = configureByText(JavaFileType.INSTANCE, \"class X{}\");\n    PsiClass aClass = ((PsiClassOwner)file).getClasses()[0];\n    SmartPointerManagerImpl smartPointerManager = (SmartPointerManagerImpl)SmartPointerManager.getInstance(myProject);\n    SmartPsiElementPointerImpl pointer1 = (SmartPsiElementPointerImpl)smartPointerManager.createSmartPsiElementPointer(aClass);\n    for (int i=0; i<1000; i++) {\n      SmartPsiElementPointer<PsiClass> pointer2 = smartPointerManager.createSmartPsiElementPointer(aClass);\n      assertSame(pointer1, pointer2);\n    }\n\n    assertNotNull(pointer1.getRange());\n    assertEquals(Byte.MAX_VALUE, pointer1.incrementAndGetReferenceCount(0));\n\n    for (int i=0; i<1100; i++) {\n      boolean removed1 = smartPointerManager.removePointer(pointer1);\n      assertFalse(removed1);\n      Assert.assertNotNull(pointer1.getRange());\n    }\n  }","id":69254,"modified_method":"public void testPointersRefCountSaturated() throws Exception {\n    PsiFile file = configureByText(JavaFileType.INSTANCE, \"class X{}\");\n    PsiClass aClass = ((PsiClassOwner)file).getClasses()[0];\n    SmartPointerManagerImpl smartPointerManager = getPointerManager();\n    SmartPsiElementPointerImpl pointer1 = (SmartPsiElementPointerImpl)createPointer(aClass);\n    for (int i=0; i<1000; i++) {\n      SmartPsiElementPointer<PsiClass> pointer2 = createPointer(aClass);\n      assertSame(pointer1, pointer2);\n    }\n\n    assertNotNull(pointer1.getRange());\n    assertEquals(Byte.MAX_VALUE, pointer1.incrementAndGetReferenceCount(0));\n\n    for (int i=0; i<1100; i++) {\n      boolean removed1 = smartPointerManager.removePointer(pointer1);\n      assertFalse(removed1);\n      Assert.assertNotNull(pointer1.getRange());\n    }\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testEqualPointerRangesWhenCreatedFromStubAndAST() {\n    final PsiFile file = configureByText(JavaFileType.INSTANCE,\n                                         \"class S {\\n\" +\n                                         \"}\");\n\n    PsiClass aClass = ((PsiJavaFile)file).getClasses()[0];\n    assertNotNull(((PsiFileImpl)file).getStubTree());\n\n    final SmartPointerManager manager = SmartPointerManager.getInstance(myProject);\n    final SmartPsiElementPointer<PsiClass> pointer1 = manager.createSmartPsiElementPointer(aClass);\n    Segment range1 = pointer1.getRange();\n    manager.removePointer(pointer1);\n\n    final FileASTNode node = file.getNode();\n    final SmartPsiElementPointer<PsiClass> pointer2 = manager.createSmartPsiElementPointer(aClass);\n    assertEquals(range1, pointer2.getRange());\n    assertNotNull(node);\n  }","id":69255,"modified_method":"public void testEqualPointerRangesWhenCreatedFromStubAndAST() {\n    final PsiFile file = configureByText(JavaFileType.INSTANCE,\n                                         \"class S {\\n\" +\n                                         \"}\");\n\n    PsiClass aClass = ((PsiJavaFile)file).getClasses()[0];\n    assertNotNull(((PsiFileImpl)file).getStubTree());\n\n    final SmartPointerManager manager = getPointerManager();\n    final SmartPsiElementPointer<PsiClass> pointer1 = createPointer(aClass);\n    Segment range1 = pointer1.getRange();\n    manager.removePointer(pointer1);\n\n    final FileASTNode node = file.getNode();\n    final SmartPsiElementPointer<PsiClass> pointer2 = createPointer(aClass);\n    assertEquals(range1, pointer2.getRange());\n    assertNotNull(node);\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testSmartPointerCreationDoesNotLoadDocument() {\n    PsiPackage aPackage = myJavaFacade.findPackage(\"java.io\");\n    SmartPointerManagerImpl smartPointerManager = (SmartPointerManagerImpl)SmartPointerManager.getInstance(myProject);\n    for (PsiClass aClass : aPackage.getClasses()) {\n      PsiDocumentManager documentManager = PsiDocumentManager.getInstance(myProject);\n      PsiFile file = aClass.getContainingFile();\n      Document document = documentManager.getCachedDocument(file);\n      if (document == null) { //ignore already loaded documents\n        SmartPsiElementPointer pointer = smartPointerManager.createSmartPsiElementPointer(aClass);\n        assertNull(documentManager.getCachedDocument(file));\n        //System.out.println(\"file = \" + file);\n      }\n      else {\n        System.out.println(\"already loaded file = \" + file);\n      }\n    }\n  }","id":69256,"modified_method":"public void testSmartPointerCreationDoesNotLoadDocument() {\n    PsiPackage aPackage = myJavaFacade.findPackage(\"java.io\");\n    for (PsiClass aClass : aPackage.getClasses()) {\n      PsiDocumentManager documentManager = PsiDocumentManager.getInstance(myProject);\n      PsiFile file = aClass.getContainingFile();\n      Document document = documentManager.getCachedDocument(file);\n      if (document == null) { //ignore already loaded documents\n        SmartPsiElementPointer pointer = createPointer(aClass);\n        assertNull(documentManager.getCachedDocument(file));\n        //System.out.println(\"file = \" + file);\n      }\n      else {\n        System.out.println(\"already loaded file = \" + file);\n      }\n    }\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testNonPhysicalFile() {\n    PsiJavaFile file = (PsiJavaFile)myJavaFacade.findClass(\"AClass\", GlobalSearchScope.allScope(getProject())).getContainingFile().copy();\n    SmartPsiFileRange pointer = SmartPointerManager.getInstance(myProject).createSmartPsiFileRangePointer(file, TextRange.create(1, 2));\n\n    file.getViewProvider().getDocument().insertString(0, \" \");\n\n    assertEquals(TextRange.create(2, 3), pointer.getRange());\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    assertEquals(TextRange.create(2, 3), pointer.getRange());\n  }","id":69257,"modified_method":"public void testNonPhysicalFile() {\n    PsiJavaFile file = (PsiJavaFile)myJavaFacade.findClass(\"AClass\", GlobalSearchScope.allScope(getProject())).getContainingFile().copy();\n    SmartPsiFileRange pointer = getPointerManager().createSmartPsiFileRangePointer(file, TextRange.create(1, 2));\n\n    file.getViewProvider().getDocument().insertString(0, \" \");\n\n    assertEquals(TextRange.create(2, 3), pointer.getRange());\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    assertEquals(TextRange.create(2, 3), pointer.getRange());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testKeepBeltWhenDocumentModified() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    SmartPsiElementPointer pointer = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass);\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n\n    int offset = aClass.getTextOffset();\n    document.insertString(offset, \"/******/\");\n\n    pointer.getElement();\n\n    document.insertString(offset, \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","id":69258,"modified_method":"public void testKeepBeltWhenDocumentModified() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    SmartPsiElementPointer pointer = createPointer(aClass);\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n\n    int offset = aClass.getTextOffset();\n    document.insertString(offset, \"/******/\");\n\n    pointer.getElement();\n\n    document.insertString(offset, \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testSmartPointersSurvivePsiFileUnload() throws IOException {\n    final VirtualFile vfile = myRoot.createChildData(this, \"X.txt\");\n    String xxx = \"xxx\";\n    String text = xxx + \" \" + xxx + \" \" + xxx;\n    VfsUtil.saveText(vfile, text);\n    PsiFile psiFile = PsiManager.getInstance(getProject()).findFile(vfile);\n    assertTrue(String.valueOf(psiFile), psiFile instanceof PsiPlainTextFile);\n    SmartPointerManagerImpl manager = (SmartPointerManagerImpl)SmartPointerManager.getInstance(myProject);\n    TextRange range1 = TextRange.from(text.indexOf(xxx), xxx.length());\n    SmartPsiFileRange pointer1 = manager.createSmartPsiFileRangePointer(psiFile, range1);\n    TextRange range2 = TextRange.from(text.lastIndexOf(xxx), xxx.length());\n    SmartPsiFileRange pointer2 = manager.createSmartPsiFileRangePointer(psiFile, range2);\n    assertNotNull(FileDocumentManager.getInstance().getCachedDocument(vfile));\n\n    SoftReference<PsiFile> ref = new SoftReference<PsiFile>(psiFile);\n    psiFile = null;\n    while (ref.get() != null) {\n      PlatformTestUtil.tryGcSoftlyReachableObjects();\n    }\n    assertNull(FileDocumentManager.getInstance().getCachedDocument(vfile));\n    assertEquals(pointer1.getRange(), range1);\n    WriteCommandAction.runWriteCommandAction(getProject(), new Runnable() {\n      @Override\n      public void run() {\n        FileDocumentManager.getInstance().getDocument(vfile).insertString(0, \" \");\n      }\n    });\n    assertEquals(range1.shiftRight(1), pointer1.getRange());\n    assertEquals(range2.shiftRight(1), pointer2.getRange());\n  }","id":69259,"modified_method":"public void testSmartPointersSurvivePsiFileUnload() throws IOException {\n    final VirtualFile vfile = myRoot.createChildData(this, \"X.txt\");\n    String xxx = \"xxx\";\n    String text = xxx + \" \" + xxx + \" \" + xxx;\n    VfsUtil.saveText(vfile, text);\n    PsiFile psiFile = PsiManager.getInstance(getProject()).findFile(vfile);\n    assertTrue(String.valueOf(psiFile), psiFile instanceof PsiPlainTextFile);\n    SmartPointerManagerImpl manager = getPointerManager();\n    TextRange range1 = TextRange.from(text.indexOf(xxx), xxx.length());\n    SmartPsiFileRange pointer1 = manager.createSmartPsiFileRangePointer(psiFile, range1);\n    TextRange range2 = TextRange.from(text.lastIndexOf(xxx), xxx.length());\n    SmartPsiFileRange pointer2 = manager.createSmartPsiFileRangePointer(psiFile, range2);\n    assertNotNull(FileDocumentManager.getInstance().getCachedDocument(vfile));\n\n    SoftReference<PsiFile> ref = new SoftReference<PsiFile>(psiFile);\n    psiFile = null;\n    while (ref.get() != null) {\n      PlatformTestUtil.tryGcSoftlyReachableObjects();\n    }\n    assertNull(FileDocumentManager.getInstance().getCachedDocument(vfile));\n    assertEquals(pointer1.getRange(), range1);\n    WriteCommandAction.runWriteCommandAction(getProject(), new Runnable() {\n      @Override\n      public void run() {\n        FileDocumentManager.getInstance().getDocument(vfile).insertString(0, \" \");\n      }\n    });\n    assertEquals(range1.shiftRight(1), pointer1.getRange());\n    assertEquals(range2.shiftRight(1), pointer2.getRange());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testPointerToReferenceSurvivesRename() {\n    PsiFile file = configureByText(JavaFileType.INSTANCE, \"class Foo extends Bar {}\");\n    PsiJavaCodeReferenceElement ref = PsiTreeUtil.findElementOfClassAtOffset(file, file.getText().indexOf(\"Bar\"), PsiJavaCodeReferenceElement.class, false);\n    SmartPointerEx pointer = (SmartPointerEx)SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(ref);\n    ref = null;\n\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(pointer.getCachedElement());\n\n    ref = PsiTreeUtil.findElementOfClassAtOffset(file, file.getText().indexOf(\"Bar\"), PsiJavaCodeReferenceElement.class, false);\n    ref.handleElementRename(\"BarImpl\");\n    assertNotNull(pointer.getElement());\n  }","id":69260,"modified_method":"public void testPointerToReferenceSurvivesRename() {\n    PsiFile file = configureByText(JavaFileType.INSTANCE, \"class Foo extends Bar {}\");\n    PsiJavaCodeReferenceElement ref = PsiTreeUtil.findElementOfClassAtOffset(file, file.getText().indexOf(\"Bar\"), PsiJavaCodeReferenceElement.class, false);\n    SmartPointerEx pointer = (SmartPointerEx)createPointer(ref);\n    ref = null;\n\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(pointer.getCachedElement());\n\n    ref = PsiTreeUtil.findElementOfClassAtOffset(file, file.getText().indexOf(\"Bar\"), PsiJavaCodeReferenceElement.class, false);\n    ref.handleElementRename(\"BarImpl\");\n    assertNotNull(pointer.getElement());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testChangeInDocumentTwice() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    SmartPsiElementPointer pointer = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass);\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n\n    int offset = aClass.getTextOffset();\n    document.insertString(offset, \"/*\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    document.insertString(offset + 2, \"*/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","id":69261,"modified_method":"public void testChangeInDocumentTwice() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    SmartPsiElementPointer pointer = createPointer(aClass);\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n\n    int offset = aClass.getTextOffset();\n    document.insertString(offset, \"/*\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    document.insertString(offset + 2, \"*/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testInXml() {\n    final PsiFile file = configureByText(HtmlFileType.INSTANCE,\n                                         \"<!doctype html>\\n\" +\n                                         \"<html>\\n\" +\n                                         \"    <fieldset><\/fieldset>\\n\" +\n                                         \"    <select><\/select>\\n\" +\n                                         \"\\n\" +\n                                         \"    <caret>\\n\" +\n                                         \"<\/html>\"\n    );\n\n    final XmlTag fieldSet = PsiTreeUtil.getParentOfType(file.findElementAt(file.getText().indexOf(\"fieldset\")), XmlTag.class);\n    assertNotNull(fieldSet);\n    assertEquals(\"fieldset\", fieldSet.getName());\n\n    final XmlTag select = PsiTreeUtil.getParentOfType(file.findElementAt(file.getText().indexOf(\"select\")), XmlTag.class);\n    assertNotNull(select);\n    assertEquals(\"select\", select.getName());\n\n    final SmartPsiElementPointer<XmlTag> fieldSetPointer = SmartPointerManager.getInstance(getProject()).createSmartPsiElementPointer(\n      fieldSet);\n    final SmartPsiElementPointer<XmlTag> selectPointer = SmartPointerManager.getInstance(getProject()).createSmartPsiElementPointer(select);\n\n    WriteCommandAction.runWriteCommandAction(getProject(), new Runnable() {\n      @Override\n      public void run() {\n        getEditor().getDocument().insertString(getEditor().getCaretModel().getOffset(), \"<a><\/a>\");\n      }\n    });\n\n    PsiDocumentManager.getInstance(getProject()).commitAllDocuments();\n\n    final XmlTag newFieldSet = fieldSetPointer.getElement();\n    assertNotNull(newFieldSet);\n    assertEquals(\"fieldset\", newFieldSet.getName());\n\n    final XmlTag newSelect = selectPointer.getElement();\n    assertNotNull(newSelect);\n    assertEquals(\"select\", newSelect.getName());\n  }","id":69262,"modified_method":"public void testInXml() {\n    final PsiFile file = configureByText(HtmlFileType.INSTANCE,\n                                         \"<!doctype html>\\n\" +\n                                         \"<html>\\n\" +\n                                         \"    <fieldset><\/fieldset>\\n\" +\n                                         \"    <select><\/select>\\n\" +\n                                         \"\\n\" +\n                                         \"    <caret>\\n\" +\n                                         \"<\/html>\"\n    );\n\n    final XmlTag fieldSet = PsiTreeUtil.getParentOfType(file.findElementAt(file.getText().indexOf(\"fieldset\")), XmlTag.class);\n    assertNotNull(fieldSet);\n    assertEquals(\"fieldset\", fieldSet.getName());\n\n    final XmlTag select = PsiTreeUtil.getParentOfType(file.findElementAt(file.getText().indexOf(\"select\")), XmlTag.class);\n    assertNotNull(select);\n    assertEquals(\"select\", select.getName());\n\n    final SmartPsiElementPointer<XmlTag> fieldSetPointer = createPointer(fieldSet);\n    final SmartPsiElementPointer<XmlTag> selectPointer = createPointer(select);\n\n    WriteCommandAction.runWriteCommandAction(getProject(), () -> {\n      getEditor().getDocument().insertString(getEditor().getCaretModel().getOffset(), \"<a><\/a>\");\n    });\n\n    PsiDocumentManager.getInstance(getProject()).commitAllDocuments();\n\n    final XmlTag newFieldSet = fieldSetPointer.getElement();\n    assertNotNull(newFieldSet);\n    assertEquals(\"fieldset\", newFieldSet.getName());\n\n    final XmlTag newSelect = selectPointer.getElement();\n    assertNotNull(newSelect);\n    assertEquals(\"select\", newSelect.getName());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testGetElementWhenDocumentModified() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    SmartPsiElementPointer pointer = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass);\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n\n    int offset = aClass.getTextOffset();\n    document.insertString(offset, \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    document.insertString(offset, \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\");\n\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","id":69263,"modified_method":"public void testGetElementWhenDocumentModified() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    SmartPsiElementPointer pointer = createPointer(aClass);\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n\n    int offset = aClass.getTextOffset();\n    document.insertString(offset, \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    document.insertString(offset, \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\");\n\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testLargeFileWithManyChangesPerformance() {\n    configureByText(PlainTextFileType.INSTANCE, StringUtil.repeat(\"foo foo \\n\", 50000));\n    final TextRange range = TextRange.from(10, 10);\n    final SmartPsiFileRange pointer = SmartPointerManager.getInstance(myProject).createSmartPsiFileRangePointer(myFile, range);\n\n    final Document document = myFile.getViewProvider().getDocument();\n    assertNotNull(document);\n\n    PlatformTestUtil.startPerformanceTest(\"smart pointer range update\", 25000, () -> {\n      for (int i = 0; i < 10000; i++) {\n        document.insertString(i * 20 + 100, \"x\\n\");\n        assertFalse(PsiDocumentManager.getInstance(myProject).isCommitted(document));\n        assertEquals(range, pointer.getRange());\n      }\n    }).cpuBound().assertTiming();\n\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    assertEquals(range, pointer.getRange());\n  }","id":69264,"modified_method":"public void testLargeFileWithManyChangesPerformance() {\n    configureByText(PlainTextFileType.INSTANCE, StringUtil.repeat(\"foo foo \\n\", 50000));\n    final TextRange range = TextRange.from(10, 10);\n    final SmartPsiFileRange pointer = getPointerManager().createSmartPsiFileRangePointer(myFile, range);\n\n    final Document document = myFile.getViewProvider().getDocument();\n    assertNotNull(document);\n\n    PlatformTestUtil.startPerformanceTest(\"smart pointer range update\", 25000, () -> {\n      for (int i = 0; i < 10000; i++) {\n        document.insertString(i * 20 + 100, \"x\\n\");\n        assertFalse(PsiDocumentManager.getInstance(myProject).isCommitted(document));\n        assertEquals(range, pointer.getRange());\n      }\n    }).cpuBound().assertTiming();\n\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    assertEquals(range, pointer.getRange());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testMoveText() {\n    PsiJavaFile file = (PsiJavaFile)configureByText(JavaFileType.INSTANCE, \"class C1{}\\nclass C2 {}\");\n    DocumentEx document = (DocumentEx)file.getViewProvider().getDocument();\n\n    SmartPsiElementPointer<PsiClass> pointer1 =\n      SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(file.getClasses()[0]);\n    SmartPsiElementPointer<PsiClass> pointer2 =\n      SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(file.getClasses()[1]);\n    assertEquals(\"C1\", pointer1.getElement().getName());\n    assertEquals(\"C2\", pointer2.getElement().getName());\n\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(((SmartPointerEx) pointer1).getCachedElement());\n    assertNull(((SmartPointerEx) pointer2).getCachedElement());\n\n    TextRange range = file.getClasses()[1].getTextRange();\n    document.moveText(range.getStartOffset(), range.getEndOffset(), 0);\n\n    System.out.println(pointer1.getRange());\n    System.out.println(pointer2.getRange());\n\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    assertEquals(\"C1\", pointer1.getElement().getName());\n    assertEquals(\"C2\", pointer2.getElement().getName());\n  }","id":69265,"modified_method":"public void testMoveText() {\n    PsiJavaFile file = (PsiJavaFile)configureByText(JavaFileType.INSTANCE, \"class C1{}\\nclass C2 {}\");\n    DocumentEx document = (DocumentEx)file.getViewProvider().getDocument();\n\n    SmartPsiElementPointer<PsiClass> pointer1 =\n      createPointer(file.getClasses()[0]);\n    SmartPsiElementPointer<PsiClass> pointer2 =\n      createPointer(file.getClasses()[1]);\n    assertEquals(\"C1\", pointer1.getElement().getName());\n    assertEquals(\"C2\", pointer2.getElement().getName());\n\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(((SmartPointerEx) pointer1).getCachedElement());\n    assertNull(((SmartPointerEx) pointer2).getCachedElement());\n\n    TextRange range = file.getClasses()[1].getTextRange();\n    document.moveText(range.getStartOffset(), range.getEndOffset(), 0);\n\n    System.out.println(pointer1.getRange());\n    System.out.println(pointer2.getRange());\n\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    assertEquals(\"C1\", pointer1.getElement().getName());\n    assertEquals(\"C2\", pointer2.getElement().getName());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCreatePointerInBeforeDocumentChange() {\n    final PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n\n    final SmartPsiElementPointer[] pointer = new SmartPsiElementPointer[1];\n    int offset = aClass.getTextOffset();\n    DocumentListener listener = new DocumentListener() {\n      @Override\n      public void beforeDocumentChange(DocumentEvent event) {\n        pointer[0] = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass);\n      }\n\n      @Override\n      public void documentChanged(DocumentEvent event) {\n      }\n    };\n    EditorEventMulticaster multicaster = EditorFactory.getInstance().getEventMulticaster();\n    multicaster.addDocumentListener(listener);\n    try {\n      document.insertString(offset, \"/******/\");\n    }\n    finally {\n      multicaster.removeDocumentListener(listener);\n    }\n\n    pointer[0].getElement();\n\n    document.insertString(0, \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = pointer[0].getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","id":69266,"modified_method":"public void testCreatePointerInBeforeDocumentChange() {\n    final PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n\n    final SmartPsiElementPointer[] pointer = new SmartPsiElementPointer[1];\n    int offset = aClass.getTextOffset();\n    DocumentListener listener = new DocumentListener() {\n      @Override\n      public void beforeDocumentChange(DocumentEvent event) {\n        pointer[0] = createPointer(aClass);\n      }\n\n      @Override\n      public void documentChanged(DocumentEvent event) {\n      }\n    };\n    EditorEventMulticaster multicaster = EditorFactory.getInstance().getEventMulticaster();\n    multicaster.addDocumentListener(listener);\n    try {\n      document.insertString(offset, \"/******/\");\n    }\n    finally {\n      multicaster.removeDocumentListener(listener);\n    }\n\n    pointer[0].getElement();\n\n    document.insertString(0, \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = pointer[0].getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testPointerToEmptyElement() {\n    PsiFile file = configureByText(JavaFileType.INSTANCE, \"class Foo {\\n\" +\n                                                             \"  Test<String> test = new Test<>();\\n\" +\n                                                             \"}\");\n    PsiJavaCodeReferenceElement ref = PsiTreeUtil.findElementOfClassAtOffset(file, file.getText().indexOf(\"<>\"), PsiJavaCodeReferenceElement.class, false);\n    SmartPointerEx pointer = (SmartPointerEx)SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(\n      ref.getParameterList().getTypeParameterElements()[0]);\n    ref = null;\n\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(pointer.getCachedElement());\n\n    assertInstanceOf(pointer.getElement(), PsiTypeElement.class);\n  }","id":69267,"modified_method":"public void testPointerToEmptyElement() {\n    PsiFile file = configureByText(JavaFileType.INSTANCE, \"class Foo {\\n\" +\n                                                             \"  Test<String> test = new Test<>();\\n\" +\n                                                             \"}\");\n    PsiJavaCodeReferenceElement ref = PsiTreeUtil.findElementOfClassAtOffset(file, file.getText().indexOf(\"<>\"), PsiJavaCodeReferenceElement.class, false);\n    SmartPointerEx pointer = (SmartPointerEx)createPointer(ref.getParameterList().getTypeParameterElements()[0]);\n    ref = null;\n\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(pointer.getCachedElement());\n\n    assertInstanceOf(pointer.getElement(), PsiTypeElement.class);\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testChangeInPsi() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    SmartPsiElementPointer pointer = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass);\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n\n    int offset = aClass.getTextOffset();\n    document.insertString(offset, \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","id":69268,"modified_method":"public void testChangeInPsi() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    SmartPsiElementPointer pointer = createPointer(aClass);\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n\n    int offset = aClass.getTextOffset();\n    document.insertString(offset, \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testTypePointer() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    final PsiTypeElement typeElement = myJavaFacade.findClass(\"Test\",GlobalSearchScope.allScope(getProject())).getFields()[0].getTypeElement();\n\n    SmartPsiElementPointer typePointer = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(typeElement);\n    SmartPsiElementPointer classPointer = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass);\n\n    Document aClassDocument = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n    Document testDocument = PsiDocumentManager.getInstance(myProject).getDocument(typeElement.getContainingFile());\n    assertNotSame(aClassDocument, testDocument);\n\n    aClassDocument.insertString(aClass.getTextOffset(), \"/**/\");\n    testDocument.insertString(typeElement.getTextOffset(), \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = typePointer.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiTypeElement);\n    assertTrue(element.isValid());\n    assertEquals(classPointer.getElement(), PsiUtil.resolveClassInType(((PsiTypeElement)element).getType()));\n  }","id":69269,"modified_method":"public void testTypePointer() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n    final PsiTypeElement typeElement = myJavaFacade.findClass(\"Test\",GlobalSearchScope.allScope(getProject())).getFields()[0].getTypeElement();\n\n    SmartPsiElementPointer typePointer = createPointer(typeElement);\n    SmartPsiElementPointer classPointer = createPointer(aClass);\n\n    Document aClassDocument = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n    Document testDocument = PsiDocumentManager.getInstance(myProject).getDocument(typeElement.getContainingFile());\n    assertNotSame(aClassDocument, testDocument);\n\n    aClassDocument.insertString(aClass.getTextOffset(), \"/**/\");\n    testDocument.insertString(typeElement.getTextOffset(), \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = typePointer.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiTypeElement);\n    assertTrue(element.isValid());\n    assertEquals(classPointer.getElement(), PsiUtil.resolveClassInType(((PsiTypeElement)element).getType()));\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testEqualPointersWhenCreatedFromStubAndAST() {\n    PsiJavaFile file = (PsiJavaFile)myJavaFacade.findClass(\"AClass\", GlobalSearchScope.allScope(getProject())).getContainingFile();\n\n    final SmartPointerManager manager = SmartPointerManager.getInstance(myProject);\n    int hash1 = file.getClasses()[0].hashCode();\n    final SmartPsiElementPointer<PsiClass> pointer1 = manager.createSmartPsiElementPointer(file.getClasses()[0]);\n    assertNotNull(((PsiFileImpl)file).getStubTree());\n    \n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n\n    final FileASTNode node = file.getNode();\n    final SmartPsiElementPointer<PsiClass> pointer2 = manager.createSmartPsiElementPointer(file.getClasses()[0]);\n    assertFalse(hash1 == file.getClasses()[0].hashCode());\n    assertEquals(pointer1, pointer2);\n    assertEquals(pointer1.getRange(), pointer2.getRange());\n    assertNotNull(node);\n  }","id":69270,"modified_method":"public void testEqualPointersWhenCreatedFromStubAndAST() {\n    PsiJavaFile file = (PsiJavaFile)myJavaFacade.findClass(\"AClass\", GlobalSearchScope.allScope(getProject())).getContainingFile();\n\n    int hash1 = file.getClasses()[0].hashCode();\n    final SmartPsiElementPointer<PsiClass> pointer1 = createPointer(file.getClasses()[0]);\n    assertNotNull(((PsiFileImpl)file).getStubTree());\n    \n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n\n    final FileASTNode node = file.getNode();\n    final SmartPsiElementPointer<PsiClass> pointer2 = createPointer(file.getClasses()[0]);\n    assertFalse(hash1 == file.getClasses()[0].hashCode());\n    assertEquals(pointer1, pointer2);\n    assertEquals(pointer1.getRange(), pointer2.getRange());\n    assertNotNull(node);\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testCreatePointerWhenNoPsiFile() {\n    myPsiManager.startBatchFilesProcessingMode(); // to use weak refs\n\n    try {\n      final PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n      assertNotNull(aClass);\n\n      VirtualFile vFile = myRoot.findChild(\"AClass.java\");\n      assertNotNull(vFile);\n      PsiDocumentManager psiDocumentManager = PsiDocumentManager.getInstance(myProject);\n      Document document = FileDocumentManager.getInstance().getDocument(vFile);\n\n      final SmartPsiElementPointer pointer = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass);\n\n      System.gc();\n      /*\n      PsiFile psiFile = myPsiManager.getFileManager().getCachedPsiFile(vFile);\n      assertNull(psiFile);\n      */\n\n      document.insertString(0, \"class Foo{}\\n\");\n\n      PsiElement element = pointer.getElement();\n      assertEquals(aClass, element);\n\n      document.insertString(0, \"/**/\");\n      psiDocumentManager.commitAllDocuments();\n\n      if (aClass.isValid()) {\n        aClass.getChildren();\n      }\n\n      element = pointer.getElement();\n      assertNotNull(element);\n      assertTrue(element instanceof PsiClass);\n      assertTrue(element.isValid());\n    }\n    finally {\n      myPsiManager.finishBatchFilesProcessingMode(); // to use weak refs\n    }\n  }","id":69271,"modified_method":"public void testCreatePointerWhenNoPsiFile() {\n    myPsiManager.startBatchFilesProcessingMode(); // to use weak refs\n\n    try {\n      final PsiClass aClass = myJavaFacade.findClass(\"AClass\",GlobalSearchScope.allScope(getProject()));\n      assertNotNull(aClass);\n\n      VirtualFile vFile = myRoot.findChild(\"AClass.java\");\n      assertNotNull(vFile);\n      PsiDocumentManager psiDocumentManager = PsiDocumentManager.getInstance(myProject);\n      Document document = FileDocumentManager.getInstance().getDocument(vFile);\n\n      final SmartPsiElementPointer pointer = createPointer(aClass);\n\n      System.gc();\n      /*\n      PsiFile psiFile = myPsiManager.getFileManager().getCachedPsiFile(vFile);\n      assertNull(psiFile);\n      */\n\n      document.insertString(0, \"class Foo{}\\n\");\n\n      PsiElement element = pointer.getElement();\n      assertEquals(aClass, element);\n\n      document.insertString(0, \"/**/\");\n      psiDocumentManager.commitAllDocuments();\n\n      if (aClass.isValid()) {\n        aClass.getChildren();\n      }\n\n      element = pointer.getElement();\n      assertNotNull(element);\n      assertTrue(element instanceof PsiClass);\n      assertTrue(element.isValid());\n    }\n    finally {\n      myPsiManager.finishBatchFilesProcessingMode(); // to use weak refs\n    }\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testNonAnchoredStubbedElement() {\n    PsiFile file = configureByText(JavaFileType.INSTANCE, \"class Foo { { @NotNull String foo; } }\");\n    StubTree stubTree = ((PsiFileImpl)file).getStubTree();\n    assertNotNull(stubTree);\n    PsiElement anno = stubTree.getPlainList().stream().map(element -> element.getPsi()).filter(psiElement -> psiElement instanceof PsiAnnotation).findFirst().get();\n\n    SmartPsiElementPointer<PsiElement> pointer = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(anno);\n    assertNotNull(((PsiFileImpl)file).getStubTree());\n\n    stubTree = null;\n    anno = null;\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(((SmartPointerEx) pointer).getCachedElement());\n\n    file.getViewProvider().getDocument().insertString(0, \" \");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    assertNotNull(pointer.getElement());\n  }","id":69272,"modified_method":"public void testNonAnchoredStubbedElement() {\n    PsiFile file = configureByText(JavaFileType.INSTANCE, \"class Foo { { @NotNull String foo; } }\");\n    StubTree stubTree = ((PsiFileImpl)file).getStubTree();\n    assertNotNull(stubTree);\n    PsiElement anno = stubTree.getPlainList().stream().map(StubElement::getPsi).filter(psiElement -> psiElement instanceof PsiAnnotation).findFirst().get();\n\n    SmartPsiElementPointer<PsiElement> pointer = createPointer(anno);\n    assertNotNull(((PsiFileImpl)file).getStubTree());\n\n    stubTree = null;\n    anno = null;\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(((SmartPointerEx) pointer).getCachedElement());\n\n    file.getViewProvider().getDocument().insertString(0, \" \");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    assertNotNull(pointer.getElement());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testPointerToEmptyElement2() {\n    PsiFile file = configureByText(JavaFileType.INSTANCE, \"class Foo {\\n\" +\n                                                             \"  void foo() {}\\n\" +\n                                                             \"}\");\n    PsiMethod method = PsiTreeUtil.findElementOfClassAtOffset(file, file.getText().indexOf(\"void\"), PsiMethod.class, false);\n    SmartPointerEx pointer1 = (SmartPointerEx)SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(method.getModifierList());\n    SmartPointerEx pointer2 = (SmartPointerEx)SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(method.getTypeParameterList());\n    method = null;\n\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(pointer1.getCachedElement());\n    assertNull(pointer2.getCachedElement());\n\n    assertInstanceOf(pointer1.getElement(), PsiModifierList.class);\n    assertInstanceOf(pointer2.getElement(), PsiTypeParameterList.class);\n  }","id":69273,"modified_method":"public void testPointerToEmptyElement2() {\n    PsiFile file = configureByText(JavaFileType.INSTANCE, \"class Foo {\\n\" +\n                                                             \"  void foo() {}\\n\" +\n                                                             \"}\");\n    PsiMethod method = PsiTreeUtil.findElementOfClassAtOffset(file, file.getText().indexOf(\"void\"), PsiMethod.class, false);\n    SmartPointerEx pointer1 = (SmartPointerEx)createPointer(method.getModifierList());\n    SmartPointerEx pointer2 = (SmartPointerEx)createPointer(method.getTypeParameterList());\n    method = null;\n\n    PlatformTestUtil.tryGcSoftlyReachableObjects();\n    assertNull(pointer1.getCachedElement());\n    assertNull(pointer2.getCachedElement());\n\n    assertInstanceOf(pointer1.getElement(), PsiModifierList.class);\n    assertInstanceOf(pointer2.getElement(), PsiTypeParameterList.class);\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testReplaceFile() throws IOException {\n    VirtualFile vfile = myRoot.createChildData(this, \"X.java\");\n    VfsUtil.saveText(vfile, \"public class X { public int X; }\");\n\n    PsiClass aClass = myJavaFacade.findClass(\"X\", GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n    assertTrue(aClass.isValid());\n\n    SmartPsiElementPointer classp = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass);\n    SmartPsiElementPointer filep = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass.getContainingFile());\n\n    FileContentUtil.reparseFiles(myProject, Collections.<VirtualFile>singleton(vfile), true);\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    assertFalse(aClass.isValid());\n\n    PsiElement element = classp.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n    assertEquals(vfile, element.getContainingFile().getVirtualFile());\n\n    element = filep.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiFile);\n    assertTrue(element.isValid());\n    assertEquals(vfile, element.getContainingFile().getVirtualFile());\n  }","id":69274,"modified_method":"public void testReplaceFile() throws IOException {\n    VirtualFile vfile = myRoot.createChildData(this, \"X.java\");\n    VfsUtil.saveText(vfile, \"public class X { public int X; }\");\n\n    PsiClass aClass = myJavaFacade.findClass(\"X\", GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n    assertTrue(aClass.isValid());\n\n    SmartPsiElementPointer classp = createPointer(aClass);\n    SmartPsiElementPointer filep = createPointer(aClass.getContainingFile());\n\n    FileContentUtil.reparseFiles(myProject, Collections.<VirtualFile>singleton(vfile), true);\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    assertFalse(aClass.isValid());\n\n    PsiElement element = classp.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n    assertEquals(vfile, element.getContainingFile().getVirtualFile());\n\n    element = filep.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiFile);\n    assertTrue(element.isValid());\n    assertEquals(vfile, element.getContainingFile().getVirtualFile());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testUpdateAfterInsertingIdenticalText() {\n    PsiJavaFile file = (PsiJavaFile)configureByText(StdFileTypes.JAVA, \"class Foo {\\n\" +\n                                                                       \"    void m() {\\n\" +\n                                                                       \"    }\\n\" +\n                                                                       \"<caret>}\\n\");\n    PsiMethod method = file.getClasses()[0].getMethods()[0];\n    TextRange originalRange = method.getTextRange();\n    SmartPsiElementPointer pointer = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(method);\n\n    EditorModificationUtil.insertStringAtCaret(myEditor, \"    void m() {\\n\" +\n                                                         \"    }\\n\");\n    PsiDocumentManager.getInstance(myProject).commitDocument(myEditor.getDocument());\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    TextRange newRange = element.getTextRange();\n    assertEquals(originalRange, newRange);\n  }","id":69275,"modified_method":"public void testUpdateAfterInsertingIdenticalText() {\n    PsiJavaFile file = (PsiJavaFile)configureByText(StdFileTypes.JAVA, \"class Foo {\\n\" +\n                                                                       \"    void m() {\\n\" +\n                                                                       \"    }\\n\" +\n                                                                       \"<caret>}\\n\");\n    PsiMethod method = file.getClasses()[0].getMethods()[0];\n    TextRange originalRange = method.getTextRange();\n    SmartPsiElementPointer pointer = createPointer(method);\n\n    EditorModificationUtil.insertStringAtCaret(myEditor, \"    void m() {\\n\" +\n                                                         \"    }\\n\");\n    PsiDocumentManager.getInstance(myProject).commitDocument(myEditor.getDocument());\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    TextRange newRange = element.getTextRange();\n    assertEquals(originalRange, newRange);\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testChangeInDocument() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\", GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    SmartPsiElementPointer pointer = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass);\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n\n    int offset = aClass.getTextOffset();\n    document.insertString(offset, \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","id":69276,"modified_method":"public void testChangeInDocument() {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\", GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    SmartPsiElementPointer pointer = createPointer(aClass);\n    Document document = PsiDocumentManager.getInstance(myProject).getDocument(aClass.getContainingFile());\n\n    int offset = aClass.getTextOffset();\n    document.insertString(offset, \"/**/\");\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    PsiElement element = pointer.getElement();\n    assertNotNull(element);\n    assertTrue(element instanceof PsiClass);\n    assertTrue(element.isValid());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testPointerDisambiguationAfterDupLine() throws Exception {\n    PsiJavaFile file = (PsiJavaFile)configureByText(StdFileTypes.JAVA, \"class XXX{ void foo() { \\n\" +\n                                       \" <caret>foo();\\n\" +\n                                       \"}}\");\n    PsiClass aClass = file.getClasses()[0];\n    assertNotNull(aClass);\n\n    PsiReferenceExpression ref1 = PsiTreeUtil.getParentOfType(PsiUtilBase.getElementAtCaret(getEditor()), PsiReferenceExpression.class);\n    SmartPsiElementPointer pointer1 = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(ref1);\n\n    ctrlD();\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    Set<PsiReferenceExpression> refs = new THashSet<PsiReferenceExpression>();\n    int offset=0;\n    while (true) {\n      offset = getEditor().getDocument().getText().indexOf(\"foo();\", offset+1);\n      if (offset == -1) break;\n      PsiReferenceExpression ref2 = PsiTreeUtil.getParentOfType(getFile().findElementAt(offset), PsiReferenceExpression.class);\n      refs.add(ref2);\n    }\n    refs.remove(ref1);\n    assertEquals(1, refs.size());\n    PsiReferenceExpression ref2 = refs.iterator().next();\n    assertNotSame(ref1, ref2);\n    SmartPsiElementPointer pointer2 = SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(ref2);\n    assertNotSame(pointer1, pointer2);\n\n    PsiElement element1 = pointer1.getElement();\n    PsiElement element2 = pointer2.getElement();\n\n    assertNotNull(element1);\n    assertNotNull(element2);\n    assertNotSame(element1, element2);\n\n    assertFalse(SmartPointerManager.getInstance(myProject).pointToTheSameElement(pointer1, pointer2));\n  }","id":69277,"modified_method":"public void testPointerDisambiguationAfterDupLine() throws Exception {\n    PsiJavaFile file = (PsiJavaFile)configureByText(StdFileTypes.JAVA, \"class XXX{ void foo() { \\n\" +\n                                       \" <caret>foo();\\n\" +\n                                       \"}}\");\n    PsiClass aClass = file.getClasses()[0];\n    assertNotNull(aClass);\n\n    PsiReferenceExpression ref1 = PsiTreeUtil.getParentOfType(PsiUtilBase.getElementAtCaret(getEditor()), PsiReferenceExpression.class);\n    SmartPsiElementPointer pointer1 = createPointer(ref1);\n\n    ctrlD();\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n\n    Set<PsiReferenceExpression> refs = new THashSet<PsiReferenceExpression>();\n    int offset=0;\n    while (true) {\n      offset = getEditor().getDocument().getText().indexOf(\"foo();\", offset+1);\n      if (offset == -1) break;\n      PsiReferenceExpression ref2 = PsiTreeUtil.getParentOfType(getFile().findElementAt(offset), PsiReferenceExpression.class);\n      refs.add(ref2);\n    }\n    refs.remove(ref1);\n    assertEquals(1, refs.size());\n    PsiReferenceExpression ref2 = refs.iterator().next();\n    assertNotSame(ref1, ref2);\n    SmartPsiElementPointer pointer2 = createPointer(ref2);\n    assertNotSame(pointer1, pointer2);\n\n    PsiElement element1 = pointer1.getElement();\n    PsiElement element2 = pointer2.getElement();\n\n    assertNotNull(element1);\n    assertNotNull(element2);\n    assertNotSame(element1, element2);\n\n    assertFalse(getPointerManager().pointToTheSameElement(pointer1, pointer2));\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testConvergingRanges() {\n    configureByText(PlainTextFileType.INSTANCE, \"aba\");\n    final Document document = myFile.getViewProvider().getDocument();\n    assertNotNull(document);\n\n    SmartPsiFileRange range1 = SmartPointerManager.getInstance(myProject).createSmartPsiFileRangePointer(myFile, TextRange.create(0, 2));\n    SmartPsiFileRange range2 = SmartPointerManager.getInstance(myProject).createSmartPsiFileRangePointer(myFile, TextRange.create(1, 3));\n\n    document.deleteString(0, 1);\n    document.deleteString(1, 2);\n    assertEquals(TextRange.create(0, 1), range1.getRange());\n    assertEquals(TextRange.create(0, 1), range2.getRange());\n\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    assertEquals(TextRange.create(0, 1), range1.getRange());\n    assertEquals(TextRange.create(0, 1), range2.getRange());\n\n    document.insertString(0, \"a\");\n    assertEquals(TextRange.create(1, 2), range1.getRange());\n    assertEquals(TextRange.create(1, 2), range2.getRange());\n\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    assertEquals(TextRange.create(1, 2), range1.getRange());\n    assertEquals(TextRange.create(1, 2), range2.getRange());\n  }","id":69278,"modified_method":"public void testConvergingRanges() {\n    configureByText(PlainTextFileType.INSTANCE, \"aba\");\n    final Document document = myFile.getViewProvider().getDocument();\n    assertNotNull(document);\n\n    SmartPsiFileRange range1 = getPointerManager().createSmartPsiFileRangePointer(myFile, TextRange.create(0, 2));\n    SmartPsiFileRange range2 = getPointerManager().createSmartPsiFileRangePointer(myFile, TextRange.create(1, 3));\n\n    document.deleteString(0, 1);\n    document.deleteString(1, 2);\n    assertEquals(TextRange.create(0, 1), range1.getRange());\n    assertEquals(TextRange.create(0, 1), range2.getRange());\n\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    assertEquals(TextRange.create(0, 1), range1.getRange());\n    assertEquals(TextRange.create(0, 1), range2.getRange());\n\n    document.insertString(0, \"a\");\n    assertEquals(TextRange.create(1, 2), range1.getRange());\n    assertEquals(TextRange.create(1, 2), range2.getRange());\n\n    PsiDocumentManager.getInstance(myProject).commitAllDocuments();\n    assertEquals(TextRange.create(1, 2), range1.getRange());\n    assertEquals(TextRange.create(1, 2), range2.getRange());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testPsiChangesWithLazyPointers() throws Exception {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\", GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    final SmartPsiElementPointer<PsiIdentifier> pointer =\n      SmartPointerManager.getInstance(myProject).createSmartPsiElementPointer(aClass.getNameIdentifier());\n    final PsiComment javadoc =\n      JavaPsiFacade.getInstance(aClass.getProject()).getElementFactory().createCommentFromText(\"/** javadoc */\", aClass);\n    aClass.getParent().addBefore(javadoc, aClass);\n\n    final PsiIdentifier elt = pointer.getElement();\n    assertNotNull(elt);\n    assertSame(elt, aClass.getNameIdentifier());\n  }","id":69279,"modified_method":"public void testPsiChangesWithLazyPointers() throws Exception {\n    PsiClass aClass = myJavaFacade.findClass(\"AClass\", GlobalSearchScope.allScope(getProject()));\n    assertNotNull(aClass);\n\n    final SmartPsiElementPointer<PsiIdentifier> pointer =\n      createPointer(aClass.getNameIdentifier());\n    final PsiComment javadoc =\n      JavaPsiFacade.getInstance(aClass.getProject()).getElementFactory().createCommentFromText(\"/** javadoc */\", aClass);\n    aClass.getParent().addBefore(javadoc, aClass);\n\n    final PsiIdentifier elt = pointer.getElement();\n    assertNotNull(elt);\n    assertSame(elt, aClass.getNameIdentifier());\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testInXml2() {\n    final PsiFile file = configureByText(XmlFileType.INSTANCE,\n                                         \"<html>\\n\" +\n                                         \"    <ul class=\\\"dropdown-menu\\\">\\n\" +\n                                         \"        <li><a href=\\\"#\\\">One more separated link<\/a><\/li>\\n\" +\n                                         \"    <\/ul>\\n\" +\n                                         \"<caret>\\n\" +\n                                         \"<\/html>\"\n    );\n\n    final XmlTag ul = PsiTreeUtil.getParentOfType(file.findElementAt(file.getText().indexOf(\"ul\")), XmlTag.class);\n    assertNotNull(ul);\n    assertEquals(\"ul\", ul.getName());\n    assertEquals(\"dropdown-menu\", ul.getAttributeValue(\"class\"));\n\n    SmartPsiElementPointer<XmlTag> ulPointer = SmartPointerManager.getInstance(getProject()).createSmartPsiElementPointer(ul);\n\n    WriteCommandAction.runWriteCommandAction(getProject(), new Runnable() {\n      @Override\n      public void run() {\n        int offset = getEditor().getCaretModel().getOffset();\n        getEditor().getDocument().insertString(offset, \"    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n\" +\n                                                       \"    <\/ul>\\n\");\n      }\n    });\n\n    PsiDocumentManager.getInstance(getProject()).commitAllDocuments();\n\n    final XmlTag newUl = ulPointer.getElement();\n    assertNotNull(newUl);\n    assertEquals(\"ul\", newUl.getName());\n    assertEquals(\"dropdown-menu\", newUl.getAttributeValue(\"class\"));\n  }","id":69280,"modified_method":"public void testInXml2() {\n    final PsiFile file = configureByText(XmlFileType.INSTANCE,\n                                         \"<html>\\n\" +\n                                         \"    <ul class=\\\"dropdown-menu\\\">\\n\" +\n                                         \"        <li><a href=\\\"#\\\">One more separated link<\/a><\/li>\\n\" +\n                                         \"    <\/ul>\\n\" +\n                                         \"<caret>\\n\" +\n                                         \"<\/html>\"\n    );\n\n    final XmlTag ul = PsiTreeUtil.getParentOfType(file.findElementAt(file.getText().indexOf(\"ul\")), XmlTag.class);\n    assertNotNull(ul);\n    assertEquals(\"ul\", ul.getName());\n    assertEquals(\"dropdown-menu\", ul.getAttributeValue(\"class\"));\n\n    SmartPsiElementPointer<XmlTag> ulPointer = createPointer(ul);\n\n    WriteCommandAction.runWriteCommandAction(getProject(), () -> {\n      int offset = getEditor().getCaretModel().getOffset();\n      getEditor().getDocument().insertString(offset, \"    <ul class=\\\"nav navbar-nav navbar-right\\\">\\n\" +\n                                                     \"    <\/ul>\\n\");\n    });\n\n    PsiDocumentManager.getInstance(getProject()).commitAllDocuments();\n\n    final XmlTag newUl = ulPointer.getElement();\n    assertNotNull(newUl);\n    assertEquals(\"ul\", newUl.getName());\n    assertEquals(\"dropdown-menu\", newUl.getAttributeValue(\"class\"));\n  }","commit_id":"aa48a32aac40a9bb137857f31b9d0ff2aa8a8cff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n\t\tsetHasOptionsMenu(true);\n\t\tplugin = OsmandPlugin.getEnabledPlugin(OsmEditingPlugin.class);\n\t\tView view = getActivity().getLayoutInflater().inflate(R.layout.update_index, container, false);\n\t\tview.findViewById(R.id.select_all).setVisibility(View.GONE);\n\t\t((TextView) view.findViewById(R.id.header)).setText(R.string.your_edits);\n\t\tdbpoi = new OpenstreetmapsDbHelper(getActivity());\n\t\tdbbug = new OsmBugsDbHelper(getActivity());\n\n\t\tremotepoi = new OpenstreetmapRemoteUtil(getActivity());\n\t\tremotebug = new OsmBugsRemoteUtil(getMyApplication());\n\n\t\treturn view;\n\t}","id":69281,"modified_method":"@Override\n\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n\t\tsetHasOptionsMenu(true);\n\t\tplugin = OsmandPlugin.getEnabledPlugin(OsmEditingPlugin.class);\n\t\tView view = getActivity().getLayoutInflater().inflate(R.layout.update_index, container, false);\n\t\t((TextView) view.findViewById(R.id.header)).setText(R.string.your_edits);\n\t\tdbpoi = new OpenstreetmapsDbHelper(getActivity());\n\t\tdbbug = new OsmBugsDbHelper(getActivity());\n\n\t\tremotepoi = new OpenstreetmapRemoteUtil(getActivity());\n\t\tremotebug = new OsmBugsRemoteUtil(getMyApplication());\n\n\t\tfinal CheckBox selectAll = (CheckBox) view.findViewById(R.id.select_all);\n\t\tselectAll.setVisibility(View.GONE);\n\t\tselectAll.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tif (selectAll.isChecked()) {\n\t\t\t\t\tselectAll();\n\t\t\t\t} else {\n\t\t\t\t\tdeselectAll();\n\t\t\t\t}\n\t\t\t\tupdateSelectionTitle(actionMode);\n\t\t\t}\n\t\t});\n\t\treturn view;\n\t}","commit_id":"ef52cb178f8748e91b445e923b2ab0f70523406b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n\t\tmenu.clear();\n\n\t\tif (ScreenOrientationHelper.isOrientationPortrait(getActivity())) {\n\t\t\tmenu = ((ActionBarProgressActivity) getActivity()).getClearToolbar(true).getMenu();\n\t\t} else {\n\t\t\t((ActionBarProgressActivity) getActivity()).getClearToolbar(false);\n\t\t}\n\t\tMenuItem item = menu.add(R.string.local_openstreetmap_uploadall).\n\t\t\t\tsetIcon(R.drawable.ic_action_export);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tenterUploadMode();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\n\t\titem = menu.add(R.string.local_osm_changes_backup).\n\t\t\t\tsetIcon(R.drawable.ic_action_gshare_dark);\n\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tnew BackupOpenstreetmapPointAsyncTask().execute(dataPoints.toArray(new OsmPoint[0]));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\titem = menu.add(R.string.shared_string_delete_all).\n\t\t\t\tsetIcon(R.drawable.ic_action_delete_dark);\n\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tenterDeleteMode();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}","id":69282,"modified_method":"@Override\n\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n\t\tmenu.clear();\n\n\t\tif (ScreenOrientationHelper.isOrientationPortrait(getActivity())) {\n\t\t\tmenu = ((ActionBarProgressActivity) getActivity()).getClearToolbar(true).getMenu();\n\t\t} else {\n\t\t\t((ActionBarProgressActivity) getActivity()).getClearToolbar(false);\n\t\t}\n\t\tMenuItem item = menu.add(R.string.local_openstreetmap_uploadall).\n\t\t\t\tsetIcon(R.drawable.ic_action_export);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tenterSelectionMode(MODE_UPLOAD);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\n\t\titem = menu.add(R.string.local_osm_changes_backup).\n\t\t\t\tsetIcon(R.drawable.ic_action_gshare_dark);\n\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tnew BackupOpenstreetmapPointAsyncTask().execute(dataPoints.toArray(new OsmPoint[0]));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\titem = menu.add(R.string.shared_string_delete_all).\n\t\t\t\tsetIcon(R.drawable.ic_action_delete_dark);\n\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\titem.setOnMenuItemClickListener(new MenuItem.OnMenuItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onMenuItemClick(MenuItem item) {\n\t\t\t\tenterSelectionMode(MODE_DELETE);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t}","commit_id":"ef52cb178f8748e91b445e923b2ab0f70523406b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void updateSelectionMode(ActionMode m) {\n\t\tif(osmEditsSelected.size() > 0) {\n\t\t\tm.setTitle(osmEditsSelected.size() + \" \" + getMyApplication().getString(R.string.shared_string_selected_lowercase));\n\t\t} else{\n\t\t\tm.setTitle(\"\");\n\t\t}\n\t}","id":69283,"modified_method":"private void updateSelectionMode(ActionMode m) {\n\t\tupdateSelectionTitle(m);\n\t\trefreshSelectAll();\n\t}","commit_id":"ef52cb178f8748e91b445e923b2ab0f70523406b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void enableSelectionMode(boolean selectionMode) {\n\t\tthis.selectionMode = selectionMode;\n\t\t((FavoritesActivity)getActivity()).setToolbarVisibility(!selectionMode);\n\t}","id":69284,"modified_method":"private void enableSelectionMode(boolean selectionMode) {\n\t\tthis.selectionMode = selectionMode;\n\t\tgetView().findViewById(R.id.select_all).setVisibility(selectionMode? View.VISIBLE : View.GONE);\n\t\t((FavoritesActivity)getActivity()).setToolbarVisibility(!selectionMode);\n\t}","commit_id":"ef52cb178f8748e91b445e923b2ab0f70523406b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public static void updateCurrentTrack(View v, final Activity ctx, OsmandApplication app) {\n\t\tif (OsmandPlugin.getEnabledPlugin(OsmandMonitoringPlugin.class) == null) {\n\t\t\treturn;\n\t\t}\n\t\tif (v == null) {\n\t\t\treturn;\n\t\t}\n\t\tfinal boolean isRecording = app.getSettings().SAVE_GLOBAL_TRACK_TO_GPX.get();\n\t\tImageButton stop = ((ImageButton) v.findViewById(R.id.stop));\n\t\tstop.setImageDrawable(app.getIconsCache().getContentIcon(\n\t\t\t\tisRecording ? R.drawable.ic_action_rec_stop : R.drawable.ic_play_dark));\n\t\tstop.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tfinal OsmandMonitoringPlugin plugin = OsmandPlugin.getEnabledPlugin(OsmandMonitoringPlugin.class);\n\t\t\t\tif (isRecording) {\n\t\t\t\t\tplugin.stopRecording();\n\t\t\t\t} else {\n\t\t\t\t\tplugin.startGPXMonitoring(ctx);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tSavingTrackHelper sth = app.getSavingTrackHelper();\n\t\tImageButton save = ((ImageButton) v.findViewById(R.id.show_on_map));\n\t\tsave.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tRunnable run = new Runnable() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\tfinal OsmandMonitoringPlugin plugin = OsmandPlugin\n\t\t\t\t\t\t\t\t.getEnabledPlugin(OsmandMonitoringPlugin.class);\n\t\t\t\t\t\tplugin.saveCurrentTrack();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\trun.run();\n\t\t\t}\n\t\t});\n\t\tif (sth.getPoints() > 0 || sth.getDistance() > 0) {\n\t\t\tsave.setVisibility(View.VISIBLE);\n\t\t} else {\n\t\t\tsave.setVisibility(View.GONE);\n\t\t}\n\t\tsave.setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_action_gsave_dark));\n\n\t\t((TextView) v.findViewById(R.id.points_count)).setText(sth.getPoints() + \"\");\n\t\t((TextView) v.findViewById(R.id.distance))\n\t\t\t\t.setText(OsmAndFormatter.getFormattedDistance(sth.getDistance(), app));\n\t\tv.findViewById(R.id.points_count).setVisibility(View.VISIBLE);\n\t\tv.findViewById(R.id.points_icon).setVisibility(View.VISIBLE);\n\t\tv.findViewById(R.id.distance).setVisibility(View.VISIBLE);\n\t\tv.findViewById(R.id.distance_icon).setVisibility(View.VISIBLE);\n\t}","id":69285,"modified_method":"public static void updateCurrentTrack(View v, final Activity ctx, OsmandApplication app) {\n\t\tif (OsmandPlugin.getEnabledPlugin(OsmandMonitoringPlugin.class) == null) {\n\t\t\treturn;\n\t\t}\n\t\tif (v == null) {\n\t\t\treturn;\n\t\t}\n\t\tfinal boolean isRecording = app.getSettings().SAVE_GLOBAL_TRACK_TO_GPX.get();\n\t\tImageButton stop = ((ImageButton) v.findViewById(R.id.stop));\n\t\tstop.setImageDrawable(app.getIconsCache().getContentIcon(\n\t\t\t\tisRecording ? R.drawable.ic_action_rec_stop : R.drawable.ic_play_dark));\n\t\tstop.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tfinal OsmandMonitoringPlugin plugin = OsmandPlugin.getEnabledPlugin(OsmandMonitoringPlugin.class);\n\t\t\t\tif (isRecording) {\n\t\t\t\t\tplugin.stopRecording();\n\t\t\t\t} else {\n\t\t\t\t\tplugin.startGPXMonitoring(ctx);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tSavingTrackHelper sth = app.getSavingTrackHelper();\n\t\tImageButton save = ((ImageButton) v.findViewById(R.id.show_on_map));\n\t\tsave.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tRunnable run = new Runnable() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\tfinal OsmandMonitoringPlugin plugin = OsmandPlugin\n\t\t\t\t\t\t\t\t.getEnabledPlugin(OsmandMonitoringPlugin.class);\n\t\t\t\t\t\tplugin.saveCurrentTrack();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\trun.run();\n\t\t\t}\n\t\t});\n\t\tif (sth.getPoints() > 0 || sth.getDistance() > 0) {\n\t\t\tsave.setVisibility(View.VISIBLE);\n\t\t} else {\n\t\t\tsave.setVisibility(View.GONE);\n\t\t}\n\t\tsave.setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_action_gsave_dark));\n\n\t\t((TextView) v.findViewById(R.id.points_count)).setText(sth.getPoints() + \"\");\n\t\t((TextView) v.findViewById(R.id.distance))\n\t\t\t\t.setText(OsmAndFormatter.getFormattedDistance(sth.getDistance(), app));\n\t\tv.findViewById(R.id.points_icon).setVisibility(View.VISIBLE);\n\t\tImageView distance = (ImageView) v.findViewById(R.id.distance_icon);\n\t\tdistance.setVisibility(View.VISIBLE);\n\t\tdistance.setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_small_distance));\n\t\tImageView pointsCount = (ImageView) v.findViewById(R.id.points_icon);\n\t\tpointsCount.setVisibility(View.VISIBLE);\n\t\tpointsCount.setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_small_point));\n\n\t}","commit_id":"b59290f51f46fb32598906f2e0e0cd5345062f03","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void setupFavorites() {\n\t\tView mainView = getView();\n\t\tfinal FavouritesDbHelper helper = getMyApplication().getFavorites();\n\t\tpoints = new ArrayList<FavouritePoint>(helper.getFavouritePoints());\n\t\tif (points.size() == 0) {\n\t\t\t(mainView.findViewById(R.id.main_fav)).setVisibility(View.GONE);\n\t\t\treturn;\n\t\t} else {\n\t\t\t(mainView.findViewById(R.id.main_fav)).setVisibility(View.VISIBLE);\n\t\t}\n\t\tfinal LatLon loc = getDefaultLocation();\n\t\tif (loc != null) {\n\t\t\tCollections.sort(points, new Comparator<FavouritePoint>() {\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(FavouritePoint point, FavouritePoint point2) {\n\t\t\t\t\t// LatLon lastKnownMapLocation = getMyApplication().getSettings().getLastKnownMapLocation();\n\t\t\t\t\tint dist = (int) (MapUtils.getDistance(point.getLatitude(), point.getLongitude(),\n\t\t\t\t\t\t\tloc.getLatitude(), loc.getLongitude()));\n\t\t\t\t\tint dist2 = (int) (MapUtils.getDistance(point2.getLatitude(), point2.getLongitude(),\n\t\t\t\t\t\t\tloc.getLatitude(), loc.getLongitude()));\n\t\t\t\t\treturn (dist - dist2);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tLinearLayout favorites = (LinearLayout) mainView.findViewById(R.id.items);\n\t\tfavorites.removeAllViews();\n\t\tif (points.size() > 3) {\n\t\t\twhile (points.size() != 3) {\n\t\t\t\tpoints.remove(3);\n\t\t\t}\n\t\t}\n\t\tList<DashLocationView> distances = new ArrayList<DashLocationFragment.DashLocationView>();\n\t\tfor (final FavouritePoint point : points) {\n\t\t\tLayoutInflater inflater = getActivity().getLayoutInflater();\n\t\t\tView view = inflater.inflate(R.layout.favorites_list_item, null, false);\n\t\t\tTextView name = (TextView) view.findViewById(R.id.favourite_label);\n\t\t\tTextView label = (TextView) view.findViewById(R.id.distance);\n\t\t\tImageView direction = (ImageView) view.findViewById(R.id.direction);\n\t\t\tdirection.setVisibility(View.VISIBLE);\n\t\t\tlabel.setVisibility(View.VISIBLE);\n\t\t\tview.findViewById(R.id.divider).setVisibility(View.VISIBLE);\n\t\t\tif (point.getCategory().length() > 0) {\n\t\t\t\t((TextView) view.findViewById(R.id.group_name)).setText(point.getCategory());\n\t\t\t} else {\n\t\t\t\tview.findViewById(R.id.group_image).setVisibility(View.GONE);\n\t\t\t}\n\n\t\t\t((ImageView) view.findViewById(R.id.favourite_icon)).setImageDrawable(FavoriteImageDrawable.getOrCreate(\n\t\t\t\t\tgetActivity(), point.getColor()));\n\t\t\tDashLocationView dv = new DashLocationView(direction, label, new LatLon(point.getLatitude(),\n\t\t\t\t\tpoint.getLongitude()));\n\t\t\tdistances.add(dv);\n\n\t\t\tname.setText(point.getName());\n\t\t\tname.setTypeface(Typeface.DEFAULT, point.isVisible() ? Typeface.NORMAL : Typeface.ITALIC);\n\t\t\tview.findViewById(R.id.navigate_to).setVisibility(View.VISIBLE);\n\t\t\t((ImageView) view.findViewById(R.id.navigate_to)).setImageDrawable(getMyApplication().getIconsCache().getContentIcon(R.drawable.ic_action_gdirections_dark));\n\t\t\tview.findViewById(R.id.navigate_to).setOnClickListener(new View.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View view) {\n\t\t\t\t\tDirectionsDialogs.directionsToDialogAndLaunchMap(getActivity(), point.getLatitude(),\n\t\t\t\t\t\t\tpoint.getLongitude(),\n\t\t\t\t\t\t\tnew PointDescription(PointDescription.POINT_TYPE_FAVORITE, point.getName()));\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tview.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View view) {\n\t\t\t\t\tgetMyApplication().getSettings().setMapLocationToShow(point.getLatitude(), point.getLongitude(),\n\t\t\t\t\t\t\t15, new PointDescription(PointDescription.POINT_TYPE_FAVORITE, point.getName()), true,\n\t\t\t\t\t\t\tpoint); //$NON-NLS-1$\n\t\t\t\t\tMapActivity.launchMapActivityMoveToTop(getActivity());\n\t\t\t\t}\n\t\t\t});\n\t\t\tfavorites.addView(view);\n\t\t}\n\t\tthis.distances = distances;\n\t}","id":69286,"modified_method":"public void setupFavorites() {\n\t\tView mainView = getView();\n\t\tfinal FavouritesDbHelper helper = getMyApplication().getFavorites();\n\t\tpoints = new ArrayList<FavouritePoint>(helper.getFavouritePoints());\n\t\tif (points.size() == 0) {\n\t\t\t(mainView.findViewById(R.id.main_fav)).setVisibility(View.GONE);\n\t\t\treturn;\n\t\t} else {\n\t\t\t(mainView.findViewById(R.id.main_fav)).setVisibility(View.VISIBLE);\n\t\t}\n\t\tfinal LatLon loc = getDefaultLocation();\n\t\tif (loc != null) {\n\t\t\tCollections.sort(points, new Comparator<FavouritePoint>() {\n\t\t\t\t@Override\n\t\t\t\tpublic int compare(FavouritePoint point, FavouritePoint point2) {\n\t\t\t\t\t// LatLon lastKnownMapLocation = getMyApplication().getSettings().getLastKnownMapLocation();\n\t\t\t\t\tint dist = (int) (MapUtils.getDistance(point.getLatitude(), point.getLongitude(),\n\t\t\t\t\t\t\tloc.getLatitude(), loc.getLongitude()));\n\t\t\t\t\tint dist2 = (int) (MapUtils.getDistance(point2.getLatitude(), point2.getLongitude(),\n\t\t\t\t\t\t\tloc.getLatitude(), loc.getLongitude()));\n\t\t\t\t\treturn (dist - dist2);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tLinearLayout favorites = (LinearLayout) mainView.findViewById(R.id.items);\n\t\tfavorites.removeAllViews();\n\t\tif (points.size() > 3) {\n\t\t\twhile (points.size() != 3) {\n\t\t\t\tpoints.remove(3);\n\t\t\t}\n\t\t}\n\t\tList<DashLocationView> distances = new ArrayList<DashLocationFragment.DashLocationView>();\n\t\tfor (final FavouritePoint point : points) {\n\t\t\tLayoutInflater inflater = getActivity().getLayoutInflater();\n\t\t\tView view = inflater.inflate(R.layout.favorites_list_item, null, false);\n\t\t\tTextView name = (TextView) view.findViewById(R.id.favourite_label);\n\t\t\tTextView label = (TextView) view.findViewById(R.id.distance);\n\t\t\tImageView direction = (ImageView) view.findViewById(R.id.direction);\n\t\t\tdirection.setVisibility(View.VISIBLE);\n\t\t\tlabel.setVisibility(View.VISIBLE);\n\t\t\tview.findViewById(R.id.divider).setVisibility(View.VISIBLE);\n\t\t\tImageView groupImage = (ImageView)view.findViewById(R.id.group_image);\n\t\t\tif (point.getCategory().length() > 0) {\n\t\t\t\t((TextView) view.findViewById(R.id.group_name)).setText(point.getCategory());\n\t\t\t\tgroupImage.setImageDrawable(getMyApplication().getIconsCache().getContentIcon(R.drawable.ic_small_group));\n\t\t\t} else {\n\t\t\t\tgroupImage.setVisibility(View.GONE);\n\t\t\t}\n\n\t\t\t((ImageView) view.findViewById(R.id.favourite_icon)).setImageDrawable(FavoriteImageDrawable.getOrCreate(\n\t\t\t\t\tgetActivity(), point.getColor()));\n\t\t\tDashLocationView dv = new DashLocationView(direction, label, new LatLon(point.getLatitude(),\n\t\t\t\t\tpoint.getLongitude()));\n\t\t\tdistances.add(dv);\n\n\t\t\tname.setText(point.getName());\n\t\t\tname.setTypeface(Typeface.DEFAULT, point.isVisible() ? Typeface.NORMAL : Typeface.ITALIC);\n\t\t\tview.findViewById(R.id.navigate_to).setVisibility(View.VISIBLE);\n\n\t\t\t((ImageView) view.findViewById(R.id.navigate_to)).setImageDrawable(getMyApplication().getIconsCache().getContentIcon(R.drawable.ic_action_gdirections_dark));\n\t\t\tview.findViewById(R.id.navigate_to).setOnClickListener(new View.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View view) {\n\t\t\t\t\tDirectionsDialogs.directionsToDialogAndLaunchMap(getActivity(), point.getLatitude(),\n\t\t\t\t\t\t\tpoint.getLongitude(),\n\t\t\t\t\t\t\tnew PointDescription(PointDescription.POINT_TYPE_FAVORITE, point.getName()));\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tview.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View view) {\n\t\t\t\t\tgetMyApplication().getSettings().setMapLocationToShow(point.getLatitude(), point.getLongitude(),\n\t\t\t\t\t\t\t15, new PointDescription(PointDescription.POINT_TYPE_FAVORITE, point.getName()), true,\n\t\t\t\t\t\t\tpoint); //$NON-NLS-1$\n\t\t\t\t\tMapActivity.launchMapActivityMoveToTop(getActivity());\n\t\t\t\t}\n\t\t\t});\n\t\t\tfavorites.addView(view);\n\t\t}\n\t\tthis.distances = distances;\n\t}","commit_id":"b59290f51f46fb32598906f2e0e0cd5345062f03","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public static void udpateHistoryItem(final HistoryEntry historyEntry, View row,\n\t\t\tLatLon location, Activity activity, OsmandApplication app) {\n\t\tTextView nameText = (TextView) row.findViewById(R.id.name);\n\t\tTextView distanceText = (TextView) row.findViewById(R.id.distance);\n\t\tImageView direction = (ImageView) row.findViewById(R.id.direction);\n\t\tIconsCache ic = app.getIconsCache();\n\t\tdirection.setImageDrawable(ic.getIcon(R.drawable.ic_destination_arrow_white, R.color.color_distance));\n\t\tString distance = \"\";\n\t\tif (location != null) {\n\t\t\tint dist = (int) (MapUtils.getDistance(location, historyEntry.getLat(), historyEntry.getLon()));\n\t\t\tdistance = OsmAndFormatter.getFormattedDistance(dist, (OsmandApplication) activity.getApplication()) + \"  \";\n\t\t}\n\t\tdistanceText.setText(distance);\n\t\tPointDescription pd = historyEntry.getName();\n\t\tnameText.setText(pd.getSimpleName(activity, historyEntry.getLat(), historyEntry.getLon()), BufferType.SPANNABLE);\n\t\tImageView icon = ((ImageView) row.findViewById(R.id.icon));\n\n\t\tif (historyEntry.getName().isAddress()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_address));\n\t\t} else if (historyEntry.getName().isFavorite()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_favorites));\n\t\t} else if (historyEntry.getName().isLocation()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_coordinates));\n\t\t} else if (historyEntry.getName().isPoi()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_info));\n\t\t} else if (historyEntry.getName().isWpt()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_waypoint));\n\t\t} else if (historyEntry.getName().isAudioNote()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_audio));\n\t\t} else if (historyEntry.getName().isVideoNote()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_video));\n\t\t}else if (historyEntry.getName().isPhotoNote()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_img));\n\t\t}  else {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_address));\n\t\t}\n\n\t\tString typeName = historyEntry.getName().getTypeName();\n\t\tif (typeName != null && !typeName.isEmpty()) {\n\t\t\trow.findViewById(R.id.type_name_icon).setVisibility(View.VISIBLE);\n\t\t\t((TextView) row.findViewById(R.id.type_name)).setText(typeName);\n\t\t} else {\n\t\t\trow.findViewById(R.id.type_name_icon).setVisibility(View.GONE);\n\t\t\t((TextView) row.findViewById(R.id.type_name)).setText(\"\");\n\t\t}\n\t}","id":69287,"modified_method":"public static void udpateHistoryItem(final HistoryEntry historyEntry, View row,\n\t\t\tLatLon location, Activity activity, OsmandApplication app) {\n\t\tTextView nameText = (TextView) row.findViewById(R.id.name);\n\t\tTextView distanceText = (TextView) row.findViewById(R.id.distance);\n\t\tImageView direction = (ImageView) row.findViewById(R.id.direction);\n\t\tIconsCache ic = app.getIconsCache();\n\t\tdirection.setImageDrawable(ic.getIcon(R.drawable.ic_destination_arrow_white, R.color.color_distance));\n\t\tString distance = \"\";\n\t\tif (location != null) {\n\t\t\tint dist = (int) (MapUtils.getDistance(location, historyEntry.getLat(), historyEntry.getLon()));\n\t\t\tdistance = OsmAndFormatter.getFormattedDistance(dist, (OsmandApplication) activity.getApplication()) + \"  \";\n\t\t}\n\t\tdistanceText.setText(distance);\n\t\tPointDescription pd = historyEntry.getName();\n\t\tnameText.setText(pd.getSimpleName(activity, historyEntry.getLat(), historyEntry.getLon()), BufferType.SPANNABLE);\n\t\tImageView icon = ((ImageView) row.findViewById(R.id.icon));\n\n\t\tif (historyEntry.getName().isAddress()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_address));\n\t\t} else if (historyEntry.getName().isFavorite()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_favorites));\n\t\t} else if (historyEntry.getName().isLocation()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_coordinates));\n\t\t} else if (historyEntry.getName().isPoi()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_info));\n\t\t} else if (historyEntry.getName().isWpt()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_waypoint));\n\t\t} else if (historyEntry.getName().isAudioNote()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_audio));\n\t\t} else if (historyEntry.getName().isVideoNote()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_video));\n\t\t}else if (historyEntry.getName().isPhotoNote()) {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_img));\n\t\t}  else {\n\t\t\ticon.setImageDrawable(ic.getContentIcon(R.drawable.ic_type_address));\n\t\t}\n\n\t\tString typeName = historyEntry.getName().getTypeName();\n\t\tif (typeName != null && !typeName.isEmpty()) {\n\t\t\tImageView group = (ImageView)row.findViewById(R.id.type_name_icon);\n\t\t\tgroup.setVisibility(View.VISIBLE);\n\t\t\tgroup.setImageDrawable(ic.getContentIcon(R.drawable.ic_small_group));\n\t\t\t((TextView) row.findViewById(R.id.type_name)).setText(typeName);\n\t\t} else {\n\t\t\trow.findViewById(R.id.type_name_icon).setVisibility(View.GONE);\n\t\t\t((TextView) row.findViewById(R.id.type_name)).setText(\"\");\n\t\t}\n\t}","commit_id":"b59290f51f46fb32598906f2e0e0cd5345062f03","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public static void udpateGpxInfoView(View v, GpxInfo child, OsmandApplication app, boolean isDashItem) {\n\t\tTextView viewName = ((TextView) v.findViewById(R.id.name));\n\t\tif (!isDashItem) {\n\t\t\tv.findViewById(R.id.divider).setVisibility(View.GONE);\n\t\t} else {\n\t\t\tv.findViewById(R.id.divider).setVisibility(View.VISIBLE);\n\t\t}\n\n\t\tviewName.setText(child.getName());\n\t\tGpxSelectionHelper selectedGpxHelper = app.getSelectedGpxHelper();\n\n\t\t// ImageView icon = (ImageView) v.findViewById(!isDashItem? R.id.icon : R.id.show_on_map);\n\t\tImageView icon = (ImageView) v.findViewById(R.id.icon);\n\t\ticon.setVisibility(View.VISIBLE);\n\t\ticon.setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_gpx_track));\n\t\tif (child.isCorrupted()) {\n\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.ITALIC);\n\t\t} else {\n\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.NORMAL);\n\t\t}\n\t\tSelectedGpxFile sgpx = child.currentlyRecordingTrack ? selectedGpxHelper.getSelectedCurrentRecordingTrack() : \n\t\t\t\tselectedGpxHelper.getSelectedFileByName(child.getFileName());\n\t\tGPXTrackAnalysis analysis = null;\n\t\tif (sgpx != null) {\n\t\t\ticon.setImageDrawable(app.getIconsCache().getIcon(R.drawable.ic_gpx_track, R.color.color_distance));\n\t\t\tanalysis = sgpx.getTrackAnalysis();\n\n\t\t}\n\t\tboolean sectionRead = analysis == null;\n\t\tif (sectionRead) {\n\t\t\tv.findViewById(R.id.read_section).setVisibility(View.GONE);\n\t\t\tv.findViewById(R.id.unknown_section).setVisibility(View.VISIBLE);\n\t\t\tString date = \"\";\n\t\t\tString size = \"\";\n\t\t\tif (child.getSize() >= 0) {\n\t\t\t\tif (child.getSize() > 100) {\n\t\t\t\t\tsize = formatMb.format(new Object[] { (float) child.getSize() / (1 << 10) });\n\t\t\t\t} else {\n\t\t\t\t\tsize = child.getSize() + \" kB\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tDateFormat df = app.getResourceManager().getDateFormat();\n\t\t\tlong fd = child.getFileDate();\n\t\t\tif (fd > 0) {\n\t\t\t\tdate = (df.format(new Date(fd)));\n\t\t\t}\n\t\t\tTextView sizeText = (TextView) v.findViewById(R.id.date_and_size_details);\n\t\t\tsizeText.setText(date + \" \\u2022 \" + size);\n\n\t\t} else {\n\t\t\tv.findViewById(R.id.read_section).setVisibility(View.VISIBLE);\n\t\t\tv.findViewById(R.id.unknown_section).setVisibility(View.GONE);\n\t\t\tTextView time = (TextView) v.findViewById(R.id.time);\n\t\t\tTextView distance = (TextView) v.findViewById(R.id.distance);\n\t\t\tTextView pointsCount = (TextView) v.findViewById(R.id.points_count);\n\t\t\tpointsCount.setText(analysis.wptPoints + \"\");\n//\t\t\tif (analysis.totalDistanceMoving != 0) {\n//\t\t\t\tdistance.setText(OsmAndFormatter.getFormattedDistance(analysis.totalDistanceMoving, app));\n//\t\t\t} else {\n\t\t\t\tdistance.setText(OsmAndFormatter.getFormattedDistance(analysis.totalDistance, app));\n//\t\t\t}\n\n\t\t\tif (analysis.isTimeSpecified()) {\n//\t\t\t\tif (analysis.isTimeMoving()) {\n//\t\t\t\t\ttime.setText(Algorithms.formatDuration((int) (analysis.timeMoving / 1000)) + \"\");\n//\t\t\t\t} else {\n\t\t\t\t\ttime.setText(Algorithms.formatDuration((int) (analysis.timeSpan / 1000)) + \"\");\n//\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttime.setText(\"\");\n\t\t\t}\n\t\t}\n\n\t\tTextView descr = ((TextView) v.findViewById(R.id.description));\n\t\tdescr.setVisibility(View.GONE);\n\n\t\tv.findViewById(R.id.check_item).setVisibility(View.GONE);\n\t}","id":69288,"modified_method":"public static void udpateGpxInfoView(View v, GpxInfo child, OsmandApplication app, boolean isDashItem) {\n\t\tTextView viewName = ((TextView) v.findViewById(R.id.name));\n\t\tif (!isDashItem) {\n\t\t\tv.findViewById(R.id.divider).setVisibility(View.GONE);\n\t\t} else {\n\t\t\tv.findViewById(R.id.divider).setVisibility(View.VISIBLE);\n\t\t}\n\n\t\tviewName.setText(child.getName());\n\t\tGpxSelectionHelper selectedGpxHelper = app.getSelectedGpxHelper();\n\n\t\t// ImageView icon = (ImageView) v.findViewById(!isDashItem? R.id.icon : R.id.show_on_map);\n\t\tImageView icon = (ImageView) v.findViewById(R.id.icon);\n\t\ticon.setVisibility(View.VISIBLE);\n\t\ticon.setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_gpx_track));\n\t\tif (child.isCorrupted()) {\n\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.ITALIC);\n\t\t} else {\n\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.NORMAL);\n\t\t}\n\t\tSelectedGpxFile sgpx = child.currentlyRecordingTrack ? selectedGpxHelper.getSelectedCurrentRecordingTrack() : \n\t\t\t\tselectedGpxHelper.getSelectedFileByName(child.getFileName());\n\t\tGPXTrackAnalysis analysis = null;\n\t\tif (sgpx != null) {\n\t\t\ticon.setImageDrawable(app.getIconsCache().getIcon(R.drawable.ic_gpx_track, R.color.color_distance));\n\t\t\tanalysis = sgpx.getTrackAnalysis();\n\n\t\t}\n\t\tboolean sectionRead = analysis == null;\n\t\tif (sectionRead) {\n\t\t\tv.findViewById(R.id.read_section).setVisibility(View.GONE);\n\t\t\tv.findViewById(R.id.unknown_section).setVisibility(View.VISIBLE);\n\t\t\tString date = \"\";\n\t\t\tString size = \"\";\n\t\t\tif (child.getSize() >= 0) {\n\t\t\t\tif (child.getSize() > 100) {\n\t\t\t\t\tsize = formatMb.format(new Object[] { (float) child.getSize() / (1 << 10) });\n\t\t\t\t} else {\n\t\t\t\t\tsize = child.getSize() + \" kB\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tDateFormat df = app.getResourceManager().getDateFormat();\n\t\t\tlong fd = child.getFileDate();\n\t\t\tif (fd > 0) {\n\t\t\t\tdate = (df.format(new Date(fd)));\n\t\t\t}\n\t\t\tTextView sizeText = (TextView) v.findViewById(R.id.date_and_size_details);\n\t\t\tsizeText.setText(date + \" \\u2022 \" + size);\n\n\t\t} else {\n\t\t\tv.findViewById(R.id.read_section).setVisibility(View.VISIBLE);\n\t\t\tv.findViewById(R.id.unknown_section).setVisibility(View.GONE);\n\t\t\tImageView distanceI = (ImageView) v.findViewById(R.id.distance_icon);\n\t\t\tdistanceI.setVisibility(View.VISIBLE);\n\t\t\tdistanceI.setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_small_distance));\n\t\t\tImageView pointsI = (ImageView) v.findViewById(R.id.points_icon);\n\t\t\tpointsI.setVisibility(View.VISIBLE);\n\t\t\tpointsI.setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_small_point));\n\t\t\tImageView timeI = (ImageView) v.findViewById(R.id.time_icon);\n\t\t\ttimeI.setVisibility(View.VISIBLE);\n\t\t\ttimeI.setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_small_time));\n\t\t\tTextView time = (TextView) v.findViewById(R.id.time);\n\t\t\tTextView distance = (TextView) v.findViewById(R.id.distance);\n\t\t\tTextView pointsCount = (TextView) v.findViewById(R.id.points_count);\n\t\t\tpointsCount.setText(analysis.wptPoints + \"\");\n//\t\t\tif (analysis.totalDistanceMoving != 0) {\n//\t\t\t\tdistance.setText(OsmAndFormatter.getFormattedDistance(analysis.totalDistanceMoving, app));\n//\t\t\t} else {\n\t\t\t\tdistance.setText(OsmAndFormatter.getFormattedDistance(analysis.totalDistance, app));\n//\t\t\t}\n\n\t\t\tif (analysis.isTimeSpecified()) {\n//\t\t\t\tif (analysis.isTimeMoving()) {\n//\t\t\t\t\ttime.setText(Algorithms.formatDuration((int) (analysis.timeMoving / 1000)) + \"\");\n//\t\t\t\t} else {\n\t\t\t\t\ttime.setText(Algorithms.formatDuration((int) (analysis.timeSpan / 1000)) + \"\");\n//\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttime.setText(\"\");\n\t\t\t}\n\t\t}\n\n\t\tTextView descr = ((TextView) v.findViewById(R.id.description));\n\t\tdescr.setVisibility(View.GONE);\n\n\t\tv.findViewById(R.id.check_item).setVisibility(View.GONE);\n\t}","commit_id":"08ab3b073a1348136c69e7d7b3e704dbdc102203","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic View getView(int position, View convertView, ViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif (row == null) {\n\t\t\t\tLayoutInflater inflater = activity.getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.favorites_list_item, parent, false);\n\t\t\t}\n\n\t\t\tTextView name = (TextView) row.findViewById(R.id.favourite_label);\n\t\t\tTextView distanceText = (TextView) row.findViewById(R.id.distance);\n\t\t\tImageView icon = (ImageView) row.findViewById(R.id.favourite_icon);\n\t\t\tImageView direction = (ImageView) row.findViewById(R.id.direction);\n\t\t\tdirection.setVisibility(View.VISIBLE);\n\t\t\tfinal FavouritePoint favorite = getItem(position);\n\t\t\tif (!favorite.getCategory().isEmpty()) {\n\t\t\t\trow.findViewById(R.id.group_image).setVisibility(View.VISIBLE);\n\t\t\t} else {\n\t\t\t\trow.findViewById(R.id.group_image).setVisibility(View.GONE);\n\t\t\t}\n\t\t\t((TextView) row.findViewById(R.id.group_name)).setText(favorite.getCategory());\n\n\t\t\ticon.setImageDrawable(FavoriteImageDrawable.getOrCreate(activity, favorite.getColor()));\n\t\t\tDashLocationFragment.updateLocationView(!searchAroundLocation, location, heading, direction, distanceText, \n\t\t\t\t\tfavorite.getLatitude(), favorite.getLongitude(), screenOrientation, app, activity);\n\t\t\t\n\t\t\tname.setText(getName(favorite));\n\t\t\tfinal CheckBox ch = (CheckBox) row.findViewById(R.id.check_item);\n\t\t\trow.findViewById(R.id.favourite_icon).setVisibility(View.VISIBLE);\n\t\t\tch.setVisibility(View.GONE);\n\t\t\treturn row;\n\t\t}","id":69289,"modified_method":"@Override\n\t\tpublic View getView(int position, View convertView, ViewGroup parent) {\n\t\t\tView row = convertView;\n\t\t\tif (row == null) {\n\t\t\t\tLayoutInflater inflater = activity.getLayoutInflater();\n\t\t\t\trow = inflater.inflate(R.layout.favorites_list_item, parent, false);\n\t\t\t}\n\n\t\t\tTextView name = (TextView) row.findViewById(R.id.favourite_label);\n\t\t\tTextView distanceText = (TextView) row.findViewById(R.id.distance);\n\t\t\tImageView icon = (ImageView) row.findViewById(R.id.favourite_icon);\n\t\t\tImageView direction = (ImageView) row.findViewById(R.id.direction);\n\t\t\tImageView giImage= (ImageView)row.findViewById(R.id.group_image);\n\t\t\tdirection.setVisibility(View.VISIBLE);\n\t\t\tfinal FavouritePoint favorite = getItem(position);\n\t\t\tif (!favorite.getCategory().isEmpty()) {\n\t\t\t\tgiImage.setVisibility(View.VISIBLE);\n\t\t\t\tgiImage.setImageDrawable(app.getIconsCache().getContentIcon(R.drawable.ic_small_group));\n\t\t\t} else {\n\t\t\t\tgiImage.setVisibility(View.GONE);\n\t\t\t}\n\t\t\t((TextView) row.findViewById(R.id.group_name)).setText(favorite.getCategory());\n\n\t\t\ticon.setImageDrawable(FavoriteImageDrawable.getOrCreate(activity, favorite.getColor()));\n\t\t\tDashLocationFragment.updateLocationView(!searchAroundLocation, location, heading, direction, distanceText, \n\t\t\t\t\tfavorite.getLatitude(), favorite.getLongitude(), screenOrientation, app, activity);\n\t\t\t\n\t\t\tname.setText(getName(favorite));\n\t\t\tfinal CheckBox ch = (CheckBox) row.findViewById(R.id.check_item);\n\t\t\ticon.setVisibility(View.VISIBLE);\n\t\t\tch.setVisibility(View.GONE);\n\t\t\treturn row;\n\t\t}","commit_id":"08ab3b073a1348136c69e7d7b3e704dbdc102203","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public String getInstalledDate(File f){\n\t\treturn getInstalledDate(f.lastModified(), null);\n\t}","id":69290,"modified_method":"public String getInstalledDate(File f){\n\t\treturn getInstalledDateEdition(f.lastModified(), null);\n\t}","commit_id":"50e09325865b2df59436611bb3dd42c78dcc869b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public String getInstalledDate(long t, TimeZone timeZone){\n\t\tDateFormat dateFormat = DateFormat.getDateInstance(DateFormat.SHORT);\n\t\tif(timeZone != null) {\n\t\t\tdateFormat.setTimeZone(timeZone);\n\t\t}\n\t\treturn app.getString(R.string.local_index_installed) + \" : \" + dateFormat.format(new Date(t));\n\t}","id":69291,"modified_method":"public String getInstalledDate(long t, TimeZone timeZone){\n\t\tDateFormat dateFormat = DateFormat.getDateInstance(DateFormat.SHORT);\n\t\tif(timeZone != null) {\n\t\t\tdateFormat.setTimeZone(timeZone);\n\t\t}\n\t\treturn dateFormat.format(new Date(t));\n\t}","commit_id":"50e09325865b2df59436611bb3dd42c78dcc869b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tprotected void onProgressUpdate(LocalIndexInfo... values) {\n\t\t\tfor (LocalIndexInfo v : values) {\n\t\t\t\tlistAdapter.addLocalIndexInfo(v);\n\t\t\t}\n\t\t\tlistAdapter.notifyDataSetChanged();\n\t\t\texpandAllGroups();\n\t\t}","id":69292,"modified_method":"@Override\n\t\tprotected void onProgressUpdate(LocalIndexInfo... values) {\n\t\t\tfor (LocalIndexInfo v : values) {\n\t\t\t\tlistAdapter.addLocalIndexInfo(v);\n\t\t\t\tdescriptionLoader = new LoadLocalIndexDescriptionTask();\n\t\t\t\tdescriptionLoader.execute(v);\n\t\t\t}\n\t\t\tlistAdapter.notifyDataSetChanged();\n\t\t\texpandAllGroups();\n\t\t}","commit_id":"50e09325865b2df59436611bb3dd42c78dcc869b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\t\tpublic View getChildView(final int groupPosition, final int childPosition, boolean isLastChild, View convertView, ViewGroup parent) {\n\t\t\tView v = convertView;\n\t\t\tfinal LocalIndexInfo child = getChild(groupPosition, childPosition);\n\t\t\tif (v == null ) {\n\t\t\t\tLayoutInflater inflater = (LayoutInflater) getDownloadActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\t\t\t\tv = inflater.inflate(net.osmand.plus.R.layout.local_index_list_item, parent, false);\n\t\t\t}\n\t\t\tTextView viewName = ((TextView) v.findViewById(R.id.local_index_name));\n\t\t\tv.findViewById(R.id.options).setOnClickListener(new View.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\topenPopUpMenu(v, child);\n\t\t\t\t}\n\t\t\t});\n\t\t\tImageView icon = (ImageView) v.findViewById(R.id.icon);\n\t\t\tif (child.isBackupedData()) {\n\t\t\t\ticon.setImageDrawable(backup);\n\t\t\t} else {\n\t\t\t\ticon.setImageDrawable(sdcard);\n\t\t\t}\n\n\n\n\t\t\tviewName.setText(getNameToDisplay(child));\n\t\t\tif (child.isNotSupported()) {\n\t\t\t\tviewName.setTextColor(warningColor);\n\t\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.NORMAL);\n\t\t\t} else if (child.isCorrupted()) {\n\t\t\t\tviewName.setTextColor(corruptedColor);\n\t\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.NORMAL);\n\t\t\t} else if (child.isLoaded()) {\n\t\t\t\t// users confused okColor here with \"uptodate\", so let's leave white (black in dark app theme) as \"isLoaded\"\n\t\t\t\t//viewName.setTextColor(okColor);\n\t\t\t\tviewName.setTextColor(defaultColor);\n\t\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\n\t\t\t} else {\n\t\t\t\tviewName.setTextColor(defaultColor);\n\t\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.NORMAL);\n\t\t\t\tif (child.isBackupedData()) {\n\t\t\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.ITALIC);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (child.getSize() >= 0) {\n\t\t\t\tString size;\n\t\t\t\tif (child.getSize() > 100) {\n\t\t\t\t\tsize = formatMb.format(new Object[] { (float) child.getSize() / (1 << 10) });\n\t\t\t\t} else {\n\t\t\t\t\tsize = child.getSize() + \" kB\";\n\t\t\t\t}\n\t\t\t\t((TextView) v.findViewById(R.id.local_index_size)).setText(size);\n\t\t\t} else {\n\t\t\t\t((TextView) v.findViewById(R.id.local_index_size)).setText(\"\");\n\t\t\t}\n\t\t\tTextView descr = ((TextView) v.findViewById(R.id.local_index_descr));\n\t\t\tif (child.isExpanded()) {\n\t\t\t\tdescr.setVisibility(View.VISIBLE);\n\t\t\t\tdescr.setText(child.getDescription());\n\t\t\t} else {\n\t\t\t\tdescr.setVisibility(View.GONE);\n\t\t\t}\n\t\t\tfinal CheckBox checkbox = (CheckBox) v.findViewById(R.id.check_local_index);\n\t\t\tcheckbox.setVisibility(selectionMode ? View.VISIBLE : View.GONE);\n\t\t\tif (selectionMode) {\n\t\t\t\ticon.setVisibility(View.GONE);\n\t\t\t\tcheckbox.setChecked(selectedItems.contains(child));\n\t\t\t\tcheckbox.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\t\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\t\tif(checkbox.isChecked()){\n\t\t\t\t\t\t\tselectedItems.add(child);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselectedItems.remove(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ticon.setVisibility(View.VISIBLE);\n\t\t\t}\n\t\t\t\n\n\t\t\treturn v;\n\t\t}","id":69293,"modified_method":"@Override\n\t\tpublic View getChildView(final int groupPosition, final int childPosition, boolean isLastChild, View convertView, ViewGroup parent) {\n\t\t\tView v = convertView;\n\t\t\tfinal LocalIndexInfo child = getChild(groupPosition, childPosition);\n\t\t\tif (v == null ) {\n\t\t\t\tLayoutInflater inflater = (LayoutInflater) getDownloadActivity().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n\t\t\t\tv = inflater.inflate(net.osmand.plus.R.layout.local_index_list_item, parent, false);\n\t\t\t}\n\t\t\tTextView viewName = ((TextView) v.findViewById(R.id.local_index_name));\n\t\t\tImageButton options = (ImageButton) v.findViewById(R.id.options);\n\t\t\toptions.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\topenPopUpMenu(v, child);\n\t\t\t\t}\n\t\t\t});\n\t\t\tImageView icon = (ImageView) v.findViewById(R.id.icon);\n\t\t\tif (child.isBackupedData()) {\n\t\t\t\ticon.setImageDrawable(backup);\n\t\t\t} else {\n\t\t\t\ticon.setImageDrawable(sdcard);\n\t\t\t}\n\n\t\t\tviewName.setText(getNameToDisplay(child));\n\t\t\tif (child.isNotSupported()) {\n\t\t\t\tviewName.setTextColor(warningColor);\n\t\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.NORMAL);\n\t\t\t} else if (child.isCorrupted()) {\n\t\t\t\tviewName.setTextColor(corruptedColor);\n\t\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.NORMAL);\n\t\t\t} else if (child.isLoaded()) {\n\t\t\t\t// users confused okColor here with \"uptodate\", so let's leave white (black in dark app theme) as \"isLoaded\"\n\t\t\t\t//viewName.setTextColor(okColor);\n\t\t\t\tviewName.setTextColor(defaultColor);\n\t\t\t} else {\n\t\t\t\tviewName.setTextColor(defaultColor);\n\t\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.NORMAL);\n\t\t\t\tif (child.isBackupedData()) {\n\t\t\t\t\tviewName.setTypeface(Typeface.DEFAULT, Typeface.ITALIC);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (child.getSize() >= 0) {\n\t\t\t\tString size;\n\t\t\t\tif (child.getSize() > 100) {\n\t\t\t\t\tsize = formatMb.format(new Object[] { (float) child.getSize() / (1 << 10) });\n\t\t\t\t} else {\n\t\t\t\t\tsize = child.getSize() + \" kB\";\n\t\t\t\t}\n\t\t\t\t((TextView) v.findViewById(R.id.local_index_size)).setText(size);\n\t\t\t} else {\n\t\t\t\t((TextView) v.findViewById(R.id.local_index_size)).setText(\"\");\n\t\t\t}\n\t\t\tTextView descr = ((TextView) v.findViewById(R.id.local_index_descr));\n\n\t\t\tdescr.setVisibility(View.VISIBLE);\n\t\t\tdescr.setText(child.getDescription());\n\n\t\t\tfinal CheckBox checkbox = (CheckBox) v.findViewById(R.id.check_local_index);\n\t\t\tcheckbox.setVisibility(selectionMode ? View.VISIBLE : View.GONE);\n\t\t\tif (selectionMode) {\n\t\t\t\ticon.setVisibility(View.GONE);\n\t\t\t\toptions.setVisibility(View.GONE);\n\t\t\t\tcheckbox.setChecked(selectedItems.contains(child));\n\t\t\t\tcheckbox.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\t\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\t\tif(checkbox.isChecked()){\n\t\t\t\t\t\t\tselectedItems.add(child);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselectedItems.remove(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\toptions.setVisibility(View.VISIBLE);\n\t\t\t\ticon.setVisibility(View.VISIBLE);\n\t\t\t}\n\n\t\t\tv.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\tonChildClick(null, v, groupPosition, childPosition, 0);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn v;\n\t\t}","commit_id":"50e09325865b2df59436611bb3dd42c78dcc869b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void openSelectionMode(int stringRes, int darkIcon, int lightIcon, DialogInterface.OnClickListener listener, Boolean backup,\n\t\t\tLocalIndexType filter) {\n\t\tif (backup != null) {\n\t\t\tlistAdapter.filterCategories(backup);\n\t\t}\n\t\tif (filter != null) {\n\t\t\tlistAdapter.filterCategories(filter);\n\t\t}\n\t\topenSelectionMode(stringRes, !isLightActionBar() ? darkIcon : lightIcon, listener);\n\t}","id":69294,"modified_method":"public void openSelectionMode(int stringRes, int darkIcon, DialogInterface.OnClickListener listener, Boolean backup,\n\t\t\tLocalIndexType filter) {\n\t\tif (backup != null) {\n\t\t\tlistAdapter.filterCategories(backup);\n\t\t}\n\t\tif (filter != null) {\n\t\t\tlistAdapter.filterCategories(filter);\n\t\t}\n\t\topenSelectionMode(stringRes, darkIcon, listener);\n\t}","commit_id":"50e09325865b2df59436611bb3dd42c78dcc869b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void localOptionsMenu(final int itemId) {\n\t\tif (itemId == R.string.local_index_mi_reload) {\n\t\t\treloadIndexes();\n\t\t} else if (itemId == R.string.local_index_mi_delete) {\n\t\t\topenSelectionMode(itemId, R.drawable.ic_action_delete_dark, R.drawable.ic_action_delete_light,\n\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\tdoAction(itemId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, null, null);\n\t\t} else if (itemId == R.string.local_index_mi_backup) {\n\t\t\topenSelectionMode(itemId, R.drawable.ic_action_undo_dark, R.drawable.ic_action_undo_light,\n\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\tdoAction(itemId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, Boolean.FALSE, LocalIndexType.MAP_DATA);\n\t\t} else if (itemId == R.string.local_index_mi_restore) {\n\t\t\topenSelectionMode(itemId, R.drawable.ic_action_redo_dark, R.drawable.ic_action_redo_light,\n\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\tdoAction(itemId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, Boolean.TRUE, LocalIndexType.MAP_DATA);\n\t\t\tlistAdapter.filterCategories(true);\n\t\t}\n\t}","id":69295,"modified_method":"public void localOptionsMenu(final int itemId) {\n\t\tif (itemId == R.string.local_index_mi_reload) {\n\t\t\treloadIndexes();\n\t\t} else if (itemId == R.string.local_index_mi_delete) {\n\t\t\topenSelectionMode(itemId, R.drawable.ic_action_delete_dark,\n\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\tdoAction(itemId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, null, null);\n\t\t} else if (itemId == R.string.local_index_mi_backup) {\n\t\t\topenSelectionMode(itemId, R.drawable.ic_type_archive,\n\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\tdoAction(itemId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, Boolean.FALSE, LocalIndexType.MAP_DATA);\n\t\t} else if (itemId == R.string.local_index_mi_restore) {\n\t\t\topenSelectionMode(itemId, R.drawable.ic_type_archive,\n\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\tdoAction(itemId);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, Boolean.TRUE, LocalIndexType.MAP_DATA);\n\t\t\tlistAdapter.filterCategories(true);\n\t\t}\n\t}","commit_id":"50e09325865b2df59436611bb3dd42c78dcc869b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic boolean onChildClick(ExpandableListView parent, View v, int groupPosition, int childPosition, long id) {\n\t\tLocalIndexInfo item = listAdapter.getChild(groupPosition, childPosition);\n\t\titem.setExpanded(!item.isExpanded());\n\t\tif (item.isExpanded()) {\n\t\t\tdescriptionLoader = new LoadLocalIndexDescriptionTask();\n\t\t\tdescriptionLoader.execute(item);\n\t\t}\n\t\tif(selectionMode){\n\t\t\tselectedItems.add(item);\n\t\t}\n\t\tlistAdapter.notifyDataSetInvalidated();\n\t\treturn true;\n\t}","id":69296,"modified_method":"@Override\n\tpublic boolean onChildClick(ExpandableListView parent, View v, int groupPosition, int childPosition, long id) {\n\t\tif (!selectionMode){\n\t\t\treturn true;\n\t\t}\n\t\tLocalIndexInfo item = listAdapter.getChild(groupPosition, childPosition);\n\t\tselectedItems.add(item);\n\t\tlistAdapter.notifyDataSetInvalidated();\n\t\treturn true;\n\t}","commit_id":"50e09325865b2df59436611bb3dd42c78dcc869b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public void setResult(List<LocalIndexInfo> result) {\n\t\t\tthis.result = result;\n\t\t\tif(result == null){\n\t\t\t\tlistAdapter.clear();\n\t\t\t} else {\n\t\t\t\tfor (LocalIndexInfo v : result) {\n\t\t\t\t\tlistAdapter.addLocalIndexInfo(v);\n\t\t\t\t}\n\t\t\t\tlistAdapter.notifyDataSetChanged();\n\t\t\t\texpandAllGroups();\n\t\t\t\tonPostExecute(result);\n\t\t\t}\n\t\t}","id":69297,"modified_method":"public void setResult(List<LocalIndexInfo> result) {\n\t\t\tthis.result = result;\n\t\t\tif(result == null){\n\t\t\t\tlistAdapter.clear();\n\t\t\t} else {\n\t\t\t\tfor (LocalIndexInfo v : result) {\n\t\t\t\t\tlistAdapter.addLocalIndexInfo(v);\n\t\t\t\t\tdescriptionLoader = new LoadLocalIndexDescriptionTask();\n\t\t\t\t\tdescriptionLoader.execute(v);\n\t\t\t\t}\n\t\t\t\tlistAdapter.notifyDataSetChanged();\n\t\t\t\texpandAllGroups();\n\t\t\t\tonPostExecute(result);\n\t\t\t}\n\t\t}","commit_id":"50e09325865b2df59436611bb3dd42c78dcc869b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Nullable\n  public PsiElement resolve(@NotNull PsiElement context) {\n    if (myTarget != null) {\n      return myTarget;\n    }\n\n    PyClass targetClass = null;\n    if (myTypeName != null) {\n      targetClass = PyPsiFacade.getInstance(context.getProject()).createClassByQName(myTypeName, context);\n    }\n    final PsiElement resolveTarget = findResolveTarget(context);\n    if (resolveTarget instanceof PyFunction && !myAlwaysResolveToCustomElement) {\n      return resolveTarget;\n    }\n    if (resolveTarget != null || targetClass != null) {\n      return new MyInstanceElement(targetClass, context, resolveTarget);\n    }\n    return null;\n  }","id":69298,"modified_method":"@Nullable\n  public PsiElement resolve(@NotNull final PsiElement context) {\n\n    if (myTarget != null) {\n      return myTarget;\n    }\n\n    PyClass targetClass = null;\n    if (myTypeName != null) {\n\n      final ParameterizedCachedValueProvider<PyClass, PsiElement> provider = new ParameterizedCachedValueProvider<PyClass, PsiElement>() {\n        @Nullable\n        @Override\n        public CachedValueProvider.Result<PyClass> compute(\n          final PsiElement param) {\n          final PyClass result = PyPsiFacade.getInstance(param.getProject()).createClassByQName(myTypeName, param);\n          return CachedValueProvider.Result.create(result, PsiModificationTracker.MODIFICATION_COUNT);\n        }\n      };\n      targetClass = CachedValuesManager.getManager(context.getProject()).getParameterizedCachedValue(this, RESOLVE,\n                                                                                                     provider, false, context);\n    }\n    final PsiElement resolveTarget = findResolveTarget(context);\n    if (resolveTarget instanceof PyFunction && !myAlwaysResolveToCustomElement) {\n      return resolveTarget;\n    }\n    if (resolveTarget != null || targetClass != null) {\n      return new MyInstanceElement(targetClass, context, resolveTarget);\n    }\n    return null;\n  }","commit_id":"36fb42e303b114c7409a659d4a1dc18168d86fa3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public PsiElement resolve(@NotNull PsiElement context) {\n    if (myTarget != null) {\n      return myTarget;\n    }\n\n    PyClass targetClass = null;\n    if (myTypeName != null) {\n      targetClass = PyPsiFacade.getInstance(context.getProject()).createClassByQName(myTypeName, context);\n    }\n    final PsiElement resolveTarget = findResolveTarget(context);\n    if (resolveTarget instanceof PyFunction && !myAlwaysResolveToCustomElement) {\n      return resolveTarget;\n    }\n    if (resolveTarget != null || targetClass != null) {\n      return new MyInstanceElement(targetClass, context, resolveTarget);\n    }\n    return null;\n  }","id":69299,"modified_method":"@Nullable\n  public PsiElement resolve(@NotNull final PsiElement context) {\n\n    if (myTarget != null) {\n      return myTarget;\n    }\n\n    PyClass targetClass = null;\n    if (myTypeName != null) {\n\n      final ParameterizedCachedValueProvider<PyClass, PsiElement> provider = new ParameterizedCachedValueProvider<PyClass, PsiElement>() {\n        @Nullable\n        @Override\n        public CachedValueProvider.Result<PyClass> compute(\n          final PsiElement param) {\n          final PyClass result = PyPsiFacade.getInstance(param.getProject()).createClassByQName(myTypeName, param);\n          return CachedValueProvider.Result.create(result, PsiModificationTracker.MODIFICATION_COUNT);\n        }\n      };\n      targetClass = CachedValuesManager.getManager(context.getProject()).getParameterizedCachedValue(this, RESOLVE,\n                                                                                                     provider, false, context);\n    }\n    final PsiElement resolveTarget = findResolveTarget(context);\n    if (resolveTarget instanceof PyFunction && !myAlwaysResolveToCustomElement) {\n      return resolveTarget;\n    }\n    if (resolveTarget != null || targetClass != null) {\n      return new MyInstanceElement(targetClass, context, resolveTarget);\n    }\n    return null;\n  }","commit_id":"c07ce34cb22639fb4e6edf8c39dce65b4e71feca","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private GrVariable getOwner() {\n    if (myOwner == null) {\n      final GroovyPsiElement context = PsiTreeUtil.getParentOfType(this, GrTypeDefinition.class, GrClosableBlock.class, GroovyFile.class);\n      final PsiElementFactory factory = JavaPsiFacade.getInstance(getProject()).getElementFactory();\n      PsiType type = null;\n      if (context instanceof GrTypeDefinition) {\n        type = factory.createType((PsiClass)context);\n      }\n      else if (context instanceof GrClosableBlock) {\n        type = GrClosureType.create((GrClosableBlock)context, true);\n      }\n      else if (context instanceof GroovyFile) {\n        final PsiClass scriptClass = ((GroovyFile)context).getScriptClass();\n        if (scriptClass != null && GroovyNamesUtil.isIdentifier(scriptClass.getName())) type = factory.createType(scriptClass);\n      }\n      if (type == null) {\n        type = TypesUtil.getJavaLangObject(this);\n      }\n\n      myOwner = GroovyPsiElementFactory.getInstance(getProject()).createVariableDeclaration(null, null, type, OWNER_NAME).getVariables()[0];\n    }\n\n    return myOwner;\n  }","id":69300,"modified_method":"private PsiVariable getOwner() {\n    return CachedValuesManager.getManager(getProject()).getCachedValue(this, new CachedValueProvider<PsiVariable>() {\n      @Override\n      public Result<PsiVariable> compute() {\n        final GroovyPsiElement context = PsiTreeUtil.getParentOfType(GrClosableBlockImpl.this, GrTypeDefinition.class, GrClosableBlock.class, GroovyFile.class);\n        final PsiElementFactory factory = JavaPsiFacade.getInstance(getProject()).getElementFactory();\n        PsiType type = null;\n        if (context instanceof GrTypeDefinition) {\n          type = factory.createType((PsiClass)context);\n        }\n        else if (context instanceof GrClosableBlock) {\n          type = GrClosureType.create((GrClosableBlock)context, true);\n        }\n        else if (context instanceof GroovyFile) {\n          final PsiClass scriptClass = ((GroovyFile)context).getScriptClass();\n          if (scriptClass != null && GroovyNamesUtil.isIdentifier(scriptClass.getName())) type = factory.createType(scriptClass);\n        }\n        if (type == null) {\n          type = TypesUtil.getJavaLangObject(GrClosableBlockImpl.this);\n        }\n\n        PsiVariable owner = new GrLightVariable(null, getManager(), OWNER_NAME, type, GrClosableBlockImpl.this);\n        return Result.create(owner, PsiModificationTracker.MODIFICATION_COUNT);\n      }\n    });\n  }","commit_id":"a04366418cb8e70f70cac6fc92b6f434426cb29f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static PsiType unboxPrimitiveTypeWrapper(PsiType type) {\n    if (type instanceof PsiClassType) {\n      PsiType unboxed = ourQNameToUnboxed.get(type.getCanonicalText());\n      if (unboxed != null) type = unboxed;\n    }\n    return type;\n  }","id":69301,"modified_method":"public static PsiType unboxPrimitiveTypeWrapper(PsiType type) {\n    if (type instanceof PsiClassType) {\n      final PsiClass psiClass = ((PsiClassType)type).resolve();\n      if (psiClass != null) {\n        PsiType unboxed = ourQNameToUnboxed.get(psiClass.getQualifiedName());\n        if (unboxed != null) type = unboxed;\n      }\n    }\n    return type;\n  }","commit_id":"a04366418cb8e70f70cac6fc92b6f434426cb29f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testPropGetter() throws NoSuchFieldException, NoSuchMethodException {\n        loadText(\"var x = 0\\n\" +\n                 \"[Deprecated] get\");\n\n        Class aClass = generateNamespaceClass();\n        assertNotNull(aClass.getDeclaredMethod(\"getX\").getAnnotation(Deprecated.class));\n        assertNull(aClass.getDeclaredMethod(\"setX\", int.class).getAnnotation(Deprecated.class));\n        assertNull(aClass.getDeclaredField(\"x\").getAnnotation(Deprecated.class));\n    }","id":69302,"modified_method":"public void testPropGetter() throws Exception {\n        ClassLoader loader = loadFileGetClassLoader(\"var x = 0\\n\" +\n                 \"[Deprecated] get\");\n        Class packageClass = getPackageClass(loader);\n        assertNotNull(packageClass.getDeclaredMethod(\"getX\").getAnnotation(Deprecated.class));\n        assertNull(packageClass.getDeclaredMethod(\"setX\", int.class).getAnnotation(Deprecated.class));\n        Class srcClass = getPackageSrcClass(loader);\n        assertNotNull(srcClass.getDeclaredMethod(\"getX\").getAnnotation(Deprecated.class));\n        assertNull(srcClass.getDeclaredMethod(\"setX\", int.class).getAnnotation(Deprecated.class));\n        assertNull(srcClass.getDeclaredField(\"x\").getAnnotation(Deprecated.class));\n    }","commit_id":"faf994d8728edb9ac2a21c12fd0b8c2fbed9aa67","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void testAnnotationWithParamForParamInFunction() throws NoSuchFieldException, NoSuchMethodException {\n        loadText(\"import java.lang.annotation.*\\n\" +\n                 \"Retention(RetentionPolicy.RUNTIME) annotation class A(val a: String)\\n\" +\n                 \"fun x(A(\\\"239\\\") i: Int) {}\");\n        Class aClass = generateNamespaceClass();\n        Method x = aClass.getMethod(\"x\", int.class);\n        assertNotNull(x);\n        // Get annotations for first parameter\n        Annotation[] annotations = x.getParameterAnnotations()[0];\n        Annotation resultAnnotation = null;\n        for (Annotation annotation : annotations) {\n            if (annotation.annotationType().getCanonicalName().equals(\"A\")) {\n                resultAnnotation = annotation;\n                break;\n            }\n        }\n        assertNotNull(resultAnnotation);\n    }","id":69303,"modified_method":"public void testAnnotationWithParamForParamInFunction() throws Exception {\n        ClassLoader loader = loadFileGetClassLoader(\"import java.lang.annotation.*\\n\" +\n                 \"Retention(RetentionPolicy.RUNTIME) annotation class A(val a: String)\\n\" +\n                 \"fun x(A(\\\"239\\\") i: Int) {}\");\n        Class packageClass = getPackageSrcClass(loader);\n        Method packageClassMethod = packageClass.getMethod(\"x\", int.class);\n        assertNotNull(packageClassMethod);\n        assertNotNull(getAnnotationByName(packageClassMethod.getParameterAnnotations()[0], \"A\"));\n\n        Class srcClass = getPackageSrcClass(loader);\n        Method srcClassMethod = srcClass.getMethod(\"x\", int.class);\n        assertNotNull(srcClassMethod);\n        assertNotNull(getAnnotationByName(srcClassMethod.getParameterAnnotations()[0], \"A\"));\n    }","commit_id":"faf994d8728edb9ac2a21c12fd0b8c2fbed9aa67","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void testPropSetter() throws NoSuchFieldException, NoSuchMethodException {\n        loadText(\"var x = 0\\n\" +\n                 \"[Deprecated] set\");\n        Class aClass = generateNamespaceClass();\n        assertNull(aClass.getDeclaredMethod(\"getX\").getAnnotation(Deprecated.class));\n        assertNotNull(aClass.getDeclaredMethod(\"setX\", int.class).getAnnotation(Deprecated.class));\n        assertNull(aClass.getDeclaredField(\"x\").getAnnotation(Deprecated.class));\n    }","id":69304,"modified_method":"public void testPropSetter() throws Exception {\n        ClassLoader loader = loadFileGetClassLoader(\"var x = 0\\n\" +\n                 \"[Deprecated] set\");\n        Class packageClass = getPackageClass(loader);\n        assertNull(packageClass.getDeclaredMethod(\"getX\").getAnnotation(Deprecated.class));\n        assertNotNull(packageClass.getDeclaredMethod(\"setX\", int.class).getAnnotation(Deprecated.class));\n        Class scrClass = getPackageSrcClass(loader);\n        assertNull(scrClass.getDeclaredMethod(\"getX\").getAnnotation(Deprecated.class));\n        assertNotNull(scrClass.getDeclaredMethod(\"setX\", int.class).getAnnotation(Deprecated.class));\n        assertNull(scrClass.getDeclaredField(\"x\").getAnnotation(Deprecated.class));\n    }","commit_id":"faf994d8728edb9ac2a21c12fd0b8c2fbed9aa67","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void testPropField() throws NoSuchFieldException, NoSuchMethodException {\n        loadText(\"[Deprecated] var x = 0\");\n        Class aClass = generateNamespaceClass();\n        assertNull(aClass.getDeclaredMethod(\"getX\").getAnnotation(Deprecated.class));\n        assertNull(aClass.getDeclaredMethod(\"setX\", int.class).getAnnotation(Deprecated.class));\n        assertNotNull(aClass.getDeclaredField(\"x\").getAnnotation(Deprecated.class));\n    }","id":69305,"modified_method":"public void testPropField() throws Exception {\n        ClassLoader loader = loadFileGetClassLoader(\"[Deprecated] var x = 0\");\n        Class packageClass = getPackageClass(loader);\n        assertNull(packageClass.getDeclaredMethod(\"getX\").getAnnotation(Deprecated.class));\n        assertNull(packageClass.getDeclaredMethod(\"setX\", int.class).getAnnotation(Deprecated.class));\n        Class srcClass = getPackageSrcClass(loader);\n        assertNull(srcClass.getDeclaredMethod(\"getX\").getAnnotation(Deprecated.class));\n        assertNull(srcClass.getDeclaredMethod(\"setX\", int.class).getAnnotation(Deprecated.class));\n        assertNotNull(srcClass.getDeclaredField(\"x\").getAnnotation(Deprecated.class));\n    }","commit_id":"faf994d8728edb9ac2a21c12fd0b8c2fbed9aa67","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void testAnnotationForParamInGlobalFunction() throws NoSuchFieldException, NoSuchMethodException {\n        loadText(\"fun x([Deprecated] i: Int) {}\");\n        Class aClass = generateNamespaceClass();\n        Method x = aClass.getMethod(\"x\", int.class);\n        assertNotNull(x);\n        // Get annotations for first parameter\n        Annotation[] annotations = x.getParameterAnnotations()[0];\n        assertNotNull(getDeprecatedAnnotationFromList(annotations));\n    }","id":69306,"modified_method":"public void testAnnotationForParamInGlobalFunction() throws Exception {\n        ClassLoader loader = loadFileGetClassLoader(\"fun x([Deprecated] i: Int) {}\");\n        Class packageClass = getPackageClass(loader);\n        Method packageClassMethod = packageClass.getMethod(\"x\", int.class);\n        assertNotNull(packageClassMethod);\n        assertNotNull(getDeprecatedAnnotationFromList(packageClassMethod.getParameterAnnotations()[0]));\n        Class srcClass = getPackageSrcClass(loader);\n        Method srcClassMethod = srcClass.getMethod(\"x\", int.class);\n        assertNotNull(srcClassMethod);\n        assertNotNull(getDeprecatedAnnotationFromList(srcClassMethod.getParameterAnnotations()[0]));\n    }","commit_id":"faf994d8728edb9ac2a21c12fd0b8c2fbed9aa67","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void testMethod() throws NoSuchFieldException, NoSuchMethodException {\n        loadText(\"[Deprecated] fun x () {}\");\n        Class aClass = generateNamespaceClass();\n        Method x = aClass.getDeclaredMethod(\"x\");\n        Deprecated annotation = (Deprecated) x.getAnnotation(Deprecated.class);\n        assertNotNull(annotation);\n    }","id":69307,"modified_method":"public void testMethod() throws Exception {\n        ClassLoader loader = loadFileGetClassLoader(\"[Deprecated] fun x () {}\");\n\n        Class packageClass = getPackageClass(loader);\n        Method packageClassMethod = packageClass.getDeclaredMethod(\"x\");\n        assertNotNull(packageClassMethod.getAnnotation(Deprecated.class));\n\n        Class srcClass = getPackageSrcClass(loader);\n        Method srcClassMethod = srcClass.getDeclaredMethod(\"x\");\n        assertNotNull(srcClassMethod.getAnnotation(Deprecated.class));\n\n    }","commit_id":"faf994d8728edb9ac2a21c12fd0b8c2fbed9aa67","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void testSmokeWithCompilerJar() throws IOException {\n        File tempDir = FileUtil.createTempDirectory(\"compilerTest\", \"compilerTest\");\n\n        try {\n            File stdlib = ForTestCompileRuntime.runtimeJarForTests();\n            File jdkAnnotations = ForTestPackJdkAnnotations.jdkAnnotationsForTests();\n            File resultJar = new File(tempDir, \"result.jar\");\n            ExitCode rv = new K2JVMCompiler().exec(System.out,\n                                                   \"-module\", JetParsingTest.getTestDataDir() + \"/compiler/smoke/Smoke.kts\",\n                                                   \"-jar\", resultJar.getAbsolutePath(),\n                                                   \"-noStdlib\",\n                                                   \"-classpath\", stdlib.getAbsolutePath(),\n                                                   \"-noJdkAnnotations\",\n                                                   \"-annotations\", jdkAnnotations.getAbsolutePath());\n            Assert.assertEquals(\"compilation completed with non-zero code\", ExitCode.OK, rv);\n            FileInputStream fileInputStream = new FileInputStream(resultJar);\n            try {\n                JarInputStream is = new JarInputStream(fileInputStream);\n                try {\n                    final List<String> entries = listEntries(is);\n                    assertTrue(entries.contains(\"Smoke/\" + PackageClassUtils.getPackageClassName(new FqName(\"Smoke\")) + \".class\"));\n                    assertEquals(1, entries.size());\n                }\n                finally {\n                    is.close();\n                }\n            }\n            finally {\n                fileInputStream.close();\n            }\n        }\n        finally {\n            FileUtil.delete(tempDir);\n        }\n    }","id":69308,"modified_method":"public void testSmokeWithCompilerJar() throws IOException {\n        File tempDir = FileUtil.createTempDirectory(\"compilerTest\", \"compilerTest\");\n\n        try {\n            File stdlib = ForTestCompileRuntime.runtimeJarForTests();\n            File jdkAnnotations = ForTestPackJdkAnnotations.jdkAnnotationsForTests();\n            File resultJar = new File(tempDir, \"result.jar\");\n            ExitCode rv = new K2JVMCompiler().exec(System.out,\n                                                   \"-module\", JetParsingTest.getTestDataDir() + \"/compiler/smoke/Smoke.kts\",\n                                                   \"-jar\", resultJar.getAbsolutePath(),\n                                                   \"-noStdlib\",\n                                                   \"-classpath\", stdlib.getAbsolutePath(),\n                                                   \"-noJdkAnnotations\",\n                                                   \"-annotations\", jdkAnnotations.getAbsolutePath());\n            Assert.assertEquals(\"compilation completed with non-zero code\", ExitCode.OK, rv);\n            FileInputStream fileInputStream = new FileInputStream(resultJar);\n            try {\n                JarInputStream is = new JarInputStream(fileInputStream);\n                try {\n                    final List<String> entries = listEntries(is);\n                    assertTrue(entries.contains(\"Smoke/\" + PackageClassUtils.getPackageClassName(new FqName(\"Smoke\")) + \".class\"));\n                    assertEquals(2, entries.size());\n                }\n                finally {\n                    is.close();\n                }\n            }\n            finally {\n                fileInputStream.close();\n            }\n        }\n        finally {\n            FileUtil.delete(tempDir);\n        }\n    }","commit_id":"faf994d8728edb9ac2a21c12fd0b8c2fbed9aa67","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void testSmokeWithCompilerOutput() throws IOException {\n        File tempDir = FileUtil.createTempDirectory(\"compilerTest\", \"compilerTest\");\n        try {\n            File out = new File(tempDir, \"out\");\n            File stdlib = ForTestCompileRuntime.runtimeJarForTests();\n            File jdkAnnotations = ForTestPackJdkAnnotations.jdkAnnotationsForTests();\n            ExitCode exitCode = new K2JVMCompiler()\n                    .exec(System.out, \"-src\", JetParsingTest.getTestDataDir() + \"/compiler/smoke/Smoke.kt\",\n                          \"-output\", out.getAbsolutePath(),\n                          \"-noStdlib\",\n                          \"-classpath\", stdlib.getAbsolutePath(),\n                          \"-noJdkAnnotations\",\n                          \"-annotations\", jdkAnnotations.getAbsolutePath());\n            Assert.assertEquals(ExitCode.OK, exitCode);\n            assertEquals(1, out.listFiles().length);\n            assertEquals(1, out.listFiles()[0].listFiles().length);\n        } finally {\n            FileUtil.delete(tempDir);\n        }\n    }","id":69309,"modified_method":"public void testSmokeWithCompilerOutput() throws IOException {\n        File tempDir = FileUtil.createTempDirectory(\"compilerTest\", \"compilerTest\");\n        try {\n            File out = new File(tempDir, \"out\");\n            File stdlib = ForTestCompileRuntime.runtimeJarForTests();\n            File jdkAnnotations = ForTestPackJdkAnnotations.jdkAnnotationsForTests();\n            ExitCode exitCode = new K2JVMCompiler()\n                    .exec(System.out, \"-src\", JetParsingTest.getTestDataDir() + \"/compiler/smoke/Smoke.kt\",\n                          \"-output\", out.getAbsolutePath(),\n                          \"-noStdlib\",\n                          \"-classpath\", stdlib.getAbsolutePath(),\n                          \"-noJdkAnnotations\",\n                          \"-annotations\", jdkAnnotations.getAbsolutePath());\n            Assert.assertEquals(ExitCode.OK, exitCode);\n            assertEquals(1, out.listFiles().length);\n            assertEquals(2, out.listFiles()[0].listFiles().length);\n        } finally {\n            FileUtil.delete(tempDir);\n        }\n    }","commit_id":"faf994d8728edb9ac2a21c12fd0b8c2fbed9aa67","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public void setUp() throws Exception {\n        super.setUp();\n\n        JetCoreEnvironment environment = createEnvironment();\n        JetFile psiFile = JetPsiFactory.createFile(environment.getProject(),\n                                                   \"package test;\\n\\npublic fun \" + LINE_NUMBER_FUN + \"(): Int = 0\\n\");\n\n        ClassFileFactory classFileFactory = GenerationUtils.compileFileGetClassFileFactoryForTest(psiFile);\n        CompileEnvironmentUtil.writeToOutputDirectory(classFileFactory, tmpdir);\n    }","id":69310,"modified_method":"@Override\n    public void setUp() throws Exception {\n        super.setUp();\n\n        JetCoreEnvironment environment = createEnvironment();\n        JetFile psiFile = JetTestUtils.createFile(LINE_NUMBER_FUN + \".kt\",\n                                               \"package test;\\n\\npublic fun \" + LINE_NUMBER_FUN + \"(): Int = 0\\n\",\n                                               environment.getProject());\n\n        ClassFileFactory classFileFactory = GenerationUtils.compileFileGetClassFileFactoryForTest(psiFile);\n        CompileEnvironmentUtil.writeToOutputDirectory(classFileFactory, tmpdir);\n    }","commit_id":"faf994d8728edb9ac2a21c12fd0b8c2fbed9aa67","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@NotNull\n        public static JetFileAndExhaust createJetFileAndAnalyze(@NotNull File kotlinFile, @NotNull Disposable disposable, @NotNull ConfigurationKind configurationKind)\n                throws IOException {\n            JetCoreEnvironment jetCoreEnvironment = createEnvironmentWithMockJdkAndIdeaAnnotations(disposable, configurationKind);\n            JetFile jetFile = createFile(jetCoreEnvironment.getProject(), kotlinFile.getName(), FileUtil.loadFile(kotlinFile, true));\n            AnalyzeExhaust exhaust = AnalyzerFacadeForJVM.analyzeOneFileWithJavaIntegrationAndCheckForErrors(\n                    jetFile, Collections.<AnalyzerScriptParameter>emptyList());\n            return new JetFileAndExhaust(jetFile, exhaust);\n        }","id":69311,"modified_method":"@NotNull\n        public static JetFileAndExhaust createJetFileAndAnalyze(@NotNull File kotlinFile, @NotNull Disposable disposable, @NotNull ConfigurationKind configurationKind)\n                throws IOException {\n            JetCoreEnvironment jetCoreEnvironment = createEnvironmentWithMockJdkAndIdeaAnnotations(disposable, configurationKind);\n            JetFile jetFile = JetTestUtils.createFile(kotlinFile.getName(), FileUtil.loadFile(kotlinFile, true), jetCoreEnvironment.getProject());\n            AnalyzeExhaust exhaust = AnalyzerFacadeForJVM.analyzeOneFileWithJavaIntegrationAndCheckForErrors(\n                    jetFile, Collections.<AnalyzerScriptParameter>emptyList());\n            return new JetFileAndExhaust(jetFile, exhaust);\n        }","commit_id":"faf994d8728edb9ac2a21c12fd0b8c2fbed9aa67","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void generate(JetFile file, boolean multiFile) {\n        NamespaceDescriptor descriptor = state.getBindingContext().get(BindingContext.FILE_TO_NAMESPACE, file);\n        assert descriptor != null : \"No namespace found for file \" + file + \" declared package: \" + file.getPackageName();\n        for (JetDeclaration declaration : file.getDeclarations()) {\n            if (declaration instanceof JetProperty) {\n                final CodegenContext context = CodegenContext.STATIC.intoNamespace(descriptor);\n                genFunctionOrProperty(context, (JetTypeParameterListOwner) declaration, v.getClassBuilder());\n            }\n            else if (declaration instanceof JetNamedFunction) {\n                if (!multiFile) {\n                    final CodegenContext context = CodegenContext.STATIC.intoNamespace(descriptor);\n                    genFunctionOrProperty(context, (JetTypeParameterListOwner) declaration, v.getClassBuilder());\n                }\n            }\n            else if (declaration instanceof JetClassOrObject) {\n                if (state.isGenerateDeclaredClasses()) {\n                    generateClassOrObject(descriptor, (JetClassOrObject) declaration);\n                }\n            }\n            else if (declaration instanceof JetScript) {\n                state.getScriptCodegen().generate((JetScript) declaration);\n            }\n        }\n\n        if (multiFile) {\n            int k = 0;\n            for (JetDeclaration declaration : file.getDeclarations()) {\n                if (declaration instanceof JetNamedFunction) {\n                    k++;\n                }\n            }\n\n            if (k > 0) {\n                String namespaceInternalName = JvmClassName.byFqNameWithoutInnerClasses(\n                                                    PackageClassUtils.getPackageClassFqName(name)).getInternalName();\n                String className = getMultiFileNamespaceInternalName(namespaceInternalName, file);\n                ClassBuilder builder = state.getFactory().forNamespacepart(className, file);\n\n                builder.defineClass(file, V1_6,\n                                    ACC_PUBLIC | ACC_FINAL,\n                                    className,\n                                    null,\n                                    //\"jet/lang/Namespace\",\n                                    \"java/lang/Object\",\n                                    new String[0]\n                );\n                builder.visitSource(file.getName(), null);\n\n                for (JetDeclaration declaration : file.getDeclarations()) {\n                    if (declaration instanceof JetNamedFunction) {\n                        {\n                            final CodegenContext context =\n                                    CodegenContext.STATIC.intoNamespace(descriptor);\n                            genFunctionOrProperty(context, (JetTypeParameterListOwner) declaration, builder);\n                        }\n                        {\n                            final CodegenContext context =\n                                    CodegenContext.STATIC.intoNamespacePart(className, descriptor);\n                            genFunctionOrProperty(context, (JetTypeParameterListOwner) declaration, v.getClassBuilder());\n                        }\n                    }\n                }\n\n                builder.done();\n            }\n        }\n    }","id":69312,"modified_method":"private void generate(JetFile file) {\n        NamespaceDescriptor descriptor = state.getBindingContext().get(BindingContext.FILE_TO_NAMESPACE, file);\n        assert descriptor != null : \"No namespace found for file \" + file + \" declared package: \" + file.getPackageName();\n        int countOfDeclarationsInSrcClass = 0;\n        for (JetDeclaration declaration : file.getDeclarations()) {\n            if (declaration instanceof JetProperty) {\n                final CodegenContext context = CodegenContext.STATIC.intoNamespace(descriptor);\n                genFunctionOrProperty(context, (JetTypeParameterListOwner) declaration, v.getClassBuilder());\n            }\n            else if (declaration instanceof JetNamedFunction) {\n                countOfDeclarationsInSrcClass++;\n            }\n            else if (declaration instanceof JetClassOrObject) {\n                if (state.isGenerateDeclaredClasses()) {\n                    generateClassOrObject(descriptor, (JetClassOrObject) declaration);\n                }\n            }\n            else if (declaration instanceof JetScript) {\n                state.getScriptCodegen().generate((JetScript) declaration);\n            }\n        }\n\n        if (countOfDeclarationsInSrcClass > 0) {\n            String namespaceInternalName = JvmClassName.byFqNameWithoutInnerClasses(\n                                                PackageClassUtils.getPackageClassFqName(name)).getInternalName();\n            String className = getMultiFileNamespaceInternalName(namespaceInternalName, file);\n            ClassBuilder builder = state.getFactory().forNamespacepart(className, file);\n\n            builder.defineClass(file, V1_6,\n                                ACC_PUBLIC | ACC_FINAL,\n                                className,\n                                null,\n                                //\"jet/lang/Namespace\",\n                                \"java/lang/Object\",\n                                new String[0]\n            );\n            builder.visitSource(file.getName(), null);\n\n            for (JetDeclaration declaration : file.getDeclarations()) {\n                if (declaration instanceof JetNamedFunction) {\n                    {\n                        final CodegenContext context =\n                                CodegenContext.STATIC.intoNamespace(descriptor);\n                        genFunctionOrProperty(context, (JetTypeParameterListOwner) declaration, builder);\n                    }\n                    {\n                        final CodegenContext context =\n                                CodegenContext.STATIC.intoNamespacePart(className, descriptor);\n                        genFunctionOrProperty(context, (JetTypeParameterListOwner) declaration, v.getClassBuilder());\n                    }\n                }\n            }\n\n            builder.done();\n        }\n    }","commit_id":"faf994d8728edb9ac2a21c12fd0b8c2fbed9aa67","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public void generate(CompilationErrorHandler errorHandler) {\n        boolean multiFile = CodegenBinding.isMultiFileNamespace(state.getBindingContext(), name);\n\n        if (shouldGenerateNSClass(files)) {\n            AnnotationVisitor packageClassAnnotation = v.getClassBuilder().newAnnotation(JvmStdlibNames.JET_PACKAGE_CLASS.getDescriptor(), true);\n            packageClassAnnotation.visit(JvmStdlibNames.ABI_VERSION_NAME, JvmAbi.VERSION);\n            packageClassAnnotation.visitEnd();\n        }\n\n        for (JetFile file : files) {\n            VirtualFile vFile = file.getVirtualFile();\n            try {\n                generate(file, multiFile);\n            }\n            catch (ProcessCanceledException e) {\n                throw e;\n            }\n            catch (Throwable e) {\n                if (errorHandler != null) errorHandler.reportException(e, vFile == null ? \"no file\" : vFile.getUrl());\n                DiagnosticUtils.throwIfRunningOnServer(e);\n                if (ApplicationManager.getApplication().isInternal()) {\n                    //noinspection CallToPrintStackTrace\n                    e.printStackTrace();\n                }\n            }\n        }\n\n        assert v.isActivated() == shouldGenerateNSClass(files) : \"Different algorithms for generating namespace class and for heuristics\";\n\n        if (hasNonConstantPropertyInitializers()) {\n            generateStaticInitializers();\n        }\n    }","id":69313,"modified_method":"public void generate(CompilationErrorHandler errorHandler) {\n        if (shouldGenerateNSClass(files)) {\n            AnnotationVisitor packageClassAnnotation = v.getClassBuilder().newAnnotation(JvmStdlibNames.JET_PACKAGE_CLASS.getDescriptor(), true);\n            packageClassAnnotation.visit(JvmStdlibNames.ABI_VERSION_NAME, JvmAbi.VERSION);\n            packageClassAnnotation.visitEnd();\n        }\n\n        for (JetFile file : files) {\n            VirtualFile vFile = file.getVirtualFile();\n            try {\n                generate(file);\n            }\n            catch (ProcessCanceledException e) {\n                throw e;\n            }\n            catch (Throwable e) {\n                if (errorHandler != null) errorHandler.reportException(e, vFile == null ? \"no file\" : vFile.getUrl());\n                DiagnosticUtils.throwIfRunningOnServer(e);\n                if (ApplicationManager.getApplication().isInternal()) {\n                    //noinspection CallToPrintStackTrace\n                    e.printStackTrace();\n                }\n            }\n        }\n\n        assert v.isActivated() == shouldGenerateNSClass(files) : \"Different algorithms for generating namespace class and for heuristics\";\n\n        if (hasNonConstantPropertyInitializers()) {\n            generateStaticInitializers();\n        }\n    }","commit_id":"faf994d8728edb9ac2a21c12fd0b8c2fbed9aa67","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    protected void doFix(Project project, ProblemDescriptor descriptor) {\n      final PsiElement psiElement = descriptor.getPsiElement();\n      final String suppressedIds = JavaSuppressionUtil.getSuppressedInspectionIdsIn(psiElement);\n      final Iterable<String> ids = suppressedIds != null ? StringUtil.tokenize(suppressedIds, \"[, ]\") : null;\n      if (ids != null) {\n        for (String id : ids) {\n          if (!myAllowedSuppressions.contains(id)) {\n            myAllowedSuppressions.add(id);\n          }\n        }\n        saveProfile(project);\n      }\n    }","id":69314,"modified_method":"@Override\n    protected void doFix(Project project, ProblemDescriptor descriptor) {\n      final PsiElement psiElement = descriptor.getPsiElement();\n      final Iterable<String> ids;\n      if (psiElement instanceof PsiAnnotation) {\n        ids = JavaSuppressionUtil.getInspectionIdsSuppressedInAnnotation((PsiModifierList)psiElement.getParent());\n      }\n      else {\n        final String suppressedIds = JavaSuppressionUtil.getSuppressedInspectionIdsIn(psiElement);\n        if (suppressedIds == null) {\n          return;\n        }\n        ids = StringUtil.tokenize(suppressedIds, \",\");\n      }\n      for (String id : ids) {\n        if (!myAllowedSuppressions.contains(id)) {\n          myAllowedSuppressions.add(id);\n        }\n      }\n      saveProfile(project);\n    }","commit_id":"4d3f3f4b54433973e4f4b500de115a8c72071ad5","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  protected InspectionGadgetsFix[] buildFixes(Object... infos) { \n    if (infos.length == 1) {\n      if (infos[0] instanceof PsiAnnotation) {\n        final PsiAnnotation annotation = (PsiAnnotation)infos[0];\n        PsiElement parent = annotation.getParent();\n        final Collection<String> ids = JavaSuppressionUtil.getInspectionIdsSuppressedInAnnotation((PsiModifierList)parent);\n        if (!ids.isEmpty()) {\n          return new InspectionGadgetsFix[]{new DelegatingFix(new RemoveAnnotationQuickFix(annotation, null)), new AllowSuppressionsFix()};\n        }\n      } else if (infos[0] instanceof PsiComment) {\n        return new InspectionGadgetsFix[]{new RemoveSuppressCommentFix(), new AllowSuppressionsFix()};\n      }\n    }\n    return InspectionGadgetsFix.EMPTY_ARRAY;\n  }","id":69315,"modified_method":"@NotNull\n  @Override\n  protected InspectionGadgetsFix[] buildFixes(Object... infos) {\n    final boolean suppressionIdPresent = ((Boolean)infos[1]).booleanValue();\n    if (infos[0] instanceof PsiAnnotation) {\n      final PsiAnnotation annotation = (PsiAnnotation)infos[0];\n      return suppressionIdPresent\n             ? new InspectionGadgetsFix[]{new DelegatingFix(new RemoveAnnotationQuickFix(annotation, null)), new AllowSuppressionsFix()}\n             : new InspectionGadgetsFix[]{new DelegatingFix(new RemoveAnnotationQuickFix(annotation, null))};\n    } else if (infos[0] instanceof PsiComment) {\n      return suppressionIdPresent\n             ? new InspectionGadgetsFix[]{new RemoveSuppressCommentFix(), new AllowSuppressionsFix()}\n             : new InspectionGadgetsFix[]{new RemoveSuppressCommentFix()};\n    }\n    return InspectionGadgetsFix.EMPTY_ARRAY;\n  }","commit_id":"cc1d196b9416e8e40e73d206170befee23e706da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    protected void doFix(Project project, ProblemDescriptor descriptor) {\n      PsiElement psiElement = descriptor.getPsiElement();\n      if (psiElement != null) {\n        if (!FileModificationService.getInstance().preparePsiElementForWrite(psiElement)) return;\n        psiElement.delete();\n      }\n    }","id":69316,"modified_method":"@Override\n    protected void doFix(Project project, ProblemDescriptor descriptor) {\n      PsiElement psiElement = descriptor.getPsiElement();\n      if (psiElement != null) {\n        psiElement.delete();\n      }\n    }","commit_id":"cc1d196b9416e8e40e73d206170befee23e706da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitComment(PsiComment comment) {\n      super.visitComment(comment);\n      final String commentText = comment.getText();\n      final IElementType tokenType = comment.getTokenType();\n      if (!tokenType.equals(JavaTokenType.END_OF_LINE_COMMENT)\n          && !tokenType.equals(JavaTokenType.C_STYLE_COMMENT)) {\n        return;\n      }\n\n      if (commentText.length() > 2) {\n        @NonNls final String strippedComment = commentText.substring(2).trim();\n        if (strippedComment.startsWith(SuppressionUtilCore.SUPPRESS_INSPECTIONS_TAG_NAME)) {\n          final String suppressedIds = JavaSuppressionUtil.getSuppressedInspectionIdsIn(comment);\n          final Iterable<String> ids = suppressedIds != null ? StringUtil.tokenize(suppressedIds, \"[, ]\") : null;\n          if (ids != null) {\n            for (String id : ids) {\n              if (!myAllowedSuppressions.contains(id)) {\n                registerError(comment, comment);\n                break;\n              }\n            }\n          }\n        }\n      }\n    }","id":69317,"modified_method":"@Override\n    public void visitComment(PsiComment comment) {\n      super.visitComment(comment);\n      final IElementType tokenType = comment.getTokenType();\n      if (!tokenType.equals(JavaTokenType.END_OF_LINE_COMMENT)\n          && !tokenType.equals(JavaTokenType.C_STYLE_COMMENT)) {\n        return;\n      }\n      final String commentText = comment.getText();\n      if (commentText.length() <= 2) {\n        return;\n      }\n      @NonNls final String strippedComment = commentText.substring(2).trim();\n      if (!strippedComment.startsWith(SuppressionUtilCore.SUPPRESS_INSPECTIONS_TAG_NAME)) {\n        return;\n      }\n      final String suppressedIds = JavaSuppressionUtil.getSuppressedInspectionIdsIn(comment);\n      if (suppressedIds == null) {\n        registerError(comment, comment, Boolean.FALSE);\n        return;\n      }\n      final Iterable<String> ids = StringUtil.tokenize(suppressedIds, \",\");\n      for (String id : ids) {\n        if (!myAllowedSuppressions.contains(id)) {\n          registerError(comment, comment, Boolean.TRUE);\n          break;\n        }\n      }\n    }","commit_id":"cc1d196b9416e8e40e73d206170befee23e706da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void visitAnnotation(PsiAnnotation annotation) {\n      super.visitAnnotation(annotation);\n      final PsiJavaCodeReferenceElement reference = annotation.getNameReferenceElement();\n      if (reference == null) {\n        return;\n      }\n      @NonNls final String text = reference.getText();\n      if (\"SuppressWarnings\".equals(text) ||\n          BatchSuppressManager.SUPPRESS_INSPECTIONS_ANNOTATION_NAME.equals(text)) {\n        final PsiElement annotationParent = annotation.getParent();\n        if (annotationParent instanceof PsiModifierList) {\n          final Collection<String> ids = JavaSuppressionUtil.getInspectionIdsSuppressedInAnnotation((PsiModifierList)annotationParent);\n          if (!myAllowedSuppressions.containsAll(ids)) {\n            registerError(annotation, annotation);\n          }\n        }\n      }\n    }","id":69318,"modified_method":"@Override\n    public void visitAnnotation(PsiAnnotation annotation) {\n      super.visitAnnotation(annotation);\n      final PsiJavaCodeReferenceElement reference = annotation.getNameReferenceElement();\n      if (reference == null) {\n        return;\n      }\n      @NonNls final String text = reference.getText();\n      if (\"SuppressWarnings\".equals(text) ||\n          BatchSuppressManager.SUPPRESS_INSPECTIONS_ANNOTATION_NAME.equals(text)) {\n        final PsiElement annotationParent = annotation.getParent();\n        if (annotationParent instanceof PsiModifierList) {\n          final Collection<String> ids = JavaSuppressionUtil.getInspectionIdsSuppressedInAnnotation((PsiModifierList)annotationParent);\n          if (!myAllowedSuppressions.containsAll(ids)) {\n            registerError(annotation, annotation, Boolean.TRUE);\n          }\n          else if (ids.isEmpty()) {\n            registerError(annotation, annotation, Boolean.FALSE);\n          }\n        }\n      }\n    }","commit_id":"cc1d196b9416e8e40e73d206170befee23e706da","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void addMavenParameters(ParametersList parametersList,\n                                         MavenGeneralSettings coreSettings,\n                                         MavenRunnerSettings runnerSettings,\n                                         MavenRunnerParameters parameters) {\n    encodeCoreAndRunnerSettings(coreSettings, runnerSettings, parametersList);\n\n    if (runnerSettings.isSkipTests()) {\n      parametersList.addProperty(\"skipTests\", \"true\");\n    }\n\n    for (Map.Entry<String, String> entry : runnerSettings.getMavenProperties().entrySet()) {\n      if (entry.getKey().length() > 0) {\n        parametersList.addProperty(entry.getKey(), entry.getValue());\n      }\n    }\n\n    if (parameters.getPomFilePath() != null) {\n      addOption(parametersList, \"f\", parameters.getPomFilePath());\n    }\n\n    for (String goal : parameters.getGoals()) {\n      parametersList.add(goal);\n    }\n\n    addOption(parametersList, \"P\", encodeProfiles(parameters.getProfiles()));\n  }","id":69319,"modified_method":"private static void addMavenParameters(ParametersList parametersList,\n                                         MavenGeneralSettings coreSettings,\n                                         MavenRunnerSettings runnerSettings,\n                                         MavenRunnerParameters parameters) {\n    encodeCoreAndRunnerSettings(coreSettings, runnerSettings, parametersList);\n\n    if (runnerSettings.isSkipTests()) {\n      parametersList.addProperty(\"skipTests\", \"true\");\n    }\n\n    for (Map.Entry<String, String> entry : runnerSettings.getMavenProperties().entrySet()) {\n      if (entry.getKey().length() > 0) {\n        parametersList.addProperty(entry.getKey(), entry.getValue());\n      }\n    }\n\n    if (parameters.getPomFilePath() != null) {\n      addOption(parametersList, \"f\", parameters.getPomFilePath());\n    }\n\n    for (String goal : parameters.getGoals()) {\n      parametersList.add(goal);\n    }\n\n    addOption(parametersList, \"P\", encodeProfiles(parameters.getProfilesMap()));\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String encodeProfiles(final Collection<String> profiles) {\n    final StringBuilder stringBuilder = new StringBuilder();\n    for (String profile : profiles) {\n      if (stringBuilder.length() != 0) {\n        stringBuilder.append(\",\");\n      }\n      stringBuilder.append(profile);\n    }\n    return stringBuilder.toString();\n  }","id":69320,"modified_method":"private static String encodeProfiles(Map<String, Boolean> profiles) {\n    StringBuilder stringBuilder = new StringBuilder();\n    for (Map.Entry<String, Boolean> entry : profiles.entrySet()) {\n      if (stringBuilder.length() != 0) {\n        stringBuilder.append(\",\");\n      }\n      if (!entry.getValue()) {\n        stringBuilder.append(\"-\");\n      }\n      stringBuilder.append(entry.getKey());\n    }\n    return stringBuilder.toString();\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void readExternal(Element element) throws InvalidDataException {\n    super.readExternal(element);\n\n    Element mavenSettingsElement = element.getChild(MavenSettings.TAG);\n    if (mavenSettingsElement != null) {\n      mySettings = XmlSerializer.deserialize(mavenSettingsElement, MavenSettings.class);\n      if (mySettings == null) mySettings = new MavenSettings();\n\n      if (mySettings.myGeneralSettings == null) mySettings.myGeneralSettings = new MavenGeneralSettings();\n      if (mySettings.myRunnerSettings == null) mySettings.myRunnerSettings = new MavenRunnerSettings();\n      if (mySettings.myRunnerParameters == null) mySettings.myRunnerParameters = new MavenRunnerParameters();\n\n      // fix old settings format\n      File workingDir = mySettings.myRunnerParameters.getWorkingDirFile();\n      if (MavenConstants.POM_XML.equals(workingDir.getName())) {\n        mySettings.myRunnerParameters.setWorkingDirPath(workingDir.getParent());\n      }\n    }\n  }","id":69321,"modified_method":"public void readExternal(Element element) throws InvalidDataException {\n    super.readExternal(element);\n\n    Element mavenSettingsElement = element.getChild(MavenSettings.TAG);\n    if (mavenSettingsElement != null) {\n      mySettings = XmlSerializer.deserialize(mavenSettingsElement, MavenSettings.class);\n      if (mySettings == null) mySettings = new MavenSettings();\n\n      if (mySettings.myGeneralSettings == null) mySettings.myGeneralSettings = new MavenGeneralSettings();\n      if (mySettings.myRunnerSettings == null) mySettings.myRunnerSettings = new MavenRunnerSettings();\n      if (mySettings.myRunnerParameters == null) mySettings.myRunnerParameters = new MavenRunnerParameters();\n\n      // fix old settings format\n      mySettings.myRunnerParameters.fixAfterLoadingFromOldFormat();\n    }\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testSaveLoadRunnerParameters() {\n    MavenRunConfiguration.MavenSettings s = new MavenRunConfiguration.MavenSettings(myProject);\n    s.myRunnerParameters.setWorkingDirPath(\"some path\");\n    s.myRunnerParameters.setGoals(Arrays.asList(\"clean validate\"));\n    s.myRunnerParameters.setProfiles(Arrays.asList(\"prof1 prof2\"));\n\n    Element xml = XmlSerializer.serialize(s);\n    MavenRunConfiguration.MavenSettings loaded\n      = XmlSerializer.deserialize(xml, MavenRunConfiguration.MavenSettings.class);\n    \n    assertEquals(s.myRunnerParameters.getWorkingDirPath(), loaded.myRunnerParameters.getWorkingDirPath());\n    assertEquals(s.myRunnerParameters.getGoals(), loaded.myRunnerParameters.getGoals());\n    assertEquals(s.myRunnerParameters.getProfiles(), loaded.myRunnerParameters.getProfiles());\n  }","id":69322,"modified_method":"public void testSaveLoadRunnerParameters() {\n    MavenRunConfiguration.MavenSettings s = new MavenRunConfiguration.MavenSettings(myProject);\n    s.myRunnerParameters.setWorkingDirPath(\"some path\");\n    s.myRunnerParameters.setGoals(Arrays.asList(\"clean validate\"));\n    s.myRunnerParameters.setProfilesMap(ImmutableMap.of(\"prof1\", true, \"prof2\", true, \"prof3\", false));\n\n    Element xml = XmlSerializer.serialize(s);\n    MavenRunConfiguration.MavenSettings loaded\n      = XmlSerializer.deserialize(xml, MavenRunConfiguration.MavenSettings.class);\n    \n    assertEquals(s.myRunnerParameters.getWorkingDirPath(), loaded.myRunnerParameters.getWorkingDirPath());\n    assertEquals(s.myRunnerParameters.getGoals(), loaded.myRunnerParameters.getGoals());\n    assertEquals(s.myRunnerParameters.getProfilesMap(), loaded.myRunnerParameters.getProfilesMap());\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Collection<String> getProfiles() {\n    return myProfiles;\n  }","id":69323,"modified_method":"/**\n   * Was left for compatibility with old plugins.\n   * @deprecated use getProfileMap()\n   * @return\n   */\n  @Transient\n  public Collection<String> getProfiles() {\n    return Maps.filterValues(myProfilesMap, Predicates.equalTo(true)).keySet();\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setProfiles(Collection<String> profiles) {\n    myProfiles = new TreeSet<String>();\n    if (profiles != null) {\n      myProfiles.addAll(profiles);\n    }\n  }","id":69324,"modified_method":"/**\n   * Was left for compatibility with old plugins.\n   * @deprecated use getProfileMap()\n   * @param profiles\n   */\n  public void setProfiles(@Nullable Collection<String> profiles) {\n    if (profiles != null) {\n      for (String profile : profiles) {\n        myProfilesMap.put(profile, true);\n      }\n    }\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public int hashCode() {\n    int result;\n    result = isPomExecution ? 1 : 0;\n    result = 31 * result + (myWorkingDirPath != null ? myWorkingDirPath.hashCode() : 0);\n    result = 31 * result + (myGoals != null ? myGoals.hashCode() : 0);\n    result = 31 * result + (myProfiles != null ? myProfiles.hashCode() : 0);\n    return result;\n  }","id":69325,"modified_method":"public int hashCode() {\n    int result;\n    result = isPomExecution ? 1 : 0;\n    result = 31 * result + (myWorkingDirPath != null ? myWorkingDirPath.hashCode() : 0);\n    result = 31 * result + (myGoals != null ? myGoals.hashCode() : 0);\n    result = 31 * result + myProfilesMap.hashCode();\n    return result;\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MavenRunnerParameters(MavenRunnerParameters that) {\n    this(that.isPomExecution, that.getWorkingDirPath(), that.myGoals, that.myProfiles);\n  }","id":69326,"modified_method":"public MavenRunnerParameters(MavenRunnerParameters that) {\n    this(that.getWorkingDirPath(), that.isPomExecution, that.myGoals, that.myProfilesMap);\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final MavenRunnerParameters that = (MavenRunnerParameters)o;\n\n    if (isPomExecution != that.isPomExecution) return false;\n    if (myGoals != null ? !myGoals.equals(that.myGoals) : that.myGoals != null) return false;\n    if (myWorkingDirPath != null ? !myWorkingDirPath.equals(that.myWorkingDirPath) : that.myWorkingDirPath != null) return false;\n    if (myProfiles != null ? !myProfiles.equals(that.myProfiles) : that.myProfiles != null) return false;\n\n    return true;\n  }","id":69327,"modified_method":"public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    final MavenRunnerParameters that = (MavenRunnerParameters)o;\n\n    if (isPomExecution != that.isPomExecution) return false;\n    if (myGoals != null ? !myGoals.equals(that.myGoals) : that.myGoals != null) return false;\n    if (myWorkingDirPath != null ? !myWorkingDirPath.equals(that.myWorkingDirPath) : that.myWorkingDirPath != null) return false;\n    if (!myProfilesMap.equals(that.myProfilesMap)) return false;\n\n    return true;\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MavenRunnerParameters(boolean isPomExecution, String workingDirPath, List<String> goals, Collection<String> profiles) {\n    this.isPomExecution = isPomExecution;\n    setWorkingDirPath(workingDirPath);\n    setGoals(goals);\n    setProfiles(profiles);\n  }","id":69328,"modified_method":"public MavenRunnerParameters(boolean isPomExecution, String workingDirPath,\n                               @Nullable List<String> goals,\n                               @Nullable Collection<String> explicitEnabledProfiles) {\n    this(isPomExecution, workingDirPath, goals, explicitEnabledProfiles, null);\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MavenRunnerParameters() {\n    this(true, \"\", null, null);\n  }","id":69329,"modified_method":"public MavenRunnerParameters() {\n    this(true, \"\", null, null, null);\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void setData(final MavenRunnerParameters data) {\n    data.setWorkingDirPath(workingDirComponent.getComponent().getText());\n    data.setGoals(Strings.tokenize(goalsComponent.getComponent().getText(), \" \"));\n    data.setProfiles(Strings.tokenize(profilesComponent.getComponent().getText(), \" \"));\n  }","id":69330,"modified_method":"private void setData(final MavenRunnerParameters data) {\n    data.setWorkingDirPath(workingDirComponent.getComponent().getText());\n    data.setGoals(Strings.tokenize(goalsComponent.getComponent().getText(), \" \"));\n\n    Map<String, Boolean> profilesMap = new LinkedHashMap<String, Boolean>();\n\n    for (String profile : Strings.tokenize(profilesComponent.getComponent().getText(), \" ,;\")) {\n      Boolean isEnabled = true;\n      if (profile.startsWith(\"-\") || profile.startsWith(\"!\")) {\n        profile = profile.substring(1);\n        if (profile.isEmpty()) continue;\n\n        isEnabled = false;\n      }\n\n      profilesMap.put(profile, isEnabled);\n    }\n    data.setProfilesMap(profilesMap);\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void getData(final MavenRunnerParameters data) {\n    workingDirComponent.getComponent().setText(data.getWorkingDirPath());\n    goalsComponent.getComponent().setText(Strings.detokenize(data.getGoals(), ' '));\n    profilesComponent.getComponent().setText(Strings.detokenize(data.getProfiles(), ' '));\n  }","id":69331,"modified_method":"private void getData(final MavenRunnerParameters data) {\n    workingDirComponent.getComponent().setText(data.getWorkingDirPath());\n    goalsComponent.getComponent().setText(Strings.detokenize(data.getGoals(), ' '));\n\n    StringBuilder sb = new StringBuilder();\n    for (Map.Entry<String, Boolean> entry : data.getProfilesMap().entrySet()) {\n      if (sb.length() != 0) {\n        sb.append(\" \");\n      }\n      if (!entry.getValue()) {\n        sb.append(\"-\");\n      }\n\n      sb.append(entry.getKey());\n    }\n\n    profilesComponent.getComponent().setText(sb.toString());\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MavenRunnerParametersConfigurable(@NotNull Project project) {\n    workingDirComponent.getComponent().addBrowseFolderListener(\n      RunnerBundle.message(\"maven.select.maven.project.file\"), \"\", null,\n      new FileChooserDescriptor(false, true, false, false, false, false) {\n        @Override\n        public boolean isFileSelectable(VirtualFile file) {\n          if (!super.isFileSelectable(file)) return false;\n          return file.findChild(MavenConstants.POM_XML) != null;\n        }\n      });\n\n    if (!project.isDefault()) {\n      MyCompletionProvider profilesCompletionProvider = new MyCompletionProvider(project) {\n        @Override\n        protected void addVariants(@NotNull CompletionResultSet result, MavenProjectsManager manager) {\n          for (String profile : manager.getAvailableProfiles()) {\n            result.addElement(LookupElementBuilder.create(profile));\n          }\n        }\n      };\n\n      profilesComponent.setComponent(profilesCompletionProvider.createEditor(project));\n\n      MyCompletionProvider goalsCompletionProvider = new MyCompletionProvider(project) {\n\n        private volatile List<LookupElement> myCachedElements;\n\n        @Override\n        protected void addVariants(@NotNull CompletionResultSet result, MavenProjectsManager manager) {\n          List<LookupElement> cachedElements = myCachedElements;\n          if (cachedElements == null) {\n            Set<String> goals = new HashSet<String>();\n            goals.addAll(MavenConstants.PHASES);\n\n            for (MavenProject mavenProject : manager.getProjects()) {\n              for (MavenPlugin plugin : mavenProject.getPlugins()) {\n                MavenPluginInfo pluginInfo = MavenArtifactUtil.readPluginInfo(manager.getLocalRepository(), plugin.getMavenId());\n                if (pluginInfo != null) {\n                  for (MavenPluginInfo.Mojo mojo : pluginInfo.getMojos()) {\n                    goals.add(mojo.getDisplayName());\n                  }\n                }\n              }\n            }\n\n            cachedElements = new ArrayList<LookupElement>(goals.size());\n            for (String goal : goals) {\n              cachedElements.add(LookupElementBuilder.create(goal).setIcon(MavenIcons.PHASE_ICON));\n            }\n\n            myCachedElements = cachedElements;\n          }\n\n          result.addAllElements(cachedElements);\n        }\n      };\n\n      goalsComponent.setComponent(goalsCompletionProvider.createEditor(project));\n    }\n\n    setAnchor(profilesComponent.getLabel());\n  }","id":69332,"modified_method":"public MavenRunnerParametersConfigurable(@NotNull Project project) {\n    workingDirComponent.getComponent().addBrowseFolderListener(\n      RunnerBundle.message(\"maven.select.maven.project.file\"), \"\", null,\n      new FileChooserDescriptor(false, true, false, false, false, false) {\n        @Override\n        public boolean isFileSelectable(VirtualFile file) {\n          if (!super.isFileSelectable(file)) return false;\n          return file.findChild(MavenConstants.POM_XML) != null;\n        }\n      });\n\n    if (!project.isDefault()) {\n      MyCompletionProvider profilesCompletionProvider = new MyCompletionProvider(project) {\n        @NotNull\n        @Override\n        protected String getPrefix(@NotNull String currentTextPrefix) {\n          String prefix = super.getPrefix(currentTextPrefix);\n          if (prefix.startsWith(\"-\") || prefix.startsWith(\"!\")) {\n            prefix = prefix.substring(1);\n          }\n          return prefix;\n        }\n\n        @Override\n        protected void addVariants(@NotNull CompletionResultSet result, MavenProjectsManager manager) {\n          for (String profile : manager.getAvailableProfiles()) {\n            result.addElement(LookupElementBuilder.create(profile));\n          }\n        }\n      };\n\n      profilesComponent.setComponent(profilesCompletionProvider.createEditor(project));\n\n      MyCompletionProvider goalsCompletionProvider = new MyCompletionProvider(project) {\n\n        private volatile List<LookupElement> myCachedElements;\n\n        @Override\n        protected void addVariants(@NotNull CompletionResultSet result, MavenProjectsManager manager) {\n          List<LookupElement> cachedElements = myCachedElements;\n          if (cachedElements == null) {\n            Set<String> goals = new HashSet<String>();\n            goals.addAll(MavenConstants.PHASES);\n\n            for (MavenProject mavenProject : manager.getProjects()) {\n              for (MavenPlugin plugin : mavenProject.getPlugins()) {\n                MavenPluginInfo pluginInfo = MavenArtifactUtil.readPluginInfo(manager.getLocalRepository(), plugin.getMavenId());\n                if (pluginInfo != null) {\n                  for (MavenPluginInfo.Mojo mojo : pluginInfo.getMojos()) {\n                    goals.add(mojo.getDisplayName());\n                  }\n                }\n              }\n            }\n\n            cachedElements = new ArrayList<LookupElement>(goals.size());\n            for (String goal : goals) {\n              cachedElements.add(LookupElementBuilder.create(goal).setIcon(MavenIcons.PHASE_ICON));\n            }\n\n            myCachedElements = cachedElements;\n          }\n\n          result.addAllElements(cachedElements);\n        }\n      };\n\n      goalsComponent.setComponent(goalsCompletionProvider.createEditor(project));\n    }\n\n    setAnchor(profilesComponent.getLabel());\n  }","commit_id":"f74fa601396ca19600872e4255e072a14205e673","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ModelMBean assemble(MBeanServer mBeanServer, Object obj, ObjectName name) throws JMException {\n        // try the default first, and if it could assemble the object, then use that as is\n        ModelMBean mbean = super.assemble(mBeanServer, obj, name);\n        if (mbean != null) {\n            return mbean;\n        }\n\n        ModelMBeanInfo mbi = null;\n\n        // prefer to use the managed instance if it has been annotated with Spring JMX annotations\n        if (obj instanceof ManagedInstance) {\n            Object custom = ((ManagedInstance) obj).getInstance();\n            if (custom != null && ObjectHelper.hasAnnotation(custom.getClass().getAnnotations(), ManagedResource.class)) {\n                log.trace(\"Assembling MBeanInfo for: {} from custom @ManagedResource object: {}\", name, custom);\n                // get the mbean info from the custom managed object\n                mbi = assembler.getMBeanInfo(custom, name.toString());\n                // and let the custom object be registered in JMX\n                obj = custom;\n            }\n        }\n\n        if (mbi == null) {\n            // use the default provided mbean which has been annotated with Spring JMX annotations\n            log.trace(\"Assembling MBeanInfo for: {} from @ManagedResource object: {}\", name, obj);\n            mbi = assembler.getMBeanInfo(obj, name.toString());\n        }\n\n        mbean = (RequiredModelMBean) mBeanServer.instantiate(RequiredModelMBean.class.getName());\n        mbean.setModelMBeanInfo(mbi);\n\n        try {\n            mbean.setManagedResource(obj, \"ObjectReference\");\n        } catch (InvalidTargetObjectTypeException e) {\n            throw new JMException(e.getMessage());\n        }\n\n        return mbean;\n    }","id":69333,"modified_method":"public ModelMBean assemble(MBeanServer mBeanServer, Object obj, ObjectName name) throws JMException {\n        ModelMBeanInfo mbi = null;\n\n        // prefer to use the managed instance if it has been annotated with Spring JMX annotations\n        if (obj instanceof ManagedInstance) {\n            Object custom = ((ManagedInstance) obj).getInstance();\n            if (custom != null && ObjectHelper.hasAnnotation(custom.getClass().getAnnotations(), ManagedResource.class)) {\n                log.trace(\"Assembling MBeanInfo for: {} from custom @ManagedResource object: {}\", name, custom);\n                // get the mbean info from the custom managed object\n                mbi = assembler.getMBeanInfo(custom, name.toString());\n                // and let the custom object be registered in JMX\n                obj = custom;\n            }\n        }\n\n        if (mbi == null) {\n            if (ObjectHelper.hasAnnotation(obj.getClass().getAnnotations(), ManagedResource.class)) {\n                // the object has a Spring ManagedResource annotations so assemble the MBeanInfo\n                log.trace(\"Assembling MBeanInfo for: {} from @ManagedResource object: {}\", name, obj);\n                mbi = assembler.getMBeanInfo(obj, name.toString());\n            } else {\n                // fallback and let the default mbean assembler handle this instead\n                return super.assemble(mBeanServer, obj, name);\n            }\n        }\n\n        log.trace(\"Assembled MBeanInfo {}\", mbi);\n\n        ModelMBean mbean = (RequiredModelMBean) mBeanServer.instantiate(RequiredModelMBean.class.getName());\n        mbean.setModelMBeanInfo(mbi);\n\n        try {\n            mbean.setManagedResource(obj, \"ObjectReference\");\n        } catch (InvalidTargetObjectTypeException e) {\n            throw new JMException(e.getMessage());\n        }\n\n        return mbean;\n    }","commit_id":"01e87635e5694ab03b536b69b2d13daf4c2c9a08","url":"https://github.com/apache/camel"},{"original_method":"@Activate\n    protected void activate(BundleContext context, Map<String, ?> config) throws Exception {\n\n        Map<String, String> authenticationProperties = PropertiesUtil.toMap(config.get(ReplicationAgentConfiguration.AUTHENTICATION_PROPERTIES),\n                new String[0]);\n\n        TransportAuthenticationProvider<Executor, Executor> transportAuthenticationProvider = (TransportAuthenticationProvider<Executor, Executor>)\n                transportAuthenticationProviderFactory.createAuthenticationProvider(authenticationProperties);\n        String[] endpoints = PropertiesUtil.toStringArray(config.get(ReplicationAgentConfiguration.ENDPOINT), new String[0]);\n        String endpointStrategyName = PropertiesUtil.toString(config.get(ReplicationAgentConfiguration.ENDPOINT_STRATEGY),\n                TransportEndpointStrategyType.One.name());\n        TransportEndpointStrategyType transportEndpointStrategyType = TransportEndpointStrategyType.valueOf(endpointStrategyName);\n\n\n        boolean useCustomHeaders = PropertiesUtil.toBoolean(config.get(USE_CUSTOM_HEADERS), false);\n        String[] customHeaders = PropertiesUtil.toStringArray(config.get(CUSTOM_HEADERS), new String[0]);\n        boolean useCustomBody = PropertiesUtil.toBoolean(config.get(USE_CUSTOM_BODY), false);\n        String customBody = PropertiesUtil.toString(config.get(CUSTOM_BODY), \"\");\n\n\n        List<ReplicationTransportHandler> transportHandlers = new ArrayList<ReplicationTransportHandler>();\n\n        for (String endpoint : endpoints) {\n            if (endpoint != null && endpoint.length() > 0) {\n                transportHandlers.add(new AdvancedHttpReplicationTransportHandler(useCustomHeaders, customHeaders,\n                        useCustomBody, customBody,\n                        transportAuthenticationProvider,\n                        new ReplicationEndpoint(endpoint), null, -1));\n            }\n        }\n        transportHandler = new MultipleEndpointReplicationTransportHandler(transportHandlers,\n                transportEndpointStrategyType);\n\n    }","id":69334,"modified_method":"@Activate\n    protected void activate(BundleContext context, Map<String, ?> config) throws Exception {\n\n        Map<String, String> authenticationProperties = PropertiesUtil.toMap(config.get(ReplicationTransportConstants.AUTHENTICATION_PROPERTIES), new String[0]);\n\n        TransportAuthenticationProvider<Executor, Executor> transportAuthenticationProvider = (TransportAuthenticationProvider<Executor, Executor>)\n                transportAuthenticationProviderFactory.createAuthenticationProvider(authenticationProperties);\n        String[] endpoints = PropertiesUtil.toStringArray(config.get(ReplicationTransportConstants.ENDPOINTS), new String[0]);\n        String endpointStrategyName = PropertiesUtil.toString(config.get(ReplicationTransportConstants.ENDPOINT_STRATEGY),\n                TransportEndpointStrategyType.One.name());\n        TransportEndpointStrategyType transportEndpointStrategyType = TransportEndpointStrategyType.valueOf(endpointStrategyName);\n\n\n        boolean useCustomHeaders = PropertiesUtil.toBoolean(config.get(USE_CUSTOM_HEADERS), false);\n        String[] customHeaders = PropertiesUtil.toStringArray(config.get(CUSTOM_HEADERS), new String[0]);\n        boolean useCustomBody = PropertiesUtil.toBoolean(config.get(USE_CUSTOM_BODY), false);\n        String customBody = PropertiesUtil.toString(config.get(CUSTOM_BODY), \"\");\n\n\n        List<ReplicationTransportHandler> transportHandlers = new ArrayList<ReplicationTransportHandler>();\n\n        for (String endpoint : endpoints) {\n            if (endpoint != null && endpoint.length() > 0) {\n                transportHandlers.add(new AdvancedHttpReplicationTransportHandler(useCustomHeaders, customHeaders,\n                        useCustomBody, customBody,\n                        transportAuthenticationProvider,\n                        new ReplicationEndpoint(endpoint), null, -1));\n            }\n        }\n        transportHandler = new MultipleEndpointReplicationTransportHandler(transportHandlers,\n                transportEndpointStrategyType);\n\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"public List<ReplicationPackage> exportPackage(ReplicationRequest replicationRequest) {\n\n        List<ReplicationPackage> result = new ArrayList<ReplicationPackage>();\n        try {\n            if (log.isInfoEnabled()) {\n                log.info(\"getting item from queue {}\", queueName);\n            }\n\n            // get first item\n            ReplicationPackage headPackage = agent.removeHead(queueName);\n            result.add(headPackage);\n        } catch (Exception ex) {\n            log.error(\"Error exporting package\", ex);\n        }\n\n        return result;\n    }","id":69335,"modified_method":"public List<ReplicationPackage> exportPackage(ReplicationRequest replicationRequest) {\n\n        List<ReplicationPackage> result = new ArrayList<ReplicationPackage>();\n        try {\n            if (log.isInfoEnabled()) {\n                log.info(\"getting item from queue {}\", queueName);\n            }\n\n            ReplicationQueue queue = agent.getQueue(queueName);\n            ReplicationQueueItem info = queue.getHead();\n            ReplicationPackage replicationPackage = null;\n            if (info != null) {\n                queue.removeHead();\n                replicationPackage = replicationPackageBuilder.getPackage(info.getId());\n            }\n\n            result.add(replicationPackage);\n        } catch (Exception ex) {\n            if (log.isErrorEnabled()) {\n                log.error(\"Error exporting package\", ex);\n            }\n        }\n\n        return result;\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"public void apply(String ruleString, ReplicationAgent agent) {\n        if (signatureMatches(ruleString)) {\n            // register an event handler on replication package install (on a certain path) which triggers the chain replication of that same package\n            Dictionary<String, Object> properties = new Hashtable<String, Object>();\n            properties.put(EventConstants.EVENT_TOPIC, ReplicationEvent.getTopic(ReplicationEventType.PACKAGE_INSTALLED));\n            String path = ruleString.substring(ruleString.indexOf(':') + 1).trim();\n            if (log.isInfoEnabled()) {\n                log.info(\"agent {} will chain replication on path '{}'\", agent.getName(), path);\n            }\n//            properties.put(EventConstants.EVENT_FILTER, \"(path=\" + path + \"/*)\");\n            if (bundleContext != null) {\n                ServiceRegistration triggerPathEventRegistration = bundleContext.registerService(EventHandler.class.getName(), new TriggerAgentEventListener(agent, path), properties);\n                registrations.put(agent.getName() + ruleString, triggerPathEventRegistration);\n            } else {\n                if (log.isErrorEnabled()) {\n                    log.error(\"cannot register trigger since bundle context is null\");\n                }\n            }\n        } else {\n            if (log.isWarnEnabled()) {\n                log.warn(\"rule {} doesn't match signature: {}\", ruleString, SIGNATURE);\n            }\n        }\n\n    }","id":69336,"modified_method":"public void apply(String ruleString, ReplicationAgent agent) {\n        if (signatureMatches(ruleString)) {\n            // register an event handler on replication package install (on a certain path) which triggers the chain replication of that same package\n            Dictionary<String, Object> properties = new Hashtable<String, Object>();\n            properties.put(EventConstants.EVENT_TOPIC, ReplicationEvent.getTopic(ReplicationEventType.PACKAGE_INSTALLED));\n            String path = ruleString.substring(ruleString.indexOf(':') + 1).trim();\n            log.info(\"agent {} will chain replication on path '{}'\", agent.getName(), path);\n\n//            properties.put(EventConstants.EVENT_FILTER, \"(path=\" + path + \"/*)\");\n            if (bundleContext != null) {\n                ServiceRegistration triggerPathEventRegistration = bundleContext.registerService(EventHandler.class.getName(), new TriggerAgentEventListener(agent, path), properties);\n                registrations.put(agent.getName() + ruleString, triggerPathEventRegistration);\n            } else {\n                log.error(\"cannot register trigger since bundle context is null\");\n\n            }\n        } else {\n            log.warn(\"rule {} doesn't match signature: {}\", ruleString, SIGNATURE);\n\n        }\n\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"public void handleEvent(Event event) {\n            Object actionProperty = event.getProperty(\"replication.action\");\n            Object pathProperty = event.getProperty(\"replication.path\");\n            if (actionProperty != null && pathProperty != null) {\n                String[] paths = (String[]) pathProperty;\n                for (String p : paths) {\n                    if (p.startsWith(path)) {\n                        if (log.isInfoEnabled()) {\n                            log.info(\"triggering chain replication from event {}\", event);\n                        }\n                        ReplicationActionType action = ReplicationActionType.valueOf(String.valueOf(actionProperty));\n                        try {\n                            agent.send(new ReplicationRequest(System.currentTimeMillis(), action, paths));\n                        } catch (AgentReplicationException e) {\n                            if (log.isErrorEnabled()) {\n                                log.error(\"triggered replication resulted in an error {}\", e);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }","id":69337,"modified_method":"public void handleEvent(Event event) {\n            Object actionProperty = event.getProperty(\"replication.action\");\n            Object pathProperty = event.getProperty(\"replication.path\");\n            if (actionProperty != null && pathProperty != null) {\n                String[] paths = (String[]) pathProperty;\n                for (String p : paths) {\n                    if (p.startsWith(path)) {\n                        log.info(\"triggering chain replication from event {}\", event);\n\n                        ReplicationActionType action = ReplicationActionType.valueOf(String.valueOf(actionProperty));\n                        try {\n                            agent.execute(new ReplicationRequest(System.currentTimeMillis(), action, paths));\n                        } catch (AgentReplicationException e) {\n                            log.error(\"triggered replication resulted in an error {}\", e);\n\n                        }\n                        break;\n                    }\n                }\n            }\n        }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"public void undo(String ruleString, ReplicationAgent agent) {\n        if (signatureMatches(ruleString)) {\n            ServiceRegistration serviceRegistration = registrations.get(agent.getName() + ruleString);\n            if (serviceRegistration != null) {\n                serviceRegistration.unregister();\n            }\n        } else {\n            if (log.isWarnEnabled()) {\n                log.warn(\"rule {} doesn't match signature: {}\", ruleString, SIGNATURE);\n            }\n        }\n    }","id":69338,"modified_method":"public void undo(String ruleString, ReplicationAgent agent) {\n        if (signatureMatches(ruleString)) {\n            ServiceRegistration serviceRegistration = registrations.get(agent.getName() + ruleString);\n            if (serviceRegistration != null) {\n                serviceRegistration.unregister();\n            }\n        } else {\n            log.warn(\"rule {} doesn't match signature: {}\", ruleString, SIGNATURE);\n\n        }\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"public FileVaultReplicationPackage(VaultPackage pkg) {\n        this.pkg = pkg;\n        List<PathFilterSet> filterSets = pkg.getMetaInf().getFilter().getFilterSets();\n        String[] paths = new String[filterSets.size()];\n        for (int i = 0; i < paths.length; i++) {\n            paths[i] = filterSets.get(i).getRoot();\n        }\n        this.paths = paths;\n        this.id = pkg.getFile().getAbsolutePath();\n        this.action = ReplicationActionType.ADD.toString();\n    }","id":69339,"modified_method":"public FileVaultReplicationPackage(VaultPackage pkg) {\n        this.pkg = pkg;\n        MetaInf metaInf = pkg.getMetaInf();\n        String[] paths = new String[0];\n        if (metaInf != null) {\n            WorkspaceFilter filter = metaInf.getFilter();\n            if (filter != null) {\n                List<PathFilterSet> filterSets = filter.getFilterSets();\n                paths = new String[filterSets.size()];\n                for (int i = 0; i < paths.length; i++) {\n                    paths[i] = filterSets.get(i).getRoot();\n                }\n            }\n        }\n        this.paths = paths;\n        this.id = pkg.getFile().getAbsolutePath();\n        this.action = ReplicationActionType.ADD.toString();\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"@Override\n    public boolean installPackageInternal(ReplicationPackage replicationPackage) throws ReplicationPackageReadingException {\n        log.debug(\"reading a replication package stream\");\n\n\n        Session session = null;\n        try {\n            session = getSession();\n            File file = new File(replicationPackage.getId());\n            if (file.exists()) {\n                VaultPackage pkg = packaging.getPackageManager().open(file);\n                pkg.extract(session, new ImportOptions());\n                return true;\n            }\n        } catch (Exception e) {\n            log.error(\"could not read / install the package\", e);\n            throw new ReplicationPackageReadingException(e);\n        } finally {\n            if (session != null) {\n                session.logout();\n            }\n        }\n        return false;\n    }","id":69340,"modified_method":"@Override\n    public boolean installPackageInternal(ReplicationPackage replicationPackage) throws ReplicationPackageReadingException {\n        if (log.isDebugEnabled()) {\n            log.debug(\"reading a replication package stream\");\n        }\n\n        Session session = null;\n        try {\n            session = getSession();\n            if (session != null) {\n                final JcrPackage jcrPackage = packaging.getPackageManager(getSession())\n                        .open(PackageId.fromString(replicationPackage.getId()));\n                jcrPackage.install(new ImportOptions());\n            }\n//            File file = new File(replicationPackage.getId());\n//            if (file.exists()) {\n//                VaultPackage pkg = packaging.getPackageManager().open(file);\n//                pkg.extract(session, new ImportOptions());\n//                return true;\n//            }\n        } catch (Exception e) {\n            if (log.isErrorEnabled()) {\n                log.error(\"could not read / install the package\", e);\n            }\n            throw new ReplicationPackageReadingException(e);\n        } finally {\n            if (session != null) {\n                session.logout();\n            }\n        }\n        return false;\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"@Override\n    protected ReplicationPackage readPackageInternal(final InputStream stream)\n            throws ReplicationPackageReadingException {\n        if (log.isDebugEnabled()) {\n            log.debug(\"reading a stream\");\n        }\n        Session session = null;\n        ReplicationPackage pkg = null;\n        try {\n            File tmpFile = File.createTempFile(\"rp-vlt-read-\" + System.nanoTime(), \".zip\");\n            FileOutputStream fileStream = new FileOutputStream(tmpFile);\n            IOUtils.copy(stream, fileStream);\n            IOUtils.closeQuietly(fileStream);\n\n            VaultPackage vaultPackage = packaging.getPackageManager().open(tmpFile);\n\n            pkg = new FileVaultReplicationPackage(vaultPackage);\n\n        } catch (Exception e) {\n            log.error(\"could not read / install the package\", e);\n            throw new ReplicationPackageReadingException(e);\n        } finally {\n            if (session != null) {\n                session.logout();\n            }\n        }\n        return pkg;\n    }","id":69341,"modified_method":"@Override\n    protected ReplicationPackage readPackageInternal(final InputStream stream)\n            throws ReplicationPackageReadingException {\n        if (log.isDebugEnabled()) {\n            log.debug(\"reading a stream\");\n        }\n        ReplicationPackage pkg = null;\n        try {\n            File tmpFile = File.createTempFile(\"rp-vlt-read-\" + System.nanoTime(), \".zip\");\n            FileOutputStream fileStream = new FileOutputStream(tmpFile);\n            IOUtils.copy(stream, fileStream);\n            IOUtils.closeQuietly(fileStream);\n\n            VaultPackage vaultPackage = packaging.getPackageManager().open(tmpFile);\n\n            if (vaultPackage != null) {\n                pkg = new FileVaultReplicationPackage(vaultPackage);\n            } else {\n                if (log.isWarnEnabled()) {\n                    log.warn(\"stream could not be read as a vlt package\");\n                }\n            }\n\n        } catch (Exception e) {\n            if (log.isErrorEnabled()) {\n                log.error(\"could not read / install the package\", e);\n            }\n            throw new ReplicationPackageReadingException(e);\n        }\n        return pkg;\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"protected ReplicationPackage createPackageForAdd(ReplicationRequest request)\n            throws ReplicationPackageBuildingException {\n        Session session = null;\n        try {\n            session = getSession();\n\n            final String[] paths = request.getPaths();\n\n            DefaultWorkspaceFilter filter = new DefaultWorkspaceFilter();\n            DefaultMetaInf inf = new DefaultMetaInf();\n            ExportOptions opts = new ExportOptions();\n            for (String path : paths) {\n                filter.add(new PathFilterSet(path));\n            }\n            inf.setFilter(filter);\n\n            Properties props = new Properties();\n            String packageGroup = \"sling/replication\";\n            props.setProperty(VaultPackage.NAME_GROUP, packageGroup);\n            String packageName = String.valueOf(request.getTime());\n            props.setProperty(VaultPackage.NAME_NAME, packageName);\n            if (log.isDebugEnabled()) {\n                log.debug(\"assembling package {}\", packageGroup + '/' + packageName);\n            }\n            inf.setProperties(props);\n\n            opts.setMetaInf(inf);\n            opts.setRootPath(\"/\");\n            File tmpFile = File.createTempFile(\"rp-vlt-create-\" + System.nanoTime(), \".zip\");\n            VaultPackage vaultPackage = packaging.getPackageManager().assemble(session, opts, tmpFile);\n\n            return new FileVaultReplicationPackage(vaultPackage);\n        } catch (Exception e) {\n            throw new ReplicationPackageBuildingException(e);\n        } finally {\n            if (session != null) {\n                session.logout();\n            }\n        }\n    }","id":69342,"modified_method":"protected ReplicationPackage createPackageForAdd(ReplicationRequest request)\n            throws ReplicationPackageBuildingException {\n        Session session = null;\n        try {\n            session = getSession();\n\n            final String[] paths = request.getPaths();\n\n            DefaultWorkspaceFilter filter = new DefaultWorkspaceFilter();\n            DefaultMetaInf inf = new DefaultMetaInf();\n            ExportOptions opts = new ExportOptions();\n            for (String path : paths) {\n                filter.add(new PathFilterSet(path));\n            }\n            inf.setFilter(filter);\n\n            Properties props = new Properties();\n            String packageGroup = \"sling/replication\";\n            props.setProperty(VaultPackage.NAME_GROUP, packageGroup);\n            String packageName = String.valueOf(request.getTime());\n            props.setProperty(VaultPackage.NAME_NAME, packageName);\n            if (log.isDebugEnabled()) {\n                log.debug(\"assembling package {}\", packageGroup + '/' + packageName);\n            }\n            inf.setProperties(props);\n\n            opts.setMetaInf(inf);\n            opts.setRootPath(\"/\");\n            File tmpFile = File.createTempFile(\"rp-vlt-create-\" + System.nanoTime(), \".zip\");\n            packaging.getPackageManager().assemble(session, opts, tmpFile);\n            JcrPackage jcrPackage = packaging.getPackageManager(session).upload(tmpFile, false, true, null);\n            return new FileVaultReplicationPackage(jcrPackage.getPackage());\n        } catch (Exception e) {\n            throw new ReplicationPackageBuildingException(e);\n        } finally {\n            if (session != null) {\n                session.logout();\n            }\n        }\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"@Override\n    protected ReplicationPackage getPackageInternal(String id) {\n        ReplicationPackage replicationPackage = null;\n        try {\n            File file = new File(id);\n            if (file.exists()) {\n                VaultPackage pkg = packaging.getPackageManager().open(file);\n                replicationPackage = new FileVaultReplicationPackage(pkg);\n            }\n        } catch (Exception e) {\n            log.warn(\"could not find a package with id : {}\", id);\n        }\n        return replicationPackage;\n    }","id":69343,"modified_method":"@Override\n    protected ReplicationPackage getPackageInternal(String id) {\n        ReplicationPackage replicationPackage = null;\n        try {\n            File file = new File(id);\n            if (file.exists()) {\n                VaultPackage pkg = packaging.getPackageManager().open(file);\n                replicationPackage = new FileVaultReplicationPackage(pkg);\n            } else {\n                VaultPackage pkg = packaging.getPackageManager(getSession()).open(PackageId.fromString(id)).getPackage();\n                replicationPackage = new FileVaultReplicationPackage(pkg);\n            }\n        } catch (Exception e) {\n            if (log.isWarnEnabled()) {\n                log.warn(\"could not find a package with id : {}\", id);\n            }\n        }\n        return replicationPackage;\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"@Activate\n    protected void activate(BundleContext context, Map<String, ?> config) throws Exception {\n\n        Map<String, String> authenticationProperties = PropertiesUtil.toMap(config.get(ReplicationAgentConfiguration.AUTHENTICATION_PROPERTIES), new String[0]);\n\n        TransportAuthenticationProvider<Executor, Executor> transportAuthenticationProvider = (TransportAuthenticationProvider<Executor, Executor>) transportAuthenticationProviderFactory.createAuthenticationProvider(authenticationProperties);\n\n        String[] endpoints = PropertiesUtil.toStringArray(config.get(ReplicationAgentConfiguration.ENDPOINT), new String[0]);\n\n        pollItems = PropertiesUtil.toInteger(config.get(POLL_ITEMS), 1);\n\n        String endpointStrategyName = PropertiesUtil.toString(config.get(ReplicationAgentConfiguration.ENDPOINT_STRATEGY), \"One\");\n        TransportEndpointStrategyType transportEndpointStrategyType = TransportEndpointStrategyType.valueOf(endpointStrategyName);\n\n        List<ReplicationTransportHandler> transportHandlers = new ArrayList<ReplicationTransportHandler>();\n\n        for (String endpoint : endpoints) {\n            if (endpoint != null && endpoint.length() > 0) {\n                transportHandlers.add(new SimpleHttpReplicationTransportHandler(transportAuthenticationProvider,\n                        new ReplicationEndpoint(endpoint), packageBuilder, pollItems));\n            }\n        }\n        transportHandler = new MultipleEndpointReplicationTransportHandler(transportHandlers,\n                transportEndpointStrategyType);\n    }","id":69344,"modified_method":"@Activate\n    protected void activate(BundleContext context, Map<String, ?> config) throws Exception {\n\n        Map<String, String> authenticationProperties = PropertiesUtil.toMap(config.get(ReplicationTransportConstants.AUTHENTICATION_PROPERTIES), new String[0]);\n\n        TransportAuthenticationProvider<Executor, Executor> transportAuthenticationProvider = (TransportAuthenticationProvider<Executor, Executor>) transportAuthenticationProviderFactory.createAuthenticationProvider(authenticationProperties);\n\n        String[] endpoints = PropertiesUtil.toStringArray(config.get(ReplicationTransportConstants.ENDPOINTS), new String[0]);\n\n        pollItems = PropertiesUtil.toInteger(config.get(POLL_ITEMS), 1);\n\n        String endpointStrategyName = PropertiesUtil.toString(config.get(ReplicationTransportConstants.ENDPOINT_STRATEGY), \"One\");\n        TransportEndpointStrategyType transportEndpointStrategyType = TransportEndpointStrategyType.valueOf(endpointStrategyName);\n\n        List<ReplicationTransportHandler> transportHandlers = new ArrayList<ReplicationTransportHandler>();\n\n        for (String endpoint : endpoints) {\n            if (endpoint != null && endpoint.length() > 0) {\n                transportHandlers.add(new SimpleHttpReplicationTransportHandler(transportAuthenticationProvider,\n                        new ReplicationEndpoint(endpoint), packageBuilder, pollItems));\n            }\n        }\n        transportHandler = new MultipleEndpointReplicationTransportHandler(transportHandlers,\n                transportEndpointStrategyType);\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"@Activate\n    protected void activate(BundleContext context, Map<String, ?> config) throws Exception {\n\n        Map<String, String> authenticationProperties = PropertiesUtil.toMap(config.get(ReplicationAgentConfiguration.AUTHENTICATION_PROPERTIES), new String[0]);\n\n        TransportAuthenticationProvider<Executor, Executor> transportAuthenticationProvider = (TransportAuthenticationProvider<Executor, Executor>)\n                transportAuthenticationProviderFactory.createAuthenticationProvider(authenticationProperties);\n\n        String[] endpoints = PropertiesUtil.toStringArray(config.get(ReplicationAgentConfiguration.ENDPOINT), new String[0]);\n\n        String endpointStrategyName = PropertiesUtil.toString(config.get(ENDPOINT_STRATEGY),\n                TransportEndpointStrategyType.One.name());\n        TransportEndpointStrategyType transportEndpointStrategyType = TransportEndpointStrategyType.valueOf(endpointStrategyName);\n\n        List<ReplicationTransportHandler> transportHandlers = new ArrayList<ReplicationTransportHandler>();\n\n        for (String endpoint : endpoints) {\n            if (endpoint != null && endpoint.length() > 0) {\n                transportHandlers.add(new SimpleHttpReplicationTransportHandler(transportAuthenticationProvider,\n                        new ReplicationEndpoint(endpoint), null, -1));\n            }\n        }\n        transportHandler = new MultipleEndpointReplicationTransportHandler(transportHandlers,\n                transportEndpointStrategyType);\n\n    }","id":69345,"modified_method":"@Activate\n    protected void activate(BundleContext context, Map<String, ?> config) throws Exception {\n\n        Map<String, String> authenticationProperties = PropertiesUtil.toMap(config.get(ReplicationTransportConstants.AUTHENTICATION_PROPERTIES), new String[0]);\n\n        TransportAuthenticationProvider<Executor, Executor> transportAuthenticationProvider = (TransportAuthenticationProvider<Executor, Executor>)\n                transportAuthenticationProviderFactory.createAuthenticationProvider(authenticationProperties);\n\n        String[] endpoints = PropertiesUtil.toStringArray(config.get(ReplicationTransportConstants.ENDPOINTS), new String[0]);\n\n        String endpointStrategyName = PropertiesUtil.toString(config.get(ENDPOINT_STRATEGY),\n                TransportEndpointStrategyType.One.name());\n        TransportEndpointStrategyType transportEndpointStrategyType = TransportEndpointStrategyType.valueOf(endpointStrategyName);\n\n        List<ReplicationTransportHandler> transportHandlers = new ArrayList<ReplicationTransportHandler>();\n\n        for (String endpoint : endpoints) {\n            if (endpoint != null && endpoint.length() > 0) {\n                transportHandlers.add(new SimpleHttpReplicationTransportHandler(transportAuthenticationProvider,\n                        new ReplicationEndpoint(endpoint), null, -1));\n            }\n        }\n        transportHandler = new MultipleEndpointReplicationTransportHandler(transportHandlers,\n                transportEndpointStrategyType);\n\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"private void asyncReplicate(ReplicationAgent agent, ReplicationActionType action, String path) throws AgentReplicationException {\n        agent.send(new ReplicationRequest(System.currentTimeMillis(), action, path));\n    }","id":69346,"modified_method":"private void asyncReplicate(ReplicationAgent agent, ReplicationActionType action, String path) throws AgentReplicationException {\n        agent.execute(new ReplicationRequest(System.currentTimeMillis(), action, path));\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"public void apply(String ruleString, ReplicationAgent agent) {\n        Matcher matcher = signaturePattern.matcher(ruleString);\n        if (matcher.find()) {\n            String action = matcher.group(2);\n            ReplicationActionType actionType = ReplicationActionType.fromName(action.toUpperCase());\n            String path = matcher.group(5); // can be null\n            try {\n                log.info(\"applying queue event replication rule\");\n                // get configuration\n                ReplicationAgentConfiguration configuration = replicationAgentConfigurationManager.getConfiguration(agent.getName());\n\n                // get URI of the event queue\n                String targetTransport = configuration.getTargetTransportHandler();\n\n                log.info(\"found target transport {}\", targetTransport);\n\n                ScheduleOptions options = scheduler.NOW();\n                options.name(agent.getName() + \" \" + ruleString);\n                scheduler.schedule(new EventBasedReplication(agent, actionType, path, targetTransport), options);\n\n            } catch (Exception e) {\n                log.error(\"{}\", e);\n                log.error(\"cannot apply rule {} to agent {}\", ruleString, agent);\n            }\n\n        }\n    }","id":69347,"modified_method":"public void apply(String ruleString, ReplicationAgent agent) {\n        Matcher matcher = signaturePattern.matcher(ruleString);\n        if (matcher.find()) {\n            String action = matcher.group(2);\n            ReplicationActionType actionType = ReplicationActionType.fromName(action.toUpperCase());\n            String path = matcher.group(5); // can be null\n            try {\n                log.info(\"applying queue event replication rule\");\n\n                ScheduleOptions options = scheduler.NOW();\n                options.name(agent.getName() + \" \" + ruleString);\n                scheduler.schedule(new EventBasedReplication(agent, actionType, path, null), options);\n\n            } catch (Exception e) {\n                log.error(\"{}\", e);\n                log.error(\"cannot apply rule {} to agent {}\", ruleString, agent);\n            }\n\n        }\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"@Override\n    protected void doPost(SlingHttpServletRequest request, SlingHttpServletResponse response)\n                    throws ServletException, IOException {\n\n        ReplicationAgent[] agents = request.getResource().adaptTo(ReplicationAgent[].class);\n\n        String a = request.getParameter(ACTION_PARAMETER);\n        String[] paths = request.getParameterValues(PATH_PARAMETER);\n\n        ReplicationActionType action = ReplicationActionType.fromName(a);\n\n\n        ReplicationRequest replicationRequest = new ReplicationRequest(System.currentTimeMillis(),\n                        action, paths);\n\n        boolean failed = false;\n        for (ReplicationAgent agent : agents) {\n            try {\n                agent.send(replicationRequest);\n            } catch (AgentReplicationException e) {\n                log.warn(\"agent {} failed\", agent.getName(), e);\n\n                response.getWriter().append(\"error :'\").append(e.toString()).append(\"'\");\n                if (!failed) {\n                    failed = true;\n                }\n            }\n        }\n        if (failed) {\n            response.setStatus(503);\n            response.getWriter().append(\"status : \").append(\"503\");\n        }\n        else {\n            response.setStatus(200);\n        }\n    }","id":69348,"modified_method":"@Override\n    protected void doPost(SlingHttpServletRequest request, SlingHttpServletResponse response)\n                    throws ServletException, IOException {\n\n        ReplicationAgent[] agents = request.getResource().adaptTo(ReplicationAgent[].class);\n\n        String a = request.getParameter(ACTION_PARAMETER);\n        String[] paths = request.getParameterValues(PATH_PARAMETER);\n\n        ReplicationActionType action = ReplicationActionType.fromName(a);\n\n\n        ReplicationRequest replicationRequest = new ReplicationRequest(System.currentTimeMillis(),\n                        action, paths);\n\n        boolean failed = false;\n        for (ReplicationAgent agent : agents) {\n            try {\n                agent.execute(replicationRequest);\n            } catch (AgentReplicationException e) {\n                log.warn(\"agent {} failed\", agent.getName(), e);\n\n                response.getWriter().append(\"error :'\").append(e.toString()).append(\"'\");\n                if (!failed) {\n                    failed = true;\n                }\n            }\n        }\n        if (failed) {\n            response.setStatus(503);\n            response.getWriter().append(\"status : \").append(\"503\");\n        }\n        else {\n            response.setStatus(200);\n        }\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"public void run() {\n            try {\n                if (log.isDebugEnabled()) {\n                    log.debug(\"agent {}: scheduling {} replication of {}\", new Object[]{agent, action, path});\n                }\n                agent.send(new ReplicationRequest(System.currentTimeMillis(), action, path));\n            } catch (AgentReplicationException e) {\n                if (log.isErrorEnabled()) {\n                    log.error(\"failed scheduled replication {} on agent {} for path {}\", new Object[]{\n                            action.name(), agent.getName(), path}, e);\n                }\n            }\n        }","id":69349,"modified_method":"public void run() {\n            try {\n                log.debug(\"agent {}: scheduling {} replication of {}\", new Object[]{agent, action, path});\n\n                agent.execute(new ReplicationRequest(System.currentTimeMillis(), action, path));\n            } catch (AgentReplicationException e) {\n                log.error(\"failed scheduled replication {} on agent {} for path {}\", new Object[]{\n                        action.name(), agent.getName(), path}, e);\n            }\n        }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"public ReplicationResponse execute(ReplicationRequest replicationRequest)\n            throws AgentReplicationException {\n\n        // create packages from request\n        List<ReplicationPackage> replicationPackages;\n        try {\n            replicationPackages = buildPackages(replicationRequest);\n            return schedule(replicationPackages, false);\n\n        } catch (ReplicationPackageBuildingException e) {\n            log.error(\"Error building packages\", e);\n            throw new AgentReplicationException(e);\n        }\n\n    }","id":69350,"modified_method":"public ReplicationResponse execute(ReplicationRequest replicationRequest)\n            throws AgentReplicationException {\n\n        // create packages from request\n        List<ReplicationPackage> replicationPackages;\n        try {\n            replicationPackages = buildPackages(replicationRequest);\n            return schedule(replicationPackages);\n\n        } catch (ReplicationPackageBuildingException e) {\n            log.error(\"Error building packages\", e);\n            throw new AgentReplicationException(e);\n        }\n\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"private ReplicationResponse schedule(ReplicationPackage replicationPackage, boolean offer) throws AgentReplicationException {\n        ReplicationResponse replicationResponse = new ReplicationResponse();\n        log.info(\"scheduling replication of package {}\", replicationPackage);\n\n        ReplicationQueueItem replicationQueueItem = new ReplicationQueueItem(replicationPackage.getId(),\n                replicationPackage.getPaths(),\n                replicationPackage.getAction(),\n                replicationPackage.getType());\n\n        if (offer) {\n            try {\n                queueDistributionStrategy.offer(getName(), replicationQueueItem, queueProvider);\n                if (isPassive()) {\n                    generatePackageQueuedEvent(replicationQueueItem);\n                }\n            } catch (ReplicationQueueException e) {\n                replicationResponse.setSuccessful(false);\n                throw new AgentReplicationException(e);\n            }\n        } else {\n            // send the replication package to the queue distribution handler\n            try {\n                ReplicationQueueItemState state = queueDistributionStrategy.add(getName(), replicationQueueItem,\n                        queueProvider);\n                if (isPassive()) {\n                    generatePackageQueuedEvent(replicationQueueItem);\n                }\n                if (state != null) {\n                    replicationResponse.setStatus(state.getItemState().toString());\n                    replicationResponse.setSuccessful(state.isSuccessful());\n                } else {\n                    replicationResponse.setStatus(ReplicationQueueItemState.ItemState.ERROR.toString());\n                    replicationResponse.setSuccessful(false);\n                }\n            } catch (Exception e) {\n                if (log.isErrorEnabled()) {\n                    log.error(\"an error happened during queue processing\", e);\n                }\n                replicationResponse.setSuccessful(false);\n            }\n        }\n        return replicationResponse;\n    }","id":69351,"modified_method":"private ReplicationResponse schedule(ReplicationPackage replicationPackage) {\n        ReplicationResponse replicationResponse = new ReplicationResponse();\n        log.info(\"scheduling replication of package {}\", replicationPackage);\n\n        ReplicationQueueItem replicationQueueItem = new ReplicationQueueItem(replicationPackage.getId(),\n                replicationPackage.getPaths(),\n                replicationPackage.getAction(),\n                replicationPackage.getType());\n\n        // send the replication package to the queue distribution handler\n        try {\n            ReplicationQueueItemState state = queueDistributionStrategy.add(getName(), replicationQueueItem,\n                    queueProvider);\n            if (isPassive()) {\n                generatePackageQueuedEvent(replicationQueueItem);\n            }\n            if (state != null) {\n                replicationResponse.setStatus(state.getItemState().toString());\n                replicationResponse.setSuccessful(state.isSuccessful());\n            } else {\n                replicationResponse.setStatus(ReplicationQueueItemState.ItemState.ERROR.toString());\n                replicationResponse.setSuccessful(false);\n            }\n        } catch (Exception e) {\n            log.error(\"an error happened during queue processing\", e);\n\n            replicationResponse.setSuccessful(false);\n        }\n\n        return replicationResponse;\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"private ReplicationResponse schedule(List<ReplicationPackage> replicationPackages, boolean offer) throws AgentReplicationException {\n        ReplicationResponse replicationResponse = new ReplicationResponse();\n\n        for (ReplicationPackage replicationPackage : replicationPackages) {\n            ReplicationResponse currentReplicationResponse = schedule(replicationPackage, offer);\n\n            replicationResponse.setSuccessful(currentReplicationResponse.isSuccessful());\n            replicationResponse.setStatus(currentReplicationResponse.getStatus());\n        }\n\n        return replicationResponse;\n    }","id":69352,"modified_method":"private ReplicationResponse schedule(List<ReplicationPackage> replicationPackages) {\n        ReplicationResponse replicationResponse = new ReplicationResponse();\n\n        for (ReplicationPackage replicationPackage : replicationPackages) {\n            ReplicationResponse currentReplicationResponse = schedule(replicationPackage);\n\n            replicationResponse.setSuccessful(currentReplicationResponse.isSuccessful());\n            replicationResponse.setStatus(currentReplicationResponse.getStatus());\n        }\n\n        return replicationResponse;\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"@Test\n    public void testAsyncReplication() throws Exception {\n        String name = \"sample-agent\";\n        ReplicationPackageImporter packageImporter = mock(ReplicationPackageImporter.class);\n        ReplicationPackageExporter packageExporter = mock(ReplicationPackageExporter.class);        ReplicationQueueProvider queueProvider = mock(ReplicationQueueProvider.class);\n        ReplicationQueueDistributionStrategy distributionHandler = mock(ReplicationQueueDistributionStrategy.class);\n        ReplicationEventFactory replicationEventFactory = mock(ReplicationEventFactory.class);\n        SimpleReplicationAgent agent = new SimpleReplicationAgent(name, new String[0], true,\n                false, packageImporter, packageExporter, queueProvider, distributionHandler, replicationEventFactory, null);\n        ReplicationRequest request = new ReplicationRequest(System.nanoTime(),\n                ReplicationActionType.ADD, \"/\");\n        ReplicationPackage replicationPackage = mock(ReplicationPackage.class);\n        when(replicationPackage.getPaths()).thenReturn(new String[]{\"/\"});\n        when(packageExporter.exportPackage(request)).thenReturn(Arrays.asList(new ReplicationPackage[] { replicationPackage } ));\n        when(queueProvider.getDefaultQueue(agent.getName())).thenReturn(\n                new SimpleReplicationQueue(agent.getName(), \"name\"));\n        agent.send(request);\n    }","id":69353,"modified_method":"@Test\n    public void testAsyncReplication() throws Exception {\n        String name = \"sample-agent\";\n        ReplicationPackageImporter packageImporter = mock(ReplicationPackageImporter.class);\n        ReplicationPackageExporter packageExporter = mock(ReplicationPackageExporter.class);        ReplicationQueueProvider queueProvider = mock(ReplicationQueueProvider.class);\n        ReplicationQueueDistributionStrategy distributionHandler = mock(ReplicationQueueDistributionStrategy.class);\n        ReplicationEventFactory replicationEventFactory = mock(ReplicationEventFactory.class);\n        SimpleReplicationAgent agent = new SimpleReplicationAgent(name, new String[0], true,\n                false, packageImporter, packageExporter, queueProvider, distributionHandler, replicationEventFactory, null);\n        ReplicationRequest request = new ReplicationRequest(System.nanoTime(),\n                ReplicationActionType.ADD, \"/\");\n        ReplicationPackage replicationPackage = mock(ReplicationPackage.class);\n        when(replicationPackage.getPaths()).thenReturn(new String[]{\"/\"});\n        when(packageExporter.exportPackage(request)).thenReturn(Arrays.asList(new ReplicationPackage[] { replicationPackage } ));\n        when(queueProvider.getDefaultQueue(agent.getName())).thenReturn(\n                new SimpleReplicationQueue(agent.getName(), \"name\"));\n        agent.execute(request);\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"public void undo(String ruleString, ReplicationAgent agent) {\n        if (signatureMatches(ruleString)) {\n            ServiceRegistration serviceRegistration = registrations.get(agent.getName() + ruleString);\n            if (serviceRegistration != null) {\n                serviceRegistration.unregister();\n            }\n        } else {\n            if (log.isWarnEnabled()) {\n                log.warn(\"rule {} doesn't match signature: {}\", ruleString, SIGNATURE);\n            }\n        }\n    }","id":69354,"modified_method":"public void undo(String ruleString, ReplicationAgent agent) {\n        if (signatureMatches(ruleString)) {\n            ServiceRegistration serviceRegistration = registrations.get(agent.getName() + ruleString);\n            if (serviceRegistration != null) {\n                serviceRegistration.unregister();\n            }\n        } else {\n            log.warn(\"rule {} doesn't match signature: {}\", ruleString, SIGNATURE);\n\n        }\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"public void apply(String ruleString, ReplicationAgent agent) {\n        if (signatureMatches(ruleString)) {\n            // register an event handler on path which triggers the agent on node / property changes / addition / removals\n            Dictionary<String, Object> properties = new Hashtable<String, Object>();\n            properties.put(EventConstants.EVENT_TOPIC, new String[]{SlingConstants.TOPIC_RESOURCE_ADDED,\n                    SlingConstants.TOPIC_RESOURCE_CHANGED, SlingConstants.TOPIC_RESOURCE_REMOVED});\n            String path = ruleString.substring(ruleString.indexOf(':') + 1).trim();\n            if (log.isInfoEnabled()) {\n                log.info(\"trigger agent {} on path '{}'\", agent.getName(), path);\n            }\n            properties.put(EventConstants.EVENT_FILTER, \"(path=\" + path + \"/*)\");\n            if (bundleContext != null) {\n                ServiceRegistration triggerPathEventRegistration = bundleContext.registerService(EventHandler.class.getName(), new TriggerAgentEventListener(agent), properties);\n                registrations.put(agent.getName() + ruleString, triggerPathEventRegistration);\n            } else {\n                if (log.isErrorEnabled()) {\n                    log.error(\"cannot register trigger since bundle context is null\");\n                }\n            }\n        } else {\n            if (log.isWarnEnabled()) {\n                log.warn(\"rule {} doesn't match signature: {}\", ruleString, SIGNATURE);\n            }\n        }\n\n    }","id":69355,"modified_method":"public void apply(String ruleString, ReplicationAgent agent) {\n        if (signatureMatches(ruleString)) {\n            // register an event handler on path which triggers the agent on node / property changes / addition / removals\n            Dictionary<String, Object> properties = new Hashtable<String, Object>();\n            properties.put(EventConstants.EVENT_TOPIC, new String[]{SlingConstants.TOPIC_RESOURCE_ADDED,\n                    SlingConstants.TOPIC_RESOURCE_CHANGED, SlingConstants.TOPIC_RESOURCE_REMOVED});\n            String path = ruleString.substring(ruleString.indexOf(':') + 1).trim();\n            log.info(\"trigger agent {} on path '{}'\", agent.getName(), path);\n\n            properties.put(EventConstants.EVENT_FILTER, \"(path=\" + path + \"/*)\");\n            if (bundleContext != null) {\n                ServiceRegistration triggerPathEventRegistration = bundleContext.registerService(EventHandler.class.getName(), new TriggerAgentEventListener(agent), properties);\n                registrations.put(agent.getName() + ruleString, triggerPathEventRegistration);\n            } else {\n                log.error(\"cannot register trigger since bundle context is null\");\n\n            }\n        } else {\n            log.warn(\"rule {} doesn't match signature: {}\", ruleString, SIGNATURE);\n\n        }\n\n    }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"public void handleEvent(Event event) {\n            ReplicationActionType action = SlingConstants.TOPIC_RESOURCE_REMOVED.equals(event.getTopic()) ? ReplicationActionType.DELETE : ReplicationActionType.ADD;\n            if (log.isInfoEnabled()) {\n                log.info(\"triggering replication from event {}\", event);\n            }\n            Object eventProperty = event.getProperty(\"path\");\n            if (eventProperty != null) {\n                String replicatingPath = String.valueOf(eventProperty);\n                try {\n                    agent.send(new ReplicationRequest(System.currentTimeMillis(), action, replicatingPath));\n                } catch (AgentReplicationException e) {\n                    if (log.isErrorEnabled()) {\n                        log.error(\"triggered replication resulted in an error\", e);\n                    }\n                }\n            }\n        }","id":69356,"modified_method":"public void handleEvent(Event event) {\n            ReplicationActionType action = SlingConstants.TOPIC_RESOURCE_REMOVED.equals(event.getTopic()) ? ReplicationActionType.DELETE : ReplicationActionType.ADD;\n            log.info(\"triggering replication from event {}\", event);\n\n            Object eventProperty = event.getProperty(\"path\");\n            if (eventProperty != null) {\n                String replicatingPath = String.valueOf(eventProperty);\n                try {\n                    agent.execute(new ReplicationRequest(System.currentTimeMillis(), action, replicatingPath));\n                } catch (AgentReplicationException e) {\n                    log.error(\"triggered replication resulted in an error\", e);\n                }\n            }\n        }","commit_id":"e27ffc7fe37fe1cb799f6e066f8198e3f8ac531c","url":"https://github.com/apache/sling"},{"original_method":"public FileVaultReplicationPackage(VaultPackage pkg) {\n        this.pkg = pkg;\n        List<PathFilterSet> filterSets = pkg.getMetaInf().getFilter().getFilterSets();\n        String[] paths = new String[filterSets.size()];\n        for (int i = 0; i < paths.length; i++) {\n            paths[i] = filterSets.get(i).getRoot();\n        }\n        this.paths = paths;\n        this.id = pkg.getFile() != null ? pkg.getFile().getAbsolutePath() : String.valueOf(pkg.getId());\n        this.action = ReplicationActionType.ADD.toString();\n    }","id":69357,"modified_method":"public FileVaultReplicationPackage(VaultPackage pkg) {\n        this.pkg = pkg;\n        List<PathFilterSet> filterSets = pkg.getMetaInf().getFilter().getFilterSets();\n        String[] paths = new String[filterSets.size()];\n        for (int i = 0; i < paths.length; i++) {\n            paths[i] = filterSets.get(i).getRoot();\n        }\n        this.paths = paths;\n        this.id = pkg.getId() != null ? String.valueOf(pkg.getId()) : pkg.getFile().getAbsolutePath();\n        this.action = ReplicationActionType.ADD.toString();\n    }","commit_id":"c49776b50e38eaae1ae7cfb5935138b03768ea9d","url":"https://github.com/apache/sling"},{"original_method":"protected ReplicationPackage createPackageForAdd(ReplicationRequest request)\n            throws ReplicationPackageBuildingException {\n        Session session = null;\n        try {\n            session = getSession();\n\n            final String[] paths = request.getPaths();\n\n            DefaultWorkspaceFilter filter = new DefaultWorkspaceFilter();\n            DefaultMetaInf inf = new DefaultMetaInf();\n            ExportOptions opts = new ExportOptions();\n            for (String path : paths) {\n                filter.add(new PathFilterSet(path));\n            }\n            inf.setFilter(filter);\n\n            Properties props = new Properties();\n            String packageGroup = \"sling/replication\";\n            props.setProperty(VaultPackage.NAME_GROUP, packageGroup);\n            String packageName = String.valueOf(request.getTime());\n            props.setProperty(VaultPackage.NAME_NAME, packageName);\n            if (log.isDebugEnabled()) {\n                log.debug(\"assembling package {}\", packageGroup + '/' + packageName);\n            }\n            inf.setProperties(props);\n\n            opts.setMetaInf(inf);\n            opts.setRootPath(\"/\");\n            File tmpFile = File.createTempFile(\"vlt-rp-\" + System.nanoTime(), \".zip\");\n            VaultPackage pkg = packaging.getPackageManager().assemble(session, opts, tmpFile);\n            return new FileVaultReplicationPackage(pkg);\n        } catch (Exception e) {\n            throw new ReplicationPackageBuildingException(e);\n        } finally {\n            if (session != null) {\n                session.logout();\n            }\n        }\n    }","id":69358,"modified_method":"protected ReplicationPackage createPackageForAdd(ReplicationRequest request)\n            throws ReplicationPackageBuildingException {\n        Session session = null;\n        try {\n            session = getSession();\n\n            final String[] paths = request.getPaths();\n\n            DefaultWorkspaceFilter filter = new DefaultWorkspaceFilter();\n            DefaultMetaInf inf = new DefaultMetaInf();\n            ExportOptions opts = new ExportOptions();\n            for (String path : paths) {\n                filter.add(new PathFilterSet(path));\n            }\n            inf.setFilter(filter);\n\n            Properties props = new Properties();\n            String packageGroup = \"sling/replication\";\n            props.setProperty(VaultPackage.NAME_GROUP, packageGroup);\n            String packageName = String.valueOf(request.getTime());\n            props.setProperty(VaultPackage.NAME_NAME, packageName);\n            if (log.isDebugEnabled()) {\n                log.debug(\"assembling package {}\", packageGroup + '/' + packageName);\n            }\n            inf.setProperties(props);\n\n            opts.setMetaInf(inf);\n            opts.setRootPath(\"/\");\n            File tmpFile = File.createTempFile(\"vlt-rp-\" + System.nanoTime(), \".zip\");\n            packaging.getPackageManager().assemble(session, opts, tmpFile);\n            JcrPackage jcrPackage = packaging.getPackageManager(session).upload(tmpFile, false, true, null);\n\n            return new FileVaultReplicationPackage(jcrPackage.getPackage());\n        } catch (Exception e) {\n            throw new ReplicationPackageBuildingException(e);\n        } finally {\n            if (session != null) {\n                session.logout();\n            }\n        }\n    }","commit_id":"c49776b50e38eaae1ae7cfb5935138b03768ea9d","url":"https://github.com/apache/sling"},{"original_method":"@Override\n    protected ReplicationPackage getPackageInternal(String id) {\n        ReplicationPackage replicationPackage = null;\n        try {\n            File file = new File(id);\n            if (file.exists()) {\n                VaultPackage pkg = packaging.getPackageManager().open(file);\n                replicationPackage = new FileVaultReplicationPackage(pkg);\n            }\n        } catch (Exception e) {\n            log.warn(\"could not find a package with id : {}\", id);\n        }\n        return replicationPackage;\n    }","id":69359,"modified_method":"@Override\n    protected ReplicationPackage getPackageInternal(String id) {\n        ReplicationPackage replicationPackage = null;\n        try {\n            File file = new File(id);\n            if (file.exists()) {\n                VaultPackage pkg = packaging.getPackageManager().open(file);\n                replicationPackage = new FileVaultReplicationPackage(pkg);\n            }\n            else {\n                VaultPackage pkg = packaging.getPackageManager(getSession()).open(PackageId.fromString(id)).getPackage();\n                replicationPackage = new FileVaultReplicationPackage(pkg);\n            }\n        } catch (Exception e) {\n            log.warn(\"could not find a package with id : {}\", id);\n        }\n        return replicationPackage;\n    }","commit_id":"c49776b50e38eaae1ae7cfb5935138b03768ea9d","url":"https://github.com/apache/sling"},{"original_method":"private void addFinallyEdges(InstructionImpl finallyInstruction) {\n    final List<Pair<InstructionImpl, GroovyPsiElement>> copy = myPending;\n    myPending = new ArrayList<Pair<InstructionImpl, GroovyPsiElement>>();\n    for (Pair<InstructionImpl, GroovyPsiElement> pair : copy) {\n      final CallInstructionImpl call = addCallNode(finallyInstruction, pair.getSecond());\n      addEdge(pair.getFirst(), call);\n    }\n  }","id":69360,"modified_method":"private void addFinallyEdges(InstructionImpl finallyInstruction, Set<CallInstructionImpl> calls) {\n    final List<Pair<InstructionImpl, GroovyPsiElement>> copy = myPending;\n    myPending = new ArrayList<Pair<InstructionImpl, GroovyPsiElement>>();\n    for (Pair<InstructionImpl, GroovyPsiElement> pair : copy) {\n      final CallInstructionImpl call = addCallNode(finallyInstruction, pair.getSecond());\n      calls.add(call);\n      addEdge(pair.getFirst(), call);\n    }\n  }","commit_id":"e5f1b7481d636210820c77e046d8fbd8d367b5bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Iterable<? extends Instruction> succ(Stack<CallInstruction> callStack) {\n      final List<InstructionImpl> callSucc = ((CallInstructionImpl) callStack.pop()).mySucc;\n      assert !callSucc.isEmpty();\n      return Collections.singletonList(callSucc.get(0));\n    }","id":69361,"modified_method":"public Iterable<? extends Instruction> succ(Stack<CallInstruction> callStack) {\n      return ((CallInstructionImpl) callStack.pop()).mySucc;\n   }","commit_id":"e5f1b7481d636210820c77e046d8fbd8d367b5bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visitTryStatement(GrTryCatchStatement tryCatchStatement) {\n    final GrOpenBlock tryBlock = tryCatchStatement.getTryBlock();\n    final GrCatchClause[] catchClauses = tryCatchStatement.getCatchClauses();\n    final GrFinallyClause finallyClause = tryCatchStatement.getFinallyClause();\n    for (int i = catchClauses.length - 1; i >= 0; i--) {\n      myCatchedExceptionInfos.push(new ExceptionInfo(catchClauses[i]));\n    }\n\n    InstructionImpl tryBeg = null;\n    InstructionImpl tryEnd = null;\n    if (tryBlock != null) {\n      tryBeg = startNode(tryBlock);\n      tryBlock.accept(this);\n      tryEnd = myHead != tryBeg ? myHead : null;\n      finishNode(tryBeg);\n    }\n\n    InstructionImpl[][] throwers = new InstructionImpl[catchClauses.length][];\n    for (int i = 0; i < catchClauses.length; i++) {\n      final List<InstructionImpl> list = myCatchedExceptionInfos.pop().myThrowers;\n      throwers[i] = list.toArray(new InstructionImpl[list.size()]);\n    }\n\n    InstructionImpl[] catches = new InstructionImpl[catchClauses.length];\n\n    for (int i = 0; i < catchClauses.length; i++) {\n      flowAbrupted();\n      final InstructionImpl catchBeg = startNode(catchClauses[i]);\n      for (InstructionImpl thrower : throwers[i]) {\n        addEdge(thrower, catchBeg);\n      }\n\n      if (tryBeg != null) addEdge(tryBeg, catchBeg);\n      if (tryEnd != null) addEdge(tryEnd, catchBeg);\n      catchClauses[i].accept(this);\n      catches[i] = myHead;\n      finishNode(catchBeg);\n    }\n\n    if (finallyClause != null) {\n      flowAbrupted();\n      final InstructionImpl finallyInstruction = startNode(finallyClause);\n      addFinallyEdges(finallyInstruction);\n\n      if (tryEnd != null) {\n        addEdge(tryEnd, addCallNode(finallyInstruction, tryCatchStatement));\n      }\n      for (InstructionImpl catchEnd : catches) {\n        addEdge(catchEnd, addCallNode(finallyInstruction, tryCatchStatement));\n      }\n      myHead = finallyInstruction;\n      finallyClause.accept(this);\n      addNode(new RetInstruction(myInstructionNumber++));\n      finishNode(finallyInstruction);\n    }\n  }","id":69362,"modified_method":"public void visitTryStatement(GrTryCatchStatement tryCatchStatement) {\n    final GrOpenBlock tryBlock = tryCatchStatement.getTryBlock();\n    final GrCatchClause[] catchClauses = tryCatchStatement.getCatchClauses();\n    final GrFinallyClause finallyClause = tryCatchStatement.getFinallyClause();\n    for (int i = catchClauses.length - 1; i >= 0; i--) {\n      myCatchedExceptionInfos.push(new ExceptionInfo(catchClauses[i]));\n    }\n\n    InstructionImpl tryBeg = null;\n    InstructionImpl tryEnd = null;\n    if (tryBlock != null) {\n      tryBeg = startNode(tryBlock);\n      tryBlock.accept(this);\n      tryEnd = myHead != tryBeg ? myHead : null;\n      finishNode(tryBeg);\n    }\n\n    InstructionImpl[][] throwers = new InstructionImpl[catchClauses.length][];\n    for (int i = 0; i < catchClauses.length; i++) {\n      final List<InstructionImpl> list = myCatchedExceptionInfos.pop().myThrowers;\n      throwers[i] = list.toArray(new InstructionImpl[list.size()]);\n    }\n\n    InstructionImpl[] catches = new InstructionImpl[catchClauses.length];\n\n    for (int i = 0; i < catchClauses.length; i++) {\n      flowAbrupted();\n      final InstructionImpl catchBeg = startNode(catchClauses[i]);\n      for (InstructionImpl thrower : throwers[i]) {\n        addEdge(thrower, catchBeg);\n      }\n\n      if (tryBeg != null) addEdge(tryBeg, catchBeg);\n      if (tryEnd != null) addEdge(tryEnd, catchBeg);\n      catchClauses[i].accept(this);\n      catches[i] = myHead;\n      finishNode(catchBeg);\n    }\n\n    if (finallyClause != null) {\n      flowAbrupted();\n      final InstructionImpl finallyInstruction = startNode(finallyClause);\n      Set<CallInstructionImpl> calls = new HashSet<CallInstructionImpl>();\n      addFinallyEdges(finallyInstruction, calls);\n\n      if (tryEnd != null) {\n        final ControlFlowBuilder.CallInstructionImpl call = addCallNode(finallyInstruction, tryCatchStatement);\n        calls.add(call);\n        addEdge(tryEnd, call);\n      }\n      for (InstructionImpl catchEnd : catches) {\n        final ControlFlowBuilder.CallInstructionImpl call = addCallNode(finallyInstruction, tryCatchStatement);\n        calls.add(call);\n        addEdge(catchEnd, call);\n      }\n      myHead = finallyInstruction;\n      finallyClause.accept(this);\n      final RetInstruction retInsn = new RetInstruction(myInstructionNumber++);\n      for (CallInstructionImpl call : calls) {\n        call.setReturnInstruction(retInsn);\n      }\n      addNode(retInsn);\n      finishNode(finallyInstruction);\n    }\n  }","commit_id":"e5f1b7481d636210820c77e046d8fbd8d367b5bb","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Iterable<? extends Instruction> succ(Stack<CallInstruction> callStack) {\n      return ((CallInstructionImpl) callStack.pop()).mySucc;\n   }","id":69363,"modified_method":"public Iterable<? extends Instruction> succ(Stack<CallInstruction> callStack) {\n      final CallInstruction callInstruction = callStack.pop();\n      return ((CallInstructionImpl) callInstruction).mySucc;\n   }","commit_id":"b33c63feda0b7e5342e947e60606e913155cd0df","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void visitTryStatement(GrTryCatchStatement tryCatchStatement) {\n    final GrOpenBlock tryBlock = tryCatchStatement.getTryBlock();\n    final GrCatchClause[] catchClauses = tryCatchStatement.getCatchClauses();\n    final GrFinallyClause finallyClause = tryCatchStatement.getFinallyClause();\n    for (int i = catchClauses.length - 1; i >= 0; i--) {\n      myCatchedExceptionInfos.push(new ExceptionInfo(catchClauses[i]));\n    }\n\n    InstructionImpl tryBeg = null;\n    InstructionImpl tryEnd = null;\n    if (tryBlock != null) {\n      tryBeg = startNode(tryBlock);\n      tryBlock.accept(this);\n      tryEnd = myHead != tryBeg ? myHead : null;\n      finishNode(tryBeg);\n    }\n\n    InstructionImpl[][] throwers = new InstructionImpl[catchClauses.length][];\n    for (int i = 0; i < catchClauses.length; i++) {\n      final List<InstructionImpl> list = myCatchedExceptionInfos.pop().myThrowers;\n      throwers[i] = list.toArray(new InstructionImpl[list.size()]);\n    }\n\n    InstructionImpl[] catches = new InstructionImpl[catchClauses.length];\n\n    for (int i = 0; i < catchClauses.length; i++) {\n      flowAbrupted();\n      final InstructionImpl catchBeg = startNode(catchClauses[i]);\n      for (InstructionImpl thrower : throwers[i]) {\n        addEdge(thrower, catchBeg);\n      }\n\n      if (tryBeg != null) addEdge(tryBeg, catchBeg);\n      if (tryEnd != null) addEdge(tryEnd, catchBeg);\n      catchClauses[i].accept(this);\n      catches[i] = myHead;\n      finishNode(catchBeg);\n    }\n\n    if (finallyClause != null) {\n      flowAbrupted();\n      final InstructionImpl finallyInstruction = startNode(finallyClause);\n      Set<CallInstructionImpl> calls = new HashSet<CallInstructionImpl>();\n      addFinallyEdges(finallyInstruction, calls);\n\n      if (tryEnd != null) {\n        final ControlFlowBuilder.CallInstructionImpl call = addCallNode(finallyInstruction, tryCatchStatement);\n        calls.add(call);\n        addEdge(tryEnd, call);\n      }\n      for (InstructionImpl catchEnd : catches) {\n        final ControlFlowBuilder.CallInstructionImpl call = addCallNode(finallyInstruction, tryCatchStatement);\n        calls.add(call);\n        addEdge(catchEnd, call);\n      }\n      myHead = finallyInstruction;\n      finallyClause.accept(this);\n      final RetInstruction retInsn = new RetInstruction(myInstructionNumber++);\n      for (CallInstructionImpl call : calls) {\n        call.setReturnInstruction(retInsn);\n      }\n      addNode(retInsn);\n      finishNode(finallyInstruction);\n    }\n  }","id":69364,"modified_method":"public void visitTryStatement(GrTryCatchStatement tryCatchStatement) {\n    final GrOpenBlock tryBlock = tryCatchStatement.getTryBlock();\n    final GrCatchClause[] catchClauses = tryCatchStatement.getCatchClauses();\n    final GrFinallyClause finallyClause = tryCatchStatement.getFinallyClause();\n    for (int i = catchClauses.length - 1; i >= 0; i--) {\n      myCatchedExceptionInfos.push(new ExceptionInfo(catchClauses[i]));\n    }\n\n    InstructionImpl tryBeg = null;\n    InstructionImpl tryEnd = null;\n    if (tryBlock != null) {\n      tryBeg = startNode(tryBlock);\n      tryBlock.accept(this);\n      tryEnd = myHead != tryBeg ? myHead : null;\n      finishNode(tryBeg);\n    }\n\n    InstructionImpl[][] throwers = new InstructionImpl[catchClauses.length][];\n    for (int i = 0; i < catchClauses.length; i++) {\n      final List<InstructionImpl> list = myCatchedExceptionInfos.pop().myThrowers;\n      throwers[i] = list.toArray(new InstructionImpl[list.size()]);\n    }\n\n    InstructionImpl[] catches = new InstructionImpl[catchClauses.length];\n\n    for (int i = 0; i < catchClauses.length; i++) {\n      flowAbrupted();\n      final InstructionImpl catchBeg = startNode(catchClauses[i]);\n      for (InstructionImpl thrower : throwers[i]) {\n        addEdge(thrower, catchBeg);\n      }\n\n      if (tryBeg != null) addEdge(tryBeg, catchBeg);\n      if (tryEnd != null) addEdge(tryEnd, catchBeg);\n      catchClauses[i].accept(this);\n      catches[i] = myHead;\n      finishNode(catchBeg);\n    }\n\n    if (finallyClause != null) {\n      flowAbrupted();\n      final InstructionImpl finallyInstruction = startNode(finallyClause);\n      Set<PostCallInstructionImpl> postCalls = new HashSet<PostCallInstructionImpl>();\n      addFinallyEdges(finallyInstruction, postCalls);\n\n      if (tryEnd != null) {\n        postCalls.add(addCallNode(finallyInstruction, tryCatchStatement, tryEnd));\n      }\n      for (InstructionImpl catchEnd : catches) {\n        postCalls.add(addCallNode(finallyInstruction, tryCatchStatement, catchEnd));\n      }\n      myHead = finallyInstruction;\n      finallyClause.accept(this);\n      final RetInstruction retInsn = new RetInstruction(myInstructionNumber++);\n      for (PostCallInstructionImpl postCall : postCalls) {\n        postCall.setReturnInstruction(retInsn);\n      }\n      addNode(retInsn);\n      finishNode(finallyInstruction);\n    }\n  }","commit_id":"b33c63feda0b7e5342e947e60606e913155cd0df","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void addFinallyEdges(InstructionImpl finallyInstruction, Set<CallInstructionImpl> calls) {\n    final List<Pair<InstructionImpl, GroovyPsiElement>> copy = myPending;\n    myPending = new ArrayList<Pair<InstructionImpl, GroovyPsiElement>>();\n    for (Pair<InstructionImpl, GroovyPsiElement> pair : copy) {\n      final CallInstructionImpl call = addCallNode(finallyInstruction, pair.getSecond());\n      calls.add(call);\n      addEdge(pair.getFirst(), call);\n    }\n  }","id":69365,"modified_method":"private void addFinallyEdges(InstructionImpl finallyInstruction, Set<PostCallInstructionImpl> calls) {\n    final List<Pair<InstructionImpl, GroovyPsiElement>> copy = myPending;\n    myPending = new ArrayList<Pair<InstructionImpl, GroovyPsiElement>>();\n    for (Pair<InstructionImpl, GroovyPsiElement> pair : copy) {\n      calls.add(addCallNode(finallyInstruction, pair.getSecond(), pair.getFirst()));\n    }\n  }","commit_id":"b33c63feda0b7e5342e947e60606e913155cd0df","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private CallInstructionImpl addCallNode(InstructionImpl finallyInstruction, GroovyPsiElement scopeWhenAddPending) {\n    final CallInstructionImpl call = new CallInstructionImpl(myInstructionNumber++, finallyInstruction);\n    flowAbrupted();\n    addNode(call);\n    addPendingEdge(scopeWhenAddPending, call);\n    return call;\n  }","id":69366,"modified_method":"private PostCallInstructionImpl addCallNode(InstructionImpl finallyInstruction, GroovyPsiElement scopeWhenAddPending, InstructionImpl src) {\n    flowAbrupted();\n    final CallInstructionImpl call = new CallInstructionImpl(myInstructionNumber++, finallyInstruction);\n    addNode(call);\n    addEdge(src, call);\n    flowAbrupted();\n    PostCallInstructionImpl postCall = new PostCallInstructionImpl(myInstructionNumber++, call);\n    addNode(postCall);\n    addPendingEdge(scopeWhenAddPending, postCall);\n    return postCall;\n  }","commit_id":"b33c63feda0b7e5342e947e60606e913155cd0df","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private E join(Instruction instruction, ArrayList<E> info, Stack<CallInstruction> callStack) {\n    final Iterable<? extends Instruction> prev = myDfa.isForward() ? instruction.pred(callStack) : instruction.succ(callStack);\n    ArrayList<E> prevInfos = new ArrayList<E>();\n    for (Instruction i : prev) {\n      prevInfos.add(info.get(i.num() - 1));\n    }\n    return mySemilattice.join(prevInfos);\n  }","id":69367,"modified_method":"private E join(Instruction instruction, ArrayList<E> info, Stack<CallInstruction> callStack) {\n    final Stack<CallInstruction> copy = (Stack<CallInstruction>) callStack.clone();  //enviroanment should not be modified in join\n    final Iterable<? extends Instruction> prev = myDfa.isForward() ? instruction.pred(copy) : instruction.succ(copy);\n    ArrayList<E> prevInfos = new ArrayList<E>();\n    for (Instruction i : prev) {\n      prevInfos.add(info.get(i.num() - 1));\n    }\n    return mySemilattice.join(prevInfos);\n  }","commit_id":"b33c63feda0b7e5342e947e60606e913155cd0df","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Iterable<? extends Instruction> pred(Stack<CallInstruction> callStack) {\n    if (myPred.size() > 0) {\n      return myPred;\n    }\n\n    if (!callStack.isEmpty()) {\n      return callStack.pop().pred(callStack);\n    }\n\n    return Collections.emptyList();\n  }","id":69368,"modified_method":"public Iterable<? extends Instruction> pred(Stack<CallInstruction> callStack) {\n    if (myPred.size() > 0) {\n      return myPred;\n    }\n\n    if (!callStack.isEmpty()) {\n      final CallInstruction callInstruction = callStack.pop();\n      return callInstruction.pred(callStack);\n    }\n\n    return Collections.emptyList();\n  }","commit_id":"b33c63feda0b7e5342e947e60606e913155cd0df","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void update() {\n    clear();\n\n    setIcon(myIcon);\n    boolean focused = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner() == myPanel;\n\n    final NavBarModel model = myPanel.getModel();\n    boolean selected = model.getSelectedIndex() == myIndex;\n\n    setPaintFocusBorder(!focused && selected);\n    setFocusBorderAroundIcon(false);\n\n    setBackground(selected && focused\n                  ? UIUtil.getListSelectionBackground()\n                  : (UIUtil.isUnderGTKLookAndFeel() ? Color.WHITE : UIUtil.getListBackground()));\n\n    final Color fg = selected && focused\n                     ? UIUtil.getListSelectionForeground()\n                     : model.getSelectedIndex() < myIndex && model.getSelectedIndex() != -1\n                       ? UIUtil.getInactiveTextColor()\n                       : myAttributes.getFgColor();\n\n    final Color bg = selected && focused ? UIUtil.getListSelectionBackground() : myAttributes.getBgColor();\n\n    append(myText, new SimpleTextAttributes(bg, fg, myAttributes.getWaveColor(), myAttributes.getStyle()));\n\n    repaint();\n  }","id":69369,"modified_method":"void update() {\n    clear();\n\n    setIcon(myIcon);\n    final Component focusOwner = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();\n    boolean focused = isPopupElement ? myPanel.isNodePopupActive() : focusOwner == myPanel;\n\n    final NavBarModel model = myPanel.getModel();\n    boolean selected = isPopupElement ? myPanel.isSelectedInPopup(myObject) : model.getSelectedIndex() == myIndex;\n\n    setPaintFocusBorder(!focused && selected && !isPopupElement);\n    setFocusBorderAroundIcon(false);\n\n    setBackground(selected && focused\n                  ? UIUtil.getListSelectionBackground()\n                  : (UIUtil.isUnderGTKLookAndFeel() ? Color.WHITE : UIUtil.getListBackground()));\n\n    final Color fg = selected && focused\n                     ? UIUtil.getListSelectionForeground()\n                     : model.getSelectedIndex() < myIndex && model.getSelectedIndex() != -1\n                       ? UIUtil.getInactiveTextColor()\n                       : myAttributes.getFgColor();\n\n    final Color bg = selected && focused ? UIUtil.getListSelectionBackground() : myAttributes.getBgColor();\n\n    append(myText, new SimpleTextAttributes(bg, fg, myAttributes.getWaveColor(), myAttributes.getStyle()));\n\n    repaint();\n  }","commit_id":"f1438992461d8f060dfbfe233c2394f900ce3e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public NavBarItem(NavBarPanel panel, Object object, int idx) {\n    myPanel = panel;\n    myObject = object;\n    myIndex = idx;\n    if (object != null) {\n      Icon closedIcon = NavBarPresentation.getIcon(object, false);\n      Icon openIcon = NavBarPresentation.getIcon(object, true);\n\n      if (closedIcon == null && openIcon != null) closedIcon = openIcon;\n      if (openIcon == null && closedIcon != null) openIcon = closedIcon;\n      if (openIcon == null) {\n        openIcon = closedIcon = EmptyIcon.create(5);\n      }\n      final NavBarPresentation presentation = myPanel.getPresentation();\n      myText = NavBarPresentation.getPresentableText(object, myPanel.getWindow());\n      myIcon = wrapIcon(openIcon, closedIcon, idx);\n      myAttributes = presentation.getTextAttributes(object, false);\n    } else {\n      myText = \"Sample\";\n      myIcon = Icons.DIRECTORY_OPEN_ICON;\n      myAttributes = SimpleTextAttributes.REGULAR_ATTRIBUTES;\n    }\n\n    setIpad(new Insets(1, 2, 1, 2));\n    update();\n  }","id":69370,"modified_method":"public NavBarItem(NavBarPanel panel, Object object, int idx) {\n    myPanel = panel;\n    myObject = object;\n    myIndex = idx;\n    isPopupElement = idx == -1;\n    if (object != null) {\n      Icon closedIcon = NavBarPresentation.getIcon(object, false);\n      Icon openIcon = NavBarPresentation.getIcon(object, true);\n\n      if (closedIcon == null && openIcon != null) closedIcon = openIcon;\n      if (openIcon == null && closedIcon != null) openIcon = closedIcon;\n      if (openIcon == null) {\n        openIcon = closedIcon = EmptyIcon.create(5);\n      }\n      final NavBarPresentation presentation = myPanel.getPresentation();\n      myText = NavBarPresentation.getPresentableText(object, myPanel.getWindow());\n      myIcon = wrapIcon(openIcon, closedIcon, idx);\n      myAttributes = presentation.getTextAttributes(object, false);\n    } else {\n      myText = \"Sample\";\n      myIcon = Icons.DIRECTORY_OPEN_ICON;\n      myAttributes = SimpleTextAttributes.REGULAR_ATTRIBUTES;\n    }\n\n    setIpad(new Insets(1, 2, 1, 2));\n    update();\n  }","commit_id":"f1438992461d8f060dfbfe233c2394f900ce3e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Icon wrapIcon(final Icon openIcon, final Icon closedIcon, final int idx) {\n    return new Icon() {\n      public void paintIcon(Component c, Graphics g, int x, int y) {\n        final ListPopupImpl nodePopup = myPanel.getNodePopup();\n        if (myPanel.getModel().getSelectedIndex() == idx && nodePopup != null && nodePopup.isVisible()) {\n          openIcon.paintIcon(c, g, x, y);\n        }\n        else {\n          closedIcon.paintIcon(c, g, x, y);\n        }\n      }\n\n      public int getIconWidth() {\n        return openIcon.getIconWidth();\n      }\n\n      public int getIconHeight() {\n        return openIcon.getIconHeight();\n      }\n    };\n  }","id":69371,"modified_method":"private Icon wrapIcon(final Icon openIcon, final Icon closedIcon, final int idx) {\n    return new Icon() {\n      public void paintIcon(Component c, Graphics g, int x, int y) {\n        if (myPanel.getModel().getSelectedIndex() == idx && myPanel.isNodePopupActive()) {\n          openIcon.paintIcon(c, g, x, y);\n        }\n        else {\n          closedIcon.paintIcon(c, g, x, y);\n        }\n      }\n\n      public int getIconWidth() {\n        return openIcon.getIconWidth();\n      }\n\n      public int getIconHeight() {\n        return openIcon.getIconHeight();\n      }\n    };\n  }","commit_id":"f1438992461d8f060dfbfe233c2394f900ce3e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void processFocusLost(FocusEvent e) {\n    final ListPopupImpl nodePopup = myPanel.getNodePopup();\n    final boolean nodePopupInactive = nodePopup == null || !nodePopup.isVisible() || !nodePopup.isFocused();\n    boolean childPopupInactive = !JBPopupFactory.getInstance().isChildPopupFocused(myPanel);\n    if (nodePopupInactive && childPopupInactive) {\n      final Component opposite = e.getOppositeComponent();\n      if (opposite != null && opposite != myPanel && !myPanel.isAncestorOf(opposite) && !e.isTemporary()) {\n        myPanel.setContextComponent(null);\n        myPanel.hideHint();\n      }\n    }\n\n    myPanel.updateItems();\n  }","id":69372,"modified_method":"private void processFocusLost(FocusEvent e) {\n    final boolean nodePopupInactive = !myPanel.isNodePopupActive();\n    boolean childPopupInactive = !JBPopupFactory.getInstance().isChildPopupFocused(myPanel);\n    if (nodePopupInactive && childPopupInactive) {\n      final Component opposite = e.getOppositeComponent();\n      if (opposite != null && opposite != myPanel && !myPanel.isAncestorOf(opposite) && !e.isTemporary()) {\n        myPanel.setContextComponent(null);\n        myPanel.hideHint();\n      }\n    }\n\n    myPanel.updateItems();\n  }","commit_id":"f1438992461d8f060dfbfe233c2394f900ce3e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void hideHint() {\n    if (myHint != null) {\n      myHint.hide();\n      myHint = null;\n    }\n  }","id":69373,"modified_method":"void hideHint() {\n    cancelPopup();\n    if (myHint != null) {\n      myHint.hide();\n      myHint = null;\n    }\n  }","commit_id":"f1438992461d8f060dfbfe233c2394f900ce3e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @SuppressWarnings({\"unchecked\"})\n  <T> T getSelectedElement(Class<T> klass) {\n    Object selectedValue1 = myModel.getSelectedValue();\n    if (selectedValue1 == null) {\n      final int modelSize = myModel.size();\n      if (modelSize > 0) {\n        selectedValue1 = myModel.getElement(modelSize - 1);\n      }\n    }\n    final Object selectedValue = selectedValue1;\n    return selectedValue != null && klass.isAssignableFrom(selectedValue.getClass()) ? (T)selectedValue : null;\n  }","id":69374,"modified_method":"@Nullable\n  @SuppressWarnings({\"unchecked\"})\n  <T> T getSelectedElement(Class<T> klass) {\n    Object value = null;\n    if (myNodeHint != null) {\n      value = myNodeHint.getSelectedValue();\n    }\n    if (value == null) value =  myModel.getSelectedValue();\n    if (value == null) {\n      final int modelSize = myModel.size();\n      if (modelSize > 0) {\n        value = myModel.getElement(modelSize - 1);\n      }\n    }\n    return value != null && klass.isAssignableFrom(value.getClass()) ? (T)value : null;\n  }","commit_id":"f1438992461d8f060dfbfe233c2394f900ce3e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"boolean isNodePopupShowing() {\n    return myNodePopup != null && myNodePopup.isVisible();\n  }","id":69375,"modified_method":"boolean isNodePopupShowing() {\n    return (myNodePopup != null && myNodePopup.isVisible())\n      || (myNodeHint != null && myNodeHint.isVisible());\n  }","commit_id":"f1438992461d8f060dfbfe233c2394f900ce3e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void ctrlClick(final int index) {\n    if (isNodePopupShowing()) {\n      cancelPopup();\n      if (myModel.getSelectedIndex() == index) {\n        return;\n      }\n    }\n\n    final Object object = myModel.getElement(index);\n    final java.util.List<Object> objects = myModel.getChildren(object);\n\n    if (!objects.isEmpty()) {\n      final Object[] siblings = new Object[objects.size()];\n      final Icon[] icons = new Icon[objects.size()];\n      for (int i = 0; i < objects.size(); i++) {\n        siblings[i] = objects.get(i);\n        icons[i] = NavBarPresentation.getIcon(siblings[i], false);\n      }\n      final NavBarItem item = getItem(index);\n      final BaseListPopupStep<Object> step = new BaseListPopupStep<Object>(\"\", siblings, icons) {\n        public boolean isSpeedSearchEnabled() {\n          return true;\n        }\n\n        @NotNull\n        public String getTextFor(final Object value) {\n          return NavBarPresentation.getPresentableText(value, null);\n        }\n\n        public boolean isSelectable(Object value) {\n          return true;\n        }\n\n        public PopupStep onChosen(final Object selectedValue, final boolean finalChoice) {\n          return doFinalStep(new Runnable() {\n            public void run() {\n              navigateInsideBar(optimizeTarget(selectedValue));\n            }\n          });\n        }\n      };\n      step.setDefaultOptionIndex(index < myModel.size() - 1 ? objects.indexOf(myModel.getElement(index + 1)) : 0);\n      myNodePopup = new ListPopupImpl(step) {\n        protected ListCellRenderer getListElementRenderer() {\n          return new NavBarListCellRenderer(myProject, NavBarPanel.this);\n        }\n\n        @Override\n        public void cancel(InputEvent e) {\n          super.cancel(e);\n        }\n      };\n      myNodePopup.registerAction(\"left\", KeyEvent.VK_LEFT, 0, new AbstractAction() {\n        public void actionPerformed(ActionEvent e) {\n          myNodePopup.goBack();\n          shiftFocus(-1);\n          restorePopup();\n        }\n      });\n      myNodePopup.registerAction(\"right\", KeyEvent.VK_RIGHT, 0, new AbstractAction() {\n        public void actionPerformed(ActionEvent e) {\n          myNodePopup.goBack();\n          shiftFocus(1);\n          restorePopup();\n        }\n      });\n\n      ListenerUtil.addMouseListener(myNodePopup.getComponent(), new MouseAdapter() {\n        public void mouseReleased(final MouseEvent e) {\n          if (SystemInfo.isWindows) {\n            click(e);\n          }\n        }\n\n        public void mousePressed(final MouseEvent e) {\n          if (!SystemInfo.isWindows) {\n            click(e);\n          }\n        }\n\n        private void click(final MouseEvent e) {\n          if (!e.isConsumed() && e.isPopupTrigger()) {\n            myModel.setSelectedIndex(index);\n            IdeFocusManager.getInstance(myProject).requestFocus(NavBarPanel.this, true);\n            rightClick(index);\n            e.consume();\n          }\n        }\n      });\n\n      if (!isValid()) {\n        validate();\n      }\n\n      if (item != null && item.isShowing() && step.getValues().size() > 0) {\n        myNodePopup.showUnderneathOf(item);\n      }\n    }\n  }","id":69376,"modified_method":"private void ctrlClick(final int index) {\n    if (isNodePopupShowing()) {\n      cancelPopup();\n      if (myModel.getSelectedIndex() == index) {\n        return;\n      }\n    }\n\n    final Object object = myModel.getElement(index);\n    final java.util.List<Object> objects = myModel.getChildren(object);\n\n    if (!objects.isEmpty()) {\n      final Object[] siblings = new Object[objects.size()];\n      final Icon[] icons = new Icon[objects.size()];\n      for (int i = 0; i < objects.size(); i++) {\n        siblings[i] = objects.get(i);\n        icons[i] = NavBarPresentation.getIcon(siblings[i], false);\n      }\n      final NavBarItem item = getItem(index);\n      final BaseListPopupStep<Object> step;\n      if (Registry.is(\"navbar.newpopup\")) {\n        myNodePopup = null;\n        myNodeHint = new NavBarPopup(this, siblings, index < myModel.size() - 1 ? objects.indexOf(myModel.getElement(index + 1)) : 0);\n        if (item != null && item.isShowing()) {\n          myNodeHint.show(item);\n        }\n      } else {\n        myNodeHint = null;\n        step = new BaseListPopupStep<Object>(\"\", siblings, icons) {\n          public boolean isSpeedSearchEnabled() {\n            return true;\n          }\n\n          @NotNull\n          public String getTextFor(final Object value) {\n            return NavBarPresentation.getPresentableText(value, null);\n          }\n\n          public boolean isSelectable(Object value) {\n            return true;\n          }\n\n          public PopupStep onChosen(final Object selectedValue, final boolean finalChoice) {\n            return doFinalStep(new Runnable() {\n              public void run() {\n                navigateInsideBar(optimizeTarget(selectedValue));\n              }\n            });\n          }\n        };\n        step.setDefaultOptionIndex(index < myModel.size() - 1 ? objects.indexOf(myModel.getElement(index + 1)) : 0);\n        myNodePopup = new ListPopupImpl(step) {\n          protected ListCellRenderer getListElementRenderer() {\n            return new NavBarListCellRenderer(myProject, NavBarPanel.this);\n          }\n\n          @Override\n          public void cancel(InputEvent e) {\n            super.cancel(e);\n          }\n        };\n        myNodePopup.registerAction(\"left\", KeyEvent.VK_LEFT, 0, new AbstractAction() {\n          public void actionPerformed(ActionEvent e) {\n            myNodePopup.goBack();\n            shiftFocus(-1);\n            restorePopup();\n          }\n        });\n        myNodePopup.registerAction(\"right\", KeyEvent.VK_RIGHT, 0, new AbstractAction() {\n          public void actionPerformed(ActionEvent e) {\n            myNodePopup.goBack();\n            shiftFocus(1);\n            restorePopup();\n          }\n        });\n\n\n      if (!isValid()) {\n        validate();\n      }\n\n      if (item != null && item.isShowing() && step.getValues().size() > 0) {\n        myNodePopup.showUnderneathOf(item);\n      }\n      }\n    }\n  }","commit_id":"f1438992461d8f060dfbfe233c2394f900ce3e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void cancelPopup() {\n    if (myNodePopup != null) {\n      myNodePopup.cancel();\n      myNodePopup = null;\n    }\n  }","id":69377,"modified_method":"void cancelPopup() {\n    if (myNodeHint != null) {\n      myNodeHint.hide();\n      myNodeHint = null;\n    }\n    if (myNodePopup != null) {\n      myNodePopup.cancel();\n      myNodePopup = null;\n    }\n  }","commit_id":"f1438992461d8f060dfbfe233c2394f900ce3e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void restorePopup() {\n    cancelPopup();\n    ctrlClick(myModel.getSelectedIndex());\n  }","id":69378,"modified_method":"void restorePopup() {\n    cancelPopup();\n    ctrlClick(myModel.getSelectedIndex());\n  }","commit_id":"f1438992461d8f060dfbfe233c2394f900ce3e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void rightClick(final int index) {\n    final ActionManager actionManager = ActionManager.getInstance();\n    final ActionGroup group = (ActionGroup)CustomActionsSchema.getInstance().getCorrectedAction(IdeActions.GROUP_NAVBAR_POPUP);\n    final ActionPopupMenu popupMenu = actionManager.createActionPopupMenu(ActionPlaces.NAVIGATION_BAR, group);\n    final NavBarItem item = getItem(index);\n    if (item != null) {\n      popupMenu.getComponent().show(this, item.getX(), item.getY() + item.getHeight());\n    }\n  }","id":69379,"modified_method":"void rightClick(final int index) {\n    final ActionManager actionManager = ActionManager.getInstance();\n    final ActionGroup group = (ActionGroup)CustomActionsSchema.getInstance().getCorrectedAction(IdeActions.GROUP_NAVBAR_POPUP);\n    final ActionPopupMenu popupMenu = actionManager.createActionPopupMenu(ActionPlaces.NAVIGATION_BAR, group);\n    final NavBarItem item = getItem(index);\n    if (item != null) {\n      popupMenu.getComponent().show(this, item.getX(), item.getY() + item.getHeight());\n    }\n  }","commit_id":"f1438992461d8f060dfbfe233c2394f900ce3e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void shiftFocus(int direction) {\n    final int selectedIndex = myModel.getSelectedIndex();\n    final int index = myModel.getIndexByModel(selectedIndex + direction);\n    myModel.setSelectedIndex(index);\n  }","id":69380,"modified_method":"void shiftFocus(int direction) {\n    final int selectedIndex = myModel.getSelectedIndex();\n    final int index = myModel.getIndexByModel(selectedIndex + direction);\n    myModel.setSelectedIndex(index);\n  }","commit_id":"f1438992461d8f060dfbfe233c2394f900ce3e78","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Dispatches the given <tt>KeyEvent<\/tt>.\n     * @param e the <tt>KeyEvent<\/tt> to dispatch\n     * @return <tt>true<\/tt> if the KeyboardFocusManager should take no\n     * further action with regard to the KeyEvent; <tt>false<\/tt>\n     * otherwise\n     */\n    public boolean dispatchKeyEvent(KeyEvent e)\n    {\n        // If this window is not the focus window  or if the event is not\n        // of type PRESSED we have nothing more to do here.\n        if (!contactListContainer.isFocused()\n            || (e.getID() != KeyEvent.KEY_PRESSED\n                && e.getID() != KeyEvent.KEY_TYPED)\n            || (GuiActivator.getUIService()\n                    .getSingleWindowContainer() != null)\n                && GuiActivator.getUIService()\n                    .getSingleWindowContainer().containsFocus()\n            || (keyManager.getFocusOwner() != null\n                && keyManager.getFocusOwner() instanceof JTextComponent))\n            return false;\n\n        // Ctrl-Enter || Cmd-Enter typed when this window is the focused\n        // window.\n        //\n        // Tried to make this with key bindings first, but has a problem\n        // with enter key binding. When the popup menu containing call\n        // contacts was opened the default keyboard manager was prioritizing\n        // the window ENTER key, which will open a chat and we wanted that\n        // the enter starts a call with the selected contact from the menu.\n        // This is why we need to do it here and to check if the\n        // permanent focus owner is equal to the focus owner, which is not\n        // the case when a popup menu is opened.\n        if (e.getKeyCode() == KeyEvent.VK_ENTER\n            && (e.isControlDown() || e.isMetaDown()))\n        {\n            contactListContainer.ctrlEnterKeyTyped();\n            return false;\n        }\n        else if (e.getKeyCode() == KeyEvent.VK_ENTER\n            && keyManager.getFocusOwner()\n            .equals(keyManager.getPermanentFocusOwner()))\n        {\n            contactListContainer.enterKeyTyped();\n            return false;\n        }\n\n        // If the search field is the focus owner.\n        if (searchField.isFocusOwner()\n            && (e.getKeyCode() == KeyEvent.VK_UP\n                || e.getKeyCode() == KeyEvent.VK_DOWN\n                || e.getKeyCode() == KeyEvent.VK_PAGE_UP\n                || e.getKeyCode() == KeyEvent.VK_PAGE_DOWN))\n        {\n            contactList.selectFirstContact();\n            contactList.getComponent().requestFocus();\n            return false;\n        }\n\n        // If the contact list is the focus owner.\n        if (contactList.getComponent().isFocusOwner()\n            && e.getKeyCode() == KeyEvent.VK_ESCAPE)\n        {\n            // Removes all current selections.\n            contactList.removeSelection();\n\n            if (searchField.getText() != null)\n            {\n                searchField.requestFocus();\n            }\n            return false;\n        }\n\n        UIGroup selectedGroup = contactList.getSelectedGroup();\n\n        // No matter who is the focus owner.\n        if (e.getKeyChar() == KeyEvent.CHAR_UNDEFINED\n            || e.getKeyCode() == KeyEvent.VK_ENTER\n            || e.getKeyCode() == KeyEvent.VK_DELETE\n            || e.getKeyCode() == KeyEvent.VK_BACK_SPACE\n            || e.getKeyCode() == KeyEvent.VK_TAB\n            || e.getKeyCode() == KeyEvent.VK_SPACE\n            || (selectedGroup != null\n                && (e.getKeyChar() == '+'\n                    || e.getKeyChar() == '-')))\n        {\n            return false;\n        }\n\n        boolean singleWindowRule\n            = GuiActivator.getUIService().getSingleWindowContainer() == null\n                || contactList.getComponent().isFocusOwner();\n\n        if (!searchField.isFocusOwner()\n            && keyManager.getFocusOwner() != null\n            && singleWindowRule\n            && keyManager.getFocusOwner()\n                .equals(keyManager.getPermanentFocusOwner()))\n        {\n            // Request the focus in the search field if a letter is typed.\n            searchField.requestFocusInWindow();\n\n            // We re-dispatch the event to search field.\n            keyManager.redispatchEvent(searchField, e);\n\n            // We don't want to dispatch further this event.\n            return true;\n        }\n        return false;\n    }","id":69381,"modified_method":"/**\n     * Dispatches the given <tt>KeyEvent<\/tt>.\n     * @param e the <tt>KeyEvent<\/tt> to dispatch\n     * @return <tt>true<\/tt> if the KeyboardFocusManager should take no\n     * further action with regard to the KeyEvent; <tt>false<\/tt>\n     * otherwise\n     */\n    public boolean dispatchKeyEvent(KeyEvent e)\n    {\n        Component focusOwner = keyManager.getFocusOwner();\n\n        // If this window is not the focus window  or if the event is not\n        // of type PRESSED we have nothing more to do here.\n        if (!contactListContainer.isFocused()\n            || (e.getID() != KeyEvent.KEY_PRESSED\n                && e.getID() != KeyEvent.KEY_TYPED)\n            || (GuiActivator.getUIService()\n                    .getSingleWindowContainer() != null)\n                && GuiActivator.getUIService()\n                    .getSingleWindowContainer().containsFocus()\n            || (focusOwner != null\n                && !searchField.isFocusOwner()\n                && focusOwner instanceof JTextComponent))\n            return false;\n\n        // Ctrl-Enter || Cmd-Enter typed when this window is the focused\n        // window.\n        //\n        // Tried to make this with key bindings first, but has a problem\n        // with enter key binding. When the popup menu containing call\n        // contacts was opened the default keyboard manager was prioritizing\n        // the window ENTER key, which will open a chat and we wanted that\n        // the enter starts a call with the selected contact from the menu.\n        // This is why we need to do it here and to check if the\n        // permanent focus owner is equal to the focus owner, which is not\n        // the case when a popup menu is opened.\n        if (e.getKeyCode() == KeyEvent.VK_ENTER\n            && (e.isControlDown() || e.isMetaDown()))\n        {\n            contactListContainer.ctrlEnterKeyTyped();\n            return false;\n        }\n        else if (e.getKeyCode() == KeyEvent.VK_ENTER\n            && keyManager.getFocusOwner()\n            .equals(keyManager.getPermanentFocusOwner()))\n        {\n            contactListContainer.enterKeyTyped();\n            return false;\n        }\n\n        // If the search field is the focus owner.\n        if (searchField.isFocusOwner()\n            && (e.getKeyCode() == KeyEvent.VK_UP\n                || e.getKeyCode() == KeyEvent.VK_DOWN\n                || e.getKeyCode() == KeyEvent.VK_PAGE_UP\n                || e.getKeyCode() == KeyEvent.VK_PAGE_DOWN))\n        {\n            contactList.selectFirstContact();\n            contactList.getComponent().requestFocus();\n            return false;\n        }\n\n        // If the contact list is the focus owner.\n        if (contactList.getComponent().isFocusOwner()\n            && e.getKeyCode() == KeyEvent.VK_ESCAPE)\n        {\n            // Removes all current selections.\n            contactList.removeSelection();\n\n            if (searchField.getText() != null)\n            {\n                searchField.requestFocus();\n            }\n            return false;\n        }\n\n        UIGroup selectedGroup = contactList.getSelectedGroup();\n\n        // No matter who is the focus owner.\n        if (e.getKeyChar() == KeyEvent.CHAR_UNDEFINED\n            || e.getKeyCode() == KeyEvent.VK_ENTER\n            || e.getKeyCode() == KeyEvent.VK_DELETE\n            || e.getKeyCode() == KeyEvent.VK_BACK_SPACE\n            || e.getKeyCode() == KeyEvent.VK_TAB\n            || e.getKeyCode() == KeyEvent.VK_SPACE\n            || (selectedGroup != null\n                && (e.getKeyChar() == '+'\n                    || e.getKeyChar() == '-')))\n        {\n            return false;\n        }\n\n        boolean singleWindowRule\n            = GuiActivator.getUIService().getSingleWindowContainer() == null\n                || contactList.getComponent().isFocusOwner();\n\n        if (!searchField.isFocusOwner()\n            && keyManager.getFocusOwner() != null\n            && singleWindowRule\n            && keyManager.getFocusOwner()\n                .equals(keyManager.getPermanentFocusOwner()))\n        {\n            // Request the focus in the search field if a letter is typed.\n            searchField.requestFocusInWindow();\n\n            // We re-dispatch the event to search field.\n            keyManager.redispatchEvent(searchField, e);\n\n            // We don't want to dispatch further this event.\n            return true;\n        }\n        return false;\n    }","commit_id":"6810fdc9c7fe043e6a6516d6a84aaa9c1a204dc9","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Created a new module from the provided parameters.<p>\n     * \n     * @param name the name of this module, usually looks like a java package name\n     * @param niceName the \"nice\" display name of this module\n     * @param group the group of the module\n     * @param actionClass the (optional) module action class name\n     * @param description the description of this module\n     * @param version the version of this module\n     * @param authorName the name of the author of this module\n     * @param authorEmail the email of the module author\n     * @param dateCreated the date this module was created by the author\n     * @param userInstalled the name of the user who uploaded this module\n     * @param dateInstalled the date this module was uploaded\n     */\n    public void createdModule(\n        String name,\n        String niceName,\n        String group,\n        String actionClass,\n        String description,\n        String version,\n        String authorName,\n        String authorEmail,\n        String dateCreated,\n        String userInstalled,\n        String dateInstalled) {\n\n        String moduleName;\n\n        if (!CmsStringUtil.isValidJavaClassName(name)) {\n            // ensure backward compatibility with old (5.0) module names\n            LOG.error(Messages.get().getBundle().key(Messages.LOG_INVALID_MOD_NAME_IMPORTED_1, name));\n            moduleName = makeValidJavaClassName(name);\n            LOG.error(Messages.get().getBundle().key(Messages.LOG_CORRECTED_MOD_NAME_1, moduleName));\n        } else {\n            moduleName = name;\n        }\n\n        // parse the module version\n        CmsModuleVersion moduleVersion = new CmsModuleVersion(version);\n\n        // parse date created\n        long moduleDateCreated = CmsModule.DEFAULT_DATE;\n        if (dateCreated != null) {\n            try {\n                moduleDateCreated = CmsDateUtil.parseHeaderDate(dateCreated);\n            } catch (ParseException e) {\n                // noop\n            }\n        }\n\n        // parse date installed\n        long moduleDateInstalled = CmsModule.DEFAULT_DATE;\n        if (dateInstalled != null) {\n            try {\n                moduleDateInstalled = CmsDateUtil.parseHeaderDate(dateInstalled);\n            } catch (ParseException e1) {\n                // noop\n            }\n        }\n\n        if (m_oldModule) {\n            // make sure module path is added to resources for \"old\" (5.0.x) modules\n            String modulePath = CmsWorkplace.VFS_PATH_MODULES + name + \"/\";\n            m_resources.add(modulePath);\n        }\n\n        // now create the module\n        m_module = new CmsModule(\n            moduleName,\n            niceName,\n            group,\n            actionClass,\n            description,\n            moduleVersion,\n            authorName,\n            authorEmail,\n            moduleDateCreated,\n            userInstalled,\n            moduleDateInstalled,\n            m_dependencies,\n            m_exportPoints,\n            m_resources,\n            m_parameters);\n\n        // set the additional resource types;\n        m_module.setResourceTypes(m_resourceTypes);\n\n        // set the additional explorer types\n        m_module.setExplorerTypes(m_explorerTypeSettings);\n    }","id":69382,"modified_method":"/**\n     * Created a new module from the provided parameters.<p>\n     * \n     * @param name the name of this module, usually looks like a java package name\n     * @param niceName the \"nice\" display name of this module\n     * @param group the group of the module\n     * @param actionClass the (optional) module action class name\n     * @param description the description of this module\n     * @param version the version of this module\n     * @param authorName the name of the author of this module\n     * @param authorEmail the email of the module author\n     * @param dateCreated the date this module was created by the author\n     * @param userInstalled the name of the user who uploaded this module\n     * @param dateInstalled the date this module was uploaded\n     */\n    public void createdModule(\n        String name,\n        String niceName,\n        String group,\n        String actionClass,\n        String description,\n        String version,\n        String authorName,\n        String authorEmail,\n        String dateCreated,\n        String userInstalled,\n        String dateInstalled) {\n\n        String moduleName;\n\n        if (!CmsStringUtil.isValidJavaClassName(name)) {\n            // ensure backward compatibility with old (5.0) module names\n            LOG.error(Messages.get().getBundle().key(Messages.LOG_INVALID_MOD_NAME_IMPORTED_1, name));\n            moduleName = makeValidJavaClassName(name);\n            LOG.error(Messages.get().getBundle().key(Messages.LOG_CORRECTED_MOD_NAME_1, moduleName));\n        } else {\n            moduleName = name;\n        }\n\n        // parse the module version\n        CmsModuleVersion moduleVersion = new CmsModuleVersion(version);\n\n        // parse date created\n        long moduleDateCreated = CmsModule.DEFAULT_DATE;\n        if (dateCreated != null) {\n            try {\n                moduleDateCreated = CmsDateUtil.parseHeaderDate(dateCreated);\n            } catch (ParseException e) {\n                // noop\n            }\n        }\n\n        // parse date installed\n        long moduleDateInstalled = CmsModule.DEFAULT_DATE;\n        if (dateInstalled != null) {\n            try {\n                moduleDateInstalled = CmsDateUtil.parseHeaderDate(dateInstalled);\n            } catch (ParseException e1) {\n                // noop\n            }\n        }\n\n        if (m_oldModule) {\n            // make sure module path is added to resources for \"old\" (5.0.x) modules\n            String modulePath = CmsWorkplace.VFS_PATH_MODULES + name + \"/\";\n            m_resources.add(modulePath);\n        }\n\n        // now create the module\n        m_module = new CmsModule(\n            moduleName,\n            niceName,\n            group,\n            actionClass,\n            description,\n            moduleVersion,\n            authorName,\n            authorEmail,\n            moduleDateCreated,\n            userInstalled,\n            moduleDateInstalled,\n            m_dependencies,\n            m_exportPoints,\n            m_resources,\n            m_parameters);\n\n        // store module name in the additional resource types\n        List<I_CmsResourceType> moduleResourceTypes = new ArrayList<I_CmsResourceType>(m_resourceTypes.size());\n        for (Iterator<I_CmsResourceType> i = m_resourceTypes.iterator(); i.hasNext();) {\n            I_CmsResourceType resType = i.next();\n            resType.setModuleName(moduleName);\n            moduleResourceTypes.add(resType);\n        }\n        // set the additional resource types;\n        m_module.setResourceTypes(moduleResourceTypes);\n\n        // set the additional explorer types\n        m_module.setExplorerTypes(m_explorerTypeSettings);\n    }","commit_id":"d4aecb7a0c8e62cbde0e98b4ade65455ec2113cb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.file.types.I_CmsResourceType#getFormatterForContainerType(CmsObject, CmsResource, String)\n     */\n    @Override\n    public String getFormatterForContainerType(CmsObject cms, CmsResource resource, String containerType) {\n\n        if (containerType.equals(CmsDefaultXmlContentHandler.DEFAULT_FORMATTER_TYPE)) {\n            return CmsDefaultXmlContentHandler.DEFAULT_FORMATTER;\n        }\n        try {\n            CmsProperty formatterProp = cms.readPropertyObject(resource, PROPERTY_FORMATTER, true);\n            String formatter = formatterProp.getValue();\n            if (!CmsStringUtil.isEmptyOrWhitespaceOnly(formatter)) {\n                CmsMacroResolver resolver = CmsMacroResolver.newInstance();\n                resolver.addMacro(MACRO_CONTAINERTYPE, containerType);\n                formatter = resolver.resolveMacros(formatter);\n                CmsProperty typesProp = cms.readPropertyObject(resource, PROPERTY_CONTAINERTYPES, true);\n                List<String> types = typesProp.getValueList();\n                if (types.isEmpty() || types.contains(containerType)) {\n                    return formatter;\n                }\n            }\n        } catch (CmsException e) {\n            if (LOG.isErrorEnabled()) {\n                LOG.error(Messages.get().getBundle().key(\n                    Messages.ERR_READING_FORMATTER_CONFIGURATION_1,\n                    cms.getSitePath(resource)), e);\n            }\n        }\n        return null;\n    }","id":69383,"modified_method":"/**\n     * @see org.opencms.file.types.I_CmsResourceType#getFormatterForContainerType(CmsObject, CmsResource, String)\n     */\n    @Override\n    public String getFormatterForContainerType(CmsObject cms, CmsResource resource, String containerType) {\n\n        if (CmsDefaultXmlContentHandler.DEFAULT_FORMATTER_TYPE.equals(containerType)) {\n            return CmsDefaultXmlContentHandler.DEFAULT_FORMATTER;\n        }\n        try {\n            String formatter = cms.readPropertyObject(resource, PROPERTY_FORMATTER, true).getValue();\n            List<String> types = Collections.emptyList();\n            if (CmsStringUtil.isEmptyOrWhitespaceOnly(formatter)) {\n                // try to read the formatter from module parameters\n                I_CmsResourceType resType = OpenCms.getResourceManager().getResourceType(resource);\n                if (resType.isAdditionalModuleResourceType()) {\n                    String moduleName = resType.getModuleName();\n                    CmsModule module = OpenCms.getModuleManager().getModule(moduleName);\n                    // read formatter and container types from module parameters\n                    formatter = module.getParameter(resType.getTypeName() + MODULE_PARAM_SUFFIX_FORMATTER);\n                    String typesStr = module.getParameter(resType.getTypeName() + MODULE_PARAM_SUFFIX_CONTAINERTYPES);\n                    if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(typesStr)) {\n                        types = CmsStringUtil.splitAsList(typesStr, CmsProperty.VALUE_LIST_DELIMITER);\n                    }\n                }\n            }\n            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(formatter)) {\n                // found a formatter, now resolve container type macro in formatter path (if present)\n                CmsMacroResolver resolver = CmsMacroResolver.newInstance().setKeepEmptyMacros(true);\n                resolver.addMacro(MACRO_CONTAINERTYPE, containerType);\n                formatter = resolver.resolveMacros(formatter);\n                if (types.isEmpty()) {\n                    // still not found types, read them from the property\n                    types = cms.readPropertyObject(resource, PROPERTY_CONTAINERTYPES, true).getValueList();\n                }\n                if (types.isEmpty() || types.contains(containerType)) {\n                    return formatter;\n                }\n                // container type not part of the specified types, formatter is not valid\n                return null;\n            }\n        } catch (CmsException e) {\n            if (LOG.isErrorEnabled()) {\n                LOG.error(Messages.get().getBundle().key(\n                    Messages.ERR_READING_FORMATTER_CONFIGURATION_1,\n                    cms.getSitePath(resource)), e);\n            }\n        }\n        // try to get formatter out of XSD as fall back\n        return super.getFormatterForContainerType(cms, resource, containerType);\n    }","commit_id":"d4aecb7a0c8e62cbde0e98b4ade65455ec2113cb","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\r\n     * Constructor.<p>\r\n     * \r\n     * @param content the preview content\r\n     * @param url the preview URL\r\n     * @param newWindowRequired flag indicating that the preview should be opened in a new window\r\n     */\r\n    public CmsPreviewInfo(String content, String url, boolean newWindowRequired) {\r\n\r\n        m_previewContent = content;\r\n        m_previewUrl = url;\r\n        m_newWindowRequired = newWindowRequired;\r\n    }","id":69384,"modified_method":"/**\r\n     * Constructor.<p>\r\n     * \r\n     * @param content the preview content\r\n     * @param url the preview URL\r\n     * @param newWindowRequired flag indicating that the preview should be opened in a new window\r\n     * @param title the title\r\n     * @param sitePath the site path\r\n     */\r\n    public CmsPreviewInfo(String content, String url, boolean newWindowRequired, String title, String sitePath) {\r\n\r\n        m_previewContent = content;\r\n        m_previewUrl = url;\r\n        m_newWindowRequired = newWindowRequired;\r\n        m_title = title;\r\n        m_sitePath = sitePath;\r\n    }","commit_id":"8c31e3fbd432e1b381c50efe6a2b82f711fe348c","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns the preview info for the given resource.<p>\n     * \n     * @param resource the resource\n     * @param locale the requested locale\n     * \n     * @return the preview info\n     */\n    private CmsPreviewInfo getPreviewInfo(CmsResource resource, Locale locale) {\n\n        CmsObject cms = getCmsObject();\n        if (CmsResourceTypeXmlContainerPage.isContainerPage(resource) || CmsResourceTypeXmlPage.isXmlPage(resource)) {\n            return new CmsPreviewInfo(null, OpenCms.getLinkManager().substituteLinkForUnknownTarget(\n                cms,\n                resource.getRootPath())\n                + \"?\"\n                + CmsJspTagEditable.PARAM_DISABLE_DIRECT_EDIT\n                + \"=true\", false);\n        }\n        if (CmsResourceTypeImage.getStaticTypeId() == resource.getTypeId()) {\n            CmsImageScaler scaler = new CmsImageScaler(cms, resource);\n            String title = \"\";\n            CmsProperty titleProperty;\n            try {\n                titleProperty = cms.readPropertyObject(resource, CmsPropertyDefinition.PROPERTY_TITLE, false);\n                title = titleProperty.getValue(\"\");\n            } catch (CmsException e) {\n                LOG.warn(e.getLocalizedMessage(), e);\n            }\n            String content = \"<img src=\\\"\"\n                + OpenCms.getLinkManager().substituteLinkForUnknownTarget(cms, resource.getRootPath())\n                + \"\\\" title=\\\"\"\n                + title\n                + \"\\\" style=\\\"display:block\\\" />\";\n            CmsPreviewInfo result = new CmsPreviewInfo(content, null, false);\n            result.setHeight(scaler.getHeight());\n            result.setWidth(scaler.getWidth());\n            return result;\n        }\n        if (CmsResourceTypeXmlContent.isXmlContent(resource)) {\n            String previewContent = CmsPreviewService.getPreviewContent(\n                getRequest(),\n                getResponse(),\n                cms,\n                resource,\n                locale);\n            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(previewContent)) {\n                return new CmsPreviewInfo(previewContent, null, false);\n            }\n        }\n        return new CmsPreviewInfo(null, cms.getSitePath(resource)\n            + \"?\"\n            + CmsJspTagEditable.PARAM_DISABLE_DIRECT_EDIT\n            + \"=true\", true);\n    }","id":69385,"modified_method":"/**\n     * Returns the preview info for the given resource.<p>\n     * \n     * @param resource the resource\n     * @param locale the requested locale\n     * \n     * @return the preview info\n     */\n    private CmsPreviewInfo getPreviewInfo(CmsResource resource, Locale locale) {\n\n        CmsObject cms = getCmsObject();\n        String title = \"\";\n        try {\n            CmsProperty titleProperty = cms.readPropertyObject(resource, CmsPropertyDefinition.PROPERTY_TITLE, false);\n            title = titleProperty.getValue(\"\");\n        } catch (CmsException e) {\n            LOG.warn(e.getLocalizedMessage(), e);\n        }\n        if (CmsResourceTypeXmlContainerPage.isContainerPage(resource) || CmsResourceTypeXmlPage.isXmlPage(resource)) {\n            return new CmsPreviewInfo(null, OpenCms.getLinkManager().substituteLinkForUnknownTarget(\n                cms,\n                resource.getRootPath())\n                + \"?\"\n                + CmsJspTagEditable.PARAM_DISABLE_DIRECT_EDIT\n                + \"=true\", false, title, cms.getSitePath(resource));\n        }\n        if (CmsResourceTypeImage.getStaticTypeId() == resource.getTypeId()) {\n            CmsImageScaler scaler = new CmsImageScaler(cms, resource);\n            String content = \"<img src=\\\"\"\n                + OpenCms.getLinkManager().substituteLinkForUnknownTarget(cms, resource.getRootPath())\n                + \"\\\" title=\\\"\"\n                + title\n                + \"\\\" style=\\\"display:block\\\" />\";\n            CmsPreviewInfo result = new CmsPreviewInfo(content, null, false, title, cms.getSitePath(resource));\n            result.setHeight(scaler.getHeight());\n            result.setWidth(scaler.getWidth());\n            return result;\n        }\n        if (CmsResourceTypeXmlContent.isXmlContent(resource)) {\n            String previewContent = CmsPreviewService.getPreviewContent(\n                getRequest(),\n                getResponse(),\n                cms,\n                resource,\n                locale);\n            if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(previewContent)) {\n                return new CmsPreviewInfo(previewContent, null, false, title, cms.getSitePath(resource));\n            }\n        }\n        return new CmsPreviewInfo(null, OpenCms.getLinkManager().substituteLinkForUnknownTarget(\n            cms,\n            resource.getRootPath())\n            + \"?\"\n            + CmsJspTagEditable.PARAM_DISABLE_DIRECT_EDIT\n            + \"=true\", true, title, cms.getSitePath(resource));\n    }","commit_id":"8c31e3fbd432e1b381c50efe6a2b82f711fe348c","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public void run()\n    {\n        InputStream in = null;\n        PrintStream out = null;\n        PrintStream err = null;\n        WritableByteChannel errChannel = (WritableByteChannel) streams[2];\n\n        Channel[] prevStreams = tStreams.get();\n        try\n        {\n            if (executable instanceof Statement) {\n                Statement statement = (Statement) executable;\n                List<Token> tokens = statement.redirections();\n                for (int i = 0; i < tokens.size(); i++) {\n                    Token t = tokens.get(i);\n                    Matcher m;\n                    if ((m = Pattern.compile(\"(?:([0-9])?|(&)?)>(>)?\").matcher(t)).matches()) {\n                        int fd;\n                        if (m.group(1) != null) {\n                            fd = Integer.parseInt(m.group(1));\n                        }\n                        else if (m.group(2) != null) {\n                            fd = -1; // both 1 and 2\n                        } else {\n                            fd = 1;\n                        }\n                        boolean append = m.group(3) != null;\n                        Token file = tokens.get(++i);\n                        Path outPath = closure.session().currentDir().resolve(file.toString());\n                        Set<StandardOpenOption> options = new HashSet<StandardOpenOption>();\n                        options.add(StandardOpenOption.WRITE);\n                        options.add(StandardOpenOption.CREATE);\n                        if (append) {\n                            options.add(StandardOpenOption.APPEND);\n                        } else {\n                            options.add(StandardOpenOption.TRUNCATE_EXISTING);\n                        }\n                        Channel ch = Files.newByteChannel(outPath, options);\n                        if (fd >= 0) {\n                            setStream(ch, fd, WRITE);\n                        } else {\n                            setStream(ch, 1, WRITE);\n                            setStream(ch, 2, WRITE);\n                        }\n                    }\n                    else if ((m = Pattern.compile(\"([0-9])?>&([0-9])\").matcher(t)).matches()) {\n                        int fd0 = 1;\n                        if (m.group(1) != null) {\n                            fd0 = Integer.parseInt(m.group(1));\n                        }\n                        int fd1 = Integer.parseInt(m.group(2));\n                        if (streams[fd0] != null && toclose[fd0]) {\n                            streams[fd0].close();\n                        }\n                        streams[fd0] = streams[fd1];\n                        // TODO: this is wrong, we should keep a counter somehow so that the\n                        // stream is closed when both are closed\n                        toclose[fd0] = false;\n                    }\n                    else if ((m = Pattern.compile(\"([0-9])?<(>)?\").matcher(t)).matches()) {\n                        int fd = 0;\n                        if (m.group(1) != null) {\n                            fd = Integer.parseInt(m.group(1));\n                        }\n                        boolean output = m.group(2) != null;\n                        Token file = tokens.get(++i);\n                        Path inPath = closure.session().currentDir().resolve(file.toString());\n                        Set<StandardOpenOption> options = new HashSet<StandardOpenOption>();\n                        options.add(StandardOpenOption.READ);\n                        if (output) {\n                            options.add(StandardOpenOption.WRITE);\n                            options.add(StandardOpenOption.CREATE);\n                        }\n                        Channel ch = Files.newByteChannel(inPath, options);\n                        setStream(ch, fd, READ + (output ? WRITE : 0));\n                    }\n                }\n            } else {\n                new UnsupportedOperationException(\"what to do ?\").printStackTrace();\n            }\n\n            tStreams.set(streams);\n\n            // TODO: not sure this is the correct way\n            boolean endOfPipe = !toclose[1];\n\n            in = Channels.newInputStream((ReadableByteChannel) streams[0]);\n            out = new PrintStream(Channels.newOutputStream((WritableByteChannel) streams[1]), true);\n            err = new PrintStream(Channels.newOutputStream((WritableByteChannel) streams[2]), true);\n            errChannel = (WritableByteChannel) streams[2];\n\n            closure.session().threadIO().setStreams(in, out, err);\n\n            result = closure.execute(executable);\n            // We don't print the result if toclose[1] == false, which means we're at the end of the pipe\n            if (result != null && !endOfPipe && !Boolean.FALSE.equals(closure.session().get(\".FormatPipe\"))) {\n                out.println(closure.session().format(result, Converter.INSPECT));\n            }\n        }\n        catch (Exception e)\n        {\n            exception = e;\n            if (exit == 0) {\n                exit = 1; // failure\n            }\n            // TODO: use shell name instead of 'gogo'\n            // TODO: use color if not redirected\n            // TODO: use conversion ?\n            String msg = \"gogo: \" + e.getClass().getSimpleName() + \": \" + e.getMessage() + \"\\n\";\n            try {\n                errChannel.write(ByteBuffer.wrap(msg.getBytes()));\n            } catch (IOException ioe) {\n                e.addSuppressed(ioe);\n            }\n        }\n        finally\n        {\n            if (out != null) {\n                out.flush();\n            }\n            if (err != null) {\n                err.flush();\n            }\n            closure.session().threadIO().close();\n\n            tStreams.set(prevStreams);\n\n            try\n            {\n                for (int i = 0; i < 10; i++) {\n                    if (toclose[i] && streams[i] != null) {\n                        streams[i].close();\n                    }\n                }\n            }\n            catch (Exception e)\n            {\n                e.printStackTrace();\n            }\n        }\n    }","id":69386,"modified_method":"public void run()\n    {\n        InputStream in = null;\n        PrintStream out = null;\n        PrintStream err = null;\n        WritableByteChannel errChannel = (WritableByteChannel) streams[2];\n\n        Channel[] prevStreams = tStreams.get();\n\n        // TODO: not sure this is the correct way\n        boolean begOfPipe = !toclose[0];\n        boolean endOfPipe = !toclose[1];\n\n        try\n        {\n            if (executable instanceof Statement) {\n                Statement statement = (Statement) executable;\n                List<Token> tokens = statement.redirections();\n                for (int i = 0; i < tokens.size(); i++) {\n                    Token t = tokens.get(i);\n                    Matcher m;\n                    if ((m = Pattern.compile(\"(?:([0-9])?|(&)?)>(>)?\").matcher(t)).matches()) {\n                        int fd;\n                        if (m.group(1) != null) {\n                            fd = Integer.parseInt(m.group(1));\n                        }\n                        else if (m.group(2) != null) {\n                            fd = -1; // both 1 and 2\n                        } else {\n                            fd = 1;\n                        }\n                        boolean append = m.group(3) != null;\n                        Token file = tokens.get(++i);\n                        Path outPath = closure.session().currentDir().resolve(file.toString());\n                        Set<StandardOpenOption> options = new HashSet<StandardOpenOption>();\n                        options.add(StandardOpenOption.WRITE);\n                        options.add(StandardOpenOption.CREATE);\n                        if (append) {\n                            options.add(StandardOpenOption.APPEND);\n                        } else {\n                            options.add(StandardOpenOption.TRUNCATE_EXISTING);\n                        }\n                        Channel ch = Files.newByteChannel(outPath, options);\n                        if (fd >= 0) {\n                            setStream(ch, fd, WRITE, begOfPipe, endOfPipe);\n                        } else {\n                            setStream(ch, 1, WRITE, begOfPipe, endOfPipe);\n                            setStream(ch, 2, WRITE, begOfPipe, endOfPipe);\n                        }\n                    }\n                    else if ((m = Pattern.compile(\"([0-9])?>&([0-9])\").matcher(t)).matches()) {\n                        int fd0 = 1;\n                        if (m.group(1) != null) {\n                            fd0 = Integer.parseInt(m.group(1));\n                        }\n                        int fd1 = Integer.parseInt(m.group(2));\n                        if (streams[fd0] != null && toclose[fd0]) {\n                            streams[fd0].close();\n                        }\n                        streams[fd0] = streams[fd1];\n                        // TODO: this is wrong, we should keep a counter somehow so that the\n                        // stream is closed when both are closed\n                        toclose[fd0] = false;\n                    }\n                    else if ((m = Pattern.compile(\"([0-9])?<(>)?\").matcher(t)).matches()) {\n                        int fd = 0;\n                        if (m.group(1) != null) {\n                            fd = Integer.parseInt(m.group(1));\n                        }\n                        boolean output = m.group(2) != null;\n                        Token file = tokens.get(++i);\n                        Path inPath = closure.session().currentDir().resolve(file.toString());\n                        Set<StandardOpenOption> options = new HashSet<StandardOpenOption>();\n                        options.add(StandardOpenOption.READ);\n                        if (output) {\n                            options.add(StandardOpenOption.WRITE);\n                            options.add(StandardOpenOption.CREATE);\n                        }\n                        Channel ch = Files.newByteChannel(inPath, options);\n                        setStream(ch, fd, READ + (output ? WRITE : 0), begOfPipe, endOfPipe);\n                    }\n                }\n            } else {\n                new UnsupportedOperationException(\"what to do ?\").printStackTrace();\n            }\n\n            tStreams.set(streams);\n\n            in = Channels.newInputStream((ReadableByteChannel) streams[0]);\n            out = new PrintStream(Channels.newOutputStream((WritableByteChannel) streams[1]), true);\n            err = new PrintStream(Channels.newOutputStream((WritableByteChannel) streams[2]), true);\n            errChannel = (WritableByteChannel) streams[2];\n\n            closure.session().threadIO().setStreams(in, out, err);\n\n            result = closure.execute(executable);\n            // We don't print the result if toclose[1] == false, which means we're at the end of the pipe\n            if (result != null && !endOfPipe && !Boolean.FALSE.equals(closure.session().get(\".FormatPipe\"))) {\n                out.println(closure.session().format(result, Converter.INSPECT));\n            }\n        }\n        catch (Exception e)\n        {\n            exception = e;\n            if (exit == 0) {\n                exit = 1; // failure\n            }\n            // TODO: use shell name instead of 'gogo'\n            // TODO: use color if not redirected\n            // TODO: use conversion ?\n            String msg = \"gogo: \" + e.getClass().getSimpleName() + \": \" + e.getMessage() + \"\\n\";\n            try {\n                errChannel.write(ByteBuffer.wrap(msg.getBytes()));\n            } catch (IOException ioe) {\n                e.addSuppressed(ioe);\n            }\n        }\n        finally\n        {\n            if (out != null) {\n                out.flush();\n            }\n            if (err != null) {\n                err.flush();\n            }\n            closure.session().threadIO().close();\n\n            tStreams.set(prevStreams);\n\n            try\n            {\n                for (int i = 0; i < 10; i++) {\n                    if (toclose[i] && streams[i] != null) {\n                        streams[i].close();\n                    }\n                }\n            }\n            catch (Exception e)\n            {\n                e.printStackTrace();\n            }\n        }\n    }","commit_id":"ef58ab284a04818bb32ffb2b28e7253cfbf8519c","url":"https://github.com/apache/felix"},{"original_method":"private void setStream(Channel ch, int fd, int readWrite) throws IOException {\n        if ((readWrite & READ) != 0 && !(ch instanceof ReadableByteChannel)) {\n            throw new IllegalArgumentException(\"Channel is not readable\");\n        }\n        if ((readWrite & WRITE) != 0 && !(ch instanceof WritableByteChannel)) {\n            throw new IllegalArgumentException(\"Channel is not writable\");\n        }\n        if (fd == 0 && !(ch instanceof ReadableByteChannel)) {\n            throw new IllegalArgumentException(\"Stdin is not readable\");\n        }\n        if (fd == 1 && !(ch instanceof WritableByteChannel)) {\n            throw new IllegalArgumentException(\"Stdout is not writable\");\n        }\n        if (fd == 2 && !(ch instanceof WritableByteChannel)) {\n            throw new IllegalArgumentException(\"Stderr is not writable\");\n        }\n        // TODO: externalize\n        boolean multios = true;\n        if (multios) {\n            if (streams[fd] != null && (readWrite & READ) != 0 && (readWrite & WRITE) != 0) {\n                throw new IllegalArgumentException(\"Can not do multios with read/write streams\");\n            }\n            if ((readWrite & READ) != 0) {\n                MultiReadableByteChannel mrbc;\n                if (streams[fd] instanceof MultiReadableByteChannel) {\n                    mrbc = (MultiReadableByteChannel) streams[fd];\n                } else {\n                    mrbc = new MultiReadableByteChannel();\n                    mrbc.addChannel((ReadableByteChannel) streams[fd], toclose[fd]);\n                    streams[fd] = mrbc;\n                    toclose[fd] = true;\n                }\n                mrbc.addChannel((ReadableByteChannel) ch, true);\n            } else if ((readWrite & WRITE) != 0) {\n                MultiWritableByteChannel mrbc;\n                if (streams[fd] instanceof MultiWritableByteChannel) {\n                    mrbc = (MultiWritableByteChannel) streams[fd];\n                } else {\n                    mrbc = new MultiWritableByteChannel();\n                    mrbc.addChannel((WritableByteChannel) streams[fd], toclose[fd]);\n                    streams[fd] = mrbc;\n                    toclose[fd] = true;\n                }\n                mrbc.addChannel((WritableByteChannel) ch, true);\n            } else {\n                throw new IllegalStateException();\n            }\n        }\n        else {\n            if (streams[fd] != null && toclose[fd]) {\n                streams[fd].close();\n            }\n            streams[fd] = ch;\n            toclose[fd] = true;\n        }\n    }","id":69387,"modified_method":"private void setStream(Channel ch, int fd, int readWrite, boolean begOfPipe, boolean endOfPipe) throws IOException {\n        if ((readWrite & READ) != 0 && !(ch instanceof ReadableByteChannel)) {\n            throw new IllegalArgumentException(\"Channel is not readable\");\n        }\n        if ((readWrite & WRITE) != 0 && !(ch instanceof WritableByteChannel)) {\n            throw new IllegalArgumentException(\"Channel is not writable\");\n        }\n        if (fd == 0 && !(ch instanceof ReadableByteChannel)) {\n            throw new IllegalArgumentException(\"Stdin is not readable\");\n        }\n        if (fd == 1 && !(ch instanceof WritableByteChannel)) {\n            throw new IllegalArgumentException(\"Stdout is not writable\");\n        }\n        if (fd == 2 && !(ch instanceof WritableByteChannel)) {\n            throw new IllegalArgumentException(\"Stderr is not writable\");\n        }\n        // TODO: externalize\n        boolean multios = true;\n        if (multios) {\n            if (streams[fd] != null && (readWrite & READ) != 0 && (readWrite & WRITE) != 0) {\n                throw new IllegalArgumentException(\"Can not do multios with read/write streams\");\n            }\n            if ((readWrite & READ) != 0) {\n                MultiReadableByteChannel mrbc;\n                if (streams[fd] instanceof MultiReadableByteChannel) {\n                    mrbc = (MultiReadableByteChannel) streams[fd];\n                } else {\n                    mrbc = new MultiReadableByteChannel();\n                    if (streams[fd] != null && begOfPipe) {\n                        if (toclose[fd]) {\n                            streams[fd].close();\n                        }\n                    } else {\n                        mrbc.addChannel((ReadableByteChannel) streams[fd], toclose[fd]);\n                    }\n                    streams[fd] = mrbc;\n                    toclose[fd] = true;\n                }\n                mrbc.addChannel((ReadableByteChannel) ch, true);\n            } else if ((readWrite & WRITE) != 0) {\n                MultiWritableByteChannel mrbc;\n                if (streams[fd] instanceof MultiWritableByteChannel) {\n                    mrbc = (MultiWritableByteChannel) streams[fd];\n                } else {\n                    mrbc = new MultiWritableByteChannel();\n                    if (streams[fd] != null && endOfPipe) {\n                        if (toclose[fd]) {\n                            streams[fd].close();\n                        }\n                    } else {\n                        mrbc.addChannel((WritableByteChannel) streams[fd], toclose[fd]);\n                    }\n                    streams[fd] = mrbc;\n                    toclose[fd] = true;\n                }\n                mrbc.addChannel((WritableByteChannel) ch, true);\n            } else {\n                throw new IllegalStateException();\n            }\n        }\n        else {\n            if (streams[fd] != null && toclose[fd]) {\n                streams[fd].close();\n            }\n            streams[fd] = ch;\n            toclose[fd] = true;\n        }\n    }","commit_id":"ef58ab284a04818bb32ffb2b28e7253cfbf8519c","url":"https://github.com/apache/felix"},{"original_method":"public void testRedir() throws Exception {\n        Context c = new Context();\n        c.addCommand(\"echo\", this);\n        c.addCommand(\"tac\", this);\n\n        Path path = Paths.get(\"target/tmp\");\n        Files.createDirectories(path);\n        c.currentDir(path);\n\n        Files.deleteIfExists(path.resolve(\"foo\"));\n        assertEquals(\"hello\", c.execute(\"echo >foo | tac\"));\n        assertEquals(\"hello\\n\", new String(Files.readAllBytes(path.resolve(\"foo\"))));\n    }","id":69388,"modified_method":"public void testRedir() throws Exception {\n        Context c = new Context();\n        c.addCommand(\"echo\", this);\n        c.addCommand(\"tac\", this);\n\n        Path path = Paths.get(\"target/tmp\");\n        Files.createDirectories(path);\n        c.currentDir(path);\n\n        Files.deleteIfExists(path.resolve(\"foo\"));\n        assertEquals(\"hello\\n\", c.execute(\"echo hello>foo | tac\"));\n        assertEquals(\"hello\\n\", new String(Files.readAllBytes(path.resolve(\"foo\"))));\n    }","commit_id":"ef58ab284a04818bb32ffb2b28e7253cfbf8519c","url":"https://github.com/apache/felix"},{"original_method":"public void echoerr()\n    {\n        System.err.println(\"hello\");\n    }","id":69389,"modified_method":"public void echoerr(String msg)\n    {\n        System.err.println(msg);\n    }","commit_id":"ef58ab284a04818bb32ffb2b28e7253cfbf8519c","url":"https://github.com/apache/felix"},{"original_method":"public void testPipeErr() throws Exception\n    {\n        Context c = new Context();\n        c.addCommand(\"echo\", this);\n        c.addCommand(\"echoerr\", this);\n        c.addCommand(\"tac\", this);\n\n        assertEquals(\"hello\", c.execute(\"echo | tac\"));\n        assertEquals(\"hello\", c.execute(\"echoerr |& tac\"));\n    }","id":69390,"modified_method":"public void testPipeErr() throws Exception\n    {\n        Context c = new Context();\n        c.addCommand(\"echo\", this);\n        c.addCommand(\"echoerr\", this);\n        c.addCommand(\"tac\", this);\n\n        assertEquals(\"hello\\n\", c.execute(\"echo hello| tac\"));\n        assertEquals(\"hello\\n\", c.execute(\"echoerr hello|& tac\"));\n    }","commit_id":"ef58ab284a04818bb32ffb2b28e7253cfbf8519c","url":"https://github.com/apache/felix"},{"original_method":"public String tac() throws IOException {\n        StringWriter sw = new StringWriter();\n        BufferedReader rdr = new BufferedReader(new InputStreamReader(System.in));\n        boolean first = true;\n        String s;\n        while ((s = rdr.readLine()) != null) {\n            if (!first) {\n                sw.write(' ');\n            }\n            first = false;\n            sw.write(s);\n        }\n        return sw.toString();\n    }","id":69391,"modified_method":"public String tac() throws IOException {\n        StringWriter sw = new StringWriter();\n        Reader rdr = new InputStreamReader(System.in);\n        char[] buf = new char[1024];\n        int len;\n        while ((len = rdr.read(buf)) >= 0) {\n            sw.write(buf, 0, len);\n        }\n        return sw.toString();\n    }","commit_id":"ef58ab284a04818bb32ffb2b28e7253cfbf8519c","url":"https://github.com/apache/felix"},{"original_method":"private void setStream(Channel ch, int fd, int readWrite, boolean begOfPipe, boolean endOfPipe) throws IOException {\n        if ((readWrite & (READ | WRITE)) == 0) {\n            throw new IllegalArgumentException(\"Should specify READ and/or WRITE\");\n        }\n        if ((readWrite & READ) != 0 && !(ch instanceof ReadableByteChannel)) {\n            throw new IllegalArgumentException(\"Channel is not readable\");\n        }\n        if ((readWrite & WRITE) != 0 && !(ch instanceof WritableByteChannel)) {\n            throw new IllegalArgumentException(\"Channel is not writable\");\n        }\n        if (fd == 0 && !(ch instanceof ReadableByteChannel)) {\n            throw new IllegalArgumentException(\"Stdin is not readable\");\n        }\n        if (fd == 1 && !(ch instanceof WritableByteChannel)) {\n            throw new IllegalArgumentException(\"Stdout is not writable\");\n        }\n        if (fd == 2 && !(ch instanceof WritableByteChannel)) {\n            throw new IllegalArgumentException(\"Stderr is not writable\");\n        }\n        // TODO: externalize\n        boolean multios = true;\n        if (multios) {\n            if (streams[fd] != null && (readWrite & READ) != 0 && (readWrite & WRITE) != 0) {\n                throw new IllegalArgumentException(\"Can not do multios with read/write streams\");\n            }\n            MultiChannel mrbc;\n            if (streams[fd] instanceof MultiChannel) {\n                mrbc = (MultiChannel) streams[fd];\n            } else {\n                mrbc = new MultiChannel();\n                if (streams[fd] != null\n                        && ((begOfPipe && (readWrite & READ) != 0)\n                            || (endOfPipe && (readWrite & WRITE) != 0))) {\n                    if (toclose[fd]) {\n                        streams[fd].close();\n                    }\n                } else {\n                    mrbc.addChannel(streams[fd], toclose[fd]);\n                }\n                streams[fd] = mrbc;\n                toclose[fd] = true;\n            }\n            mrbc.addChannel(ch, true);\n        }\n        else {\n            if (streams[fd] != null && toclose[fd]) {\n                streams[fd].close();\n            }\n            streams[fd] = ch;\n            toclose[fd] = true;\n        }\n    }","id":69392,"modified_method":"private void setStream(Channel ch, int fd, int readWrite) throws IOException {\n        if ((readWrite & (READ | WRITE)) == 0) {\n            throw new IllegalArgumentException(\"Should specify READ and/or WRITE\");\n        }\n        if ((readWrite & READ) != 0 && !(ch instanceof ReadableByteChannel)) {\n            throw new IllegalArgumentException(\"Channel is not readable\");\n        }\n        if ((readWrite & WRITE) != 0 && !(ch instanceof WritableByteChannel)) {\n            throw new IllegalArgumentException(\"Channel is not writable\");\n        }\n        if (fd == 0 && (readWrite & READ) == 0) {\n            throw new IllegalArgumentException(\"Stdin is not readable\");\n        }\n        if (fd == 1 && (readWrite & WRITE) == 0) {\n            throw new IllegalArgumentException(\"Stdout is not writable\");\n        }\n        if (fd == 2 && (readWrite & WRITE) == 0) {\n            throw new IllegalArgumentException(\"Stderr is not writable\");\n        }\n        // TODO: externalize\n        boolean multios = true;\n        if (multios) {\n            if (streams[fd] != null && (readWrite & READ) != 0 && (readWrite & WRITE) != 0) {\n                throw new IllegalArgumentException(\"Can not do multios with read/write streams\");\n            }\n            // If channel is inherited (for example standard input / output), replace it\n            if (streams[fd] != null && !toclose[fd]) {\n                streams[fd] = ch;\n                toclose[fd] = true;\n            }\n            // Else do multios\n            else {\n                MultiChannel mrbc;\n                // If the channel is already multios\n                if (streams[fd] instanceof MultiChannel) {\n                    mrbc = (MultiChannel) streams[fd];\n                }\n                // Else create a multios channel\n                else {\n                    mrbc = new MultiChannel();\n                    mrbc.addChannel(streams[fd], toclose[fd]);\n                    streams[fd] = mrbc;\n                    toclose[fd] = true;\n                }\n                mrbc.addChannel(ch, true);\n            }\n        }\n        else {\n            if (streams[fd] != null && toclose[fd]) {\n                streams[fd].close();\n            }\n            streams[fd] = ch;\n            toclose[fd] = true;\n        }\n    }","commit_id":"750f17703e925c6b386d8412016c77cd5d52175d","url":"https://github.com/apache/felix"},{"original_method":"private Result doCall()\n    {\n        InputStream in;\n        PrintStream out = null;\n        PrintStream err = null;\n\n        // The errChannel will be used to print errors to the error stream\n        // Before the command is actually executed (i.e. during the initialization,\n        // including the redirection processing), it will be the original error stream.\n        // This value may be modified by redirections and the redirected error stream\n        // will be effective just before actually running the command.\n        WritableByteChannel errChannel = (WritableByteChannel) streams[2];\n\n        // TODO: not sure this is the correct way\n        boolean begOfPipe = !toclose[0];\n        boolean endOfPipe = !toclose[1];\n\n        try\n        {\n            List<Token> tokens = statement.redirections();\n            for (int i = 0; i < tokens.size(); i++) {\n                Token t = tokens.get(i);\n                Matcher m;\n                if ((m = Pattern.compile(\"(?:([0-9])?|(&)?)>(>)?\").matcher(t)).matches()) {\n                    int fd;\n                    if (m.group(1) != null) {\n                        fd = Integer.parseInt(m.group(1));\n                    }\n                    else if (m.group(2) != null) {\n                        fd = -1; // both 1 and 2\n                    } else {\n                        fd = 1;\n                    }\n                    boolean append = m.group(3) != null;\n                    Token file = tokens.get(++i);\n                    Path outPath = closure.session().currentDir().resolve(file.toString());\n                    Set<StandardOpenOption> options = new HashSet<>();\n                    options.add(StandardOpenOption.WRITE);\n                    options.add(StandardOpenOption.CREATE);\n                    if (append) {\n                        options.add(StandardOpenOption.APPEND);\n                    } else {\n                        options.add(StandardOpenOption.TRUNCATE_EXISTING);\n                    }\n                    Channel ch = Files.newByteChannel(outPath, options);\n                    if (fd >= 0) {\n                        setStream(ch, fd, WRITE, begOfPipe, endOfPipe);\n                    } else {\n                        setStream(ch, 1, WRITE, begOfPipe, endOfPipe);\n                        setStream(ch, 2, WRITE, begOfPipe, endOfPipe);\n                    }\n                }\n                else if ((m = Pattern.compile(\"([0-9])?>&([0-9])\").matcher(t)).matches()) {\n                    int fd0 = 1;\n                    if (m.group(1) != null) {\n                        fd0 = Integer.parseInt(m.group(1));\n                    }\n                    int fd1 = Integer.parseInt(m.group(2));\n                    if (streams[fd0] != null && toclose[fd0]) {\n                        streams[fd0].close();\n                    }\n                    streams[fd0] = streams[fd1];\n                    // TODO: this is wrong, we should keep a counter somehow so that the\n                    // stream is closed when both are closed\n                    toclose[fd0] = false;\n                }\n                else if ((m = Pattern.compile(\"([0-9])?<(>)?\").matcher(t)).matches()) {\n                    int fd = 0;\n                    if (m.group(1) != null) {\n                        fd = Integer.parseInt(m.group(1));\n                    }\n                    boolean output = m.group(2) != null;\n                    Token file = tokens.get(++i);\n                    Path inPath = closure.session().currentDir().resolve(file.toString());\n                    Set<StandardOpenOption> options = new HashSet<>();\n                    options.add(StandardOpenOption.READ);\n                    if (output) {\n                        options.add(StandardOpenOption.WRITE);\n                        options.add(StandardOpenOption.CREATE);\n                    }\n                    Channel ch = Files.newByteChannel(inPath, options);\n                    setStream(ch, fd, READ + (output ? WRITE : 0), begOfPipe, endOfPipe);\n                }\n            }\n\n            for (int i = 0; i < streams.length; i++) {\n                streams[i] = wrap(streams[i]);\n            }\n\n            // Create streams\n            in = Channels.newInputStream((ReadableByteChannel) streams[0]);\n            out = new PrintStream(Channels.newOutputStream((WritableByteChannel) streams[1]), true);\n            err = new PrintStream(Channels.newOutputStream((WritableByteChannel) streams[2]), true);\n            // Change the error stream to the redirected one, now that\n            // the command is about to be executed.\n            errChannel = (WritableByteChannel) streams[2];\n\n            closure.session().threadIO().setStreams(in, out, err);\n\n            Pipe previous = setCurrentPipe(this);\n            try {\n                Object result = closure.execute(statement);\n                // If an error has been set\n                if (error != 0) {\n                    return new Result(error);\n                }\n                // We don't print the result if we're at the end of the pipe\n                if (result != null && !endOfPipe && !Boolean.FALSE.equals(closure.session().get(\".FormatPipe\"))) {\n                    out.println(closure.session().format(result, Converter.INSPECT));\n                }\n                return new Result(result);\n\n            } finally {\n                setCurrentPipe(previous);\n            }\n        }\n        catch (Exception e)\n        {\n            // TODO: use shell name instead of 'gogo'\n            // TODO: use color if not redirected\n            // TODO: use conversion ?\n            String msg = \"gogo: \" + e.getClass().getSimpleName() + \": \" + e.getMessage() + \"\\n\";\n            try {\n                errChannel.write(ByteBuffer.wrap(msg.getBytes()));\n            } catch (IOException ioe) {\n                e.addSuppressed(ioe);\n            }\n            return new Result(e);\n        }\n        finally\n        {\n            if (out != null) {\n                out.flush();\n            }\n            if (err != null) {\n                err.flush();\n            }\n            closure.session().threadIO().close();\n\n            try\n            {\n                for (int i = 0; i < 10; i++) {\n                    if (toclose[i] && streams[i] != null) {\n                        streams[i].close();\n                    }\n                }\n            }\n            catch (Exception e)\n            {\n                e.printStackTrace();\n            }\n        }\n    }","id":69393,"modified_method":"private Result doCall()\n    {\n        InputStream in;\n        PrintStream out = null;\n        PrintStream err = null;\n\n        // The errChannel will be used to print errors to the error stream\n        // Before the command is actually executed (i.e. during the initialization,\n        // including the redirection processing), it will be the original error stream.\n        // This value may be modified by redirections and the redirected error stream\n        // will be effective just before actually running the command.\n        WritableByteChannel errChannel = (WritableByteChannel) streams[2];\n\n        boolean endOfPipe = !toclose[1];\n\n        try\n        {\n            List<Token> tokens = statement.redirections();\n            for (int i = 0; i < tokens.size(); i++) {\n                Token t = tokens.get(i);\n                Matcher m;\n                if ((m = Pattern.compile(\"(?:([0-9])?|(&)?)>(>)?\").matcher(t)).matches()) {\n                    int fd;\n                    if (m.group(1) != null) {\n                        fd = Integer.parseInt(m.group(1));\n                    }\n                    else if (m.group(2) != null) {\n                        fd = -1; // both 1 and 2\n                    } else {\n                        fd = 1;\n                    }\n                    boolean append = m.group(3) != null;\n                    Token file = tokens.get(++i);\n                    Path outPath = closure.session().currentDir().resolve(file.toString());\n                    Set<StandardOpenOption> options = new HashSet<>();\n                    options.add(StandardOpenOption.WRITE);\n                    options.add(StandardOpenOption.CREATE);\n                    if (append) {\n                        options.add(StandardOpenOption.APPEND);\n                    } else {\n                        options.add(StandardOpenOption.TRUNCATE_EXISTING);\n                    }\n                    Channel ch = Files.newByteChannel(outPath, options);\n                    if (fd >= 0) {\n                        setStream(ch, fd, WRITE);\n                    } else {\n                        setStream(ch, 1, WRITE);\n                        setStream(ch, 2, WRITE);\n                    }\n                }\n                else if ((m = Pattern.compile(\"([0-9])?>&([0-9])\").matcher(t)).matches()) {\n                    int fd0 = 1;\n                    if (m.group(1) != null) {\n                        fd0 = Integer.parseInt(m.group(1));\n                    }\n                    int fd1 = Integer.parseInt(m.group(2));\n                    if (streams[fd0] != null && toclose[fd0]) {\n                        streams[fd0].close();\n                    }\n                    streams[fd0] = streams[fd1];\n                    // TODO: this is wrong, we should keep a counter somehow so that the\n                    // stream is closed when both are closed\n                    toclose[fd0] = false;\n                }\n                else if ((m = Pattern.compile(\"([0-9])?<(>)?\").matcher(t)).matches()) {\n                    int fd = 0;\n                    if (m.group(1) != null) {\n                        fd = Integer.parseInt(m.group(1));\n                    }\n                    boolean output = m.group(2) != null;\n                    Token file = tokens.get(++i);\n                    Path inPath = closure.session().currentDir().resolve(file.toString());\n                    Set<StandardOpenOption> options = new HashSet<>();\n                    options.add(StandardOpenOption.READ);\n                    if (output) {\n                        options.add(StandardOpenOption.WRITE);\n                        options.add(StandardOpenOption.CREATE);\n                    }\n                    Channel ch = Files.newByteChannel(inPath, options);\n                    setStream(ch, fd, READ + (output ? WRITE : 0));\n                }\n            }\n\n            for (int i = 0; i < streams.length; i++) {\n                streams[i] = wrap(streams[i]);\n            }\n\n            // Create streams\n            in = Channels.newInputStream((ReadableByteChannel) streams[0]);\n            out = new PrintStream(Channels.newOutputStream((WritableByteChannel) streams[1]), true);\n            err = new PrintStream(Channels.newOutputStream((WritableByteChannel) streams[2]), true);\n            // Change the error stream to the redirected one, now that\n            // the command is about to be executed.\n            errChannel = (WritableByteChannel) streams[2];\n\n            closure.session().threadIO().setStreams(in, out, err);\n\n            Pipe previous = setCurrentPipe(this);\n            try {\n                Object result = closure.execute(statement);\n                // If an error has been set\n                if (error != 0) {\n                    return new Result(error);\n                }\n                // We don't print the result if we're at the end of the pipe\n                if (result != null && !endOfPipe && !Boolean.FALSE.equals(closure.session().get(\".FormatPipe\"))) {\n                    out.println(closure.session().format(result, Converter.INSPECT));\n                }\n                return new Result(result);\n\n            } finally {\n                setCurrentPipe(previous);\n            }\n        }\n        catch (Exception e)\n        {\n            // TODO: use shell name instead of 'gogo'\n            // TODO: use color if not redirected\n            // TODO: use conversion ?\n            String msg = \"gogo: \" + e.getClass().getSimpleName() + \": \" + e.getMessage() + \"\\n\";\n            try {\n                errChannel.write(ByteBuffer.wrap(msg.getBytes()));\n            } catch (IOException ioe) {\n                e.addSuppressed(ioe);\n            }\n            return new Result(e);\n        }\n        finally\n        {\n            if (out != null) {\n                out.flush();\n            }\n            if (err != null) {\n                err.flush();\n            }\n            closure.session().threadIO().close();\n\n            try\n            {\n                for (int i = 0; i < 10; i++) {\n                    if (toclose[i] && streams[i] != null) {\n                        streams[i].close();\n                    }\n                }\n            }\n            catch (Exception e)\n            {\n                e.printStackTrace();\n            }\n        }\n    }","commit_id":"750f17703e925c6b386d8412016c77cd5d52175d","url":"https://github.com/apache/felix"},{"original_method":"public static void attachJdkAnnotations(@NotNull SdkModificator modificator) {\n    LocalFileSystem lfs = LocalFileSystem.getInstance();\n    // community idea under idea\n    VirtualFile root = lfs.findFileByPath(FileUtil.toSystemIndependentName(PathManager.getHomePath()) + \"/java/jdkAnnotations\");\n\n    if (root == null) {  // idea under idea\n      root = lfs.findFileByPath(FileUtil.toSystemIndependentName(PathManager.getHomePath()) + \"/community/java/jdkAnnotations\");\n    }\n    if (root == null) { // build\n      root = VirtualFileManager.getInstance().findFileByUrl(\"jar://\"+ FileUtil.toSystemIndependentName(PathManager.getHomePath()) + \"/lib/jdkAnnotations.jar!/\");\n    }\n    if (root == null) {\n      LOG.error(\"jdk annotations not found in: \"+ FileUtil.toSystemIndependentName(PathManager.getHomePath()) + \"/lib/jdkAnnotations.jar!/\");\n      return;\n    }\n\n    OrderRootType annoType = AnnotationOrderRootType.getInstance();\n    modificator.removeRoot(root, annoType);\n    modificator.addRoot(root, annoType);\n  }","id":69394,"modified_method":"public static void attachJdkAnnotations(@NotNull SdkModificator modificator) {\n    LocalFileSystem lfs = LocalFileSystem.getInstance();\n    List<String> pathsChecked = new ArrayList<String>();\n    // community idea under idea\n    String path = FileUtil.toSystemIndependentName(PathManager.getHomePath()) + \"/java/jdkAnnotations\";\n    VirtualFile root = lfs.findFileByPath(path);\n    pathsChecked.add(path);\n\n    if (root == null) {  // idea under idea\n      path = FileUtil.toSystemIndependentName(PathManager.getHomePath()) + \"/community/java/jdkAnnotations\";\n      root = lfs.findFileByPath(path);\n      pathsChecked.add(path);\n    }\n    if (root == null) { // build\n      String url = \"jar://\" + FileUtil.toSystemIndependentName(PathManager.getHomePath()) + \"/lib/jdkAnnotations.jar!/\";\n      root = VirtualFileManager.getInstance().findFileByUrl(url);\n      pathsChecked.add(FileUtil.toSystemIndependentName(PathManager.getHomePath()) + \"/lib/jdkAnnotations.jar\");\n    }\n    if (root == null) {\n      String msg = \"Paths checked:\\n\";\n      for (String p : pathsChecked) {\n        File file = new File(p);\n        msg += \"Path: '\"+p+\"' \"+(file.exists() ? \"Found\" : \"Not found\")+\"; directory children: \"+Arrays.toString(file.getParentFile().listFiles())+\"\\n\";\n      }\n      LOG.error(\"JDK annotations not found\", msg);\n      return;\n    }\n\n    OrderRootType annoType = AnnotationOrderRootType.getInstance();\n    modificator.removeRoot(root, annoType);\n    modificator.addRoot(root, annoType);\n  }","commit_id":"deadab4ca17fbdb63f9798007fb5872361f0dc96","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean isValidSdkHome(String path) {\n    if (!checkForJdk(new File(path))) {\n      return false;\n    }\n    if (JrtFileSystem.isModularJdk(path) && !JrtFileSystem.isSupported()) {\n      return false;\n    }\n    return true;\n  }","id":69395,"modified_method":"@Override\n  public boolean isValidSdkHome(String path) {\n    if (!checkForJdk(new File(path))) {\n      return false;\n    }\n    return !JrtFileSystem.isModularJdk(path) || JrtFileSystem.isSupported();\n  }","commit_id":"deadab4ca17fbdb63f9798007fb5872361f0dc96","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @SuppressWarnings({\"HardCodedStringLiteral\"})\n  public static VirtualFile findSources(File file, final String srcName) {\n    File srcDir = new File(file, \"src\");\n    File jarFile = new File(file, srcName + \".jar\");\n    if (!jarFile.exists()) {\n      jarFile = new File(file, srcName + \".zip\");\n    }\n\n    if (jarFile.exists()) {\n      VirtualFile vFile = findInJar(jarFile, \"src\");\n      if (vFile != null) return vFile;\n      // try 1.4 format\n      vFile = findInJar(jarFile, \"\");\n      return vFile;\n    }\n    else {\n      if (!srcDir.exists() || !srcDir.isDirectory()) return null;\n      String path = srcDir.getAbsolutePath().replace(File.separatorChar, '/');\n      return LocalFileSystem.getInstance().findFileByPath(path);\n    }\n  }","id":69396,"modified_method":"@Nullable\n  @SuppressWarnings(\"HardCodedStringLiteral\")\n  private static VirtualFile findSources(File file, final String srcName) {\n    File srcDir = new File(file, \"src\");\n    File jarFile = new File(file, srcName + \".jar\");\n    if (!jarFile.exists()) {\n      jarFile = new File(file, srcName + \".zip\");\n    }\n\n    if (jarFile.exists()) {\n      VirtualFile vFile = findInJar(jarFile, \"src\");\n      if (vFile != null) return vFile;\n      // try 1.4 format\n      vFile = findInJar(jarFile, \"\");\n      return vFile;\n    }\n    else {\n      if (!srcDir.exists() || !srcDir.isDirectory()) return null;\n      String path = srcDir.getAbsolutePath().replace(File.separatorChar, '/');\n      return LocalFileSystem.getInstance().findFileByPath(path);\n    }\n  }","commit_id":"deadab4ca17fbdb63f9798007fb5872361f0dc96","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static VirtualFile findDocs(File file, final String relativePath) {\n    file = new File(file.getAbsolutePath() + File.separator + relativePath.replace('/', File.separatorChar));\n    if (!file.exists() || !file.isDirectory()) return null;\n    String path = file.getAbsolutePath().replace(File.separatorChar, '/');\n    return LocalFileSystem.getInstance().findFileByPath(path);\n  }","id":69397,"modified_method":"@Nullable\n  private static VirtualFile findDocs(File file, final String relativePath) {\n    file = new File(file.getAbsolutePath() + File.separator + relativePath.replace('/', File.separatorChar));\n    if (!file.exists() || !file.isDirectory()) return null;\n    String path = file.getAbsolutePath().replace(File.separatorChar, '/');\n    return LocalFileSystem.getInstance().findFileByPath(path);\n  }","commit_id":"deadab4ca17fbdb63f9798007fb5872361f0dc96","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @SuppressWarnings({\"HardCodedStringLiteral\"})\n  public static VirtualFile findSources(File file) {\n    return findSources(file, \"src\");\n  }","id":69398,"modified_method":"@Nullable\n  @SuppressWarnings(\"HardCodedStringLiteral\")\n  private static VirtualFile findSources(File file) {\n    return findSources(file, \"src\");\n  }","commit_id":"deadab4ca17fbdb63f9798007fb5872361f0dc96","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void mouseClicked(MouseEvent e) {\n      if (UIUtil.isActionClick(e, MouseEvent.MOUSE_CLICKED) && (e.isMetaDown() || (!SystemInfo.isMac && e.isControlDown()))) {\n        final TabInfo info = myTabs.findInfo(e);\n        if (info != null && info.getObject() != null) {\n          final VirtualFile vFile = (VirtualFile)info.getObject();\n          ShowFilePathAction.show(vFile, e);\n        }\n      }\n    }","id":69399,"modified_method":"@Override\n    public void mouseClicked(MouseEvent e) {\n      if (UIUtil.isActionClick(e, MouseEvent.MOUSE_CLICKED) && (e.isMetaDown() || (!SystemInfo.isMac && e.isControlDown()))) {\n        final TabInfo info = myTabs.findInfo(e);\n        if (info != null && info.getObject() != null) {\n          final VirtualFile vFile = (VirtualFile)info.getObject();\n          if (vFile != null) {\n            ShowFilePathAction.show(vFile, e);\n          }\n        }\n      }\n    }","commit_id":"02a332cde6cfeee6b7d98db7581fa0f7cf960b01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void actionPerformed(AnActionEvent e) {\n    show(getFile(e), new ShowAction() {\n      @Override\n      public void show(final ListPopup popup) {\n        DataManager dataManager = DataManager.getInstance();\n        if (dataManager != null) {\n          dataManager.getDataContextFromFocus().doWhenDone(new Consumer<DataContext>() {\n            @Override\n            public void consume(DataContext context) {\n              popup.showInBestPositionFor(context);\n            }\n          });\n        }\n      }\n    });\n  }","id":69400,"modified_method":"@Override\n  public void actionPerformed(@NotNull AnActionEvent e) {\n    VirtualFile file = getFile(e);\n    if (file != null) {\n      show(file, popup -> {\n        DataManager dataManager = DataManager.getInstance();\n        if (dataManager != null) {\n          dataManager.getDataContextFromFocus().doWhenDone(((Consumer<DataContext>)popup::showInBestPositionFor));\n        }\n      });\n    }\n  }","commit_id":"02a332cde6cfeee6b7d98db7581fa0f7cf960b01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static VirtualFile getFile(final AnActionEvent e) {\n    return CommonDataKeys.VIRTUAL_FILE.getData(e.getDataContext());\n  }","id":69401,"modified_method":"@Nullable\n  private static VirtualFile getFile(AnActionEvent e) {\n    VirtualFile[] files = CommonDataKeys.VIRTUAL_FILE_ARRAY.getData(e.getDataContext());\n    return files == null || files.length == 1 ? CommonDataKeys.VIRTUAL_FILE.getData(e.getDataContext()) : null;\n  }","commit_id":"02a332cde6cfeee6b7d98db7581fa0f7cf960b01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String getPresentableUrl(final VirtualFile eachParent) {\n    String url = eachParent.getPresentableUrl();\n    if (eachParent.getParent() == null && SystemInfo.isWindows) {\n      url += \"\\\\\";\n    }\n    return url;\n  }","id":69402,"modified_method":"private static String getPresentableUrl(VirtualFile file) {\n    String url = file.getPresentableUrl();\n    if (file.getParent() == null && SystemInfo.isWindows) url += \"\\\\\";\n    return url;\n  }","commit_id":"02a332cde6cfeee6b7d98db7581fa0f7cf960b01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void show(final VirtualFile file, final ShowAction show) {\n    if (!isSupported()) return;\n\n    final ArrayList<VirtualFile> files = new ArrayList<VirtualFile>();\n    final ArrayList<String> fileUrls = new ArrayList<String>();\n    VirtualFile eachParent = file;\n    while (eachParent != null) {\n      final int index = files.size() == 0 ? 0 : files.size();\n      files.add(index, eachParent);\n      fileUrls.add(index, getPresentableUrl(eachParent));\n      if (eachParent.getParent() == null && eachParent.getFileSystem() instanceof JarFileSystem) {\n        eachParent = JarFileSystem.getInstance().getVirtualFileForJar(eachParent);\n        if (eachParent == null) break;\n      }\n      eachParent = eachParent.getParent();\n    }\n\n\n    final ArrayList<Icon> icons = new ArrayList<Icon>();\n    ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n      @Override\n      public void run() {\n        for (String each : fileUrls) {\n          final File ioFile = new File(each);\n          Icon eachIcon;\n          if (ioFile.exists()) {\n            eachIcon = FileSystemView.getFileSystemView().getSystemIcon(ioFile);\n          }\n          else {\n            eachIcon = EmptyIcon.ICON_16;\n          }\n\n          icons.add(eachIcon);\n        }\n\n        ApplicationManager.getApplication().invokeLater(new Runnable() {\n          @Override\n          public void run() {\n            show.show(createPopup(files, icons));\n          }\n        });\n      }\n    });\n  }","id":69403,"modified_method":"private static void show(@NotNull VirtualFile file, @NotNull ShowAction show) {\n    if (!isSupported()) return;\n\n    List<VirtualFile> files = new ArrayList<VirtualFile>();\n    List<String> fileUrls = new ArrayList<String>();\n    VirtualFile eachParent = file;\n    while (eachParent != null) {\n      int index = files.size() == 0 ? 0 : files.size();\n      files.add(index, eachParent);\n      fileUrls.add(index, getPresentableUrl(eachParent));\n      if (eachParent.getParent() == null && eachParent.getFileSystem() instanceof JarFileSystem) {\n        eachParent = JarFileSystem.getInstance().getVirtualFileForJar(eachParent);\n        if (eachParent == null) break;\n      }\n      eachParent = eachParent.getParent();\n    }\n\n    ApplicationManager.getApplication().executeOnPooledThread(() -> {\n      List<Icon> icons = new ArrayList<Icon>();\n      for (String url : fileUrls) {\n        File ioFile = new File(url);\n        icons.add(ioFile.exists() ? FileSystemView.getFileSystemView().getSystemIcon(ioFile) : EmptyIcon.ICON_16);\n      }\n      ApplicationManager.getApplication().invokeLater(() -> show.show(createPopup(files, icons)));\n    });\n  }","commit_id":"02a332cde6cfeee6b7d98db7581fa0f7cf960b01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static ListPopup createPopup(final ArrayList<VirtualFile> files, final ArrayList<Icon> icons) {\n    final BaseListPopupStep<VirtualFile> step = new BaseListPopupStep<VirtualFile>(\"File Path\", files, icons) {\n      @NotNull\n      @Override\n      public String getTextFor(final VirtualFile value) {\n        return value.getPresentableName();\n      }\n\n      @Override\n      public PopupStep onChosen(final VirtualFile selectedValue, final boolean finalChoice) {\n        final File selectedFile = new File(getPresentableUrl(selectedValue));\n        if (selectedFile.exists()) {\n          ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n            @Override\n            public void run() {\n              openFile(selectedFile);\n            }\n          });\n        }\n        return FINAL_CHOICE;\n      }\n    };\n\n    return JBPopupFactory.getInstance().createListPopup(step);\n  }","id":69404,"modified_method":"private static ListPopup createPopup(List<VirtualFile> files, List<Icon> icons) {\n    BaseListPopupStep<VirtualFile> step = new BaseListPopupStep<VirtualFile>(RevealFileAction.getActionName(), files, icons) {\n      @NotNull\n      @Override\n      public String getTextFor(final VirtualFile value) {\n        return value.getPresentableName();\n      }\n\n      @Override\n      public PopupStep onChosen(final VirtualFile selectedValue, final boolean finalChoice) {\n        final File selectedFile = new File(getPresentableUrl(selectedValue));\n        if (selectedFile.exists()) {\n          ApplicationManager.getApplication().executeOnPooledThread(() -> openFile(selectedFile));\n        }\n        return FINAL_CHOICE;\n      }\n    };\n\n    return JBPopupFactory.getInstance().createListPopup(step);\n  }","commit_id":"02a332cde6cfeee6b7d98db7581fa0f7cf960b01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void show(final VirtualFile file, final MouseEvent e) {\n    show(file, new ShowAction() {\n      @Override\n      public void show(final ListPopup popup) {\n        if (e.getComponent().isShowing()) {\n          popup.show(new RelativePoint(e));\n        }\n      }\n    });\n  }","id":69405,"modified_method":"public static void show(@NotNull VirtualFile file, @NotNull MouseEvent e) {\n    show(file, popup -> {\n      if (e.getComponent().isShowing()) {\n        popup.show(new RelativePoint(e));\n      }\n    });\n  }","commit_id":"02a332cde6cfeee6b7d98db7581fa0f7cf960b01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void update(AnActionEvent e) {\n    if (SystemInfo.isMac || !isSupported()) {\n      e.getPresentation().setVisible(false);\n      return;\n    }\n    e.getPresentation().setEnabled(getFile(e) != null);\n  }","id":69406,"modified_method":"@Override\n  public void update(@NotNull AnActionEvent e) {\n    boolean visible = !SystemInfo.isMac && isSupported();\n    e.getPresentation().setVisible(visible);\n    if (visible) {\n      VirtualFile file = getFile(e);\n      e.getPresentation().setEnabled(file != null);\n      e.getPresentation().setText(ActionsBundle.message(\"action.ShowFilePath.tuned\", file != null && file.isDirectory() ? 1 : 0));\n    }\n  }","commit_id":"02a332cde6cfeee6b7d98db7581fa0f7cf960b01","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void messageReceived(ChannelHandlerContext context, MessageEvent event) throws Exception {\n    if (!(event.getMessage() instanceof HttpRequest)) {\n      context.sendUpstream(event);\n      return;\n    }\n\n    HttpRequest request = (HttpRequest)event.getMessage();\n    QueryStringDecoder urlDecoder = new QueryStringDecoder(request.getUri());\n    HttpRequestHandler connectedHandler = (HttpRequestHandler)context.getAttachment();\n    if (connectedHandler == null) {\n      if (urlDecoder.getPath().equals(\"/favicon.ico\")) {\n        Icon icon = IconLoader.findIcon(ApplicationInfoEx.getInstanceEx().getSmallIconUrl());\n        if (icon != null) {\n          //noinspection UndesirableClassUsage\n          BufferedImage image = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);\n          icon.paintIcon(null, image.getGraphics(), 0, 0);\n          byte[] icoBytes = Sanselan.writeImageToBytes(image, ImageFormat.IMAGE_FORMAT_ICO, null);\n          Responses.send(icoBytes, FileResponses.createResponse(urlDecoder.getPath()), request, context);\n          return;\n        }\n      }\n      else if (urlDecoder.getPath().equals(WebServer.START_TIME_PATH)) {\n        Responses.send(WebServer.getApplicationStartTime(), request, context);\n        return;\n      }\n\n      for (HttpRequestHandler handler : WebServerManager.EP_NAME.getExtensions()) {\n        try {\n          if (handler.isSupported(request) && handler.process(urlDecoder, request, context)) {\n            if (context.getAttachment() == null) {\n              context.setAttachment(handler);\n            }\n            return;\n          }\n        }\n        catch (Throwable e) {\n          WebServer.LOG.error(e);\n        }\n      }\n    }\n    else if (connectedHandler.isSupported(request)) {\n      connectedHandler.process(urlDecoder, request, context);\n      return;\n    }\n    Responses.sendStatus(request, context, NOT_FOUND);\n  }","id":69407,"modified_method":"@Override\n  public void messageReceived(ChannelHandlerContext context, MessageEvent event) throws Exception {\n    if (!(event.getMessage() instanceof HttpRequest)) {\n      context.sendUpstream(event);\n      return;\n    }\n\n    HttpRequest request = (HttpRequest)event.getMessage();\n    if (WebServer.LOG.isDebugEnabled()) {\n      WebServer.LOG.debug(request.toString());\n    }\n    QueryStringDecoder urlDecoder = new QueryStringDecoder(request.getUri());\n    HttpRequestHandler connectedHandler = (HttpRequestHandler)context.getAttachment();\n    if (connectedHandler != null) {\n      if (connectedHandler.isSupported(request) && connectedHandler.process(urlDecoder, request, context)) {\n        return;\n      }\n      // prev cached connectedHandler is not suitable for this request, so, let's find it again\n      context.setAttachment(null);\n    }\n\n    if (urlDecoder.getPath().equals(\"/favicon.ico\")) {\n      Icon icon = IconLoader.findIcon(ApplicationInfoEx.getInstanceEx().getSmallIconUrl());\n      if (icon != null) {\n        BufferedImage image = UIUtil.createImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_ARGB);\n        icon.paintIcon(null, image.getGraphics(), 0, 0);\n        byte[] icoBytes = Sanselan.writeImageToBytes(image, ImageFormat.IMAGE_FORMAT_ICO, null);\n        Responses.send(icoBytes, FileResponses.createResponse(urlDecoder.getPath()), request, context);\n        return;\n      }\n    }\n    else if (urlDecoder.getPath().equals(WebServer.START_TIME_PATH)) {\n      Responses.send(WebServer.getApplicationStartTime(), request, context);\n      return;\n    }\n\n    for (HttpRequestHandler handler : WebServerManager.EP_NAME.getExtensions()) {\n      try {\n        if (handler.isSupported(request) && handler.process(urlDecoder, request, context)) {\n          if (context.getAttachment() == null) {\n            context.setAttachment(handler);\n          }\n          return;\n        }\n      }\n      catch (Throwable e) {\n        WebServer.LOG.error(e);\n      }\n    }\n    Responses.sendStatus(request, context, NOT_FOUND);\n  }","commit_id":"92117a84ccba3897d9cb39fc1277761223950839","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n\tpublic void openURI (String URI) {\n\t\tfinal Uri uri = Uri.parse(URI);\n\t\tapp.runOnUiThread(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run () {\n\t\t\t\tIntent intent = new Intent(Intent.ACTION_VIEW, uri);\n\t\t\t\t// LiveWallpaper and Daydream applications need this flag\n\t\t\t\tif (!(app.getContext() instanceof Activity))\n\t\t\t\t\tintent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n\t\t\t\tapp.startActivity(intent);\n\t\t\t}\n\t\t});\n\t}","id":69408,"modified_method":"@Override\n\tpublic boolean openURI (String URI) {\n\t\tboolean result = false;\n\t\tfinal Uri uri = Uri.parse(URI);\n\t\tIntent intent = new Intent(Intent.ACTION_VIEW, uri);\n\t\tPackageManager pm = app.getContext().getPackageManager();\n\t\tif (pm.resolveActivity(intent, PackageManager.MATCH_DEFAULT_ONLY) != null) {\n\t\t\tapp.runOnUiThread(new Runnable() {\n\t\t\t\t@Override\n\t\t\t\tpublic void run () {\n\t\t\t\t\tIntent intent = new Intent(Intent.ACTION_VIEW, uri);\n\t\t\t\t\t// LiveWallpaper and Daydream applications need this flag\n\t\t\t\t\tif (!(app.getContext() instanceof Activity))\n\t\t\t\t\t\tintent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n\t\t\t\t\tapp.startActivity(intent);\n\t\t\t\t}\n\t\t\t});\n\t\t\tresult = true;\n\t\t}\n\t\treturn result;\n\t}","commit_id":"14ef3847d4b88c8ad1a937493dc13fee52913a45","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\n\tpublic void openURI (String URI) {\n\t\tWindow.open(URI, \"_blank\", null);\n\t}","id":69409,"modified_method":"@Override\n\tpublic boolean openURI (String URI) {\n\t\tWindow.open(URI, \"_blank\", null);\n\t\treturn true;\n\t}","commit_id":"14ef3847d4b88c8ad1a937493dc13fee52913a45","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\r\n\tpublic void openURI (String URI) {\r\n\t\ttry {\r\n\t\t\tif (!GraphicsEnvironment.isHeadless() && Desktop.isDesktopSupported()) {\r\n\t\t\t\tif (Desktop.getDesktop().isSupported(Action.BROWSE)) {\r\n\t\t\t\t\tDesktop.getDesktop().browse(java.net.URI.create(URI));\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (Throwable t) {\r\n\t\t\tGdx.app.error(\"HeadlessNet\", \"Failed to open URI. \", t);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tGdx.app.error(\"HeadlessNet\", \"Opening URIs on this environment is not supported. Ignoring.\");\r\n\t}","id":69410,"modified_method":"@Override\r\n\tpublic boolean openURI (String URI) {\r\n\t\tboolean result = false;\r\n\t\ttry {\r\n\t\t\tif (!GraphicsEnvironment.isHeadless() && Desktop.isDesktopSupported()) {\r\n\t\t\t\tif (Desktop.getDesktop().isSupported(Action.BROWSE)) {\r\n\t\t\t\t\tDesktop.getDesktop().browse(java.net.URI.create(URI));\r\n\t\t\t\t\tresult = true;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tGdx.app.error(\"HeadlessNet\", \"Opening URIs on this environment is not supported. Ignoring.\");\t\t\r\n\t\t\t}\r\n\t\t} catch (Throwable t) {\r\n\t\t\tGdx.app.error(\"HeadlessNet\", \"Failed to open URI. \", t);\r\n\t\t}\r\n\t\treturn result;\r\n\t}","commit_id":"14ef3847d4b88c8ad1a937493dc13fee52913a45","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\r\n\tpublic void openURI (String URI) {\r\n\t\tuiApp.openURL(new NSURL(URI));\r\n\t}","id":69411,"modified_method":"@Override\r\n\tpublic boolean openURI (String URI) {\r\n\t\treturn uiApp.openURL(new NSURL(URI));\r\n\t}","commit_id":"14ef3847d4b88c8ad1a937493dc13fee52913a45","url":"https://github.com/libgdx/libgdx"},{"original_method":"public void openURI (String uri) {\n\t\tif (!Desktop.isDesktopSupported()) return;\n\n\t\tDesktop desktop = Desktop.getDesktop();\n\t\tif (!desktop.isSupported(Desktop.Action.BROWSE)) return;\n\n\t\ttry {\n\t\t\tdesktop.browse(new URI(uri));\n\t\t} catch (Exception ex) {\n\t\t\tthrow new GdxRuntimeException(ex);\n\t\t}\n\t}","id":69412,"modified_method":"public boolean openURI (String uri) {\n\t\tboolean result = false;\n\t\tif (Desktop.isDesktopSupported()) {\n\t\t\tDesktop desktop = Desktop.getDesktop();\n\t\t\tif (desktop.isSupported(Desktop.Action.BROWSE)) {\n\t\t\t\ttry {\n\t\t\t\t\tdesktop.browse(new URI(uri));\n\t\t\t\t\tresult = true;\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\tGdx.app.error(\"JglfwNet\", \"Unable to open URI:\" + uri, e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"14ef3847d4b88c8ad1a937493dc13fee52913a45","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\r\n\tpublic void openURI (String URI) {\r\n\t\tSys.openURL(URI);\r\n\t}","id":69413,"modified_method":"@Override\r\n\tpublic boolean openURI (String URI) {\r\n\t\treturn Sys.openURL(URI);\r\n\t}","commit_id":"14ef3847d4b88c8ad1a937493dc13fee52913a45","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\r\n\tpublic void create () {\r\n\t\tbatch = new SpriteBatch();\r\n\t\tskin = new Skin(Gdx.files.internal(\"data/uiskin.json\"));\r\n\t\tfont = new BitmapFont();\r\n\t\tstage = new Stage();\r\n\t\tGdx.input.setInputProcessor(stage);\r\n\r\n\t\t{\r\n\t\t\tstatusLabel = new Label(\"\", skin);\r\n\t\t\tstatusLabel.setWrap(true);\r\n\t\t\tstatusLabel.setWidth(Gdx.graphics.getWidth() * 0.96f);\r\n\t\t\tstatusLabel.setAlignment(Align.center);\r\n\t\t\tstatusLabel.setPosition(Gdx.graphics.getWidth() * 0.5f - statusLabel.getWidth() * 0.5f, 30f);\r\n\t\t\tstatusLabel.setColor(Color.CYAN);\r\n\t\t\tstage.addActor(statusLabel);\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tClickListener clickListener = new ClickListener() {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic void clicked (InputEvent event, float x, float y) {\r\n\t\t\t\t\tsuper.clicked(event, x, y);\r\n\r\n\t\t\t\t\tclickedButton = event.getListenerActor();\r\n\t\t\t\t\tsetButtonDisabled(true);\r\n\t\t\t\t\tif (texture != null) texture.dispose();\r\n\t\t\t\t\ttexture = null;\r\n\t\t\t\t\ttext = null;\r\n\r\n\t\t\t\t\tString url;\r\n\t\t\t\t\tString httpMethod = Net.HttpMethods.GET;\r\n\t\t\t\t\tString requestContent = null;\r\n\t\t\t\t\tif (clickedButton == btnDownloadImage)\r\n\t\t\t\t\t\turl = \"http://i.imgur.com/vxomF.jpg\";\r\n\t\t\t\t\telse if (clickedButton == btnDownloadText)\r\n\t\t\t\t\t\turl = \"http://www.apache.org/licenses/LICENSE-2.0.txt\";\r\n\t\t\t\t\telse if (clickedButton == btnDownloadLarge)\r\n\t\t\t\t\t\turl = \"http://libgdx.badlogicgames.com/releases/libgdx-1.2.0.zip\";\r\n\t\t\t\t\telse if (clickedButton == btnDownloadError)\r\n\t\t\t\t\t\turl = \"http://www.badlogicgames.com/doesnotexist\";\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\turl = \"http://posttestserver.com/post.php?dump\";\r\n\t\t\t\t\t\thttpMethod = Net.HttpMethods.POST;\r\n\t\t\t\t\t\trequestContent = \"name1=value1&name2=value2\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thttpRequest = new HttpRequest(httpMethod);\r\n\t\t\t\t\thttpRequest.setUrl(url);\r\n\t\t\t\t\thttpRequest.setContent(requestContent);\r\n\t\t\t\t\tGdx.net.sendHttpRequest(httpRequest, NetAPITest.this);\r\n\r\n\t\t\t\t\tstatusLabel.setText(\"Downloading data from \" + httpRequest.getUrl());\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tClickListener cancelListener = new ClickListener() {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic void clicked (InputEvent event, float x, float y) {\r\n\t\t\t\t\tsuper.clicked(event, x, y);\r\n\t\t\t\t\tif (httpRequest != null) {\r\n\t\t\t\t\t\tGdx.net.cancelHttpRequest(httpRequest);\r\n\t\t\t\t\t\tGdx.app.log(\"NetAPITest\", \"Cancelling request \" + httpRequest.getUrl());\r\n\t\t\t\t\t\tstatusLabel.setText(\"Cancelling request \" + httpRequest.getUrl());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tbtnCancel = new TextButton(\"Cancel\", skin);\r\n\t\t\tbtnCancel.setPosition(Gdx.graphics.getWidth() * 0.35f - btnCancel.getWidth() * 1.5f, 60f);\r\n\t\t\tbtnCancel.addListener(cancelListener);\r\n\t\t\tstage.addActor(btnCancel);\r\n\r\n\t\t\tbtnDownloadImage = new TextButton(\"GET Image\", skin);\r\n\t\t\tbtnDownloadImage.setPosition(btnCancel.getX() + btnCancel.getWidth() + 10, 60f);\r\n\t\t\tbtnDownloadImage.addListener(clickListener);\r\n\t\t\tstage.addActor(btnDownloadImage);\r\n\r\n\t\t\tbtnDownloadText = new TextButton(\"GET Text\", skin);\r\n\t\t\tbtnDownloadText.setPosition(btnDownloadImage.getX() + btnDownloadImage.getWidth() + 10, 60f);\r\n\t\t\tbtnDownloadText.addListener(clickListener);\r\n\t\t\tstage.addActor(btnDownloadText);\r\n\r\n\t\t\tbtnDownloadLarge = new TextButton(\"GET Large\", skin);\r\n\t\t\tbtnDownloadLarge.setPosition(btnDownloadText.getX() + btnDownloadText.getWidth() + 10, 60f);\r\n\t\t\tbtnDownloadLarge.addListener(clickListener);\r\n\t\t\tstage.addActor(btnDownloadLarge);\r\n\r\n\t\t\tbtnDownloadError = new TextButton(\"GET Error\", skin);\r\n\t\t\tbtnDownloadError.setPosition(btnDownloadLarge.getX() + btnDownloadLarge.getWidth() + 10, 60f);\r\n\t\t\tbtnDownloadError.addListener(clickListener);\r\n\t\t\tstage.addActor(btnDownloadError);\r\n\r\n\t\t\tbtnPost = new TextButton(\"POST\", skin);\r\n\t\t\tbtnPost.setPosition(btnDownloadError.getX() + btnDownloadError.getWidth() + 10, 60f);\r\n\t\t\tbtnPost.addListener(clickListener);\r\n\t\t\tstage.addActor(btnPost);\r\n\t\t}\r\n\r\n\t}","id":69414,"modified_method":"@Override\r\n\tpublic void create () {\r\n\t\tbatch = new SpriteBatch();\r\n\t\tskin = new Skin(Gdx.files.internal(\"data/uiskin.json\"));\r\n\t\tfont = new BitmapFont();\r\n\t\tstage = new Stage();\r\n\t\tGdx.input.setInputProcessor(stage);\r\n\r\n\t\t{\r\n\t\t\tstatusLabel = new Label(\"\", skin);\r\n\t\t\tstatusLabel.setWrap(true);\r\n\t\t\tstatusLabel.setWidth(Gdx.graphics.getWidth() * 0.96f);\r\n\t\t\tstatusLabel.setAlignment(Align.center);\r\n\t\t\tstatusLabel.setPosition(Gdx.graphics.getWidth() * 0.5f - statusLabel.getWidth() * 0.5f, 30f);\r\n\t\t\tstatusLabel.setColor(Color.CYAN);\r\n\t\t\tstage.addActor(statusLabel);\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tClickListener clickListener = new ClickListener() {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic void clicked (InputEvent event, float x, float y) {\r\n\t\t\t\t\tsuper.clicked(event, x, y);\r\n\r\n\t\t\t\t\tclickedButton = event.getListenerActor();\r\n\t\t\t\t\tsetButtonDisabled(true);\r\n\t\t\t\t\tif (texture != null) texture.dispose();\r\n\t\t\t\t\ttexture = null;\r\n\t\t\t\t\ttext = null;\r\n\r\n\t\t\t\t\tString url;\r\n\t\t\t\t\tString httpMethod = Net.HttpMethods.GET;\r\n\t\t\t\t\tString requestContent = null;\r\n\t\t\t\t\tif (clickedButton == btnDownloadImage)\r\n\t\t\t\t\t\turl = \"http://i.imgur.com/vxomF.jpg\";\r\n\t\t\t\t\telse if (clickedButton == btnDownloadText)\r\n\t\t\t\t\t\turl = \"http://www.apache.org/licenses/LICENSE-2.0.txt\";\r\n\t\t\t\t\telse if (clickedButton == btnDownloadLarge)\r\n\t\t\t\t\t\turl = \"http://libgdx.badlogicgames.com/releases/libgdx-1.2.0.zip\";\r\n\t\t\t\t\telse if (clickedButton == btnDownloadError)\r\n\t\t\t\t\t\turl = \"http://www.badlogicgames.com/doesnotexist\";\r\n\t\t\t\t\telse if (clickedButton == btnOpenUri) {\r\n\t\t\t\t\t\tGdx.net.openURI(\"http://libgdx.badlogicgames.com/\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\turl = \"http://posttestserver.com/post.php?dump\";\r\n\t\t\t\t\t\thttpMethod = Net.HttpMethods.POST;\r\n\t\t\t\t\t\trequestContent = \"name1=value1&name2=value2\";\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thttpRequest = new HttpRequest(httpMethod);\r\n\t\t\t\t\thttpRequest.setUrl(url);\r\n\t\t\t\t\thttpRequest.setContent(requestContent);\r\n\t\t\t\t\tGdx.net.sendHttpRequest(httpRequest, NetAPITest.this);\r\n\r\n\t\t\t\t\tstatusLabel.setText(\"Downloading data from \" + httpRequest.getUrl());\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tClickListener cancelListener = new ClickListener() {\r\n\t\t\t\t@Override\r\n\t\t\t\tpublic void clicked (InputEvent event, float x, float y) {\r\n\t\t\t\t\tsuper.clicked(event, x, y);\r\n\t\t\t\t\tif (httpRequest != null) {\r\n\t\t\t\t\t\tGdx.net.cancelHttpRequest(httpRequest);\r\n\t\t\t\t\t\tGdx.app.log(\"NetAPITest\", \"Cancelling request \" + httpRequest.getUrl());\r\n\t\t\t\t\t\tstatusLabel.setText(\"Cancelling request \" + httpRequest.getUrl());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tbtnCancel = new TextButton(\"Cancel\", skin);\r\n\t\t\tbtnCancel.setPosition(Gdx.graphics.getWidth() * 0.10f, 60f);\r\n\t\t\tbtnCancel.addListener(cancelListener);\r\n\t\t\tstage.addActor(btnCancel);\r\n\r\n\t\t\tbtnDownloadImage = new TextButton(\"GET Image\", skin);\r\n\t\t\tbtnDownloadImage.setPosition(btnCancel.getX() + btnCancel.getWidth() + 10, 60f);\r\n\t\t\tbtnDownloadImage.addListener(clickListener);\r\n\t\t\tstage.addActor(btnDownloadImage);\r\n\r\n\t\t\tbtnDownloadText = new TextButton(\"GET Text\", skin);\r\n\t\t\tbtnDownloadText.setPosition(btnDownloadImage.getX() + btnDownloadImage.getWidth() + 10, 60f);\r\n\t\t\tbtnDownloadText.addListener(clickListener);\r\n\t\t\tstage.addActor(btnDownloadText);\r\n\r\n\t\t\tbtnDownloadLarge = new TextButton(\"GET Large\", skin);\r\n\t\t\tbtnDownloadLarge.setPosition(btnDownloadText.getX() + btnDownloadText.getWidth() + 10, 60f);\r\n\t\t\tbtnDownloadLarge.addListener(clickListener);\r\n\t\t\tstage.addActor(btnDownloadLarge);\r\n\r\n\t\t\tbtnDownloadError = new TextButton(\"GET Error\", skin);\r\n\t\t\tbtnDownloadError.setPosition(btnDownloadLarge.getX() + btnDownloadLarge.getWidth() + 10, 60f);\r\n\t\t\tbtnDownloadError.addListener(clickListener);\r\n\t\t\tstage.addActor(btnDownloadError);\r\n\r\n\t\t\tbtnPost = new TextButton(\"POST\", skin);\r\n\t\t\tbtnPost.setPosition(btnDownloadError.getX() + btnDownloadError.getWidth() + 10, 60f);\r\n\t\t\tbtnPost.addListener(clickListener);\r\n\t\t\tstage.addActor(btnPost);\r\n\t\t\t\r\n\t\t\tbtnOpenUri = new TextButton(\"Open URI\", skin);\r\n\t\t\tbtnOpenUri.setPosition(btnPost.getX() + btnPost.getWidth() + 10, 60f);\r\n\t\t\tbtnOpenUri.addListener(clickListener);\r\n\t\t\t\r\n\t\t\tstage.addActor(btnOpenUri);\r\n\t\t}\r\n\r\n\t}","commit_id":"14ef3847d4b88c8ad1a937493dc13fee52913a45","url":"https://github.com/libgdx/libgdx"},{"original_method":"/**\n   * Find and set response/weights/offset/fold and put them all in the end,\n   * @return number of non-feature vecs\n   */\n  protected int separateFeatureVecs() {\n    int res = 0;\n    if(_parms._weights_column != null) {\n      Vec w = _train.remove(_parms._weights_column);\n      if(w == null)\n        error(\"_weights_column\",\"Weights column '\" + _parms._weights_column  + \"' not found in the training frame\");\n      else {\n        if(!w.isNumeric())\n          error(\"_weights_column\",\"Invalid weights column '\" + _parms._weights_column  + \"', weights must be numeric\");\n        _weights = w;\n        if(w.naCnt() > 0)\n          error(\"_weights_columns\",\"Weights cannot have missing values.\");\n        if(w.min() < 0)\n          error(\"_weights_columns\",\"Weights must be >= 0\");\n        if(w.max() == 0)\n          error(\"_weights_columns\",\"Max. weight must be > 0\");\n        _train.add(_parms._weights_column, w);\n        ++res;\n      }\n    } else {\n      _weights = null;\n      assert(!hasWeightCol());\n    }\n    if(_parms._offset_column != null) {\n      Vec o = _train.remove(_parms._offset_column);\n      if(o == null)\n        error(\"_offset_column\",\"Offset column '\" + _parms._offset_column  + \"' not found in the training frame\");\n      else {\n        if(!o.isNumeric())\n          error(\"_offset_column\",\"Invalid offset column '\" + _parms._offset_column  + \"', offset must be numeric\");\n        _offset = o;\n        if(o.naCnt() > 0)\n          error(\"_offset_column\",\"Offset cannot have missing values.\");\n        if(_weights == _offset)\n          error(\"_offset_column\", \"Offset must be different from weights\");\n        _train.add(_parms._offset_column, o);\n        ++res;\n      }\n    } else {\n      _offset = null;\n      assert(!hasOffsetCol());\n    }\n    if(_parms._fold_column != null) {\n      Vec f = _train.remove(_parms._fold_column);\n      if(f == null)\n        error(\"_fold_column\",\"Fold column '\" + _parms._fold_column  + \"' not found in the training frame\");\n      else {\n        if(!f.isInt())\n          error(\"_fold_column\",\"Invalid fold column '\" + _parms._fold_column  + \"', fold must be integer\");\n        if(f.min() < 0)\n          error(\"_fold_column\",\"Invalid fold column '\" + _parms._fold_column  + \"', fold must be non-negative\");\n        if(f.isConst())\n          error(\"_fold_column\",\"Invalid fold column '\" + _parms._fold_column  + \"', fold cannot be constant\");\n        _fold = f;\n        if(f.naCnt() > 0)\n          error(\"_fold_column\",\"Fold cannot have missing values.\");\n        if(_fold == _weights)\n          error(\"_fold_column\", \"Fold must be different from weights\");\n        if(_fold == _offset)\n          error(\"_fold_column\", \"Fold must be different from offset\");\n        _train.add(_parms._fold_column, f);\n        ++res;\n      }\n    } else {\n      _fold = null;\n      assert(!hasFoldCol());\n    }\n    if(isSupervised() && _parms._response_column != null) {\n      _response = _train.remove(_parms._response_column);\n      if (_response == null) {\n        if (isSupervised())\n          error(\"_response_column\", \"Response column '\" + _parms._response_column + \"' not found in the training frame\");\n      } else {\n        if(_response == _offset)\n          error(\"_response\", \"Response must be different from offset_column\");\n        if(_response == _weights)\n          error(\"_response\", \"Response must be different from weights_column\");\n        if(_response == _fold)\n          error(\"_response\", \"Response must be different from fold_column\");\n        _train.add(_parms._response_column, _response);\n        ++res;\n      }\n    } else {\n      _response = null;\n    }\n    return res;\n  }","id":69415,"modified_method":"/**\n   * Find and set response/weights/offset/fold and put them all in the end,\n   * @return number of non-feature vecs\n   */\n  protected int separateFeatureVecs() {\n    int res = 0;\n    if(_parms._weights_column != null) {\n      Vec w = _train.remove(_parms._weights_column);\n      if(w == null)\n        error(\"_weights_column\",\"Weights column '\" + _parms._weights_column  + \"' not found in the training frame\");\n      else {\n        if(!w.isNumeric())\n          error(\"_weights_column\",\"Invalid weights column '\" + _parms._weights_column  + \"', weights must be numeric\");\n        _weights = w;\n        if(w.naCnt() > 0)\n          error(\"_weights_columns\",\"Weights cannot have missing values.\");\n        if(w.min() < 0)\n          error(\"_weights_columns\",\"Weights must be >= 0\");\n        if(w.max() == 0)\n          error(\"_weights_columns\",\"Max. weight must be > 0\");\n        _train.add(_parms._weights_column, w);\n        ++res;\n      }\n    } else {\n      _weights = null;\n      assert(!hasWeightCol());\n    }\n    if(_parms._offset_column != null) {\n      Vec o = _train.remove(_parms._offset_column);\n      if(o == null)\n        error(\"_offset_column\",\"Offset column '\" + _parms._offset_column  + \"' not found in the training frame\");\n      else {\n        if(!o.isNumeric())\n          error(\"_offset_column\",\"Invalid offset column '\" + _parms._offset_column  + \"', offset must be numeric\");\n        _offset = o;\n        if(o.naCnt() > 0)\n          error(\"_offset_column\",\"Offset cannot have missing values.\");\n        if(_weights == _offset)\n          error(\"_offset_column\", \"Offset must be different from weights\");\n        _train.add(_parms._offset_column, o);\n        ++res;\n      }\n    } else {\n      _offset = null;\n      assert(!hasOffsetCol());\n    }\n    if(_parms._fold_column != null) {\n      Vec f = _train.remove(_parms._fold_column);\n      if(f == null)\n        error(\"_fold_column\",\"Fold column '\" + _parms._fold_column  + \"' not found in the training frame\");\n      else {\n        if(!f.isInt() && !f.isCategorical())\n          error(\"_fold_column\",\"Invalid fold column '\" + _parms._fold_column  + \"', fold must be integer or categorical\");\n        if(f.min() < 0)\n          error(\"_fold_column\",\"Invalid fold column '\" + _parms._fold_column  + \"', fold must be non-negative\");\n        if(f.isConst())\n          error(\"_fold_column\",\"Invalid fold column '\" + _parms._fold_column  + \"', fold cannot be constant\");\n        _fold = f;\n        if(f.naCnt() > 0)\n          error(\"_fold_column\",\"Fold cannot have missing values.\");\n        if(_fold == _weights)\n          error(\"_fold_column\", \"Fold must be different from weights\");\n        if(_fold == _offset)\n          error(\"_fold_column\", \"Fold must be different from offset\");\n        _train.add(_parms._fold_column, f);\n        ++res;\n      }\n    } else {\n      _fold = null;\n      assert(!hasFoldCol());\n    }\n    if(isSupervised() && _parms._response_column != null) {\n      _response = _train.remove(_parms._response_column);\n      if (_response == null) {\n        if (isSupervised())\n          error(\"_response_column\", \"Response column '\" + _parms._response_column + \"' not found in the training frame\");\n      } else {\n        if(_response == _offset)\n          error(\"_response\", \"Response must be different from offset_column\");\n        if(_response == _weights)\n          error(\"_response\", \"Response must be different from weights_column\");\n        if(_response == _fold)\n          error(\"_response\", \"Response must be different from fold_column\");\n        _train.add(_parms._response_column, _response);\n        ++res;\n      }\n    } else {\n      _response = null;\n    }\n    return res;\n  }","commit_id":"b5d61b867c9d01c1902ab91df778967e98790c8a","url":"https://github.com/h2oai/h2o-3"},{"original_method":"private int nFoldWork() {\n    if( _parms._fold_column == null ) return _parms._nfolds;\n    Vec fc = train().vec(_parms._fold_column);\n    return ((int)fc.max()-(int)fc.min()) + 1;\n  }","id":69416,"modified_method":"private int nFoldWork() {\n    if( _parms._fold_column == null ) return _parms._nfolds;\n    Vec f = train().vec(_parms._fold_column);\n    if(!f.isInt() && !f.isCategorical())\n      error(\"_fold_column\",\"Invalid fold column '\" + _parms._fold_column  + \"', fold must be integer or categorical\");\n    Vec fc = VecUtils.toCategoricalVec(f);\n    int N = fc.domain().length;\n    if (fc != f) fc.remove();\n    return N;\n  }","commit_id":"b5d61b867c9d01c1902ab91df778967e98790c8a","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/**\n   * Default naive (serial) implementation of N-fold cross-validation\n   * @return Cross-validation Job\n   * (builds N+1 models, all have train+validation metrics, the main model has N-fold cross-validated validation metrics)\n   */\n  public Job<M> computeCrossValidation() {\n    assert(_state == JobState.RUNNING); //main Job is still running\n    final Frame origTrainFrame = train();\n\n    // Step 1: Assign each row to a fold\n    // TODO: Implement better splitting algo (with Strata if response is categorical), e.g. http://www.lexjansen.com/scsug/2009/Liang_Xie2.pdf\n    final Integer N = nFoldWork();\n    final Vec foldAssignment;\n    if (_parms._fold_column != null) {\n      foldAssignment = origTrainFrame.vec(_parms._fold_column);\n    } else {\n      final long seed = _parms.nFoldSeed();\n      Log.info(\"Creating \" + N + \" cross-validation splits with random number seed: \" + seed);\n      switch( _parms._fold_assignment ) {\n      case AUTO:\n      case Random:     foldAssignment = ASTKFold.          kfoldColumn(    zTmp(),N,seed); break;\n      case Modulo:     foldAssignment = ASTKFold.    moduloKfoldColumn(    zTmp(),N     ); break;\n      case Stratified: foldAssignment = ASTKFold.stratifiedKFoldColumn(response(),N,seed); break;\n      default:         throw H2O.unimpl();\n      }\n    }\n\n    final Key[] modelKeys = new Key[N];\n    final Key[] predictionKeys = new Key[N];\n\n    // Step 2: Make 2*N binary weight vectors and store the CV train/validation frames\n    final String origWeightsName = _parms._weights_column;\n    final Vec[] weights = new Vec[2*N];\n    final Vec origWeight  = origWeightsName != null ? origTrainFrame.vec(origWeightsName) : origTrainFrame.anyVec().makeCon(1.0);\n    final Frame[] cvTrain = new Frame[N];\n    final Frame[] cvValid = new Frame[N];\n    final String[] identifier = new String[N];\n    final String weightName = \"__internal_cv_weights__\";\n    if (train().find(weightName) != -1) throw new H2OIllegalArgumentException(\"Frame cannot contain a Vec called '\" + weightName + \"'.\");\n\n    final Key<M> origDest = dest();\n    for (int i=0; i<N; ++i) {\n      // Make weights\n      weights[2*i]   = zTmp();\n      weights[2*i+1] = zTmp();\n\n      // Now update the weights in place\n      final int whichFold = i;\n      new MRTask() {\n        @Override\n        public void map(Chunk chks[]) {\n          Chunk fold = chks[0];\n          Chunk orig = chks[1];\n          Chunk train = chks[2];\n          Chunk valid = chks[3];\n          for (int i=0; i< orig._len; ++i) {\n            int foldAssignment = (int)fold.at8(i) % N;\n            assert(foldAssignment >= 0 && foldAssignment <N);\n            boolean holdout = foldAssignment == whichFold;\n            double w = orig.atd(i);\n            train.set(i, holdout ? 0 : w);\n            valid.set(i, holdout ? w : 0);\n          }\n        }\n      }.doAll(new Vec[]{foldAssignment, origWeight, weights[2*i], weights[2*i+1]});\n      if (weights[2*i].isConst() || weights[2*i+1].isConst()) {\n        String msg = \"Not enough data to create \" + N + \" random cross-validation splits. Either reduce nfolds, specify a larger dataset (or specify another random number seed, if applicable).\";\n        throw new H2OIllegalArgumentException(msg);\n      }\n\n      identifier[i] = origDest.toString() + \"_cv_\" + (i+1);\n      modelKeys[i] = Key.make(identifier[i]);\n\n      // Training/Validation share the same data, but will have exclusive weights\n      cvTrain[i] = new Frame(Key.make(identifier[i]+\"_\"+_parms._train.toString()+\"_train\"), origTrainFrame.names(), origTrainFrame.vecs());\n      if (origWeightsName!=null) cvTrain[i].remove(origWeightsName);\n      cvTrain[i].add(weightName, weights[2*i]);\n      DKV.put(cvTrain[i]);\n      cvValid[i] = new Frame(Key.make(identifier[i]+\"_\"+_parms._train.toString()+\"_valid\"), origTrainFrame.names(), origTrainFrame.vecs());\n      if (origWeightsName!=null) cvValid[i].remove(origWeightsName);\n      cvValid[i].add(weightName, weights[2*i+1]);\n      DKV.put(cvValid[i]);\n    }\n\n    // clean up memory (mostly small helper vectors and Frame headers)\n    if (_parms._fold_column == null) foldAssignment.remove();\n    if (origWeightsName == null) origWeight.remove();\n\n    // adapt main Job's progress bar to build N+1 models\n    ModelMetrics.MetricBuilder[] mb = new ModelMetrics.MetricBuilder[N];\n    _deleteProgressKey = false; // keep the same progress bar for all N+1 jobs\n\n    long cs = _parms.checksum();\n    final boolean async = false;\n    _cvModelBuilderKeys = new Key[N];\n    ModelBuilder<M, P, O>[] cvModelBuilders = new ModelBuilder[N];\n    for (int i=0; i<N; ++i) {\n      if (isCancelledOrCrashed()) break;\n\n      // Shallow clone - not everything is a private copy!!!\n      cvModelBuilders[i] = (ModelBuilder<M, P, O>) this.clone();\n\n      // Fix up some parameters of the clone - UGLY - hopefully nothing is missing\n      _cvModelBuilderKeys[i] = Key.make(_key.toString() + \"_cv\" + i);\n      cvModelBuilders[i]._key = _cvModelBuilderKeys[i];\n      cvModelBuilders[i]._cvModelBuilderKeys = null; //children cannot have children\n      cvModelBuilders[i]._dest = modelKeys[i]; // the model_id gets updated as well in modifyParmsForCrossValidationSplits (must be consistent)\n      cvModelBuilders[i]._state = JobState.CREATED;\n      cvModelBuilders[i]._parms = (P) _parms.clone();\n      cvModelBuilders[i]._parms._weights_column = weightName;\n      cvModelBuilders[i]._parms._train = cvTrain[i]._key;\n      cvModelBuilders[i]._parms._valid = cvValid[i]._key;\n      cvModelBuilders[i]._parms._fold_assignment = Model.Parameters.FoldAssignmentScheme.AUTO;\n      cvModelBuilders[i].modifyParmsForCrossValidationSplits(i, N, _parms._model_id);\n    }\n    for (int i=0; i<N; ++i) {\n      cvModelBuilders[i].init(false);\n      if (cvModelBuilders[i].error_count() > 0) {\n        // TODO: this crushes all prior top-level messages, including info's and warn's\n        _messages = cvModelBuilders[i]._messages; //bail out on first failure -> main job gets the failed N-fold CV job's error message\n        updateValidationMessages();\n        throw H2OModelBuilderIllegalArgumentException.makeFromBuilder(cvModelBuilders[i]);\n      }\n    }\n    for (int i=0; i<N; ++i) {\n      if (isCancelledOrCrashed()) break;\n      Log.info(\"Building cross-validation model \" + (i + 1) + \" / \" + N + \".\");\n      cvModelBuilders[i]._start_time = System.currentTimeMillis();\n      cvModelBuilders[i].trainModelImpl(-1, true); //non-blocking\n      if (!async)\n        cvModelBuilders[i].block();\n    }\n    // check that this Job's original _params haven't changed\n    assert(cs == _parms.checksum());\n\n    if (!isCancelledOrCrashed()) {\n      Log.info(\"Building main model.\");\n\n      //HACK:\n      // Can't use changeJobState (it assumes that state transitions are monotonic)\n      assert (DKV.get(_key).get() == this);\n      assert(_state == JobState.RUNNING);\n      assert (((Job)DKV.getGet(_key))._state == JobState.RUNNING);\n      _state = JobState.CREATED;\n      assert (((Job)DKV.getGet(_key))._state == JobState.CREATED);\n      assert(!_deleteProgressKey);\n      _deleteProgressKey = true; //delete progress after the main model is done\n\n      modifyParmsForCrossValidationMainModel(N, async ? null : _cvModelBuilderKeys); //tell the main model that it shouldn't stop early either\n\n      trainModelImpl(-1, false); //non-blocking\n      if (!async)\n        block();\n    }\n    else {\n      DKV.remove(dest()); //remove prior main model (must have been built by a prior job)\n    }\n\n    // in async case, the CV models can score while the main model is still building\n    Model[] m = new Model[N];\n    for (int i=0; i<N; ++i) {\n      Frame adaptFr = null;\n      try {\n        adaptFr = new Frame(cvValid[i]);\n        // score CV models\n        if (!isCancelledOrCrashed()) { //don't waste time scoring if the CV run is cancelled\n          // Since canBeDone() is false for the CV model, we need to explicitly set the job state to DONE here:\n          cvModelBuilders[i].block();\n\n          // mark the job as done\n          cvModelBuilders[i].done(true);               // mark the model as completed via force flag (otherwise it wouldn't mark it since canBeDone is false)\n          cvModelBuilders[i].updateModelOutput();      // mirror the Job state in the model\n          m[i] = DKV.getGet(cvModelBuilders[i].dest());   // now the model is ready for consumption\n          m[i].adaptTestForTrain(adaptFr, true, !isSupervised());\n          mb[i] = m[i].scoreMetrics(adaptFr);\n\n          if (nclasses() == 2 /* need holdout predictions for gains/lift table */ || _parms._keep_cross_validation_predictions) {\n            String predName = \"prediction_\" + modelKeys[i].toString();\n            predictionKeys[i] = Key.make(predName);\n            m[i].predictScoreImpl(cvValid[i], adaptFr, predName);\n          }\n        }\n      } finally {\n        // free resources as early as possible\n        if (adaptFr != null) {\n          Model.cleanup_adapt(adaptFr, cvValid[i]);\n          DKV.remove(adaptFr._key);\n        }\n        if (cvTrain[i] != null) DKV.remove(cvTrain[i]._key);\n        if (cvValid[i] != null) DKV.remove(cvValid[i]._key);\n        if (weights[2 * i] != null) weights[2 * i].remove();\n        if (weights[2 * i + 1] != null) weights[2 * i + 1].remove();\n        if (cvModelBuilders[i] != null) cvModelBuilders[i].remove();\n      }\n    }\n\n    // wait for completion of the main model\n    if (!isCancelledOrCrashed()) {\n      block();\n      Model mainModel = DKV.getGet(dest()); // get the fully trained model, but it's not yet done (still needs cv metrics)\n\n      // Check that both the job and the model are not yet marked as done (canBeDone() looks at whether N-fold CV is done)\n      assert (_state == JobState.RUNNING);\n\n      // Compute and put the cross-validation metrics into the main model\n      Log.info(\"Computing \" + N + \"-fold cross-validation metrics.\");\n      mainModel._output._cross_validation_models = new Key[N];\n      mainModel._output._cross_validation_predictions = _parms._keep_cross_validation_predictions ? new Key[N] : null;\n      for (int i = 0; i < N; ++i) {\n        if (i > 0) mb[0].reduce(mb[i]);\n        mainModel._output._cross_validation_models[i] = modelKeys[i];\n        if (_parms._keep_cross_validation_predictions)\n          mainModel._output._cross_validation_predictions[i] = predictionKeys[i];\n      }\n      Frame preds = null;\n      //stitch together holdout predictions into one Vec, to compute the Gains/Lift table\n      if (nclasses() == 2) {\n        Vec[] p1s = new Vec[N];\n        for (int i=0;i<N;++i) {\n          p1s[i] = ((Frame)DKV.getGet(predictionKeys[i])).lastVec();\n        }\n        Frame p1combined = new HoldoutPredictionCombiner().doAll(1,Vec.T_NUM,new Frame(p1s)).outputFrame(new String[]{\"p1\"},null);\n        Vec p1 = p1combined.anyVec();\n        preds = new Frame(new Vec[]{p1, p1, p1}); //pretend to have labels,p0,p1, but will only need p1 anyway\n        if (!_parms._keep_cross_validation_predictions) {\n          for (Key k : predictionKeys) ((Frame)DKV.getGet(k)).remove();\n        }\n      }\n      mainModel._output._cross_validation_metrics = mb[0].makeModelMetrics(mainModel, _parms.train(), null, preds);\n      if (preds!=null) preds.remove();\n      mainModel._output._cross_validation_metrics._description = N + \"-fold cross-validation on training data\";\n      Log.info(mainModel._output._cross_validation_metrics.toString());\n\n      // Now, the main model is complete (has cv metrics)\n      DKV.put(mainModel);\n\n      assert (!isDone());\n      done(true); //now, we can mark the job as done\n      updateModelOutput(); //update the state of the model (tiny race condition here: someone might fetch the model without the updated state/time)\n    }\n    return this;\n  }","id":69417,"modified_method":"/**\n   * Default naive (serial) implementation of N-fold cross-validation\n   * @return Cross-validation Job\n   * (builds N+1 models, all have train+validation metrics, the main model has N-fold cross-validated validation metrics)\n   */\n  public Job<M> computeCrossValidation() {\n    assert(_state == JobState.RUNNING); //main Job is still running\n    final Frame origTrainFrame = train();\n\n    // Step 1: Assign each row to a fold\n    // TODO: Implement better splitting algo (with Strata if response is categorical), e.g. http://www.lexjansen.com/scsug/2009/Liang_Xie2.pdf\n    final Integer N = nFoldWork();\n    final Vec foldAssignment;\n    final Vec foldCol = origTrainFrame.vec(_parms._fold_column);\n    if (_parms._fold_column != null) {\n      foldAssignment = VecUtils.toCategoricalVec(foldCol);\n    } else {\n      final long seed = _parms.nFoldSeed();\n      Log.info(\"Creating \" + N + \" cross-validation splits with random number seed: \" + seed);\n      switch( _parms._fold_assignment ) {\n      case AUTO:\n      case Random:     foldAssignment = ASTKFold.          kfoldColumn(    zTmp(),N,seed); break;\n      case Modulo:     foldAssignment = ASTKFold.    moduloKfoldColumn(    zTmp(),N     ); break;\n      case Stratified: foldAssignment = ASTKFold.stratifiedKFoldColumn(response(),N,seed); break;\n      default:         throw H2O.unimpl();\n      }\n    }\n\n    final Key[] modelKeys = new Key[N];\n    final Key[] predictionKeys = new Key[N];\n\n    // Step 2: Make 2*N binary weight vectors and store the CV train/validation frames\n    final String origWeightsName = _parms._weights_column;\n    final Vec[] weights = new Vec[2*N];\n    final Vec origWeight  = origWeightsName != null ? origTrainFrame.vec(origWeightsName) : origTrainFrame.anyVec().makeCon(1.0);\n    final Frame[] cvTrain = new Frame[N];\n    final Frame[] cvValid = new Frame[N];\n    final String[] identifier = new String[N];\n    final String weightName = \"__internal_cv_weights__\";\n    if (train().find(weightName) != -1) throw new H2OIllegalArgumentException(\"Frame cannot contain a Vec called '\" + weightName + \"'.\");\n\n    final Key<M> origDest = dest();\n    for (int i=0; i<N; ++i) {\n      // Make weights\n      weights[2*i]   = zTmp();\n      weights[2*i+1] = zTmp();\n\n      // Now update the weights in place\n      final int whichFold = i;\n      new MRTask() {\n        @Override\n        public void map(Chunk chks[]) {\n          Chunk fold = chks[0];\n          Chunk orig = chks[1];\n          Chunk train = chks[2];\n          Chunk valid = chks[3];\n          for (int i=0; i< orig._len; ++i) {\n            int foldAssignment = (int)fold.at8(i) % N;\n            assert(foldAssignment >= 0 && foldAssignment <N);\n            boolean holdout = foldAssignment == whichFold;\n            double w = orig.atd(i);\n            train.set(i, holdout ? 0 : w);\n            valid.set(i, holdout ? w : 0);\n          }\n        }\n      }.doAll(new Vec[]{foldAssignment, origWeight, weights[2*i], weights[2*i+1]});\n      if (weights[2*i].isConst() || weights[2*i+1].isConst()) {\n        String msg = \"Not enough data to create \" + N + \" random cross-validation splits. Either reduce nfolds, specify a larger dataset (or specify another random number seed, if applicable).\";\n        throw new H2OIllegalArgumentException(msg);\n      }\n\n      identifier[i] = origDest.toString() + \"_cv_\" + (i+1);\n      modelKeys[i] = Key.make(identifier[i]);\n\n      // Training/Validation share the same data, but will have exclusive weights\n      cvTrain[i] = new Frame(Key.make(identifier[i]+\"_\"+_parms._train.toString()+\"_train\"), origTrainFrame.names(), origTrainFrame.vecs());\n      if (origWeightsName!=null) cvTrain[i].remove(origWeightsName);\n      cvTrain[i].add(weightName, weights[2*i]);\n      DKV.put(cvTrain[i]);\n      cvValid[i] = new Frame(Key.make(identifier[i]+\"_\"+_parms._train.toString()+\"_valid\"), origTrainFrame.names(), origTrainFrame.vecs());\n      if (origWeightsName!=null) cvValid[i].remove(origWeightsName);\n      cvValid[i].add(weightName, weights[2*i+1]);\n      DKV.put(cvValid[i]);\n    }\n\n    // clean up memory (mostly small helper vectors and Frame headers)\n    if (foldAssignment != foldCol || _parms._fold_column == null) foldAssignment.remove();\n    if (origWeightsName == null) origWeight.remove();\n\n    // adapt main Job's progress bar to build N+1 models\n    ModelMetrics.MetricBuilder[] mb = new ModelMetrics.MetricBuilder[N];\n    _deleteProgressKey = false; // keep the same progress bar for all N+1 jobs\n\n    long cs = _parms.checksum();\n    final boolean async = false;\n    _cvModelBuilderKeys = new Key[N];\n    ModelBuilder<M, P, O>[] cvModelBuilders = new ModelBuilder[N];\n    for (int i=0; i<N; ++i) {\n      if (isCancelledOrCrashed()) break;\n\n      // Shallow clone - not everything is a private copy!!!\n      cvModelBuilders[i] = (ModelBuilder<M, P, O>) this.clone();\n\n      // Fix up some parameters of the clone - UGLY - hopefully nothing is missing\n      _cvModelBuilderKeys[i] = Key.make(_key.toString() + \"_cv\" + i);\n      cvModelBuilders[i]._key = _cvModelBuilderKeys[i];\n      cvModelBuilders[i]._cvModelBuilderKeys = null; //children cannot have children\n      cvModelBuilders[i]._dest = modelKeys[i]; // the model_id gets updated as well in modifyParmsForCrossValidationSplits (must be consistent)\n      cvModelBuilders[i]._state = JobState.CREATED;\n      cvModelBuilders[i]._parms = (P) _parms.clone();\n      cvModelBuilders[i]._parms._weights_column = weightName;\n      cvModelBuilders[i]._parms._train = cvTrain[i]._key;\n      cvModelBuilders[i]._parms._valid = cvValid[i]._key;\n      cvModelBuilders[i]._parms._fold_assignment = Model.Parameters.FoldAssignmentScheme.AUTO;\n      cvModelBuilders[i].modifyParmsForCrossValidationSplits(i, N, _parms._model_id);\n    }\n    for (int i=0; i<N; ++i) {\n      cvModelBuilders[i].init(false);\n      if (cvModelBuilders[i].error_count() > 0) {\n        // TODO: this crushes all prior top-level messages, including info's and warn's\n        _messages = cvModelBuilders[i]._messages; //bail out on first failure -> main job gets the failed N-fold CV job's error message\n        updateValidationMessages();\n        throw H2OModelBuilderIllegalArgumentException.makeFromBuilder(cvModelBuilders[i]);\n      }\n    }\n    for (int i=0; i<N; ++i) {\n      if (isCancelledOrCrashed()) break;\n      Log.info(\"Building cross-validation model \" + (i + 1) + \" / \" + N + \".\");\n      cvModelBuilders[i]._start_time = System.currentTimeMillis();\n      cvModelBuilders[i].trainModelImpl(-1, true); //non-blocking\n      if (!async)\n        cvModelBuilders[i].block();\n    }\n    // check that this Job's original _params haven't changed\n    assert(cs == _parms.checksum());\n\n    if (!isCancelledOrCrashed()) {\n      Log.info(\"Building main model.\");\n\n      //HACK:\n      // Can't use changeJobState (it assumes that state transitions are monotonic)\n      assert (DKV.get(_key).get() == this);\n      assert(_state == JobState.RUNNING);\n      assert (((Job)DKV.getGet(_key))._state == JobState.RUNNING);\n      _state = JobState.CREATED;\n      assert (((Job)DKV.getGet(_key))._state == JobState.CREATED);\n      assert(!_deleteProgressKey);\n      _deleteProgressKey = true; //delete progress after the main model is done\n\n      modifyParmsForCrossValidationMainModel(N, async ? null : _cvModelBuilderKeys); //tell the main model that it shouldn't stop early either\n\n      trainModelImpl(-1, false); //non-blocking\n      if (!async)\n        block();\n    }\n    else {\n      DKV.remove(dest()); //remove prior main model (must have been built by a prior job)\n    }\n\n    // in async case, the CV models can score while the main model is still building\n    Model[] m = new Model[N];\n    for (int i=0; i<N; ++i) {\n      Frame adaptFr = null;\n      try {\n        adaptFr = new Frame(cvValid[i]);\n        // score CV models\n        if (!isCancelledOrCrashed()) { //don't waste time scoring if the CV run is cancelled\n          // Since canBeDone() is false for the CV model, we need to explicitly set the job state to DONE here:\n          cvModelBuilders[i].block();\n\n          // mark the job as done\n          cvModelBuilders[i].done(true);               // mark the model as completed via force flag (otherwise it wouldn't mark it since canBeDone is false)\n          cvModelBuilders[i].updateModelOutput();      // mirror the Job state in the model\n          m[i] = DKV.getGet(cvModelBuilders[i].dest());   // now the model is ready for consumption\n          m[i].adaptTestForTrain(adaptFr, true, !isSupervised());\n          mb[i] = m[i].scoreMetrics(adaptFr);\n\n          if (nclasses() == 2 /* need holdout predictions for gains/lift table */ || _parms._keep_cross_validation_predictions) {\n            String predName = \"prediction_\" + modelKeys[i].toString();\n            predictionKeys[i] = Key.make(predName);\n            m[i].predictScoreImpl(cvValid[i], adaptFr, predName);\n          }\n        }\n      } finally {\n        // free resources as early as possible\n        if (adaptFr != null) {\n          Model.cleanup_adapt(adaptFr, cvValid[i]);\n          DKV.remove(adaptFr._key);\n        }\n        if (cvTrain[i] != null) DKV.remove(cvTrain[i]._key);\n        if (cvValid[i] != null) DKV.remove(cvValid[i]._key);\n        if (weights[2 * i] != null) weights[2 * i].remove();\n        if (weights[2 * i + 1] != null) weights[2 * i + 1].remove();\n        if (cvModelBuilders[i] != null) cvModelBuilders[i].remove();\n      }\n    }\n\n    // wait for completion of the main model\n    if (!isCancelledOrCrashed()) {\n      block();\n      Model mainModel = DKV.getGet(dest()); // get the fully trained model, but it's not yet done (still needs cv metrics)\n\n      // Check that both the job and the model are not yet marked as done (canBeDone() looks at whether N-fold CV is done)\n      assert (_state == JobState.RUNNING);\n\n      // Compute and put the cross-validation metrics into the main model\n      Log.info(\"Computing \" + N + \"-fold cross-validation metrics.\");\n      mainModel._output._cross_validation_models = new Key[N];\n      mainModel._output._cross_validation_predictions = _parms._keep_cross_validation_predictions ? new Key[N] : null;\n      for (int i = 0; i < N; ++i) {\n        if (i > 0) mb[0].reduce(mb[i]);\n        mainModel._output._cross_validation_models[i] = modelKeys[i];\n        if (_parms._keep_cross_validation_predictions)\n          mainModel._output._cross_validation_predictions[i] = predictionKeys[i];\n      }\n      Frame preds = null;\n      //stitch together holdout predictions into one Vec, to compute the Gains/Lift table\n      if (nclasses() == 2) {\n        Vec[] p1s = new Vec[N];\n        for (int i=0;i<N;++i) {\n          p1s[i] = ((Frame)DKV.getGet(predictionKeys[i])).lastVec();\n        }\n        Frame p1combined = new HoldoutPredictionCombiner().doAll(1,Vec.T_NUM,new Frame(p1s)).outputFrame(new String[]{\"p1\"},null);\n        Vec p1 = p1combined.anyVec();\n        preds = new Frame(new Vec[]{p1, p1, p1}); //pretend to have labels,p0,p1, but will only need p1 anyway\n        if (!_parms._keep_cross_validation_predictions) {\n          for (Key k : predictionKeys) ((Frame)DKV.getGet(k)).remove();\n        }\n      }\n      mainModel._output._cross_validation_metrics = mb[0].makeModelMetrics(mainModel, _parms.train(), null, preds);\n      if (preds!=null) preds.remove();\n      mainModel._output._cross_validation_metrics._description = N + \"-fold cross-validation on training data\";\n      Log.info(mainModel._output._cross_validation_metrics.toString());\n\n      // Now, the main model is complete (has cv metrics)\n      DKV.put(mainModel);\n\n      assert (!isDone());\n      done(true); //now, we can mark the job as done\n      updateModelOutput(); //update the state of the model (tiny race condition here: someone might fetch the model without the updated state/time)\n    }\n    return this;\n  }","commit_id":"b5d61b867c9d01c1902ab91df778967e98790c8a","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public final Row extractDenseRow(double [] vals, Row row) {\n    row.bad = false;\n    row.rid = 0;\n    row.cid = 0;\n    if(row.weight == 0) return row;\n\n    if (_skipMissing)\n      for (double d:vals)\n        if(Double.isNaN(d)) {\n          row.bad = true;\n          return row;\n        }\n    int nbins = 0;\n    for (int i = 0; i < _cats; ++i) {\n      int c = getCategoricalId(i,Double.isNaN(vals[i])?_catModes[i]:(int)vals[i]);\n      if(c >= 0)row.binIds[nbins++] = c;\n    }\n    row.nBins = nbins;\n    final int n = _nums;\n    for (int i = 0; i < n; ++i) {\n      double d = vals[_cats + i]; // can be NA if skipMissing() == false\n      if (Double.isNaN(d)) d = _numMeans[i];\n      if (_normMul != null && _normSub != null)\n        d = (d - _normSub[i]) * _normMul[i];\n      row.numVals[i] = d;\n    }\n    int off = responseChunkId(0);\n    for (int i = off; i < Math.min(vals.length,off + _responses); ++i) {\n      try {\n        row.response[i] = vals[responseChunkId(i)];\n      } catch(Throwable t){\n        throw new RuntimeException(t);\n      }\n      if (_normRespMul != null)\n        row.response[i] = (row.response[i] - _normRespSub[i]) * _normRespMul[i];\n      if (Double.isNaN(row.response[i])) {\n        row.bad = true;\n        return row;\n      }\n    }\n    return row;\n  }","id":69418,"modified_method":"public final Row extractDenseRow(double [] vals, Row row) {\n    row.bad = false;\n    row.rid = 0;\n    row.cid = 0;\n    if(row.weight == 0) return row;\n\n    if (_skipMissing)\n      for (double d:vals)\n        if(Double.isNaN(d)) {\n          row.bad = true;\n          return row;\n        }\n    int nbins = 0;\n    for (int i = 0; i < _cats; ++i) {\n      int c = getCategoricalId(i,Double.isNaN(vals[i])?_catModes[i]:(int)vals[i]);\n      if(c >= 0)row.binIds[nbins++] = c;\n    }\n    row.nBins = nbins;\n    final int n = _nums;\n    for (int i = 0; i < n; ++i) {\n      if( isInteractionVec(i) ) {\n        int offset;\n        InteractionWrappedVec iwv = ((InteractionWrappedVec)_adaptedFrame.vec(_cats+i));\n        int v1 = _adaptedFrame.find(iwv.v1());\n        int v2 = _adaptedFrame.find(iwv.v2());\n        if ( v1 < _cats ) offset = getCategoricalId(v1,Double.isNaN(vals[v1])?_catModes[v1]:(int)vals[v1]);\n        else if (v2 < _cats) offset = getCategoricalId(v2,Double.isNaN(vals[v2])?_catModes[v1]:(int)vals[v2]);\n        else offset = 0;\n        row.numVals[i + offset] = vals[_cats + i]; // essentially: vals[v1] * vals[v2])\n      }\n      double d = vals[_cats + i]; // can be NA if skipMissing() == false\n      if (Double.isNaN(d)) d = _numMeans[i];\n      if (_normMul != null && _normSub != null)\n        d = (d - _normSub[i]) * _normMul[i];\n      row.numVals[i] = d;\n    }\n    int off = responseChunkId(0);\n    for (int i = off; i < Math.min(vals.length,off + _responses); ++i) {\n      try {\n        row.response[i] = vals[responseChunkId(i)];\n      } catch(Throwable t){\n        throw new RuntimeException(t);\n      }\n      if (_normRespMul != null)\n        row.response[i] = (row.response[i] - _normRespSub[i]) * _normRespMul[i];\n      if (Double.isNaN(row.response[i])) {\n        row.bad = true;\n        return row;\n      }\n    }\n    return row;\n  }","commit_id":"351ef8e7b2da0f5b3c9ec9314d743d5928852834","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public final Row extractDenseRow(Chunk[] chunks, int rid, Row row) {\n    row.bad = false;\n    row.rid = rid + chunks[0].start();\n    row.cid = rid;\n    if(_weights)\n      row.weight = chunks[weightChunkId()].atd(rid);\n    if(row.weight == 0) return row;\n    if (_skipMissing) {\n      int N = _cats + _nums;\n      for (int i = 0; i < N; ++i)\n        if (chunks[i].isNA(rid)) {\n          row.bad = true;\n          return row;\n        }\n    }\n    int nbins = 0;\n    for (int i = 0; i < _cats; ++i) {\n      int cid = getCategoricalId(i,chunks[i].isNA(rid)?_catModes[i]:(int)chunks[i].at8(rid));\n      if(cid >= 0)\n        row.binIds[nbins++] = cid;\n    }\n    row.nBins = nbins;\n    final int n = _nums;\n    for (int i = 0; i < n; ++i) {\n      if( isInteractionVec(i) ) {\n        int offset;\n        int v1 = _adaptedFrame.find(((InteractionWrappedVec) chunks[_cats + i].vec()).v1());\n        int v2 = _adaptedFrame.find( ((InteractionWrappedVec)chunks[_cats+i].vec()).v2());\n        if( chunks[v1].vec().isCategorical() )      offset = (int)chunks[v1].at8(rid);\n        else if( chunks[v2].vec().isCategorical() ) offset = (int)chunks[v2].at8(rid);\n        else offset=0;\n        row.numVals[i+offset] = chunks[_cats+i].atd(rid);  // essentially: chunks[v1].atd(rid) * chunks[v2].atd(rid) (see InteractionWrappedVec)\n      } else {\n        double d = chunks[_cats + i].atd(rid); // can be NA if skipMissing() == false\n        if (Double.isNaN(d))\n          d = _numMeans[i];\n        if (_normMul != null && _normSub != null)\n          d = (d - _normSub[i]) * _normMul[i];\n        row.numVals[i] = d;\n      }\n    }\n    for (int i = 0; i < _responses; ++i) {\n      try {\n        row.response[i] = chunks[responseChunkId(i)].atd(rid);\n      } catch(Throwable t){\n        throw new RuntimeException(t);\n      }\n      if (_normRespMul != null)\n        row.response[i] = (row.response[i] - _normRespSub[i]) * _normRespMul[i];\n      if (Double.isNaN(row.response[i])) {\n        row.bad = true;\n        return row;\n      }\n    }\n    if(_offset)\n      row.offset = chunks[offsetChunkId()].atd(rid);\n    return row;\n  }","id":69419,"modified_method":"public final Row extractDenseRow(Chunk[] chunks, int rid, Row row) {\n    row.bad = false;\n    row.rid = rid + chunks[0].start();\n    row.cid = rid;\n    if(_weights)\n      row.weight = chunks[weightChunkId()].atd(rid);\n    if(row.weight == 0) return row;\n    if (_skipMissing) {\n      int N = _cats + _nums;\n      for (int i = 0; i < N; ++i)\n        if (chunks[i].isNA(rid)) {\n          row.bad = true;\n          return row;\n        }\n    }\n    int nbins = 0;\n    for (int i = 0; i < _cats; ++i) {\n      int cid = getCategoricalId(i,chunks[i].isNA(rid)?_catModes[i]:(int)chunks[i].at8(rid));\n      if(cid >= 0)\n        row.binIds[nbins++] = cid;\n    }\n    row.nBins = nbins;\n    final int n = _nums;\n    for (int i = 0; i < n; ++i) {\n      if( isInteractionVec(i) ) {\n        int offset;\n        InteractionWrappedVec iwv = ((InteractionWrappedVec)_adaptedFrame.vec(_cats+i));\n        int v1 = _adaptedFrame.find(iwv.v1());\n        int v2 = _adaptedFrame.find(iwv.v2());\n        if( v1 < _cats )       offset = (int)chunks[v1].at8(rid);\n        else if( v2 < _cats )  offset = (int)chunks[v2].at8(rid);\n        else offset=0;\n        row.numVals[i+offset] = chunks[_cats+i].atd(rid);  // essentially: chunks[v1].atd(rid) * chunks[v2].atd(rid) (see InteractionWrappedVec)\n      } else {\n        double d = chunks[_cats + i].atd(rid); // can be NA if skipMissing() == false\n        if (Double.isNaN(d))\n          d = _numMeans[i];\n        if (_normMul != null && _normSub != null)\n          d = (d - _normSub[i]) * _normMul[i];\n        row.numVals[i] = d;\n      }\n    }\n    for (int i = 0; i < _responses; ++i) {\n      try {\n        row.response[i] = chunks[responseChunkId(i)].atd(rid);\n      } catch(Throwable t){\n        throw new RuntimeException(t);\n      }\n      if (_normRespMul != null)\n        row.response[i] = (row.response[i] - _normRespSub[i]) * _normRespMul[i];\n      if (Double.isNaN(row.response[i])) {\n        row.bad = true;\n        return row;\n      }\n    }\n    if(_offset)\n      row.offset = chunks[offsetChunkId()].atd(rid);\n    return row;\n  }","commit_id":"351ef8e7b2da0f5b3c9ec9314d743d5928852834","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override public ModelMetrics makeModelMetrics(Model m, Frame f, Frame preds) {\n    GLMModel gm = (GLMModel)m;\n    computeAIC();\n    ModelMetrics metrics = _metricBuilder.makeModelMetrics(gm, f, null);\n    if (_parms._family == Family.binomial) {\n      ModelMetricsBinomial metricsBinommial = (ModelMetricsBinomial) metrics;\n      GainsLift gl = null;\n      if (preds!=null) {\n        gl = new GainsLift(preds.lastVec(), f.vec(m._parms._response_column));\n        gl.exec();\n      }\n      metrics = new ModelMetricsBinomialGLM(m, f, metrics._MSE, _domain, metricsBinommial._sigma, metricsBinommial._auc, metricsBinommial._logloss, residualDeviance(), nullDeviance(), _aic, nullDOF(), resDOF(), gl);\n    } else if( _parms._family == Family.multinomial) {\n      ModelMetricsMultinomial metricsMultinomial = (ModelMetricsMultinomial) metrics;\n      metrics = new ModelMetricsMultinomialGLM(m, f, metricsMultinomial._MSE, metricsMultinomial._domain, metricsMultinomial._sigma, metricsMultinomial._cm, metricsMultinomial._hit_ratios, metricsMultinomial._logloss, residualDeviance(), nullDeviance(), _aic, nullDOF(), resDOF());\n    } else {\n      ModelMetricsRegression metricsRegression = (ModelMetricsRegression) metrics;\n      metrics = new ModelMetricsRegressionGLM(m, f, metricsRegression._MSE, metricsRegression._sigma, residualDeviance(), residualDeviance()/_wcount, nullDeviance(), _aic, nullDOF(), resDOF());\n    }\n    return gm._output.addModelMetrics(metrics); // Update the metrics in-place with the GLM version\n  }","id":69420,"modified_method":"@Override public ModelMetrics makeModelMetrics(Model m, Frame f, Frame preds) {\n    GLMModel gm = (GLMModel)m;\n    computeAIC();\n    ModelMetrics metrics = _metricBuilder.makeModelMetrics(gm, f, null);\n    if (_parms._family == Family.binomial) {\n      ModelMetricsBinomial metricsBinommial = (ModelMetricsBinomial) metrics;\n      GainsLift gl = null;\n      if (preds!=null) {\n        Vec resp = f.vec(m._parms._response_column);\n        if (resp != null) {\n          gl = new GainsLift(preds.lastVec(), resp);\n          gl.exec();\n        }\n      }\n      metrics = new ModelMetricsBinomialGLM(m, f, metrics._MSE, _domain, metricsBinommial._sigma, metricsBinommial._auc, metricsBinommial._logloss, residualDeviance(), nullDeviance(), _aic, nullDOF(), resDOF(), gl);\n    } else if( _parms._family == Family.multinomial) {\n      ModelMetricsMultinomial metricsMultinomial = (ModelMetricsMultinomial) metrics;\n      metrics = new ModelMetricsMultinomialGLM(m, f, metricsMultinomial._MSE, metricsMultinomial._domain, metricsMultinomial._sigma, metricsMultinomial._cm, metricsMultinomial._hit_ratios, metricsMultinomial._logloss, residualDeviance(), nullDeviance(), _aic, nullDOF(), resDOF());\n    } else {\n      ModelMetricsRegression metricsRegression = (ModelMetricsRegression) metrics;\n      metrics = new ModelMetricsRegressionGLM(m, f, metricsRegression._MSE, metricsRegression._sigma, residualDeviance(), residualDeviance()/_wcount, nullDeviance(), _aic, nullDOF(), resDOF());\n    }\n    return gm._output.addModelMetrics(metrics); // Update the metrics in-place with the GLM version\n  }","commit_id":"9349a8a1ba8e32f65c4d4e2d4e0b228cd4059e67","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override public ModelMetrics makeModelMetrics(Model m, Frame f, Frame preds) {\n      double mse = Double.NaN;\n      double logloss = Double.NaN;\n      double sigma = Double.NaN;\n      if (_wcount > 0) {\n        sigma = weightedSigma();\n        mse = _sumsqe / _wcount;\n        logloss = _logloss / _wcount;\n        AUC2 auc = new AUC2(_auc);\n        GainsLift gl = null;\n        if (preds!=null) {\n          gl = new GainsLift(preds.lastVec(), f.vec(m._parms._response_column));\n          gl.exec();\n        }\n        return m._output.addModelMetrics(new ModelMetricsBinomial(m, f, mse, _domain, sigma, auc,  logloss, gl));\n      } else {\n        return m._output.addModelMetrics(new ModelMetricsBinomial(m, f, mse,   null,  sigma, null, logloss, null));\n      }\n    }","id":69421,"modified_method":"@Override public ModelMetrics makeModelMetrics(Model m, Frame f, Frame preds) {\n      double mse = Double.NaN;\n      double logloss = Double.NaN;\n      double sigma = Double.NaN;\n      if (_wcount > 0) {\n        sigma = weightedSigma();\n        mse = _sumsqe / _wcount;\n        logloss = _logloss / _wcount;\n        AUC2 auc = new AUC2(_auc);\n        GainsLift gl = null;\n        if (preds!=null) {\n          Vec resp = f.vec(m._parms._response_column);\n          if (resp != null) {\n            gl = new GainsLift(preds.lastVec(), resp);\n            gl.exec();\n          }\n        }\n        return m._output.addModelMetrics(new ModelMetricsBinomial(m, f, mse, _domain, sigma, auc,  logloss, gl));\n      } else {\n        return m._output.addModelMetrics(new ModelMetricsBinomial(m, f, mse,   null,  sigma, null, logloss, null));\n      }\n    }","commit_id":"9349a8a1ba8e32f65c4d4e2d4e0b228cd4059e67","url":"https://github.com/h2oai/h2o-3"},{"original_method":"private void writeIcon() throws JspException {\n         if (checkType()) {\n             if (\"dir\".equalsIgnoreCase(type) ||\n                     \"directory\".equalsIgnoreCase(type) ||\n                     \"folder\".equalsIgnoreCase(type)) {\n                 ConfigTagHelper.writeIcon(DIR_LIST_ICON, DIR_ALT_KEY, pageContext);\n             }\n             else if (\"symlink\".equalsIgnoreCase(type)) {\n                 ConfigTagHelper.writeIcon(SYMLINK_LIST_ICON, SYMLINK_ALT_KEY, pageContext);\n             }\n             else {\n                 ConfigTagHelper.writeIcon(FILE_LIST_ICON,\n                                             FILE_ALT_KEY, pageContext);\n             }\n         }\n         else {\n             ConfigTagHelper.writeErrorIcon(pageContext);\n         }\n     }","id":69422,"modified_method":"private String writeIcon() throws JspException {\n         IconTag i = new IconTag();\n         i.setParent(getParent());\n         i.setPageContext(pageContext);\n         if (\"dir\".equalsIgnoreCase(type) || \"directory\".equalsIgnoreCase(type) ||\n                 \"folder\".equalsIgnoreCase(type)) {\n             i.setType(\"file-directory\");\n         }\n         else if (\"symlink\".equalsIgnoreCase(type)) {\n             i.setType(\"file-symlink\");\n         }\n         else {\n             i.setType(\"file-file\");\n         }\n         String result = i.renderStartTag();\n         i.release();\n         return result;\n     }","commit_id":"c7cd1f2a3dad4fc2fe62e7caabddb0ae93a4d455","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n      * {@inheritDoc}\n      */\n     @Override\n    public int doEndTag() throws JspException {\n         if (nolink  || id == null) {\n             writeIcon();\n             ConfigTagHelper.write(StringEscapeUtils.escapeXml(path), pageContext);\n         }\n         else {\n             String url;\n             if (revisionId != null) {\n                 url = makeConfigFileRevisionUrl(id, revisionId);\n             }\n             else {\n                 url = makeConfigFileUrl(id);\n             }\n\n             ConfigTagHelper.write(\"<a href=\\\"\" + url + \"\\\">\", pageContext);\n             writeIcon();\n             ConfigTagHelper.write(StringEscapeUtils.escapeXml(path) + \"<\/a>\", pageContext);\n         }\n         return BodyTagSupport.SKIP_BODY;\n     }","id":69423,"modified_method":"/**\n      * {@inheritDoc}\n      */\n     @Override\n    public int doEndTag() throws JspException {\n         StringBuilder result = new StringBuilder();\n         if (nolink  || id == null) {\n             result.append(writeIcon());\n             result.append(StringEscapeUtils.escapeXml(path));\n         }\n         else {\n             String url;\n             if (revisionId != null) {\n                 url = makeConfigFileRevisionUrl(id, revisionId);\n             }\n             else {\n                 url = makeConfigFileUrl(id);\n             }\n\n             result.append(\"<a href=\\\"\" + url + \"\\\">\");\n             result.append(writeIcon());\n             result.append(StringEscapeUtils.escapeXml(path) + \"<\/a>\");\n         }\n         JspWriter writer = pageContext.getOut();\n         try {\n             writer.write(result.toString());\n         }\n         catch (IOException e) {\n             throw new JspException(e);\n         }\n         return BodyTagSupport.SKIP_BODY;\n     }","commit_id":"c7cd1f2a3dad4fc2fe62e7caabddb0ae93a4d455","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * {@inheritDoc}\n     */\n    public int doEndTag() throws JspException {\n        if (nolink || id == null) {\n            writeIcon();\n            ConfigTagHelper.write(\"&nbsp;\" + name, pageContext);\n        }\n        else {\n            ConfigTagHelper.write(\"<a href=\\\"\" +\n                        ConfigChannelTag.makeConfigChannelUrl(id) +\n                        \"\\\">\", pageContext);\n            writeIcon();\n            ConfigTagHelper.write(\"&nbsp;\" + name + \"<\/a>\", pageContext);\n        }\n        return BodyTagSupport.SKIP_BODY;\n    }","id":69424,"modified_method":"/**\n     * {@inheritDoc}\n     */\n    public int doEndTag() throws JspException {\n        StringBuilder result = new StringBuilder();\n        if (nolink || id == null) {\n            writeIcon();\n            result.append(name);\n        }\n        else {\n            result.append(\"<a href=\\\"\" +\n                        ConfigChannelTag.makeConfigChannelUrl(id) + \"\\\">\");\n            result.append(writeIcon());\n            result.append(name + \"<\/a>\");\n        }\n        JspWriter writer = pageContext.getOut();\n        try {\n            writer.write(result.toString());\n        }\n        catch (IOException e) {\n            throw new JspException(e);\n        }\n        return BodyTagSupport.SKIP_BODY;\n    }","commit_id":"8d477a93ec7c04b1cb0837b606e50f82b4177a91","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private void writeIcon() throws JspException {\n        if (checkType()) {\n            Map iconMap = getIconMap();\n\n            String imgPath = (String)iconMap.get(\"LIST_\" + type.toUpperCase());\n            String altKey = (String)iconMap.get(\"KEY_\" + type.toUpperCase());\n            ConfigTagHelper.writeIcon(imgPath, altKey, pageContext);\n        }\n        else {\n            ConfigTagHelper.writeErrorIcon(pageContext);\n        }\n\n    }","id":69425,"modified_method":"private String writeIcon() throws JspException {\n        IconTag i = new IconTag();\n        i.setParent(getParent());\n        i.setPageContext(pageContext);\n        if (type.equals(\"central\") || type.equals(\"global\")) {\n            i.setType(\"header-channel-configuration\");\n        }\n        else if (type.equals(\"local_override\")) {\n            i.setType(\"header-system\");\n        }\n        else {\n            i.setType(\"sandbox\");\n            i.setTitle(type);\n        }\n        String result = i.renderStartTag();\n        i.release();\n        return result;\n    }","commit_id":"8d477a93ec7c04b1cb0837b606e50f82b4177a91","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * {@inheritDoc}\n     */\n    public int doEndTag() throws JspException {\n        StringBuilder result = new StringBuilder();\n        if (nolink || id == null) {\n            writeIcon();\n            result.append(name);\n        }\n        else {\n            result.append(\"<a href=\\\"\" +\n                        ConfigChannelTag.makeConfigChannelUrl(id) + \"\\\">\");\n            result.append(writeIcon());\n            result.append(name + \"<\/a>\");\n        }\n        JspWriter writer = pageContext.getOut();\n        try {\n            writer.write(result.toString());\n        }\n        catch (IOException e) {\n            throw new JspException(e);\n        }\n        return BodyTagSupport.SKIP_BODY;\n    }","id":69426,"modified_method":"/**\n     * {@inheritDoc}\n     */\n    public int doEndTag() throws JspException {\n        StringBuilder result = new StringBuilder();\n        if (nolink || id == null) {\n            result.append(writeIcon());\n            result.append(name);\n        }\n        else {\n            result.append(\"<a href=\\\"\" +\n                        ConfigChannelTag.makeConfigChannelUrl(id) + \"\\\">\");\n            result.append(writeIcon());\n            result.append(name + \"<\/a>\");\n        }\n        JspWriter writer = pageContext.getOut();\n        try {\n            writer.write(result.toString());\n        }\n        catch (IOException e) {\n            throw new JspException(e);\n        }\n        return BodyTagSupport.SKIP_BODY;\n    }","commit_id":"1c75ab6740c9de287e8364fcf1144b27d4b693a0","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"public static void mappingScript_CodeBlock_1238589718396(final IOperationContext operationContext, final MappingScriptContext _context) {\n    Language language = Language.getLanguageFor(_context.getOriginalInputModel().getModelDescriptor());\n    if (language == null) {\n      return;\n    }\n    SModel structureModel = language.getStructureModelDescriptor().getSModel();\n    Map<SNode, SNode> conceptsToTargets = MapSequence.fromMap(new HashMap<SNode, SNode>());\n    Map<SNode, SNode> partsToLinkDeclarations = MapSequence.fromMap(new HashMap<SNode, SNode>());\n    List<SNode> mpsliteConceptDeclarations = SModelOperations.getRoots(_context.getModel(), \"jetbrains.mpslite.structure.MPSLiteConceptDeclaration\");\n    List<SNode> allConcepts = SModelOperations.getRoots(_context.getModel(), \"jetbrains.mpslite.structure.IMPSLiteConcept\");\n    for(SNode conceptDeclaration : allConcepts) {\n      SNode concept = SConceptOperations.createNewNode(\"jetbrains.mps.lang.structure.structure.ConceptDeclaration\", null);\n      SPropertyOperations.set(concept, \"name\", SPropertyOperations.getString(conceptDeclaration, \"name\"));\n      SPropertyOperations.set(concept, \"rootable\", \"\" + SPropertyOperations.getBoolean(conceptDeclaration, \"root\"));\n      MapSequence.fromMap(conceptsToTargets).put(conceptDeclaration, concept);\n    }\n    //     extends\n    for(SNode conceptDeclaration : allConcepts) {\n      SLinkOperations.setTarget(SNodeOperations.cast(conceptsToTargets.get(conceptDeclaration), \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), \"extends\", SNodeOperations.cast(AbstractConceptReference_Behavior.call_getConcept_1238594571574(SLinkOperations.getTarget(conceptDeclaration, \"extends\", true), conceptsToTargets), \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), false);\n    }\n    //     structure\n    for(SNode conceptDeclaration : mpsliteConceptDeclarations) {\n      LineList_Behavior.call_fillConceptStructure_1238593666753(SLinkOperations.getTarget(conceptDeclaration, \"lineList\", true), SNodeOperations.cast(conceptsToTargets.get(conceptDeclaration), \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), conceptsToTargets, partsToLinkDeclarations);\n    }\n    List<SNode> binaryOperations = SModelOperations.getRoots(_context.getModel(), \"jetbrains.mpslite.structure.BinaryOperationConcept\");\n    for(SNode binaryOperationConcept : binaryOperations) {\n      EditorGenerationUtils.fillBinaryOperationStructure(binaryOperationConcept, conceptsToTargets, partsToLinkDeclarations);\n    }\n    List<SNode> variableConcepts = SModelOperations.getRoots(_context.getModel(), \"jetbrains.mpslite.structure.VariableConcept\");\n    for(SNode variableConcept : variableConcepts) {\n      EditorGenerationUtils.fillVariableConceptStruncture(variableConcept, conceptsToTargets, partsToLinkDeclarations);\n    }\n    //     editor\n    SModel editorModel = language.getEditorModelDescriptor().getSModel();\n    SModel actionsModel = language.getActionsModelDescriptor().getSModel();\n    Map<SNode, SNode> conceptsToEditors = MapSequence.fromMap(new HashMap<SNode, SNode>());\n    for(SNode conceptDeclaration : mpsliteConceptDeclarations) {\n      SNode editor = SConceptOperations.createNewNode(\"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\", null);\n      SNode lineList = SLinkOperations.getTarget(conceptDeclaration, \"lineList\", true);\n      SNode contentCell = EditorGenerationUtils.generateEditorCellModel(lineList, conceptDeclaration, partsToLinkDeclarations);\n      if (contentCell == null) {\n        continue;\n      }\n      SLinkOperations.setTarget(editor, \"cellModel\", contentCell, true);\n      SLinkOperations.setTarget(editor, \"conceptDeclaration\", conceptsToTargets.get(conceptDeclaration), false);\n      MapSequence.fromMap(conceptsToEditors).put(conceptDeclaration, editor);\n    }\n    for(SNode variableConcept : variableConcepts) {\n      SNode editor = SConceptOperations.createNewNode(\"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\", null);\n      SNode lineList = SLinkOperations.getTarget(variableConcept, \"concreteSyntax\", true);\n      SNode contentCell = EditorGenerationUtils.generateEditorCellModel(lineList, variableConcept, partsToLinkDeclarations);\n      if (contentCell == null) {\n        continue;\n      }\n      SLinkOperations.setTarget(editor, \"cellModel\", contentCell, true);\n      SLinkOperations.setTarget(editor, \"conceptDeclaration\", conceptsToTargets.get(variableConcept), false);\n      MapSequence.fromMap(conceptsToEditors).put(variableConcept, editor);\n    }\n    SNode actions = SConceptOperations.createNewNode(\"jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActions\", null);\n    SPropertyOperations.set(actions, \"name\", \"_BinaryOperations_SideTransform\");\n    for(SNode binaryOperationConcept : binaryOperations) {\n      SNode editor = SConceptOperations.createNewNode(\"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\", null);\n      SNode contentCell = EditorGenerationUtils.generateBinaryOperationCellModel(binaryOperationConcept, partsToLinkDeclarations);\n      SLinkOperations.setTarget(editor, \"cellModel\", contentCell, true);\n      SLinkOperations.setTarget(editor, \"conceptDeclaration\", conceptsToTargets.get(binaryOperationConcept), false);\n      MapSequence.fromMap(conceptsToEditors).put(binaryOperationConcept, editor);\n      EditorGenerationUtils.fillBinarySideTransformActions(binaryOperationConcept, actions, conceptsToTargets, partsToLinkDeclarations);\n    }\n    //     setting roots and deleting input roots\n    structureModel.setLoading(true);\n    for(SNode root : ListSequence.fromList(ListSequence.<SNode>fromArray()).addSequence(ListSequence.fromList(SModelOperations.getRoots(structureModel, null)))) {\n      structureModel.removeRoot(root);\n    }\n    for(SNode conceptDeclaration : allConcepts) {\n      SNode concept = conceptsToTargets.get(conceptDeclaration);\n      SModelOperations.addRootNode(structureModel, concept);\n    }\n    structureModel.setLoading(false);\n    SModelRepository.getInstance().markChanged(structureModel);\n    editorModel.setLoading(true);\n    for(SNode root : ListSequence.fromList(ListSequence.<SNode>fromArray()).addSequence(ListSequence.fromList(SModelOperations.getRoots(editorModel, null)))) {\n      editorModel.removeRoot(root);\n    }\n    for(SNode conceptDeclaration : allConcepts) {\n      SNode editorDeclaration = conceptsToEditors.get(conceptDeclaration);\n      SModelOperations.addRootNode(editorModel, editorDeclaration);\n    }\n    editorModel.setLoading(false);\n    actionsModel.setLoading(true);\n    for(SNode root : ListSequence.fromList(ListSequence.<SNode>fromArray()).addSequence(ListSequence.fromList(SModelOperations.getRoots(actionsModel, null)))) {\n      actionsModel.removeRoot(root);\n    }\n    SModelOperations.addRootNode(actionsModel, actions);\n    actionsModel.setLoading(false);\n    SModelRepository.getInstance().markChanged(editorModel);\n    SModelRepository.getInstance().markChanged(actionsModel);\n    for(SNode conceptDeclaration : allConcepts) {\n      SNodeOperations.deleteNode(conceptDeclaration);\n    }\n  }","id":69427,"modified_method":"public static void mappingScript_CodeBlock_1238589718396(final IOperationContext operationContext, final MappingScriptContext _context) {\n    Language language = Language.getLanguageFor(_context.getOriginalInputModel().getModelDescriptor());\n    if (language == null) {\n      return;\n    }\n    SModel structureModel = language.getStructureModelDescriptor().getSModel();\n    Map<SNode, SNode> conceptsToTargets = MapSequence.fromMap(new HashMap<SNode, SNode>());\n    Map<SNode, SNode> partsToLinkDeclarations = MapSequence.fromMap(new HashMap<SNode, SNode>());\n    SNode conceptContainer = ListSequence.fromList(SModelOperations.getRoots(_context.getModel(), \"jetbrains.mpslite.structure.ConceptContainer\")).first();\n    List<SNode> mpsliteConceptDeclarations = SNodeOperations.getDescendants(conceptContainer, \"jetbrains.mpslite.structure.MPSLiteConceptDeclaration\", false);\n    List<SNode> allConcepts = SLinkOperations.getTargets(conceptContainer, \"mpsLiteConcept\", true);\n    for(SNode conceptDeclaration : allConcepts) {\n      SNode concept = SConceptOperations.createNewNode(\"jetbrains.mps.lang.structure.structure.ConceptDeclaration\", null);\n      SPropertyOperations.set(concept, \"name\", SPropertyOperations.getString(conceptDeclaration, \"name\"));\n      SPropertyOperations.set(concept, \"rootable\", \"\" + IMPSLiteConcept_Behavior.call_isRootable_1239714833738(conceptDeclaration));\n      if (IMPSLiteConcept_Behavior.call_isAbstract_1239715026284(conceptDeclaration)) {\n        SNode booleanConceptProperty = SLinkOperations.addNewChild(concept, \"conceptProperty\", \"jetbrains.mps.lang.structure.structure.BooleanConceptProperty\");\n        SNode conceptProperty_Abstract = SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.lang.core.structure.BaseConcept\"), \"conceptPropertyDeclaration\", true)).where(new IWhereFilter <SNode>() {\n\n          public boolean accept(SNode it) {\n            return \"abstract\".equals(SPropertyOperations.getString(it, \"name\"));\n          }\n        }).first(), \"jetbrains.mps.lang.structure.structure.BooleanConceptPropertyDeclaration\");\n        SLinkOperations.setTarget(booleanConceptProperty, \"conceptPropertyDeclaration\", conceptProperty_Abstract, false);\n      }\n      MapSequence.fromMap(conceptsToTargets).put(conceptDeclaration, concept);\n    }\n    //     extends\n    for(SNode conceptDeclaration : allConcepts) {\n      SLinkOperations.setTarget(((SNode)conceptsToTargets.get(conceptDeclaration)), \"extends\", SNodeOperations.cast(AbstractConceptReference_Behavior.call_getConcept_1238594571574(SLinkOperations.getTarget(conceptDeclaration, \"extends\", true), conceptsToTargets), \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), false);\n    }\n    //     structure\n    for(SNode conceptDeclaration : mpsliteConceptDeclarations) {\n      LineList_Behavior.call_fillConceptStructure_1238593666753(SLinkOperations.getTarget(conceptDeclaration, \"lineList\", true), SNodeOperations.cast(conceptsToTargets.get(conceptDeclaration), \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), conceptsToTargets, partsToLinkDeclarations);\n    }\n    List<SNode> binaryOperations = SNodeOperations.getDescendants(conceptContainer, \"jetbrains.mpslite.structure.BinaryOperationConcept\", false);\n    for(SNode binaryOperationConcept : binaryOperations) {\n      EditorGenerationUtils.fillBinaryOperationStructure(binaryOperationConcept, conceptsToTargets, partsToLinkDeclarations);\n    }\n    List<SNode> variableConcepts = SNodeOperations.getDescendants(conceptContainer, \"jetbrains.mpslite.structure.VariableConcept\", false);\n    for(SNode variableConcept : variableConcepts) {\n      EditorGenerationUtils.fillVariableConceptStruncture(variableConcept, conceptsToTargets, partsToLinkDeclarations);\n    }\n    //     editor\n    SModel editorModel = language.getEditorModelDescriptor().getSModel();\n    SModel actionsModel = language.getActionsModelDescriptor().getSModel();\n    Map<SNode, SNode> conceptsToEditors = MapSequence.fromMap(new HashMap<SNode, SNode>());\n    for(SNode conceptDeclaration : mpsliteConceptDeclarations) {\n      SNode editor = SConceptOperations.createNewNode(\"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\", null);\n      SNode lineList = SLinkOperations.getTarget(conceptDeclaration, \"lineList\", true);\n      SNode contentCell = EditorGenerationUtils.generateEditorCellModel(lineList, conceptDeclaration, partsToLinkDeclarations);\n      if (contentCell == null) {\n        continue;\n      }\n      SLinkOperations.setTarget(editor, \"cellModel\", contentCell, true);\n      SLinkOperations.setTarget(editor, \"conceptDeclaration\", conceptsToTargets.get(conceptDeclaration), false);\n      MapSequence.fromMap(conceptsToEditors).put(conceptDeclaration, editor);\n    }\n    for(SNode variableConcept : variableConcepts) {\n      SNode editor = SConceptOperations.createNewNode(\"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\", null);\n      SNode lineList = SLinkOperations.getTarget(variableConcept, \"concreteSyntax\", true);\n      SNode contentCell = EditorGenerationUtils.generateEditorCellModel(lineList, variableConcept, partsToLinkDeclarations);\n      if (contentCell == null) {\n        continue;\n      }\n      SLinkOperations.setTarget(editor, \"cellModel\", contentCell, true);\n      SLinkOperations.setTarget(editor, \"conceptDeclaration\", conceptsToTargets.get(variableConcept), false);\n      MapSequence.fromMap(conceptsToEditors).put(variableConcept, editor);\n    }\n    SNode actions = SConceptOperations.createNewNode(\"jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActions\", null);\n    SPropertyOperations.set(actions, \"name\", \"_BinaryOperations_SideTransform\");\n    for(SNode binaryOperationConcept : binaryOperations) {\n      SNode editor = SConceptOperations.createNewNode(\"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration\", null);\n      SNode contentCell = EditorGenerationUtils.generateBinaryOperationCellModel(binaryOperationConcept, partsToLinkDeclarations);\n      SLinkOperations.setTarget(editor, \"cellModel\", contentCell, true);\n      SLinkOperations.setTarget(editor, \"conceptDeclaration\", conceptsToTargets.get(binaryOperationConcept), false);\n      MapSequence.fromMap(conceptsToEditors).put(binaryOperationConcept, editor);\n      EditorGenerationUtils.fillBinarySideTransformActions(binaryOperationConcept, actions, conceptsToTargets, partsToLinkDeclarations);\n    }\n    //     setting roots and deleting input roots\n    structureModel.setLoading(true);\n    for(SNode root : ListSequence.fromList(ListSequence.<SNode>fromArray()).addSequence(ListSequence.fromList(SModelOperations.getRoots(structureModel, null)))) {\n      structureModel.removeRoot(root);\n    }\n    for(SNode conceptDeclaration : allConcepts) {\n      SNode concept = conceptsToTargets.get(conceptDeclaration);\n      SModelOperations.addRootNode(structureModel, concept);\n    }\n    structureModel.setLoading(false);\n    SModelRepository.getInstance().markChanged(structureModel);\n    editorModel.setLoading(true);\n    for(SNode root : ListSequence.fromList(ListSequence.<SNode>fromArray()).addSequence(ListSequence.fromList(SModelOperations.getRoots(editorModel, null)))) {\n      editorModel.removeRoot(root);\n    }\n    for(SNode conceptDeclaration : allConcepts) {\n      SNode editorDeclaration = conceptsToEditors.get(conceptDeclaration);\n      SModelOperations.addRootNode(editorModel, editorDeclaration);\n    }\n    editorModel.setLoading(false);\n    actionsModel.setLoading(true);\n    for(SNode root : ListSequence.fromList(ListSequence.<SNode>fromArray()).addSequence(ListSequence.fromList(SModelOperations.getRoots(actionsModel, null)))) {\n      actionsModel.removeRoot(root);\n    }\n    SModelOperations.addRootNode(actionsModel, actions);\n    actionsModel.setLoading(false);\n    SModelRepository.getInstance().markChanged(editorModel);\n    SModelRepository.getInstance().markChanged(actionsModel);\n    SNodeOperations.deleteNode(conceptContainer);\n  }","commit_id":"fe8e2a08ff6d88c13a3c9e4c9b54bb6bd2ea6686","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n\tpublic void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tupdateNode(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteNode(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.SUBSCRIBE)) {\n\t\t\t\tsubscribeNode(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNSUBSCRIBE)) {\n\t\t\t\tunsubscribeNode(actionRequest);\n\t\t\t}\n\n\t\t\tsendRedirect(actionRequest, actionResponse);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchNodeException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.wiki.error\");\n\t\t\t}\n\t\t\telse if (e instanceof DuplicateNodeNameException ||\n\t\t\t\t\t e instanceof NodeNameException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","id":69428,"modified_method":"@Override\n\tpublic void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tupdateNode(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteNode(\n\t\t\t\t\t(LiferayPortletConfig)portletConfig, actionRequest, false);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.MOVE_TO_TRASH)) {\n\t\t\t\tdeleteNode(\n\t\t\t\t\t(LiferayPortletConfig)portletConfig, actionRequest, true);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.RESTORE)) {\n\t\t\t\trestoreNode(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.SUBSCRIBE)) {\n\t\t\t\tsubscribeNode(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNSUBSCRIBE)) {\n\t\t\t\tunsubscribeNode(actionRequest);\n\t\t\t}\n\n\t\t\tsendRedirect(actionRequest, actionResponse);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchNodeException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.wiki.error\");\n\t\t\t}\n\t\t\telse if (e instanceof DuplicateNodeNameException ||\n\t\t\t\t\t e instanceof NodeNameException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","commit_id":"40386de9f35a4486d1e89c6d7b6b5588d5fd0b7d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void deleteNode(ActionRequest actionRequest) throws Exception {\n\t\tlong nodeId = ParamUtil.getLong(actionRequest, \"nodeId\");\n\n\t\tString oldName = getNodeName(nodeId);\n\n\t\tWikiCacheThreadLocal.setClearCache(false);\n\n\t\tWikiNodeServiceUtil.deleteNode(nodeId);\n\n\t\tWikiCacheUtil.clearCache(nodeId);\n\n\t\tWikiCacheThreadLocal.setClearCache(true);\n\n\t\tupdatePreferences(actionRequest, oldName, StringPool.BLANK);\n\t}","id":69429,"modified_method":"protected void restoreNode(ActionRequest actionRequest) throws Exception {\n\t\tlong[] restoreEntryIds = StringUtil.split(\n\t\t\tParamUtil.getString(actionRequest, \"restoreEntryIds\"), 0L);\n\n\t\tfor (long restoreEntryId : restoreEntryIds) {\n\t\t\tWikiNodeServiceUtil.restoreNodeFromTrash(restoreEntryId);\n\t\t}\n\t}","commit_id":"40386de9f35a4486d1e89c6d7b6b5588d5fd0b7d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void deletePage(ActionRequest actionRequest) throws Exception {\n\t\tlong nodeId = ParamUtil.getLong(actionRequest, \"nodeId\");\n\t\tString title = ParamUtil.getString(actionRequest, \"title\");\n\t\tdouble version = ParamUtil.getDouble(actionRequest, \"version\");\n\n\t\tif (version > 0) {\n\t\t\tWikiPageServiceUtil.deletePage(nodeId, title, version);\n\t\t}\n\t\telse {\n\t\t\tWikiPageServiceUtil.deletePage(nodeId, title);\n\t\t}\n\t}","id":69430,"modified_method":"protected void restorePage(ActionRequest actionRequest) throws Exception {\n\t\tlong[] restoreEntryIds = StringUtil.split(\n\t\t\tParamUtil.getString(actionRequest, \"restoreEntryIds\"), 0L);\n\n\t\tfor (long restoreEntryId : restoreEntryIds) {\n\t\t\tWikiPageServiceUtil.restorePageFromTrash(restoreEntryId);\n\t\t}\n\t}","commit_id":"40386de9f35a4486d1e89c6d7b6b5588d5fd0b7d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tWikiPage page = null;\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tpage = updatePage(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeletePage(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.REVERT)) {\n\t\t\t\trevertPage(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.SUBSCRIBE)) {\n\t\t\t\tsubscribePage(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNSUBSCRIBE)) {\n\t\t\t\tunsubscribePage(actionRequest);\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(cmd)) {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\t\t\tactionRequest, \"workflowAction\",\n\t\t\t\t\tWorkflowConstants.ACTION_PUBLISH);\n\n\t\t\t\tif (page != null) {\n\t\t\t\t\tif (workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT) {\n\t\t\t\t\t\tredirect = getSaveAndContinueRedirect(\n\t\t\t\t\t\t\tactionRequest, actionResponse, page, redirect);\n\t\t\t\t\t}\n\t\t\t\t\telse if (redirect.endsWith(\"title=\")) {\n\t\t\t\t\t\tredirect += page.getTitle();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsendRedirect(actionRequest, actionResponse, redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchNodeException ||\n\t\t\t\te instanceof NoSuchPageException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.wiki.error\");\n\t\t\t}\n\t\t\telse if (e instanceof DuplicatePageException ||\n\t\t\t\t\t e instanceof PageContentException ||\n\t\t\t\t\t e instanceof PageVersionException ||\n\t\t\t\t\t e instanceof PageTitleException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\t\t\t}\n\t\t\telse if (e instanceof AssetCategoryException ||\n\t\t\t\t\t e instanceof AssetTagException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","id":69431,"modified_method":"@Override\n\tpublic void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tWikiPage page = null;\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tpage = updatePage(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeletePage(\n\t\t\t\t\t(LiferayPortletConfig)portletConfig, actionRequest, false);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.MOVE_TO_TRASH)) {\n\t\t\t\tdeletePage(\n\t\t\t\t\t(LiferayPortletConfig)portletConfig, actionRequest, true);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.RESTORE)) {\n\t\t\t\trestorePage(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.REVERT)) {\n\t\t\t\trevertPage(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.SUBSCRIBE)) {\n\t\t\t\tsubscribePage(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNSUBSCRIBE)) {\n\t\t\t\tunsubscribePage(actionRequest);\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(cmd)) {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\t\t\tactionRequest, \"workflowAction\",\n\t\t\t\t\tWorkflowConstants.ACTION_PUBLISH);\n\n\t\t\t\tif (page != null) {\n\t\t\t\t\tif (workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT) {\n\t\t\t\t\t\tredirect = getSaveAndContinueRedirect(\n\t\t\t\t\t\t\tactionRequest, actionResponse, page, redirect);\n\t\t\t\t\t}\n\t\t\t\t\telse if (redirect.endsWith(\"title=\")) {\n\t\t\t\t\t\tredirect += page.getTitle();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsendRedirect(actionRequest, actionResponse, redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchNodeException ||\n\t\t\t\te instanceof NoSuchPageException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.wiki.error\");\n\t\t\t}\n\t\t\telse if (e instanceof DuplicatePageException ||\n\t\t\t\t\t e instanceof PageContentException ||\n\t\t\t\t\t e instanceof PageVersionException ||\n\t\t\t\t\t e instanceof PageTitleException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass());\n\t\t\t}\n\t\t\telse if (e instanceof AssetCategoryException ||\n\t\t\t\t\t e instanceof AssetTagException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","commit_id":"40386de9f35a4486d1e89c6d7b6b5588d5fd0b7d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@RenderMapping\n    public String initializeView(Model model) {\n        IUserInstance ui = userInstanceManager.getUserInstance(portalRequestUtils.getCurrentPortalRequest());\n        UserPreferencesManager upm = (UserPreferencesManager) ui.getPreferencesManager();\n        IUserLayoutManager ulm = upm.getUserLayoutManager();\n\n        IUserLayout userLayout = ulm.getUserLayout();\n\n        List<IUserLayoutNodeDescription> collections = FavoritesUtils.getFavoriteCollections(userLayout);\n        model.addAttribute(\"collections\", collections);\n\n        List<IUserLayoutNodeDescription> favorites = FavoritesUtils.getFavoritePortlets(userLayout);\n        model.addAttribute(\"favorites\", favorites);\n\n\n\n        return \"jsp/Favorites/edit\";\n    }","id":69432,"modified_method":"@RenderMapping\n    public String initializeView(Model model, RenderRequest renderRequest) {\n        IUserInstance ui = userInstanceManager.getUserInstance(portalRequestUtils.getCurrentPortalRequest());\n        UserPreferencesManager upm = (UserPreferencesManager) ui.getPreferencesManager();\n        IUserLayoutManager ulm = upm.getUserLayoutManager();\n\n        IUserLayout userLayout = ulm.getUserLayout();\n\n        List<IUserLayoutNodeDescription> collections = FavoritesUtils.getFavoriteCollections(userLayout);\n        model.addAttribute(\"collections\", collections);\n\n        List<IUserLayoutNodeDescription> favorites = FavoritesUtils.getFavoritePortlets(userLayout);\n        model.addAttribute(\"favorites\", favorites);\n\n        model.addAttribute(\"successMessage\", renderRequest.getParameter(\"successMessage\"));\n\n        model.addAttribute(\"errorMessage\", renderRequest.getParameter(\"errorMessage\"));\n\n        return \"jsp/Favorites/edit\";\n    }","commit_id":"6fbd9efcca03ac24a32f768d4357ac98edaff04d","url":"https://github.com/Jasig/uPortal"},{"original_method":"protected static void writeTransactionStream( ChannelBuffer dest,\n            TransactionStream transactionStream ) throws IOException\n    {\n        final Collection<ReadableByteChannel> channels = transactionStream.getChannels();\n        dest.writeByte( channels.size() );\n        for ( ReadableByteChannel channel : channels )\n        {\n            ByteData data = new ByteData( channel );\n            dest.writeInt( data.size() );\n            for ( byte[] bytes : data )\n            {\n                dest.writeBytes( bytes );\n            }\n            channel.close();\n        }\n    }","id":69433,"modified_method":"protected static void writeTransactionStream( ChannelBuffer dest,\n            TransactionStream transactionStream ) throws IOException\n    {\n        Collection<Pair<Long, ReadableByteChannel>> channels = transactionStream.getChannels();\n        dest.writeInt( channels.size() );\n        for ( Pair<Long, ReadableByteChannel> channel : channels )\n        {\n            dest.writeLong( channel.first() );\n            ByteData data = new ByteData( channel.other() );\n            dest.writeInt( data.size() );\n            for ( byte[] bytes : data )\n            {\n                dest.writeBytes( bytes );\n            }\n            channel.other().close();\n        }\n    }","commit_id":"3c70b4341399bb9365cb05aef507a502c07e5e26","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static TransactionStream readTransactionStream( ChannelBuffer buffer )\n    {\n        ReadableByteChannel[] channels = new ReadableByteChannel[buffer.readByte()];\n        for ( int i = 0; i < channels.length; i++ )\n        {\n            byte[] data = new byte[buffer.readInt()];\n            buffer.readBytes( data );\n            channels[i] = new ByteArrayChannel( data );\n        }\n        return new TransactionStream( Arrays.asList( channels ) );\n    }","id":69434,"modified_method":"private static TransactionStream readTransactionStream( ChannelBuffer buffer )\n    {\n        Collection<Pair<Long, ReadableByteChannel>> channels =\n                new ArrayList<Pair<Long,ReadableByteChannel>>();\n        int size = buffer.readInt();\n        for ( int i = 0; i < size; i++ )\n        {\n            long txId = buffer.readLong();\n            byte[] data = new byte[buffer.readInt()];\n            buffer.readBytes( data );\n            ReadableByteChannel channel = new ByteArrayChannel( data );\n            channels.add( new Pair<Long, ReadableByteChannel>( txId, channel ) );\n        }\n        return new TransactionStream( channels );\n    }","commit_id":"3c70b4341399bb9365cb05aef507a502c07e5e26","url":"https://github.com/neo4j/neo4j"},{"original_method":"public <T> T receive( Response<T> response )\n    {\n        try\n        {\n            for ( Pair<String, TransactionStream> streams : response.transactions().getStreams() )\n            {\n                String resourceName = streams.first();\n                XaDataSource dataSource = localDataSourceManager.getXaDataSource( resourceName );\n                for ( ReadableByteChannel channel : streams.other().getChannels() )\n                {\n                    dataSource.applyCommittedTransaction( channel );\n                    channel.close();\n                }\n            }\n            return response.response();\n        }\n        catch ( IOException e )\n        {\n            somethingIsWrong( e );\n            throw new RuntimeException( e );\n        }\n    }","id":69435,"modified_method":"public <T> T receive( Response<T> response )\n    {\n        try\n        {\n            for ( Pair<String, TransactionStream> streams : response.transactions().getStreams() )\n            {\n                String resourceName = streams.first();\n                XaDataSource dataSource = localDataSourceManager.getXaDataSource( resourceName );\n                for ( Pair<Long, ReadableByteChannel> channel : streams.other().getChannels() )\n                {\n                    dataSource.applyCommittedTransaction( channel.first(), channel.other() );\n                    channel.other().close();\n                }\n            }\n            return response.response();\n        }\n        catch ( IOException e )\n        {\n            somethingIsWrong( e );\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"3c70b4341399bb9365cb05aef507a502c07e5e26","url":"https://github.com/neo4j/neo4j"},{"original_method":"private <T> Response<T> packResponse( SlaveContext context, T response,\n            Predicate<Long> filter )\n    {\n        try\n        {\n            TransactionStreams streams = new TransactionStreams();\n            for ( Pair<String, Long> txEntry : context.lastAppliedTransactions() )\n            {\n                String resourceName = txEntry.first();\n                XaDataSource dataSource = graphDbConfig.getTxModule().getXaDataSourceManager()\n                        .getXaDataSource( resourceName );\n                long masterLastTx = dataSource.getLastCommittedTxId();\n                Collection<ReadableByteChannel> channels = new ArrayList<ReadableByteChannel>();\n                for ( long txId = txEntry.other()+1; txId <= masterLastTx; txId++ )\n                {\n                    if ( filter.accept( txId ) )\n                    {\n                        channels.add( dataSource.getCommittedTransaction( txId ) );\n                    }\n                }\n                streams.add( resourceName, new TransactionStream( channels ) );\n            }\n            return new Response<T>( response, streams );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<T>();\n        }\n    }","id":69436,"modified_method":"private <T> Response<T> packResponse( SlaveContext context, T response,\n            Predicate<Long> filter )\n    {\n        try\n        {\n            TransactionStreams streams = new TransactionStreams();\n            for ( Pair<String, Long> txEntry : context.lastAppliedTransactions() )\n            {\n                String resourceName = txEntry.first();\n                XaDataSource dataSource = graphDbConfig.getTxModule().getXaDataSourceManager()\n                        .getXaDataSource( resourceName );\n                long masterLastTx = dataSource.getLastCommittedTxId();\n                Collection<Pair<Long, ReadableByteChannel>> channels = new ArrayList<Pair<Long, ReadableByteChannel>>();\n                for ( long txId = txEntry.other()+1; txId <= masterLastTx; txId++ )\n                {\n                    if ( filter.accept( txId ) )\n                    {\n                        channels.add( new Pair<Long, ReadableByteChannel>( txId, dataSource.getCommittedTransaction( txId ) ) );\n                    }\n                }\n                streams.add( resourceName, new TransactionStream( channels ) );\n            }\n            return new Response<T>( response, streams );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<T>();\n        }\n    }","commit_id":"3c70b4341399bb9365cb05aef507a502c07e5e26","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Long> commitSingleResourceTransaction( SlaveContext context,\n            String resource, TransactionStream transactionStream )\n    {\n        Transaction otherTx = suspendOtherAndResumeThis( context );\n        try\n        {\n            XaDataSource dataSource = graphDbConfig.getTxModule()\n                    .getXaDataSourceManager().getXaDataSource( resource );\n            // Always exactly one transaction (ReadableByteChannel)\n            final long txId = dataSource.applyPreparedTransaction(\n                    transactionStream.getChannels().iterator().next() );\n            Predicate<Long> notThisTx = new Predicate<Long>()\n            {\n                public boolean accept( Long item )\n                {\n                    return item != txId;\n                }\n            };\n            return packResponse( context, txId, notThisTx );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<Long>();\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx, context );\n            // Since the master-transaction carries no actual state, just locks\n            // we would like to release the locks... and it's best done by just\n            // rolling back the tx\n//            rollbackThisAndResumeOther( otherTx );\n        }\n    }","id":69437,"modified_method":"public Response<Long> commitSingleResourceTransaction( SlaveContext context,\n            String resource, TransactionStream transactionStream )\n    {\n        Transaction otherTx = suspendOtherAndResumeThis( context );\n        try\n        {\n            XaDataSource dataSource = graphDbConfig.getTxModule()\n                    .getXaDataSourceManager().getXaDataSource( resource );\n            // Always exactly one transaction (ReadableByteChannel)\n            final long txId = dataSource.applyPreparedTransaction(\n                    transactionStream.getChannels().iterator().next().other() );\n            Predicate<Long> notThisTx = new Predicate<Long>()\n            {\n                public boolean accept( Long item )\n                {\n                    return item != txId;\n                }\n            };\n            return packResponse( context, txId, notThisTx );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<Long>();\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx, context );\n            // Since the master-transaction carries no actual state, just locks\n            // we would like to release the locks... and it's best done by just\n            // rolling back the tx\n//            rollbackThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"3c70b4341399bb9365cb05aef507a502c07e5e26","url":"https://github.com/neo4j/neo4j"},{"original_method":"public long generate( XaDataSource dataSource, int identifier )\n    {\n        try\n        {\n            int eventIdentifier = txManager.getEventIdentifier();\n            Response<Long> response = broker.getMaster().commitSingleResourceTransaction(\n                    receiver.getSlaveContext( eventIdentifier ),\n                    dataSource.getName(), new TransactionStream( Arrays.asList(\n                            dataSource.getPreparedTransaction( identifier ) ) ) );\n            return receiver.receive( response );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( ZooKeeperException e )\n        {\n            receiver.somethingIsWrong( e );\n            throw e;\n        }\n        catch ( HaCommunicationException e )\n        {\n            receiver.somethingIsWrong( e );\n            throw e;\n        }\n    }","id":69438,"modified_method":"public long generate( XaDataSource dataSource, int identifier )\n    {\n        try\n        {\n            int eventIdentifier = txManager.getEventIdentifier();\n            Pair<Long, ReadableByteChannel> tx = new Pair<Long, ReadableByteChannel>( -1L,\n                    dataSource.getPreparedTransaction( identifier ) );\n            Response<Long> response = broker.getMaster().commitSingleResourceTransaction(\n                    receiver.getSlaveContext( eventIdentifier ),\n                    dataSource.getName(), new TransactionStream( Arrays.asList( tx ) ) );\n            return receiver.receive( response );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( ZooKeeperException e )\n        {\n            receiver.somethingIsWrong( e );\n            throw e;\n        }\n        catch ( HaCommunicationException e )\n        {\n            receiver.somethingIsWrong( e );\n            throw e;\n        }\n    }","commit_id":"3c70b4341399bb9365cb05aef507a502c07e5e26","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static TransactionStream readTransactionStream( ChannelBuffer buffer )\n    {\n        ReadableByteChannel[] channels = new ReadableByteChannel[buffer.readByte()];\n        for ( int i = 0; i < channels.length; i++ )\n        {\n            byte[] data = new byte[buffer.readInt()];\n            buffer.readBytes( data );\n            channels[i] = new ByteArrayChannel( data );\n        }\n        return new TransactionStream( Arrays.asList( channels ) );\n    }","id":69439,"modified_method":"private static TransactionStream readTransactionStream( ChannelBuffer buffer )\n    {\n        Collection<Pair<Long, ReadableByteChannel>> channels =\n                new ArrayList<Pair<Long,ReadableByteChannel>>();\n        int size = buffer.readInt();\n        for ( int i = 0; i < size; i++ )\n        {\n            long txId = buffer.readLong();\n            byte[] data = new byte[buffer.readInt()];\n            buffer.readBytes( data );\n            ReadableByteChannel channel = new ByteArrayChannel( data );\n            channels.add( new Pair<Long, ReadableByteChannel>( txId, channel ) );\n        }\n        return new TransactionStream( channels );\n    }","commit_id":"b4d71804300c81c75f72dd5e10d3a15575470603","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected static void writeTransactionStream( ChannelBuffer dest,\n            TransactionStream transactionStream ) throws IOException\n    {\n        final Collection<ReadableByteChannel> channels = transactionStream.getChannels();\n        dest.writeByte( channels.size() );\n        for ( ReadableByteChannel channel : channels )\n        {\n            ByteData data = new ByteData( channel );\n            dest.writeInt( data.size() );\n            for ( byte[] bytes : data )\n            {\n                dest.writeBytes( bytes );\n            }\n            channel.close();\n        }\n    }","id":69440,"modified_method":"protected static void writeTransactionStream( ChannelBuffer dest,\n            TransactionStream transactionStream ) throws IOException\n    {\n        Collection<Pair<Long, ReadableByteChannel>> channels = transactionStream.getChannels();\n        dest.writeInt( channels.size() );\n        for ( Pair<Long, ReadableByteChannel> channel : channels )\n        {\n            dest.writeLong( channel.first() );\n            ByteData data = new ByteData( channel.other() );\n            dest.writeInt( data.size() );\n            for ( byte[] bytes : data )\n            {\n                dest.writeBytes( bytes );\n            }\n            channel.other().close();\n        }\n    }","commit_id":"b4d71804300c81c75f72dd5e10d3a15575470603","url":"https://github.com/neo4j/neo4j"},{"original_method":"public <T> T receive( Response<T> response )\n    {\n        try\n        {\n            for ( Pair<String, TransactionStream> streams : response.transactions().getStreams() )\n            {\n                String resourceName = streams.first();\n                XaDataSource dataSource = localDataSourceManager.getXaDataSource( resourceName );\n                for ( ReadableByteChannel channel : streams.other().getChannels() )\n                {\n                    dataSource.applyCommittedTransaction( channel );\n                    channel.close();\n                }\n            }\n            return response.response();\n        }\n        catch ( IOException e )\n        {\n            somethingIsWrong( e );\n            throw new RuntimeException( e );\n        }\n    }","id":69441,"modified_method":"public <T> T receive( Response<T> response )\n    {\n        try\n        {\n            for ( Pair<String, TransactionStream> streams : response.transactions().getStreams() )\n            {\n                String resourceName = streams.first();\n                XaDataSource dataSource = localDataSourceManager.getXaDataSource( resourceName );\n                for ( Pair<Long, ReadableByteChannel> channel : streams.other().getChannels() )\n                {\n                    dataSource.applyCommittedTransaction( channel.first(), channel.other() );\n                    channel.other().close();\n                }\n            }\n            return response.response();\n        }\n        catch ( IOException e )\n        {\n            somethingIsWrong( e );\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"b4d71804300c81c75f72dd5e10d3a15575470603","url":"https://github.com/neo4j/neo4j"},{"original_method":"private <T> Response<T> packResponse( SlaveContext context, T response,\n            Predicate<Long> filter )\n    {\n        try\n        {\n            TransactionStreams streams = new TransactionStreams();\n            for ( Pair<String, Long> txEntry : context.lastAppliedTransactions() )\n            {\n                String resourceName = txEntry.first();\n                XaDataSource dataSource = graphDbConfig.getTxModule().getXaDataSourceManager()\n                        .getXaDataSource( resourceName );\n                long masterLastTx = dataSource.getLastCommittedTxId();\n                Collection<ReadableByteChannel> channels = new ArrayList<ReadableByteChannel>();\n                for ( long txId = txEntry.other()+1; txId <= masterLastTx; txId++ )\n                {\n                    if ( filter.accept( txId ) )\n                    {\n                        channels.add( dataSource.getCommittedTransaction( txId ) );\n                    }\n                }\n                streams.add( resourceName, new TransactionStream( channels ) );\n            }\n            return new Response<T>( response, streams );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<T>();\n        }\n    }","id":69442,"modified_method":"private <T> Response<T> packResponse( SlaveContext context, T response,\n            Predicate<Long> filter )\n    {\n        try\n        {\n            TransactionStreams streams = new TransactionStreams();\n            for ( Pair<String, Long> txEntry : context.lastAppliedTransactions() )\n            {\n                String resourceName = txEntry.first();\n                XaDataSource dataSource = graphDbConfig.getTxModule().getXaDataSourceManager()\n                        .getXaDataSource( resourceName );\n                long masterLastTx = dataSource.getLastCommittedTxId();\n                Collection<Pair<Long, ReadableByteChannel>> channels = new ArrayList<Pair<Long, ReadableByteChannel>>();\n                for ( long txId = txEntry.other()+1; txId <= masterLastTx; txId++ )\n                {\n                    if ( filter.accept( txId ) )\n                    {\n                        channels.add( new Pair<Long, ReadableByteChannel>( txId, dataSource.getCommittedTransaction( txId ) ) );\n                    }\n                }\n                streams.add( resourceName, new TransactionStream( channels ) );\n            }\n            return new Response<T>( response, streams );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<T>();\n        }\n    }","commit_id":"b4d71804300c81c75f72dd5e10d3a15575470603","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Long> commitSingleResourceTransaction( SlaveContext context,\n            String resource, TransactionStream transactionStream )\n    {\n        Transaction otherTx = suspendOtherAndResumeThis( context );\n        try\n        {\n            XaDataSource dataSource = graphDbConfig.getTxModule()\n                    .getXaDataSourceManager().getXaDataSource( resource );\n            // Always exactly one transaction (ReadableByteChannel)\n            final long txId = dataSource.applyPreparedTransaction(\n                    transactionStream.getChannels().iterator().next() );\n            Predicate<Long> notThisTx = new Predicate<Long>()\n            {\n                public boolean accept( Long item )\n                {\n                    return item != txId;\n                }\n            };\n            return packResponse( context, txId, notThisTx );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<Long>();\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx, context );\n            // Since the master-transaction carries no actual state, just locks\n            // we would like to release the locks... and it's best done by just\n            // rolling back the tx\n//            rollbackThisAndResumeOther( otherTx );\n        }\n    }","id":69443,"modified_method":"public Response<Long> commitSingleResourceTransaction( SlaveContext context,\n            String resource, TransactionStream transactionStream )\n    {\n        Transaction otherTx = suspendOtherAndResumeThis( context );\n        try\n        {\n            XaDataSource dataSource = graphDbConfig.getTxModule()\n                    .getXaDataSourceManager().getXaDataSource( resource );\n            // Always exactly one transaction (ReadableByteChannel)\n            final long txId = dataSource.applyPreparedTransaction(\n                    transactionStream.getChannels().iterator().next().other() );\n            Predicate<Long> notThisTx = new Predicate<Long>()\n            {\n                public boolean accept( Long item )\n                {\n                    return item != txId;\n                }\n            };\n            return packResponse( context, txId, notThisTx );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<Long>();\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx, context );\n            // Since the master-transaction carries no actual state, just locks\n            // we would like to release the locks... and it's best done by just\n            // rolling back the tx\n//            rollbackThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"b4d71804300c81c75f72dd5e10d3a15575470603","url":"https://github.com/neo4j/neo4j"},{"original_method":"public long generate( XaDataSource dataSource, int identifier )\n    {\n        try\n        {\n            int eventIdentifier = txManager.getEventIdentifier();\n            Response<Long> response = broker.getMaster().commitSingleResourceTransaction(\n                    receiver.getSlaveContext( eventIdentifier ),\n                    dataSource.getName(), new TransactionStream( Arrays.asList(\n                            dataSource.getPreparedTransaction( identifier ) ) ) );\n            return receiver.receive( response );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( ZooKeeperException e )\n        {\n            receiver.somethingIsWrong( e );\n            throw e;\n        }\n        catch ( HaCommunicationException e )\n        {\n            receiver.somethingIsWrong( e );\n            throw e;\n        }\n    }","id":69444,"modified_method":"public long generate( XaDataSource dataSource, int identifier )\n    {\n        try\n        {\n            int eventIdentifier = txManager.getEventIdentifier();\n            Pair<Long, ReadableByteChannel> tx = new Pair<Long, ReadableByteChannel>( -1L,\n                    dataSource.getPreparedTransaction( identifier ) );\n            Response<Long> response = broker.getMaster().commitSingleResourceTransaction(\n                    receiver.getSlaveContext( eventIdentifier ),\n                    dataSource.getName(), new TransactionStream( Arrays.asList( tx ) ) );\n            return receiver.receive( response );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( ZooKeeperException e )\n        {\n            receiver.somethingIsWrong( e );\n            throw e;\n        }\n        catch ( HaCommunicationException e )\n        {\n            receiver.somethingIsWrong( e );\n            throw e;\n        }\n    }","commit_id":"b4d71804300c81c75f72dd5e10d3a15575470603","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static TransactionStream readTransactionStream( ChannelBuffer buffer )\n    {\n        ReadableByteChannel[] channels = new ReadableByteChannel[buffer.readByte()];\n        for ( int i = 0; i < channels.length; i++ )\n        {\n            byte[] data = new byte[buffer.readInt()];\n            buffer.readBytes( data );\n            channels[i] = new ByteArrayChannel( data );\n        }\n        return new TransactionStream( Arrays.asList( channels ) );\n    }","id":69445,"modified_method":"private static TransactionStream readTransactionStream( ChannelBuffer buffer )\n    {\n        Collection<Pair<Long, ReadableByteChannel>> channels =\n                new ArrayList<Pair<Long,ReadableByteChannel>>();\n        int size = buffer.readInt();\n        for ( int i = 0; i < size; i++ )\n        {\n            long txId = buffer.readLong();\n            byte[] data = new byte[buffer.readInt()];\n            buffer.readBytes( data );\n            ReadableByteChannel channel = new ByteArrayChannel( data );\n            channels.add( new Pair<Long, ReadableByteChannel>( txId, channel ) );\n        }\n        return new TransactionStream( channels );\n    }","commit_id":"c8a8691f21832da23f916fa0e1b0c57a8e8ed133","url":"https://github.com/neo4j/neo4j"},{"original_method":"protected static void writeTransactionStream( ChannelBuffer dest,\n            TransactionStream transactionStream ) throws IOException\n    {\n        final Collection<ReadableByteChannel> channels = transactionStream.getChannels();\n        dest.writeByte( channels.size() );\n        for ( ReadableByteChannel channel : channels )\n        {\n            ByteData data = new ByteData( channel );\n            dest.writeInt( data.size() );\n            for ( byte[] bytes : data )\n            {\n                dest.writeBytes( bytes );\n            }\n            channel.close();\n        }\n    }","id":69446,"modified_method":"protected static void writeTransactionStream( ChannelBuffer dest,\n            TransactionStream transactionStream ) throws IOException\n    {\n        Collection<Pair<Long, ReadableByteChannel>> channels = transactionStream.getChannels();\n        dest.writeInt( channels.size() );\n        for ( Pair<Long, ReadableByteChannel> channel : channels )\n        {\n            dest.writeLong( channel.first() );\n            ByteData data = new ByteData( channel.other() );\n            dest.writeInt( data.size() );\n            for ( byte[] bytes : data )\n            {\n                dest.writeBytes( bytes );\n            }\n            channel.other().close();\n        }\n    }","commit_id":"c8a8691f21832da23f916fa0e1b0c57a8e8ed133","url":"https://github.com/neo4j/neo4j"},{"original_method":"public <T> T receive( Response<T> response )\n    {\n        try\n        {\n            for ( Pair<String, TransactionStream> streams : response.transactions().getStreams() )\n            {\n                String resourceName = streams.first();\n                XaDataSource dataSource = localDataSourceManager.getXaDataSource( resourceName );\n                for ( ReadableByteChannel channel : streams.other().getChannels() )\n                {\n                    dataSource.applyCommittedTransaction( channel );\n                    channel.close();\n                }\n            }\n            return response.response();\n        }\n        catch ( IOException e )\n        {\n            somethingIsWrong( e );\n            throw new RuntimeException( e );\n        }\n    }","id":69447,"modified_method":"public <T> T receive( Response<T> response )\n    {\n        try\n        {\n            for ( Pair<String, TransactionStream> streams : response.transactions().getStreams() )\n            {\n                String resourceName = streams.first();\n                XaDataSource dataSource = localDataSourceManager.getXaDataSource( resourceName );\n                for ( Pair<Long, ReadableByteChannel> channel : streams.other().getChannels() )\n                {\n                    dataSource.applyCommittedTransaction( channel.first(), channel.other() );\n                    channel.other().close();\n                }\n            }\n            return response.response();\n        }\n        catch ( IOException e )\n        {\n            somethingIsWrong( e );\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"c8a8691f21832da23f916fa0e1b0c57a8e8ed133","url":"https://github.com/neo4j/neo4j"},{"original_method":"private <T> Response<T> packResponse( SlaveContext context, T response,\n            Predicate<Long> filter )\n    {\n        try\n        {\n            TransactionStreams streams = new TransactionStreams();\n            for ( Pair<String, Long> txEntry : context.lastAppliedTransactions() )\n            {\n                String resourceName = txEntry.first();\n                XaDataSource dataSource = graphDbConfig.getTxModule().getXaDataSourceManager()\n                        .getXaDataSource( resourceName );\n                long masterLastTx = dataSource.getLastCommittedTxId();\n                Collection<ReadableByteChannel> channels = new ArrayList<ReadableByteChannel>();\n                for ( long txId = txEntry.other()+1; txId <= masterLastTx; txId++ )\n                {\n                    if ( filter.accept( txId ) )\n                    {\n                        channels.add( dataSource.getCommittedTransaction( txId ) );\n                    }\n                }\n                streams.add( resourceName, new TransactionStream( channels ) );\n            }\n            return new Response<T>( response, streams );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<T>();\n        }\n    }","id":69448,"modified_method":"private <T> Response<T> packResponse( SlaveContext context, T response,\n            Predicate<Long> filter )\n    {\n        try\n        {\n            TransactionStreams streams = new TransactionStreams();\n            for ( Pair<String, Long> txEntry : context.lastAppliedTransactions() )\n            {\n                String resourceName = txEntry.first();\n                XaDataSource dataSource = graphDbConfig.getTxModule().getXaDataSourceManager()\n                        .getXaDataSource( resourceName );\n                long masterLastTx = dataSource.getLastCommittedTxId();\n                Collection<Pair<Long, ReadableByteChannel>> channels = new ArrayList<Pair<Long, ReadableByteChannel>>();\n                for ( long txId = txEntry.other()+1; txId <= masterLastTx; txId++ )\n                {\n                    if ( filter.accept( txId ) )\n                    {\n                        channels.add( new Pair<Long, ReadableByteChannel>( txId, dataSource.getCommittedTransaction( txId ) ) );\n                    }\n                }\n                streams.add( resourceName, new TransactionStream( channels ) );\n            }\n            return new Response<T>( response, streams );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<T>();\n        }\n    }","commit_id":"c8a8691f21832da23f916fa0e1b0c57a8e8ed133","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Long> commitSingleResourceTransaction( SlaveContext context,\n            String resource, TransactionStream transactionStream )\n    {\n        Transaction otherTx = suspendOtherAndResumeThis( context );\n        try\n        {\n            XaDataSource dataSource = graphDbConfig.getTxModule()\n                    .getXaDataSourceManager().getXaDataSource( resource );\n            // Always exactly one transaction (ReadableByteChannel)\n            final long txId = dataSource.applyPreparedTransaction(\n                    transactionStream.getChannels().iterator().next() );\n            Predicate<Long> notThisTx = new Predicate<Long>()\n            {\n                public boolean accept( Long item )\n                {\n                    return item != txId;\n                }\n            };\n            return packResponse( context, txId, notThisTx );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<Long>();\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx, context );\n            // Since the master-transaction carries no actual state, just locks\n            // we would like to release the locks... and it's best done by just\n            // rolling back the tx\n//            rollbackThisAndResumeOther( otherTx );\n        }\n    }","id":69449,"modified_method":"public Response<Long> commitSingleResourceTransaction( SlaveContext context,\n            String resource, TransactionStream transactionStream )\n    {\n        Transaction otherTx = suspendOtherAndResumeThis( context );\n        try\n        {\n            XaDataSource dataSource = graphDbConfig.getTxModule()\n                    .getXaDataSourceManager().getXaDataSource( resource );\n            // Always exactly one transaction (ReadableByteChannel)\n            final long txId = dataSource.applyPreparedTransaction(\n                    transactionStream.getChannels().iterator().next().other() );\n            Predicate<Long> notThisTx = new Predicate<Long>()\n            {\n                public boolean accept( Long item )\n                {\n                    return item != txId;\n                }\n            };\n            return packResponse( context, txId, notThisTx );\n        }\n        catch ( IOException e )\n        {\n            e.printStackTrace();\n            return new FailedResponse<Long>();\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx, context );\n            // Since the master-transaction carries no actual state, just locks\n            // we would like to release the locks... and it's best done by just\n            // rolling back the tx\n//            rollbackThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"c8a8691f21832da23f916fa0e1b0c57a8e8ed133","url":"https://github.com/neo4j/neo4j"},{"original_method":"public long generate( XaDataSource dataSource, int identifier )\n    {\n        try\n        {\n            int eventIdentifier = txManager.getEventIdentifier();\n            Response<Long> response = broker.getMaster().commitSingleResourceTransaction(\n                    receiver.getSlaveContext( eventIdentifier ),\n                    dataSource.getName(), new TransactionStream( Arrays.asList(\n                            dataSource.getPreparedTransaction( identifier ) ) ) );\n            return receiver.receive( response );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( ZooKeeperException e )\n        {\n            receiver.somethingIsWrong( e );\n            throw e;\n        }\n        catch ( HaCommunicationException e )\n        {\n            receiver.somethingIsWrong( e );\n            throw e;\n        }\n    }","id":69450,"modified_method":"public long generate( XaDataSource dataSource, int identifier )\n    {\n        try\n        {\n            int eventIdentifier = txManager.getEventIdentifier();\n            Pair<Long, ReadableByteChannel> tx = new Pair<Long, ReadableByteChannel>( -1L,\n                    dataSource.getPreparedTransaction( identifier ) );\n            Response<Long> response = broker.getMaster().commitSingleResourceTransaction(\n                    receiver.getSlaveContext( eventIdentifier ),\n                    dataSource.getName(), new TransactionStream( Arrays.asList( tx ) ) );\n            return receiver.receive( response );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( ZooKeeperException e )\n        {\n            receiver.somethingIsWrong( e );\n            throw e;\n        }\n        catch ( HaCommunicationException e )\n        {\n            receiver.somethingIsWrong( e );\n            throw e;\n        }\n    }","commit_id":"c8a8691f21832da23f916fa0e1b0c57a8e8ed133","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n  public Set<? extends ProjectDescriptor> getUpstreamProjects() {\n    WizardConfiguration _config = this.getConfig();\n    RuntimeProjectDescriptor _runtimeProject = _config.getRuntimeProject();\n    WizardConfiguration _config_1 = this.getConfig();\n    IdeProjectDescriptor _ideProject = _config_1.getIdeProject();\n    return Collections.<ProjectDescriptor>unmodifiableSet(CollectionLiterals.<ProjectDescriptor>newHashSet(_runtimeProject, _ideProject));\n  }","id":69451,"modified_method":"@Override\n  public Set<? extends ProjectDescriptor> getUpstreamProjects() {\n    WizardConfiguration _config = this.getConfig();\n    RuntimeProjectDescriptor _runtimeProject = _config.getRuntimeProject();\n    WizardConfiguration _config_1 = this.getConfig();\n    IdeProjectDescriptor _ideProject = _config_1.getIdeProject();\n    return CollectionLiterals.<ProjectDescriptor>newLinkedHashSet(_runtimeProject, _ideProject);\n  }","commit_id":"8a901194006df8f4cd308ce19452acfeae7880dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public String manifest() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"Manifest-Version: 1.0\");\n    _builder.newLine();\n    _builder.append(\"Bundle-ManifestVersion: 2\");\n    _builder.newLine();\n    _builder.append(\"Bundle-Name: \");\n    String _name = this.getName();\n    _builder.append(_name, \"\");\n    _builder.newLineIfNotEmpty();\n    _builder.append(\"Bundle-Vendor: My Company\");\n    _builder.newLine();\n    _builder.append(\"Bundle-Version: 1.0.0.qualifier\");\n    _builder.newLine();\n    _builder.append(\"Bundle-SymbolicName: \");\n    String _name_1 = this.getName();\n    _builder.append(_name_1, \"\");\n    _builder.append(\"; singleton:=true\");\n    _builder.newLineIfNotEmpty();\n    _builder.append(\"Bundle-RequiredExecutionEnvironment: \");\n    String _bree = this.getBree();\n    _builder.append(_bree, \"\");\n    _builder.newLineIfNotEmpty();\n    {\n      Object _activatorClassName = this.getActivatorClassName();\n      boolean _notEquals = (!Objects.equal(_activatorClassName, null));\n      if (_notEquals) {\n        _builder.append(\"Bundle-Activator: \");\n        Object _activatorClassName_1 = this.getActivatorClassName();\n        _builder.append(_activatorClassName_1, \"\");\n        _builder.newLineIfNotEmpty();\n      }\n    }\n    _builder.append(\"Bundle-ActivationPolicy: lazy\");\n    _builder.newLine();\n    Set<String> _requiredBundles = this.getRequiredBundles();\n    String _manifestEntry = this.manifestEntry(\"Require-Bundle\", _requiredBundles);\n    _builder.append(_manifestEntry, \"\");\n    _builder.newLineIfNotEmpty();\n    Set<String> _importedPackages = this.getImportedPackages();\n    String _manifestEntry_1 = this.manifestEntry(\"Import-Package\", _importedPackages);\n    _builder.append(_manifestEntry_1, \"\");\n    _builder.newLineIfNotEmpty();\n    return _builder.toString();\n  }","id":69452,"modified_method":"public String manifest() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"Manifest-Version: 1.0\");\n    _builder.newLine();\n    _builder.append(\"Bundle-ManifestVersion: 2\");\n    _builder.newLine();\n    _builder.append(\"Bundle-Name: \");\n    String _name = this.getName();\n    _builder.append(_name, \"\");\n    _builder.newLineIfNotEmpty();\n    _builder.append(\"Bundle-Vendor: My Company\");\n    _builder.newLine();\n    _builder.append(\"Bundle-Version: 1.0.0.qualifier\");\n    _builder.newLine();\n    _builder.append(\"Bundle-SymbolicName: \");\n    String _name_1 = this.getName();\n    _builder.append(_name_1, \"\");\n    _builder.append(\"; singleton:=true\");\n    _builder.newLineIfNotEmpty();\n    {\n      Object _activatorClassName = this.getActivatorClassName();\n      boolean _notEquals = (!Objects.equal(_activatorClassName, null));\n      if (_notEquals) {\n        _builder.append(\"Bundle-Activator: \");\n        Object _activatorClassName_1 = this.getActivatorClassName();\n        _builder.append(_activatorClassName_1, \"\");\n        _builder.newLineIfNotEmpty();\n      }\n    }\n    _builder.append(\"Bundle-ActivationPolicy: lazy\");\n    _builder.newLine();\n    Set<String> _requiredBundles = this.getRequiredBundles();\n    String _manifestEntry = this.manifestEntry(\"Require-Bundle\", _requiredBundles);\n    _builder.append(_manifestEntry, \"\");\n    _builder.newLineIfNotEmpty();\n    Set<String> _importedPackages = this.getImportedPackages();\n    String _manifestEntry_1 = this.manifestEntry(\"Import-Package\", _importedPackages);\n    _builder.append(_manifestEntry_1, \"\");\n    _builder.newLineIfNotEmpty();\n    _builder.append(\"Bundle-RequiredExecutionEnvironment: \");\n    String _bree = this.getBree();\n    _builder.append(_bree, \"\");\n    _builder.newLineIfNotEmpty();\n    return _builder.toString();\n  }","commit_id":"8a901194006df8f4cd308ce19452acfeae7880dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<String> getBinIncludes() {\n    StringConcatenation _builder = new StringConcatenation();\n    String _sourceFolder = this.sourceFolder(Outlet.META_INF);\n    _builder.append(_sourceFolder, \"\");\n    _builder.append(\"/\");\n    return Collections.<String>unmodifiableSet(CollectionLiterals.<String>newHashSet(_builder.toString(), \".\"));\n  }","id":69453,"modified_method":"public Set<String> getBinIncludes() {\n    StringConcatenation _builder = new StringConcatenation();\n    String _sourceFolder = this.sourceFolder(Outlet.META_INF);\n    _builder.append(_sourceFolder, \"\");\n    _builder.append(\"/\");\n    return CollectionLiterals.<String>newLinkedHashSet(\".\", _builder.toString());\n  }","commit_id":"8a901194006df8f4cd308ce19452acfeae7880dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<String> getSourceFolders() {\n    final Function1<Outlet, String> _function = new Function1<Outlet, String>() {\n      @Override\n      public String apply(final Outlet it) {\n        return ProjectDescriptor.this.sourceFolder(it);\n      }\n    };\n    Iterable<String> _map = IterableExtensions.<Outlet, String>map(Collections.<Outlet>unmodifiableSet(CollectionLiterals.<Outlet>newHashSet(Outlet.MAIN_JAVA, Outlet.MAIN_RESOURCES, Outlet.MAIN_SRC_GEN, Outlet.MAIN_XTEND_GEN)), _function);\n    return IterableExtensions.<String>toSet(_map);\n  }","id":69454,"modified_method":"public Set<String> getSourceFolders() {\n    final Function1<Outlet, String> _function = new Function1<Outlet, String>() {\n      @Override\n      public String apply(final Outlet it) {\n        return ProjectDescriptor.this.sourceFolder(it);\n      }\n    };\n    List<String> _map = ListExtensions.<Outlet, String>map(Collections.<Outlet>unmodifiableList(CollectionLiterals.<Outlet>newArrayList(Outlet.MAIN_JAVA, Outlet.MAIN_RESOURCES, Outlet.MAIN_SRC_GEN, Outlet.MAIN_XTEND_GEN)), _function);\n    return IterableExtensions.<String>toSet(_map);\n  }","commit_id":"8a901194006df8f4cd308ce19452acfeae7880dc","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public Set<String> getBinIncludes() {\n    HashSet<String> _xblockexpression = null;\n    {\n      final HashSet<String> includes = CollectionLiterals.<String>newHashSet();\n      Set<String> _binIncludes = super.getBinIncludes();\n      Iterables.<String>addAll(includes, _binIncludes);\n      includes.add(\"plugin.xml\");\n      _xblockexpression = includes;\n    }\n    return _xblockexpression;\n  }","id":69455,"modified_method":"@Override\n  public Set<String> getBinIncludes() {\n    LinkedHashSet<String> _xblockexpression = null;\n    {\n      final LinkedHashSet<String> includes = CollectionLiterals.<String>newLinkedHashSet();\n      Set<String> _binIncludes = super.getBinIncludes();\n      Iterables.<String>addAll(includes, _binIncludes);\n      includes.add(\"plugin.xml\");\n      _xblockexpression = includes;\n    }\n    return _xblockexpression;\n  }","commit_id":"8a901194006df8f4cd308ce19452acfeae7880dc","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public Set<String> getDevelopmentBundles() {\n    return Collections.<String>unmodifiableSet(CollectionLiterals.<String>newHashSet(\"org.eclipse.xtext.xbase\", \"org.eclipse.xtext.generator\", \"org.eclipse.xtext.xtext.generator\", \"org.apache.commons.logging\", \"org.eclipse.emf.codegen.ecore\", \"org.eclipse.emf.mwe.utils\", \"org.eclipse.emf.mwe2.launch\", \"org.eclipse.xtext.common.types\", \"org.objectweb.asm\", \"org.apache.log4j\"));\n  }","id":69456,"modified_method":"@Override\n  public Set<String> getDevelopmentBundles() {\n    return CollectionLiterals.<String>newLinkedHashSet(\n      \"org.eclipse.xtext.xbase\", \n      \"org.eclipse.xtext.common.types\", \n      \"org.eclipse.xtext.generator\", \n      \"org.eclipse.xtext.xtext.generator\", \n      \"org.eclipse.emf.codegen.ecore\", \n      \"org.eclipse.emf.mwe.utils\", \n      \"org.eclipse.emf.mwe2.launch\", \n      \"org.objectweb.asm\", \n      \"org.apache.commons.logging\", \n      \"org.apache.log4j\");\n  }","commit_id":"8a901194006df8f4cd308ce19452acfeae7880dc","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public Set<String> getSourceFolders() {\n    final Function1<Outlet, String> _function = new Function1<Outlet, String>() {\n      @Override\n      public String apply(final Outlet it) {\n        return TestProjectDescriptor.this.sourceFolder(it);\n      }\n    };\n    Iterable<String> _map = IterableExtensions.<Outlet, String>map(Collections.<Outlet>unmodifiableSet(CollectionLiterals.<Outlet>newHashSet(Outlet.TEST_JAVA, Outlet.TEST_RESOURCES, Outlet.TEST_SRC_GEN, Outlet.TEST_XTEND_GEN)), _function);\n    return IterableExtensions.<String>toSet(_map);\n  }","id":69457,"modified_method":"@Override\n  public Set<String> getSourceFolders() {\n    final Function1<Outlet, String> _function = new Function1<Outlet, String>() {\n      @Override\n      public String apply(final Outlet it) {\n        return TestProjectDescriptor.this.sourceFolder(it);\n      }\n    };\n    List<String> _map = ListExtensions.<Outlet, String>map(Collections.<Outlet>unmodifiableList(CollectionLiterals.<Outlet>newArrayList(Outlet.TEST_JAVA, Outlet.TEST_RESOURCES, Outlet.TEST_SRC_GEN, Outlet.TEST_XTEND_GEN)), _function);\n    return IterableExtensions.<String>toSet(_map);\n  }","commit_id":"8a901194006df8f4cd308ce19452acfeae7880dc","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public Set<? extends ProjectDescriptor> getUpstreamProjects() {\n    WizardConfiguration _config = this.getConfig();\n    RuntimeProjectDescriptor _runtimeProject = _config.getRuntimeProject();\n    WizardConfiguration _config_1 = this.getConfig();\n    IdeProjectDescriptor _ideProject = _config_1.getIdeProject();\n    final Function1<ProjectDescriptor, Boolean> _function = new Function1<ProjectDescriptor, Boolean>() {\n      @Override\n      public Boolean apply(final ProjectDescriptor it) {\n        return Boolean.valueOf(it.isEnabled());\n      }\n    };\n    Iterable<? extends ProjectDescriptor> _filter = IterableExtensions.filter(Collections.<ProjectDescriptor>unmodifiableSet(CollectionLiterals.<ProjectDescriptor>newHashSet(_runtimeProject, _ideProject)), _function);\n    return IterableExtensions.toSet(_filter);\n  }","id":69458,"modified_method":"@Override\n  public Set<? extends ProjectDescriptor> getUpstreamProjects() {\n    WizardConfiguration _config = this.getConfig();\n    RuntimeProjectDescriptor _runtimeProject = _config.getRuntimeProject();\n    WizardConfiguration _config_1 = this.getConfig();\n    IdeProjectDescriptor _ideProject = _config_1.getIdeProject();\n    final Function1<ProjectDescriptor, Boolean> _function = new Function1<ProjectDescriptor, Boolean>() {\n      @Override\n      public Boolean apply(final ProjectDescriptor it) {\n        return Boolean.valueOf(it.isEnabled());\n      }\n    };\n    Iterable<? extends ProjectDescriptor> _filter = IterableExtensions.filter(Collections.<ProjectDescriptor>unmodifiableList(CollectionLiterals.<ProjectDescriptor>newArrayList(_runtimeProject, _ideProject)), _function);\n    return IterableExtensions.toSet(_filter);\n  }","commit_id":"8a901194006df8f4cd308ce19452acfeae7880dc","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public Set<? extends ProjectDescriptor> getUpstreamProjects() {\n    WizardConfiguration _config = this.getConfig();\n    RuntimeProjectDescriptor _runtimeProject = _config.getRuntimeProject();\n    WizardConfiguration _config_1 = this.getConfig();\n    IdeProjectDescriptor _ideProject = _config_1.getIdeProject();\n    return Collections.<ProjectDescriptor>unmodifiableSet(CollectionLiterals.<ProjectDescriptor>newHashSet(_runtimeProject, _ideProject));\n  }","id":69459,"modified_method":"@Override\n  public Set<? extends ProjectDescriptor> getUpstreamProjects() {\n    WizardConfiguration _config = this.getConfig();\n    RuntimeProjectDescriptor _runtimeProject = _config.getRuntimeProject();\n    WizardConfiguration _config_1 = this.getConfig();\n    IdeProjectDescriptor _ideProject = _config_1.getIdeProject();\n    return CollectionLiterals.<ProjectDescriptor>newLinkedHashSet(_runtimeProject, _ideProject);\n  }","commit_id":"8a901194006df8f4cd308ce19452acfeae7880dc","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<java.util.Map.Entry<K, V>> entrySet() {\n        Map m;\n        if (size>=maxListFill) {\n            m = innerMap;\n        } else {\n            m = makeMap();\n        }\n        return m.entrySet();\n    }","id":69460,"modified_method":"@SuppressWarnings(\"unchecked\")\n    public Set<java.util.Map.Entry<K, V>> entrySet() {\n        Map m = innerMap!=null?innerMap:makeMap();\n        return m.entrySet();\n    }","commit_id":"659d71f5f50af72c13822dc20f8cc9930e5cd9bd","url":"https://github.com/apache/groovy"},{"original_method":"public boolean containsKey(Object key) {\n        if (size<maxListFill) {\n            for (int i=0; i<listFill; i++) {\n                if (listKeys[i].equals(key)) return true;\n            }\n            return false;\n        } else {\n            return innerMap.containsKey(key);\n        }\n    }","id":69461,"modified_method":"public boolean containsKey(Object key) {\n        if (size<maxListFill) {\n            for (int i=0; i<size; i++) {\n                if (listKeys[i].equals(key)) return true;\n            }\n            return false;\n        } else {\n            return innerMap.containsKey(key);\n        }\n    }","commit_id":"659d71f5f50af72c13822dc20f8cc9930e5cd9bd","url":"https://github.com/apache/groovy"},{"original_method":"public void putAll(Map<? extends K, ? extends V> m) {\n       if (size+m.size()<maxListFill) {\n           for (Entry<? extends K,? extends V> entry : m.entrySet()) {\n               listKeys[listFill] = entry.getKey();\n               listValues[listFill] = entry.getValue();\n               listFill++;\n           }\n           size += m.size();\n           return;\n       } \n       if (size<maxListFill) innerMap = makeMap();\n       innerMap.putAll(m);\n       size += m.size();\n    }","id":69462,"modified_method":"public void putAll(Map<? extends K, ? extends V> m) {\n        for (Entry<? extends K, ? extends V> entry : m.entrySet()) {\n            put(entry.getKey(), entry.getValue());\n        }\n    }","commit_id":"659d71f5f50af72c13822dc20f8cc9930e5cd9bd","url":"https://github.com/apache/groovy"},{"original_method":"public boolean containsValue(Object value) {\n        if (size<maxListFill) {\n            for (int i=0; i<listFill; i++) {\n                if (listValues[i].equals(value)) return true;\n            }\n            return false;\n        } else {\n            return innerMap.containsValue(value);\n        }\n    }","id":69463,"modified_method":"public boolean containsValue(Object value) {\n        if (size<maxListFill) {\n            for (int i=0; i<size; i++) {\n                if (listValues[i].equals(value)) return true;\n            }\n            return false;\n        } else {\n            return innerMap.containsValue(value);\n        }\n    }","commit_id":"659d71f5f50af72c13822dc20f8cc9930e5cd9bd","url":"https://github.com/apache/groovy"},{"original_method":"public void clear() {\n        listFill = 0;\n        innerMap = null;\n        for (int i=0; i<maxListFill; i++) {\n            listValues[i] = null;\n            listKeys[i] = null;\n        }\n    }","id":69464,"modified_method":"public void clear() {\n        innerMap = null;\n        for (int i=0; i<maxListFill; i++) {\n            listValues[i] = null;\n            listKeys[i] = null;\n        }\n        size = 0;\n    }","commit_id":"659d71f5f50af72c13822dc20f8cc9930e5cd9bd","url":"https://github.com/apache/groovy"},{"original_method":"public V get(Object key) {\n        if(size==0) return null;\n        if (size<maxListFill) {\n            for (int i=0; i<size; i++) {\n                if (listKeys[i].equals(key)) return (V) listValues[i];\n            }\n            return null;\n        } else {\n            return innerMap.get(key);\n        }\n    }","id":69465,"modified_method":"public V get(Object key) {\n        if(size==0) return null;\n        if (innerMap==null) {\n            for (int i=0; i<size; i++) {\n                if (listKeys[i].equals(key)) return (V) listValues[i];\n            }\n            return null;\n        } else {\n            return innerMap.get(key);\n        }\n    }","commit_id":"659d71f5f50af72c13822dc20f8cc9930e5cd9bd","url":"https://github.com/apache/groovy"},{"original_method":"public V put(K key, V value) {\n        if (size<maxListFill) {\n            for (int i=0; i<listFill; i++) {\n                if (listKeys[i].equals(key)) {\n                    V old = (V) listValues[i];\n                    listValues[i] = value;\n                    return old;\n                } \n            }\n            if (size<maxListFill-1) {\n                size++;\n                listKeys[listFill] = key;\n                listValues[listFill] = value;\n                listFill++;\n                return null;\n            } else {\n                innerMap = makeMap();\n                size++;\n            }\n        } \n        return innerMap.put(key,value);\n    }","id":69466,"modified_method":"@SuppressWarnings(\"unchecked\")\n    public V put(K key, V value) {\n        if (innerMap==null) {\n            for (int i=0; i<size; i++) {\n                if (listKeys[i].equals(key)) {\n                    V old = (V) listValues[i];\n                    listValues[i] = value;\n                    return old;\n                }\n            }\n            if (size<maxListFill) {\n                listKeys[size] = key;\n                listValues[size] = value;\n                size++;\n                return null;\n            } else {\n                innerMap = makeMap();\n            }\n        }\n        V val = (V) innerMap.put(key, value);\n        size = innerMap.size();\n        return val;\n    }","commit_id":"659d71f5f50af72c13822dc20f8cc9930e5cd9bd","url":"https://github.com/apache/groovy"},{"original_method":"public Set<K> keySet() {\n        Map m;\n        if (size>=maxListFill) {\n            m = innerMap;\n        } else {\n            m = makeMap();\n        }\n        return m.keySet();\n    }","id":69467,"modified_method":"public Set<K> keySet() {\n        Map m = innerMap!=null?innerMap:makeMap();\n        return m.keySet();\n    }","commit_id":"659d71f5f50af72c13822dc20f8cc9930e5cd9bd","url":"https://github.com/apache/groovy"},{"original_method":"private void mapToList() {\n        int i = 0;\n        for (Entry<? extends K,? extends V> entry : innerMap.entrySet()) {\n            listKeys[i] = entry.getKey();\n            listValues[i] = entry.getValue();\n            i++;\n        }\n        listFill = innerMap.size();\n        innerMap = null;\n    }","id":69468,"modified_method":"private void mapToList() {\n        int i = 0;\n        for (Entry<? extends K,? extends V> entry : innerMap.entrySet()) {\n            listKeys[i] = entry.getKey();\n            listValues[i] = entry.getValue();\n            i++;\n        }\n        size = innerMap.size();\n        innerMap = null;\n    }","commit_id":"659d71f5f50af72c13822dc20f8cc9930e5cd9bd","url":"https://github.com/apache/groovy"},{"original_method":"public Collection<V> values() {\n        if (size<maxListFill) {\n            ArrayList<V> list = new ArrayList(size);\n            for (int i=0; i<listFill; i++) {\n                list.add((V) listValues[i]);\n            }\n            return list;\n        } else {\n            return innerMap.values();\n        }\n    }","id":69469,"modified_method":"public Collection<V> values() {\n        if (innerMap==null) {\n            ArrayList<V> list = new ArrayList(size);\n            for (int i=0; i<size; i++) {\n                list.add((V) listValues[i]);\n            }\n            return list;\n        } else {\n            return innerMap.values();\n        }\n    }","commit_id":"659d71f5f50af72c13822dc20f8cc9930e5cd9bd","url":"https://github.com/apache/groovy"},{"original_method":"public V remove(Object key) {\n        if (size<maxListFill) {\n            for (int i=0; i<listFill; i++) {\n                if (listKeys[i].equals(key)) {\n                    V old = (V) listValues[i];\n                    listFill--; size--;\n                    listValues[i] = listValues[listFill];\n                    listKeys[i] = listValues[listFill];\n                    return old;\n                }\n            }\n            return null;\n        } else {\n            V old = innerMap.remove(key);\n            if (old!=null) size--;\n            if (size<maxListFill) {\n                mapToList();\n            }\n            return old;\n        }\n    }","id":69470,"modified_method":"public V remove(Object key) {\n        if (innerMap==null) {\n            for (int i=0; i<size; i++) {\n                if (listKeys[i].equals(key)) {\n                    V old = (V) listValues[i];\n                    size--;\n                    listValues[i] = listValues[size];\n                    listKeys[i] = listKeys[size];\n                    return old;\n                }\n            }\n            return null;\n        } else {\n            V old = innerMap.remove(key);\n            size = innerMap.size();\n            if (size<=maxListFill) {\n                mapToList();\n            }\n            return old;\n        }\n    }","commit_id":"659d71f5f50af72c13822dc20f8cc9930e5cd9bd","url":"https://github.com/apache/groovy"},{"original_method":"/**\r\n   * Default constructor.\r\n   * @param main reference to the main window\r\n   */\r\n  public DialogMapInfo(final GUI main) {\r\n    super(main, \"Map Information\", false);\r\n\r\n    final BaseXBack p = new BaseXBack();\r\n    p.setLayout(new TableLayout(8, 3, 5, 0));\r\n    p.add(new BaseXLabel(\"\"));\r\n    p.add(new BaseXLabel(\"New Map      \", true, true));\r\n    p.add(new BaseXLabel(\"Old Map      \", true, true));\r\n    p.add(new BaseXLabel(\"Algorithmus\", true, true));\r\n    p.add(nname);\r\n    p.add(oname);\r\n    p.add(new BaseXLabel(\"Size: \", true, true));\r\n    p.add(ndim);\r\n    p.add(odim);\r\n    p.add(new BaseXLabel(\"Nodes painted: \", true, true));\r\n    p.add(nsize);\r\n    p.add(osize);\r\n    p.add(new BaseXLabel(\"Average aspect ratio: \", true, true));\r\n    p.add(naar);\r\n    p.add(oaar);\r\n    p.add(new BaseXLabel(\"Execution time: \", true, true));\r\n    p.add(ntime);\r\n    p.add(otime);\r\n    p.add(new BaseXLabel(\"Nodes per ms: \", true, true));\r\n    p.add(nnps);\r\n    p.add(onps);\r\n    p.add(new BaseXLabel(\"  \", true, true));\r\n\r\n    //p.add(new BaseXLabel(\"Distance change: \", true, true));\r\n    //p.add(dist);\r\n    //p.add(new BaseXLabel(\"\"));\r\n\r\n    set(p, BorderLayout.NORTH);\r\n    setResizable(true);\r\n    finish(null);\r\n  }","id":69471,"modified_method":"/**\r\n   * Default constructor.\r\n   * @param main reference to the main window\r\n   */\r\n  public DialogMapInfo(final GUI main) {\r\n    super(main, \"Map Information\", false);\r\n\r\n    final BaseXBack p = new BaseXBack();\r\n    p.setLayout(new TableLayout(8, 3, 5, 0));\r\n    p.add(new BaseXLabel(\"\"));\r\n    p.add(new BaseXLabel(\"New Map          \", true, true));\r\n    p.add(new BaseXLabel(\"Old Map          \", true, true));\r\n    p.add(new BaseXLabel(\"Algorithm\", true, true));\r\n    p.add(nname);\r\n    p.add(oname);\r\n    p.add(new BaseXLabel(\"Size: \", true, true));\r\n    p.add(ndim);\r\n    p.add(odim);\r\n    p.add(new BaseXLabel(\"Nodes painted: \", true, true));\r\n    p.add(nsize);\r\n    p.add(osize);\r\n    p.add(new BaseXLabel(\"Average aspect ratio: \", true, true));\r\n    p.add(naar);\r\n    p.add(oaar);\r\n    p.add(new BaseXLabel(\"Execution time: \", true, true));\r\n    p.add(ntime);\r\n    p.add(otime);\r\n    p.add(new BaseXLabel(\"Nodes per ms: \", true, true));\r\n    p.add(nnps);\r\n    p.add(onps);\r\n    p.add(new BaseXLabel(\"  \", true, true));\r\n\r\n    //p.add(new BaseXLabel(\"Distance change: \", true, true));\r\n    //p.add(dist);\r\n    //p.add(new BaseXLabel(\"\"));\r\n\r\n    set(p, BorderLayout.NORTH);\r\n    setResizable(true);\r\n    finish(null);\r\n  }","commit_id":"324e5578be355f5f4662508d036db747ed87ea55","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Sets the table values.\r\n   * @param nn number of nodes\r\n   * @param rect main rectangle\r\n   * @param aar average aspect ratio\r\n   * @param time execution time\r\n   * @param name of used layoutalgorithm\r\n   */\r\n  public void setValues(final int nn, final ViewRect rect, final double aar,\r\n      final String time, final String name) {\r\n\r\n    final int nw = rect != null ? rect.w : 0;\r\n    final int nh = rect != null ? rect.h : 0;\r\n    final int ow = recto != null ? recto.w : 0;\r\n    final int oh = recto != null ? recto.h : 0;\r\n    ndim.setText(nw + \" x \" + nh);\r\n    odim.setText(ow + \" x \" + oh);\r\n    nname.setText(name);\r\n    oname.setText(nameo);\r\n    nsize.setText(Integer.toString(nn));\r\n    osize.setText(Integer.toString(nno));\r\n    naar.setText(f.format(aar));\r\n    oaar.setText(f.format(aaro));\r\n    ntime.setText(time);\r\n    otime.setText(timeo);\r\n    \r\n    double nps = nn / Double.valueOf(time.replace(\" ms\", \"\"));\r\n    onps.setText(nnps.getText());\r\n    nnps.setText(f.format(nps));\r\n    \r\n    timeo = time;\r\n    recto = rect;\r\n    aaro = aar;\r\n    nno = nn;\r\n    nameo = name;\r\n  }","id":69472,"modified_method":"/**\r\n   * Sets the table values.\r\n   * @param nn number of nodes\r\n   * @param rect main rectangle\r\n   * @param aar average aspect ratio\r\n   * @param time execution time\r\n   * @param name of used layoutalgorithm\r\n   */\r\n  public void setValues(final int nn, final ViewRect rect, final double aar,\r\n      final String time, final String name) {\r\n\r\n    final int nw = rect != null ? rect.w : 0;\r\n    final int nh = rect != null ? rect.h : 0;\r\n    final int ow = recto != null ? recto.w : 0;\r\n    final int oh = recto != null ? recto.h : 0;\r\n    ndim.setText(nw + \" x \" + nh);\r\n    odim.setText(ow + \" x \" + oh);\r\n    nname.setText(name);\r\n    oname.setText(nameo);\r\n    nsize.setText(Integer.toString(nn));\r\n    osize.setText(Integer.toString(nno));\r\n    if(GUIProp.perfinfo) {\r\n      naar.setText(\"not available\");\r\n      oaar.setText(\"not available\");\r\n    } else {\r\n      naar.setText(f.format(aar));\r\n      oaar.setText(f.format(aaro));\r\n    }\r\n    ntime.setText(time);\r\n    otime.setText(timeo);\r\n    \r\n    double nps = nn / Double.valueOf(time.replace(\" ms\", \"\").\r\n        replace(\" (avg)\", \"\"));\r\n    onps.setText(nnps.getText());\r\n    nnps.setText(f.format(nps));\r\n    \r\n    timeo = time;\r\n    recto = rect;\r\n    aaro = aar;\r\n    nno = nn;\r\n    nameo = name;\r\n  }","commit_id":"324e5578be355f5f4662508d036db747ed87ea55","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void refreshLayout() {\r\n    if(painter == null) return;\r\n\r\n    // initial rectangle\r\n    final int w = getWidth(), h = getHeight();\r\n    \r\n    if(GUIProp.mapinteraction) {\r\n      // [JH] use normal rectangles to calculate hugeMap\r\n//      final Data data = gui.context.data();\r\n//      MapLayout hugeLayout = new MapLayout(data, textLen);\r\n//      \r\n    final MapRect rect = new MapRect(0, 0, w, h, 0, 0);\r\n    calc(rect, gui.context.current(), mainMap);\r\n      \r\n//      MapRect dest = new MapRect(0, 0, fkt * w, fkt * h, mainRects.get(0).pre,\r\n//          mainRects.get(0).level);\r\n//      MapRect source = new MapRect(0, 0, w, h, mainRects.get(0).pre,\r\n//          mainRects.get(0).level);\r\n//      dest.isLeaf = mainRects.get(0).isLeaf;\r\n//      source.isLeaf = mainRects.get(0).isLeaf;\r\n//      MapRects hugeRects = scaleRects(mainRects, 0, mainRects.size, dest, \r\n//          source);\r\n      \r\n      // simple method only scaling all the rectangles including the borders\r\n      MapRects hugeRects = new MapRects();\r\n      for(MapRect r : mainRects) {\r\n        hugeRects.add(new MapRect(fkt * r.x, fkt * r.y, fkt * r.w, fkt * r.h, \r\n            r.pre, r.level));\r\n      }\r\n\r\n      painter.init(hugeRects);\r\n      drawMap(hugeMap, hugeRects, fkt);\r\n    } else {\r\n      final MapRect rect = new MapRect(0, 0, w, h, 0, 0);\r\n      calc(rect, gui.context.current(), mainMap);\r\n    }\r\n      \r\n//      final MapRect hrect = new MapRect(0, 0, fkt * w, fkt * h, 0, 0);\r\n//      calc(hrect, gui.context.current(), hugeMap);\r\n//    }\r\n//    \r\n//    final MapRect rect = new MapRect(0, 0, w, h, 0, 0);\r\n//    calc(rect, gui.context.current(), mainMap);\r\n    \r\n    repaint();\r\n  }","id":69473,"modified_method":"@Override\r\n  public void refreshLayout() {\r\n    if(painter == null) return;\r\n\r\n    // initial rectangle\r\n    final int w = getWidth(), h = getHeight();\r\n    \r\n    if(GUIProp.mapinteraction) {\r\n      // [JH] use normal rectangles to calculate hugeMap\r\n//      final Data data = gui.context.data();\r\n//      MapLayout hugeLayout = new MapLayout(data, textLen);\r\n//      \r\n      final MapRect rect = new MapRect(0, 0, w, h, 0, 0);\r\n      calc(rect, gui.context.current(), mainMap);\r\n      \r\n//      MapRect dest = new MapRect(0, 0, fkt * w, fkt * h, mainRects.get(0).pre,\r\n//          mainRects.get(0).level);\r\n//      MapRect source = new MapRect(0, 0, w, h, mainRects.get(0).pre,\r\n//          mainRects.get(0).level);\r\n//      dest.isLeaf = mainRects.get(0).isLeaf;\r\n//      source.isLeaf = mainRects.get(0).isLeaf;\r\n//      MapRects hugeRects = scaleRects(mainRects, 0, mainRects.size, dest, \r\n//          source);\r\n      \r\n      // simple method only scaling all the rectangles including the borders\r\n      hugeRects = new MapRects();\r\n      for(MapRect r : mainRects) {\r\n        hugeRects.add(new MapRect(fkt * r.x, fkt * r.y, fkt * r.w, fkt * r.h, \r\n            r.pre, r.level));\r\n      }\r\n\r\n      painter.init(hugeRects);\r\n      drawMap(hugeMap, hugeRects, fkt);\r\n    } else {\r\n      final MapRect rect = new MapRect(0, 0, w, h, 0, 0);\r\n//      final MapRect rect = new MapRect(0, 0, 1680, 1050, 0, 0);\r\n      calc(rect, gui.context.current(), mainMap);\r\n    }\r\n      \r\n//      final MapRect hrect = new MapRect(0, 0, fkt * w, fkt * h, 0, 0);\r\n//      calc(hrect, gui.context.current(), hugeMap);\r\n//    }\r\n//    \r\n//    final MapRect rect = new MapRect(0, 0, w, h, 0, 0);\r\n//    calc(rect, gui.context.current(), mainMap);\r\n    \r\n    repaint();\r\n  }","commit_id":"324e5578be355f5f4662508d036db747ed87ea55","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Initializes the calculation of the main TreeMap.\r\n   * \r\n   * @param rect initial space to layout rects in\r\n   * @param nodes Nodes to draw in the map\r\n   * @param map image to draw rectangles on\r\n   */\r\n  // @SuppressWarnings(\"unchecked\")\r\n  private void calc(final MapRect rect, final Nodes nodes,\r\n      final BufferedImage map) {\r\n\r\n    final Performance p = new Performance();\r\n\r\n    // calculate new main rectangles\r\n    initLen();\r\n    layout = new MapLayout(nodes.data, textLen);\r\n\r\n    layout.makeMap(rect, new MapList(nodes.nodes.clone()), 0, nodes.size() - 1,\r\n        0);\r\n\r\n    mainRects = layout.rectangles.copy();\r\n    // mainRects = layout.rectangles;\r\n\r\n    painter.init(mainRects);\r\n    drawMap(map, mainRects, 1f);\r\n    focus();\r\n\r\n    // [JH] implement distance change, readability, ...\r\n    if(GUIProp.mapinfo && !GUIProp.perfinfo) {\r\n      final double aar = MapLayout.aar(mainRects);\r\n      mapInfo.setValues(mainRects.size, rect, aar, p.getTimer(), \r\n          layout.algo.getName());\r\n    }\r\n\r\n    /*\r\n     * Screenshots: try { File file = new File(\"screenshot.png\");\r\n     * ImageIO.write(mainMap, \"png\", file); } catch(IOException e) {\r\n     * e.printStackTrace(); }\r\n     */\r\n  }","id":69474,"modified_method":"/**\r\n   * Initializes the calculation of the main TreeMap.\r\n   * \r\n   * @param rect initial space to layout rects in\r\n   * @param nodes Nodes to draw in the map\r\n   * @param map image to draw rectangles on\r\n   */\r\n  // @SuppressWarnings(\"unchecked\")\r\n  private void calc(final MapRect rect, final Nodes nodes,\r\n      final BufferedImage map) {\r\n\r\n    final Performance p = new Performance();\r\n\r\n    for(int i = 0; i < 1; i++) {\r\n      // calculate new main rectangles\r\n      initLen();\r\n      layout = new MapLayout(nodes.data, textLen);\r\n  \r\n      layout.makeMap(rect, new MapList(nodes.nodes.clone()), \r\n          0, nodes.size() - 1, 0);\r\n      mainRects = layout.rectangles.copy();\r\n      // mainRects = layout.rectangles;\r\n    }\r\n\r\n    // [JH] implement distance change, readability, ...\r\n    if(GUIProp.mapinfo) {\r\n      double aar = 0;\r\n      if(!GUIProp.perfinfo) aar = MapLayout.aar(mainRects);\r\n      mapInfo.setValues(mainRects.size, rect, aar, \r\n          p.getTimer(1), layout.algo.getName());\r\n    }\r\n    \r\n    painter.init(mainRects);\r\n    drawMap(map, mainRects, 1f);\r\n    focus();\r\n\r\n    /*\r\n     * Screenshots: try { File file = new File(\"screenshot.png\");\r\n     * ImageIO.write(mainMap, \"png\", file); } catch(IOException e) {\r\n     * e.printStackTrace(); }\r\n     */\r\n  }","commit_id":"324e5578be355f5f4662508d036db747ed87ea55","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void mouseMoved(final MouseEvent e) {\r\n    if(gui.updating) return;\r\n\r\n    super.mouseMoved(e);\r\n    // refresh mouse focus\r\n    mouseX = e.getX();\r\n    mouseY = e.getY();\r\n    if(focus()) {\r\n      if(!(mouseX > tinyx && mouseX < tinyx + tinyw && mouseY > tinyy &&\r\n          mouseY < tinyy + tinyh)) {\r\n        thumbMap = false;\r\n      }\r\n      repaint();\r\n    } else if(GUIProp.mapinteraction && e.isControlDown()) {\r\n        constMag = true;\r\n        repaint();\r\n    } else if(GUIProp.mapinteraction && !e.isControlDown() && constMag) {\r\n        constMag = false;\r\n        repaint();\r\n    }\r\n  }","id":69475,"modified_method":"@Override\r\n  public void mouseMoved(final MouseEvent e) {\r\n    if(gui.updating) return;\r\n\r\n    super.mouseMoved(e);\r\n    // refresh mouse focus\r\n    mouseX = e.getX();\r\n    mouseY = e.getY();\r\n    if(GUIProp.mapinteraction && GUIProp.mapdist && e.isControlDown()) {\r\n      Graphics g = mainMap.getGraphics();\r\n      g.setColor(Color.black);\r\n      g.fillRect(0, 0, getWidth(), getHeight());\r\n      \r\n      MapRects distRects = new MapRects();\r\n      for(MapRect r : mainRects) {\r\n        int x = (int) (r.x + 100 * Math.tanh(0.2 * (r.x - mouseX)));\r\n        int w = (int) (r.x + r.w + 100 * Math.tanh(\r\n            0.2 * (r.x + r.w - mouseX)) - x);\r\n        int y = (int) (r.y + 100 * Math.tanh(0.2 * (r.y - mouseY)));\r\n        int h = (int) (r.y + r.h + 100 * Math.tanh(\r\n            0.2 * (r.y + r.h - mouseY)) - y);\r\n        distRects.add(new MapRect(x, y, w, h, r.pre, r.level));\r\n      }\r\n      mainMap.flush();\r\n      painter.init(distRects);\r\n      drawMap(mainMap, distRects, 1);\r\n      repaint();\r\n    } else if(focus()) {\r\n      if(!(mouseX > tinyx && mouseX < tinyx + tinyw && mouseY > tinyy &&\r\n          mouseY < tinyy + tinyh)) {\r\n        thumbMap = false;\r\n      }\r\n      repaint();\r\n    } else if(GUIProp.mapinteraction && e.isControlDown()) {\r\n        constMag = true;\r\n        repaint();\r\n    } else if(GUIProp.mapinteraction && !e.isControlDown() && constMag) {\r\n        constMag = false;\r\n        repaint();\r\n    }\r\n  }","commit_id":"324e5578be355f5f4662508d036db747ed87ea55","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public MapRects calcMap(final MapRect r, final MapList ml, \n      final int ns, final int ne, final int l) {\n    // stores all calculated rectangles\n    final MapRects rects = new MapRects();\n    \n    // node iterator\n    int ni = ns;\n    // first node of current row\n    int start = ns;\n\n    // setting initial proportions\n    double xx = r.x;\n    double yy = r.y;\n    double ww = r.w;\n    double hh = r.h;\n\n    MapRects row = new MapRects();\n    int height = 0;\n    int width = 0;\n    double weight = 0;\n    double sumweight = 1;\n    double tmpratio;\n    double rowratio = Double.MAX_VALUE;\n    \n    if(GUIProp.striphor) {\n      while(ni <= ne && xx + ww <= r.x + r.w && yy + hh <= r.y + r.h) {\n        weight += ml.weight[ni]; \n        height = (int) ((weight / sumweight) * hh); \n  //      height = height > 0 ? height : 1;\n        \n        final MapRects tmp = new MapRects();\n  \n        double x = xx;\n        for(int i = start; i <= ni; i++) {\n          int w = i == ni ? (int) (xx + ww - x) :\n            (int) (ml.weight[i] / weight * ww);\n  //        w = w > 0 ? w : 1;\n          \n          if(yy + height <= yy + hh)\n            tmp.add(new MapRect((int) x, (int) yy, w, height, ml.list[i], l));\n          else break;\n          x += w;\n        }\n        tmpratio = lineRatio(tmp);\n  \n        // if ar has increased discard tmp and add row\n        if(tmpratio > rowratio) {\n          // add rects of row to solution\n          rects.add(row);\n          rowratio = Double.MAX_VALUE;\n          // preparing next line\n          hh -= row.get(0).h;\n          yy += row.get(0).h;\n          tmp.reset();\n          row.reset();\n          start = ni;\n          sumweight -= weight - ml.weight[ni];\n          weight = 0;\n          // sometimes there has to be one rectangles to fill the left space\n          if(ne == ni) {\n            row.add(new MapRect((int) xx, (int) yy, (int) ww, (int) hh,\n                ml.list[ni], l));\n            break;\n          }\n        } else {\n          row = tmp;\n          rowratio = tmpratio;\n          ni++;\n        }\n      }\n      // adding last row\n      for(final MapRect rect : row) rect.h = (int) hh;\n      rects.add(row);\n      \n      return rects;\n    } else {\n      while(ni <= ne && xx + ww <= r.x + r.w && yy + hh <= r.y + r.h) {\n        weight += ml.weight[ni]; \n        width = (int) ((weight / sumweight) * ww); \n  //      height = height > 0 ? height : 1;\n        \n        final MapRects tmp = new MapRects();\n  \n        double y = yy;\n        for(int i = start; i <= ni; i++) {\n          int h = i == ni ? (int) (yy + hh - y) :\n            (int) (ml.weight[i] / weight * hh);\n  //        w = w > 0 ? w : 1;\n          \n          if(yy + height <= yy + hh)\n            tmp.add(new MapRect((int) xx, (int) y, width, h, ml.list[i], l));\n          else break;\n          y += h;\n        }\n        tmpratio = lineRatio(tmp);\n  \n        // if ar has increased discard tmp and add row\n        if(tmpratio > rowratio) {\n          // add rects of row to solution\n          rects.add(row);\n          rowratio = Double.MAX_VALUE;\n          // preparing next line\n          ww -= row.get(0).w;\n          xx += row.get(0).w;\n          tmp.reset();\n          row.reset();\n          start = ni;\n          sumweight -= weight - ml.weight[ni];\n          weight = 0;\n          // sometimes there has to be one rectangles to fill the left space\n          if(ne == ni) {\n            row.add(new MapRect((int) xx, (int) yy, (int) ww, (int) hh,\n                ml.list[ni], l));\n            break;\n          }\n        } else {\n          row = tmp;\n          rowratio = tmpratio;\n          ni++;\n        }\n      }\n      // adding last row\n      for(final MapRect rect : row) rect.w = (int) ww;\n      rects.add(row);\n      \n      return rects;\n    }\n  }","id":69476,"modified_method":"@Override\n  public MapRects calcMap(final MapRect r, final MapList ml, \n      final int ns, final int ne, final int l) {\n    // stores all calculated rectangles\n    final MapRects rects = new MapRects();\n    \n    // node iterator\n    int ni = ns;\n    // first node of current row\n    int start = ns;\n\n    // setting initial proportions\n    double xx = r.x;\n    double yy = r.y;\n    double ww = r.w;\n    double hh = r.h;\n\n    MapRects row = new MapRects();\n    int height = 0;\n    int width = 0;\n    double weight = 0;\n    double sumweight = 1;\n    double tmpratio;\n    double rowratio = Double.MAX_VALUE;\n    \n    if(GUIProp.striphor) {\n      while(ni <= ne && xx + ww <= r.x + r.w && yy + hh <= r.y + r.h) {\n        weight += ml.weight[ni]; \n        height = (int) ((weight / sumweight) * hh); \n        height = height > 0 ? height : 1;\n        \n        final MapRects tmp = new MapRects();\n  \n        double x = xx;\n        for(int i = start; i <= ni; i++) {\n          int w = i == ni ? (int) (xx + ww - x) :\n            (int) (ml.weight[i] / weight * ww);\n          w = w > 0 ? w : 1;\n          \n          if(yy + height <= yy + hh)\n            tmp.add(new MapRect((int) x, (int) yy, w, height, ml.list[i], l));\n          else break;\n          x += w;\n        }\n        tmpratio = lineRatio(tmp);\n  \n        // if ar has increased discard tmp and add row\n        if(tmpratio > rowratio) {\n          // add rects of row to solution\n          rects.add(row);\n          rowratio = Double.MAX_VALUE;\n          // preparing next line\n          hh -= row.get(0).h;\n          yy += row.get(0).h;\n          tmp.reset();\n          row.reset();\n          start = ni;\n          sumweight -= weight - ml.weight[ni];\n          weight = 0;\n          // sometimes there has to be one rectangles to fill the left space\n          if(ne == ni) {\n            row.add(new MapRect((int) xx, (int) yy, (int) ww, (int) hh,\n                ml.list[ni], l));\n            break;\n          }\n        } else {\n          row = tmp;\n          rowratio = tmpratio;\n          ni++;\n        }\n      }\n      // adding last row\n      for(final MapRect rect : row) rect.h = (int) hh;\n      rects.add(row);\n      \n      return rects;\n    } else {\n      while(ni <= ne && xx + ww <= r.x + r.w && yy + hh <= r.y + r.h) {\n        weight += ml.weight[ni]; \n        width = (int) ((weight / sumweight) * ww); \n        width = width > 0 ? width : 1;\n        \n        final MapRects tmp = new MapRects();\n  \n        double y = yy;\n        for(int i = start; i <= ni; i++) {\n          int h = i == ni ? (int) (yy + hh - y) :\n            (int) (ml.weight[i] / weight * hh);\n          h = h > 0 ? h : 1;\n          \n          if(yy + height <= yy + hh)\n            tmp.add(new MapRect((int) xx, (int) y, width, h, ml.list[i], l));\n          else break;\n          y += h;\n        }\n        tmpratio = lineRatio(tmp);\n  \n        // if ar has increased discard tmp and add row\n        if(tmpratio > rowratio) {\n          // add rects of row to solution\n          rects.add(row);\n          rowratio = Double.MAX_VALUE;\n          // preparing next line\n          ww -= row.get(0).w;\n          xx += row.get(0).w;\n          tmp.reset();\n          row.reset();\n          start = ni;\n          sumweight -= weight - ml.weight[ni];\n          weight = 0;\n          // sometimes there has to be one rectangles to fill the left space\n          if(ne == ni) {\n            row.add(new MapRect((int) xx, (int) yy, (int) ww, (int) hh,\n                ml.list[ni], l));\n            break;\n          }\n        } else {\n          row = tmp;\n          rowratio = tmpratio;\n          ni++;\n        }\n      }\n      // adding last row\n      for(final MapRect rect : row) rect.w = (int) ww;\n      rects.add(row);\n      \n      return rects;\n    }\n  }","commit_id":"324e5578be355f5f4662508d036db747ed87ea55","url":"https://github.com/BaseXdb/basex"},{"original_method":"private static List<PropertyDefinition> getPropertyDefinitions() {\n    return ImmutableList.of(\n      PropertyDefinition.builder(CoreProperties.PROJECT_INCLUSIONS_PROPERTY)\n        .name(\"Source File Inclusions\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .onQualifiers(Qualifiers.PROJECT)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.PROJECT_TEST_INCLUSIONS_PROPERTY)\n        .name(\"Test File Inclusions\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .onQualifiers(Qualifiers.PROJECT)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.GLOBAL_EXCLUSIONS_PROPERTY)\n        .name(\"Global Source File Exclusions\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.GLOBAL_TEST_EXCLUSIONS_PROPERTY)\n        .name(\"Global Test File Exclusions\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .defaultValue(CoreProperties.GLOBAL_TEST_EXCLUSIONS_DEFAULT)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.PROJECT_EXCLUSIONS_PROPERTY)\n        .name(\"Source File Exclusions\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .onQualifiers(Qualifiers.PROJECT)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.PROJECT_TEST_EXCLUSIONS_PROPERTY)\n        .name(\"Test File Exclusions\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .onQualifiers(Qualifiers.PROJECT)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.CORE_SKIPPED_MODULES_PROPERTY)\n        .name(\"Exclude Modules\")\n        .description(\"Maven artifact ids of modules to exclude.\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .onlyOnQualifiers(Qualifiers.PROJECT)\n        .build());\n  }","id":69477,"modified_method":"private static List<PropertyDefinition> getPropertyDefinitions() {\n    return ImmutableList.of(\n      PropertyDefinition.builder(CoreProperties.PROJECT_INCLUSIONS_PROPERTY)\n        .name(\"Source File Inclusions\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .onQualifiers(Qualifiers.PROJECT)\n        .index(3)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.PROJECT_TEST_INCLUSIONS_PROPERTY)\n        .name(\"Test File Inclusions\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .onQualifiers(Qualifiers.PROJECT)\n        .index(5)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.GLOBAL_EXCLUSIONS_PROPERTY)\n        .name(\"Global Source File Exclusions\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .index(0)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.GLOBAL_TEST_EXCLUSIONS_PROPERTY)\n        .name(\"Global Test File Exclusions\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .defaultValue(CoreProperties.GLOBAL_TEST_EXCLUSIONS_DEFAULT)\n        .index(1)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.PROJECT_EXCLUSIONS_PROPERTY)\n        .name(\"Source File Exclusions\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .onQualifiers(Qualifiers.PROJECT)\n        .index(2)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.PROJECT_TEST_EXCLUSIONS_PROPERTY)\n        .name(\"Test File Exclusions\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .onQualifiers(Qualifiers.PROJECT)\n        .index(4)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.CORE_SKIPPED_MODULES_PROPERTY)\n        .name(\"Exclude Modules\")\n        .description(\"Maven artifact ids of modules to exclude.\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .onlyOnQualifiers(Qualifiers.PROJECT)\n        .index(0)\n        .build(),\n      PropertyDefinition.builder(CoreProperties.CORE_INCLUDED_MODULES_PROPERTY)\n        .name(\"Include Modules\")\n        .description(\"Maven artifact ids of modules to include.\")\n        .multiValues(true)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(CoreProperties.SUBCATEGORY_FILES_EXCLUSIONS)\n        .onlyOnQualifiers(Qualifiers.PROJECT)\n        .index(1)\n        .build());\n  }","commit_id":"9f25da1847a08a794a4a3099388a2c7da2460183","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private boolean isExcluded(String projectKey, boolean isRoot) {\n    String[] includedKeys = settings.getStringArray(\"sonar.includedModules\");\n    boolean excluded = false;\n    if (!isRoot && includedKeys.length > 0) {\n      excluded = !ArrayUtils.contains(includedKeys, projectKey);\n    }\n    String skippedModulesProperty = CoreProperties.CORE_SKIPPED_MODULES_PROPERTY;\n    if (!excluded) {\n      String[] excludedKeys = settings.getStringArray(skippedModulesProperty);\n      excluded = ArrayUtils.contains(excludedKeys, projectKey);\n    }\n    if (excluded && isRoot) {\n      throw new IllegalArgumentException(\"The root project can't be excluded. Please check the parameters \" + skippedModulesProperty + \" and sonar.includedModules.\");\n    }\n    return excluded;\n  }","id":69478,"modified_method":"private boolean isExcluded(String projectKey, boolean isRoot) {\n    String[] includedKeys = settings.getStringArray(CoreProperties.CORE_INCLUDED_MODULES_PROPERTY);\n    boolean excluded = false;\n    if (!isRoot && includedKeys.length > 0) {\n      excluded = !ArrayUtils.contains(includedKeys, projectKey);\n    }\n    String skippedModulesProperty = CoreProperties.CORE_SKIPPED_MODULES_PROPERTY;\n    if (!excluded) {\n      String[] excludedKeys = settings.getStringArray(skippedModulesProperty);\n      excluded = ArrayUtils.contains(excludedKeys, projectKey);\n    }\n    if (excluded && isRoot) {\n      throw new IllegalArgumentException(\"The root project can't be excluded. Please check the parameters \" + skippedModulesProperty + \" and sonar.includedModules.\");\n    }\n    return excluded;\n  }","commit_id":"9f25da1847a08a794a4a3099388a2c7da2460183","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public static List<PropertyDefinition> getPropertyDefinitions() {\n    return ImmutableList.of(\n      PropertyDefinition.builder(Constants.PATTERNS_MULTICRITERIA_KEY)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(Constants.SUB_CATEGORY_IGNORE_ISSUES)\n        .name(\"File Path Pattern\")\n        .description(\"Patterns used to identify which violations to switch off.<br/>\" +\n          \"More information on the <a href=\\\"http://docs.codehaus.org/display/SONAR/Project+Administration#ProjectAdministration-IgnoringIssues\\\">Project Administration page<\/a>.<br/>\")\n        .onQualifiers(Qualifiers.PROJECT)\n        .fields(\n          PropertyFieldDefinition.build(Constants.RESOURCE_KEY)\n            .name(\"File Path Pattern\")\n            .description(\"Pattern used to match files which should be ignored\")\n            .type(PropertyType.STRING)\n            .indicativeSize(LARGE_SIZE)\n            .build(),\n          PropertyFieldDefinition.build(Constants.RULE_KEY)\n            .name(\"Rule Key Pattern\")\n            .description(\"Pattern used to match rules which should be ignored\")\n            .type(PropertyType.STRING)\n            .indicativeSize(LARGE_SIZE)\n            .build(),\n          PropertyFieldDefinition.build(Constants.LINE_RANGE_KEY)\n            .name(\"Line Range\")\n            .description(\"Range of lines that should be ignored.\")\n            .type(PropertyType.STRING)\n            .indicativeSize(SMALL_SIZE)\n            .build())\n        .build(),\n        PropertyDefinition.builder(Constants.PATTERNS_BLOCK_KEY)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(Constants.SUB_CATEGORY_IGNORE_ISSUES)\n        .name(\"Block exclusion patterns\")\n        .description(\"Patterns used to identify blocks in which violations are switched off.<br/>\" +\n          \"More information on the <a href=\\\"http://docs.codehaus.org/display/SONAR/Project+Administration#ProjectAdministration-IgnoringIssues\\\">Project Administration page<\/a>.<br/>\")\n        .onQualifiers(Qualifiers.PROJECT)\n        .fields(\n          PropertyFieldDefinition.build(Constants.BEGIN_BLOCK_REGEXP)\n            .name(\"Regular expression for start of block\")\n            .description(\"If this regular expression is found in a file, then following lines are ignored until end of block.\")\n            .type(PropertyType.STRING)\n            .indicativeSize(LARGE_SIZE)\n            .build(),\n          PropertyFieldDefinition.build(Constants.END_BLOCK_REGEXP)\n            .name(\"Regular expression for end of block\")\n            .description(\"If specified, this regular expression is used to determine the end of code blocks to ignore. If not, then block ends at the end of file.\")\n            .type(PropertyType.STRING)\n            .indicativeSize(LARGE_SIZE)\n            .build())\n        .build(),\n        PropertyDefinition.builder(Constants.PATTERNS_ALLFILE_KEY)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(Constants.SUB_CATEGORY_IGNORE_ISSUES)\n        .name(\"File exclusion patterns\")\n        .description(\"Patterns used to identify files in which violations are switched off.<br/>\" +\n          \"More information on the <a href=\\\"http://docs.codehaus.org/display/SONAR/Project+Administration#ProjectAdministration-IgnoringIssues\\\">Project Administration page<\/a>.<br/>\")\n        .onQualifiers(Qualifiers.PROJECT)\n        .fields(\n          PropertyFieldDefinition.build(Constants.FILE_REGEXP)\n            .name(\"Regular expression\")\n            .description(\"If this regular expression is found in a file, then following lines are ignored.\")\n            .type(PropertyType.STRING)\n            .indicativeSize(LARGE_SIZE)\n            .build())\n        .build());\n  }","id":69479,"modified_method":"public static List<PropertyDefinition> getPropertyDefinitions() {\n    return ImmutableList.of(\n      PropertyDefinition.builder(Constants.PATTERNS_MULTICRITERIA_KEY)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(Constants.SUB_CATEGORY_IGNORE_ISSUES)\n        .name(\"File Path Pattern\")\n        .description(\"Patterns used to identify which violations to switch off.<br/>\" +\n          \"More information on the <a href=\\\"http://docs.codehaus.org/display/SONAR/Project+Administration#ProjectAdministration-IgnoringIssues\\\">Project Administration page<\/a>.<br/>\")\n        .onQualifiers(Qualifiers.PROJECT)\n        .index(3)\n        .fields(\n          PropertyFieldDefinition.build(Constants.RESOURCE_KEY)\n            .name(\"File Path Pattern\")\n            .description(\"Pattern used to match files which should be ignored\")\n            .type(PropertyType.STRING)\n            .indicativeSize(LARGE_SIZE)\n            .build(),\n          PropertyFieldDefinition.build(Constants.RULE_KEY)\n            .name(\"Rule Key Pattern\")\n            .description(\"Pattern used to match rules which should be ignored\")\n            .type(PropertyType.STRING)\n            .indicativeSize(LARGE_SIZE)\n            .build(),\n          PropertyFieldDefinition.build(Constants.LINE_RANGE_KEY)\n            .name(\"Line Range\")\n            .description(\"Range of lines that should be ignored.\")\n            .type(PropertyType.STRING)\n            .indicativeSize(SMALL_SIZE)\n            .build())\n        .build(),\n        PropertyDefinition.builder(Constants.PATTERNS_BLOCK_KEY)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(Constants.SUB_CATEGORY_IGNORE_ISSUES)\n        .name(\"Block exclusion patterns\")\n        .description(\"Patterns used to identify blocks in which violations are switched off.<br/>\" +\n          \"More information on the <a href=\\\"http://docs.codehaus.org/display/SONAR/Project+Administration#ProjectAdministration-IgnoringIssues\\\">Project Administration page<\/a>.<br/>\")\n        .onQualifiers(Qualifiers.PROJECT)\n        .index(2)\n        .fields(\n          PropertyFieldDefinition.build(Constants.BEGIN_BLOCK_REGEXP)\n            .name(\"Regular expression for start of block\")\n            .description(\"If this regular expression is found in a file, then following lines are ignored until end of block.\")\n            .type(PropertyType.STRING)\n            .indicativeSize(LARGE_SIZE)\n            .build(),\n          PropertyFieldDefinition.build(Constants.END_BLOCK_REGEXP)\n            .name(\"Regular expression for end of block\")\n            .description(\"If specified, this regular expression is used to determine the end of code blocks to ignore. If not, then block ends at the end of file.\")\n            .type(PropertyType.STRING)\n            .indicativeSize(LARGE_SIZE)\n            .build())\n        .build(),\n        PropertyDefinition.builder(Constants.PATTERNS_ALLFILE_KEY)\n        .category(CoreProperties.CATEGORY_EXCLUSIONS)\n        .subCategory(Constants.SUB_CATEGORY_IGNORE_ISSUES)\n        .name(\"File exclusion patterns\")\n        .description(\"Patterns used to identify files in which violations are switched off.<br/>\" +\n          \"More information on the <a href=\\\"http://docs.codehaus.org/display/SONAR/Project+Administration#ProjectAdministration-IgnoringIssues\\\">Project Administration page<\/a>.<br/>\")\n        .onQualifiers(Qualifiers.PROJECT)\n        .index(1)\n        .fields(\n          PropertyFieldDefinition.build(Constants.FILE_REGEXP)\n            .name(\"Regular expression\")\n            .description(\"If this regular expression is found in a file, then following lines are ignored.\")\n            .type(PropertyType.STRING)\n            .indicativeSize(LARGE_SIZE)\n            .build())\n        .build());\n  }","commit_id":"d5d58cb7e6b7bdf13a9ce106771979141093d366","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void update(AnActionEvent e) {\n    super.update(e);\n\n    e.getPresentation().setIcon(ICON);\n\n    String title = \"Show in Reveal\";\n\n    XCBuildConfiguration xcBuildConfiguration = myConfiguration.getConfiguration();\n    AppleSdk sdk = xcBuildConfiguration == null ? null : xcBuildConfiguration.getBaseSdk();\n\n    File appBundle = Reveal.getDefaultRevealApplicationBundle();\n    if (appBundle.exists() == false) return;\n\n    File lib = Reveal.getRevealLib(appBundle, sdk);\n    boolean compatible = Reveal.isCompatible(appBundle);\n\n    e.getPresentation().setEnabled(lib != null\n                                   && compatible\n\n                                   && !myDisabled\n\n                                   && myProcessHandler.isStartNotified()\n                                   && !myProcessHandler.isProcessTerminating()\n                                   && !myProcessHandler.isProcessTerminated()\n    );\n\n    if (lib == null) {\n      title += \" (Reveal library not found)\";\n    }\n    else if (!compatible) {\n      title += \" (Reveal.app is not compatible, please update)\";\n    }\n    else if (myDisabled) {\n      title += \" (Action is disabled until configuration relaunch)\";\n    }                                    \n\n    e.getPresentation().setText(title, false);\n  }","id":69480,"modified_method":"@Override\n  public void update(AnActionEvent e) {\n    super.update(e);\n\n    e.getPresentation().setIcon(ICON);\n\n    String title = \"Show in Reveal\";\n\n    XCBuildConfiguration xcBuildConfiguration = myConfiguration.getConfiguration();\n    AppleSdk sdk = xcBuildConfiguration == null ? null : xcBuildConfiguration.getBaseSdk();\n\n    File lib = null;\n    boolean compatible = false;\n\n    File appBundle = Reveal.getDefaultRevealApplicationBundle();\n    if (appBundle.exists()) {\n      lib = Reveal.getRevealLib(appBundle, sdk);\n      compatible = Reveal.isCompatible(appBundle);\n\n      e.getPresentation().setEnabled(lib != null\n              && compatible\n\n              && !myDisabled\n\n              && myProcessHandler.isStartNotified()\n              && !myProcessHandler.isProcessTerminating()\n              && !myProcessHandler.isProcessTerminated()\n      );\n    }\n\n    if (lib == null) {\n      title += \" (Reveal library not found)\";\n    }\n    else if (!compatible) {\n      title += \" (Reveal.app is not compatible, please update)\";\n    }\n    else if (myDisabled) {\n      title += \" (Action is disabled until configuration relaunch)\";\n    }                                    \n\n    e.getPresentation().setText(title, false);\n  }","commit_id":"4cd09a5e29ea293b11d8e26dff5a025d10b3fa84","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Override\n    protected void resetEditorFrom(AppCodeRunConfiguration s) {\n      RevealSettings settings = getRevealSettings(s);\n\n      myInjectCheckBox.setSelected(settings.autoInject);\n      myInstallCheckBox.setSelected(settings.autoInstall);\n\n      File appBundle = Reveal.getDefaultRevealApplicationBundle();\n      if (appBundle.exists() == false) return;\n\n      boolean found = Reveal.getRevealLib(appBundle, getSdk(s)) != null;\n      boolean compatible = Reveal.isCompatible(appBundle);\n\n      String notFoundText = null;\n      if (!found) {\n        notFoundText = \"Reveal.app not found. You can install it from \";\n      }\n      else if (!compatible) {\n        notFoundText = \"Incompatible version of Reveal.app. You can download the latest one from \";\n      }\n      if (notFoundText != null) {\n        myRevealNotFoundOrIncompatible.setHyperlinkText(notFoundText, \"revealapp.com\", \"\");\n      }\n\n      isFound = found && compatible;\n      isAvailable = isAvailableForPlatform(s);\n\n      updateControls();\n    }","id":69481,"modified_method":"@Override\n    protected void resetEditorFrom(AppCodeRunConfiguration s) {\n      RevealSettings settings = getRevealSettings(s);\n\n      myInjectCheckBox.setSelected(settings.autoInject);\n      myInstallCheckBox.setSelected(settings.autoInstall);\n\n      String notFoundText = null;\n      boolean found = false;\n      boolean compatible = false;\n\n      File appBundle = Reveal.getDefaultRevealApplicationBundle();\n      if (appBundle.exists()) {\n        found = (Reveal.getRevealLib(appBundle, getSdk(s)) != null);\n        compatible = Reveal.isCompatible(appBundle);\n      }\n\n      if (!found) {\n        notFoundText = \"Reveal.app not found. You can install it from \";\n      }\n      else if (!compatible) {\n        notFoundText = \"Incompatible version of Reveal.app. You can download the latest one from \";\n      }\n      if (notFoundText != null) {\n        myRevealNotFoundOrIncompatible.setHyperlinkText(notFoundText, \"revealapp.com\", \"\");\n      }\n\n      isFound = found && compatible;\n      isAvailable = isAvailableForPlatform(s);\n\n      updateControls();\n    }","commit_id":"4cd09a5e29ea293b11d8e26dff5a025d10b3fa84","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"/**\n\t * Retrieves the value of the given accessible field of the given receiver.\n\t * @param receiver the container of the field\n\t * @param fieldName the field's name\n\t * @return the value of the field\n\t */\n\t@SuppressWarnings(\"unchecked\")\n\tpublic <T> T get(Object receiver, String fieldName) {\n\t\ttry {\n\t\t\tif (receiver == null)\n\t\t\t\tthrow new NullPointerException(\"receiver\");\n\t\t\t\n\t\t\tClass<? extends Object> clazz = receiver.getClass();\n\t\t\tField f = clazz.getField(fieldName);\n\t\t\treturn (T) f.get(receiver);\n\t\t} catch (Exception e) {\n\t\t\tthrow Exceptions.sneakyThrow(e);\n\t\t}\n\t}","id":69482,"modified_method":"/**\n\t * Retrieves the value of the given accessible field of the given receiver.\n\t * \n\t * @param receiver the container of the field, not <code>null<\/code>\n\t * @param fieldName the field's name, not <code>null<\/code>\n\t * @return the value of the field\n\t * \n\t * @throws NoSuchFieldException see {@link Class#getField(String)}\n\t * @throws SecurityException see {@link Class#getField(String)}\n\t * @throws IllegalAccessException see {@link Field#get(Object)}\n\t * @throws IllegalArgumentException see {@link Field#get(Object)}\n\t */\n\t@SuppressWarnings(\"unchecked\")\n\t@Nullable\n\tpublic <T> T get(Object receiver, String fieldName) throws SecurityException, NoSuchFieldException, IllegalArgumentException, IllegalAccessException {\n\t\tPreconditions.checkNotNull(receiver,\"receiver\");\n\t\tPreconditions.checkNotNull(fieldName,\"fieldName\");\n\t\t\n\t\tClass<? extends Object> clazz = receiver.getClass();\n\t\tField f = clazz.getField(fieldName);\n\t\tif (!f.isAccessible())\n\t\t\tf.setAccessible(true);\n\t\treturn (T) f.get(receiver);\n\t}","commit_id":"d7fa1f64030b046ffd3ee23e670b883b2cd38eaf","url":"https://github.com/eclipse/xtext"},{"original_method":"private boolean isCompatible(Method candidate, String featureName, Object... args) {\n\t\tif (!candidate.getName().equals(featureName))\n\t\t\treturn false;\n\t\tif (candidate.getParameterTypes().length != args.length)\n\t\t\treturn false;\n\t\tfor (int i = 0; i< candidate.getParameterTypes().length; i++) {\n\t\t\tObject param = args[i];\n\t\t\tif (param != null && !candidate.getParameterTypes()[i].isInstance(param))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}","id":69483,"modified_method":"private boolean isCompatible(Method candidate, String featureName, Object... args) {\n\t\tif (!candidate.getName().equals(featureName))\n\t\t\treturn false;\n\t\tif (candidate.getParameterTypes().length != args.length)\n\t\t\treturn false;\n\t\tfor (int i = 0; i< candidate.getParameterTypes().length; i++) {\n\t\t\tObject param = args[i];\n\t\t\tClass<?> class1 = candidate.getParameterTypes()[i];\n\t\t\tif (class1.isPrimitive())\n\t\t\t\tclass1 = wrapperTypeFor(class1);\n\t\t\tif (param != null && !class1.isInstance(param))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}","commit_id":"d7fa1f64030b046ffd3ee23e670b883b2cd38eaf","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * Sets the given value on an the receivers's accessible field with the given name.\n\t * @param receiver the receiver\n\t * @param fieldName the field's name\n\t * @param value the value to set\n\t */\n\tpublic void set(Object receiver, String fieldName, Object value) {\n\t\ttry {\n\t\t\tif (receiver == null)\n\t\t\t\tthrow new NullPointerException(\"receiver\");\n\t\t\tClass<? extends Object> clazz = receiver.getClass();\n\t\t\tField f = clazz.getField(fieldName);\n\t\t\tf.set(receiver, value);\n\t\t} catch (Exception e) {\n\t\t\tthrow Exceptions.sneakyThrow(e);\n\t\t}\n\t}","id":69484,"modified_method":"/**\n\t * Sets the given value on an the receivers's accessible field with the given name.\n\t * \n\t * @param receiver the receiver, never <code>null<\/code>\n\t * @param fieldName the field's name, never <code>null<\/code>\n\t * @param value the value to set\n\t * \n\t * @throws NoSuchFieldException see {@link Class#getField(String)}\n\t * @throws SecurityException see {@link Class#getField(String)}\n\t * @throws IllegalAccessException see {@link Field#set(Object, Object)}\n\t * @throws IllegalArgumentException see {@link Field#set(Object, Object)}\n\t */\n\tpublic void set(Object receiver, String fieldName, @Nullable Object value) throws SecurityException, NoSuchFieldException, IllegalArgumentException, IllegalAccessException {\n\t\tPreconditions.checkNotNull(receiver,\"receiver\");\n\t\tPreconditions.checkNotNull(fieldName,\"fieldName\");\n\t\tClass<? extends Object> clazz = receiver.getClass();\n\t\tField f = clazz.getField(fieldName);\n\t\tif (!f.isAccessible())\n\t\t\tf.setAccessible(true);\n\t\tf.set(receiver, value);\n\t}","commit_id":"d7fa1f64030b046ffd3ee23e670b883b2cd38eaf","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * Invokes the first accessible method defined on the receiver'c class with the given name and\n\t * a parameter list compatible to the given arguments.\n\t * \n\t * @param receiver the method call receiver\n\t * @param methodName the method name\n\t * @param args the arguments for the method invocation\n\t * @return the result of the method invocation. <code>null<\/code> if the method was of type void.\n\t */\n\tpublic Object invoke(Object receiver, String methodName, Object...args) {\n\t\ttry {\n\t\t\tif (receiver == null)\n\t\t\t\tthrow new NullPointerException(\"receiver\");\n\t\t\t\n\t\t\tClass<? extends Object> clazz = receiver.getClass();\n\t\t\tMethod compatible = null;\n\t\t\tfor (Method candidate : clazz.getMethods()) {\n\t\t\t\tif (isCompatible(candidate, methodName, args) && candidate.equals(clazz.getMethod(candidate.getName(), candidate.getParameterTypes()))) {\n\t\t\t\t\tif (compatible != null) \n\t\t\t\t\t\tthrow new IllegalStateException(\"Ambiguous methods to invoke. Both \"+compatible+\" and  \"+candidate+\" would be compatible choices.\");\n\t\t\t\t\tcompatible = candidate;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (compatible != null)\n\t\t\t\treturn compatible.invoke(receiver, args);\n\t\t\t// not found provoke method not found exception\n\t\t\tClass<?>[] paramTypes = new Class<?>[args.length];\n\t\t\tfor (int i = 0; i< args.length ; i++) {\n\t\t\t\tparamTypes[i] = args[i] == null ? Object.class : args[i].getClass();\n\t\t\t}\n\t\t\tMethod method = clazz.getMethod(methodName, paramTypes);\n\t\t\treturn method.invoke(receiver, args);\n\t\t} catch (Exception e) {\n\t\t\tthrow Exceptions.sneakyThrow(e);\n\t\t}\n\t}","id":69485,"modified_method":"/**\n\t * Invokes the first accessible method defined on the receiver'c class with the given name and\n\t * a parameter list compatible to the given arguments.\n\t * \n\t * @param receiver the method call receiver, not <code>null<\/code>\n\t * @param methodName the method name, not <code>null<\/code>\n\t * @param args the arguments for the method invocation\n\t * @return the result of the method invocation. <code>null<\/code> if the method was of type void.\n\t * \n\t * @throws SecurityException see {@link Class#getMethod(String, Class...)}\n\t * @throws NoSuchMethodException see {@link Class#getMethod(String, Class...)}\n\t * @throws IllegalAccessException see {@link Method#invoke(Object, Object...)}\n\t * @throws IllegalArgumentException see {@link Method#invoke(Object, Object...)}\n\t * @throws InvocationTargetException see {@link Method#invoke(Object, Object...)}\n\t */\n\t@Nullable\n\tpublic Object invoke(Object receiver, String methodName, @Nullable Object...args) throws SecurityException, IllegalArgumentException, IllegalAccessException, InvocationTargetException, NoSuchMethodException {\n\t\tPreconditions.checkNotNull(receiver,\"receiver\");\n\t\tPreconditions.checkNotNull(methodName,\"methodName\");\n\t\tfinal Object[] arguments = args==null ? new Object[]{null}:args;\n\t\t\n\t\tClass<? extends Object> clazz = receiver.getClass();\n\t\tMethod compatible = null;\n\t\tfor (Method candidate : clazz.getMethods()) {\n\t\t\tif (candidate != null && !candidate.isBridge() && isCompatible(candidate, methodName, arguments) && candidate.equals(clazz.getMethod(candidate.getName(), candidate.getParameterTypes()))) {\n\t\t\t\tif (compatible != null) \n\t\t\t\t\tthrow new IllegalStateException(\"Ambiguous methods to invoke. Both \"+compatible+\" and  \"+candidate+\" would be compatible choices.\");\n\t\t\t\tcompatible = candidate;\n\t\t\t}\n\t\t}\n\t\tif (compatible != null) {\n\t\t\tif (!compatible.isAccessible())\n\t\t\t\tcompatible.setAccessible(true);\n\t\t\treturn compatible.invoke(receiver, arguments);\n\t\t}\n\t\t// not found provoke method not found exception\n\t\tClass<?>[] paramTypes = new Class<?>[arguments.length];\n\t\tfor (int i = 0; i< arguments.length ; i++) {\n\t\t\tparamTypes[i] = arguments[i] == null ? Object.class : arguments[i].getClass();\n\t\t}\n\t\tMethod method = clazz.getMethod(methodName, paramTypes);\n\t\treturn method.invoke(receiver, arguments);\n\t}","commit_id":"d7fa1f64030b046ffd3ee23e670b883b2cd38eaf","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void testInvoke_01() {\n    final String x = \"foo\";\n    Object _invoke = this.ext.invoke(x, \"length\");\n    Assert.assertEquals(Integer.valueOf(3), _invoke);\n  }","id":69486,"modified_method":"@Test\n  public void testInvoke_01() {\n    try {\n      final String x = \"foo\";\n      Object _invoke = this.ext.invoke(x, \"length\");\n      Assert.assertEquals(Integer.valueOf(3), _invoke);\n    } catch (Exception _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","commit_id":"d7fa1f64030b046ffd3ee23e670b883b2cd38eaf","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void testInvokeWithOverloadedMethods() {\n    StringBuilder _stringBuilder = new StringBuilder();\n    final StringBuilder x = _stringBuilder;\n    try {\n      this.ext.invoke(x, \"append\", \"foo\");\n      Assert.fail();\n    } catch (final Throwable _t) {\n      if (_t instanceof IllegalStateException) {\n        final IllegalStateException e = (IllegalStateException)_t;\n        String _message = e.getMessage();\n        InputOutput.<String>println(_message);\n      } else {\n        throw Exceptions.sneakyThrow(_t);\n      }\n    }\n  }","id":69487,"modified_method":"@Test\n  public void testInvokeWithOverloadedMethods() {\n    try {\n      StringBuilder _stringBuilder = new StringBuilder();\n      final StringBuilder x = _stringBuilder;\n      try {\n        this.ext.invoke(x, \"append\", \"foo\");\n        Assert.fail();\n      } catch (final Throwable _t) {\n        if (_t instanceof IllegalStateException) {\n          final IllegalStateException e = (IllegalStateException)_t;\n          String _message = e.getMessage();\n          InputOutput.<String>println(_message);\n        } else {\n          throw Exceptions.sneakyThrow(_t);\n        }\n      }\n    } catch (Exception _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","commit_id":"d7fa1f64030b046ffd3ee23e670b883b2cd38eaf","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void testGet_01() {\n    ReflectExtensionsTest _reflectExtensionsTest = new ReflectExtensionsTest();\n    final ReflectExtensionsTest x = _reflectExtensionsTest;\n    Object _get = this.ext.<Object>get(x, \"ext\");\n    Assert.assertNotNull(_get);\n  }","id":69488,"modified_method":"@Test\n  public void testGet_01() {\n    try {\n      ReflectExtensionsTest _reflectExtensionsTest = new ReflectExtensionsTest();\n      final ReflectExtensionsTest x = _reflectExtensionsTest;\n      Object _get = this.ext.<Object>get(x, \"ext\");\n      Assert.assertNotNull(_get);\n    } catch (Exception _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","commit_id":"d7fa1f64030b046ffd3ee23e670b883b2cd38eaf","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void testSet_01() {\n    ReflectExtensionsTest _reflectExtensionsTest = new ReflectExtensionsTest();\n    final ReflectExtensionsTest x = _reflectExtensionsTest;\n    this.ext.set(x, \"ext\", null);\n    Assert.assertNull(x.ext);\n  }","id":69489,"modified_method":"@Test\n  public void testSet_01() {\n    try {\n      ReflectExtensionsTest _reflectExtensionsTest = new ReflectExtensionsTest();\n      final ReflectExtensionsTest x = _reflectExtensionsTest;\n      this.ext.set(x, \"ext\", null);\n      Assert.assertNull(x.ext);\n    } catch (Exception _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","commit_id":"d7fa1f64030b046ffd3ee23e670b883b2cd38eaf","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void testGet_02() {\n    ReflectExtensionsTest _reflectExtensionsTest = new ReflectExtensionsTest();\n    final ReflectExtensionsTest x = _reflectExtensionsTest;\n    try {\n      Object _get = this.ext.<Object>get(x, \"foo\");\n      Assert.assertNotNull(_get);\n      Assert.fail();\n    } catch (final Throwable _t) {\n      if (_t instanceof NoSuchFieldException) {\n        final NoSuchFieldException e = (NoSuchFieldException)_t;\n      } else {\n        throw Exceptions.sneakyThrow(_t);\n      }\n    }\n  }","id":69490,"modified_method":"@Test\n  public void testGet_02() {\n    try {\n      ReflectExtensionsTest _reflectExtensionsTest = new ReflectExtensionsTest();\n      final ReflectExtensionsTest x = _reflectExtensionsTest;\n      try {\n        Object _get = this.ext.<Object>get(x, \"foo\");\n        Assert.assertNotNull(_get);\n        Assert.fail();\n      } catch (final Throwable _t) {\n        if (_t instanceof NoSuchFieldException) {\n          final NoSuchFieldException e = (NoSuchFieldException)_t;\n        } else {\n          throw Exceptions.sneakyThrow(_t);\n        }\n      }\n    } catch (Exception _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","commit_id":"d7fa1f64030b046ffd3ee23e670b883b2cd38eaf","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void testInvoke_03() {\n    final String x = \"foo\";\n    try {\n      this.ext.invoke(x, \"length\", Integer.valueOf(24));\n      Assert.fail();\n    } catch (final Throwable _t) {\n      if (_t instanceof NoSuchMethodException) {\n        final NoSuchMethodException e = (NoSuchMethodException)_t;\n      } else {\n        throw Exceptions.sneakyThrow(_t);\n      }\n    }\n  }","id":69491,"modified_method":"@Test\n  public void testInvoke_03() {\n    try {\n      final String x = \"foo\";\n      try {\n        this.ext.invoke(x, \"length\", Integer.valueOf(24));\n        Assert.fail();\n      } catch (final Throwable _t) {\n        if (_t instanceof NoSuchMethodException) {\n          final NoSuchMethodException e = (NoSuchMethodException)_t;\n        } else {\n          throw Exceptions.sneakyThrow(_t);\n        }\n      }\n    } catch (Exception _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","commit_id":"d7fa1f64030b046ffd3ee23e670b883b2cd38eaf","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void testSet_02() {\n    ReflectExtensionsTest _reflectExtensionsTest = new ReflectExtensionsTest();\n    final ReflectExtensionsTest x = _reflectExtensionsTest;\n    try {\n      this.ext.set(x, \"foo\", \"bar\");\n      Assert.fail();\n    } catch (final Throwable _t) {\n      if (_t instanceof NoSuchFieldException) {\n        final NoSuchFieldException e = (NoSuchFieldException)_t;\n      } else {\n        throw Exceptions.sneakyThrow(_t);\n      }\n    }\n  }","id":69492,"modified_method":"@Test\n  public void testSet_02() {\n    try {\n      ReflectExtensionsTest _reflectExtensionsTest = new ReflectExtensionsTest();\n      final ReflectExtensionsTest x = _reflectExtensionsTest;\n      try {\n        this.ext.set(x, \"foo\", \"bar\");\n        Assert.fail();\n      } catch (final Throwable _t) {\n        if (_t instanceof NoSuchFieldException) {\n          final NoSuchFieldException e = (NoSuchFieldException)_t;\n        } else {\n          throw Exceptions.sneakyThrow(_t);\n        }\n      }\n    } catch (Exception _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","commit_id":"d7fa1f64030b046ffd3ee23e670b883b2cd38eaf","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void testInvoke_02() {\n    final String x = \"foo\";\n    try {\n      this.ext.invoke(x, \"foo\");\n      Assert.fail();\n    } catch (final Throwable _t) {\n      if (_t instanceof NoSuchMethodException) {\n        final NoSuchMethodException e = (NoSuchMethodException)_t;\n      } else {\n        throw Exceptions.sneakyThrow(_t);\n      }\n    }\n  }","id":69493,"modified_method":"@Test\n  public void testInvoke_02() {\n    try {\n      final String x = \"foo\";\n      try {\n        this.ext.invoke(x, \"foo\");\n        Assert.fail();\n      } catch (final Throwable _t) {\n        if (_t instanceof NoSuchMethodException) {\n          final NoSuchMethodException e = (NoSuchMethodException)_t;\n        } else {\n          throw Exceptions.sneakyThrow(_t);\n        }\n      }\n    } catch (Exception _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","commit_id":"d7fa1f64030b046ffd3ee23e670b883b2cd38eaf","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n   * Retrieve configured size for global memstore lower water mark as percentage of total heap.\n   * @param c\n   * @param globalMemStorePercent\n   */\n  public static float getGlobalMemStoreLowerMark(final Configuration c, float globalMemStorePercent) {\n    String lowMarkPercentStr = c.get(MEMSTORE_SIZE_LOWER_LIMIT_KEY);\n    if (lowMarkPercentStr != null) {\n      return Float.parseFloat(lowMarkPercentStr);\n    }\n    String lowerWaterMarkOldValStr = c.get(MEMSTORE_SIZE_LOWER_LIMIT_OLD_KEY);\n    if (lowerWaterMarkOldValStr != null) {\n      LOG.warn(MEMSTORE_SIZE_LOWER_LIMIT_OLD_KEY + \" is deprecated. Instead use \"\n          + MEMSTORE_SIZE_LOWER_LIMIT_KEY);\n      float lowerWaterMarkOldVal = Float.parseFloat(lowerWaterMarkOldValStr);\n      if (lowerWaterMarkOldVal > globalMemStorePercent) {\n        lowerWaterMarkOldVal = globalMemStorePercent;\n        LOG.info(\"Setting globalMemStoreLimitLowMark == globalMemStoreLimit \" + \"because supplied \"\n            + MEMSTORE_SIZE_LOWER_LIMIT_OLD_KEY + \" was > \" + MEMSTORE_SIZE_OLD_KEY);\n      }\n      return lowerWaterMarkOldVal / globalMemStorePercent;\n    }\n    return DEFAULT_MEMSTORE_SIZE_LOWER_LIMIT;\n  }","id":69494,"modified_method":"/**\n   * Retrieve configured size for global memstore lower water mark as fraction of global memstore\n   * size.\n   */\n  public static float getGlobalMemStoreLowerMark(final Configuration conf, float globalMemStorePercent) {\n    String lowMarkPercentStr = conf.get(MEMSTORE_SIZE_LOWER_LIMIT_KEY);\n    if (lowMarkPercentStr != null) {\n      float lowMarkPercent = Float.parseFloat(lowMarkPercentStr);\n      if (lowMarkPercent > 1.0f) {\n        LOG.error(\"Bad configuration value for \" + MEMSTORE_SIZE_LOWER_LIMIT_KEY + \": \" +\n            lowMarkPercent + \". Using 1.0f instead.\");\n        lowMarkPercent = 1.0f;\n      }\n      return lowMarkPercent;\n    }\n    String lowerWaterMarkOldValStr = conf.get(MEMSTORE_SIZE_LOWER_LIMIT_OLD_KEY);\n    if (lowerWaterMarkOldValStr != null) {\n      LOG.warn(MEMSTORE_SIZE_LOWER_LIMIT_OLD_KEY + \" is deprecated. Instead use \"\n          + MEMSTORE_SIZE_LOWER_LIMIT_KEY);\n      float lowerWaterMarkOldVal = Float.parseFloat(lowerWaterMarkOldValStr);\n      if (lowerWaterMarkOldVal > globalMemStorePercent) {\n        lowerWaterMarkOldVal = globalMemStorePercent;\n        LOG.error(\"Value of \" + MEMSTORE_SIZE_LOWER_LIMIT_OLD_KEY + \" (\" + lowerWaterMarkOldVal\n            + \") is greater than global memstore limit (\" + globalMemStorePercent + \") set by \"\n            + MEMSTORE_SIZE_KEY + \"/\" + MEMSTORE_SIZE_OLD_KEY + \". Setting memstore lower limit \"\n            + \"to \" + globalMemStorePercent);\n      }\n      return lowerWaterMarkOldVal / globalMemStorePercent;\n    }\n    return DEFAULT_MEMSTORE_SIZE_LOWER_LIMIT;\n  }","commit_id":"dff86542d558394cc87ede256bd5432d071ed73f","url":"https://github.com/apache/hbase"},{"original_method":"private static Float toFloat(Object o) {\n        if (o instanceof Float)\n            return (Float) o;\n        if (o instanceof Double)\n            return new Float((Double) o);\n        if (o instanceof Integer)\n            return new Float((Integer) o);\n        if (o instanceof String) {\n            try {\n                float f = Float.parseFloat((String) o);\n                return f;\n            } catch (NumberFormatException e) {\n                Main.warn(e);\n            }\n        }\n        return null;\n    }","id":69495,"modified_method":"private static Float toFloat(Object o) {\n        if (o instanceof Float)\n            return (Float) o;\n        if (o instanceof Double)\n            return new Float((Double) o);\n        if (o instanceof Integer)\n            return new Float((Integer) o);\n        if (o instanceof String && !((String) o).isEmpty()) {\n            try {\n                return Float.parseFloat((String) o);\n            } catch (NumberFormatException e) {\n                Main.debug(\"'\"+o+\"' cannot be converted to float\");\n            }\n        }\n        return null;\n    }","commit_id":"574ec97b59d9b326e62a208b2ce019dfa46fb27c","url":"https://github.com/openstreetmap/josm"},{"original_method":"private HtmlTag createInputAddonTag(String type, String icon) {\n        HtmlTag dateAddon = new HtmlTag(\"span\");\n        dateAddon.setAttribute(\"class\", \"input-group-addon\");\n        dateAddon.setAttribute(\"id\", data.getName() + \"_\" +\n                type + \"picker_widget_input_addon\");\n        HtmlTag dateAddonIcon = new HtmlTag(\"span\");\n        dateAddonIcon.setAttribute(\"class\", icon);\n        dateAddon.addBody(dateAddonIcon);\n        return dateAddon;\n    }","id":69496,"modified_method":"private HtmlTag createInputAddonTag(String type, String icon) {\n        HtmlTag dateAddon = new HtmlTag(\"span\");\n        dateAddon.setAttribute(\"class\", \"input-group-addon text\");\n        dateAddon.setAttribute(\"id\", data.getName() + \"_\" +\n                type + \"picker_widget_input_addon\");\n        IconTag dateAddonIcon = new IconTag(icon);\n        dateAddon.addBody(\"&nbsp;\");\n        dateAddon.addBody(dateAddonIcon.render());\n        return dateAddon;\n    }","commit_id":"7aa4a6885b6f9bd698b1ce03a012d0da4c4430e8","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private void writePickerHtml(Writer out) throws IOException {\n\n        HtmlTag row = new HtmlTag(\"div\");\n        row.setAttribute(\"class\", \"row-0\");\n\n        HtmlTag col1 = new HtmlTag(\"div\");\n        col1.setAttribute(\"class\", \"col-md-7\");\n\n        HtmlTag group = new HtmlTag(\"div\");\n        group.setAttribute(\"class\", \"input-group\");\n        group.setAttribute(\"id\", data.getName() + \"_datepicker_widget\");\n\n        HtmlTag dateAddon = createInputAddonTag(\"date\", \"fa fa-calendar\");\n\n        SimpleDateFormat dateFmt = (SimpleDateFormat)\n                DateFormat.getDateInstance(DateFormat.SHORT, data.getLocale());\n        SimpleDateFormat timeFmt = (SimpleDateFormat)\n                DateFormat.getTimeInstance(DateFormat.SHORT, data.getLocale());\n\n        HtmlTag dateInput = new HtmlTag(\"input\");\n        dateInput.setAttribute(\"data-provide\", \"date-picker\");\n        dateInput.setAttribute(\"data-date-today-highlight\", \"true\");\n        dateInput.setAttribute(\"data-date-autoclose\", \"true\");\n        dateInput.setAttribute(\"data-date-language\", data.getLocale().toString());\n        dateInput.setAttribute(\"data-date-format\",\n                toWeirdDateFormat(dateFmt.toPattern()));\n        dateInput.setAttribute(\"type\", \"text\");\n        dateInput.setAttribute(\"class\", \"form-control\");\n        dateInput.setAttribute(\"id\", data.getName() + \"_datepicker_widget_input\");\n\n        String firstDay = getJavascriptPickerDayIndex(\n                data.getCalendar().getFirstDayOfWeek());\n        dateInput.setAttribute(\"data-date-week-start\", firstDay);\n\n        HtmlTag timeAddon = createInputAddonTag(\"time\", \"fa fa-clock-o\");\n\n        HtmlTag timeInput = new HtmlTag(\"input\");\n        timeInput.setAttribute(\"type\", \"text\");\n        timeInput.setAttribute(\"class\", \"form-control\");\n        timeInput.setAttribute(\"data-time-format\",\n                toPhpTimeFormat(timeFmt.toPattern()));\n        timeInput.setAttribute(\"id\", data.getName() + \"_timepicker_widget_input\");\n\n        HtmlTag tzAddon = new HtmlTag(\"span\");\n        tzAddon.setAttribute(\"id\", data.getName() + \"_tz_input_addon\");\n        tzAddon.setAttribute(\"class\", \"input-group-addon\");\n        tzAddon.addBody(\n                data.getCalendar().getTimeZone().getDisplayName(\n                        false, TimeZone.SHORT, data.getLocale()));\n\n        HtmlTag col2 = new HtmlTag(\"div\");\n        col2.setAttribute(\"class\", \"col-md-5\");\n\n        group.addBody(dateAddon);\n        group.addBody(dateInput);\n        if (!data.getDisableTime()) {\n            group.addBody(timeAddon);\n            group.addBody(timeInput);\n            group.addBody(tzAddon);\n        }\n\n        col1.addBody(group);\n        row.addBody(col1);\n        row.addBody(col2);\n\n        out.append(row.render());\n        // compatibility with the old struts form\n        // these values are updated when the picker changes using javascript\n        out.append(createHiddenInput(\"day\").render());\n        out.append(createHiddenInput(\"month\").render());\n        out.append(createHiddenInput(\"year\").render());\n        if (!data.getDisableTime()) {\n            out.append(createHiddenInput(\"hour\").render());\n            out.append(createHiddenInput(\"minute\").render());\n            out.append(createHiddenInput(\"am_pm\").render());\n        }\n    }","id":69497,"modified_method":"private void writePickerHtml(Writer out) throws IOException {\n\n        HtmlTag group = new HtmlTag(\"div\");\n        group.setAttribute(\"class\", \"input-group\");\n        group.setAttribute(\"id\", data.getName() + \"_datepicker_widget\");\n\n        HtmlTag dateAddon = createInputAddonTag(\"date\", \"header-calendar\");\n        group.addBody(dateAddon);\n\n        SimpleDateFormat dateFmt = (SimpleDateFormat)\n                DateFormat.getDateInstance(DateFormat.SHORT, data.getLocale());\n        SimpleDateFormat timeFmt = (SimpleDateFormat)\n                DateFormat.getTimeInstance(DateFormat.SHORT, data.getLocale());\n\n        HtmlTag dateInput = new HtmlTag(\"input\");\n        dateInput.setAttribute(\"data-provide\", \"date-picker\");\n        dateInput.setAttribute(\"data-date-today-highlight\", \"true\");\n        dateInput.setAttribute(\"data-date-orientation\", \"top auto\");\n        dateInput.setAttribute(\"data-date-autoclose\", \"true\");\n        dateInput.setAttribute(\"data-date-language\", data.getLocale().toString());\n        dateInput.setAttribute(\"data-date-format\",\n                toWeirdDateFormat(dateFmt.toPattern()));\n        dateInput.setAttribute(\"type\", \"text\");\n        dateInput.setAttribute(\"class\", \"form-control\");\n        dateInput.setAttribute(\"id\", data.getName() + \"_datepicker_widget_input\");\n        dateInput.setAttribute(\"size\", \"15\");\n\n        String firstDay = getJavascriptPickerDayIndex(\n                data.getCalendar().getFirstDayOfWeek());\n        dateInput.setAttribute(\"data-date-week-start\", firstDay);\n\n        group.addBody(dateInput);\n\n        if (!data.getDisableTime()) {\n            HtmlTag timeAddon = createInputAddonTag(\"time\", \"header-clock\");\n            group.addBody(timeAddon);\n\n            HtmlTag timeInput = new HtmlTag(\"input\");\n            timeInput.setAttribute(\"type\", \"text\");\n            timeInput.setAttribute(\"class\", \"form-control\");\n            timeInput.setAttribute(\"data-time-format\",\n                                         toPhpTimeFormat(timeFmt.toPattern()));\n            timeInput.setAttribute(\"id\", data.getName() + \"_timepicker_widget_input\");\n            timeInput.setAttribute(\"size\", \"10\");\n\n            group.addBody(timeInput);\n        }\n\n        HtmlTag tzAddon = new HtmlTag(\"span\");\n        tzAddon.setAttribute(\"id\", data.getName() + \"_tz_input_addon\");\n        tzAddon.setAttribute(\"class\", \"input-group-addon text\");\n        tzAddon.addBody(\n                data.getCalendar().getTimeZone().getDisplayName(\n                        false, TimeZone.SHORT, data.getLocale()));\n\n        group.addBody(tzAddon);\n        out.append(group.render());\n\n        // compatibility with the old struts form\n        // these values are updated when the picker changes using javascript\n        out.append(createHiddenInput(\"day\").render());\n        out.append(createHiddenInput(\"month\").render());\n        out.append(createHiddenInput(\"year\").render());\n        if (!data.getDisableTime()) {\n            out.append(createHiddenInput(\"hour\").render());\n            out.append(createHiddenInput(\"minute\").render());\n            out.append(createHiddenInput(\"am_pm\").render());\n        }\n    }","commit_id":"7aa4a6885b6f9bd698b1ce03a012d0da4c4430e8","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private String renderCreationLink() {\n        if (evalAcl(getCreationAcl()) && assertNotEmpty(getCreationType()) &&\n                assertNotEmpty(getCreationUrl())) {\n\n            String create = \"toolbar.create.\" + getCreationType();\n            return renderActionLink(getCreationUrl(), create,\n                                    create, \"action-add.gif\");\n        }\n        return \"\";\n    }","id":69498,"modified_method":"private String renderCreationLink() {\n        if (evalAcl(getCreationAcl()) && assertNotEmpty(getCreationType()) &&\n                assertNotEmpty(getCreationUrl())) {\n\n            String create = \"toolbar.create.\" + getCreationType();\n            return renderActionLink(getCreationUrl(), create,\n                                    create, \"icon-plus\", null);\n        }\n        return \"\";\n    }","commit_id":"2fdaf898aa78b89f54a0b0c90916f6ea31fefe55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private String renderUploadLink() {\n        if (evalAcl(getUploadAcl()) && assertNotEmpty(getUploadType()) &&\n                assertNotEmpty(getUploadUrl())) {\n\n            String del = \"toolbar.upload.\" + getUploadType();\n            return renderActionLink(getUploadUrl(), del, del, \"action-upload.gif\");\n        }\n        return \"\";\n    }","id":69499,"modified_method":"private String renderUploadLink() {\n        if (evalAcl(getUploadAcl()) && assertNotEmpty(getUploadType()) &&\n                assertNotEmpty(getUploadUrl())) {\n\n            String del = \"toolbar.upload.\" + getUploadType();\n            return renderActionLink(getUploadUrl(), del, del, \"icon-upload\", null);\n        }\n        return \"\";\n    }","commit_id":"2fdaf898aa78b89f54a0b0c90916f6ea31fefe55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private String renderDeletionLink() {\n        if (evalAcl(getDeletionAcl()) && assertNotEmpty(getDeletionType()) &&\n                assertNotEmpty(getDeletionUrl())) {\n\n            String del = \"toolbar.delete.\" + getDeletionType();\n            return renderActionLink(getDeletionUrl(), del, del, \"action-del.gif\");\n        }\n        return \"\";\n    }","id":69500,"modified_method":"private String renderDeletionLink() {\n        if (evalAcl(getDeletionAcl()) && assertNotEmpty(getDeletionType()) &&\n                assertNotEmpty(getDeletionUrl())) {\n\n            String del = \"toolbar.delete.\" + getDeletionType();\n            return renderActionLink(getDeletionUrl(), del, del, \"icon-trash\", null);\n        }\n        return \"\";\n    }","commit_id":"2fdaf898aa78b89f54a0b0c90916f6ea31fefe55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private String renderHelpUrl() {\n        if (assertNotEmpty(getHelpUrl())) {\n\n            HtmlTag tag = new HtmlTag(\"a\");\n            tag.setAttribute(\"href\", getHelpUrl());\n            tag.setAttribute(\"target\", \"_new\");\n            tag.setAttribute(\"class\", \"help-title\");\n            HtmlTag helpImg = new HtmlTag(\"img\");\n            helpImg.setAttribute(\"src\", \"/img/rhn-icon-help.gif\");\n            helpImg.setAttribute(\"alt\",\n                                 LocalizationService.getInstance().\n                                 getMessage(\"toolbar.jsp.helpicon.alt\"));\n            tag.addBody(helpImg);\n            return tag.render();\n        }\n        return \"\";\n    }","id":69501,"modified_method":"private String renderHelpUrl() {\n        if (assertNotEmpty(getHelpUrl())) {\n\n            HtmlTag tag = new HtmlTag(\"a\");\n            tag.setAttribute(\"href\", getHelpUrl());\n            tag.setAttribute(\"target\", \"_new\");\n            tag.setAttribute(\"class\", \"help-title\");\n\n            HtmlTag i = new HtmlTag(\"i\");\n            i.setAttribute(\"class\", \"icon-question text-info\");\n\n            tag.addBody(i.renderOpenTag());\n            tag.addBody(i.renderCloseTag());\n\n            return tag.render();\n        }\n        return \"\";\n    }","commit_id":"2fdaf898aa78b89f54a0b0c90916f6ea31fefe55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * {@inheritDoc}\n     * @throws JspException\n     */\n    public int doStartTag() throws JspException {\n        JspWriter out = null;\n        try {\n            StringBuffer buf = new StringBuffer();\n            out = pageContext.getOut();\n\n            baseTag = new HtmlTag(\"div\");\n            baseTag.setAttribute(\"class\", \"toolbar-\" + getBase());\n\n            toolbarDivTag = new HtmlTag(\"div\");\n            toolbarDivTag.setAttribute(\"class\", \"toolbar\");\n            buf.append(baseTag.renderOpenTag());\n            buf.append(toolbarDivTag.renderOpenTag());\n\n            buf.append(renderCreationLink());\n            buf.append(renderCloneLink());\n            buf.append(renderUploadLink());\n            buf.append(renderDeletionLink());\n            buf.append(renderMiscLink());\n            buf.append(toolbarDivTag.renderCloseTag());\n            buf.append(renderImgUrl());\n\n            out.print(buf.toString());\n            return (EVAL_BODY_INCLUDE);\n        }\n        catch (Exception e) {\n            throw new JspException(\"Error writing to JSP file:\", e);\n        }\n    }","id":69502,"modified_method":"/**\n     * {@inheritDoc}\n     * @throws JspException\n     */\n    @Override\n    public int doStartTag() throws JspException {\n        JspWriter out = null;\n        try {\n            StringBuffer buf = new StringBuffer();\n            out = pageContext.getOut();\n\n            baseTag = new HtmlTag(\"div\");\n            baseTag.setAttribute(\"class\", \"spacewalk-toolbar-\" + getBase());\n\n            toolbarDivTag = new HtmlTag(\"div\");\n            toolbarDivTag.setAttribute(\"class\", \"spacewalk-toolbar pull-right\");\n\n            buf.append(baseTag.renderOpenTag());\n            buf.append(toolbarDivTag.renderOpenTag());\n\n            buf.append(renderCreationLink());\n            buf.append(renderCloneLink());\n            buf.append(renderUploadLink());\n            buf.append(renderDeletionLink());\n            buf.append(renderMiscLink());\n            buf.append(toolbarDivTag.renderCloseTag());\n\n\n            headerTag = new HtmlTag(getBase());\n            buf.append(headerTag.renderOpenTag());\n\n            buf.append(renderImgUrl());\n            buf.append(renderIcon());\n\n            out.print(buf.toString());\n            return (EVAL_BODY_INCLUDE);\n        }\n        catch (Exception e) {\n            throw new JspException(\"Error writing to JSP file:\", e);\n        }\n    }","commit_id":"2fdaf898aa78b89f54a0b0c90916f6ea31fefe55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * {@inheritDoc}\n     */\n    public int doEndTag() throws JspException {\n        JspWriter out = null;\n        try {\n            StringBuffer buf = new StringBuffer();\n            out = pageContext.getOut();\n\n            buf.append(renderHelpUrl());\n\n            buf.append(baseTag.renderCloseTag());\n\n            out.print(buf.toString());\n            return (EVAL_PAGE);\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n            throw new JspException(\"Error writing to JSP file:\", e);\n        }\n    }","id":69503,"modified_method":"/**\n     * {@inheritDoc}\n     */\n    @Override\n    public int doEndTag() throws JspException {\n        JspWriter out = null;\n        try {\n            StringBuffer buf = new StringBuffer();\n            out = pageContext.getOut();\n\n            buf.append(renderHelpUrl());\n\n            buf.append(headerTag.renderCloseTag());\n            buf.append(baseTag.renderCloseTag());\n\n            out.print(buf.toString());\n            return (EVAL_PAGE);\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n            throw new JspException(\"Error writing to JSP file:\", e);\n        }\n    }","commit_id":"2fdaf898aa78b89f54a0b0c90916f6ea31fefe55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private String renderActionLink(String url, String text,\n                                    String alt, String imgName) {\n        if (url == null) {\n            return \"\";\n        }\n\n        alt = LocalizationService.getInstance().getMessage(alt);\n        text = LocalizationService.getInstance().getMessage(text);\n\n        HtmlTag span = new HtmlTag(\"span\");\n        HtmlTag a = new HtmlTag(\"a\");\n        HtmlTag imgTag = new HtmlTag(\"img\");\n\n        span.setAttribute(\"class\", \"toolbar\");\n        a.setAttribute(\"href\", url);\n        imgTag.setAttribute(\"src\", \"/img/\" + imgName);\n        imgTag.setAttribute(\"alt\", alt);\n        imgTag.setAttribute(\"title\", alt);\n\n        span.addBody(a);\n        a.addBody(imgTag);\n        a.addBody(text);\n\n        return span.render();\n    }","id":69504,"modified_method":"private String renderActionLink(String url, String text,\n                                    String alt, String iconName, String imgName) {\n        if (url == null) {\n            return \"\";\n        }\n\n        alt = LocalizationService.getInstance().getMessage(alt);\n        text = LocalizationService.getInstance().getMessage(text);\n\n        HtmlTag a = new HtmlTag(\"a\");\n        a.setAttribute(\"href\", url);\n\n        if(assertNotEmpty(imgName)) {\n          HtmlTag imgTag = new HtmlTag(\"img\");\n          imgTag.setAttribute(\"src\", \"/img/\" + imgName);\n          imgTag.setAttribute(\"alt\", alt);\n          imgTag.setAttribute(\"title\", alt);\n          a.addBody(imgTag);\n        }\n\n        if(assertNotEmpty(iconName)) {\n            HtmlTag i = new HtmlTag(\"i\");\n            i.setAttribute(\"class\", iconName);\n            a.addBody(i.renderOpenTag());\n            a.addBody(i.renderCloseTag());\n        }\n\n        a.addBody(text);\n\n        return a.render();\n    }","commit_id":"2fdaf898aa78b89f54a0b0c90916f6ea31fefe55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private String renderCloneLink() {\n        if (evalAcl(getCloneAcl()) && assertNotEmpty(getCloneType()) &&\n                assertNotEmpty(getCloneUrl())) {\n\n            String clone = \"toolbar.clone.\" + getCloneType();\n            return renderActionLink(getCloneUrl(), clone,\n                                    clone, \"action-clone.gif\");\n        }\n        return \"\";\n    }","id":69505,"modified_method":"private String renderCloneLink() {\n        if (evalAcl(getCloneAcl()) && assertNotEmpty(getCloneType()) &&\n                assertNotEmpty(getCloneUrl())) {\n\n            String clone = \"toolbar.clone.\" + getCloneType();\n            return renderActionLink(getCloneUrl(), clone,\n                                    clone, \"icon-copy\", null);\n        }\n        return \"\";\n    }","commit_id":"2fdaf898aa78b89f54a0b0c90916f6ea31fefe55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private String renderMiscLink() {\n        if (evalAcl(getMiscAcl()) &&\n                assertNotEmpty(getMiscUrl()) &&\n                assertNotEmpty(getMiscText()) &&\n                assertNotEmpty(getMiscImg())) {\n            return renderActionLink(getMiscUrl(), getMiscText(),\n                                    getMiscAlt(), getMiscImg());\n        }\n        return \"\";\n    }","id":69506,"modified_method":"private String renderMiscLink() {\n        if (evalAcl(getMiscAcl()) &&\n                assertNotEmpty(getMiscUrl()) &&\n                assertNotEmpty(getMiscText()) &&\n                assertNotEmpty(getMiscImg())) {\n            return renderActionLink(getMiscUrl(), getMiscText(),\n                                    getMiscAlt(), getMiscIcon(), getMiscImg());\n        }\n        return \"\";\n    }","commit_id":"2fdaf898aa78b89f54a0b0c90916f6ea31fefe55","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"public boolean shouldUseBindVariableForAttribute(EOAttribute arg0) {\n        return !disableBindVariables();\n    }","id":69507,"modified_method":"public boolean shouldUseBindVariableForAttribute(EOAttribute arg0) {\n        return (!disableBindVariables()) || \n        arg0.className().equals(\"com.webobjects.foundation.NSData\") ||\n        arg0.externalType().equals(\"bytea\") ||\n        arg0.externalType().equals(\"bit\")\n        ;\n    }","commit_id":"59f4afbe85dac4a90e09f7c6e70717628afd8bae","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overrides the parent implementation to:\n     * <ul>\n     * <li>add typecasts after the value, i.e. '2'::char,\n     * which is required with certain PostgreSQL versions (<=7.4.x) for the correct query processing, \n     * particularly with index usage. \n     * <\/ul>\n     * NULL values are excluded from casting. <br/>\n     * You can set the System default <code>com.webobjects.jdbcadaptor.PostgresqlExpression.disableTypeCasting<\/code>\n     * to true to disable both fixes (the former you might want to disable when PG says it can't cast a certain value and\n     * the second when you have values with a greater resolution already in the DB).\n     * @param v the value\n     * @param kp    the keypath associated with the value\n     */\n    public String sqlStringForValue(Object v, String kp) {\n        if(disableTypeCasting()) {\n            return super.sqlStringForValue(v,kp);\n        }\n        EOAttribute attribute;\n        int lastDotIdx = kp.lastIndexOf(\".\");\n        if (lastDotIdx == -1) {\n            attribute = entity().attributeNamed(kp);\n        } else {\n            EOEntity kpEntity = entityForKeyPath(kp);\n            attribute = kpEntity.attributeNamed(kp.substring(lastDotIdx+1));\n        }\n        if(attribute != null && v != null && v != NSKeyValueCoding.NullValue) {\n            String s = columnTypeStringForAttribute(attribute);\n            String c = \"\";\n            if (attribute.className().equals(\"String\") || attribute.className().equals(\"java.lang.String\")) {\n                c = \"'\";\n            }\n            return new StringBuffer(c).append(super.sqlStringForValue(v,kp)).append(c).append(\"::\").append(s).toString();\n        } \n        \n        return super.sqlStringForValue(v,kp);\n    }","id":69508,"modified_method":"/**\n     * Overrides the parent implementation to:\n     * <ul>\n     * <li>add typecasts after the value, i.e. '2'::char,\n     * which is required with certain PostgreSQL versions (<=7.4.x) for the correct query processing, \n     * particularly with index usage. \n     * <\/ul>\n     * NULL values are excluded from casting. <br/>\n     * You can set the System default <code>com.webobjects.jdbcadaptor.PostgresqlExpression.disableTypeCasting<\/code>\n     * to true to disable both fixes (the former you might want to disable when PG says it can't cast a certain value and\n     * the second when you have values with a greater resolution already in the DB).\n     * @param v the value\n     * @param kp    the keypath associated with the value\n     */\n    public String sqlStringForValue(Object v, String kp) {\n        if(disableTypeCasting()) {\n            return super.sqlStringForValue(v,kp);\n        }\n        EOAttribute attribute;\n        int lastDotIdx = kp.lastIndexOf(\".\");\n        if (lastDotIdx == -1) {\n            attribute = entity().attributeNamed(kp);\n        } else {\n            EOEntity kpEntity = entityForKeyPath(kp);\n            attribute = kpEntity.attributeNamed(kp.substring(lastDotIdx+1));\n        }\n        if(attribute != null && v != null && v != NSKeyValueCoding.NullValue) {\n            String s = columnTypeStringForAttribute(attribute);\n            if (!shouldUseBindVariableForAttribute(attribute)) {\n                String c = \"\";\n                if (attribute.className().endsWith(\"String\") || \n                        attribute.externalType().indexOf(\"char\") > -1\n                        ) {\n                    c = \"'\";\n                }\n                return c + super.sqlStringForValue(v,kp) + c + \"::\" + s;\n            } else {\n                return super.sqlStringForValue(v, kp) + \"::\" + s;\n            }\n        } \n        \n        return super.sqlStringForValue(v,kp);\n    }","commit_id":"59f4afbe85dac4a90e09f7c6e70717628afd8bae","url":"https://github.com/wocommunity/wonder"},{"original_method":"public boolean mustUseBindVariableForAttribute(EOAttribute arg0) {\n        return !disableBindVariables();\n    }","id":69509,"modified_method":"public boolean mustUseBindVariableForAttribute(EOAttribute arg0) {\n        return (!disableBindVariables()) || \n        arg0.className().equals(\"com.webobjects.foundation.NSData\") ||\n        arg0.externalType().equals(\"bytea\") ||\n        arg0.externalType().equals(\"bit\")\n        ;\n    }","commit_id":"59f4afbe85dac4a90e09f7c6e70717628afd8bae","url":"https://github.com/wocommunity/wonder"},{"original_method":"public String sqlStringForValue(Object v, String kp) {\n        String result = super.sqlStringForValue(v,kp);\n        if(v != null && v != NSKeyValueCoding.NullValue) {\n            EOAttribute attribute;\n            int lastDotIdx = kp.lastIndexOf(\".\");\n            if (lastDotIdx == -1) {\n                attribute = entity().attributeNamed(kp);\n            } else {\n                EOEntity kpEntity = entityForKeyPath(kp);\n                attribute = kpEntity.attributeNamed(kp.substring(lastDotIdx+1));\n            }\n            if(attribute != null) {\n                String s = columnTypeStringForAttribute(attribute);\n                //handel millis seconds, too.\n                if (v instanceof NSTimestamp) {\n                    NSTimestamp t = (NSTimestamp)v;\n                    String timestampString = \"'\"+timestampFormatter.format(t) + \"'\";\n                    result = timestampString;\n                }\n                result = result + \"::\" + s;\n            }\n        }\n        return result;\n    }","id":69510,"modified_method":"/**\n     * Overrides the parent implementation to add typecasts after the value, i.e. '2'::char,\n     * which is required with certain PostgreSQL versions (<=7.4.x) for the correct query processing, \n     * particularly with index usage.\n     * Also contains a bugfix to handle milli seconds in timestamps\n     * NULL values are excluded from casting.\n     * \n     * @param v the value\n     * @param kp    the keypath associated with the value\n     */\n    public String sqlStringForValue(Object v, String kp) {\n        EOAttribute attribute;\n        int lastDotIdx = kp.lastIndexOf(\".\");\n        if (lastDotIdx == -1) {\n            attribute = entity().attributeNamed(kp);\n        }\n        else {\n            EOEntity kpEntity = entityForKeyPath(kp);\n            attribute = kpEntity.attributeNamed(kp.substring(lastDotIdx+1));\n        }\n        if(attribute != null && v != null && v != NSKeyValueCoding.NullValue ) {\n            String s = columnTypeStringForAttribute(attribute);\n            if( v instanceof NSTimestamp ) {\n                return \"'\"+_TIMESTAMP_FORMATTER.format((NSTimestamp)v) + \"'::\"+ s;\n            }\n            return super.sqlStringForValue(v,kp) + \"::\" + s;\n        } \n        \n        return super.sqlStringForValue(v,kp);\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/** \n     * Overridden to support milliseconds to work with Postgres\n     */\n    public boolean mustUseBindVariableForAttribute(EOAttribute eoattribute) {\n        if (\"T\".equals(eoattribute.valueType())) {\n            return false;\n        } else {\n            return true;\n        }\n    }","id":69511,"modified_method":"/** \n     * Overridden to support milliseconds to work with Postgres\n     *\n     * @param eoattribute   the attribute\n     */\n    public boolean mustUseBindVariableForAttribute(EOAttribute eoattribute) {\n        if (\"T\".equals(eoattribute.valueType())) {\n            return false;\n        } else {\n            return true;\n        }\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overriden to construct a valid SQL92 JOIN clause as opposed to\n     * the Oracle-like SQL the superclass produces.\n     */\n    public String assembleJoinClause(String leftName, String rightName, int semantic) {\n        if(enableJoinHandling) {\n            return createJoinClause(leftName, rightName, semantic).toString();\n        }\n        return super.assembleJoinClause(leftName, rightName, semantic);\n    }","id":69512,"modified_method":"/**\n     * Overriden to contruct a valid SQL92 JOIN clause as opposed to\n     * the Oracle-like SQL the superclass produces.\n     *\n     * @param leftName  the table name on the left side of the clause\n     * @param rightName the table name on the right side of the clause\n     * @param semantic  the join semantic\n     * @return  the join clause\n     */\n    public String assembleJoinClause(String leftName,\n                                     String rightName,\n                                     int semantic) {\n        \n        if (disableOuterJoins == true) {\n            return super.assembleJoinClause(leftName, rightName, semantic);\n        }\n        \n        StringBuffer sb = new StringBuffer();\n        String leftAlias = leftName.substring(0, leftName.indexOf(\".\"));\n        String rightAlias = rightName.substring(0, rightName.indexOf(\".\"));\n        \n        String leftCol = leftName.substring(leftName.indexOf(\".\") + 1);\n        String rightCol = rightName.substring(rightName.indexOf(\".\") + 1);\n        \n        NSArray k;\n        EOEntity rightEntity;\n        EOEntity leftEntity;\n        String relationshipKey = null;\n        EORelationship r;\n        \n        \n        if (leftAlias.equals(\"t0\")) {\n            leftEntity = entity();\n        } else {\n            k = aliasesByRelationshipPath().allKeysForObject(leftAlias);\n            relationshipKey = k.count()>0? (String)k.lastObject() : \"\";\n            leftEntity = entityForKeyPath(relationshipKey);\n        }\n        \n        if (rightAlias.equals(\"t0\")) {\n            rightEntity = entity();\n        } else {\n            k = aliasesByRelationshipPath().allKeysForObject(rightAlias);\n            relationshipKey = k.count()>0? (String)k.lastObject() : \"\";\n            rightEntity = entityForKeyPath(relationshipKey);\n        }\n        int dotIndex = relationshipKey.indexOf( \".\" );\n        relationshipKey = dotIndex == -1\n            ? relationshipKey\n            : relationshipKey.substring( relationshipKey.lastIndexOf( \".\" ) + 1 );\n        r = rightEntity.anyRelationshipNamed( relationshipKey );\n        if( r == null ) \n            r = leftEntity.anyRelationshipNamed( relationshipKey );\n        String rightTable = rightEntity.externalName();\n        String leftTable = leftEntity.externalName();\n        \n        JoinClause jc = new JoinClause();\n        \n        jc.table1 = leftTable + \" \" + leftAlias;\n        \n        switch (semantic) {\n            case EORelationship.LeftOuterJoin:\n                jc.op = \" LEFT OUTER JOIN \";\n                break;\n            case EORelationship.RightOuterJoin:\n                jc.op = \" RIGHT OUTER JOIN \";\n                break;\n            case EORelationship.FullOuterJoin:\n                jc.op = \" FULL OUTER JOIN \";\n                break;\n            case EORelationship.InnerJoin:\n                jc.op = \" INNER JOIN \";\n                break;\n        }\n        \n        jc.table2 = rightTable + \" \" + rightAlias;\n        NSArray destCols = (NSArray) r.destinationAttributes().valueForKey( \"columnName\" );\n        NSArray sourceCols = (NSArray) r.sourceAttributes().valueForKey( \"columnName\" );\n        if( destCols.equals( sourceCols ) ) {\n            jc.joinCondition = \" USING (\" + destCols.componentsJoinedByString( \", \" ) + \")\";\n        } else {\n            NSArray joins = r.joins();\n            int joinsCount = joins.count();\n            NSMutableArray joinStrings = new NSMutableArray( joinsCount );\n            for( int i = 0; i < joinsCount; i++ ) {\n                EOJoin currentJoin = (EOJoin)joins.objectAtIndex(i);\n                joinStrings.addObject\n                    ( leftAlias +\".\"+ currentJoin.sourceAttribute().columnName() + \" = \" + \n                      rightAlias +\".\"+ currentJoin.destinationAttribute().columnName() );\n            }\n            jc.joinCondition = \" ON \" + joinStrings.componentsJoinedByString( \" AND \" );\n        }\n        if( !_alreadyJoined.containsObject( jc ) ) {\n            _alreadyJoined.insertObjectAtIndex(jc, 0);\n            return jc.toString();\n        }\n        return null;\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overrides the parent implementation to add an <code>INITIALLY DEFERRED<\/code> to the generated statement.\n     * Useful you want to generate the schema-building SQL from a pure java environment.\n     */\n    public void prepareConstraintStatementForRelationship( EORelationship relationship, NSArray sourceColumns, NSArray destinationColumns ) {\n        super.prepareConstraintStatementForRelationship( relationship, sourceColumns, destinationColumns );\n        setStatement( statement() + _DEFERRABLE_MODIFIER );\n    }","id":69513,"modified_method":"/**\n     * Overrides the parent implementation to add an <code>INITIALLY DEFERRED<\/code> to the generated statement.\n     * Useful you want to generate the schema-building SQL from a pure java environment.\n     * \n     * @param relationship  the relationship\n     * @param sourceColumns the source columns for the constraints\n     * @param destinationColumns    the destination columns for the constraints\n     */\n    public void prepareConstraintStatementForRelationship( EORelationship relationship, NSArray sourceColumns, NSArray destinationColumns ) {\n        super.prepareConstraintStatementForRelationship( relationship, sourceColumns, destinationColumns );\n        setStatement( statement() + \" INITIALLY DEFERRED\" );\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overridden because the original version throws when the\n     * data contains negative byte values.\n     */\n    public String sqlStringForData(NSData data) {\n        int length = data.length();\n        byte bytes[] = data.bytes();\n        char hex[] = new char[2 * length];\n        int nibbles = 0;\n        for(int i = 0; i < length; i++)  {\n            byte b = bytes[i];\n            hex[nibbles++] = _HEX_VALUES[((b >> 4) + 16) % 16];\n            hex[nibbles++] = _HEX_VALUES[((b & 15) + 16) % 16];\n        }\n        return \"decode('\" + new String(hex) + \"','hex')\";\n    }","id":69514,"modified_method":"/**\n     * Overridden because the original version throws an exception when the\n     * data contains negative byte values.\n     *\n     * @param data  the data to be converted to a SQL string\n     * @return  the SQL string for raw data\n     */\n    public String sqlStringForData(NSData data) {\n        int length = data.length();\n        byte bytes[] = data.bytes();\n        char hex[] = new char[2 * length];\n        int nibbles = 0;\n        for(int i = 0; i < length; i++)  {\n            byte b = bytes[i];\n            hex[nibbles++] = _HEX_VALUES[((b >> 4) + 16) % 16];\n            hex[nibbles++] = _HEX_VALUES[((b & 15) + 16) % 16];\n        }\n        return \"decode('\" + new String(hex) + \"','hex')\";\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overriden so we can put a regex-match qualifier in the display groups\n     * query bindings. You can bind '~*' to queryOperator.someKey and '.*foo' to\n     * queryMatch.someKey and will get the correct results.\n     */\n    public String sqlStringForSelector(NSSelector selector, Object value) {\n        if(selector.name().equals(\"~*\")) {\n            return selector.name();\n        }\n        return super.sqlStringForSelector(selector, value);\n    }","id":69515,"modified_method":"/**\n     * Overriden so we can put a regex-match qualifier in the display groups\n     * query bindings. You can bind '~*' or '~' to queryOperator.someKey and '.*foo' to\n     * queryMatch.someKey and will get the correct results.\n     *\n     * @param selector  the selector that specifies the SQL operator\n     * @param value the value to be associated with <code>selector<\/code>\n     * @return  the SQL operator string\n     */\n    public String sqlStringForSelector(NSSelector selector, Object value){\n        if(CaseInsensitiveRegexOperator.equals( selector ) || RegexOperator.equals( selector ) ) {\n            return selector.name();\n        }\n        return super.sqlStringForSelector(selector, value);\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overridden so we can get the fetch limit from the fetchSpec.\n     */\n    public void prepareSelectExpressionWithAttributes(NSArray nsarray, boolean flag, EOFetchSpecification eofetchspecification) {\n        if(!eofetchspecification.promptsAfterFetchLimit()) {\n            _fetchLimit = eofetchspecification.fetchLimit();\n        }\n        super.prepareSelectExpressionWithAttributes(nsarray, flag, eofetchspecification);\n    }","id":69516,"modified_method":"/**\n     * Overridden so we can get the fetch limit from the fetchSpec.\n     *\n     * @param nsarray   the array of attributes\n     * @param flag  locking flag\n     * @param eofetchspecification  the fetch specification\n     */\n    public void prepareSelectExpressionWithAttributes(NSArray nsarray, boolean flag, EOFetchSpecification eofetchspecification) {\n        if(!eofetchspecification.promptsAfterFetchLimit()) {\n            _fetchLimit = eofetchspecification.fetchLimit();\n        }\n        super.prepareSelectExpressionWithAttributes(nsarray, flag, eofetchspecification);\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overridden to compose the final string expression for the join clause\n     * from the array we constructed previously.\n     */\n    public String joinClauseString() {\n        if(enableJoinHandling) {\n            NSMutableDictionary seenIt = new NSMutableDictionary();\n            StringBuffer sb = new StringBuffer();\n\n            for (int i = 0; i < _alreadyJoined.count(); i++) {\n                JoinClause jc = (JoinClause)_alreadyJoined.objectAtIndex(i);\n                boolean seenTable1 = seenIt.objectForKey(jc.table1) != null;\n                boolean seenTable2 = seenIt.objectForKey(jc.table2) != null;\n\n                if (!seenTable1 && !seenTable2) {\n                    sb.append(jc.table1);\n                    sb.append(jc.op);\n                    sb.append(jc.table2);\n                } else if (!seenTable2) {\n                    sb.append(jc.op);\n                    sb.append(jc.table1);\n                } else {\n                    sb.append(jc.op);\n                    sb.append(jc.table2);\n                }\n                sb.append(jc.joinCondition);\n                sb.append(\" \");\n\n                seenIt.setObjectForKey(jc.table1, jc.table1);\n                seenIt.setObjectForKey(jc.table2, jc.table2);\n            }\n            return sb.toString();\n        } else {\n            return super.joinClauseString();\n        }\n    }","id":69517,"modified_method":"/**\n     * Overrides the parent implementation to compose the final string\n     * expression for the join clauses.\n     */\n    public String joinClauseString() {\n        if (disableOuterJoins)\n            return super.joinClauseString();\n        \n        \n        NSMutableDictionary seenIt = new NSMutableDictionary();\n        StringBuffer sb = new StringBuffer();\n        JoinClause jc;\n        EOSortOrdering.sortArrayUsingKeyOrderArray\n            ( _alreadyJoined, new NSArray( EOSortOrdering.sortOrderingWithKey( \"sortKey\", EOSortOrdering.CompareCaseInsensitiveAscending ) ) );\n        if (_alreadyJoined.count() > 0) {\n            jc = (JoinClause)_alreadyJoined.objectAtIndex(0);\n            \n            sb.append(jc);\n            seenIt.setObjectForKey(Boolean.TRUE, jc.table1);\n            seenIt.setObjectForKey(Boolean.TRUE, jc.table2);\n        }\n        \n        for (int i = 1; i < _alreadyJoined.count(); i++) {\n            jc = (JoinClause)_alreadyJoined.objectAtIndex(i);\n            \n            sb.append(jc.op);\n            if (seenIt.objectForKey(jc.table1) == null) {\n                sb.append(jc.table1);\n                seenIt.setObjectForKey(Boolean.TRUE, jc.table1);\n            }\n            else if (seenIt.objectForKey(jc.table2) == null) {\n                sb.append(jc.table2);\n                seenIt.setObjectForKey(Boolean.TRUE, jc.table2);\n            }\n            sb.append(jc.joinCondition);\n        }\n        return sb.toString();\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overriden to not call the super implementation.\n     */\n    public void addJoinClause(String leftName,\n                              String rightName,\n                              int semantic) {\n        if(enableJoinHandling) {\n            JoinClause clause = createJoinClause(leftName, rightName, semantic);\n            _alreadyJoined.insertObjectAtIndex(clause, 0);\n        } else {\n            super.addJoinClause(leftName, rightName, semantic);\n        }\n    }","id":69518,"modified_method":"/**\n     * Overriden to not call the super implementation.\n     * \n     * @param leftName  the table name on the left side of the clause\n     * @param rightName the table name on the right side of the clause\n     * @param semantic  the join semantic\n     */\n    public void addJoinClause(String leftName,\n                              String rightName,\n                              int semantic) {\n        if (disableOuterJoins)\n            super.addJoinClause(leftName, rightName, semantic);\n        else\n            assembleJoinClause(leftName, rightName, semantic);\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overridden to support milliseconds to work with Postgres\n     */\n    public boolean shouldUseBindVariableForAttribute(EOAttribute eoattribute) {\n        if (\"T\".equals(eoattribute.valueType())) {\n            return false;\n        } else {\n            return true;\n        }\n    }","id":69519,"modified_method":"/**\n     * Overridden to support milliseconds to work with Postgres\n     *\n     * @param eoattribute   the attribute\n     * @return  yes/no\n     */\n    public boolean shouldUseBindVariableForAttribute(EOAttribute eoattribute) {\n        if (\"T\".equals(eoattribute.valueType())) {\n            return false;\n        } else {\n            return true;\n        }\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Utility that traverses a key path to find the last destination entity\n     */\n    private EOEntity entityForKeyPath(String keyPath) {\n        NSArray keys = NSArray.componentsSeparatedByString(keyPath, \".\");\n        EOEntity ent = entity();\n        for (int i = 0; i < keys.count(); i++) {\n            String k = (String)keys.objectAtIndex(i);\n            EORelationship rel = ent.anyRelationshipNamed(k);\n            if (rel == null) {\n                // it may be an attribute\n                if (ent.anyAttributeNamed(k) != null) {\n                    break;\n                } \n                throw new IllegalArgumentException(\"relationship \" + keyPath + \" generated null\");\n            }\n            ent = rel.destinationEntity();\n        }\n        return ent;\n    }","id":69520,"modified_method":"/**\n     * Utility that traverses a key path to find the last destination entity\n     *\n     * @param keyPath   the key path\n     * @return  the entity at the end of the keypath\n     */\n    private EOEntity entityForKeyPath(String keyPath) {\n        NSArray keys = NSArray.componentsSeparatedByString(keyPath, \".\");\n        EOEntity ent = entity();\n        \n        for (int i = 0; i < keys.count(); i++) {\n            String k = (String)keys.objectAtIndex(i);\n            EORelationship rel = ent.anyRelationshipNamed(k);\n            if (rel == null) {\n                // it may be an attribute \n                if (ent.anyAttributeNamed(k) != null) {\n                    break;\n                }\n                throw new IllegalArgumentException(\"relationship \" + keyPath + \" generated null\");\n            }\n            ent = rel.destinationEntity();\n        }\n        return ent;\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overridden because the original version throws when the\n     * data contains negative byte values.\n     */\n    public String formatValueForAttribute(Object obj, EOAttribute eoattribute) {\n        String value;\n        if(obj instanceof NSData) {\n            value = sqlStringForData((NSData)obj);\n        } else {\n            value = super.formatValueForAttribute(obj, eoattribute);\n        }\n        return value;\n    }","id":69521,"modified_method":"/**\n     * Overridden because the original version throws when the\n     * data contains negative byte values.\n     *\n     * @param obj   the object used in the SQL statement\n     * @param eoattribute   the attribute associated with <code>obj<\/code>\n     * @return  the formatted string\n     */\n    public String formatValueForAttribute(Object obj, EOAttribute eoattribute) {\n        String value;\n        if(obj instanceof NSData) {\n            value = sqlStringForData((NSData)obj);\n        } else {\n            value = super.formatValueForAttribute(obj, eoattribute);\n        }\n        return value;\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overridden to remove the rtrim usage. The original implementation\n     * will remove every trailing space from character based column which \n     * should not be OK for Postgres\n     */\n    public PostgresqlExpression(EOEntity entity) {\n        super(entity);\n        super._rtrimFunctionName = null;\n    }","id":69522,"modified_method":"/**\n     * Overridden to remove the rtrim usage. The original implementation\n     * will remove every trailing space from character based column which \n     * should not be OK for Postgres.\n     */\n    public PostgresqlExpression(EOEntity entity) {\n        super(entity);\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overriden to handle correct placements of join conditions.\n     */\n    public String assembleSelectStatementWithAttributes(NSArray attributes,\n                                                        boolean lock,\n                                                        com.webobjects.eocontrol.EOQualifier qualifier,\n                                                        NSArray fetchOrder,\n                                                        String selectString,\n                                                        String columnList,\n                                                        String tableList,\n                                                        String whereClause,\n                                                        String joinClause,\n                                                        String orderByClause,\n                                                        String lockClause) {\n        StringBuffer sb = new StringBuffer();\n        if(enableJoinHandling) {\n            sb.append(\"SELECT \");\n            sb.append(columnList);\n            sb.append(\" FROM \");\n\n            if (_alreadyJoined.count() > 0) {\n                sb.append(\" \");\n                sb.append(joinClauseString());\n            } else {\n                sb.append(tableList);\n            }\n            if (whereClause != null && whereClause.length() > 0) {\n                sb.append(\" WHERE \");\n                sb.append(whereClause);\n            }\n            if (orderByClause != null && orderByClause.length() > 0) {\n                sb.append(\" ORDER BY \");\n                sb.append(orderByClause);\n            }\n            if (_fetchLimit != 0) {\n                sb.append(\" LIMIT \");\n                sb.append(_fetchLimit);\n            }\n            if (lockClause != null && lockClause.length() > 0) {\n                sb.append(\" \");\n                sb.append(lockClause);\n            }\n        } else {\n            sb.append(super.assembleSelectStatementWithAttributes(attributes, lock, qualifier, fetchOrder, selectString, columnList, tableList, whereClause, joinClause, orderByClause, lockClause));\n            if (_fetchLimit != 0) {\n                sb.append(\" LIMIT \");\n                sb.append(_fetchLimit);\n            }\n        }\n        \n        return sb.toString();\n    }","id":69523,"modified_method":"/**\n     * Overriden to handle correct placements of join conditions.\n     *\n     * @param attributes    the attributes to select\n     * @param lock  flag for locking rows in the database\n     * @param qualifier the qualifier to restrict the selection\n     * @param fetchOrder    specifies the fetch order\n     * @param columnList    the SQL columns to be fetched\n     * @param tableList the the SQL tables to be fetched\n     * @param whereClause   the SQL where clause\n     * @param joinClause    the SQL join clause\n     * @param orderByClause the SQL sort order clause\n     * @param lockClause    the SQL lock clause\n     * @return  the select statement\n     */\n    public String assembleSelectStatementWithAttributes(NSArray attributes,\n                                                        boolean lock,\n                                                        EOQualifier qualifier,\n                                                        NSArray fetchOrder,\n                                                        String selectString,\n                                                        String columnList,\n                                                        String tableList,\n                                                        String whereClause,\n                                                        String joinClause,\n                                                        String orderByClause,\n                                                        String lockClause) {\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"SELECT \");\n        sb.append(columnList);\n        sb.append(\" FROM \");\n        \n        if (disableOuterJoins) \n            sb.append(tableList);\n        else {\n            if (_alreadyJoined.count() > 0) {\n                sb.append(joinClauseString());\n            } else {\n                sb.append(tableList);\n            }\n        }\n        if ((whereClause != null && whereClause.length() > 0) ||\n            (disableOuterJoins && (joinClause != null && joinClause.length() > 0))) {\n            sb.append(\" WHERE \");\n            if (joinClause != null && joinClause.length() > 0) {\n                sb.append(joinClause);\n                if (whereClause != null && whereClause.length() > 0)\n                    sb.append(\" AND \");\n            }\n            \n            if (whereClause != null && whereClause.length() > 0) {\n                sb.append(whereClause);\n            }\n        }\n        if (orderByClause != null && orderByClause.length() > 0) {\n            sb.append(\" ORDER BY \");\n            sb.append(orderByClause);\n        }\n        if (lockClause != null && lockClause.length() > 0) {\n            sb.append(\" \");\n            sb.append(lockClause);\n        }\n        if (_fetchLimit != 0) {\n            sb.append(\" LIMIT \");\n            sb.append(_fetchLimit);\n        }        \n        return sb.toString();\n    }","commit_id":"618a49983898cd867331222148d9a2dbba4b255a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overrides the parent implementation to:\n     * <ul>\n     * <li>add typecasts after the value, i.e. '2'::char,\n     * which is required with certain PostgreSQL versions (<=7.4.x) for the correct query processing, \n     * particularly with index usage. \n     * <\/ul>\n     * NULL values are excluded from casting. <br/>\n     * You can set the System default <code>com.webobjects.jdbcadaptor.PostgresqlExpression.disableTypeCasting<\/code>\n     * to true to disable both fixes (the former you might want to disable when PG says it can't cast a certain value and\n     * the second when you have values with a greater resolution already in the DB).\n     * @param v the value\n     * @param kp    the keypath associated with the value\n     */\n    public String sqlStringForValue(Object v, String kp) {\n        if(_disableTypeCasting) {\n            return super.sqlStringForValue(v,kp);\n        }\n        EOAttribute attribute;\n        int lastDotIdx = kp.lastIndexOf(\".\");\n        if (lastDotIdx == -1) {\n            attribute = entity().attributeNamed(kp);\n        } else {\n            EOEntity kpEntity = entityForKeyPath(kp);\n            attribute = kpEntity.attributeNamed(kp.substring(lastDotIdx+1));\n        }\n        if(attribute != null && v != null && v != NSKeyValueCoding.NullValue) {\n            String s = columnTypeStringForAttribute(attribute);\n            return super.sqlStringForValue(v,kp) + \"::\" + s;\n        } \n        \n        return super.sqlStringForValue(v,kp);\n    }","id":69524,"modified_method":"/**\n     * Overrides the parent implementation to:\n     * <ul>\n     * <li>add typecasts after the value, i.e. '2'::char,\n     * which is required with certain PostgreSQL versions (<=7.4.x) for the correct query processing, \n     * particularly with index usage. \n     * <\/ul>\n     * NULL values are excluded from casting. <br/>\n     * You can set the System default <code>com.webobjects.jdbcadaptor.PostgresqlExpression.disableTypeCasting<\/code>\n     * to true to disable both fixes (the former you might want to disable when PG says it can't cast a certain value and\n     * the second when you have values with a greater resolution already in the DB).\n     * @param v the value\n     * @param kp    the keypath associated with the value\n     */\n    public String sqlStringForValue(Object v, String kp) {\n        if(disableTypeCasting()) {\n            return super.sqlStringForValue(v,kp);\n        }\n        EOAttribute attribute;\n        int lastDotIdx = kp.lastIndexOf(\".\");\n        if (lastDotIdx == -1) {\n            attribute = entity().attributeNamed(kp);\n        } else {\n            EOEntity kpEntity = entityForKeyPath(kp);\n            attribute = kpEntity.attributeNamed(kp.substring(lastDotIdx+1));\n        }\n        if(attribute != null && v != null && v != NSKeyValueCoding.NullValue) {\n            String s = columnTypeStringForAttribute(attribute);\n            String c = \"\";\n            if (attribute.className().equals(\"String\") || attribute.className().equals(\"java.lang.String\")) {\n                c = \"'\";\n            }\n            return new StringBuffer(c).append(super.sqlStringForValue(v,kp)).append(\"'::\").append(s).toString();\n        } \n        \n        return super.sqlStringForValue(v,kp);\n    }","commit_id":"1d1d76d888237e3852b3a6f28e2b6eb86e62728a","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overriden to not call the super implementation.\n     */\n    public void addJoinClause(String leftName,\n                              String rightName,\n                              int semantic) {\n        JoinClause clause = createJoinClause(leftName, rightName, semantic);\n        _alreadyJoined.insertObjectAtIndex(clause, 0);\n    }","id":69525,"modified_method":"/**\n     * Overriden to not call the super implementation.\n     */\n    public void addJoinClause(String leftName,\n                              String rightName,\n                              int semantic) {\n        if(enableJoinHandling) {\n            JoinClause clause = createJoinClause(leftName, rightName, semantic);\n            _alreadyJoined.insertObjectAtIndex(clause, 0);\n        } else {\n            super.addJoinClause(leftName, rightName, semantic);\n        }\n    }","commit_id":"f949922b510040ed46c3689b1dd645612f9e5d18","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overridden to add typecasts after the value. I.e. '2'::char. This is\n     * done because Postgres can be very strict regarding type conversions.\n     */\n    public String sqlStringForValue(Object v, String kp) {\n        EOAttribute attribute;\n        int lastDotIdx = kp.lastIndexOf(\".\");\n        if (lastDotIdx == -1) {\n            attribute = entity().attributeNamed(kp);\n        } else {\n            EOEntity kpEntity = entityForKeyPath(kp);\n            attribute = kpEntity.attributeNamed(kp.substring(lastDotIdx+1));\n        }\n        if(attribute != null) {\n            return super.sqlStringForValue(v,kp) + \"::\" + columnTypeStringForAttribute(attribute);\n        }\n        return super.sqlStringForValue(v,kp);\n    }","id":69526,"modified_method":"/**\n     * Overridden to add typecasts after the value. I.e. '2'::char. This is\n     * done because Postgres can be very strict regarding type conversions.\n     * NULL values are excluded from casting.\n     */\n    public String sqlStringForValue(Object v, String kp) {\n        String result = super.sqlStringForValue(v,kp);\n        if(v != null && v != NSKeyValueCoding.NullValue) {\n            EOAttribute attribute;\n            int lastDotIdx = kp.lastIndexOf(\".\");\n            if (lastDotIdx == -1) {\n                attribute = entity().attributeNamed(kp);\n            } else {\n                EOEntity kpEntity = entityForKeyPath(kp);\n                attribute = kpEntity.attributeNamed(kp.substring(lastDotIdx+1));\n            }\n            if(attribute != null) {\n                result = result + \"::\" + columnTypeStringForAttribute(attribute);\n            }\n        }\n        return result;\n    }","commit_id":"f949922b510040ed46c3689b1dd645612f9e5d18","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overriden to construct a valid SQL92 JOIN clause as opposed to\n     * the Oracle-like SQL the superclass produces.\n     */\n    public String assembleJoinClause(String leftName, String rightName, int semantic) {\n        return createJoinClause(leftName, rightName, semantic).toString();\n    }","id":69527,"modified_method":"/**\n     * Overriden to construct a valid SQL92 JOIN clause as opposed to\n     * the Oracle-like SQL the superclass produces.\n     */\n    public String assembleJoinClause(String leftName, String rightName, int semantic) {\n        if(enableJoinHandling) {\n            return createJoinClause(leftName, rightName, semantic).toString();\n        }\n        return super.assembleJoinClause(leftName, rightName, semantic);\n    }","commit_id":"f949922b510040ed46c3689b1dd645612f9e5d18","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overriden to handle correct placements of join conditions.\n     */\n    public String assembleSelectStatementWithAttributes(NSArray attributes,\n                                                        boolean lock,\n                                                        com.webobjects.eocontrol.EOQualifier qualifier,\n                                                        NSArray fetchOrder,\n                                                        String selectString,\n                                                        String columnList,\n                                                        String tableList,\n                                                        String whereClause,\n                                                        String joinClause,\n                                                        String orderByClause,\n                                                        String lockClause) {\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"SELECT \");\n        sb.append(columnList);\n        sb.append(\" FROM \");\n\n        if (_alreadyJoined.count() > 0) {\n            sb.append(\" \");\n            sb.append(joinClauseString());\n        } else {\n            sb.append(tableList);\n        }\n        if (whereClause != null && whereClause.length() > 0) {\n            sb.append(\" WHERE \");\n            sb.append(whereClause);\n        }\n        if (orderByClause != null && orderByClause.length() > 0) {\n            sb.append(\" ORDER BY \");\n            sb.append(orderByClause);\n        }\n        if (lockClause != null && lockClause.length() > 0) {\n            sb.append(\" \");\n            sb.append(lockClause);\n        }\n\n        return sb.toString();\n    }","id":69528,"modified_method":"/**\n     * Overriden to handle correct placements of join conditions.\n     */\n    public String assembleSelectStatementWithAttributes(NSArray attributes,\n                                                        boolean lock,\n                                                        com.webobjects.eocontrol.EOQualifier qualifier,\n                                                        NSArray fetchOrder,\n                                                        String selectString,\n                                                        String columnList,\n                                                        String tableList,\n                                                        String whereClause,\n                                                        String joinClause,\n                                                        String orderByClause,\n                                                        String lockClause) {\n        StringBuffer sb = new StringBuffer();\n        if(enableJoinHandling) {\n            sb.append(\"SELECT \");\n            sb.append(columnList);\n            sb.append(\" FROM \");\n\n            if (_alreadyJoined.count() > 0) {\n                sb.append(\" \");\n                sb.append(joinClauseString());\n            } else {\n                sb.append(tableList);\n            }\n            if (whereClause != null && whereClause.length() > 0) {\n                sb.append(\" WHERE \");\n                sb.append(whereClause);\n            }\n            if (orderByClause != null && orderByClause.length() > 0) {\n                sb.append(\" ORDER BY \");\n                sb.append(orderByClause);\n            }\n            if (_fetchLimit != 0) {\n                sb.append(\" LIMIT \");\n                sb.append(_fetchLimit);\n            }\n            if (lockClause != null && lockClause.length() > 0) {\n                sb.append(\" \");\n                sb.append(lockClause);\n            }\n        } else {\n            sb.append(super.assembleSelectStatementWithAttributes(attributes, lock, qualifier, fetchOrder, selectString, columnList, tableList, whereClause, joinClause, orderByClause, lockClause));\n            if (_fetchLimit != 0) {\n                sb.append(\" LIMIT \");\n                sb.append(_fetchLimit);\n            }\n        }\n        \n        return sb.toString();\n    }","commit_id":"f949922b510040ed46c3689b1dd645612f9e5d18","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Overridden to compose the final string expression for the join clause\n     * from the array we constructed previously.\n     */\n    public String joinClauseString() {\n        NSMutableDictionary seenIt = new NSMutableDictionary();\n        StringBuffer sb = new StringBuffer();\n\n        for (int i = 0; i < _alreadyJoined.count(); i++) {\n            JoinClause jc = (JoinClause)_alreadyJoined.objectAtIndex(i);\n            boolean seenTable1 = seenIt.objectForKey(jc.table1) != null;\n            boolean seenTable2 = seenIt.objectForKey(jc.table2) != null;\n\n            if (!seenTable1 && !seenTable2) {\n                sb.append(jc.table1);\n                sb.append(jc.op);\n                sb.append(jc.table2);\n            } else if (!seenTable2) {\n                sb.append(jc.op);\n                sb.append(jc.table1);\n            } else {\n                sb.append(jc.op);\n                sb.append(jc.table2);\n            }\n            sb.append(jc.joinCondition);\n            sb.append(\" \");\n\n            seenIt.setObjectForKey(jc.table1, jc.table1);\n            seenIt.setObjectForKey(jc.table2, jc.table2);\n        }\n        return sb.toString();\n    }","id":69529,"modified_method":"/**\n     * Overridden to compose the final string expression for the join clause\n     * from the array we constructed previously.\n     */\n    public String joinClauseString() {\n        if(enableJoinHandling) {\n            NSMutableDictionary seenIt = new NSMutableDictionary();\n            StringBuffer sb = new StringBuffer();\n\n            for (int i = 0; i < _alreadyJoined.count(); i++) {\n                JoinClause jc = (JoinClause)_alreadyJoined.objectAtIndex(i);\n                boolean seenTable1 = seenIt.objectForKey(jc.table1) != null;\n                boolean seenTable2 = seenIt.objectForKey(jc.table2) != null;\n\n                if (!seenTable1 && !seenTable2) {\n                    sb.append(jc.table1);\n                    sb.append(jc.op);\n                    sb.append(jc.table2);\n                } else if (!seenTable2) {\n                    sb.append(jc.op);\n                    sb.append(jc.table1);\n                } else {\n                    sb.append(jc.op);\n                    sb.append(jc.table2);\n                }\n                sb.append(jc.joinCondition);\n                sb.append(\" \");\n\n                seenIt.setObjectForKey(jc.table1, jc.table1);\n                seenIt.setObjectForKey(jc.table2, jc.table2);\n            }\n            return sb.toString();\n        } else {\n            return super.joinClauseString();\n        }\n    }","commit_id":"f949922b510040ed46c3689b1dd645612f9e5d18","url":"https://github.com/wocommunity/wonder"},{"original_method":"public ExtensionScopeHelper(LightweightTypeReference argumentType) {\n\t\tthis.argumentType = argumentType;\n\t}","id":69530,"modified_method":"public ExtensionScopeHelper(LightweightTypeReference argumentType) {\n\t\tthis.rawArgumentType = argumentType.getRawTypeReference();\n\t}","commit_id":"32ecd6fb9367a29487855d76743f53b086ef68f0","url":"https://github.com/eclipse/xtext"},{"original_method":"protected boolean isMatchingFirstParameter(JvmOperation feature) {\n\t\tList<JvmFormalParameter> parameters = feature.getParameters();\n\t\tJvmFormalParameter firstParameter = parameters.get(0);\n\t\tJvmTypeReference type = firstParameter.getParameterType();\n\t\tif (type == null)\n\t\t\treturn false;\n\t\tJvmType rawParameterType = type.getType();\n\t\tif (rawParameterType == null || rawParameterType.eIsProxy())\n\t\t\treturn false;\n\t\tif (!(rawParameterType instanceof JvmTypeParameter)) {\n\t\t\tLightweightTypeReference rawReceiverType = argumentType.getRawTypeReference();\n\t\t\tif (rawReceiverType.isResolved()) {\n\t\t\t\t// short circuit - limit extension scope entries to real candidates\n\t\t\t\tLightweightTypeReference parameterTypeReference = new OwnedConverter(rawReceiverType.getOwner()).toRawLightweightReference(rawParameterType);\n\t\t\t\tif (parameterTypeReference.isResolved() && !parameterTypeReference.isAssignableFrom(rawReceiverType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (parameterTypeReference.isArray() && !rawReceiverType.isArray() && !rawReceiverType.isSubtypeOf(Iterable.class)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (isArrayTypeMismatch(rawReceiverType, rawParameterType)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}","id":69531,"modified_method":"protected boolean isMatchingFirstParameter(JvmOperation feature) {\n\t\tList<JvmFormalParameter> parameters = feature.getParameters();\n\t\tJvmFormalParameter firstParameter = parameters.get(0);\n\t\tJvmTypeReference type = firstParameter.getParameterType();\n\t\tif (type == null)\n\t\t\treturn false;\n\t\tJvmType rawParameterType = type.getType();\n\t\tif (rawParameterType == null || rawParameterType.eIsProxy())\n\t\t\treturn false;\n\t\tif (!(rawParameterType instanceof JvmTypeParameter)) {\n\t\t\tif (rawArgumentType.isResolved()) {\n\t\t\t\t// short circuit - limit extension scope entries to real candidates\n\t\t\t\tLightweightTypeReference parameterTypeReference = new OwnedConverter(rawArgumentType.getOwner()).toRawLightweightReference(rawParameterType);\n\t\t\t\tif (parameterTypeReference.isResolved() && !parameterTypeReference.isAssignableFrom(rawArgumentType)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (parameterTypeReference.isArray() && !rawArgumentType.isArray() && !rawArgumentType.isSubtypeOf(Iterable.class)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (isArrayTypeMismatch(rawArgumentType, rawParameterType)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}","commit_id":"32ecd6fb9367a29487855d76743f53b086ef68f0","url":"https://github.com/eclipse/xtext"},{"original_method":"private int internalGetPrimitiveKindFromWrapper(ParameterizedTypeReference typeReference) {\n\t\tJvmType type = typeReference.getType();\n\t\tif (type == null || type.eIsProxy()) {\n\t\t\treturn PRIMITIVE_NONE; \n\t\t}\n\t\tif (type.eClass() != TypesPackage.Literals.JVM_GENERIC_TYPE) {\n\t\t\tif (type.eClass() == TypesPackage.Literals.JVM_TYPE_PARAMETER) {\n\t\t\t\treturn internalGetPrimitiveKindFromWrapper((JvmTypeParameter)type, null);\n\t\t\t}\n\t\t\treturn PRIMITIVE_NONE;\n\t\t}\n\t\treturn internalGetPrimitiveKindFromWrapper((JvmGenericType)type);\n\t}","id":69532,"modified_method":"private int internalGetPrimitiveKindFromWrapper(ParameterizedTypeReference typeReference) {\n\t\tJvmType type = typeReference.getType();\n\t\tif (type == null || type.eIsProxy()) {\n\t\t\treturn PRIMITIVE_NONE; \n\t\t}\n\t\tEClass eClass = type.eClass();\n\t\tif (eClass != TypesPackage.Literals.JVM_GENERIC_TYPE) {\n\t\t\tif (eClass == TypesPackage.Literals.JVM_TYPE_PARAMETER) {\n\t\t\t\treturn internalGetPrimitiveKindFromWrapper((JvmTypeParameter)type, null);\n\t\t\t}\n\t\t\treturn PRIMITIVE_NONE;\n\t\t}\n\t\treturn internalGetPrimitiveKindFromWrapper((JvmGenericType)type);\n\t}","commit_id":"32ecd6fb9367a29487855d76743f53b086ef68f0","url":"https://github.com/eclipse/xtext"},{"original_method":"private int internalGetPrimitiveKind(ParameterizedTypeReference typeReference) {\n\t\tJvmType type = typeReference.getType();\n\t\tif (type.eIsProxy())\n\t\t\treturn PRIMITIVE_NONE;\n\t\tif (type.eClass() == TypesPackage.Literals.JVM_PRIMITIVE_TYPE) {\n\t\t\tString name = type.getSimpleName();\n\t\t\tswitch (name.length()) {\n\t\t\t\tcase 3:\n\t\t\t\t\tif (\"int\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_INT;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tif (\"long\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_LONG;\n\t\t\t\t\t} else if (\"char\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_CHAR;\n\t\t\t\t\t} else if (\"byte\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_BYTE;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tif (\"short\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_SHORT;\n\t\t\t\t\t} else if (\"float\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_FLOAT;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tif (\"double\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_DOUBLE;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tif (\"boolean\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_BOOLEAN;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (type.eClass() == TypesPackage.Literals.JVM_VOID) {\n\t\t\treturn PRIMITIVE_VOID;\n\t\t}\n\t\treturn PRIMITIVE_NONE;\n\t}","id":69533,"modified_method":"private int internalGetPrimitiveKind(ParameterizedTypeReference typeReference) {\n\t\tJvmType type = typeReference.getType();\n\t\tEClass eClass = type.eClass();\n\t\tif (eClass == TypesPackage.Literals.JVM_PRIMITIVE_TYPE) {\n\t\t\tif (type.eIsProxy())\n\t\t\t\treturn PRIMITIVE_NONE;\n\t\t\tString name = type.getSimpleName();\n\t\t\tswitch (name.length()) {\n\t\t\t\tcase 3:\n\t\t\t\t\tif (\"int\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_INT;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tif (\"long\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_LONG;\n\t\t\t\t\t} else if (\"char\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_CHAR;\n\t\t\t\t\t} else if (\"byte\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_BYTE;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 5:\n\t\t\t\t\tif (\"short\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_SHORT;\n\t\t\t\t\t} else if (\"float\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_FLOAT;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 6:\n\t\t\t\t\tif (\"double\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_DOUBLE;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 7:\n\t\t\t\t\tif (\"boolean\".equals(name)) {\n\t\t\t\t\t\treturn PRIMITIVE_BOOLEAN;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} else if (eClass == TypesPackage.Literals.JVM_VOID) {\n\t\t\tif (type.eIsProxy())\n\t\t\t\treturn PRIMITIVE_NONE;\n\t\t\treturn PRIMITIVE_VOID;\n\t\t}\n\t\treturn PRIMITIVE_NONE;\n\t}","commit_id":"32ecd6fb9367a29487855d76743f53b086ef68f0","url":"https://github.com/eclipse/xtext"},{"original_method":"private int internalGetPrimitiveKindFromWrapper(JvmTypeParameter type, /* @Nullable */ RecursionGuard<JvmTypeParameter> guard) {\n\t\tif (type.eIsProxy())\n\t\t\treturn PRIMITIVE_NONE;\n\t\tfor(JvmTypeConstraint constraint: type.getConstraints()) {\n\t\t\tif (constraint.eClass() == TypesPackage.Literals.JVM_UPPER_BOUND) {\n\t\t\t\tJvmTypeReference upperBound = constraint.getTypeReference();\n\t\t\t\tif (upperBound != null) {\n\t\t\t\t\tJvmType upperBoundType = upperBound.getType();\n\t\t\t\t\tif (upperBoundType.eClass() == TypesPackage.Literals.JVM_GENERIC_TYPE) {\n\t\t\t\t\t\treturn internalGetPrimitiveKindFromWrapper((JvmGenericType) upperBoundType);\n\t\t\t\t\t}\n\t\t\t\t\tif (type == upperBoundType) {\n\t\t\t\t\t\treturn PRIMITIVE_NONE;\n\t\t\t\t\t}\n\t\t\t\t\t// guard against recursive deps\n\t\t\t\t\tif (upperBoundType.eClass() == TypesPackage.Literals.JVM_TYPE_PARAMETER) {\n\t\t\t\t\t\tJvmTypeParameter upperBoundTypeParameter = (JvmTypeParameter) upperBoundType;\n\t\t\t\t\t\tif (guard == null) {\n\t\t\t\t\t\t\tguard = new RecursionGuard<JvmTypeParameter>();\n\t\t\t\t\t\t\tguard.tryNext(type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (guard.tryNext(upperBoundTypeParameter)) {\n\t\t\t\t\t\t\treturn internalGetPrimitiveKindFromWrapper(upperBoundTypeParameter, guard);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn PRIMITIVE_NONE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn PRIMITIVE_NONE;\n\t}","id":69534,"modified_method":"private int internalGetPrimitiveKindFromWrapper(JvmTypeParameter type, /* @Nullable */ RecursionGuard<JvmTypeParameter> guard) {\n\t\tif (type.eIsProxy())\n\t\t\treturn PRIMITIVE_NONE;\n\t\tfor(JvmTypeConstraint constraint: type.getConstraints()) {\n\t\t\tif (constraint.eClass() == TypesPackage.Literals.JVM_UPPER_BOUND) {\n\t\t\t\tJvmTypeReference upperBound = constraint.getTypeReference();\n\t\t\t\tif (upperBound != null) {\n\t\t\t\t\tJvmType upperBoundType = upperBound.getType();\n\t\t\t\t\tEClass eClass = upperBoundType.eClass();\n\t\t\t\t\tif (eClass == TypesPackage.Literals.JVM_GENERIC_TYPE) {\n\t\t\t\t\t\treturn internalGetPrimitiveKindFromWrapper((JvmGenericType) upperBoundType);\n\t\t\t\t\t}\n\t\t\t\t\tif (type == upperBoundType) {\n\t\t\t\t\t\treturn PRIMITIVE_NONE;\n\t\t\t\t\t}\n\t\t\t\t\t// guard against recursive deps\n\t\t\t\t\tif (eClass == TypesPackage.Literals.JVM_TYPE_PARAMETER) {\n\t\t\t\t\t\tJvmTypeParameter upperBoundTypeParameter = (JvmTypeParameter) upperBoundType;\n\t\t\t\t\t\tif (guard == null) {\n\t\t\t\t\t\t\tguard = new RecursionGuard<JvmTypeParameter>();\n\t\t\t\t\t\t\tguard.tryNext(type);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (guard.tryNext(upperBoundTypeParameter)) {\n\t\t\t\t\t\t\treturn internalGetPrimitiveKindFromWrapper(upperBoundTypeParameter, guard);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn PRIMITIVE_NONE;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn PRIMITIVE_NONE;\n\t}","commit_id":"32ecd6fb9367a29487855d76743f53b086ef68f0","url":"https://github.com/eclipse/xtext"},{"original_method":"protected int doIsConformant(ParameterizedTypeReference left, ParameterizedTypeReference right, int flags) {\n\t\tif (left.getType() == right.getType()) {\n\t\t\treturn doIsConformantTypeArguments(left, right, flags);\n\t\t}\n\t\tif (left.isPrimitiveVoid() || right.isPrimitiveVoid()) {\n\t\t\treturn flags;\n\t\t}\n\t\tif ((flags & (ALLOW_BOXING_UNBOXING | ALLOW_PRIMITIVE_WIDENING)) != 0) {\n\t\t\tint leftPrimitiveKind = internalGetPrimitiveKind(left);\n\t\t\tif (leftPrimitiveKind != PRIMITIVE_NONE) {\n\t\t\t\tint rightPrimitiveKind = internalGetPrimitiveKind(right);\n\t\t\t\tif (rightPrimitiveKind != PRIMITIVE_NONE) {\n\t\t\t\t\tif ((flags & ALLOW_PRIMITIVE_WIDENING) != 0) {\n\t\t\t\t\t\tif (isWideningConversion(leftPrimitiveKind, rightPrimitiveKind)) {\n\t\t\t\t\t\t\treturn flags | SUCCESS | PRIMITIVE_WIDENING;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ((flags & ALLOW_UNBOXING) != 0) {\n\t\t\t\t\trightPrimitiveKind = internalGetPrimitiveKindFromWrapper(right);\n\t\t\t\t\tif (rightPrimitiveKind != PRIMITIVE_NONE) {\n\t\t\t\t\t\tif (rightPrimitiveKind == leftPrimitiveKind || isWideningConversion(leftPrimitiveKind, rightPrimitiveKind)) {\n\t\t\t\t\t\t\treturn flags | SUCCESS | UNBOXING;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!(right.getType().eClass() == TypesPackage.Literals.JVM_TYPE_PARAMETER))\n\t\t\t\t\treturn flags;\n\t\t\t} else if ((flags & ALLOW_BOXING) != 0) {\n\t\t\t\tPrimitive rightPrimitiveKind = right.getPrimitiveKind();\n\t\t\t\tif (rightPrimitiveKind != null) {\n\t\t\t\t\tif (left.isType(Object.class)) {\n\t\t\t\t\t\treturn flags | SUCCESS | BOXING;\n\t\t\t\t\t}\n\t\t\t\t\tif (left.isType(String.class)) {\n\t\t\t\t\t\treturn flags;\n\t\t\t\t\t}\n\t\t\t\t\tLightweightTypeReference wrapper = WrapperTypeLookup.getWrapperType(right, rightPrimitiveKind);\n\t\t\t\t\tint result = doIsConformant(left, (ParameterizedTypeReference) wrapper, flags);\n\t\t\t\t\tif ((result & SUCCESS) != 0)\n\t\t\t\t\t\treturn result | BOXING;\n\t\t\t\t\treturn flags;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (left.isPrimitive() || right.isPrimitive()) {\n\t\t\treturn flags;\n\t\t}\n\t\tif ((flags & AS_TYPE_ARGUMENT) != 0)\n\t\t\treturn flags;\n\t\tif (left.isType(Object.class)) {\n\t\t\treturn flags | SUCCESS | SUBTYPE;\n\t\t}\n\t\tJvmType leftType = left.getType();\n\t\tJvmType rightType = right.getType();\n\t\tif (leftType.eClass() == TypesPackage.Literals.JVM_GENERIC_TYPE) {\n\t\t\tJvmGenericType castedLeftType = (JvmGenericType) leftType;\n\t\t\tif (castedLeftType.isFinal()) {\n\t\t\t\tif (rightType.eClass() == TypesPackage.Literals.JVM_TYPE_PARAMETER && getSuperType(right, castedLeftType) != null) {\n\t\t\t\t\treturn flags | SUCCESS | SUBTYPE;\n\t\t\t\t}\n\t\t\t\treturn flags;\n\t\t\t}\n\t\t\tif (!castedLeftType.isInterface() && rightType.eClass() == TypesPackage.Literals.JVM_GENERIC_TYPE && ((JvmGenericType) rightType).isInterface()) {\n\t\t\t\treturn flags;\n\t\t\t}\n\t\t} else if (leftType.eClass() == TypesPackage.Literals.JVM_TYPE_PARAMETER) {\n\t\t\tif (rightType.eClass() == TypesPackage.Literals.JVM_TYPE_PARAMETER && getSuperType(right, leftType) != null) {\n\t\t\t\treturn flags | SUCCESS | SUBTYPE;\n\t\t\t}\n\t\t\treturn flags;\n\t\t}\n\t\tParameterizedTypeReference rightSuperType = (ParameterizedTypeReference) getSuperType(right, leftType);\n\t\tif (rightSuperType != null) {\n\t\t\tint result = doIsConformantTypeArguments(left, rightSuperType, flags);\n\t\t\tif ((result & SUCCESS) != 0) {\n\t\t\t\treturn result | SUBTYPE;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn isAssignableAsFunctionType(left, right, flags);\n\t}","id":69535,"modified_method":"protected int doIsConformant(ParameterizedTypeReference left, ParameterizedTypeReference right, int flags) {\n\t\tif (left.getType() == right.getType()) {\n\t\t\treturn doIsConformantTypeArguments(left, right, flags);\n\t\t}\n\t\tif (left.isPrimitiveVoid() || right.isPrimitiveVoid()) {\n\t\t\treturn flags;\n\t\t}\n\t\tif ((flags & (ALLOW_BOXING_UNBOXING | ALLOW_PRIMITIVE_WIDENING)) != 0) {\n\t\t\tint leftPrimitiveKind = internalGetPrimitiveKind(left);\n\t\t\tif (leftPrimitiveKind != PRIMITIVE_NONE) {\n\t\t\t\tint rightPrimitiveKind = internalGetPrimitiveKind(right);\n\t\t\t\tif (rightPrimitiveKind != PRIMITIVE_NONE) {\n\t\t\t\t\tif ((flags & ALLOW_PRIMITIVE_WIDENING) != 0) {\n\t\t\t\t\t\tif (isWideningConversion(leftPrimitiveKind, rightPrimitiveKind)) {\n\t\t\t\t\t\t\treturn flags | SUCCESS | PRIMITIVE_WIDENING;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ((flags & ALLOW_UNBOXING) != 0) {\n\t\t\t\t\trightPrimitiveKind = internalGetPrimitiveKindFromWrapper(right);\n\t\t\t\t\tif (rightPrimitiveKind != PRIMITIVE_NONE) {\n\t\t\t\t\t\tif (rightPrimitiveKind == leftPrimitiveKind || isWideningConversion(leftPrimitiveKind, rightPrimitiveKind)) {\n\t\t\t\t\t\t\treturn flags | SUCCESS | UNBOXING;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!(right.getType().eClass() == TypesPackage.Literals.JVM_TYPE_PARAMETER))\n\t\t\t\t\treturn flags;\n\t\t\t} else if ((flags & ALLOW_BOXING) != 0) {\n\t\t\t\tPrimitive rightPrimitiveKind = right.getPrimitiveKind();\n\t\t\t\tif (rightPrimitiveKind != null) {\n\t\t\t\t\tif (left.isType(Object.class)) {\n\t\t\t\t\t\treturn flags | SUCCESS | BOXING;\n\t\t\t\t\t}\n\t\t\t\t\tif (left.isType(String.class)) {\n\t\t\t\t\t\treturn flags;\n\t\t\t\t\t}\n\t\t\t\t\tLightweightTypeReference wrapper = WrapperTypeLookup.getWrapperType(right, rightPrimitiveKind);\n\t\t\t\t\tint result = doIsConformant(left, (ParameterizedTypeReference) wrapper, flags);\n\t\t\t\t\tif ((result & SUCCESS) != 0)\n\t\t\t\t\t\treturn result | BOXING;\n\t\t\t\t\treturn flags;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (left.isPrimitive() || right.isPrimitive()) {\n\t\t\treturn flags;\n\t\t}\n\t\tif ((flags & AS_TYPE_ARGUMENT) != 0)\n\t\t\treturn flags;\n\t\tif (left.isType(Object.class)) {\n\t\t\treturn flags | SUCCESS | SUBTYPE;\n\t\t}\n\t\tJvmType leftType = left.getType();\n\t\tJvmType rightType = right.getType();\n\t\tEClass leftEClass = leftType.eClass();\n\t\tif (leftEClass == TypesPackage.Literals.JVM_GENERIC_TYPE) {\n\t\t\tJvmGenericType castedLeftType = (JvmGenericType) leftType;\n\t\t\tEClass rightEClass = rightType.eClass();\n\t\t\tif (castedLeftType.isFinal()) {\n\t\t\t\tif (rightEClass == TypesPackage.Literals.JVM_TYPE_PARAMETER && getSuperType(right, castedLeftType) != null) {\n\t\t\t\t\treturn flags | SUCCESS | SUBTYPE;\n\t\t\t\t}\n\t\t\t\treturn flags;\n\t\t\t}\n\t\t\tif (!castedLeftType.isInterface() && rightEClass == TypesPackage.Literals.JVM_GENERIC_TYPE && ((JvmGenericType) rightType).isInterface()) {\n\t\t\t\treturn flags;\n\t\t\t}\n\t\t} else if (leftEClass == TypesPackage.Literals.JVM_TYPE_PARAMETER) {\n\t\t\tif (rightType.eClass() == TypesPackage.Literals.JVM_TYPE_PARAMETER && getSuperType(right, leftType) != null) {\n\t\t\t\treturn flags | SUCCESS | SUBTYPE;\n\t\t\t}\n\t\t\treturn flags;\n\t\t}\n\t\tParameterizedTypeReference rightSuperType = (ParameterizedTypeReference) getSuperType(right, leftType);\n\t\tif (rightSuperType != null) {\n\t\t\tint result = doIsConformantTypeArguments(left, rightSuperType, flags);\n\t\t\tif ((result & SUCCESS) != 0) {\n\t\t\t\treturn result | SUBTYPE;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn isAssignableAsFunctionType(left, right, flags);\n\t}","commit_id":"32ecd6fb9367a29487855d76743f53b086ef68f0","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void inplaceSortByDistanceAndName(List<Entry<JvmType>> candidates) {\n\t\tCollections.sort(candidates,new Comparator<Entry<JvmType>>() {\n\t\t\tpublic int compare(Entry<JvmType> o1, Entry<JvmType> o2) {\n\t\t\t\tif (o1.getCount() == o2.getCount()) {\n\t\t\t\t\tJvmType element1 = o1.getElement();\n\t\t\t\t\tJvmType element2 = o2.getElement();\n\t\t\t\t\treturn compare(element1, element2);\n\t\t\t\t}\n\t\t\t\tif (o1.getCount() < o2.getCount())\n\t\t\t\t\treturn -1;\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tprotected int compare(JvmType element1, JvmType element2) {\n\t\t\t\tif (element1.eClass() == TypesPackage.Literals.JVM_ARRAY_TYPE && element2.eClass() == TypesPackage.Literals.JVM_ARRAY_TYPE) {\n\t\t\t\t\treturn compare(((JvmArrayType) element1).getComponentType(), ((JvmArrayType) element2).getComponentType());\n\t\t\t\t}\n\t\t\t\tif (element1.eClass() == TypesPackage.Literals.JVM_GENERIC_TYPE && element2.eClass() == TypesPackage.Literals.JVM_GENERIC_TYPE) {\n\t\t\t\t\tint result = Booleans.compare(((JvmGenericType) element1).isInterface(), ((JvmGenericType) element2).isInterface());\n\t\t\t\t\tif (result != 0) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn element1.getIdentifier().compareTo(element2.getIdentifier());\n\t\t\t}\n\t\t});\n\t}","id":69536,"modified_method":"protected void inplaceSortByDistanceAndName(List<Entry<JvmType>> candidates) {\n\t\tCollections.sort(candidates,new Comparator<Entry<JvmType>>() {\n\t\t\tpublic int compare(Entry<JvmType> o1, Entry<JvmType> o2) {\n\t\t\t\tif (o1.getCount() == o2.getCount()) {\n\t\t\t\t\tJvmType element1 = o1.getElement();\n\t\t\t\t\tJvmType element2 = o2.getElement();\n\t\t\t\t\treturn compare(element1, element2);\n\t\t\t\t}\n\t\t\t\tif (o1.getCount() < o2.getCount())\n\t\t\t\t\treturn -1;\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tprotected int compare(JvmType element1, JvmType element2) {\n\t\t\t\tEClass element1EClass = element1.eClass();\n\t\t\t\tEClass element2EClass = element2.eClass();\n\t\t\t\tif (element1EClass == TypesPackage.Literals.JVM_ARRAY_TYPE && element2EClass == TypesPackage.Literals.JVM_ARRAY_TYPE) {\n\t\t\t\t\treturn compare(((JvmArrayType) element1).getComponentType(), ((JvmArrayType) element2).getComponentType());\n\t\t\t\t}\n\t\t\t\tif (element1EClass == TypesPackage.Literals.JVM_GENERIC_TYPE && element2EClass == TypesPackage.Literals.JVM_GENERIC_TYPE) {\n\t\t\t\t\tint result = Booleans.compare(((JvmGenericType) element1).isInterface(), ((JvmGenericType) element2).isInterface());\n\t\t\t\t\tif (result != 0) {\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn element1.getIdentifier().compareTo(element2.getIdentifier());\n\t\t\t}\n\t\t});\n\t}","commit_id":"32ecd6fb9367a29487855d76743f53b086ef68f0","url":"https://github.com/eclipse/xtext"},{"original_method":"protected boolean isClass(JvmType type) {\n\t\tif (type.eClass() == TypesPackage.Literals.JVM_ARRAY_TYPE)\n\t\t\treturn isClass(((JvmArrayType) type).getComponentType());\n\t\treturn type.eClass() == TypesPackage.Literals.JVM_GENERIC_TYPE && !((JvmGenericType) type).isInterface();\n\t}","id":69537,"modified_method":"protected boolean isClass(JvmType type) {\n\t\tEClass eClass = type.eClass();\n\t\tif (eClass == TypesPackage.Literals.JVM_ARRAY_TYPE)\n\t\t\treturn isClass(((JvmArrayType) type).getComponentType());\n\t\treturn eClass == TypesPackage.Literals.JVM_GENERIC_TYPE && !((JvmGenericType) type).isInterface();\n\t}","commit_id":"32ecd6fb9367a29487855d76743f53b086ef68f0","url":"https://github.com/eclipse/xtext"},{"original_method":"public void commitEObjectDescriptors() {\n\t\tfor (Entry<EObject, EObjectData> eObjectEntry : eObjectDataCache.entrySet()) {\n\t\t\tEObject eObject = eObjectEntry.getKey();\n\t\t\tEObjectData data = eObjectEntry.getValue();\n\t\t\tResource resource = eObject.eResource();\n\t\t\tResourceDescriptor resourceDesc = null;\n\n\t\t\tif (resource != null) {\n\t\t\t\tresourceDesc = findResourceDescriptor(resource.getURI());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresourceDesc = findResourceDescriptor(EcoreUtil.getURI(eObject).trimFragment());\n\t\t\t}\n\t\t\tEClassDescriptor eClassDescriptor = index.eClassDAO().createQueryEClass(eObject.eClass())\n\t\t\t\t\t.executeSingleResult();\n\t\t\tif (eClassDescriptor==null) {\n\t\t\t\tLogFacade.logError(\"Couldn't find EClassDescriptor for EClass \"+eObject.eClass().getName());\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tEObjectDescriptor newEObjectDesc = new EObjectDescriptorImpl(resourceDesc, data.fragment, data.name,\n\t\t\t\t\tdata.displayName, eClassDescriptor, data.userData);\n\t\t\tEObjectDescriptor existingEObjectDesc = findEquivalent(allExistingEObjectDescs, newEObjectDesc);\n\t\t\tif (existingEObjectDesc != null) {\n\t\t\t\tindex.eObjectDAO().modify(existingEObjectDesc, newEObjectDesc);\n\t\t\t\tallExistingEObjectDescs.remove(existingEObjectDesc);\n\t\t\t\teObjectDescCache.put(eObject, existingEObjectDesc);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tindex.eObjectDAO().store(newEObjectDesc);\n\t\t\t\teObjectDescCache.put(eObject, newEObjectDesc);\n\t\t\t}\n\t\t}\n\t}","id":69538,"modified_method":"public void commitEObjectDescriptors() {\n\t\tfor (Entry<EObject, EObjectData> eObjectEntry : eObjectDataCache.entrySet()) {\n\t\t\tEObject eObject = eObjectEntry.getKey();\n\t\t\tEObjectData data = eObjectEntry.getValue();\n\t\t\tResource resource = eObject.eResource();\n\t\t\tResourceDescriptor resourceDesc = null;\n\n\t\t\tif (resource != null) {\n\t\t\t\tresourceDesc = findResourceDescriptor(resource.getURI());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresourceDesc = findResourceDescriptor(EcoreUtil.getURI(eObject).trimFragment());\n\t\t\t}\n\t\t\tEClass eClass = eObject.eClass();\n\t\t\tEClassDescriptor eClassDescriptor = findEClassDescriptor(eClass);\n\t\t\tif (eClassDescriptor == null) {\n\t\t\t\tLogFacade.logError(\"Couldn't find EClassDescriptor for EClass \" + eClass.getName());\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tEObjectDescriptor newEObjectDesc = new EObjectDescriptorImpl(resourceDesc, data.fragment, data.name,\n\t\t\t\t\tdata.displayName, eClassDescriptor, data.userData);\n\t\t\tEObjectDescriptor existingEObjectDesc = findEquivalent(allExistingEObjectDescs, newEObjectDesc);\n\t\t\tif (existingEObjectDesc != null) {\n\t\t\t\tindex.eObjectDAO().modify(existingEObjectDesc, newEObjectDesc);\n\t\t\t\tallExistingEObjectDescs.remove(existingEObjectDesc);\n\t\t\t\teObjectDescCache.put(eObject, existingEObjectDesc);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tindex.eObjectDAO().store(newEObjectDesc);\n\t\t\t\teObjectDescCache.put(eObject, newEObjectDesc);\n\t\t\t}\n\t\t}\n\t}","commit_id":"546b27e6e17f1c56701ec1124cc2140bcc2a4f18","url":"https://github.com/eclipse/xtext"},{"original_method":"public void commitEObjectDescriptors() {\n\t\tfor (Entry<EObject, EObjectData> eObjectEntry : eObjectDataCache.entrySet()) {\n\t\t\tEObject eObject = eObjectEntry.getKey();\n\t\t\tEObjectData data = eObjectEntry.getValue();\n\t\t\tResource resource = eObject.eResource();\n\t\t\tResourceDescriptor resourceDesc = null;\n\n\t\t\tif (resource != null) {\n\t\t\t\tresourceDesc = findResourceDescriptor(resource.getURI());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresourceDesc = findResourceDescriptor(EcoreUtil.getURI(eObject).trimFragment());\n\t\t\t}\n\t\t\tEClassDescriptor eClassDescriptor = index.eClassDAO().createQueryEClass(eObject.eClass())\n\t\t\t\t\t.executeSingleResult();\n\t\t\tif (eClassDescriptor==null) {\n\t\t\t\tLogFacade.logError(\"Couldn't find EClassDescriptor for EClass \"+eObject.eClass().getName());\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tEObjectDescriptor newEObjectDesc = new EObjectDescriptorImpl(resourceDesc, data.fragment, data.name,\n\t\t\t\t\tdata.displayName, eClassDescriptor, data.userData);\n\t\t\tEObjectDescriptor existingEObjectDesc = findEquivalent(allExistingEObjectDescs, newEObjectDesc);\n\t\t\tif (existingEObjectDesc != null) {\n\t\t\t\tindex.eObjectDAO().modify(existingEObjectDesc, newEObjectDesc);\n\t\t\t\tallExistingEObjectDescs.remove(existingEObjectDesc);\n\t\t\t\teObjectDescCache.put(eObject, existingEObjectDesc);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tindex.eObjectDAO().store(newEObjectDesc);\n\t\t\t\teObjectDescCache.put(eObject, newEObjectDesc);\n\t\t\t}\n\t\t}\n\t}","id":69539,"modified_method":"public void commitEObjectDescriptors() {\n\t\tfor (Entry<EObject, EObjectData> eObjectEntry : eObjectDataCache.entrySet()) {\n\t\t\tEObject eObject = eObjectEntry.getKey();\n\t\t\tEObjectData data = eObjectEntry.getValue();\n\t\t\tResource resource = eObject.eResource();\n\t\t\tResourceDescriptor resourceDesc = null;\n\n\t\t\tif (resource != null) {\n\t\t\t\tresourceDesc = findResourceDescriptor(resource.getURI());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresourceDesc = findResourceDescriptor(EcoreUtil.getURI(eObject).trimFragment());\n\t\t\t}\n\t\t\tEClass eClass = eObject.eClass();\n\t\t\tEClassDescriptor eClassDescriptor = findEClassDescriptor(eClass);\n\t\t\tif (eClassDescriptor == null) {\n\t\t\t\tLogFacade.logError(\"Couldn't find EClassDescriptor for EClass \" + eClass.getName());\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tEObjectDescriptor newEObjectDesc = new EObjectDescriptorImpl(resourceDesc, data.fragment, data.name,\n\t\t\t\t\tdata.displayName, eClassDescriptor, data.userData);\n\t\t\tEObjectDescriptor existingEObjectDesc = findEquivalent(allExistingEObjectDescs, newEObjectDesc);\n\t\t\tif (existingEObjectDesc != null) {\n\t\t\t\tindex.eObjectDAO().modify(existingEObjectDesc, newEObjectDesc);\n\t\t\t\tallExistingEObjectDescs.remove(existingEObjectDesc);\n\t\t\t\teObjectDescCache.put(eObject, existingEObjectDesc);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tindex.eObjectDAO().store(newEObjectDesc);\n\t\t\t\teObjectDescCache.put(eObject, newEObjectDesc);\n\t\t\t}\n\t\t}\n\t}","commit_id":"4baec74b391d3f2ee5b30d50e0db24a107f840e6","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testAddPortletPGDuplicate() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Password Generator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Password Generator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.type(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"p\"));\n\t\tselenium.keyDown(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.keyUp(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.waitForVisible(\"//div[@title='Password Generator']\");\n\t\tassertFalse(selenium.isVisible(\"//div[@title='Password Generator']/p/a\"));\n\t}","id":69540,"modified_method":"public void testAddPortletPGDuplicate() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Password Generator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Password Generator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"p\"));\n\t\tselenium.waitForVisible(\"//div[@title='Password Generator']\");\n\t\tassertFalse(selenium.isVisible(\"//div[@title='Password Generator']/p/a\"));\n\t}","commit_id":"4234d919471ab7ad0728c4d8f1a04fb8cd8edd4e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletPG() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Password Generator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Password Generator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.type(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"p\"));\n\t\tselenium.keyDown(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.keyUp(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.waitForVisible(\"//div[@title='Password Generator']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Password Generator']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":69541,"modified_method":"public void testAddPortletPG() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Password Generator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Password Generator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"p\"));\n\t\tselenium.waitForVisible(\"//div[@title='Password Generator']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Password Generator']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"4234d919471ab7ad0728c4d8f1a04fb8cd8edd4e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovePortletPG() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Password Generator Test Page\");\n\t\tselenium.clickAt(\"link=Password Generator Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.waitForElementNotPresent(\"//section\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","id":69542,"modified_method":"public void testRemovePortletPG() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Password Generator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Password Generator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to remove this component?\");\n\t\tselenium.waitForElementNotPresent(\"//section\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","commit_id":"4234d919471ab7ad0728c4d8f1a04fb8cd8edd4e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletLCDuplicate() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Loan Calculator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Loan Calculator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.type(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"l\"));\n\t\tselenium.keyDown(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.keyUp(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.waitForVisible(\"//div[@title='Loan Calculator']\");\n\t\tassertFalse(selenium.isVisible(\"//div[@title='Loan Calculator']/p/a\"));\n\t}","id":69543,"modified_method":"public void testAddPortletLCDuplicate() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Loan Calculator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Loan Calculator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"l\"));\n\t\tselenium.waitForVisible(\"//div[@title='Loan Calculator']\");\n\t\tassertFalse(selenium.isVisible(\"//div[@title='Loan Calculator']/p/a\"));\n\t}","commit_id":"92867f323f7b95348abf58c3b234e0e52f9570a9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletLC() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Loan Calculator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Loan Calculator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.type(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"l\"));\n\t\tselenium.keyDown(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.keyUp(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.waitForVisible(\"//div[@title='Loan Calculator']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Loan Calculator']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":69544,"modified_method":"public void testAddPortletLC() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Loan Calculator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Loan Calculator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"l\"));\n\t\tselenium.waitForVisible(\"//div[@title='Loan Calculator']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='Loan Calculator']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"92867f323f7b95348abf58c3b234e0e52f9570a9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCalculateLoan() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Loan Calculator Test Page\");\n\t\tselenium.clickAt(\"link=Loan Calculator Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_61_loanAmount\", RuntimeVariables.replace(\"1,000\"));\n\t\tselenium.type(\"_61_interest\", RuntimeVariables.replace(\"4.75\"));\n\t\tselenium.type(\"_61_years\", RuntimeVariables.replace(\"20\"));\n\t\tselenium.clickAt(\"//input[@value='Calculate']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForText(\"//tr[6]/td[2]/strong\", \"1,551\");\n\t\tassertEquals(RuntimeVariables.replace(\"1,551\"),\n\t\t\tselenium.getText(\"//tr[6]/td[2]/strong\"));\n\t}","id":69545,"modified_method":"public void testCalculateLoan() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Loan Calculator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Loan Calculator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_61_loanAmount']\",\n\t\t\tRuntimeVariables.replace(\"1,000\"));\n\t\tselenium.type(\"//input[@name='_61_interest']\",\n\t\t\tRuntimeVariables.replace(\"4.75\"));\n\t\tselenium.type(\"//input[@name='_61_years']\",\n\t\t\tRuntimeVariables.replace(\"20\"));\n\t\tselenium.clickAt(\"//input[@value='Calculate']\",\n\t\t\tRuntimeVariables.replace(\"Calculate\"));\n\t\tselenium.waitForText(\"//tr[6]/td[2]/strong\", \"1,551\");\n\t\tassertEquals(RuntimeVariables.replace(\"1,551\"),\n\t\t\tselenium.getText(\"//tr[6]/td[2]/strong\"));\n\t}","commit_id":"92867f323f7b95348abf58c3b234e0e52f9570a9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovePortletLC() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Loan Calculator Test Page\");\n\t\tselenium.clickAt(\"link=Loan Calculator Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.waitForElementNotPresent(\"//section\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","id":69546,"modified_method":"public void testRemovePortletLC() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Loan Calculator Test Page\",\n\t\t\tRuntimeVariables.replace(\"Loan Calculator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to remove this component?\");\n\t\tselenium.waitForElementNotPresent(\"//section\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","commit_id":"92867f323f7b95348abf58c3b234e0e52f9570a9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n   * Reads data with blocking.\n   * Should be used in case when ready method always returns false for your input stream.\n   * Should be used if we want to to make our reader exit when end of stream reached.\n   * Could be used if we prefer IO-blocking over CPU sleeping.\n   *\n   * @return true if non-zero amount of data has been read, false if end of the stream is reached\n   * @throws IOException If an I/O error occurs\n   */\n  protected final boolean readAvailableBlocking() throws IOException {\n    boolean read = false;\n\n    int n;\n    while ((n = myReader.read(myInputBuffer)) >= 0) {\n      if (n > 0) {\n        read = true;\n        processLine(myInputBuffer, myLineBuffer, n);\n      }\n      if (!myReader.ready()) {\n        TimeoutUtil.sleep(mySleepingPolicy.getTimeToSleep(n > 0));\n        if (!myReader.ready()) {\n          if (myLineBuffer.length() > 0) {\n            sendLine(myLineBuffer);\n          }\n          onBufferExhaustion();\n        }\n      }\n    }\n\n    if (myLineBuffer.length() > 0) {\n      sendLine(myLineBuffer);\n    }\n\n    return read;\n  }","id":69547,"modified_method":"/**\n   * Reads data with blocking.\n   * Should be used in case when ready method always returns false for your input stream.\n   * Should be used if we want to to make our reader exit when end of stream reached.\n   * Could be used if we prefer IO-blocking over CPU sleeping.\n   *\n   * @return true if non-zero amount of data has been read, false if end of the stream is reached\n   * @throws IOException If an I/O error occurs\n   */\n  protected final boolean readAvailableBlocking() throws IOException {\n    final boolean availableUnsupported = ((BaseInputStreamReader)myReader).availableUnsupported();\n    boolean read = false;\n\n    int n;\n    while ((n = myReader.read(myInputBuffer)) >= 0) {\n      if (n > 0) {\n        read = true;\n        processLine(myInputBuffer, myLineBuffer, n);\n      }\n\n      boolean isReady = availableUnsupported || myReader.ready();\n\n      if (!isReady) {\n        TimeoutUtil.sleep(mySleepingPolicy.getTimeToSleep(n > 0));\n        isReady = myReader.ready();\n      }\n\n      if (!isReady) {\n        if (myLineBuffer.length() > 0) {\n          sendLine(myLineBuffer);\n        }\n        onBufferExhaustion();\n      }\n    }\n\n    if (myLineBuffer.length() > 0) {\n      sendLine(myLineBuffer);\n    }\n\n    return read;\n  }","commit_id":"6f0128e165027a93505b04ea2e2ff55197c58cb4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized void setProcessTerminated(boolean isProcessTerminated) {\n      myIsProcessTerminated = isProcessTerminated;\n    }","id":69548,"modified_method":"public void setProcessTerminated(boolean isProcessTerminated) {\n      myIsProcessTerminated = isProcessTerminated;\n    }","commit_id":"67024ca49416ba998361add218fdfb9f0610847d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private synchronized boolean isClosed() {\n      return myIsClosed;\n    }","id":69549,"modified_method":"private boolean isClosed() {\n      return myIsClosed;\n    }","commit_id":"67024ca49416ba998361add218fdfb9f0610847d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void close() {\n      synchronized (this) {\n        if (isClosed()) {\n          return;\n        }\n        myIsClosed = true;\n      }\n      //try {\n      //  if(Thread.currentThread() != this) {\n      //    join(0);\n      //  }\n      //}\n      //catch (InterruptedException e) {\n      //}\n      // must close after the thread finished its execution, cause otherwise\n      // the thread will try to read from the closed (and nulled) stream\n      try {\n        myReader.close();\n      }\n      catch (IOException e1) {\n        // supressed\n      }\n      checkTextAvailable();\n\n      myNotificationQueue.offer(\"\");\n    }","id":69550,"modified_method":"private void close() {\n      LOG.assertTrue(!myIsClosed);\n      myIsClosed = true;\n\n      try {\n        myReader.close();\n      }\n      catch (IOException e1) {\n        // supressed\n      }\n      finally {\n        myNotificationQueue.offer(\"\");\n      }\n    }","commit_id":"67024ca49416ba998361add218fdfb9f0610847d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Semaphore schedule() {\n      myAlarm.addRequest(new Runnable() {\n        public void run() {\n          if(!isClosed()) {\n            myAlarm.addRequest(this, NOTIFY_TEXT_DELAY);\n            checkTextAvailable();\n          }\n        }\n      }, NOTIFY_TEXT_DELAY);\n\n      ourReaderThread.addRequest(this);\n\n      executeOnPooledThread(new Runnable() {\n        @Override\n        public void run() {\n          try {\n            while (true) {\n              final String token = myNotificationQueue.take();\n              if (token.isEmpty()) break;\n              textAvailable(token);\n            }\n          }\n          catch (InterruptedException e) {\n            // Ignore \n          }\n          finally {\n            mySemaphore.up();\n          }\n        }\n      });\n\n      mySemaphore.down();\n      return mySemaphore;\n    }","id":69551,"modified_method":"public Semaphore schedule() {\n      ourReaderThread.addRequest(this);\n\n      executeOnPooledThread(new Runnable() {\n        @Override\n        public void run() {\n          try {\n            while (true) {\n              final String token = myNotificationQueue.take();\n              if (token.isEmpty()) break;\n              textAvailable(token);\n            }\n          }\n          catch (InterruptedException e) {\n            // Ignore \n          }\n          finally {\n            mySemaphore.up();\n          }\n        }\n      });\n\n      mySemaphore.down();\n      return mySemaphore;\n    }","commit_id":"67024ca49416ba998361add218fdfb9f0610847d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void readAvailable(char[] buffer) throws IOException {\n      if (!isClosed()) {\n        if (myReader.ready()) {\n          int n = myReader.read(buffer);\n          if (n > 0) {\n            final boolean hasLineFeed;\n            synchronized (myBuffer) {\n              myBuffer.append(buffer, 0, n);\n              hasLineFeed = myBuffer.indexOf(\"\\n\") >= 0;\n            }\n\n            if (hasLineFeed) {\n              checkTextAvailable();\n            }\n          }\n        }\n\n        if (isProcessTerminated()) {\n          close();\n        }\n      }\n    }","id":69552,"modified_method":"public void readAvailable(char[] buffer) throws IOException {\n      while (myReader.ready()) {\n        int n = myReader.read(buffer);\n        if (n > 0) {\n          myNotificationQueue.offer(new String(buffer, 0, n));\n        }\n      }\n\n      if (isProcessTerminated()) {\n        close();\n      }\n    }","commit_id":"67024ca49416ba998361add218fdfb9f0610847d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public synchronized boolean isProcessTerminated() {\n      return myIsProcessTerminated;\n    }","id":69553,"modified_method":"public boolean isProcessTerminated() {\n      return myIsProcessTerminated;\n    }","commit_id":"67024ca49416ba998361add218fdfb9f0610847d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Override this method to read process output and error streams in blocking mode\n   *\n   * @return true to read non-blocking but sleeping, false for blocking read\n   */\n  protected boolean useNonBlockingRead() {\n    return !Registry.is(\"output.reader.blocking.mode\", false);\n  }","id":69554,"modified_method":"/** @deprecated use {@link #readerOptions()} (to be removed in IDEA 18) */\n  protected boolean useNonBlockingRead() {\n    return !Registry.is(\"output.reader.blocking.mode\", false);\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private SimpleOutputReader(@NotNull Reader reader, @NotNull Key processOutputType, SleepingPolicy sleepingPolicy, @NotNull String presentableName) {\n      super(reader, sleepingPolicy);\n      myProcessOutputType = processOutputType;\n      start(presentableName);\n    }","id":69555,"modified_method":"private SimpleOutputReader(Reader reader, Key outputType, Options options, String presentableName) {\n      super(reader, options);\n      myProcessOutputType = outputType;\n      start(presentableName);\n    }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected boolean useAdaptiveSleepingPolicyWhenReadingOutput() {\n    return false;\n  }","id":69556,"modified_method":"/** @deprecated use {@link #readerOptions()} (to be removed in IDEA 18) */\n  protected boolean useAdaptiveSleepingPolicyWhenReadingOutput() {\n    return false;\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void startNotify() {\n    if (myCommandLine != null) {\n      notifyTextAvailable(myCommandLine + '\\n', ProcessOutputTypes.SYSTEM);\n    }\n\n    addProcessListener(new ProcessAdapter() {\n      @Override\n      public void startNotified(final ProcessEvent event) {\n        try {\n          final BaseDataReader stdOutReader = createOutputDataReader(getPolicy());\n          final BaseDataReader stdErrReader = processHasSeparateErrorStream() ? createErrorDataReader(getPolicy()) : null;\n\n          myWaitFor.setTerminationCallback(new Consumer<Integer>() {\n            @Override\n            public void consume(Integer exitCode) {\n              try {\n                // tell readers that no more attempts to read process' output should be made\n                if (stdErrReader != null) stdErrReader.stop();\n                stdOutReader.stop();\n\n                try {\n                  if (stdErrReader != null) stdErrReader.waitFor();\n                  stdOutReader.waitFor();\n                }\n                catch (InterruptedException ignore) { }\n              }\n              finally {\n                onOSProcessTerminated(exitCode);\n              }\n            }\n          });\n        }\n        finally {\n          removeProcessListener(this);\n        }\n      }\n    });\n\n    super.startNotify();\n  }","id":69557,"modified_method":"@Override\n  public void startNotify() {\n    if (myCommandLine != null) {\n      notifyTextAvailable(myCommandLine + '\\n', ProcessOutputTypes.SYSTEM);\n    }\n\n    addProcessListener(new ProcessAdapter() {\n      @Override\n      public void startNotified(final ProcessEvent event) {\n        try {\n          Options options = readerOptions();\n          @SuppressWarnings(\"deprecation\") final BaseDataReader stdOutReader = createOutputDataReader(options.policy());\n          @SuppressWarnings(\"deprecation\") final BaseDataReader stdErrReader = processHasSeparateErrorStream() ? createErrorDataReader(options.policy()) : null;\n\n          myWaitFor.setTerminationCallback(new Consumer<Integer>() {\n            @Override\n            public void consume(Integer exitCode) {\n              try {\n                // tell readers that no more attempts to read process' output should be made\n                if (stdErrReader != null) stdErrReader.stop();\n                stdOutReader.stop();\n\n                try {\n                  if (stdErrReader != null) stdErrReader.waitFor();\n                  stdOutReader.waitFor();\n                }\n                catch (InterruptedException ignore) { }\n              }\n              finally {\n                onOSProcessTerminated(exitCode);\n              }\n            }\n          });\n        }\n        finally {\n          removeProcessListener(this);\n        }\n      }\n    });\n\n    super.startNotify();\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public BaseOutputReader(@NotNull InputStream inputStream, @Nullable Charset charset, @Nullable SleepingPolicy sleepingPolicy) {\n    this(createInputStreamReader(inputStream, charset), sleepingPolicy);\n  }","id":69558,"modified_method":"/** @deprecated use {@link #BaseOutputReader(InputStream, Charset, Options)} (to be removed in IDEA 18) */\n  @SuppressWarnings(\"unused\")\n  public BaseOutputReader(@NotNull InputStream inputStream, @Nullable Charset charset, @Nullable SleepingPolicy policy) {\n    this(inputStream, charset, Options.withPolicy(policy));\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Reads data with blocking.\n   * Should be used in case when ready method always returns false for your input stream.\n   * Should be used if we want to to make our reader exit when end of stream reached.\n   * Could be used if we prefer IO-blocking over CPU sleeping.\n   *\n   * @return true if non-zero amount of data has been read, false if end of the stream is reached\n   * @throws IOException If an I/O error occurs\n   */\n  protected final boolean readAvailableBlocking() throws IOException {\n    final boolean availableUnsupported = ((BaseInputStreamReader)myReader).availableUnsupported();\n    boolean read = false;\n\n    int n;\n    while ((n = myReader.read(myInputBuffer)) >= 0) {\n      if (n > 0) {\n        read = true;\n        processLine(myInputBuffer, myLineBuffer, n);\n      }\n\n      boolean isReady = myReader.ready();\n\n      if (!availableUnsupported && !isReady) {\n        TimeoutUtil.sleep(mySleepingPolicy.getTimeToSleep(n > 0));\n        isReady = myReader.ready();\n      }\n\n      if (!isReady) {\n        if (myLineBuffer.length() > 0) {\n          sendLine(myLineBuffer);\n        }\n        onBufferExhaustion();\n      }\n    }\n\n    if (myLineBuffer.length() > 0) {\n      sendLine(myLineBuffer);\n    }\n\n    return read;\n  }","id":69559,"modified_method":"/**\n   * Reads data with blocking.\n   * Should be used in case when ready method always returns false for your input stream.\n   * Should be used if we want to to make our reader exit when end of stream reached.\n   * Could be used if we prefer IO-blocking over CPU sleeping.\n   *\n   * @return true if non-zero amount of data has been read, false if end of the stream is reached\n   * @throws IOException If an I/O error occurs\n   */\n  protected final boolean readAvailableBlocking() throws IOException {\n    boolean read = false;\n\n    try {\n      int n;\n      while ((n = myReader.read(myInputBuffer)) >= 0) {\n        if (n > 0) {\n          read = true;\n          processInput(myInputBuffer, myLineBuffer, n);\n        }\n        if (!myReader.ready()) {\n          onBufferExhaustion();\n        }\n      }\n    }\n    finally {\n      if (myLineBuffer.length() > 0) {\n        sendText(myLineBuffer);\n      }\n    }\n\n    return read;\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected final void processLine(char[] buffer, StringBuilder line, int n) {\n    for (int i = 0; i < n; i++) {\n      char c = buffer[i];\n\n      if (c == '\\n' && line.length() > 0 && line.charAt(line.length() - 1) == '\\r') {\n        line.setCharAt(line.length() - 1, '\\n');\n      }\n      else {\n        line.append(c);\n      }\n\n      if (c == '\\n') {\n        sendLine(line);\n      }\n    }\n  }","id":69560,"modified_method":"private void processInput(char[] buffer, StringBuilder line, int n) {\n    if (myOptions.splitToLines()) {\n      for (int i = 0; i < n; i++) {\n        char c = buffer[i];\n\n        if (c == '\\r' && i + 1 < n && buffer[i + 1] == '\\n') {\n          continue;\n        }\n\n        if (c != '\\n' || myOptions.sendIncompleteLines() || myOptions.withSeparators()) {\n          line.append(c);\n        }\n\n        if (c == '\\n') {\n          sendText(line);\n        }\n      }\n\n      if (line.length() > 0 && myOptions.sendIncompleteLines()) {\n        sendText(line);\n      }\n    }\n    else {\n      onTextAvailable(new String(buffer, 0, n));\n    }\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public BaseOutputReader(@NotNull InputStream inputStream, @Nullable Charset charset) {\n    this(inputStream, charset, null);\n  }","id":69561,"modified_method":"public BaseOutputReader(@NotNull InputStream inputStream, @Nullable Charset charset) {\n    this(createInputStreamReader(inputStream, charset));\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Reads as much data as possible without blocking.\n   * Relies on InputStream.ready method.\n   * When in doubt, take a look at {@link #readAvailableBlocking()}.\n   *\n   * @return true if non-zero amount of data has been read\n   * @throws IOException If an I/O error occurs\n   */\n  protected final boolean readAvailableNonBlocking() throws IOException {\n    boolean read = false;\n\n    int n;\n    while (myReader.ready() && (n = myReader.read(myInputBuffer)) >= 0) {\n      if (n > 0) {\n        read = true;\n        processLine(myInputBuffer, myLineBuffer, n);\n      }\n    }\n\n    if (myLineBuffer.length() > 0) {\n      sendLine(myLineBuffer);\n    }\n\n    return read;\n  }","id":69562,"modified_method":"/**\n   * Reads as much data as possible without blocking.\n   * Relies on InputStream.ready method.\n   * When in doubt, take a look at {@link #readAvailableBlocking()}.\n   *\n   * @return true if non-zero amount of data has been read\n   * @throws IOException If an I/O error occurs\n   */\n  protected final boolean readAvailableNonBlocking() throws IOException {\n    boolean read = false;\n\n    try {\n      int n;\n      while (myReader.ready() && (n = myReader.read(myInputBuffer)) >= 0) {\n        if (n > 0) {\n          read = true;\n          processInput(myInputBuffer, myLineBuffer, n);\n        }\n      }\n    }\n    finally {\n      if (myLineBuffer.length() > 0) {\n        sendText(myLineBuffer);\n      }\n    }\n\n    return read;\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public BaseOutputReader(@NotNull Reader reader) {\n    this(reader, null);\n  }","id":69563,"modified_method":"public BaseOutputReader(@NotNull Reader reader) {\n    this(reader, new Options());\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public BaseOutputReader(@NotNull Reader reader, SleepingPolicy sleepingPolicy) {\n    super(sleepingPolicy);\n    if (sleepingPolicy == SleepingPolicy.BLOCKING && !(reader instanceof BaseInputStreamReader)) {\n      throw new IllegalArgumentException(\"Blocking policy can be used only with BaseInputStreamReader, that doesn't lock on close\");\n    }\n    myReader = reader;\n  }","id":69564,"modified_method":"/** @deprecated use {@link #BaseOutputReader(Reader, Options)} (to be removed in IDEA 18) */\n  @SuppressWarnings(\"unused\")\n  public BaseOutputReader(@NotNull Reader reader, @Nullable SleepingPolicy policy) {\n    this(reader, Options.withPolicy(policy));\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void sendLine(@NotNull StringBuilder line) {\n    onTextAvailable(line.toString());\n    line.setLength(0);\n  }","id":69565,"modified_method":"private void sendText(@NotNull StringBuilder line) {\n    onTextAvailable(line.toString());\n    line.setLength(0);\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Test(timeout = 30000)\n  public void testNonBlockingRead() throws Exception {\n    doReadTest(BaseDataReader.SleepingPolicy.SIMPLE, false);\n  }","id":69566,"modified_method":"@Test(timeout = 30000)\n  public void testNonBlockingRead() throws Exception {\n    List<String> lines = readLines(BaseDataReader.SleepingPolicy.SIMPLE, true, true, true);\n    assertThat(lines.size()).isBetween(5, 7);\n    assertThat(lines).startsWith(TEST_DATA[0], TEST_DATA[1], TEST_DATA[2]).endsWith(TEST_DATA[4]);\n    assertThat(StringUtil.join(lines, \"\")).isEqualTo(StringUtil.join(Arrays.asList(TEST_DATA), \"\"));\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doReadTest(BaseDataReader.SleepingPolicy policy, boolean checkLines) throws Exception {\n    Process process = launchTest(\"data\");\n    TestOutputReader reader = new TestOutputReader(process.getInputStream(), policy);\n\n    process.waitFor();\n    reader.stop();\n    reader.waitFor();\n\n    assertEquals(0, process.exitValue());\n    if (checkLines) {\n      assertEquals(Arrays.asList(TEST_DATA), reader.myLines);\n    }\n    else {\n      assertThat(reader.myLines.size()).isGreaterThanOrEqualTo(TEST_DATA.length);\n      assertThat(StringUtil.join(reader.myLines, \"\")).isEqualTo(StringUtil.join(Arrays.asList(TEST_DATA), \"\"));\n    }\n  }","id":69567,"modified_method":"private List<String> readLines(BaseDataReader.SleepingPolicy policy, boolean split, boolean incomplete, boolean separators) throws Exception {\n    Process process = launchTest(\"data\");\n    TestOutputReader reader = new TestOutputReader(process.getInputStream(), new BaseOutputReader.Options() {\n      @Override public BaseDataReader.SleepingPolicy policy() { return policy; }\n      @Override public boolean splitToLines() { return split; }\n      @Override public boolean sendIncompleteLines() { return incomplete; }\n      @Override public boolean withSeparators() { return separators; }\n    });\n\n    process.waitFor();\n    reader.stop();\n    reader.waitFor();\n\n    assertEquals(0, process.exitValue());\n\n    return reader.myLines;\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void doStopTest(BaseDataReader.SleepingPolicy policy) throws Exception {\n    Process process = launchTest(\"sleep\");\n    TestOutputReader reader = new TestOutputReader(process.getInputStream(), policy);\n\n    try {\n      reader.stop();\n      reader.waitFor();\n    }\n    finally {\n      process.destroy();\n      process.waitFor();\n    }\n  }","id":69568,"modified_method":"private void doStopTest(BaseDataReader.SleepingPolicy policy) throws Exception {\n    Process process = launchTest(\"sleep\");\n    TestOutputReader reader = new TestOutputReader(process.getInputStream(), BaseOutputReader.Options.withPolicy(policy));\n\n    try {\n      reader.stop();\n      reader.waitFor();\n    }\n    finally {\n      process.destroy();\n      process.waitFor();\n    }\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private TestOutputReader(InputStream stream, SleepingPolicy sleepingPolicy) {\n      super(stream, null, sleepingPolicy);\n      start(BaseOutputReaderTest.class.getSimpleName());\n    }","id":69569,"modified_method":"private TestOutputReader(InputStream stream, BaseOutputReader.Options options) {\n      super(stream, null, options);\n      start(BaseOutputReaderTest.class.getSimpleName());\n    }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Test(timeout = 30000)\n  public void testBlockingRead() throws Exception {\n    doReadTest(BaseDataReader.SleepingPolicy.BLOCKING, true);\n  }","id":69570,"modified_method":"@Test(timeout = 30000)\n  public void testBlockingRead() throws Exception {\n    List<String> lines = readLines(BaseDataReader.SleepingPolicy.BLOCKING, true, true, true);\n    assertThat(lines.size()).isBetween(5, 7);\n    assertThat(lines).startsWith(TEST_DATA[0], TEST_DATA[1], TEST_DATA[2]).endsWith(TEST_DATA[4]);\n    assertThat(StringUtil.join(lines, \"\")).isEqualTo(StringUtil.join(Arrays.asList(TEST_DATA), \"\"));\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Process launchTest(String mode) throws Exception {\n    String java = System.getProperty(\"java.home\") + (SystemInfo.isWindows ? \"\\\\bin\\\\java.exe\" : \"/bin/java\");\n\n    String className = BaseOutputReaderTest.class.getName();\n    URL url = getClass().getClassLoader().getResource(className.replace('.', '/') + \".class\");\n    assertNotNull(url);\n    File dir = new File(url.toURI());\n    for (int i = 0; i < StringUtil.countChars(className, '.') + 1; i++) dir = dir.getParentFile();\n\n    String[] cmd = {java, \"-cp\", dir.getPath(), className, mode};\n    return new ProcessBuilder(cmd).redirectErrorStream(true).start();\n  }","id":69571,"modified_method":"private Process launchTest(String mode) throws Exception {\n    String java = System.getProperty(\"java.home\") + (SystemInfo.isWindows ? \"\\\\bin\\\\java.exe\" : \"/bin/java\");\n\n    String className = BaseOutputReaderTest.Runner.class.getName();\n    URL url = getClass().getClassLoader().getResource(className.replace('.', '/') + \".class\");\n    assertNotNull(url);\n    File dir = new File(url.toURI());\n    for (int i = 0; i < StringUtil.countChars(className, '.') + 1; i++) dir = dir.getParentFile();\n\n    String[] cmd = {java, \"-cp\", dir.getPath(), className, mode};\n    return new ProcessBuilder(cmd).redirectErrorStream(true).start();\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public OutputReader(@NotNull InputStream inputStream,\n                      @Nullable Charset charset,\n                      @Nullable SleepingPolicy sleepingPolicy,\n                      @NotNull String presentableName) {\n    super(inputStream, charset, sleepingPolicy);\n    start(presentableName);\n  }","id":69572,"modified_method":"public OutputReader(@NotNull InputStream stream, @Nullable Charset charset, @Nullable SleepingPolicy policy, @NotNull String name) {\n    super(stream, charset, Options.withPolicy(policy));\n    start(name);\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public OutputReader(@NotNull InputStream inputStream, @Nullable Charset charset, @NotNull String presentableName) {\n    super(inputStream, charset);\n    start(presentableName);\n  }","id":69573,"modified_method":"public OutputReader(@NotNull InputStream stream, @Nullable Charset charset, @NotNull String name) {\n    super(stream, charset);\n    start(name);\n  }","commit_id":"08cd13316da935a433a41782ab56f5d6cb7d5f3e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void flushRecords(boolean shouldWait) {\n        try {\n            // zero copy, drain the manager queue directly\n            Queue<LogRecord> records = _manager.getQueue();\n            if (records == null) return;\n            if (!records.isEmpty()) {\n                LogRecord rec;\n                while ((rec = records.poll()) != null) {\n                    writeRecord(rec);\n                }\n                try {\n                    if (_currentOut != null)\n                        _currentOut.flush();\n                } catch (IOException ioe) {\n                    if (_write && ++_diskFullMessageCount < MAX_DISKFULL_MESSAGES)\n                        System.err.println(\"Error writing the router log - disk full? \" + ioe);\n                }\n            }\n        } catch (Throwable t) {\n            t.printStackTrace();\n        } finally {\n            if (shouldWait) {\n                try { \n                    synchronized (this) {\n                        this.wait(FLUSH_INTERVAL); \n                    }\n                } catch (InterruptedException ie) { // nop\n                }\n            }\n        }\n    }","id":69574,"modified_method":"public void flushRecords(boolean shouldWait) {\n        try {\n            // zero copy, drain the manager queue directly\n            Queue<LogRecord> records = _manager.getQueue();\n            if (records == null) return;\n            if (!records.isEmpty()) {\n                LogRecord last = null;\n                LogRecord rec;\n                int dupCount = 0;\n                while ((rec = records.poll()) != null) {\n                    if (rec.equals(last)) {\n                        dupCount++;\n                    } else {\n                        if (dupCount > 0) {\n                            if (dupCount == 1)\n                                writeRecord(\"*** 1 similar message omitted\\n\");\n                            else\n                                writeRecord(\"*** \" + dupCount + \" similar messages omitted\\n\");\n                            dupCount = 0;\n                        }\n                        last = rec;\n                        writeRecord(rec);\n                    }\n                }\n                if (dupCount == 1)\n                    writeRecord(\"*** 1 similar message omitted\\n\");\n                else if (dupCount > 0)\n                    writeRecord(\"*** \" + dupCount + \" similar messages omitted\\n\");\n                try {\n                    if (_currentOut != null)\n                        _currentOut.flush();\n                } catch (IOException ioe) {\n                    if (_write && ++_diskFullMessageCount < MAX_DISKFULL_MESSAGES)\n                        System.err.println(\"Error writing the router log - disk full? \" + ioe);\n                }\n            }\n        } catch (Throwable t) {\n            t.printStackTrace();\n        } finally {\n            if (shouldWait) {\n                try { \n                    synchronized (this) {\n                        this.wait(FLUSH_INTERVAL); \n                    }\n                } catch (InterruptedException ie) { // nop\n                }\n            }\n        }\n    }","commit_id":"3c95f0b66bc943124eafa1724291419ce34310ea","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    final String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: document/<database>/<record-id>[/fetchPlan]\");\r\n\r\n    final String fetchPlan = urlParts.length > 3 ? urlParts[3] : null;\r\n\r\n    iRequest.data.commandInfo = \"Load document\";\r\n\r\n    final ORecord<?> rec;\r\n\r\n    final int parametersPos = urlParts[2].indexOf('?');\r\n    final String rid = parametersPos > -1 ? urlParts[2].substring(0, parametersPos) : urlParts[2];\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      rec = db.load(new ORecordId(rid), fetchPlan);\r\n      if (rec == null)\r\n        iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, \"Not Found\", OHttpUtils.CONTENT_JSON, \"Record with id '\" + urlParts[2]\r\n            + \"' was not found.\", null);\r\n      else\r\n        iResponse.writeRecord(rec, fetchPlan, null);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    return false;\r\n  }","id":69575,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    final String[] urlParts = checkSyntax(iRequest.url, 3, \"Syntax error: document/<database>/<record-id>[/fetchPlan]\");\r\n\r\n    final String fetchPlan = urlParts.length > 3 ? urlParts[3] : null;\r\n\r\n    iRequest.data.commandInfo = \"Load document\";\r\n\r\n    final ORecord<?> rec;\r\n\r\n    final int parametersPos = urlParts[2].indexOf('?');\r\n    final String rid = parametersPos > -1 ? urlParts[2].substring(0, parametersPos) : urlParts[2];\r\n\r\n    try {\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n\r\n      rec = db.load(new ORecordId(rid), fetchPlan);\r\n      if (rec == null)\r\n        iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, \"Not Found\", OHttpUtils.CONTENT_JSON, \"Record with id '\" + urlParts[2]\r\n            + \"' was not found.\", null);\r\n      else if (iRequest.httpMethod.equals(\"HEAD\"))\r\n        // JUST SEND HTTP CODE 200\r\n        iResponse.send(OHttpUtils.STATUS_OK_CODE, OHttpUtils.STATUS_OK_DESCRIPTION, null, null, null);\r\n      else\r\n        // SEND THE DOCUMENT BACK\r\n        iResponse.writeRecord(rec, fetchPlan, null);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    return false;\r\n  }","commit_id":"fafccd810bd127473892945bc7b159955f2507df","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    final String[] urlParts = checkSyntax(iRequest.url, 4,\r\n        \"Syntax error: documentbyclass/<database>/<class-name>/<record-position>[/fetchPlan]\");\r\n\r\n    final String fetchPlan = urlParts.length > 4 ? urlParts[4] : null;\r\n\r\n    iRequest.data.commandInfo = \"Load document\";\r\n\r\n    final ORecord<?> rec;\r\n    try {\r\n\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n      if (db.getMetadata().getSchema().getClass(urlParts[2]) == null) {\r\n        throw new IllegalArgumentException(\"Invalid class '\" + urlParts[2] + \"'\");\r\n      }\r\n      final String rid = db.getClusterIdByName(urlParts[2]) + \":\" + urlParts[3];\r\n      rec = db.load(new ORecordId(rid), fetchPlan);\r\n\r\n      if (rec == null)\r\n        iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, \"Not Found\", OHttpUtils.CONTENT_JSON, \"Record with id '\" + rid\r\n            + \"' was not found.\", null);\r\n      else\r\n        iResponse.writeRecord(rec, fetchPlan, null);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    return false;\r\n  }","id":69576,"modified_method":"@Override\r\n  public boolean execute(final OHttpRequest iRequest, OHttpResponse iResponse) throws Exception {\r\n    ODatabaseDocumentTx db = null;\r\n\r\n    final String[] urlParts = checkSyntax(iRequest.url, 4,\r\n        \"Syntax error: documentbyclass/<database>/<class-name>/<record-position>[/fetchPlan]\");\r\n\r\n    final String fetchPlan = urlParts.length > 4 ? urlParts[4] : null;\r\n\r\n    iRequest.data.commandInfo = \"Load document\";\r\n\r\n    final ORecord<?> rec;\r\n    try {\r\n\r\n      db = getProfiledDatabaseInstance(iRequest);\r\n      if (db.getMetadata().getSchema().getClass(urlParts[2]) == null) {\r\n        throw new IllegalArgumentException(\"Invalid class '\" + urlParts[2] + \"'\");\r\n      }\r\n      final String rid = db.getClusterIdByName(urlParts[2]) + \":\" + urlParts[3];\r\n      rec = db.load(new ORecordId(rid), fetchPlan);\r\n\r\n      if (rec == null)\r\n        iResponse.send(OHttpUtils.STATUS_NOTFOUND_CODE, \"Not Found\", OHttpUtils.CONTENT_JSON, \"Record with id '\" + rid\r\n            + \"' was not found.\", null);\r\n      else if (iRequest.httpMethod.equals(\"HEAD\"))\r\n        // JUST SEND HTTP CODE 200\r\n        iResponse.send(OHttpUtils.STATUS_OK_CODE, OHttpUtils.STATUS_OK_DESCRIPTION, null, null, null);\r\n      else\r\n        // SEND THE DOCUMENT BACK\r\n        iResponse.writeRecord(rec, fetchPlan, null);\r\n\r\n    } finally {\r\n      if (db != null)\r\n        db.close();\r\n    }\r\n\r\n    return false;\r\n  }","commit_id":"fafccd810bd127473892945bc7b159955f2507df","url":"https://github.com/orientechnologies/orientdb"},{"original_method":"public void setStaticContextRoot(String contextRoot) {\n        this.contentContextBase = contextRoot;\n    }","id":69577,"modified_method":"public void setStaticContextRoot(String contextRoot) {\n        this.contentContextPath = contextRoot;\n    }","commit_id":"75c8d1bc52d5c42239b8ee2f25c0fa297c24e7d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void addPackages(String packageNames) {\n        if (packageNames == null) {\n            return;\n        }\n\n        jerseyServletHolder.setInitParameter(\"com.sun.jersey.config.property.packages\", packageNames);\n\n    }","id":69578,"modified_method":"public void setPackages(String packageNames) {\n        if (packageNames == null) {\n            return;\n        }\n\n        jerseyServletHolder.setInitParameter(\"com.sun.jersey.config.property.packages\", packageNames);\n    }","commit_id":"75c8d1bc52d5c42239b8ee2f25c0fa297c24e7d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void start() {\n        jetty = new Server(jettyPort);\n        jetty.setStopAtShutdown(true);\n\n        URL staticUrl = this.getClass().getClassLoader().getResource(contentResourcePath);\n        String urlString = staticUrl.toExternalForm();\n\n        WebAppContext staticContentContext = new WebAppContext( urlString, contentContextBase );\n\n        HandlerList handlers = new HandlerList();\n        handlers.setHandlers(new Handler[] { staticContentContext, new DefaultHandler() });\n\n        jetty.setHandler( handlers );\n\n        try {\n            jetty.start();\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }","id":69579,"modified_method":"public void start() {\n        jetty = new Server(jettyPort);\n        jetty.setStopAtShutdown(true);\n\n        try {\n            final WebAppContext webadmin = new WebAppContext();\n            webadmin.setServer(jetty);\n            webadmin.setContextPath(\"/\" + contentContextPath);\n            URL url = getClass().getClassLoader().getResource(contentResourcePath).toURI().toURL();\n            final Resource resource = new FileResource(url);\n            webadmin.setBaseResource(resource);\n            jetty.addHandler(webadmin);\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n\n        Context jerseyContext = new Context(jetty, \"/\");\n        jerseyContext.addServlet(jerseyServletHolder, \"/*\");\n\n        try {\n            jetty.start();\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"75c8d1bc52d5c42239b8ee2f25c0fa297c24e7d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public URI getWelcomeUri() throws URISyntaxException {\n        if(contentContextBase == \"\") {\n            return new URI(getBaseUri().toString() + \"welcome.html\");\n        } else {\n            return new URI(getBaseUri().toString() + this.contentContextBase + \"/\" + \"welcome.html\");\n        }\n    }","id":69580,"modified_method":"public URI getWelcomeUri() throws URISyntaxException {\n        if (contentContextPath == \"\") {\n            return new URI(getBaseUri().toString() + \"welcome.html\");\n        } else {\n            return new URI(getBaseUri().toString() + this.contentContextPath + \"/\" + \"welcome.html\");\n        }\n    }","commit_id":"75c8d1bc52d5c42239b8ee2f25c0fa297c24e7d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldHostWelcomePageOnStartup() throws Exception {\n        \n        WebServer ws = new Jetty6WebServer();\n        int portNo = 5555;//WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.start();\n        \n        \n        \n        ClientResponse response = WebTestUtils.sendGetRequestTo(ws.getWelcomeUri());\n        \n        System.out.println(response.getEntity(String.class));\n        \n        ws.shutdown();\n        \n        assertThat(response.getStatus(), greaterThan(199));\n        assertThat(response.getStatus(), lessThan(308));\n        assertThat(response.getEntity(String.class), not(containsString(\"Directory:\")));\n    }","id":69581,"modified_method":"@Test\n    public void shouldHostWelcomePageOnStartup() throws Exception {\n        \n        WebServer ws = new Jetty6WebServer();\n        int portNo = WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.start();\n        ClientResponse response = WebTestUtils.sendGetRequestTo(ws.getWelcomeUri());\n        \n        \n        ws.shutdown();\n        \n        assertThat(response.getStatus(), greaterThan(199));\n        assertThat(response.getStatus(), lessThan(308));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n        assertThat(response.getEntity(String.class), not(containsString(\"Directory:\")));\n    }","commit_id":"75c8d1bc52d5c42239b8ee2f25c0fa297c24e7d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldMountASimpleJAXRSApp() throws Exception {\n        WebServer ws = new Jetty6WebServer();\n        int portNo = WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.start();\n     \n        ws.addPackages(getDummyWebResourcePackage());\n        \n        ClientResponse response = Client.create().resource(\"http://localhost:\" + portNo + HelloWorldWebResource.ROOT_PATH).entity(\"Bertrand Russell\").type(\"text/plain\").accept(\"text/plain\").post(ClientResponse.class);\n        \n        ws.shutdown();\n        \n        assertEquals(200, response.getStatus());\n        assertThat(response.getEntity(String.class), containsString(\"hello, Bertrand Russell\"));\n    }","id":69582,"modified_method":"@Test\n    public void shouldMountASimpleJAXRSApp() throws Exception {\n        WebServer ws = new Jetty6WebServer();\n        int portNo = WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.setPackages(getDummyWebResourcePackage());\n        ws.start();\n     \n        \n        ClientResponse response = Client.create().resource(\"http://localhost:\" + portNo + HelloWorldWebResource.ROOT_PATH).entity(\"Bertrand Russell\").type(\"text/plain\").accept(\"text/plain\").post(ClientResponse.class);\n        \n        ws.shutdown();\n        \n        assertEquals(200, response.getStatus());\n        assertThat(response.getEntity(String.class), containsString(\"hello, Bertrand Russell\"));\n    }","commit_id":"75c8d1bc52d5c42239b8ee2f25c0fa297c24e7d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public NeoServer() {\n        StartupHealthCheck healthCheck = new StartupHealthCheck(new ConfigFileMustBePresentRule());\n        if(!healthCheck.run()) {\n            throw new StartupHealthCheckFailedException(\"Startup healthcheck failed, server is not properly configured. Check logs for details.\");\n        }\n        \n        Validator validator = new Validator(new DatabaseLocationMustBeSpecifiedRule());\n        this.configurator = new Configurator(validator, getConfigFile());\n        this.webServer = new Jetty6WebServer();\n        this.database = new Database(configurator.configuration().getString(DATABASE_LOCATION));\n    }","id":69583,"modified_method":"public NeoServer() {\n        StartupHealthCheck healthCheck = new StartupHealthCheck(new ConfigFileMustBePresentRule());\n        if(!healthCheck.run()) {\n            throw new StartupHealthCheckFailedException(\"Startup healthcheck failed, server is not properly configured. Check logs for details.\");\n        }\n        \n        this.configurator = new Configurator(new Validator(new DatabaseLocationMustBeSpecifiedRule()), getConfigFile());\n        this.webServer = new Jetty6WebServer();\n        this.database = new Database(configurator.configuration().getString(DATABASE_LOCATION));\n    }","commit_id":"75c8d1bc52d5c42239b8ee2f25c0fa297c24e7d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Integer start(String[] args) {\n        try {\n            webServer.setPort(configurator.configuration().getInt(WEBSERVER_PORT, DEFAULT_WEBSERVER_PORT));\n            webServer.addPackages(convertPropertiesToSingleString(configurator.configuration().getStringArray(WEBSERVICE_PACKAGES)));\n            webServer.start();\n            \n            log.info(\"Started Neo Server on port [%s]\", webServer.getPort());\n            \n            return 0;\n        } catch (Exception e) {\n            log.error(\"Failed to start Neo Server on port [%s]\", webServer.getPort());\n            return 1;\n        }\n    }","id":69584,"modified_method":"public Integer start(String[] args) {\n        try {\n            webServer.setPort(configurator.configuration().getInt(WEBSERVER_PORT, DEFAULT_WEBSERVER_PORT));\n            webServer.setPackages(convertPropertiesToSingleString(configurator.configuration().getStringArray(WEBSERVICE_PACKAGES)));\n            webServer.start();\n            \n            log.info(\"Started Neo Server on port [%s]\", webServer.getPort());\n            \n            return 0;\n        } catch (Exception e) {\n            log.error(\"Failed to start Neo Server on port [%s]\", webServer.getPort());\n            return 1;\n        }\n    }","commit_id":"75c8d1bc52d5c42239b8ee2f25c0fa297c24e7d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldDefaultToSensiblePortIfNoneSpecifiedInConfig() throws Exception {\n        Configurator config = configWithoutWebServerPort();\n\n        Database database = database();\n        WebServer webServer = new Jetty6WebServer();\n        webServer.addPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(config, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + DEFAULT_PORT + \"/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n    }","id":69585,"modified_method":"@Test\n    public void shouldDefaultToSensiblePortIfNoneSpecifiedInConfig() throws Exception {\n        Configurator config = configWithoutWebServerPort();\n\n        Database database = database();\n        WebServer webServer = new Jetty6WebServer();\n        webServer.setPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(config, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + DEFAULT_PORT + \"/webadmin/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n    }","commit_id":"75c8d1bc52d5c42239b8ee2f25c0fa297c24e7d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void serverShouldProvideAWelcomePage() {\n        Configurator configurator = configurator();\n        Database database = database();\n        WebServer webServer = webServer();\n        webServer.addPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(configurator, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + webServer.getPort() + \"/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat( response.getHeaders().getFirst(\"Content-Type\"), containsString(\"html\"));\n\n        server.stop();\n    }","id":69586,"modified_method":"@Test\n    public void serverShouldProvideAWelcomePage() {\n        Configurator configurator = configurator();\n        Database database = database();\n        WebServer webServer = webServer();\n        webServer.setPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(configurator, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + webServer.getPort() + \"/webadmin/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat( response.getHeaders().getFirst(\"Content-Type\"), containsString(\"html\"));\n\n        server.stop();\n    }","commit_id":"75c8d1bc52d5c42239b8ee2f25c0fa297c24e7d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"private WebServer webServer() {\n        WebServer webServer = new Jetty6WebServer();\n        webServer.addPackages(\"org.neo4j.server.web\");\n        return webServer;\n    }","id":69587,"modified_method":"private WebServer webServer() {\n        WebServer webServer = new Jetty6WebServer();\n        webServer.setPackages(\"org.neo4j.server.web\");\n        return webServer;\n    }","commit_id":"75c8d1bc52d5c42239b8ee2f25c0fa297c24e7d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void whenServerIsStartedItShouldBringUpAWebServerWithWelcomePage() throws Exception {\n        NeoServer server = server();\n        server.start(null);\n\n        //ClientResponse response = Client.create().resource(server.webServer().getWelcomeUri()).get(ClientResponse.class);\n        ClientResponse response = Client.create().resource(\"http://localhost:7474/\").get(ClientResponse.class);\n\n        assertEquals(200, response.getStatus());\n        assertThat(response.getHeaders().getFirst(\"Content-Type\"), containsString(\"text/html\"));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n\n        server.stop();\n    }","id":69588,"modified_method":"@Test\n    public void whenServerIsStartedItShouldBringUpAWebServerWithWelcomePage() throws Exception {\n        NeoServer server = server();\n        server.start(null);\n\n        ClientResponse response = Client.create().resource(server.webServer().getWelcomeUri()).get(ClientResponse.class);\n        \n        assertEquals(200, response.getStatus());\n        assertThat(response.getHeaders().getFirst(\"Content-Type\"), containsString(\"text/html\"));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n\n        server.stop();\n    }","commit_id":"75c8d1bc52d5c42239b8ee2f25c0fa297c24e7d0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public URI getWelcomeUri() throws URISyntaxException {\n        if(contentContextBase == \"\") {\n            return new URI(getBaseUri().toString() + \"welcome.html\");\n        } else {\n            return new URI(getBaseUri().toString() + this.contentContextBase + \"/\" + \"welcome.html\");\n        }\n    }","id":69589,"modified_method":"public URI getWelcomeUri() throws URISyntaxException {\n        if (contentContextPath == \"\") {\n            return new URI(getBaseUri().toString() + \"welcome.html\");\n        } else {\n            return new URI(getBaseUri().toString() + this.contentContextPath + \"/\" + \"welcome.html\");\n        }\n    }","commit_id":"24ed3a6be4718c13f8f95969586c8a7e987d1364","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void setStaticContextRoot(String contextRoot) {\n        this.contentContextBase = contextRoot;\n    }","id":69590,"modified_method":"public void setStaticContextRoot(String contextRoot) {\n        this.contentContextPath = contextRoot;\n    }","commit_id":"24ed3a6be4718c13f8f95969586c8a7e987d1364","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void addPackages(String packageNames) {\n        if (packageNames == null) {\n            return;\n        }\n\n        jerseyServletHolder.setInitParameter(\"com.sun.jersey.config.property.packages\", packageNames);\n\n    }","id":69591,"modified_method":"public void setPackages(String packageNames) {\n        if (packageNames == null) {\n            return;\n        }\n\n        jerseyServletHolder.setInitParameter(\"com.sun.jersey.config.property.packages\", packageNames);\n    }","commit_id":"24ed3a6be4718c13f8f95969586c8a7e987d1364","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void start() {\n        jetty = new Server(jettyPort);\n        jetty.setStopAtShutdown(true);\n\n        URL staticUrl = this.getClass().getClassLoader().getResource(contentResourcePath);\n        String urlString = staticUrl.toExternalForm();\n\n        WebAppContext staticContentContext = new WebAppContext( urlString, contentContextBase );\n\n        HandlerList handlers = new HandlerList();\n        handlers.setHandlers(new Handler[] { staticContentContext, new DefaultHandler() });\n\n        jetty.setHandler( handlers );\n\n        try {\n            jetty.start();\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }","id":69592,"modified_method":"public void start() {\n        jetty = new Server(jettyPort);\n        jetty.setStopAtShutdown(true);\n\n        try {\n            final WebAppContext webadmin = new WebAppContext();\n            webadmin.setServer(jetty);\n            webadmin.setContextPath(\"/\" + contentContextPath);\n            URL url = getClass().getClassLoader().getResource(contentResourcePath).toURI().toURL();\n            final Resource resource = new FileResource(url);\n            webadmin.setBaseResource(resource);\n            jetty.addHandler(webadmin);\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n\n        Context jerseyContext = new Context(jetty, \"/\");\n        jerseyContext.addServlet(jerseyServletHolder, \"/*\");\n\n        try {\n            jetty.start();\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"24ed3a6be4718c13f8f95969586c8a7e987d1364","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldHostWelcomePageOnStartup() throws Exception {\n        \n        WebServer ws = new Jetty6WebServer();\n        int portNo = 5555;//WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.start();\n        \n        \n        \n        ClientResponse response = WebTestUtils.sendGetRequestTo(ws.getWelcomeUri());\n        \n        System.out.println(response.getEntity(String.class));\n        \n        ws.shutdown();\n        \n        assertThat(response.getStatus(), greaterThan(199));\n        assertThat(response.getStatus(), lessThan(308));\n        assertThat(response.getEntity(String.class), not(containsString(\"Directory:\")));\n    }","id":69593,"modified_method":"@Test\n    public void shouldHostWelcomePageOnStartup() throws Exception {\n        \n        WebServer ws = new Jetty6WebServer();\n        int portNo = WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.start();\n        ClientResponse response = WebTestUtils.sendGetRequestTo(ws.getWelcomeUri());\n        \n        \n        ws.shutdown();\n        \n        assertThat(response.getStatus(), greaterThan(199));\n        assertThat(response.getStatus(), lessThan(308));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n        assertThat(response.getEntity(String.class), not(containsString(\"Directory:\")));\n    }","commit_id":"24ed3a6be4718c13f8f95969586c8a7e987d1364","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldMountASimpleJAXRSApp() throws Exception {\n        WebServer ws = new Jetty6WebServer();\n        int portNo = WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.start();\n     \n        ws.addPackages(getDummyWebResourcePackage());\n        \n        ClientResponse response = Client.create().resource(\"http://localhost:\" + portNo + HelloWorldWebResource.ROOT_PATH).entity(\"Bertrand Russell\").type(\"text/plain\").accept(\"text/plain\").post(ClientResponse.class);\n        \n        ws.shutdown();\n        \n        assertEquals(200, response.getStatus());\n        assertThat(response.getEntity(String.class), containsString(\"hello, Bertrand Russell\"));\n    }","id":69594,"modified_method":"@Test\n    public void shouldMountASimpleJAXRSApp() throws Exception {\n        WebServer ws = new Jetty6WebServer();\n        int portNo = WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.setPackages(getDummyWebResourcePackage());\n        ws.start();\n     \n        \n        ClientResponse response = Client.create().resource(\"http://localhost:\" + portNo + HelloWorldWebResource.ROOT_PATH).entity(\"Bertrand Russell\").type(\"text/plain\").accept(\"text/plain\").post(ClientResponse.class);\n        \n        ws.shutdown();\n        \n        assertEquals(200, response.getStatus());\n        assertThat(response.getEntity(String.class), containsString(\"hello, Bertrand Russell\"));\n    }","commit_id":"24ed3a6be4718c13f8f95969586c8a7e987d1364","url":"https://github.com/neo4j/neo4j"},{"original_method":"public NeoServer() {\n        StartupHealthCheck healthCheck = new StartupHealthCheck(new ConfigFileMustBePresentRule());\n        if(!healthCheck.run()) {\n            throw new StartupHealthCheckFailedException(\"Startup healthcheck failed, server is not properly configured. Check logs for details.\");\n        }\n        \n        Validator validator = new Validator(new DatabaseLocationMustBeSpecifiedRule());\n        this.configurator = new Configurator(validator, getConfigFile());\n        this.webServer = new Jetty6WebServer();\n        this.database = new Database(configurator.configuration().getString(DATABASE_LOCATION));\n    }","id":69595,"modified_method":"public NeoServer() {\n        StartupHealthCheck healthCheck = new StartupHealthCheck(new ConfigFileMustBePresentRule());\n        if(!healthCheck.run()) {\n            throw new StartupHealthCheckFailedException(\"Startup healthcheck failed, server is not properly configured. Check logs for details.\");\n        }\n        \n        this.configurator = new Configurator(new Validator(new DatabaseLocationMustBeSpecifiedRule()), getConfigFile());\n        this.webServer = new Jetty6WebServer();\n        this.database = new Database(configurator.configuration().getString(DATABASE_LOCATION));\n    }","commit_id":"24ed3a6be4718c13f8f95969586c8a7e987d1364","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Integer start(String[] args) {\n        try {\n            webServer.setPort(configurator.configuration().getInt(WEBSERVER_PORT, DEFAULT_WEBSERVER_PORT));\n            webServer.addPackages(convertPropertiesToSingleString(configurator.configuration().getStringArray(WEBSERVICE_PACKAGES)));\n            webServer.start();\n            \n            log.info(\"Started Neo Server on port [%s]\", webServer.getPort());\n            \n            return 0;\n        } catch (Exception e) {\n            log.error(\"Failed to start Neo Server on port [%s]\", webServer.getPort());\n            return 1;\n        }\n    }","id":69596,"modified_method":"public Integer start(String[] args) {\n        try {\n            webServer.setPort(configurator.configuration().getInt(WEBSERVER_PORT, DEFAULT_WEBSERVER_PORT));\n            webServer.setPackages(convertPropertiesToSingleString(configurator.configuration().getStringArray(WEBSERVICE_PACKAGES)));\n            webServer.start();\n            \n            log.info(\"Started Neo Server on port [%s]\", webServer.getPort());\n            \n            return 0;\n        } catch (Exception e) {\n            log.error(\"Failed to start Neo Server on port [%s]\", webServer.getPort());\n            return 1;\n        }\n    }","commit_id":"24ed3a6be4718c13f8f95969586c8a7e987d1364","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void serverShouldProvideAWelcomePage() {\n        Configurator configurator = configurator();\n        Database database = database();\n        WebServer webServer = webServer();\n        webServer.addPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(configurator, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + webServer.getPort() + \"/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat( response.getHeaders().getFirst(\"Content-Type\"), containsString(\"html\"));\n\n        server.stop();\n    }","id":69597,"modified_method":"@Test\n    public void serverShouldProvideAWelcomePage() {\n        Configurator configurator = configurator();\n        Database database = database();\n        WebServer webServer = webServer();\n        webServer.setPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(configurator, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + webServer.getPort() + \"/webadmin/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat( response.getHeaders().getFirst(\"Content-Type\"), containsString(\"html\"));\n\n        server.stop();\n    }","commit_id":"24ed3a6be4718c13f8f95969586c8a7e987d1364","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldDefaultToSensiblePortIfNoneSpecifiedInConfig() throws Exception {\n        Configurator config = configWithoutWebServerPort();\n\n        Database database = database();\n        WebServer webServer = new Jetty6WebServer();\n        webServer.addPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(config, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + DEFAULT_PORT + \"/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n    }","id":69598,"modified_method":"@Test\n    public void shouldDefaultToSensiblePortIfNoneSpecifiedInConfig() throws Exception {\n        Configurator config = configWithoutWebServerPort();\n\n        Database database = database();\n        WebServer webServer = new Jetty6WebServer();\n        webServer.setPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(config, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + DEFAULT_PORT + \"/webadmin/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n    }","commit_id":"24ed3a6be4718c13f8f95969586c8a7e987d1364","url":"https://github.com/neo4j/neo4j"},{"original_method":"private WebServer webServer() {\n        WebServer webServer = new Jetty6WebServer();\n        webServer.addPackages(\"org.neo4j.server.web\");\n        return webServer;\n    }","id":69599,"modified_method":"private WebServer webServer() {\n        WebServer webServer = new Jetty6WebServer();\n        webServer.setPackages(\"org.neo4j.server.web\");\n        return webServer;\n    }","commit_id":"24ed3a6be4718c13f8f95969586c8a7e987d1364","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void whenServerIsStartedItShouldBringUpAWebServerWithWelcomePage() throws Exception {\n        NeoServer server = server();\n        server.start(null);\n\n        //ClientResponse response = Client.create().resource(server.webServer().getWelcomeUri()).get(ClientResponse.class);\n        ClientResponse response = Client.create().resource(\"http://localhost:7474/\").get(ClientResponse.class);\n\n        assertEquals(200, response.getStatus());\n        assertThat(response.getHeaders().getFirst(\"Content-Type\"), containsString(\"text/html\"));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n\n        server.stop();\n    }","id":69600,"modified_method":"@Test\n    public void whenServerIsStartedItShouldBringUpAWebServerWithWelcomePage() throws Exception {\n        NeoServer server = server();\n        server.start(null);\n\n        ClientResponse response = Client.create().resource(server.webServer().getWelcomeUri()).get(ClientResponse.class);\n        \n        assertEquals(200, response.getStatus());\n        assertThat(response.getHeaders().getFirst(\"Content-Type\"), containsString(\"text/html\"));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n\n        server.stop();\n    }","commit_id":"24ed3a6be4718c13f8f95969586c8a7e987d1364","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void setStaticContextRoot(String contextRoot) {\n        this.contentContextBase = contextRoot;\n    }","id":69601,"modified_method":"public void setStaticContextRoot(String contextRoot) {\n        this.contentContextPath = contextRoot;\n    }","commit_id":"decf43236ec9d0dbe5c982e1268cbd2faeb0f8dd","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void start() {\n        jetty = new Server(jettyPort);\n        jetty.setStopAtShutdown(true);\n\n        URL staticUrl = this.getClass().getClassLoader().getResource(contentResourcePath);\n        String urlString = staticUrl.toExternalForm();\n\n        WebAppContext staticContentContext = new WebAppContext( urlString, contentContextBase );\n\n        HandlerList handlers = new HandlerList();\n        handlers.setHandlers(new Handler[] { staticContentContext, new DefaultHandler() });\n\n        jetty.setHandler( handlers );\n\n        try {\n            jetty.start();\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }","id":69602,"modified_method":"public void start() {\n        jetty = new Server(jettyPort);\n        jetty.setStopAtShutdown(true);\n\n        try {\n            final WebAppContext webadmin = new WebAppContext();\n            webadmin.setServer(jetty);\n            webadmin.setContextPath(\"/\" + contentContextPath);\n            URL url = getClass().getClassLoader().getResource(contentResourcePath).toURI().toURL();\n            final Resource resource = new FileResource(url);\n            webadmin.setBaseResource(resource);\n            jetty.addHandler(webadmin);\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n\n        Context jerseyContext = new Context(jetty, \"/\");\n        jerseyContext.addServlet(jerseyServletHolder, \"/*\");\n\n        try {\n            jetty.start();\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"decf43236ec9d0dbe5c982e1268cbd2faeb0f8dd","url":"https://github.com/neo4j/neo4j"},{"original_method":"public URI getWelcomeUri() throws URISyntaxException {\n        if(contentContextBase == \"\") {\n            return new URI(getBaseUri().toString() + \"welcome.html\");\n        } else {\n            return new URI(getBaseUri().toString() + this.contentContextBase + \"/\" + \"welcome.html\");\n        }\n    }","id":69603,"modified_method":"public URI getWelcomeUri() throws URISyntaxException {\n        if (contentContextPath == \"\") {\n            return new URI(getBaseUri().toString() + \"welcome.html\");\n        } else {\n            return new URI(getBaseUri().toString() + this.contentContextPath + \"/\" + \"welcome.html\");\n        }\n    }","commit_id":"decf43236ec9d0dbe5c982e1268cbd2faeb0f8dd","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void addPackages(String packageNames) {\n        if (packageNames == null) {\n            return;\n        }\n\n        jerseyServletHolder.setInitParameter(\"com.sun.jersey.config.property.packages\", packageNames);\n\n    }","id":69604,"modified_method":"public void setPackages(String packageNames) {\n        if (packageNames == null) {\n            return;\n        }\n\n        jerseyServletHolder.setInitParameter(\"com.sun.jersey.config.property.packages\", packageNames);\n    }","commit_id":"decf43236ec9d0dbe5c982e1268cbd2faeb0f8dd","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldHostWelcomePageOnStartup() throws Exception {\n        \n        WebServer ws = new Jetty6WebServer();\n        int portNo = 5555;//WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.start();\n        \n        \n        \n        ClientResponse response = WebTestUtils.sendGetRequestTo(ws.getWelcomeUri());\n        \n        System.out.println(response.getEntity(String.class));\n        \n        ws.shutdown();\n        \n        assertThat(response.getStatus(), greaterThan(199));\n        assertThat(response.getStatus(), lessThan(308));\n        assertThat(response.getEntity(String.class), not(containsString(\"Directory:\")));\n    }","id":69605,"modified_method":"@Test\n    public void shouldHostWelcomePageOnStartup() throws Exception {\n        \n        WebServer ws = new Jetty6WebServer();\n        int portNo = WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.start();\n        ClientResponse response = WebTestUtils.sendGetRequestTo(ws.getWelcomeUri());\n        \n        \n        ws.shutdown();\n        \n        assertThat(response.getStatus(), greaterThan(199));\n        assertThat(response.getStatus(), lessThan(308));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n        assertThat(response.getEntity(String.class), not(containsString(\"Directory:\")));\n    }","commit_id":"decf43236ec9d0dbe5c982e1268cbd2faeb0f8dd","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldMountASimpleJAXRSApp() throws Exception {\n        WebServer ws = new Jetty6WebServer();\n        int portNo = WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.start();\n     \n        ws.addPackages(getDummyWebResourcePackage());\n        \n        ClientResponse response = Client.create().resource(\"http://localhost:\" + portNo + HelloWorldWebResource.ROOT_PATH).entity(\"Bertrand Russell\").type(\"text/plain\").accept(\"text/plain\").post(ClientResponse.class);\n        \n        ws.shutdown();\n        \n        assertEquals(200, response.getStatus());\n        assertThat(response.getEntity(String.class), containsString(\"hello, Bertrand Russell\"));\n    }","id":69606,"modified_method":"@Test\n    public void shouldMountASimpleJAXRSApp() throws Exception {\n        WebServer ws = new Jetty6WebServer();\n        int portNo = WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.setPackages(getDummyWebResourcePackage());\n        ws.start();\n     \n        \n        ClientResponse response = Client.create().resource(\"http://localhost:\" + portNo + HelloWorldWebResource.ROOT_PATH).entity(\"Bertrand Russell\").type(\"text/plain\").accept(\"text/plain\").post(ClientResponse.class);\n        \n        ws.shutdown();\n        \n        assertEquals(200, response.getStatus());\n        assertThat(response.getEntity(String.class), containsString(\"hello, Bertrand Russell\"));\n    }","commit_id":"decf43236ec9d0dbe5c982e1268cbd2faeb0f8dd","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Integer start(String[] args) {\n        try {\n            webServer.setPort(configurator.configuration().getInt(WEBSERVER_PORT, DEFAULT_WEBSERVER_PORT));\n            webServer.addPackages(convertPropertiesToSingleString(configurator.configuration().getStringArray(WEBSERVICE_PACKAGES)));\n            webServer.start();\n            \n            log.info(\"Started Neo Server on port [%s]\", webServer.getPort());\n            \n            return 0;\n        } catch (Exception e) {\n            log.error(\"Failed to start Neo Server on port [%s]\", webServer.getPort());\n            return 1;\n        }\n    }","id":69607,"modified_method":"public Integer start(String[] args) {\n        try {\n            webServer.setPort(configurator.configuration().getInt(WEBSERVER_PORT, DEFAULT_WEBSERVER_PORT));\n            webServer.setPackages(convertPropertiesToSingleString(configurator.configuration().getStringArray(WEBSERVICE_PACKAGES)));\n            webServer.start();\n            \n            log.info(\"Started Neo Server on port [%s]\", webServer.getPort());\n            \n            return 0;\n        } catch (Exception e) {\n            log.error(\"Failed to start Neo Server on port [%s]\", webServer.getPort());\n            return 1;\n        }\n    }","commit_id":"decf43236ec9d0dbe5c982e1268cbd2faeb0f8dd","url":"https://github.com/neo4j/neo4j"},{"original_method":"public NeoServer() {\n        StartupHealthCheck healthCheck = new StartupHealthCheck(new ConfigFileMustBePresentRule());\n        if(!healthCheck.run()) {\n            throw new StartupHealthCheckFailedException(\"Startup healthcheck failed, server is not properly configured. Check logs for details.\");\n        }\n        \n        Validator validator = new Validator(new DatabaseLocationMustBeSpecifiedRule());\n        this.configurator = new Configurator(validator, getConfigFile());\n        this.webServer = new Jetty6WebServer();\n        this.database = new Database(configurator.configuration().getString(DATABASE_LOCATION));\n    }","id":69608,"modified_method":"public NeoServer() {\n        StartupHealthCheck healthCheck = new StartupHealthCheck(new ConfigFileMustBePresentRule());\n        if(!healthCheck.run()) {\n            throw new StartupHealthCheckFailedException(\"Startup healthcheck failed, server is not properly configured. Check logs for details.\");\n        }\n        \n        this.configurator = new Configurator(new Validator(new DatabaseLocationMustBeSpecifiedRule()), getConfigFile());\n        this.webServer = new Jetty6WebServer();\n        this.database = new Database(configurator.configuration().getString(DATABASE_LOCATION));\n    }","commit_id":"decf43236ec9d0dbe5c982e1268cbd2faeb0f8dd","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void serverShouldProvideAWelcomePage() {\n        Configurator configurator = configurator();\n        Database database = database();\n        WebServer webServer = webServer();\n        webServer.addPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(configurator, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + webServer.getPort() + \"/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat( response.getHeaders().getFirst(\"Content-Type\"), containsString(\"html\"));\n\n        server.stop();\n    }","id":69609,"modified_method":"@Test\n    public void serverShouldProvideAWelcomePage() {\n        Configurator configurator = configurator();\n        Database database = database();\n        WebServer webServer = webServer();\n        webServer.setPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(configurator, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + webServer.getPort() + \"/webadmin/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat( response.getHeaders().getFirst(\"Content-Type\"), containsString(\"html\"));\n\n        server.stop();\n    }","commit_id":"decf43236ec9d0dbe5c982e1268cbd2faeb0f8dd","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldDefaultToSensiblePortIfNoneSpecifiedInConfig() throws Exception {\n        Configurator config = configWithoutWebServerPort();\n\n        Database database = database();\n        WebServer webServer = new Jetty6WebServer();\n        webServer.addPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(config, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + DEFAULT_PORT + \"/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n    }","id":69610,"modified_method":"@Test\n    public void shouldDefaultToSensiblePortIfNoneSpecifiedInConfig() throws Exception {\n        Configurator config = configWithoutWebServerPort();\n\n        Database database = database();\n        WebServer webServer = new Jetty6WebServer();\n        webServer.setPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(config, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + DEFAULT_PORT + \"/webadmin/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n    }","commit_id":"decf43236ec9d0dbe5c982e1268cbd2faeb0f8dd","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void whenServerIsStartedItShouldBringUpAWebServerWithWelcomePage() throws Exception {\n        NeoServer server = server();\n        server.start(null);\n\n        //ClientResponse response = Client.create().resource(server.webServer().getWelcomeUri()).get(ClientResponse.class);\n        ClientResponse response = Client.create().resource(\"http://localhost:7474/\").get(ClientResponse.class);\n\n        assertEquals(200, response.getStatus());\n        assertThat(response.getHeaders().getFirst(\"Content-Type\"), containsString(\"text/html\"));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n\n        server.stop();\n    }","id":69611,"modified_method":"@Test\n    public void whenServerIsStartedItShouldBringUpAWebServerWithWelcomePage() throws Exception {\n        NeoServer server = server();\n        server.start(null);\n\n        ClientResponse response = Client.create().resource(server.webServer().getWelcomeUri()).get(ClientResponse.class);\n        \n        assertEquals(200, response.getStatus());\n        assertThat(response.getHeaders().getFirst(\"Content-Type\"), containsString(\"text/html\"));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n\n        server.stop();\n    }","commit_id":"decf43236ec9d0dbe5c982e1268cbd2faeb0f8dd","url":"https://github.com/neo4j/neo4j"},{"original_method":"private WebServer webServer() {\n        WebServer webServer = new Jetty6WebServer();\n        webServer.addPackages(\"org.neo4j.server.web\");\n        return webServer;\n    }","id":69612,"modified_method":"private WebServer webServer() {\n        WebServer webServer = new Jetty6WebServer();\n        webServer.setPackages(\"org.neo4j.server.web\");\n        return webServer;\n    }","commit_id":"decf43236ec9d0dbe5c982e1268cbd2faeb0f8dd","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void setStaticContextRoot(String contextRoot) {\n        this.contentContextBase = contextRoot;\n    }","id":69613,"modified_method":"public void setStaticContextRoot(String contextRoot) {\n        this.contentContextPath = contextRoot;\n    }","commit_id":"2d9d0dadd6ec2ef05a34a8c74d091cb1a884adfd","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void start() {\n        jetty = new Server(jettyPort);\n        jetty.setStopAtShutdown(true);\n\n        URL staticUrl = this.getClass().getClassLoader().getResource(contentResourcePath);\n        String urlString = staticUrl.toExternalForm();\n\n        WebAppContext staticContentContext = new WebAppContext( urlString, contentContextBase );\n\n        HandlerList handlers = new HandlerList();\n        handlers.setHandlers(new Handler[] { staticContentContext, new DefaultHandler() });\n\n        jetty.setHandler( handlers );\n\n        try {\n            jetty.start();\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }","id":69614,"modified_method":"public void start() {\n        jetty = new Server(jettyPort);\n        jetty.setStopAtShutdown(true);\n\n        try {\n            final WebAppContext webadmin = new WebAppContext();\n            webadmin.setServer(jetty);\n            webadmin.setContextPath(\"/\" + contentContextPath);\n            URL url = getClass().getClassLoader().getResource(contentResourcePath).toURI().toURL();\n            final Resource resource = new FileResource(url);\n            webadmin.setBaseResource(resource);\n            jetty.addHandler(webadmin);\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n\n        Context jerseyContext = new Context(jetty, \"/\");\n        jerseyContext.addServlet(jerseyServletHolder, \"/*\");\n\n        try {\n            jetty.start();\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"2d9d0dadd6ec2ef05a34a8c74d091cb1a884adfd","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void addPackages(String packageNames) {\n        if (packageNames == null) {\n            return;\n        }\n\n        jerseyServletHolder.setInitParameter(\"com.sun.jersey.config.property.packages\", packageNames);\n\n    }","id":69615,"modified_method":"public void setPackages(String packageNames) {\n        if (packageNames == null) {\n            return;\n        }\n\n        jerseyServletHolder.setInitParameter(\"com.sun.jersey.config.property.packages\", packageNames);\n    }","commit_id":"2d9d0dadd6ec2ef05a34a8c74d091cb1a884adfd","url":"https://github.com/neo4j/neo4j"},{"original_method":"public URI getWelcomeUri() throws URISyntaxException {\n        if(contentContextBase == \"\") {\n            return new URI(getBaseUri().toString() + \"welcome.html\");\n        } else {\n            return new URI(getBaseUri().toString() + this.contentContextBase + \"/\" + \"welcome.html\");\n        }\n    }","id":69616,"modified_method":"public URI getWelcomeUri() throws URISyntaxException {\n        if (contentContextPath == \"\") {\n            return new URI(getBaseUri().toString() + \"welcome.html\");\n        } else {\n            return new URI(getBaseUri().toString() + this.contentContextPath + \"/\" + \"welcome.html\");\n        }\n    }","commit_id":"2d9d0dadd6ec2ef05a34a8c74d091cb1a884adfd","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldMountASimpleJAXRSApp() throws Exception {\n        WebServer ws = new Jetty6WebServer();\n        int portNo = WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.start();\n     \n        ws.addPackages(getDummyWebResourcePackage());\n        \n        ClientResponse response = Client.create().resource(\"http://localhost:\" + portNo + HelloWorldWebResource.ROOT_PATH).entity(\"Bertrand Russell\").type(\"text/plain\").accept(\"text/plain\").post(ClientResponse.class);\n        \n        ws.shutdown();\n        \n        assertEquals(200, response.getStatus());\n        assertThat(response.getEntity(String.class), containsString(\"hello, Bertrand Russell\"));\n    }","id":69617,"modified_method":"@Test\n    public void shouldMountASimpleJAXRSApp() throws Exception {\n        WebServer ws = new Jetty6WebServer();\n        int portNo = WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.setPackages(getDummyWebResourcePackage());\n        ws.start();\n     \n        \n        ClientResponse response = Client.create().resource(\"http://localhost:\" + portNo + HelloWorldWebResource.ROOT_PATH).entity(\"Bertrand Russell\").type(\"text/plain\").accept(\"text/plain\").post(ClientResponse.class);\n        \n        ws.shutdown();\n        \n        assertEquals(200, response.getStatus());\n        assertThat(response.getEntity(String.class), containsString(\"hello, Bertrand Russell\"));\n    }","commit_id":"2d9d0dadd6ec2ef05a34a8c74d091cb1a884adfd","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldHostWelcomePageOnStartup() throws Exception {\n        \n        WebServer ws = new Jetty6WebServer();\n        int portNo = 5555;//WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.start();\n        \n        \n        \n        ClientResponse response = WebTestUtils.sendGetRequestTo(ws.getWelcomeUri());\n        \n        System.out.println(response.getEntity(String.class));\n        \n        ws.shutdown();\n        \n        assertThat(response.getStatus(), greaterThan(199));\n        assertThat(response.getStatus(), lessThan(308));\n        assertThat(response.getEntity(String.class), not(containsString(\"Directory:\")));\n    }","id":69618,"modified_method":"@Test\n    public void shouldHostWelcomePageOnStartup() throws Exception {\n        \n        WebServer ws = new Jetty6WebServer();\n        int portNo = WebTestUtils.nextAvailablePortNumber();\n        ws.setPort(portNo);\n        ws.setStaticContentDir(defaultStaticContentLocation());\n        ws.start();\n        ClientResponse response = WebTestUtils.sendGetRequestTo(ws.getWelcomeUri());\n        \n        \n        ws.shutdown();\n        \n        assertThat(response.getStatus(), greaterThan(199));\n        assertThat(response.getStatus(), lessThan(308));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n        assertThat(response.getEntity(String.class), not(containsString(\"Directory:\")));\n    }","commit_id":"2d9d0dadd6ec2ef05a34a8c74d091cb1a884adfd","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Integer start(String[] args) {\n        try {\n            webServer.setPort(configurator.configuration().getInt(WEBSERVER_PORT, DEFAULT_WEBSERVER_PORT));\n            webServer.addPackages(convertPropertiesToSingleString(configurator.configuration().getStringArray(WEBSERVICE_PACKAGES)));\n            webServer.start();\n            \n            log.info(\"Started Neo Server on port [%s]\", webServer.getPort());\n            \n            return 0;\n        } catch (Exception e) {\n            log.error(\"Failed to start Neo Server on port [%s]\", webServer.getPort());\n            return 1;\n        }\n    }","id":69619,"modified_method":"public Integer start(String[] args) {\n        try {\n            webServer.setPort(configurator.configuration().getInt(WEBSERVER_PORT, DEFAULT_WEBSERVER_PORT));\n            webServer.setPackages(convertPropertiesToSingleString(configurator.configuration().getStringArray(WEBSERVICE_PACKAGES)));\n            webServer.start();\n            \n            log.info(\"Started Neo Server on port [%s]\", webServer.getPort());\n            \n            return 0;\n        } catch (Exception e) {\n            log.error(\"Failed to start Neo Server on port [%s]\", webServer.getPort());\n            return 1;\n        }\n    }","commit_id":"2d9d0dadd6ec2ef05a34a8c74d091cb1a884adfd","url":"https://github.com/neo4j/neo4j"},{"original_method":"public NeoServer() {\n        StartupHealthCheck healthCheck = new StartupHealthCheck(new ConfigFileMustBePresentRule());\n        if(!healthCheck.run()) {\n            throw new StartupHealthCheckFailedException(\"Startup healthcheck failed, server is not properly configured. Check logs for details.\");\n        }\n        \n        Validator validator = new Validator(new DatabaseLocationMustBeSpecifiedRule());\n        this.configurator = new Configurator(validator, getConfigFile());\n        this.webServer = new Jetty6WebServer();\n        this.database = new Database(configurator.configuration().getString(DATABASE_LOCATION));\n    }","id":69620,"modified_method":"public NeoServer() {\n        StartupHealthCheck healthCheck = new StartupHealthCheck(new ConfigFileMustBePresentRule());\n        if(!healthCheck.run()) {\n            throw new StartupHealthCheckFailedException(\"Startup healthcheck failed, server is not properly configured. Check logs for details.\");\n        }\n        \n        this.configurator = new Configurator(new Validator(new DatabaseLocationMustBeSpecifiedRule()), getConfigFile());\n        this.webServer = new Jetty6WebServer();\n        this.database = new Database(configurator.configuration().getString(DATABASE_LOCATION));\n    }","commit_id":"2d9d0dadd6ec2ef05a34a8c74d091cb1a884adfd","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldDefaultToSensiblePortIfNoneSpecifiedInConfig() throws Exception {\n        Configurator config = configWithoutWebServerPort();\n\n        Database database = database();\n        WebServer webServer = new Jetty6WebServer();\n        webServer.addPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(config, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + DEFAULT_PORT + \"/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n    }","id":69621,"modified_method":"@Test\n    public void shouldDefaultToSensiblePortIfNoneSpecifiedInConfig() throws Exception {\n        Configurator config = configWithoutWebServerPort();\n\n        Database database = database();\n        WebServer webServer = new Jetty6WebServer();\n        webServer.setPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(config, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + DEFAULT_PORT + \"/webadmin/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n    }","commit_id":"2d9d0dadd6ec2ef05a34a8c74d091cb1a884adfd","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void serverShouldProvideAWelcomePage() {\n        Configurator configurator = configurator();\n        Database database = database();\n        WebServer webServer = webServer();\n        webServer.addPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(configurator, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + webServer.getPort() + \"/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat( response.getHeaders().getFirst(\"Content-Type\"), containsString(\"html\"));\n\n        server.stop();\n    }","id":69622,"modified_method":"@Test\n    public void serverShouldProvideAWelcomePage() {\n        Configurator configurator = configurator();\n        Database database = database();\n        WebServer webServer = webServer();\n        webServer.setPackages(\"org.neo4j.server.web\");\n\n        NeoServer server = new NeoServer(configurator, database, webServer);\n        server.start(null);\n\n        Client client = Client.create();\n        ClientResponse response = client.resource(\"http://localhost:\" + webServer.getPort() + \"/webadmin/welcome.html\").get(ClientResponse.class);\n\n        assertThat(response.getStatus(), is(200));\n        assertThat( response.getHeaders().getFirst(\"Content-Type\"), containsString(\"html\"));\n\n        server.stop();\n    }","commit_id":"2d9d0dadd6ec2ef05a34a8c74d091cb1a884adfd","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void whenServerIsStartedItShouldBringUpAWebServerWithWelcomePage() throws Exception {\n        NeoServer server = server();\n        server.start(null);\n\n        //ClientResponse response = Client.create().resource(server.webServer().getWelcomeUri()).get(ClientResponse.class);\n        ClientResponse response = Client.create().resource(\"http://localhost:7474/\").get(ClientResponse.class);\n\n        assertEquals(200, response.getStatus());\n        assertThat(response.getHeaders().getFirst(\"Content-Type\"), containsString(\"text/html\"));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n\n        server.stop();\n    }","id":69623,"modified_method":"@Test\n    public void whenServerIsStartedItShouldBringUpAWebServerWithWelcomePage() throws Exception {\n        NeoServer server = server();\n        server.start(null);\n\n        ClientResponse response = Client.create().resource(server.webServer().getWelcomeUri()).get(ClientResponse.class);\n        \n        assertEquals(200, response.getStatus());\n        assertThat(response.getHeaders().getFirst(\"Content-Type\"), containsString(\"text/html\"));\n        assertThat(response.getEntity(String.class), containsString(\"Welcome\"));\n\n        server.stop();\n    }","commit_id":"2d9d0dadd6ec2ef05a34a8c74d091cb1a884adfd","url":"https://github.com/neo4j/neo4j"},{"original_method":"private WebServer webServer() {\n        WebServer webServer = new Jetty6WebServer();\n        webServer.addPackages(\"org.neo4j.server.web\");\n        return webServer;\n    }","id":69624,"modified_method":"private WebServer webServer() {\n        WebServer webServer = new Jetty6WebServer();\n        webServer.setPackages(\"org.neo4j.server.web\");\n        return webServer;\n    }","commit_id":"2d9d0dadd6ec2ef05a34a8c74d091cb1a884adfd","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static DateTime dateTimeFromDouble(double x) {\n        return new DateTime(Math.round(x*1000));\n    }","id":69625,"modified_method":"public static DateTime dateTimeFromDouble(double x) {\n        return new DateTime(Math.round(x*1000), DateTimeZone.UTC);\n    }","commit_id":"31a8b32d03099688384539589111bc50b6adef95","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@Test\n    public void testTimeFromDouble() {\n        try {\n            System.out.println(Tools.dateTimeFromDouble(1381076986.306509));\n            System.out.println(Tools.dateTimeFromDouble(1381076986.306509).toString());\n            System.out.println(Tools.dateTimeFromDouble(1381076986.306509).toString().startsWith(\"2013-10-06T18:29:46.307\"));\n            assertTrue(\"test\", Tools.dateTimeFromDouble(1381076986.306509).toString().startsWith(\"2013-10-06T18:29:46.307\"));\n        } catch(Exception e) {\n            e.printStackTrace();\n        }\n\n        assertTrue(Tools.dateTimeFromDouble(1381076986.306509).toString().startsWith(\"2013-10-06T18:29:46.307\"));\n        assertTrue(Tools.dateTimeFromDouble(1381076986).toString().startsWith(\"2013-10-06T18:29:46\"));\n        assertTrue(Tools.dateTimeFromDouble(1381079085.6).toString().startsWith(\"2013-10-06T19:04:45.600\"));\n        assertTrue(Tools.dateTimeFromDouble(1381079085.06).toString().startsWith(\"2013-10-06T19:04:45.060\"));\n    }","id":69626,"modified_method":"@Test\n    public void testTimeFromDouble() {\n        assertEquals(\"2013-10-06T16:29:46.307Z\", Tools.dateTimeFromDouble(1381076986.306509).toString());\n        assertEquals(\"2013-10-06T16:29:46.000Z\", Tools.dateTimeFromDouble(1381076986).toString());\n        assertEquals(\"2013-10-06T17:04:45.600Z\", Tools.dateTimeFromDouble(1381079085.6).toString());\n        assertEquals(\"2013-10-06T17:04:45.060Z\", Tools.dateTimeFromDouble(1381079085.06).toString());\n    }","commit_id":"31a8b32d03099688384539589111bc50b6adef95","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public static void writeFieldValue(StreamOutput out, Object value) throws IOException {\n        if (value == null) {\n            out.writeByte((byte) -1);\n            return;\n        }\n        Class type = value.getClass();\n        if (type == String.class) {\n            out.writeByte((byte) 0);\n            out.writeUTF((String) value);\n        } else if (type == Integer.class) {\n            out.writeByte((byte) 1);\n            out.writeInt((Integer) value);\n        } else if (type == Long.class) {\n            out.writeByte((byte) 2);\n            out.writeLong((Long) value);\n        } else if (type == Float.class) {\n            out.writeByte((byte) 3);\n            out.writeFloat((Float) value);\n        } else if (type == Double.class) {\n            out.writeByte((byte) 4);\n            out.writeDouble((Double) value);\n        } else if (type == Boolean.class) {\n            out.writeByte((byte) 5);\n            out.writeBoolean((Boolean) value);\n        } else if (type == byte[].class) {\n            out.writeByte((byte) 6);\n            out.writeVInt(((byte[]) value).length);\n            out.writeBytes(((byte[]) value));\n        } else if (value instanceof List) {\n            out.writeByte((byte) 7);\n            List list = (List) value;\n            out.writeVInt(list.size());\n            for (Object o : list) {\n                writeFieldValue(out, o);\n            }\n        } else if (value instanceof Map) {\n            out.writeByte((byte) 8);\n            Map<String, Object> map = (Map<String, Object>) value;\n            out.writeVInt(map.size());\n            for (Map.Entry<String, Object> entry : map.entrySet()) {\n                out.writeUTF(entry.getKey());\n                writeFieldValue(out, entry.getValue());\n            }\n        } else {\n            throw new IOException(\"Can't write type [\" + type + \"]\");\n        }\n    }","id":69627,"modified_method":"public static void writeFieldValue(StreamOutput out, Object value) throws IOException {\n        if (value == null) {\n            out.writeByte((byte) -1);\n            return;\n        }\n        Class type = value.getClass();\n        if (type == String.class) {\n            out.writeByte((byte) 0);\n            out.writeUTF((String) value);\n        } else if (type == Integer.class) {\n            out.writeByte((byte) 1);\n            out.writeInt((Integer) value);\n        } else if (type == Long.class) {\n            out.writeByte((byte) 2);\n            out.writeLong((Long) value);\n        } else if (type == Float.class) {\n            out.writeByte((byte) 3);\n            out.writeFloat((Float) value);\n        } else if (type == Double.class) {\n            out.writeByte((byte) 4);\n            out.writeDouble((Double) value);\n        } else if (type == Boolean.class) {\n            out.writeByte((byte) 5);\n            out.writeBoolean((Boolean) value);\n        } else if (type == byte[].class) {\n            out.writeByte((byte) 6);\n            out.writeVInt(((byte[]) value).length);\n            out.writeBytes(((byte[]) value));\n        } else if (value instanceof List) {\n            out.writeByte((byte) 7);\n            List list = (List) value;\n            out.writeVInt(list.size());\n            for (Object o : list) {\n                writeFieldValue(out, o);\n            }\n        } else if (value instanceof Object[]) {\n            out.writeByte((byte) 8);\n            Object[] list = (Object[]) value;\n            out.writeVInt(list.length);\n            for (Object o : list) {\n                writeFieldValue(out, o);\n            }\n        } else if (value instanceof Map) {\n            out.writeByte((byte) 9);\n            Map<String, Object> map = (Map<String, Object>) value;\n            out.writeVInt(map.size());\n            for (Map.Entry<String, Object> entry : map.entrySet()) {\n                out.writeUTF(entry.getKey());\n                writeFieldValue(out, entry.getValue());\n            }\n        } else {\n            throw new IOException(\"Can't write type [\" + type + \"]\");\n        }\n    }","commit_id":"9a80fedf521685eb2c0c96962dc3d6f39d8b8a2a","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static Object readFieldValue(StreamInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == -1) {\n            return null;\n        } else if (type == 0) {\n            return in.readUTF();\n        } else if (type == 1) {\n            return in.readInt();\n        } else if (type == 2) {\n            return in.readLong();\n        } else if (type == 3) {\n            return in.readFloat();\n        } else if (type == 4) {\n            return in.readDouble();\n        } else if (type == 5) {\n            return in.readBoolean();\n        } else if (type == 6) {\n            int bytesSize = in.readVInt();\n            byte[] value = new byte[bytesSize];\n            in.readFully(value);\n            return value;\n        } else if (type == 7) {\n            int size = in.readVInt();\n            List list = new ArrayList(size);\n            for (int i = 0; i < size; i++) {\n                list.add(readFieldValue(in));\n            }\n            return list;\n        } else if (type == 8) {\n            int size = in.readVInt();\n            Map map = new HashMap();\n            for (int i = 0; i < size; i++) {\n                map.put(in.readUTF(), readFieldValue(in));\n            }\n            return map;\n        } else {\n            throw new IOException(\"Can't read unknown type [\" + type + \"]\");\n        }\n    }","id":69628,"modified_method":"public static Object readFieldValue(StreamInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == -1) {\n            return null;\n        } else if (type == 0) {\n            return in.readUTF();\n        } else if (type == 1) {\n            return in.readInt();\n        } else if (type == 2) {\n            return in.readLong();\n        } else if (type == 3) {\n            return in.readFloat();\n        } else if (type == 4) {\n            return in.readDouble();\n        } else if (type == 5) {\n            return in.readBoolean();\n        } else if (type == 6) {\n            int bytesSize = in.readVInt();\n            byte[] value = new byte[bytesSize];\n            in.readFully(value);\n            return value;\n        } else if (type == 7) {\n            int size = in.readVInt();\n            List list = new ArrayList(size);\n            for (int i = 0; i < size; i++) {\n                list.add(readFieldValue(in));\n            }\n            return list;\n        } else if (type == 8) {\n            int size = in.readVInt();\n            Object[] list = new Object[size];\n            for (int i = 0; i < size; i++) {\n                list[i] = readFieldValue(in);\n            }\n            return list;\n        } else if (type == 9) {\n            int size = in.readVInt();\n            Map map = new HashMap(size);\n            for (int i = 0; i < size; i++) {\n                map.put(in.readUTF(), readFieldValue(in));\n            }\n            return map;\n        } else {\n            throw new IOException(\"Can't read unknown type [\" + type + \"]\");\n        }\n    }","commit_id":"9a80fedf521685eb2c0c96962dc3d6f39d8b8a2a","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public CMap(ConcurrentMapManager concurrentMapManager, String name) {\n        this.concurrentMapManager = concurrentMapManager;\n        this.BLOCK_COUNT = concurrentMapManager.BLOCK_COUNT;\n        this.blocks = concurrentMapManager.blocks;\n        this.node = concurrentMapManager.node;\n        this.thisAddress = concurrentMapManager.thisAddress;\n        this.name = name;\n        mapRecords = new SortedHashMap<Data, Record>(10000);\n        MapConfig mapConfig = null;\n        String mapConfigName = name.substring(2);\n        if (mapConfigName.startsWith(\"__hz_\") || mapConfigName.startsWith(\"l:\") || mapConfigName.startsWith(\"s:\")) {\n            mapConfig = new MapConfig();\n        } else {\n            mapConfig = node.getConfig().getMapConfig(mapConfigName);\n        }\n        this.backupCount = mapConfig.getBackupCount();\n        ttl = mapConfig.getTimeToLiveSeconds() * 1000L;\n        evictionDelayMillis = mapConfig.getEvictionDelaySeconds() * 1000L;\n        maxIdle = mapConfig.getMaxIdleSeconds() * 1000L;\n        evictionPolicy = SortedHashMap.getOrderingTypeByName(mapConfig.getEvictionPolicy());\n        if (evictionPolicy == SortedHashMap.OrderingType.NONE) {\n            maxSize = Integer.MAX_VALUE;\n        } else {\n            maxSize = (mapConfig.getMaxSize() == 0) ? MapConfig.DEFAULT_MAX_SIZE : mapConfig.getMaxSize();\n        }\n        evictionRate = mapConfig.getEvictionPercentage() / 100f;\n        instanceType = concurrentMapManager.getInstanceType(name);\n        MapStoreConfig mapStoreConfig = mapConfig.getMapStoreConfig();\n        MapStore storeTemp = null;\n        MapLoader loaderTemp = null;\n        int writeDelaySeconds = -1;\n        if (mapStoreConfig != null) {\n            if (mapStoreConfig.isEnabled()) {\n                String mapStoreClassName = mapStoreConfig.getClassName();\n                try {\n                    Object storeInstance = Class.forName(mapStoreClassName).newInstance();\n                    if (storeInstance instanceof MapLoader) {\n                        loaderTemp = (MapLoader) storeInstance;\n                    }\n                    if (storeInstance instanceof MapStore) {\n                        storeTemp = (MapStore) storeInstance;\n                    }\n                    writeDelaySeconds = mapStoreConfig.getWriteDelaySeconds();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        loader = loaderTemp;\n        store = storeTemp;\n        writeDelayMillis = (writeDelaySeconds == -1) ? -1L : writeDelaySeconds * 1000L;\n        setDirtyRecords = (writeDelayMillis == -1) ? null : new HashSet<Record>(5000);\n        if (writeDelaySeconds > 0) {\n            removeDelayMillis = concurrentMapManager.GLOBAL_REMOVE_DELAY_MILLIS + writeDelaySeconds;\n        } else {\n            removeDelayMillis = concurrentMapManager.GLOBAL_REMOVE_DELAY_MILLIS;\n        }\n        if (evictionPolicy == SortedHashMap.OrderingType.NONE && instanceType == Instance.InstanceType.MAP) {\n            locallyOwnedMap = new LocallyOwnedMap();\n            concurrentMapManager.mapLocallyOwnedMaps.put(name, locallyOwnedMap);\n        } else {\n            locallyOwnedMap = null;\n        }\n        NearCacheConfig nearCacheConfig = mapConfig.getNearCacheConfig();\n        if (nearCacheConfig == null) {\n            mapNearCache = null;\n        } else {\n            mapNearCache = new MapNearCache(this,\n                    SortedHashMap.getOrderingTypeByName(mapConfig.getEvictionPolicy()),\n                    nearCacheConfig.getMaxSize(),\n                    nearCacheConfig.getTimeToLiveSeconds() * 1000L,\n                    nearCacheConfig.getMaxIdleSeconds() * 1000L,\n                    nearCacheConfig.isInvalidateOnChange());\n            concurrentMapManager.mapCaches.put(name, mapNearCache);\n        }\n        this.creationTime = System.currentTimeMillis();\n    }","id":69629,"modified_method":"public CMap(ConcurrentMapManager concurrentMapManager, String name) {\n        this.concurrentMapManager = concurrentMapManager;\n        this.BLOCK_COUNT = concurrentMapManager.BLOCK_COUNT;\n        this.blocks = concurrentMapManager.blocks;\n        this.node = concurrentMapManager.node;\n        this.thisAddress = concurrentMapManager.thisAddress;\n        this.name = name;\n        mapRecords = new SortedHashMap<Data, Record>(10000);\n        MapConfig mapConfig = null;\n        String mapConfigName = name.substring(2);\n        if (mapConfigName.startsWith(\"__hz_\") || mapConfigName.startsWith(\"l:\") || mapConfigName.startsWith(\"s:\")) {\n            mapConfig = new MapConfig();\n        } else {\n            mapConfig = node.getConfig().getMapConfig(mapConfigName);\n        }\n        this.backupCount = mapConfig.getBackupCount();\n        ttl = mapConfig.getTimeToLiveSeconds() * 1000L;\n        evictionDelayMillis = mapConfig.getEvictionDelaySeconds() * 1000L;\n        maxIdle = mapConfig.getMaxIdleSeconds() * 1000L;\n        evictionPolicy = SortedHashMap.getOrderingTypeByName(mapConfig.getEvictionPolicy());\n        if (evictionPolicy == SortedHashMap.OrderingType.NONE) {\n            maxSize = Integer.MAX_VALUE;\n        } else {\n            maxSize = (mapConfig.getMaxSize() == 0) ? MapConfig.DEFAULT_MAX_SIZE : mapConfig.getMaxSize();\n        }\n        evictionRate = mapConfig.getEvictionPercentage() / 100f;\n        instanceType = ConcurrentMapManager.getInstanceType(name);\n        MapStoreConfig mapStoreConfig = mapConfig.getMapStoreConfig();\n        MapStore storeTemp = null;\n        MapLoader loaderTemp = null;\n        int writeDelaySeconds = -1;\n        if (mapStoreConfig != null) {\n            if (mapStoreConfig.isEnabled()) {\n                String mapStoreClassName = mapStoreConfig.getClassName();\n                try {\n                    Object storeInstance = Class.forName(mapStoreClassName).newInstance();\n                    if (storeInstance instanceof MapLoader) {\n                        loaderTemp = (MapLoader) storeInstance;\n                    }\n                    if (storeInstance instanceof MapStore) {\n                        storeTemp = (MapStore) storeInstance;\n                    }\n                    writeDelaySeconds = mapStoreConfig.getWriteDelaySeconds();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        loader = loaderTemp;\n        store = storeTemp;\n        writeDelayMillis = (writeDelaySeconds == -1) ? -1L : writeDelaySeconds * 1000L;\n        setDirtyRecords = (writeDelayMillis == -1) ? null : new HashSet<Record>(5000);\n        if (writeDelaySeconds > 0) {\n            removeDelayMillis = concurrentMapManager.GLOBAL_REMOVE_DELAY_MILLIS + writeDelaySeconds;\n        } else {\n            removeDelayMillis = concurrentMapManager.GLOBAL_REMOVE_DELAY_MILLIS;\n        }\n        if (evictionPolicy == SortedHashMap.OrderingType.NONE && instanceType == Instance.InstanceType.MAP) {\n            locallyOwnedMap = new LocallyOwnedMap();\n            concurrentMapManager.mapLocallyOwnedMaps.put(name, locallyOwnedMap);\n        } else {\n            locallyOwnedMap = null;\n        }\n        NearCacheConfig nearCacheConfig = mapConfig.getNearCacheConfig();\n        if (nearCacheConfig == null) {\n            mapNearCache = null;\n        } else {\n            mapNearCache = new MapNearCache(this,\n                    SortedHashMap.getOrderingTypeByName(mapConfig.getEvictionPolicy()),\n                    nearCacheConfig.getMaxSize(),\n                    nearCacheConfig.getTimeToLiveSeconds() * 1000L,\n                    nearCacheConfig.getMaxIdleSeconds() * 1000L,\n                    nearCacheConfig.isInvalidateOnChange());\n            concurrentMapManager.mapCaches.put(name, mapNearCache);\n        }\n        this.creationTime = System.currentTimeMillis();\n    }","commit_id":"f0348d6ed737968b74ccb1e67226de6710d45764","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public void addIndex(Expression expression, boolean ordered) {\n        if (!getMapIndexes().containsKey(expression)) {\n            Index index = new Index(expression, ordered);\n            getMapIndexes().put(expression, index);\n            Index[] newIndexes = new Index[getMapIndexes().size()];\n            if (getIndexes() != null) {\n                System.arraycopy(getIndexes(), 0, newIndexes, 0, getIndexes().length);\n            }\n            setIndexes(newIndexes);\n            getIndexes()[getMapIndexes().size() - 1] = index;\n            node.queryService.setIndexes(getName(), getIndexes(), getMapIndexes());\n        }\n    }","id":69630,"modified_method":"public void addIndex(Expression expression, boolean ordered) {\n        if (!getMapIndexes().containsKey(expression)) {\n            Index<MapEntry> index = new Index<MapEntry>(expression, ordered);\n            getMapIndexes().put(expression, index);\n            Index<MapEntry>[] newIndexes = new Index[getMapIndexes().size()];\n            if (getIndexes() != null) {\n                System.arraycopy(getIndexes(), 0, newIndexes, 0, getIndexes().length);\n            }\n            setIndexes(newIndexes);\n            getIndexes()[getMapIndexes().size() - 1] = index;\n            node.queryService.setIndexes(getName(), getIndexes(), getMapIndexes());\n        }\n    }","commit_id":"f0348d6ed737968b74ccb1e67226de6710d45764","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected void writeObject(DataOutput out, Object obj) throws IOException {\n        if (obj == null) {\n            out.writeByte(0);\n        } else if (obj instanceof Long) {\n            out.writeByte(1);\n            out.writeLong((Long) obj);\n        } else if (obj instanceof Integer) {\n            out.writeByte(2);\n            out.writeInt((Integer) obj);\n        } else if (obj instanceof String) {\n            out.writeByte(3);\n            out.writeUTF((String) obj);\n        } else if (obj instanceof Double) {\n            out.writeByte(4);\n            out.writeDouble((Double) obj);\n        } else if (obj instanceof Float) {\n            out.writeByte(5);\n            out.writeDouble((Float) obj);\n        } else if (obj instanceof Boolean) {\n            out.writeByte(6);\n            out.writeBoolean((Boolean) obj);\n        } else if (obj instanceof DataSerializable) {\n            out.writeByte(7);\n            out.writeUTF(obj.getClass().getName());\n            ((DataSerializable) obj).writeData(out);\n        } else {\n            out.writeByte(8);\n            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n            ObjectOutputStream oos = new ObjectOutputStream(bos);\n            oos.writeObject(obj);\n            oos.close();\n            byte[] buf = bos.toByteArray();\n            out.writeInt(buf.length);\n            out.write(buf);\n        }\n    }","id":69631,"modified_method":"public static void writeObject(DataOutput out, Object obj) throws IOException {\n        if (obj == null) {\n            out.writeByte(0);\n        } else if (obj instanceof Long) {\n            out.writeByte(1);\n            out.writeLong((Long) obj);\n        } else if (obj instanceof Integer) {\n            out.writeByte(2);\n            out.writeInt((Integer) obj);\n        } else if (obj instanceof String) {\n            out.writeByte(3);\n            out.writeUTF((String) obj);\n        } else if (obj instanceof Double) {\n            out.writeByte(4);\n            out.writeDouble((Double) obj);\n        } else if (obj instanceof Float) {\n            out.writeByte(5);\n            out.writeDouble((Float) obj);\n        } else if (obj instanceof Boolean) {\n            out.writeByte(6);\n            out.writeBoolean((Boolean) obj);\n        } else if (obj instanceof Date) {\n            out.writeByte(7);\n            out.writeLong(((Date) obj).getTime());\n        } else if (obj instanceof DataSerializable) {\n            out.writeByte(8);\n            out.writeUTF(obj.getClass().getName());\n            ((DataSerializable) obj).writeData(out);\n        } else {\n            out.writeByte(9);\n            ByteArrayOutputStream bos = new ByteArrayOutputStream();\n            ObjectOutputStream oos = new ObjectOutputStream(bos);\n            oos.writeObject(obj);\n            oos.close();\n            byte[] buf = bos.toByteArray();\n            out.writeInt(buf.length);\n            out.write(buf);\n        }\n    }","commit_id":"f0348d6ed737968b74ccb1e67226de6710d45764","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected Object readObject(DataInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == 0) {\n            return null;\n        } else if (type == 1) {\n            return in.readInt();\n        } else if (type == 2) {\n            return in.readInt();\n        } else if (type == 3) {\n            return in.readUTF();\n        } else if (type == 4) {\n            return in.readDouble();\n        } else if (type == 5) {\n            return in.readFloat();\n        } else if (type == 6) {\n            return in.readBoolean();\n        } else if (type == 7) {\n            DataSerializable ds = null;\n            try {\n                ds = (DataSerializable) Class.forName(in.readUTF()).newInstance();\n            } catch (Throwable e) {\n                throw new IOException(e.getMessage());\n            }\n            ds.readData(in);\n            return ds;\n        } else if (type == 8) {\n            int len = in.readInt();\n            byte[] buf = new byte[len];\n            in.readFully(buf);\n            ObjectInputStream oin = new ObjectInputStream(new ByteArrayInputStream(buf));\n            try {\n                return oin.readObject();\n            } catch (ClassNotFoundException e) {\n                e.printStackTrace();\n            }\n            oin.close();\n        } else {\n            throw new IOException(\"Unknown object type=\" + type);\n        }\n        return null;\n    }","id":69632,"modified_method":"public static Object readObject(DataInput in) throws IOException {\n        byte type = in.readByte();\n        if (type == 0) {\n            return null;\n        } else if (type == 1) {\n            return in.readInt();\n        } else if (type == 2) {\n            return in.readInt();\n        } else if (type == 3) {\n            return in.readUTF();\n        } else if (type == 4) {\n            return in.readDouble();\n        } else if (type == 5) {\n            return in.readFloat();\n        } else if (type == 6) {\n            return in.readBoolean();\n        } else if (type == 7) {\n            return new Date(in.readLong());\n        } else if (type == 8) {\n            DataSerializable ds = null;\n            try {\n                ds = (DataSerializable) Class.forName(in.readUTF()).newInstance();\n            } catch (Throwable e) {\n                throw new IOException(e.getMessage());\n            }\n            ds.readData(in);\n            return ds;\n        } else if (type == 9) {\n            int len = in.readInt();\n            byte[] buf = new byte[len];\n            in.readFully(buf);\n            ObjectInputStream oin = new ObjectInputStream(new ByteArrayInputStream(buf));\n            try {\n                return oin.readObject();\n            } catch (ClassNotFoundException e) {\n                e.printStackTrace();\n            }\n            oin.close();\n        } else {\n            throw new IOException(\"Unknown object type=\" + type);\n        }\n        return null;\n    }","commit_id":"f0348d6ed737968b74ccb1e67226de6710d45764","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"public void serialize(@NotNull GrMethodStub stub, @NotNull StubOutputStream dataStream) throws IOException {\n    dataStream.writeName(stub.getName());\n    GrStubUtils.writeStringArray(dataStream, stub.getAnnotations());\n    final String[] namedParameters = stub.getNamedParameters();\n    GrStubUtils.writeStringArray(dataStream, namedParameters.length <= Byte.MAX_VALUE ? namedParameters : ArrayUtil.EMPTY_STRING_ARRAY);\n    GrStubUtils.writeNullableString(dataStream, stub.getTypeText());\n    dataStream.writeByte(stub.getFlags());\n  }","id":69633,"modified_method":"public void serialize(@NotNull GrMethodStub stub, @NotNull StubOutputStream dataStream) throws IOException {\n    dataStream.writeName(stub.getName());\n    GrStubUtils.writeStringArray(dataStream, stub.getAnnotations());\n    GrStubUtils.writeStringArray(dataStream, stub.getNamedParameters());\n    GrStubUtils.writeNullableString(dataStream, stub.getTypeText());\n    dataStream.writeByte(stub.getFlags());\n  }","commit_id":"e44a4a195c1e25ca527dbdf9a17661c2db8552ff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public int getStubVersion() {\n    return super.getStubVersion() + 16;\n  }","id":69634,"modified_method":"@Override\n  public int getStubVersion() {\n    return super.getStubVersion() + 17;\n  }","commit_id":"e44a4a195c1e25ca527dbdf9a17661c2db8552ff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String[] readStringArray(StubInputStream dataStream) throws IOException {\n    final byte b = dataStream.readByte();\n    final String[] annNames = new String[b];\n    for (int i = 0; i < b; i++) {\n      annNames[i] = dataStream.readName().toString();\n    }\n    return annNames;\n  }","id":69635,"modified_method":"public static String[] readStringArray(StubInputStream dataStream) throws IOException {\n    int length = dataStream.readByte();\n    if (length == TOO_LONG) {\n      length = dataStream.readInt();\n    }\n    final String[] annNames = new String[length];\n    for (int i = 0; i < length; i++) {\n      annNames[i] = dataStream.readName().toString();\n    }\n    return annNames;\n  }","commit_id":"e44a4a195c1e25ca527dbdf9a17661c2db8552ff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void writeStringArray(StubOutputStream dataStream, String[] array) throws IOException {\n    dataStream.writeByte(array.length);\n    for (String s : array) {\n      LOG.assertTrue(s != null);\n      dataStream.writeName(s);\n    }\n  }","id":69636,"modified_method":"public static void writeStringArray(StubOutputStream dataStream, String[] array) throws IOException {\n    if (array.length >= Byte.MAX_VALUE) {\n      dataStream.writeByte(TOO_LONG);\n      dataStream.writeInt(array.length);\n    }\n    else {\n      dataStream.writeByte(array.length);\n    }\n    for (String s : array) {\n      LOG.assertTrue(s != null);\n      dataStream.writeName(s);\n    }\n  }","commit_id":"e44a4a195c1e25ca527dbdf9a17661c2db8552ff","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static TopDocs readTopDocs(StreamInput in) throws IOException {\n        if (!in.readBoolean()) {\n            // no docs\n            return null;\n        }\n        if (in.readBoolean()) {\n            int totalHits = in.readVInt();\n            float maxScore = in.readFloat();\n\n            SortField[] fields = new SortField[in.readVInt()];\n            for (int i = 0; i < fields.length; i++) {\n                String field = null;\n                if (in.readBoolean()) {\n                    field = in.readUTF();\n                }\n                fields[i] = new SortField(field, in.readVInt(), in.readBoolean());\n            }\n\n            FieldDoc[] fieldDocs = new FieldDoc[in.readVInt()];\n            for (int i = 0; i < fieldDocs.length; i++) {\n                Comparable[] cFields = new Comparable[in.readVInt()];\n                for (int j = 0; j < cFields.length; j++) {\n                    byte type = in.readByte();\n                    if (type == 0) {\n                        cFields[j] = in.readUTF();\n                    } else if (type == 1) {\n                        cFields[j] = in.readInt();\n                    } else if (type == 2) {\n                        cFields[j] = in.readLong();\n                    } else if (type == 3) {\n                        cFields[j] = in.readFloat();\n                    } else if (type == 4) {\n                        cFields[j] = in.readDouble();\n                    } else if (type == 5) {\n                        cFields[j] = in.readByte();\n                    } else {\n                        throw new IOException(\"Can't match type [\" + type + \"]\");\n                    }\n                }\n                fieldDocs[i] = new FieldDoc(in.readVInt(), in.readFloat(), cFields);\n            }\n            return new TopFieldDocs(totalHits, fieldDocs, fields, maxScore);\n        } else {\n            int totalHits = in.readVInt();\n            float maxScore = in.readFloat();\n\n            ScoreDoc[] scoreDocs = new ScoreDoc[in.readVInt()];\n            for (int i = 0; i < scoreDocs.length; i++) {\n                scoreDocs[i] = new ScoreDoc(in.readVInt(), in.readFloat());\n            }\n            return new TopDocs(totalHits, scoreDocs, maxScore);\n        }\n    }","id":69637,"modified_method":"public static TopDocs readTopDocs(StreamInput in) throws IOException {\n        if (!in.readBoolean()) {\n            // no docs\n            return null;\n        }\n        if (in.readBoolean()) {\n            int totalHits = in.readVInt();\n            float maxScore = in.readFloat();\n\n            SortField[] fields = new SortField[in.readVInt()];\n            for (int i = 0; i < fields.length; i++) {\n                String field = null;\n                if (in.readBoolean()) {\n                    field = in.readUTF();\n                }\n                fields[i] = new SortField(field, in.readVInt(), in.readBoolean());\n            }\n\n            FieldDoc[] fieldDocs = new FieldDoc[in.readVInt()];\n            for (int i = 0; i < fieldDocs.length; i++) {\n                Comparable[] cFields = new Comparable[in.readVInt()];\n                for (int j = 0; j < cFields.length; j++) {\n                    byte type = in.readByte();\n                    if (type == 0) {\n                        cFields[j] = null;\n                    } else if (type == 1) {\n                        cFields[j] = in.readUTF();\n                    } else if (type == 2) {\n                        cFields[j] = in.readInt();\n                    } else if (type == 3) {\n                        cFields[j] = in.readLong();\n                    } else if (type == 4) {\n                        cFields[j] = in.readFloat();\n                    } else if (type == 5) {\n                        cFields[j] = in.readDouble();\n                    } else if (type == 6) {\n                        cFields[j] = in.readByte();\n                    } else {\n                        throw new IOException(\"Can't match type [\" + type + \"]\");\n                    }\n                }\n                fieldDocs[i] = new FieldDoc(in.readVInt(), in.readFloat(), cFields);\n            }\n            return new TopFieldDocs(totalHits, fieldDocs, fields, maxScore);\n        } else {\n            int totalHits = in.readVInt();\n            float maxScore = in.readFloat();\n\n            ScoreDoc[] scoreDocs = new ScoreDoc[in.readVInt()];\n            for (int i = 0; i < scoreDocs.length; i++) {\n                scoreDocs[i] = new ScoreDoc(in.readVInt(), in.readFloat());\n            }\n            return new TopDocs(totalHits, scoreDocs, maxScore);\n        }\n    }","commit_id":"f0cf552bc594a6d56faf9354b7039cde33a5da60","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static void writeTopDocs(StreamOutput out, TopDocs topDocs, int from) throws IOException {\n        if (topDocs.scoreDocs.length - from < 0) {\n            out.writeBoolean(false);\n            return;\n        }\n        out.writeBoolean(true);\n        if (topDocs instanceof TopFieldDocs) {\n            out.writeBoolean(true);\n            TopFieldDocs topFieldDocs = (TopFieldDocs) topDocs;\n\n            out.writeVInt(topDocs.totalHits);\n            out.writeFloat(topDocs.getMaxScore());\n\n            out.writeVInt(topFieldDocs.fields.length);\n            for (SortField sortField : topFieldDocs.fields) {\n                if (sortField.getField() == null) {\n                    out.writeBoolean(false);\n                } else {\n                    out.writeBoolean(true);\n                    out.writeUTF(sortField.getField());\n                }\n                out.writeVInt(sortField.getType());\n                out.writeBoolean(sortField.getReverse());\n            }\n\n            out.writeVInt(topDocs.scoreDocs.length - from);\n            int index = 0;\n            for (ScoreDoc doc : topFieldDocs.scoreDocs) {\n                if (index++ < from) {\n                    continue;\n                }\n                FieldDoc fieldDoc = (FieldDoc) doc;\n                out.writeVInt(fieldDoc.fields.length);\n                for (Comparable field : fieldDoc.fields) {\n                    Class type = field.getClass();\n                    if (type == String.class) {\n                        out.writeByte((byte) 0);\n                        out.writeUTF((String) field);\n                    } else if (type == Integer.class) {\n                        out.writeByte((byte) 1);\n                        out.writeInt((Integer) field);\n                    } else if (type == Long.class) {\n                        out.writeByte((byte) 2);\n                        out.writeLong((Long) field);\n                    } else if (type == Float.class) {\n                        out.writeByte((byte) 3);\n                        out.writeFloat((Float) field);\n                    } else if (type == Double.class) {\n                        out.writeByte((byte) 4);\n                        out.writeDouble((Double) field);\n                    } else if (type == Byte.class) {\n                        out.writeByte((byte) 5);\n                        out.writeByte((Byte) field);\n                    } else {\n                        throw new IOException(\"Can't handle sort field value of type [\" + type + \"]\");\n                    }\n                }\n\n                out.writeVInt(doc.doc);\n                out.writeFloat(doc.score);\n            }\n        } else {\n            out.writeBoolean(false);\n            out.writeVInt(topDocs.totalHits);\n            out.writeFloat(topDocs.getMaxScore());\n\n            out.writeVInt(topDocs.scoreDocs.length - from);\n            int index = 0;\n            for (ScoreDoc doc : topDocs.scoreDocs) {\n                if (index++ < from) {\n                    continue;\n                }\n                out.writeVInt(doc.doc);\n                out.writeFloat(doc.score);\n            }\n        }\n    }","id":69638,"modified_method":"public static void writeTopDocs(StreamOutput out, TopDocs topDocs, int from) throws IOException {\n        if (topDocs.scoreDocs.length - from < 0) {\n            out.writeBoolean(false);\n            return;\n        }\n        out.writeBoolean(true);\n        if (topDocs instanceof TopFieldDocs) {\n            out.writeBoolean(true);\n            TopFieldDocs topFieldDocs = (TopFieldDocs) topDocs;\n\n            out.writeVInt(topDocs.totalHits);\n            out.writeFloat(topDocs.getMaxScore());\n\n            out.writeVInt(topFieldDocs.fields.length);\n            for (SortField sortField : topFieldDocs.fields) {\n                if (sortField.getField() == null) {\n                    out.writeBoolean(false);\n                } else {\n                    out.writeBoolean(true);\n                    out.writeUTF(sortField.getField());\n                }\n                out.writeVInt(sortField.getType());\n                out.writeBoolean(sortField.getReverse());\n            }\n\n            out.writeVInt(topDocs.scoreDocs.length - from);\n            int index = 0;\n            for (ScoreDoc doc : topFieldDocs.scoreDocs) {\n                if (index++ < from) {\n                    continue;\n                }\n                FieldDoc fieldDoc = (FieldDoc) doc;\n                out.writeVInt(fieldDoc.fields.length);\n                for (Comparable field : fieldDoc.fields) {\n                    if (field == null) {\n                        out.writeByte((byte) 0);\n                    } else {\n                        Class type = field.getClass();\n                        if (type == String.class) {\n                            out.writeByte((byte) 1);\n                            out.writeUTF((String) field);\n                        } else if (type == Integer.class) {\n                            out.writeByte((byte) 2);\n                            out.writeInt((Integer) field);\n                        } else if (type == Long.class) {\n                            out.writeByte((byte) 3);\n                            out.writeLong((Long) field);\n                        } else if (type == Float.class) {\n                            out.writeByte((byte) 4);\n                            out.writeFloat((Float) field);\n                        } else if (type == Double.class) {\n                            out.writeByte((byte) 5);\n                            out.writeDouble((Double) field);\n                        } else if (type == Byte.class) {\n                            out.writeByte((byte) 6);\n                            out.writeByte((Byte) field);\n                        } else {\n                            throw new IOException(\"Can't handle sort field value of type [\" + type + \"]\");\n                        }\n                    }\n                }\n\n                out.writeVInt(doc.doc);\n                out.writeFloat(doc.score);\n            }\n        } else {\n            out.writeBoolean(false);\n            out.writeVInt(topDocs.totalHits);\n            out.writeFloat(topDocs.getMaxScore());\n\n            out.writeVInt(topDocs.scoreDocs.length - from);\n            int index = 0;\n            for (ScoreDoc doc : topDocs.scoreDocs) {\n                if (index++ < from) {\n                    continue;\n                }\n                out.writeVInt(doc.doc);\n                out.writeFloat(doc.score);\n            }\n        }\n    }","commit_id":"f0cf552bc594a6d56faf9354b7039cde33a5da60","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public ShardDoc[] sortDocs(Collection<? extends QuerySearchResultProvider> results) {\n        if (results.isEmpty()) {\n            return EMPTY;\n        }\n\n        QuerySearchResultProvider queryResultProvider = Iterables.get(results, 0);\n\n        int totalNumDocs = 0;\n\n        int queueSize = queryResultProvider.queryResult().from() + queryResultProvider.queryResult().size();\n        if (queryResultProvider.includeFetch()) {\n            // if we did both query and fetch on the same go, we have fetched all the docs from each shards already, use them...\n            queueSize *= results.size();\n        }\n        PriorityQueue queue;\n        if (queryResultProvider.queryResult().topDocs() instanceof TopFieldDocs) {\n            // sorting ...\n            queue = new ShardFieldDocSortedHitQueue(((TopFieldDocs) queryResultProvider.queryResult().topDocs()).fields, queueSize); // we need to accumulate for all and then filter the from\n            for (QuerySearchResultProvider resultProvider : results) {\n                QuerySearchResult result = resultProvider.queryResult();\n                ScoreDoc[] scoreDocs = result.topDocs().scoreDocs;\n                totalNumDocs += scoreDocs.length;\n                for (ScoreDoc doc : scoreDocs) {\n                    ShardFieldDoc nodeFieldDoc = new ShardFieldDoc(result.shardTarget(), doc.doc, doc.score, ((FieldDoc) doc).fields);\n                    if (queue.insertWithOverflow(nodeFieldDoc) == nodeFieldDoc) {\n                        // filled the queue, break\n                        break;\n                    }\n                }\n            }\n        } else {\n            queue = new ScoreDocQueue(queueSize); // we need to accumulate for all and then filter the from\n            for (QuerySearchResultProvider resultProvider : results) {\n                QuerySearchResult result = resultProvider.queryResult();\n                ScoreDoc[] scoreDocs = result.topDocs().scoreDocs;\n                totalNumDocs += scoreDocs.length;\n                for (ScoreDoc doc : scoreDocs) {\n                    ShardScoreDoc nodeScoreDoc = new ShardScoreDoc(result.shardTarget(), doc.doc, doc.score);\n                    if (queue.insertWithOverflow(nodeScoreDoc) == nodeScoreDoc) {\n                        // filled the queue, break\n                        break;\n                    }\n                }\n            }\n\n        }\n\n        int resultDocsSize = queryResultProvider.queryResult().size();\n        if (queryResultProvider.includeFetch()) {\n            // if we did both query and fetch on the same go, we have fetched all the docs from each shards already, use them...\n            resultDocsSize *= results.size();\n        }\n        if (totalNumDocs < queueSize) {\n            resultDocsSize = totalNumDocs - queryResultProvider.queryResult().from();\n        }\n\n        if (resultDocsSize <= 0) {\n            return EMPTY;\n        }\n\n        ShardDoc[] shardDocs = new ShardDoc[resultDocsSize];\n        for (int i = resultDocsSize - 1; i >= 0; i--)      // put docs in array\n            shardDocs[i] = (ShardDoc) queue.pop();\n        return shardDocs;\n    }","id":69639,"modified_method":"public ShardDoc[] sortDocs(Collection<? extends QuerySearchResultProvider> results) {\n        if (results.isEmpty()) {\n            return EMPTY;\n        }\n\n        QuerySearchResultProvider queryResultProvider = Iterables.get(results, 0);\n\n        int totalNumDocs = 0;\n\n        int queueSize = queryResultProvider.queryResult().from() + queryResultProvider.queryResult().size();\n        if (queryResultProvider.includeFetch()) {\n            // if we did both query and fetch on the same go, we have fetched all the docs from each shards already, use them...\n            queueSize *= results.size();\n        }\n        PriorityQueue queue;\n        if (queryResultProvider.queryResult().topDocs() instanceof TopFieldDocs) {\n            // sorting, first if the type is a String, chance CUSTOM to STRING so we handle nulls properly\n            TopFieldDocs fieldDocs = (TopFieldDocs) queryResultProvider.queryResult().topDocs();\n            for (int i = 0; i < fieldDocs.fields.length; i++) {\n                boolean resolvedField = false;\n                for (QuerySearchResultProvider resultProvider : results) {\n                    for (ScoreDoc doc : resultProvider.queryResult().topDocs().scoreDocs) {\n                        FieldDoc fDoc = (FieldDoc) doc;\n                        if (fDoc.fields[i] != null) {\n                            if (fDoc.fields[i] instanceof String) {\n                                fieldDocs.fields[i] = new SortField(fieldDocs.fields[i].getField(), SortField.STRING, fieldDocs.fields[i].getReverse());\n                            }\n                            resolvedField = true;\n                            break;\n                        }\n                    }\n                    if (resolvedField) {\n                        break;\n                    }\n                }\n            }\n            queue = new ShardFieldDocSortedHitQueue(fieldDocs.fields, queueSize);\n\n            // we need to accumulate for all and then filter the from\n            for (QuerySearchResultProvider resultProvider : results) {\n                QuerySearchResult result = resultProvider.queryResult();\n                ScoreDoc[] scoreDocs = result.topDocs().scoreDocs;\n                totalNumDocs += scoreDocs.length;\n                for (ScoreDoc doc : scoreDocs) {\n                    ShardFieldDoc nodeFieldDoc = new ShardFieldDoc(result.shardTarget(), doc.doc, doc.score, ((FieldDoc) doc).fields);\n                    if (queue.insertWithOverflow(nodeFieldDoc) == nodeFieldDoc) {\n                        // filled the queue, break\n                        break;\n                    }\n                }\n            }\n        } else {\n            queue = new ScoreDocQueue(queueSize); // we need to accumulate for all and then filter the from\n            for (QuerySearchResultProvider resultProvider : results) {\n                QuerySearchResult result = resultProvider.queryResult();\n                ScoreDoc[] scoreDocs = result.topDocs().scoreDocs;\n                totalNumDocs += scoreDocs.length;\n                for (ScoreDoc doc : scoreDocs) {\n                    ShardScoreDoc nodeScoreDoc = new ShardScoreDoc(result.shardTarget(), doc.doc, doc.score);\n                    if (queue.insertWithOverflow(nodeScoreDoc) == nodeScoreDoc) {\n                        // filled the queue, break\n                        break;\n                    }\n                }\n            }\n\n        }\n\n        int resultDocsSize = queryResultProvider.queryResult().size();\n        if (queryResultProvider.includeFetch()) {\n            // if we did both query and fetch on the same go, we have fetched all the docs from each shards already, use them...\n            resultDocsSize *= results.size();\n        }\n        if (totalNumDocs < queueSize) {\n            resultDocsSize = totalNumDocs - queryResultProvider.queryResult().from();\n        }\n\n        if (resultDocsSize <= 0) {\n            return EMPTY;\n        }\n\n        ShardDoc[] shardDocs = new ShardDoc[resultDocsSize];\n        for (int i = resultDocsSize - 1; i >= 0; i--)      // put docs in array\n            shardDocs[i] = (ShardDoc) queue.pop();\n        return shardDocs;\n    }","commit_id":"f0cf552bc594a6d56faf9354b7039cde33a5da60","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tJournalArticle article = null;\n\t\tString oldUrlTitle = StringPool.BLANK;\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tObject[] returnValue = updateArticle(actionRequest);\n\n\t\t\t\tarticle = (JournalArticle)returnValue[0];\n\t\t\t\toldUrlTitle = ((String)returnValue[1]);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.EXPIRE)) {\n\t\t\t\texpireArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.SUBSCRIBE)) {\n\t\t\t\tsubscribeArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNSUBSCRIBE)) {\n\t\t\t\tunsubscribeArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(\"removeArticlesLocale\")) {\n\t\t\t\tremoveArticlesLocale(actionRequest);\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(cmd)) {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\t\t\tactionRequest, \"workflowAction\",\n\t\t\t\t\tWorkflowConstants.ACTION_PUBLISH);\n\n\t\t\t\tif ((article != null) &&\n\t\t\t\t\t(workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT)) {\n\n\t\t\t\t\tredirect = getSaveAndContinueRedirect(\n\t\t\t\t\t\tportletConfig, actionRequest, article, redirect);\n\t\t\t\t}\n\n\t\t\t\tif (redirect.contains(\"/content/\" + oldUrlTitle + \"?\")) {\n\t\t\t\t\tint pos = redirect.indexOf(\"?\");\n\n\t\t\t\t\tif (pos == -1) {\n\t\t\t\t\t\tpos = redirect.length();\n\t\t\t\t\t}\n\n\t\t\t\t\tString newRedirect = redirect.substring(\n\t\t\t\t\t\t0, pos - oldUrlTitle.length());\n\n\t\t\t\t\tnewRedirect += article.getUrlTitle();\n\n\t\t\t\t\tif (oldUrlTitle.contains(\"/maximized\")) {\n\t\t\t\t\t\tnewRedirect += \"/maximized\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pos < redirect.length()) {\n\t\t\t\t\t\tnewRedirect +=\n\t\t\t\t\t\t\t\"?\" +\n\t\t\t\t\t\t\t\tredirect.substring(pos + 1, redirect.length());\n\t\t\t\t\t}\n\n\t\t\t\t\tredirect = newRedirect;\n\t\t\t\t}\n\n\t\t\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t\t\tthemeDisplay.getLayoutTypePortlet();\n\n\t\t\t\tif (layoutTypePortlet.hasPortletId(\n\t\t\t\t\t\tportletConfig.getPortletName())) {\n\n\t\t\t\t\tsendRedirect(actionRequest, actionResponse, redirect);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tactionResponse.sendRedirect(redirect);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchArticleException ||\n\t\t\t\te instanceof NoSuchStructureException ||\n\t\t\t\te instanceof NoSuchTemplateException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.journal.error\");\n\t\t\t}\n\t\t\telse if (e instanceof ArticleContentException ||\n\t\t\t\t\t e instanceof ArticleDisplayDateException ||\n\t\t\t\t\t e instanceof ArticleExpirationDateException ||\n\t\t\t\t\t e instanceof ArticleIdException ||\n\t\t\t\t\t e instanceof ArticleSmallImageNameException ||\n\t\t\t\t\t e instanceof ArticleSmallImageSizeException ||\n\t\t\t\t\t e instanceof ArticleTitleException ||\n\t\t\t\t\t e instanceof ArticleTypeException ||\n\t\t\t\t\t e instanceof ArticleVersionException ||\n\t\t\t\t\t e instanceof DuplicateArticleIdException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse if (e instanceof AssetTagException) {\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","id":69640,"modified_method":"public void processAction(\n\t\t\tActionMapping mapping, ActionForm form, PortletConfig portletConfig,\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tJournalArticle article = null;\n\t\tString oldUrlTitle = StringPool.BLANK;\n\n\t\ttry {\n\t\t\tif (cmd.equals(Constants.ADD) || cmd.equals(Constants.UPDATE)) {\n\t\t\t\tObject[] returnValue = updateArticle(actionRequest);\n\n\t\t\t\tarticle = (JournalArticle)returnValue[0];\n\t\t\t\toldUrlTitle = ((String)returnValue[1]);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.DELETE)) {\n\t\t\t\tdeleteArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.EXPIRE)) {\n\t\t\t\texpireArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.SUBSCRIBE)) {\n\t\t\t\tsubscribeArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(Constants.UNSUBSCRIBE)) {\n\t\t\t\tunsubscribeArticles(actionRequest);\n\t\t\t}\n\t\t\telse if (cmd.equals(\"removeArticlesLocale\")) {\n\t\t\t\tremoveArticlesLocale(actionRequest);\n\t\t\t}\n\n\t\t\tif (Validator.isNotNull(cmd)) {\n\t\t\t\tString redirect = ParamUtil.getString(\n\t\t\t\t\tactionRequest, \"redirect\");\n\n\t\t\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\t\t\tactionRequest, \"workflowAction\",\n\t\t\t\t\tWorkflowConstants.ACTION_PUBLISH);\n\n\t\t\t\tif ((article != null) &&\n\t\t\t\t\t(workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT)) {\n\n\t\t\t\t\tredirect = getSaveAndContinueRedirect(\n\t\t\t\t\t\tportletConfig, actionRequest, article, redirect);\n\t\t\t\t}\n\n\t\t\t\tif (redirect.contains(\"/content/\" + oldUrlTitle + \"?\")) {\n\t\t\t\t\tint pos = redirect.indexOf(\"?\");\n\n\t\t\t\t\tif (pos == -1) {\n\t\t\t\t\t\tpos = redirect.length();\n\t\t\t\t\t}\n\n\t\t\t\t\tString newRedirect = redirect.substring(\n\t\t\t\t\t\t0, pos - oldUrlTitle.length());\n\n\t\t\t\t\tnewRedirect += article.getUrlTitle();\n\n\t\t\t\t\tif (oldUrlTitle.contains(\"/maximized\")) {\n\t\t\t\t\t\tnewRedirect += \"/maximized\";\n\t\t\t\t\t}\n\n\t\t\t\t\tif (pos < redirect.length()) {\n\t\t\t\t\t\tnewRedirect +=\n\t\t\t\t\t\t\t\"?\" +\n\t\t\t\t\t\t\t\tredirect.substring(pos + 1, redirect.length());\n\t\t\t\t\t}\n\n\t\t\t\t\tredirect = newRedirect;\n\t\t\t\t}\n\n\t\t\t\tsendRedirect(actionRequest, actionResponse, redirect);\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tif (e instanceof NoSuchArticleException ||\n\t\t\t\te instanceof NoSuchStructureException ||\n\t\t\t\te instanceof NoSuchTemplateException ||\n\t\t\t\te instanceof PrincipalException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\n\t\t\t\tsetForward(actionRequest, \"portlet.journal.error\");\n\t\t\t}\n\t\t\telse if (e instanceof ArticleContentException ||\n\t\t\t\t\t e instanceof ArticleDisplayDateException ||\n\t\t\t\t\t e instanceof ArticleExpirationDateException ||\n\t\t\t\t\t e instanceof ArticleIdException ||\n\t\t\t\t\t e instanceof ArticleSmallImageNameException ||\n\t\t\t\t\t e instanceof ArticleSmallImageSizeException ||\n\t\t\t\t\t e instanceof ArticleTitleException ||\n\t\t\t\t\t e instanceof ArticleTypeException ||\n\t\t\t\t\t e instanceof ArticleVersionException ||\n\t\t\t\t\t e instanceof DuplicateArticleIdException) {\n\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName());\n\t\t\t}\n\t\t\telse if (e instanceof AssetTagException) {\n\t\t\t\tSessionErrors.add(actionRequest, e.getClass().getName(), e);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}","commit_id":"4b4ecdc0bc79ae5d57079c53929f36eab46f1c17","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void sendRedirect(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse,\n\t\t\tString redirect)\n\t\tthrows IOException {\n\n\t\tif (SessionErrors.isEmpty(actionRequest)) {\n\t\t\taddSuccessMessage(actionRequest, actionResponse);\n\t\t}\n\n\t\tif (Validator.isNull(redirect)) {\n\t\t\tredirect = ParamUtil.getString(actionRequest, \"redirect\");\n\t\t}\n\n\t\tif (Validator.isNotNull(redirect)) {\n\n\t\t\t// LPS-1928\n\n\t\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\t\tactionRequest);\n\n\t\t\tif ((BrowserSnifferUtil.isIe(request)) &&\n\t\t\t\t(BrowserSnifferUtil.getMajorVersion(request) == 6.0) &&\n\t\t\t\t(redirect.contains(StringPool.POUND))) {\n\n\t\t\t\tString redirectToken = \"&#\";\n\n\t\t\t\tif (!redirect.contains(StringPool.QUESTION)) {\n\t\t\t\t\tredirectToken = StringPool.QUESTION + redirectToken;\n\t\t\t\t}\n\n\t\t\t\tredirect = StringUtil.replace(\n\t\t\t\t\tredirect, StringPool.POUND, redirectToken);\n\t\t\t}\n\n\t\t\tactionResponse.sendRedirect(redirect);\n\t\t}\n\t}","id":69641,"modified_method":"protected void sendRedirect(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse,\n\t\t\tString redirect)\n\t\tthrows IOException {\n\n\t\tif (SessionErrors.isEmpty(actionRequest)) {\n\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t(ThemeDisplay)actionRequest.getAttribute(\n\t\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\tLayoutTypePortlet layoutTypePortlet =\n\t\t\t\tthemeDisplay.getLayoutTypePortlet();\n\n\t\t\tPortletConfig portletConfig =\n\t\t\t\t(PortletConfig)actionRequest.getAttribute(\n\t\t\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\t\tboolean hasPortletId = false;\n\n\t\t\ttry {\n\t\t\t\thasPortletId = layoutTypePortlet.hasPortletId(\n\t\t\t\t\tportletConfig.getPortletName());\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tif (hasPortletId) {\n\t\t\t\taddSuccessMessage(actionRequest, actionResponse);\n\t\t\t}\n\t\t}\n\n\t\tif (Validator.isNull(redirect)) {\n\t\t\tredirect = ParamUtil.getString(actionRequest, \"redirect\");\n\t\t}\n\n\t\tif (Validator.isNotNull(redirect)) {\n\n\t\t\t// LPS-1928\n\n\t\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\t\tactionRequest);\n\n\t\t\tif ((BrowserSnifferUtil.isIe(request)) &&\n\t\t\t\t(BrowserSnifferUtil.getMajorVersion(request) == 6.0) &&\n\t\t\t\t(redirect.contains(StringPool.POUND))) {\n\n\t\t\t\tString redirectToken = \"&#\";\n\n\t\t\t\tif (!redirect.contains(StringPool.QUESTION)) {\n\t\t\t\t\tredirectToken = StringPool.QUESTION + redirectToken;\n\t\t\t\t}\n\n\t\t\t\tredirect = StringUtil.replace(\n\t\t\t\t\tredirect, StringPool.POUND, redirectToken);\n\t\t\t}\n\n\t\t\tactionResponse.sendRedirect(redirect);\n\t\t}\n\t}","commit_id":"4b4ecdc0bc79ae5d57079c53929f36eab46f1c17","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String getForwardKey(HttpServletRequest request) {\n\t\tPortletConfigImpl portletConfig =\n\t\t\t(PortletConfigImpl)request.getAttribute(\n\t\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\treturn PortalUtil.getPortletNamespace(portletConfig.getPortletId()) +\n\t\t\tWebKeys.PORTLET_STRUTS_FORWARD;\n\t}","id":69642,"modified_method":"public static String getForwardKey(HttpServletRequest request) {\n\t\tPortletConfigImpl portletConfigImpl =\n\t\t\t(PortletConfigImpl)request.getAttribute(\n\t\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\tString portletNamespace = PortalUtil.getPortletNamespace(\n\t\t\tportletConfigImpl.getPortletId());\n\n\t\treturn portletNamespace.concat(WebKeys.PORTLET_STRUTS_FORWARD);\n\t}","commit_id":"4b4ecdc0bc79ae5d57079c53929f36eab46f1c17","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static String getForwardKey(PortletRequest portletRequest) {\n\t\tPortletConfigImpl portletConfig =\n\t\t\t(PortletConfigImpl)portletRequest.getAttribute(\n\t\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\treturn PortalUtil.getPortletNamespace(portletConfig.getPortletId()) +\n\t\t\tWebKeys.PORTLET_STRUTS_FORWARD;\n\t}","id":69643,"modified_method":"public static String getForwardKey(PortletRequest portletRequest) {\n\t\tPortletConfigImpl portletConfigImpl =\n\t\t\t(PortletConfigImpl)portletRequest.getAttribute(\n\t\t\t\tJavaConstants.JAVAX_PORTLET_CONFIG);\n\n\t\tString portletNamespace = PortalUtil.getPortletNamespace(\n\t\t\tportletConfigImpl.getPortletId());\n\n\t\treturn portletNamespace.concat(WebKeys.PORTLET_STRUTS_FORWARD);\n\t}","commit_id":"4b4ecdc0bc79ae5d57079c53929f36eab46f1c17","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String generateToString() {\n\t\tString toString = super.generateToString();\n\n\t\tString layoutFriendlyURL = getLayoutFriendlyURL();\n\t\tString tabs2 = getParameter(\"tabs2\");\n\n\t\tif (Validator.isNull(layoutFriendlyURL) || Validator.isNotNull(tabs2)) {\n\t\t\treturn toString;\n\t\t}\n\n\t\tString friendlyURL = null;\n\n\t\tString strutsAction = GetterUtil.getString(\n\t\t\tgetParameter(\"struts_action\"));\n\n\t\tif (strutsAction.equals(\"/message_boards/view\")) {\n\t\t\tString categoryId = getParameter(\"categoryId\");\n\n\t\t\tif (Validator.isNotNull(categoryId)) {\n\t\t\t\tfriendlyURL = \"/message_boards/category/\" + categoryId;\n\t\t\t}\n\t\t}\n\t\telse if (strutsAction.equals(\"/message_boards/view_message\")) {\n\t\t\tString messageId = getParameter(\"messageId\");\n\n\t\t\tif (Validator.isNotNull(messageId)) {\n\t\t\t\tfriendlyURL = \"/message_boards/message/\" + messageId;\n\t\t\t}\n\t\t}\n\n\t\tif (Validator.isNotNull(friendlyURL)) {\n\t\t\tint pos = toString.indexOf(layoutFriendlyURL);\n\n\t\t\ttoString =\n\t\t\t\ttoString.substring(0, pos + layoutFriendlyURL.length()) +\n\t\t\t\t\tfriendlyURL;\n\t\t}\n\n\t\treturn toString;\n\t}","id":69644,"modified_method":"protected String generateToString() {\n\t\tString toString = super.generateToString();\n\n\t\tString layoutFriendlyURL = getLayoutFriendlyURL();\n\t\tString tabs2 = getParameter(\"tabs2\");\n\n\t\tif (Validator.isNull(layoutFriendlyURL) || Validator.isNotNull(tabs2)) {\n\t\t\treturn toString;\n\t\t}\n\n\t\tString friendlyURL = null;\n\n\t\tString strutsAction = GetterUtil.getString(\n\t\t\tgetParameter(\"struts_action\"));\n\n\t\tif (strutsAction.equals(\"/message_boards/view\")) {\n\t\t\tString categoryId = getParameter(\"categoryId\");\n\n\t\t\tif (Validator.isNotNull(categoryId)) {\n\t\t\t\tfriendlyURL = \"/message_boards/category/\" + categoryId;\n\t\t\t}\n\t\t}\n\t\telse if (strutsAction.equals(\"/message_boards/view_message\")) {\n\t\t\tString messageId = getParameter(\"messageId\");\n\n\t\t\tif (Validator.isNotNull(messageId)) {\n\t\t\t\tfriendlyURL = \"/message_boards/message/\" + messageId;\n\t\t\t}\n\t\t}\n\n\t\tif (Validator.isNotNull(friendlyURL)) {\n\t\t\tint pos = toString.indexOf(layoutFriendlyURL);\n\n\t\t\ttoString =\n\t\t\t\ttoString.substring(0, pos + layoutFriendlyURL.length()) +\n\t\t\t\t\tfriendlyURL;\n\n\t\t\tString threadView = getParameter(\"threadView\");\n\n\t\t\tif (Validator.isNotNull(threadView)) {\n\t\t\t\ttoString += \"?\" + getNamespace() + \"threadView=\" + threadView;\n\t\t\t}\n\t\t}\n\n\t\treturn toString;\n\t}","commit_id":"473ad2f647f8a552cc74aa32883a274efc3f647a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String generateToString() {\n\t\tStringMaker sm = new StringMaker();\n\n\t\tThemeDisplay themeDisplay =\n\t\t\t(ThemeDisplay)_req.getAttribute(WebKeys.THEME_DISPLAY);\n\n\t\tPortletDisplay portletDisplay = themeDisplay.getPortletDisplay();\n\n\t\tString portalURL = PortalUtil.getPortalURL(_req, _secure);\n\n\t\tsm.append(portalURL);\n\n\t\ttry {\n\t\t\tif (_layoutFriendlyURL == null) {\n\t\t\t\tLayout layout = getLayout();\n\n\t\t\t\tif (layout != null) {\n\t\t\t\t\t_layoutFriendlyURL = GetterUtil.getString(\n\t\t\t\t\t\tPortalUtil.getLayoutFriendlyURL(layout, themeDisplay));\n\n\t\t\t\t\t// A virtual host URL will contain the complete path. Since\n\t\t\t\t\t// that's not needed, strip the redundant portal URL.\n\n\t\t\t\t\tif (_layoutFriendlyURL.startsWith(portalURL)) {\n\t\t\t\t\t\t_layoutFriendlyURL = _layoutFriendlyURL.substring(\n\t\t\t\t\t\t\tportalURL.length(), _layoutFriendlyURL.length());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e);\n\t\t}\n\n\t\tKey key = null;\n\n\t\ttry {\n\t\t\tif (_encrypt) {\n\t\t\t\tCompany company = PortalUtil.getCompany(_req);\n\n\t\t\t\tkey = company.getKeyObj();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e);\n\t\t}\n\n\t\tif (Validator.isNull(_layoutFriendlyURL)) {\n\t\t\tsm.append(themeDisplay.getPathMain());\n\t\t\tsm.append(\"/portal/layout?\");\n\n\t\t\tsm.append(\"p_l_id\");\n\t\t\tsm.append(StringPool.EQUAL);\n\t\t\tsm.append(_processValue(key, _plid));\n\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t}\n\t\telse {\n\t\t\tsm.append(_layoutFriendlyURL);\n\t\t\tsm.append(StringPool.QUESTION);\n\t\t}\n\n\t\tsm.append(\"p_p_id\");\n\t\tsm.append(StringPool.EQUAL);\n\t\tsm.append(_processValue(key, _portletName));\n\t\tsm.append(StringPool.AMPERSAND);\n\n\t\tsm.append(\"p_p_action\");\n\t\tsm.append(StringPool.EQUAL);\n\t\tsm.append(_action ? _processValue(key, \"1\") : _processValue(key, \"0\"));\n\t\tsm.append(StringPool.AMPERSAND);\n\n\t\tif (_windowState != null) {\n\t\t\tsm.append(\"p_p_state\");\n\t\t\tsm.append(StringPool.EQUAL);\n\t\t\tsm.append(_processValue(key, _windowState.toString()));\n\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t}\n\n\t\tif (_portletMode != null) {\n\t\t\tsm.append(\"p_p_mode\");\n\t\t\tsm.append(StringPool.EQUAL);\n\t\t\tsm.append(_processValue(key, _portletMode.toString()));\n\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t}\n\n\t\tsm.append(\"p_p_col_id\");\n\t\tsm.append(StringPool.EQUAL);\n\t\tsm.append(_processValue(key, portletDisplay.getColumnId()));\n\t\tsm.append(StringPool.AMPERSAND);\n\n\t\tsm.append(\"p_p_col_pos\");\n\t\tsm.append(StringPool.EQUAL);\n\t\tsm.append(_processValue(key, portletDisplay.getColumnPos()));\n\t\tsm.append(StringPool.AMPERSAND);\n\n\t\tsm.append(\"p_p_col_count\");\n\t\tsm.append(StringPool.EQUAL);\n\t\tsm.append(_processValue(key, portletDisplay.getColumnCount()));\n\t\tsm.append(StringPool.AMPERSAND);\n\n\t\tif (Validator.isNotNull(_doAsUserId)) {\n\t\t\ttry {\n\t\t\t\tCompany company = PortalUtil.getCompany(_req);\n\n\t\t\t\tsm.append(\"doAsUserId\");\n\t\t\t\tsm.append(StringPool.EQUAL);\n\t\t\t\tsm.append(_processValue(company.getKeyObj(), _doAsUserId));\n\t\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tString doAsUserId = themeDisplay.getDoAsUserId();\n\n\t\t\tif (Validator.isNotNull(doAsUserId)) {\n\t\t\t\tsm.append(\"doAsUserId\");\n\t\t\t\tsm.append(StringPool.EQUAL);\n\t\t\t\tsm.append(_processValue(key, doAsUserId));\n\t\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t\t}\n\t\t}\n\n\t\tIterator itr = _params.entrySet().iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tMap.Entry entry = (Map.Entry)itr.next();\n\n\t\t\tString name =\n\t\t\t\tPortalUtil.getPortletNamespace(_portletName) +\n\t\t\t\t(String)entry.getKey();\n\t\t\tString[] values = (String[])entry.getValue();\n\n\t\t\tfor (int i = 0; i < values.length; i++) {\n\t\t\t\tsm.append(name);\n\t\t\t\tsm.append(StringPool.EQUAL);\n\t\t\t\tsm.append(_processValue(key, values[i]));\n\n\t\t\t\tif ((i + 1 < values.length) || itr.hasNext()) {\n\t\t\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (_encrypt) {\n\t\t\tsm.append(StringPool.AMPERSAND + WebKeys.ENCRYPT + \"=1\");\n\t\t}\n\n\t\tif (GetterUtil.getBoolean(PropsUtil.get(\n\t\t\t\tPropsUtil.PORTLET_URL_ANCHOR_ENABLE))) {\n\n\t\t\tif (_anchor && (_windowState != null) &&\n\t\t\t\t(!_windowState.equals(WindowState.MAXIMIZED)) &&\n\t\t\t\t(!_windowState.equals(LiferayWindowState.EXCLUSIVE)) &&\n\t\t\t\t(!_windowState.equals(LiferayWindowState.POP_UP))) {\n\n\t\t\t\tif (sm.lastIndexOf(StringPool.AMPERSAND) != (sm.length() - 1)) {\n\t\t\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t\t\t}\n\n\t\t\t\tsm.append(\"#p_\").append(_portletName);\n\t\t\t}\n\t\t}\n\n\t\treturn sm.toString();\n\t}","id":69645,"modified_method":"protected String generateToString() {\n\t\tStringMaker sm = new StringMaker();\n\n\t\tThemeDisplay themeDisplay =\n\t\t\t(ThemeDisplay)_req.getAttribute(WebKeys.THEME_DISPLAY);\n\n\t\tPortletDisplay portletDisplay = themeDisplay.getPortletDisplay();\n\n\t\tString portalURL = PortalUtil.getPortalURL(_req, _secure);\n\n\t\tsm.append(portalURL);\n\n\t\ttry {\n\t\t\tif (_layoutFriendlyURL == null) {\n\t\t\t\tLayout layout = getLayout();\n\n\t\t\t\tif (layout != null) {\n\t\t\t\t\t_layoutFriendlyURL = GetterUtil.getString(\n\t\t\t\t\t\tPortalUtil.getLayoutFriendlyURL(layout, themeDisplay));\n\n\t\t\t\t\t// A virtual host URL will contain the complete path. Since\n\t\t\t\t\t// that's not needed, strip the redundant portal URL.\n\n\t\t\t\t\tif (_layoutFriendlyURL.startsWith(portalURL)) {\n\t\t\t\t\t\t_layoutFriendlyURL = _layoutFriendlyURL.substring(\n\t\t\t\t\t\t\tportalURL.length(), _layoutFriendlyURL.length());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e);\n\t\t}\n\n\t\tKey key = null;\n\n\t\ttry {\n\t\t\tif (_encrypt) {\n\t\t\t\tCompany company = PortalUtil.getCompany(_req);\n\n\t\t\t\tkey = company.getKeyObj();\n\t\t\t}\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t_log.error(e);\n\t\t}\n\n\t\tif (Validator.isNull(_layoutFriendlyURL)) {\n\t\t\tsm.append(themeDisplay.getPathMain());\n\t\t\tsm.append(\"/portal/layout?\");\n\n\t\t\tsm.append(\"p_l_id\");\n\t\t\tsm.append(StringPool.EQUAL);\n\t\t\tsm.append(_processValue(key, _plid));\n\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t}\n\t\telse {\n\t\t\tsm.append(_layoutFriendlyURL);\n\t\t\tsm.append(StringPool.QUESTION);\n\t\t}\n\n\t\tsm.append(\"p_p_id\");\n\t\tsm.append(StringPool.EQUAL);\n\t\tsm.append(_processValue(key, _portletName));\n\t\tsm.append(StringPool.AMPERSAND);\n\n\t\tsm.append(\"p_p_action\");\n\t\tsm.append(StringPool.EQUAL);\n\t\tsm.append(_action ? _processValue(key, \"1\") : _processValue(key, \"0\"));\n\t\tsm.append(StringPool.AMPERSAND);\n\n\t\tif (_windowState != null) {\n\t\t\tsm.append(\"p_p_state\");\n\t\t\tsm.append(StringPool.EQUAL);\n\t\t\tsm.append(_processValue(key, _windowState.toString()));\n\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t}\n\n\t\tif (_portletMode != null) {\n\t\t\tsm.append(\"p_p_mode\");\n\t\t\tsm.append(StringPool.EQUAL);\n\t\t\tsm.append(_processValue(key, _portletMode.toString()));\n\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t}\n\n\t\tsm.append(\"p_p_col_id\");\n\t\tsm.append(StringPool.EQUAL);\n\t\tsm.append(_processValue(key, portletDisplay.getColumnId()));\n\t\tsm.append(StringPool.AMPERSAND);\n\n\t\tsm.append(\"p_p_col_pos\");\n\t\tsm.append(StringPool.EQUAL);\n\t\tsm.append(_processValue(key, portletDisplay.getColumnPos()));\n\t\tsm.append(StringPool.AMPERSAND);\n\n\t\tsm.append(\"p_p_col_count\");\n\t\tsm.append(StringPool.EQUAL);\n\t\tsm.append(_processValue(key, portletDisplay.getColumnCount()));\n\t\tsm.append(StringPool.AMPERSAND);\n\n\t\tif (Validator.isNotNull(_doAsUserId)) {\n\t\t\ttry {\n\t\t\t\tCompany company = PortalUtil.getCompany(_req);\n\n\t\t\t\tsm.append(\"doAsUserId\");\n\t\t\t\tsm.append(StringPool.EQUAL);\n\t\t\t\tsm.append(_processValue(company.getKeyObj(), _doAsUserId));\n\t\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tString doAsUserId = themeDisplay.getDoAsUserId();\n\n\t\t\tif (Validator.isNotNull(doAsUserId)) {\n\t\t\t\tsm.append(\"doAsUserId\");\n\t\t\t\tsm.append(StringPool.EQUAL);\n\t\t\t\tsm.append(_processValue(key, doAsUserId));\n\t\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t\t}\n\t\t}\n\n\t\tIterator itr = _params.entrySet().iterator();\n\n\t\twhile (itr.hasNext()) {\n\t\t\tMap.Entry entry = (Map.Entry)itr.next();\n\n\t\t\tString name = (String)entry.getKey();\n\t\t\tString[] values = (String[])entry.getValue();\n\n\t\t\tfor (int i = 0; i < values.length; i++) {\n\t\t\t\tsm.append(getNamespace());\n\t\t\t\tsm.append(name);\n\t\t\t\tsm.append(StringPool.EQUAL);\n\t\t\t\tsm.append(_processValue(key, values[i]));\n\n\t\t\t\tif ((i + 1 < values.length) || itr.hasNext()) {\n\t\t\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (_encrypt) {\n\t\t\tsm.append(StringPool.AMPERSAND + WebKeys.ENCRYPT + \"=1\");\n\t\t}\n\n\t\tif (GetterUtil.getBoolean(PropsUtil.get(\n\t\t\t\tPropsUtil.PORTLET_URL_ANCHOR_ENABLE))) {\n\n\t\t\tif (_anchor && (_windowState != null) &&\n\t\t\t\t(!_windowState.equals(WindowState.MAXIMIZED)) &&\n\t\t\t\t(!_windowState.equals(LiferayWindowState.EXCLUSIVE)) &&\n\t\t\t\t(!_windowState.equals(LiferayWindowState.POP_UP))) {\n\n\t\t\t\tif (sm.lastIndexOf(StringPool.AMPERSAND) != (sm.length() - 1)) {\n\t\t\t\t\tsm.append(StringPool.AMPERSAND);\n\t\t\t\t}\n\n\t\t\t\tsm.append(\"#p_\").append(_portletName);\n\t\t\t}\n\t\t}\n\n\t\treturn sm.toString();\n\t}","commit_id":"473ad2f647f8a552cc74aa32883a274efc3f647a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void recycle() {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Recycling instance \" + hashCode());\n\t\t}\n\n\t\t_req = null;\n\t\t_res = null;\n\t\t_portletName = null;\n\t\t_portlet = null;\n\t\t_companyId = null;\n\t\t_plid = null;\n\t\t_urlEncoder = null;\n\t\t_title = null;\n\t\t_useDefaultTemplate = null;\n\t\t_contentType = null;\n\t\t_calledGetPortletOutputStream = false;\n\t\t_calledGetWriter = false;\n\t}","id":69646,"modified_method":"protected void recycle() {\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Recycling instance \" + hashCode());\n\t\t}\n\n\t\t_req = null;\n\t\t_res = null;\n\t\t_portletName = null;\n\t\t_portlet = null;\n\t\t_namespace = null;\n\t\t_companyId = null;\n\t\t_plid = null;\n\t\t_urlEncoder = null;\n\t\t_title = null;\n\t\t_useDefaultTemplate = null;\n\t\t_contentType = null;\n\t\t_calledGetPortletOutputStream = false;\n\t\t_calledGetWriter = false;\n\t}","commit_id":"473ad2f647f8a552cc74aa32883a274efc3f647a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getNamespace() {\n\t\treturn PortalUtil.getPortletNamespace(_portletName);\n\t}","id":69647,"modified_method":"public String getNamespace() {\n\t\tif (_namespace == null) {\n\t\t\t_namespace = PortalUtil.getPortletNamespace(_portletName);\n\t\t}\n\n\t\treturn _namespace;\n\t}","commit_id":"473ad2f647f8a552cc74aa32883a274efc3f647a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    @Override\n    protected void addConfig(RebindContext rebindContext, EntityMemento memento) {\n        for (Map.Entry<ConfigKey<?>, Object> entry : memento.getConfig().entrySet()) {\n            try {\n                ConfigKey<?> key = entry.getKey();\n                Object value = entry.getValue();\n                @SuppressWarnings(\"unused\") // just to ensure we can load the declared type? or maybe not needed\n                Class<?> type = (key.getType() != null) ? key.getType() : rebindContext.loadClass(key.getTypeName());\n                entity.config().set((ConfigKey<Object>)key, value);\n            } catch (ClassNotFoundException e) {\n                throw Throwables.propagate(e);\n            }\n        }\n        \n        ((EntityInternal)entity).getConfigMap().addToLocalBag(memento.getConfigUnmatched());\n        ((EntityInternal)entity).refreshInheritedConfig();\n    }","id":69648,"modified_method":"@SuppressWarnings(\"unchecked\")\n    @Override\n    protected void addConfig(RebindContext rebindContext, EntityMemento memento) {\n        ConfigKey<?> key = null;\n        for (Map.Entry<ConfigKey<?>, Object> entry : memento.getConfig().entrySet()) {\n            try {\n                key = entry.getKey();\n                Object value = entry.getValue();\n                @SuppressWarnings(\"unused\") // just to ensure we can load the declared type? or maybe not needed\n                        // In what cases key.getType() will be null?\n                Class<?> type = (key.getType() != null) ? key.getType() : rebindContext.loadClass(key.getTypeName());\n                entity.config().set((ConfigKey<Object>)key, value);\n            } catch (ClassNotFoundException|IllegalArgumentException e) {\n                rebindContext.getExceptionHandler().onAddConfigFailed(memento, key, e);\n            }\n        }\n        \n        ((EntityInternal)entity).getConfigMap().addToLocalBag(memento.getConfigUnmatched());\n        ((EntityInternal)entity).refreshInheritedConfig();\n    }","commit_id":"680ee07b38da835a3cb3a2c2efc5e0ff3076169b","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public RebindExceptionHandlerImpl(Builder builder) {\n        this.danglingRefFailureMode = checkNotNull(builder.danglingRefFailureMode, \"danglingRefFailureMode\");\n        this.rebindFailureMode = checkNotNull(builder.rebindFailureMode, \"rebindFailureMode\");\n        this.addPolicyFailureMode = checkNotNull(builder.addPolicyFailureMode, \"addPolicyFailureMode\");\n        this.loadPolicyFailureMode = checkNotNull(builder.deserializePolicyFailureMode, \"deserializePolicyFailureMode\");\n        this.danglingRefsQuorumRequiredHealthy = checkNotNull(builder.danglingRefsQuorumRequiredHealthy, \"danglingRefsQuorumRequiredHealthy\");\n    }","id":69649,"modified_method":"public RebindExceptionHandlerImpl(Builder builder) {\n        this.danglingRefFailureMode = checkNotNull(builder.danglingRefFailureMode, \"danglingRefFailureMode\");\n        this.rebindFailureMode = checkNotNull(builder.rebindFailureMode, \"rebindFailureMode\");\n        this.addConfigFailureMode = checkNotNull(builder.addConfigFailureMode, \"addConfigFailureMode\");\n        this.addPolicyFailureMode = checkNotNull(builder.addPolicyFailureMode, \"addPolicyFailureMode\");\n        this.loadPolicyFailureMode = checkNotNull(builder.deserializePolicyFailureMode, \"deserializePolicyFailureMode\");\n        this.danglingRefsQuorumRequiredHealthy = checkNotNull(builder.danglingRefsQuorumRequiredHealthy, \"danglingRefsQuorumRequiredHealthy\");\n    }","commit_id":"680ee07b38da835a3cb3a2c2efc5e0ff3076169b","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public RebindManagerImpl(ManagementContextInternal managementContext) {\n        this.managementContext = managementContext;\n        this.persistencePublicChangeListener = ChangeListener.NOOP;\n        \n        this.persistPoliciesEnabled = BrooklynFeatureEnablement.isEnabled(BrooklynFeatureEnablement.FEATURE_POLICY_PERSISTENCE_PROPERTY);\n        this.persistEnrichersEnabled = BrooklynFeatureEnablement.isEnabled(BrooklynFeatureEnablement.FEATURE_ENRICHER_PERSISTENCE_PROPERTY);\n        this.persistFeedsEnabled = BrooklynFeatureEnablement.isEnabled(BrooklynFeatureEnablement.FEATURE_FEED_PERSISTENCE_PROPERTY);\n        this.persistCatalogItemsEnabled = BrooklynFeatureEnablement.isEnabled(BrooklynFeatureEnablement.FEATURE_CATALOG_PERSISTENCE_PROPERTY);\n\n        danglingRefFailureMode = managementContext.getConfig().getConfig(DANGLING_REFERENCE_FAILURE_MODE);\n        rebindFailureMode = managementContext.getConfig().getConfig(REBIND_FAILURE_MODE);\n        addPolicyFailureMode = managementContext.getConfig().getConfig(ADD_POLICY_FAILURE_MODE);\n        loadPolicyFailureMode = managementContext.getConfig().getConfig(LOAD_POLICY_FAILURE_MODE);\n        \n        danglingRefsQuorumRequiredHealthy = managementContext.getConfig().getConfig(DANGLING_REFERENCES_MIN_REQUIRED_HEALTHY);\n\n        LOG.debug(\"{} initialized, settings: policies={}, enrichers={}, feeds={}, catalog={}\",\n                new Object[]{this, persistPoliciesEnabled, persistEnrichersEnabled, persistFeedsEnabled, persistCatalogItemsEnabled});\n    }","id":69650,"modified_method":"public RebindManagerImpl(ManagementContextInternal managementContext) {\n        this.managementContext = managementContext;\n        this.persistencePublicChangeListener = ChangeListener.NOOP;\n        \n        this.persistPoliciesEnabled = BrooklynFeatureEnablement.isEnabled(BrooklynFeatureEnablement.FEATURE_POLICY_PERSISTENCE_PROPERTY);\n        this.persistEnrichersEnabled = BrooklynFeatureEnablement.isEnabled(BrooklynFeatureEnablement.FEATURE_ENRICHER_PERSISTENCE_PROPERTY);\n        this.persistFeedsEnabled = BrooklynFeatureEnablement.isEnabled(BrooklynFeatureEnablement.FEATURE_FEED_PERSISTENCE_PROPERTY);\n        this.persistCatalogItemsEnabled = BrooklynFeatureEnablement.isEnabled(BrooklynFeatureEnablement.FEATURE_CATALOG_PERSISTENCE_PROPERTY);\n\n        danglingRefFailureMode = managementContext.getConfig().getConfig(DANGLING_REFERENCE_FAILURE_MODE);\n        rebindFailureMode = managementContext.getConfig().getConfig(REBIND_FAILURE_MODE);\n        addConfigFailureMode = managementContext.getConfig().getConfig(ADD_CONFIG_FAILURE_MODE);\n        addPolicyFailureMode = managementContext.getConfig().getConfig(ADD_POLICY_FAILURE_MODE);\n        loadPolicyFailureMode = managementContext.getConfig().getConfig(LOAD_POLICY_FAILURE_MODE);\n        \n        danglingRefsQuorumRequiredHealthy = managementContext.getConfig().getConfig(DANGLING_REFERENCES_MIN_REQUIRED_HEALTHY);\n\n        LOG.debug(\"{} initialized, settings: policies={}, enrichers={}, feeds={}, catalog={}\",\n                new Object[]{this, persistPoliciesEnabled, persistEnrichersEnabled, persistFeedsEnabled, persistCatalogItemsEnabled});\n    }","commit_id":"680ee07b38da835a3cb3a2c2efc5e0ff3076169b","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Override\n    public List<Application> rebind(ClassLoader classLoaderO, RebindExceptionHandler exceptionHandlerO, ManagementNodeState modeO) {\n        final ClassLoader classLoader = classLoaderO!=null ? classLoaderO :\n            managementContext.getCatalogClassLoader();\n        final RebindExceptionHandler exceptionHandler = exceptionHandlerO!=null ? exceptionHandlerO :\n            RebindExceptionHandlerImpl.builder()\n                .danglingRefFailureMode(danglingRefFailureMode)\n                .danglingRefQuorumRequiredHealthy(danglingRefsQuorumRequiredHealthy)\n                .rebindFailureMode(rebindFailureMode)\n                .addPolicyFailureMode(addPolicyFailureMode)\n                .loadPolicyFailureMode(loadPolicyFailureMode)\n                .build();\n        final ManagementNodeState mode = modeO!=null ? modeO : getRebindMode();\n        \n        if (mode!=ManagementNodeState.MASTER && mode!=ManagementNodeState.HOT_STANDBY && mode!=ManagementNodeState.HOT_BACKUP)\n            throw new IllegalStateException(\"Must be either master or hot standby/backup to rebind (mode \"+mode+\")\");\n\n        ExecutionContext ec = BasicExecutionContext.getCurrentExecutionContext();\n        if (ec == null) {\n            ec = managementContext.getServerExecutionContext();\n            Task<List<Application>> task = ec.submit(new Callable<List<Application>>() {\n                @Override public List<Application> call() throws Exception {\n                    return rebindImpl(classLoader, exceptionHandler, mode);\n                }});\n            try {\n                return task.get();\n            } catch (Exception e) {\n                throw Exceptions.propagate(e);\n            }\n        } else {\n            return rebindImpl(classLoader, exceptionHandler, mode);\n        }\n    }","id":69651,"modified_method":"@Override\n    public List<Application> rebind(ClassLoader classLoaderO, RebindExceptionHandler exceptionHandlerO, ManagementNodeState modeO) {\n        final ClassLoader classLoader = classLoaderO!=null ? classLoaderO :\n            managementContext.getCatalogClassLoader();\n        final RebindExceptionHandler exceptionHandler = exceptionHandlerO!=null ? exceptionHandlerO :\n            RebindExceptionHandlerImpl.builder()\n                .danglingRefFailureMode(danglingRefFailureMode)\n                .danglingRefQuorumRequiredHealthy(danglingRefsQuorumRequiredHealthy)\n                .rebindFailureMode(rebindFailureMode)\n                .addConfigFailureMode(addConfigFailureMode)\n                .addPolicyFailureMode(addPolicyFailureMode)\n                .loadPolicyFailureMode(loadPolicyFailureMode)\n                .build();\n        final ManagementNodeState mode = modeO!=null ? modeO : getRebindMode();\n        \n        if (mode!=ManagementNodeState.MASTER && mode!=ManagementNodeState.HOT_STANDBY && mode!=ManagementNodeState.HOT_BACKUP)\n            throw new IllegalStateException(\"Must be either master or hot standby/backup to rebind (mode \"+mode+\")\");\n\n        ExecutionContext ec = BasicExecutionContext.getCurrentExecutionContext();\n        if (ec == null) {\n            ec = managementContext.getServerExecutionContext();\n            Task<List<Application>> task = ec.submit(new Callable<List<Application>>() {\n                @Override public List<Application> call() throws Exception {\n                    return rebindImpl(classLoader, exceptionHandler, mode);\n                }});\n            try {\n                return task.get();\n            } catch (Exception e) {\n                throw Exceptions.propagate(e);\n            }\n        } else {\n            return rebindImpl(classLoader, exceptionHandler, mode);\n        }\n    }","commit_id":"680ee07b38da835a3cb3a2c2efc5e0ff3076169b","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"@Override\n    public BrooklynMementoRawData retrieveMementoRawData() {\n        RebindExceptionHandler exceptionHandler = RebindExceptionHandlerImpl.builder()\n                .danglingRefFailureMode(danglingRefFailureMode)\n                .rebindFailureMode(rebindFailureMode)\n                .addPolicyFailureMode(addPolicyFailureMode)\n                .loadPolicyFailureMode(loadPolicyFailureMode)\n                .build();\n        \n        return loadMementoRawData(exceptionHandler);\n    }","id":69652,"modified_method":"@Override\n    public BrooklynMementoRawData retrieveMementoRawData() {\n        RebindExceptionHandler exceptionHandler = RebindExceptionHandlerImpl.builder()\n                .danglingRefFailureMode(danglingRefFailureMode)\n                .rebindFailureMode(rebindFailureMode)\n                .addConfigFailureMode(addConfigFailureMode)\n                .addPolicyFailureMode(addPolicyFailureMode)\n                .loadPolicyFailureMode(loadPolicyFailureMode)\n                .build();\n        \n        return loadMementoRawData(exceptionHandler);\n    }","commit_id":"680ee07b38da835a3cb3a2c2efc5e0ff3076169b","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public void rebindPartialActive(CompoundTransformer transformer, Iterator<BrooklynObject> objectsToRebind) {\n        final ClassLoader classLoader = \n            managementContext.getCatalogClassLoader();\n        // TODO we might want different exception handling for partials;\n        // failure at various points should leave proxies in a sensible state,\n        // either pointing at old or at new, though this is relatively untested,\n        // and some things e.g. policies might not be properly started\n        final RebindExceptionHandler exceptionHandler = \n            RebindExceptionHandlerImpl.builder()\n                .danglingRefFailureMode(danglingRefFailureMode)\n                .danglingRefQuorumRequiredHealthy(danglingRefsQuorumRequiredHealthy)\n                .rebindFailureMode(rebindFailureMode)\n                .addPolicyFailureMode(addPolicyFailureMode)\n                .loadPolicyFailureMode(loadPolicyFailureMode)\n                .build();\n        final ManagementNodeState mode = getRebindMode();\n\n        ActivePartialRebindIteration iteration = new ActivePartialRebindIteration(this, mode, classLoader, exceptionHandler,\n            rebindActive, readOnlyRebindCount, rebindMetrics, persistenceStoreAccess);\n\n        iteration.setObjectIterator(Iterators.transform(objectsToRebind,\n            new Function<BrooklynObject,BrooklynObject>() {\n                @Override\n                public BrooklynObject apply(BrooklynObject obj) {\n                    // entities must be deproxied\n                    if (obj instanceof Entity) obj = Entities.deproxy((Entity)obj);\n                    return obj;\n                }\n            }));\n        if (transformer!=null) iteration.applyTransformer(transformer);\n        iteration.run();\n    }","id":69653,"modified_method":"public void rebindPartialActive(CompoundTransformer transformer, Iterator<BrooklynObject> objectsToRebind) {\n        final ClassLoader classLoader = \n            managementContext.getCatalogClassLoader();\n        // TODO we might want different exception handling for partials;\n        // failure at various points should leave proxies in a sensible state,\n        // either pointing at old or at new, though this is relatively untested,\n        // and some things e.g. policies might not be properly started\n        final RebindExceptionHandler exceptionHandler = \n            RebindExceptionHandlerImpl.builder()\n                .danglingRefFailureMode(danglingRefFailureMode)\n                .danglingRefQuorumRequiredHealthy(danglingRefsQuorumRequiredHealthy)\n                .rebindFailureMode(rebindFailureMode)\n                .addConfigFailureMode(addConfigFailureMode)\n                .addPolicyFailureMode(addPolicyFailureMode)\n                .loadPolicyFailureMode(loadPolicyFailureMode)\n                .build();\n        final ManagementNodeState mode = getRebindMode();\n\n        ActivePartialRebindIteration iteration = new ActivePartialRebindIteration(this, mode, classLoader, exceptionHandler,\n            rebindActive, readOnlyRebindCount, rebindMetrics, persistenceStoreAccess);\n\n        iteration.setObjectIterator(Iterators.transform(objectsToRebind,\n            new Function<BrooklynObject,BrooklynObject>() {\n                @Override\n                public BrooklynObject apply(BrooklynObject obj) {\n                    // entities must be deproxied\n                    if (obj instanceof Entity) obj = Entities.deproxy((Entity)obj);\n                    return obj;\n                }\n            }));\n        if (transformer!=null) iteration.applyTransformer(transformer);\n        iteration.run();\n    }","commit_id":"680ee07b38da835a3cb3a2c2efc5e0ff3076169b","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"/**\n     * Simple sub-query expression\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testSubExpressions_Simple() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        loadData(false);\n        VoltTable vt;\n\n        for (String tb: replicated_tbs) {\n            vt = client.callProcedure(\"@AdHoc\", \"select ID, DEPT FROM \"+ tb +\" where ID in \" +\n                    \" (select ID from \" + tb + \" WHERE ID > 3);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {4,2}, {5,2}});\n\n\n            vt = client.callProcedure(\"@AdHoc\", \"select ID, DEPT FROM \"+ tb +\" where abs(ID) in \" +\n                    \" (select ID from \" + tb + \" WHERE DEPT = 2 limit 1 offset 1);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {5,2}});\n\n            vt = client.callProcedure(\"@AdHoc\", \"select ID, DEPT FROM \"+ tb +\" where ID in \" +\n                    \" (select ID from \" + tb + \" WHERE ID > 2 limit 3 offset 1);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {4,2}, {5,2}});\n\n            vt = client.callProcedure(\"@AdHoc\", \"select ID, DEPT FROM \"+ tb +\" T1 where abs(ID) in \" +\n                    \" (select ID from \" + tb + \" WHERE ID > 4) \" +\n                    \"and exists (select 1 from \" + tb + \" where ID * T1.DEPT  = 10);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {5, 2}});\n\n            vt = client.callProcedure(\"@AdHoc\", \"select ID, DEPT FROM \"+ tb +\" T1 where \" +\n                    \"not exists (select 1 from \" + tb + \" where ID * T1.DEPT  = 10) \" +\n                    \"and T1.ID < 3 order by ID;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1, 1}, {2, 1} });\n\n            vt = client.callProcedure(\"@AdHoc\", \"select ID, DEPT FROM \"+ tb +\" T1 where \" +\n                    \"(abs(ID) + 1 - 1, DEPT) IN (select DEPT, WAGE/10 from \" + tb + \") \").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1, 1}});\n\n        }\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 T1 where exists \" +\n                        \"(SELECT 1 FROM R2 T2 where T1.ID * T2.ID  = ?) \"\n                        , 9).getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{3}});\n\n        // Subquery with a parent parameter TVE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 T1 where exists \" +\n                \"(SELECT 1 FROM R2 T2 where T1.ID * T2.ID  = 9) \").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{3}});\n\n        // Subquery with a grand-parent parameter TVE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from \" + tbs[0] + \" T1 where exists \" +\n                        \"(SELECT 1 FROM \" + tbs[1] + \" T2 where exists \" +\n                        \"(SELECT ID FROM \"+ tbs[1] +\" T3 WHERE T1.ID * T3.ID  = 9))\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{3}});\n\n        //IN with the select on the left side.\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 T1 where (select ID from R2 T2 where ID = 3) IN \" +\n                \"(SELECT ID FROM R2 T3 where T3.ID  = 3) \").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{1}, {2}, {3}, {4}, {5}});\n\n        // Cardinality error\n        try{\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select ID from R1 T1 where (select ID from R2 T2) IN \" +\n                            \"(SELECT 1 FROM R2 T3 where T1.ID * T3.ID  = ? limit 1 offset 1) \"\n                            , 9).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{3}});\n        } catch (ProcCallException ex) {\n            System.out.println(ex.getMessage());\n            String errMsg = (isHSQL()) ? \"cardinality violation\" :\n                \"More than one row returned by a scalar/row subquery\";\n            assertTrue(ex.getMessage().contains(errMsg));\n        }\n\n    }","id":69654,"modified_method":"/**\n     * Simple sub-query expression\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testSubExpressions_Simple() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        loadData(false);\n        VoltTable vt;\n\n        for (String tb: replicated_tbs) {\n            vt = client.callProcedure(\"@AdHoc\", \"select ID, DEPT FROM \"+ tb +\" where ID in \" +\n                    \" (select ID from \" + tb + \" WHERE ID > 3) order by ID;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {4,2}, {5,2}});\n\n            vt = client.callProcedure(\"@AdHoc\", \"select ID, DEPT FROM \"+ tb +\" where abs(ID) in \" +\n                    \" (select ID from \" + tb + \" WHERE DEPT = 2 limit 1 offset 1);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {5,2}});\n\n            vt = client.callProcedure(\"@AdHoc\", \"select ID, DEPT FROM \"+ tb +\" where ID in \" +\n                    \" (select ID from \" + tb + \" WHERE ID > 2 order by ID limit 3 offset 1) order by ID;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {4,2}, {5,2}});\n\n            vt = client.callProcedure(\"@AdHoc\", \"select ID, DEPT FROM \"+ tb +\" T1 where abs(ID) in \" +\n                    \" (select ID from \" + tb + \" WHERE ID > 4) \" +\n                    \"and exists (select 1 from \" + tb + \" where ID * T1.DEPT  = 10) order by ID;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {5, 2}});\n\n            vt = client.callProcedure(\"@AdHoc\", \"select ID, DEPT FROM \"+ tb +\" T1 where \" +\n                    \"not exists (select 1 from \" + tb + \" where ID * T1.DEPT  = 10) \" +\n                    \"and T1.ID < 3 order by ID;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1, 1}, {2, 1} });\n\n            vt = client.callProcedure(\"@AdHoc\", \"select ID, DEPT FROM \"+ tb +\" T1 where \" +\n                    \"(abs(ID) + 1 - 1, DEPT) IN (select DEPT, WAGE/10 from \" + tb + \") \").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1, 1}});\n        }\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 T1 where exists \" +\n                        \"(SELECT 1 FROM R2 T2 where T1.ID * T2.ID  = ?) \"\n                        , 9).getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{3}});\n\n        // Subquery with a parent parameter TVE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 T1 where exists \" +\n                \"(SELECT 1 FROM R2 T2 where T1.ID * T2.ID  = 9) \").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{3}});\n\n        // Subquery with a grand-parent parameter TVE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from \" + tbs[0] + \" T1 where exists \" +\n                        \"(SELECT 1 FROM \" + tbs[1] + \" T2 where exists \" +\n                        \"(SELECT ID FROM \"+ tbs[1] +\" T3 WHERE T1.ID * T3.ID  = 9))\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{3}});\n\n        //IN with the select on the left side.\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 T1 where (select ID from R2 T2 where ID = 3) IN \" +\n                \"(SELECT ID FROM R2 T3 where T3.ID  = 3) order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{1}, {2}, {3}, {4}, {5}});\n\n        // Cardinality error\n        try{\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select ID from R1 T1 where (select ID from R2 T2) IN \" +\n                            \"(SELECT 1 FROM R2 T3 where T1.ID * T3.ID  = ? order by ID limit 1 offset 1) \"\n                            , 9).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{3}});\n        } catch (ProcCallException ex) {\n            String errMsg = (isHSQL()) ? \"cardinality violation\" :\n                \"More than one row returned by a scalar/row subquery\";\n            assertTrue(ex.getMessage().contains(errMsg));\n        }\n\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * SELECT FROM WHERE OUTER OP INNER inner.\n     * If there is a match, IN evalueates to TRUE\n     * If there is no match, IN evaluates to FASLE if the INNER result set is empty\n     * If there is no match, IN evaluates to NULL if the INNER result set is not empty\n     *       and there are inner NULLs\n     * Need to keep OFFSET for the IN expressions\n     * to prevent IN-to-EXISTS optimization\n     *\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testSubExpressions_InnerNull() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        VoltTable vt;\n        client.callProcedure(\"R1.insert\", 100,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R1.insert\", 101,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 100,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 101,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 102,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 103,  1003,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 104,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 105,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n\n        // Inner result is NULL. The expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where ((WAGE, DEPT) = \" +\n                \"( select WAGE, DEPT from R2 where ID = 100)) is NULL;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}, {101}});\n\n        // Inner result is empty. The expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where ((WAGE, DEPT) = \" +\n                \"( select WAGE, DEPT from R2 where ID = 1000)) is NULL;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}, {101}});\n\n        // Outer result is NULL. The expression is NULL\n        if (!isHSQL()) {\n            vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where ((WAGE, DEPT) = \" +\n                \"( select WAGE, DEPT from R2 where ID = 102)) is NULL;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{101}});\n        }\n\n        // Outer result is empty. The expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where ((select WAGE, DEPT from R2 where ID = 1000) = \" +\n                \"( select WAGE, DEPT from R2 where ID = 102)) is NULL;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}, {101}});\n\n        // Outer result is NULL. Inner is empty The expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where  ID =101 and ((WAGE, DEPT) = \" +\n                \"( select WAGE, DEPT from R2 where ID = 1000)) is NULL;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{101}});\n\n    }","id":69655,"modified_method":"/**\n     * SELECT FROM WHERE OUTER OP INNER inner.\n     * If there is a match, IN evalueates to TRUE\n     * If there is no match, IN evaluates to FASLE if the INNER result set is empty\n     * If there is no match, IN evaluates to NULL if the INNER result set is not empty\n     *       and there are inner NULLs\n     * Need to keep OFFSET for the IN expressions\n     * to prevent IN-to-EXISTS optimization\n     *\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testSubExpressions_InnerNull() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        VoltTable vt;\n        client.callProcedure(\"R1.insert\", 100,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R1.insert\", 101,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 100,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 101,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 102,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 103,  1003,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 104,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 105,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n\n        // Inner result is NULL. The expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where ((WAGE, DEPT) = \" +\n                \"( select WAGE, DEPT from R2 where ID = 100)) is NULL order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}, {101}});\n\n        // Inner result is empty. The expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where ((WAGE, DEPT) = \" +\n                \"( select WAGE, DEPT from R2 where ID = 1000)) is NULL order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}, {101}});\n\n        // Outer result is NULL. The expression is NULL\n        if (!isHSQL()) {\n            vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where ((WAGE, DEPT) = \" +\n                \"( select WAGE, DEPT from R2 where ID = 102)) is NULL;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{101}});\n        }\n\n        // Outer result is empty. The expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where ((select WAGE, DEPT from R2 where ID = 1000) = \" +\n                \"( select WAGE, DEPT from R2 where ID = 102)) is NULL order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}, {101}});\n\n        // Outer result is NULL. Inner is empty The expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where  ID =101 and ((WAGE, DEPT) = \" +\n                \"( select WAGE, DEPT from R2 where ID = 1000)) is NULL;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{101}});\n\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * SELECT FROM SELECT FROM SELECT\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testSubExpressions_Aggregations() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        loadData(false);\n        VoltTable vt;\n        String sql;\n        ClientResponse cr;\n\n        for (String tb: tbs) {\n            cr = client.callProcedure(tb+\".insert\", 6,  10,  2 , \"2013-07-18 02:00:00.123457\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            cr = client.callProcedure(tb+\".insert\", 7,  40,  2 , \"2013-07-18 02:00:00.123457\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n        }\n\n        for (String tb: replicated_tbs) {\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select dept, sum(wage) as sw1 from \" + tb +\n                    \" where (id, dept + 2) in \" +\n                    \"        ( select dept, count(dept) from \" + tb +\n                    \"          group by dept \" +\n//// Leaving out ORDER BY -- which really should be getting ignored/dropped\n//// from an \"in expression\" subquery but instead was getting serialized with\n//// a bad column index.\n////                    \"          order by dept DESC \" +\n                    \"        ) \" +\n                    \"group by dept;\").getResults()[0];\n            //* enable for debug */ System.out.println(vt);\n            validateTableOfLongs(vt, new long[][] {{1,10}});\n\n\n            sql = \"select dept from \" + tb +\n                    \" group by dept \" +\n                    \" having max(wage) in (select wage from R1) order by dept desc\";\n            /* enable for debug */ vt = client.callProcedure(\"@Explain\", sql).getResults()[0];\n            //* enable for debug */ System.out.println(vt);\n            //TODO: Whatever @Explain is testung here should be covered in a planner test instead.\n            assertFalse(vt.toString().toLowerCase().contains(\"subquery: null\"));\n\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            /* enable for debug */ System.out.println(vt);\n            validateTableOfLongs(vt, new long[][] {{2} ,{1}});\n\n            sql = \"select dept from \" + tb + \" group by dept \" +\n                    \" having max(wage) + 1 - 1 in (select wage from R1) order by dept desc\";\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            //* enable for debug */ System.out.println(vt.toString());\n            validateTableOfLongs(vt, new long[][] {{2}, {1} });\n\n            // subquery with having\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select id from \" + tb + \" TBA where exists \" +\n                            \" (select dept from R1 \" +\n                            \"  group by dept \" +\n                            \"  having max(wage) = TBA.wage or min(wage) = TBA.wage)\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{1}, {3}, {5}, {6}});\n\n            // subquery with having and grand parent parameter TVE\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select id from \" + tb + \" TBA where exists \" +\n                            \" (select 1 from R2 where exists \" +\n                            \"         (select dept from R1 \" +\n                            \"          group by dept \" +\n                            \"          having max(wage) = TBA.wage))\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{3}, {5}});\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select id from \" + tb + \" TBA where exists \" +\n                            \" (select dept from R1 \" +\n                            \"  group by dept \" +\n                            \"  having max(wage) = ?)\", 3).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {});\n\n            // having with subquery with having\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select id from \" + tb + \" where wage \" +\n                            \" in (select max(wage) from R1 \" +\n                            \"     group by dept \" +\n                            \"     having max(wage) > 30) \").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{5}});\n\n            // subquery with group by but no having\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select id from \" + tb + \" TBA where exists \" +\n                    \" (select max(dept) from R1 where TBA.id = R1.id group by dept )\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{1}, {2}, {3}, {4}, {5}, {6}, {7}});\n\n        }\n\n    }","id":69656,"modified_method":"/**\n     * SELECT FROM SELECT FROM SELECT\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testSubExpressions_Aggregations() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        loadData(false);\n        VoltTable vt;\n        String sql;\n        ClientResponse cr;\n\n        for (String tb: tbs) {\n            cr = client.callProcedure(tb+\".insert\", 6,  10,  2 , \"2013-07-18 02:00:00.123457\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            cr = client.callProcedure(tb+\".insert\", 7,  40,  2 , \"2013-07-18 02:00:00.123457\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n        }\n\n        for (String tb: replicated_tbs) {\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select dept, sum(wage) as sw1 from \" + tb +\n                    \" where (id, dept + 2) in \" +\n                    \"        ( select dept, count(dept) from \" + tb +\n                    \"          group by dept \" +\n//// Leaving out ORDER BY -- which really should be getting ignored/dropped\n//// from an \"in expression\" subquery but instead was getting serialized with\n//// a bad column index.\n////                    \"          order by dept DESC \" +\n                    \"        ) \" +\n                    \"group by dept;\").getResults()[0];\n            //* enable for debug */ System.out.println(vt);\n            validateTableOfLongs(vt, new long[][] {{1,10}});\n\n\n            sql = \"select dept from \" + tb +\n                    \" group by dept \" +\n                    \" having max(wage) in (select wage from R1) order by dept desc\";\n            /* enable for debug */ vt = client.callProcedure(\"@Explain\", sql).getResults()[0];\n            //* enable for debug */ System.out.println(vt);\n            //TODO: Whatever @Explain is testung here should be covered in a planner test instead.\n            assertFalse(vt.toString().toLowerCase().contains(\"subquery: null\"));\n\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            /* enable for debug */ System.out.println(vt);\n            validateTableOfLongs(vt, new long[][] {{2} ,{1}});\n\n            sql = \"select dept from \" + tb + \" group by dept \" +\n                    \" having max(wage) + 1 - 1 in (select wage from R1) order by dept desc\";\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            //* enable for debug */ System.out.println(vt.toString());\n            validateTableOfLongs(vt, new long[][] {{2}, {1} });\n\n            // subquery with having\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select id from \" + tb + \" TBA where exists \" +\n                            \" (select dept from R1 \" +\n                            \"  group by dept \" +\n                            \"  having max(wage) = TBA.wage or min(wage) = TBA.wage) order by id;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{1}, {3}, {5}, {6}});\n\n            // subquery with having and grand parent parameter TVE\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select id from \" + tb + \" TBA where exists \" +\n                            \" (select 1 from R2 where exists \" +\n                            \"         (select dept from R1 \" +\n                            \"          group by dept \" +\n                            \"          having max(wage) = TBA.wage) ) order by id;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{3}, {5}});\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select id from \" + tb + \" TBA where exists \" +\n                            \" (select dept from R1 \" +\n                            \"  group by dept \" +\n                            \"  having max(wage) = ?)\", 3).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {});\n\n            // having with subquery with having\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select id from \" + tb + \" where wage \" +\n                            \" in (select max(wage) from R1 \" +\n                            \"     group by dept \" +\n                            \"     having max(wage) > 30) \").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{5}});\n\n            // subquery with group by but no having\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select id from \" + tb + \" TBA where exists \" +\n                    \" (select max(dept) from R1 where TBA.id = R1.id group by dept) order by id;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{1}, {2}, {3}, {4}, {5}, {6}, {7}});\n\n        }\n\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void subTestScalarSubqueryWithOrderByOrGroupBy() throws Exception {\n        Client client = getClient();\n\n        long[][] expected = new long[100][1];\n        for (int i = 0; i < 100; ++i) {\n            client.callProcedure(\"@AdHoc\",  \"insert into R_ENG8145_1 values (?, ?);\", i, i * 2);\n            client.callProcedure(\"@AdHoc\",  \"insert into R_ENG8145_2 values (?, ?);\", i, i * 2);\n            long val = 100 - ((i * 2) + 1);\n            if (val < 0)\n                val = 0;\n            expected[i][0] = val;\n        }\n\n        validateTableOfLongs(client,\n                \"select (select count(*) from R_ENG8145_1 where ID > parent.num) from R_ENG8145_2 parent order by id;\",\n                expected);\n        validateTableOfLongs(client,\n                \"select (select count(*) from R_ENG8145_1 where ID > parent.num) from R_ENG8145_2 parent group by id;\",\n                expected);\n        validateTableOfLongs(client,\n                \"select (select count(*) from R_ENG8145_1 where ID > parent.num) from R_ENG8145_2 parent group by id order by id;\",\n                expected);\n    }","id":69657,"modified_method":"private void subTestScalarSubqueryWithOrderByOrGroupBy() throws Exception {\n        Client client = getClient();\n\n        long[][] expected = new long[100][1];\n        for (int i = 0; i < 100; ++i) {\n            client.callProcedure(\"@AdHoc\",  \"insert into R_ENG8145_1 values (?, ?);\", i, i * 2);\n            client.callProcedure(\"@AdHoc\",  \"insert into R_ENG8145_2 values (?, ?);\", i, i * 2);\n            long val = 100 - ((i * 2) + 1);\n            if (val < 0)\n                val = 0;\n            expected[i][0] = val;\n        }\n\n        validateTableOfLongs(client,\n                \"select (select count(*) from R_ENG8145_1 where ID > parent.num) from R_ENG8145_2 parent order by id;\",\n                expected);\n        // has to have order by ID to be deterministic\n        validateTableOfLongs(client,\n                \"select (select count(*) from R_ENG8145_1 where ID > parent.num) from R_ENG8145_2 parent group by id order by id;\",\n                expected);\n\n        // ENG-8173\n        client.callProcedure(\"@AdHoc\", \"insert into R_ENG8173_1 values (0, 'foo', 50);\");\n        client.callProcedure(\"@AdHoc\", \"insert into R_ENG8173_1 values (1, 'goo', 25);\");\n\n        // These queries were failing because we weren't calling \"resolveColumnIndexes\"\n        // for subqueries that appeared on the select list (as part of a projection node).\n        VoltTable vt = client.callProcedure(\"@AdHoc\",\n                \"SELECT *, (SELECT SUM(NUM) FROM R_ENG8173_1) FROM R_ENG8173_1 A1 ORDER BY DESC;\")\n                .getResults()[0];\n\n        assertTrue (vt.advanceRow());\n        assertEquals(0, vt.getLong(0));\n        assertEquals(\"foo\", vt.getString(1));\n        assertEquals(50, vt.getLong(2));\n        assertEquals(75, vt.getLong(3));\n\n        assertTrue (vt.advanceRow());\n        assertEquals(1, vt.getLong(0));\n        assertEquals(\"goo\", vt.getString(1));\n        assertEquals(25, vt.getLong(2));\n        assertEquals(75, vt.getLong(3));\n\n        assertFalse(vt.advanceRow());\n\n        validateTableOfLongs(client,\n                \"SELECT  \"\n                + \"(SELECT \"\n                + \"  SUM(NUM) + SUM(ID) \"\n                + \" FROM R_ENG8173_1) \"\n                + \"FROM R_ENG8173_1 A1 ORDER BY DESC;\",\n                new long[][] {{76}, {76}});\n\n        // Similar queries from ENG-8174\n        client.callProcedure(\"@AdHoc\", \"truncate table R4\");\n        client.callProcedure(\"@AdHoc\", \"insert into R4 values (0,null,null,null);\");\n        client.callProcedure(\"@AdHoc\", \"insert into R4 values (1,'foo1',-1,1.1);\");\n\n        vt = client.callProcedure(\"@AdHoc\", \"select NUM V, (select SUM(RATIO) from R4) from R4 order by V;\")\n                .getResults()[0];\n        assertTrue(vt.advanceRow());\n        vt.getLong(0); assertTrue(vt.wasNull());\n        assertEquals(1.1, vt.getDouble(1));\n\n        assertTrue(vt.advanceRow());\n        assertEquals(-1, vt.getLong(0));\n        assertEquals(1.1, vt.getDouble(1));\n        assertFalse(vt.advanceRow());\n\n\n        vt = client.callProcedure(\"@AdHoc\", \"select RATIO V, (select SUM(NUM) from R4) from R4 order by V;\")\n                .getResults()[0];\n        assertTrue(vt.advanceRow());\n        vt.getDouble(0); assertTrue(vt.wasNull());\n        assertEquals(-1, vt.getLong(1));\n\n        assertTrue(vt.advanceRow());\n        assertEquals(1.1, vt.getDouble(0));\n        assertEquals(-1, vt.getLong(1));\n        assertFalse(vt.advanceRow());\n\n\n        vt = client.callProcedure(\"@AdHoc\", \"select NUM V, (select MAX(DESC) from R4) from R4 order by V;\")\n                .getResults()[0];\n        assertTrue(vt.advanceRow());\n        vt.getLong(0); assertTrue(vt.wasNull());\n        assertEquals(\"foo1\", vt.getString(1));\n\n        assertTrue(vt.advanceRow());\n        assertEquals(-1, vt.getLong(0));\n        assertEquals(\"foo1\", vt.getString(1));\n        assertFalse(vt.advanceRow());\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * SELECT FROM WHERE OUTER IN (SELECT INNER ...). The OUTER is NULL.\n     * If there is a match, IN evalueates to TRUE\n     * If OUTER is NULL and INNER result set is empty, the IN expression evaluates to FASLE\n     * If OUTER is NULL and INNER result set is not empty, the IN expression evaluates to NULL\n     * Need to keep OFFSET for the IN expressions\n     * to prevent IN-to-EXISTS optimization\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testANYSubExpressions_OuterNull() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        VoltTable vt;\n        client.callProcedure(\"R1.insert\", 100,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R1.insert\", 101,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 200,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 201,  2001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 202,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 203,  null,  2 , \"2013-07-18 02:00:00.123457\");\n\n        // R2.200 - the inner result set is not empty, the IN/ANY  expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE in \" +\n                \"( select WAGE from R1 limit 4 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{201}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE =ANY \" +\n                \"( select WAGE from R1 limit 4 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{201}});\n\n        // R2.200 - the inner result set is not empty, the IN  expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE in \" +\n                \"( select WAGE from R1 limit 4 offset 1) is true;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{202}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE =ANY \" +\n                \"( select WAGE from R1 limit 4 offset 1) is true;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{202}});\n\n        // R2.200 - the inner result set is not empty, the IN  expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE in \" +\n                \"( select WAGE from R1 limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{202}});\n\n        // R2.200 - the inner result set is not empty, the IN and not IN  expressions are NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE not in \" +\n                \"( select WAGE from R1 limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{201}});\n\n        // R2.200 - the inner result set is empty, the IN expression is TRUE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE in \" +\n                \"( select WAGE from R1 where ID > 1000 limit 4 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE =ANY \" +\n                \"( select WAGE from R1 where ID > 1000 limit 4 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n\n        // R2.202 and R1.101 have the same WAGE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where exists \" +\n                \"( select WAGE from R1 where R1.WAGE = R2.WAGE);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{202}});\n\n        // R2.202 and R1.101 have the same WAGE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where not exists \" +\n                \"( select WAGE from R1 where R1.WAGE = R2.WAGE);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {203}});\n\n        // NULL not equal NULL, R2.200 and R2.203 have NULL WAGE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 RR2 where exists \" +\n                \"( select 1 from R2 where RR2.WAGE = R2.WAGE);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{201}, {202}});\n\n        // NULL not equal NULL, R2.200 and R2.203 have NULL WAGE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 RR2 where RR2.WAGE in \" +\n                \"( select WAGE from R2 limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{201}, {202}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 RR2 where RR2.WAGE =ANY \" +\n                \"( select WAGE from R2 limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{201}, {202}});\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where (WAGE in \" +\n                \"( select WAGE from R1 limit 4 offset 1)) is null;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {203}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where (WAGE =ANY \" +\n                \"( select WAGE from R1 limit 4 offset 1)) is null;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {203}});\n\n        // The outer expression is empty. The inner expression is not empty. The =ANY is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where ((select WAGE from R1 where ID = 0) =ANY \" +\n                \"( select WAGE from R2 limit 4 offset 1)) is null;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n\n        // The outer expression is empty. The inner expression is empty. The =ANY is FALSE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where not (select WAGE from R1 where ID = 0) =ANY \" +\n                \"( select WAGE from R1 where ID = 0 limit 4 offset 1) ;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n\n    }","id":69658,"modified_method":"/**\n     * SELECT FROM WHERE OUTER IN (SELECT INNER ...). The OUTER is NULL.\n     * If there is a match, IN evalueates to TRUE\n     * If OUTER is NULL and INNER result set is empty, the IN expression evaluates to FASLE\n     * If OUTER is NULL and INNER result set is not empty, the IN expression evaluates to NULL\n     * Need to keep OFFSET for the IN expressions\n     * to prevent IN-to-EXISTS optimization\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testANYSubExpressions_OuterNull() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        VoltTable vt;\n        client.callProcedure(\"R1.insert\", 100,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R1.insert\", 101,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 200,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 201,  2001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 202,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 203,  null,  2 , \"2013-07-18 02:00:00.123457\");\n\n        // R2.200 - the inner result set is not empty, the IN/ANY  expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE in \" +\n                \"( select WAGE from R1 order by WAGE limit 4 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{201}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE =ANY \" +\n                \"( select WAGE from R1 order by WAGE limit 4 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{201}});\n\n        // R2.200 - the inner result set is not empty, the IN  expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE in \" +\n                \"( select WAGE from R1 order by WAGE limit 4 offset 1) is true;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{202}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE =ANY \" +\n                \"( select WAGE from R1 order by WAGE limit 4 offset 1) is true;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{202}});\n\n        // R2.200 - the inner result set is not empty, the IN  expression is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE in \" +\n                \"( select WAGE from R1 order by WAGE limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{202}});\n\n        // R2.200 - the inner result set is not empty, the IN and not IN  expressions are NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE not in \" +\n                \"( select WAGE from R1 order by WAGE limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{201}});\n\n        // R2.200 - the inner result set is empty, the IN expression is TRUE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE in \" +\n                \"( select WAGE from R1 where ID > 1000 order by WAGE limit 4 offset 1) is false order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE =ANY \" +\n                \"( select WAGE from R1 where ID > 1000 order by WAGE limit 4 offset 1) is false order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n\n        // R2.202 and R1.101 have the same WAGE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where exists \" +\n                \"( select WAGE from R1 where R1.WAGE = R2.WAGE) order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{202}});\n\n        // R2.202 and R1.101 have the same WAGE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where not exists \" +\n                \"( select WAGE from R1 where R1.WAGE = R2.WAGE) order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {203}});\n\n        // NULL not equal NULL, R2.200 and R2.203 have NULL WAGE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 RR2 where exists \" +\n                \"( select 1 from R2 where RR2.WAGE = R2.WAGE) order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{201}, {202}});\n\n        // NULL not equal NULL, R2.200 and R2.203 have NULL WAGE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 RR2 where RR2.WAGE in \" +\n                \"( select WAGE from R2 order by WAGE limit 4 offset 1) order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{201}, {202}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 RR2 where RR2.WAGE = ANY \" +\n                \"( select WAGE from R2 order by WAGE limit 4 offset 1) order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{201}, {202}});\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where (WAGE in \" +\n                \"( select WAGE from R1 order by WAGE limit 4 offset 1)) is null order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {203}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where (WAGE = ANY \" +\n                \"( select WAGE from R1 order by WAGE limit 4 offset 1)) is null order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {203}});\n\n        // The outer expression is empty. The inner expression is not empty. The =ANY is NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where ((select WAGE from R1 where ID = 0) = ANY \" +\n                \"( select WAGE from R2 order by WAGE limit 4 offset 1)) is null order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n\n        // The outer expression is empty. The inner expression is empty. The =ANY is FALSE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where not (select WAGE from R1 where ID = 0) = ANY \" +\n                \"( select WAGE from R1 where ID = 0 order by WAGE limit 4 offset 1) order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testWhereRowSubSelects() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        client.callProcedure(\"R1.insert\", 1,   5,  1 , \"2013-06-18 02:00:00.123457\");\n        client.callProcedure(\"R1.insert\", 2,  10,  1 , \"2013-07-18 10:40:01.123457\");\n        client.callProcedure(\"R1.insert\", 3,  10,  2 , \"2013-08-18 02:00:00.123457\");\n\n        client.callProcedure(\"R2.insert\", 3,   5,  1 , \"2013-07-18 10:40:01.123457\");\n        client.callProcedure(\"R2.insert\", 4,  10,  1 , \"2013-08-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 5,  10,  1 , \"2013-08-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 6,  10,  2 , \"2013-08-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 7,  50,  2 , \"2013-09-18 02:00:00.123457\");\n        VoltTable vt;\n\n        if (!isHSQL()) {\n            // R1 2,  10,  1 = R2 4,  10,  1\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) = (SELECT WAGE, DEPT FROM R2 where ID = 4);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {2} });\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) != (SELECT WAGE, DEPT FROM R2 where ID = 4);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1}, {3} });\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) > (SELECT WAGE, DEPT FROM R2 where ID = 4);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {3} });\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) < (SELECT WAGE, DEPT FROM R2 where ID = 4);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1} });\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) >= (SELECT WAGE, DEPT FROM R2 where ID = 4);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {2}, {3} });\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) <= (SELECT WAGE, DEPT FROM R2 where ID = 4);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1}, {2} });\n\n            // R1 2,  10,  1 = R2 4,  10,  1 and 5,  10,  1\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) =ALL (SELECT WAGE, DEPT FROM R2 where ID in (4,5));\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {2} });\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) =ALL (SELECT WAGE, DEPT FROM R2);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { });\n\n            // R1 3,  10,  2 >= ALL R2 except R2.7\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where ID = 3 and (R1.WAGE, R1.DEPT) >= ALL (SELECT WAGE, DEPT FROM R2 where ID < 7 ORDER BY WAGE, DEPT DESC);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {3} });\n\n            // R1 3,  10,  2 < R2 except R2.7 50 2\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) >= ALL (SELECT WAGE, DEPT FROM R2);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { });\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.DEPT, R1.TM) < ALL (SELECT DEPT, TM FROM R2);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1} });\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.DEPT, R1.TM) <= ALL (SELECT DEPT, TM FROM R2);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1}, {2} });\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.DEPT, R1.TM) <= ALL (SELECT DEPT, TM FROM R2 ORDER BY DEPT, TM ASC);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1}, {2} });\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where (R1.DEPT, R1.TM) <= ALL (SELECT DEPT, TM FROM R2 ORDER BY DEPT, TM DESC);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1}, {2} });\n\n        }\n    }","id":69659,"modified_method":"public void testWhereRowSubSelects() throws NoConnectionsException, IOException, ProcCallException\n    {\n        if (isHSQL()) {\n            // hsqldb has back end error for these cases\n            return;\n        }\n\n        Client client = getClient();\n        client.callProcedure(\"R1.insert\", 1,   5,  1 , \"2013-06-18 02:00:00.123457\");\n        client.callProcedure(\"R1.insert\", 2,  10,  1 , \"2013-07-18 10:40:01.123457\");\n        client.callProcedure(\"R1.insert\", 3,  10,  2 , \"2013-08-18 02:00:00.123457\");\n\n        client.callProcedure(\"R2.insert\", 3,   5,  1 , \"2013-07-18 10:40:01.123457\");\n        client.callProcedure(\"R2.insert\", 4,  10,  1 , \"2013-08-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 5,  10,  1 , \"2013-08-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 6,  10,  2 , \"2013-08-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 7,  50,  2 , \"2013-09-18 02:00:00.123457\");\n        VoltTable vt;\n\n        // R1 2,  10,  1 = R2 4,  10,  1\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) = (SELECT WAGE, DEPT FROM R2 where ID = 4);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {2} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) != (SELECT WAGE, DEPT FROM R2 where ID = 4) order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1}, {3} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) > (SELECT WAGE, DEPT FROM R2 where ID = 4);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {3} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) < (SELECT WAGE, DEPT FROM R2 where ID = 4);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) >= (SELECT WAGE, DEPT FROM R2 where ID = 4) order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {2}, {3} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) <= (SELECT WAGE, DEPT FROM R2 where ID = 4) order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1}, {2} });\n\n        // R1 2,  10,  1 = R2 4,  10,  1 and 5,  10,  1\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) =ALL (SELECT WAGE, DEPT FROM R2 where ID in (4,5));\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {2} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) =ALL (SELECT WAGE, DEPT FROM R2);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { });\n\n        // R1 3,  10,  2 >= ALL R2 except R2.7\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where ID = 3 and (R1.WAGE, R1.DEPT) >= ALL (SELECT WAGE, DEPT FROM R2 where ID < 7 ORDER BY WAGE, DEPT DESC);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {3} });\n\n        // R1 3,  10,  2 < R2 except R2.7 50 2\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.WAGE, R1.DEPT) >= ALL (SELECT WAGE, DEPT FROM R2);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.DEPT, R1.TM) < ALL (SELECT DEPT, TM FROM R2);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.DEPT, R1.TM) <= ALL (SELECT DEPT, TM FROM R2) order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1}, {2} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.DEPT, R1.TM) <= ALL (SELECT DEPT, TM FROM R2 ORDER BY DEPT, TM ASC) order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1}, {2} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (R1.DEPT, R1.TM) <= ALL (SELECT DEPT, TM FROM R2 ORDER BY DEPT, TM DESC) order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1}, {2} });\n\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void subTestScalarSubqueryWithNonIntegerType() throws NoConnectionsException, IOException, ProcCallException {\n        Client client = getClient();\n        // truncate tables are not used but will be good if we add more tests on the other R1,R2,R3,P1... tables.\n        truncateData(client);\n\n        VoltTable vt;\n        String sql;\n        client.callProcedure(\"R4.insert\", 1, \"foo1\", -1, 1.1);\n        client.callProcedure(\"R4.insert\", 2, \"foo2\", -1, 2.2);\n\n        // test FLOAT\n        sql = \"select ID, (select SUM(RATIO) from R4) from R4 order by ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(2, vt.getRowCount());\n        assertTrue(vt.advanceRow());\n        assertEquals(1, vt.getLong(0)); assertEquals(3.3, vt.getDouble(1), 0.0001);\n        assertTrue(vt.advanceRow());\n        assertEquals(2, vt.getLong(0)); assertEquals(3.3, vt.getDouble(1), 0.0001);\n\n        // test VARCHAR\n        sql = \"select ID, (select MIN(DESC) from R4) from R4 order by ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(2, vt.getRowCount());\n        assertTrue(vt.advanceRow());\n        assertEquals(1, vt.getLong(0)); assertEquals(\"foo1\", vt.getString(1));\n        assertTrue(vt.advanceRow());\n        assertEquals(2, vt.getLong(0)); assertEquals(\"foo1\", vt.getString(1));\n    }","id":69660,"modified_method":"private void subTestScalarSubqueryWithNonIntegerType() throws NoConnectionsException, IOException, ProcCallException {\n        Client client = getClient();\n        // truncate tables are not used\n        client.callProcedure(\"@AdHoc\", \"truncate table R4\");\n\n        VoltTable vt;\n        String sql;\n        client.callProcedure(\"R4.insert\", 1, \"foo1\", -1, 1.1);\n        client.callProcedure(\"R4.insert\", 2, \"foo2\", -1, 2.2);\n\n        // test FLOAT\n        sql = \"select ID, (select SUM(RATIO) from R4) from R4 order by ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(2, vt.getRowCount());\n        assertTrue(vt.advanceRow());\n        assertEquals(1, vt.getLong(0)); assertEquals(3.3, vt.getDouble(1), 0.0001);\n        assertTrue(vt.advanceRow());\n        assertEquals(2, vt.getLong(0)); assertEquals(3.3, vt.getDouble(1), 0.0001);\n\n        // test VARCHAR\n        sql = \"select ID, (select MIN(DESC) from R4) from R4 order by ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(2, vt.getRowCount());\n        assertTrue(vt.advanceRow());\n        assertEquals(1, vt.getLong(0)); assertEquals(\"foo1\", vt.getString(1));\n        assertTrue(vt.advanceRow());\n        assertEquals(2, vt.getLong(0)); assertEquals(\"foo1\", vt.getString(1));\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * SELECT FROM WHERE OUTER = ALL (SELECT INNER ...). The OUTER is NULL.\n     * If outer_expr is NULL and inner_expr is empty => TRUE\n     * If outer_expr is NULL and inner_expr produces any row => NULL\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testALLSubExpressions_OuterNull() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        VoltTable vt;\n        client.callProcedure(\"R1.insert\", 100,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R1.insert\", 101,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 200,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 201,  2001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 202,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 203,  null,  2 , \"2013-07-18 02:00:00.123457\");\n\n        // the inner result set is empty, the =ALL  expression is TRUE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE =ALL \" +\n                \"( select WAGE from R1 where ID = 1000) ;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where (ID,WAGE) =ALL \" +\n                \"( select ID,WAGE from R1 where ID = 1000) ;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n\n        // the inner result set is empty, the =ALL  expression is TRUE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where (select WAGE from R1 where ID = 1000) =ALL \" +\n                \"( select WAGE from R1 where ID = 1000) ;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n\n        //  the outer_expr is NULL and inner_expr is not empty => NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where ID = 200 and (WAGE =ALL \" +\n                \"( select WAGE from R1)) is  null ;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}});\n        if (!isHSQL()) {\n            // I think HSQL gets this one wrong evaluating the =ALL to FALSE instead of NULL.\n            // PostgreSQL agrees with us\n            vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where ID = 200 and ((ID,WAGE) =ALL \" +\n                \"( select ID, WAGE from R1)) is  null ;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{200}});\n        }\n    }","id":69661,"modified_method":"/**\n     * SELECT FROM WHERE OUTER = ALL (SELECT INNER ...). The OUTER is NULL.\n     * If outer_expr is NULL and inner_expr is empty => TRUE\n     * If outer_expr is NULL and inner_expr produces any row => NULL\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testALLSubExpressions_OuterNull() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        VoltTable vt;\n        client.callProcedure(\"R1.insert\", 100,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R1.insert\", 101,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 200,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 201,  2001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 202,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 203,  null,  2 , \"2013-07-18 02:00:00.123457\");\n\n        // the inner result set is empty, the =ALL  expression is TRUE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where WAGE =ALL \" +\n                \"( select WAGE from R1 where ID = 1000) order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where (ID,WAGE) =ALL \" +\n                \"( select ID,WAGE from R1 where ID = 1000) order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n\n        // the inner result set is empty, the =ALL  expression is TRUE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where (select WAGE from R1 where ID = 1000) =ALL \" +\n                \"( select WAGE from R1 where ID = 1000) order by ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}, {201}, {202}, {203}});\n\n        //  the outer_expr is NULL and inner_expr is not empty => NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where ID = 200 and (WAGE =ALL \" +\n                \"( select WAGE from R1)) is  null ;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{200}});\n        if (!isHSQL()) {\n            // I think HSQL gets this one wrong evaluating the =ALL to FALSE instead of NULL.\n            // PostgreSQL agrees with us\n            vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where ID = 200 and ((ID,WAGE) =ALL \" +\n                \"( select ID, WAGE from R1)) is  null ;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{200}});\n        }\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testSubSelects_from_partitioned() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        loadData(false);\n        VoltTable vt;\n        String sql;\n\n        sql = \"select T1.ID, T1.DEPT FROM (SELECT ID, DEPT FROM P1) T1, P2 \" +\n                \"where T1.ID = P2.DEPT order by T1.ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1,1}, {1, 1}, {1, 1}, {2, 1}, {2, 1}});\n\n        sql = \"select T1.ID, T1.DEPT FROM (SELECT ID, DEPT FROM P1 where ID = 2) T1, P2 \" +\n                \"where T1.ID = P2.DEPT order by T1.ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {2, 1}, {2, 1}});\n\n        sql = \"select T1.ID, T1.DEPT \" +\n                \"FROM (SELECT ID, DEPT FROM P1 where ID = 2) T1, \" +\n                \"       (SELECT DEPT FROM P2 ) T2,  \" +\n                \"       (SELECT ID FROM P3 ) T3  \" +\n                \"where T1.ID = T2.DEPT and T2.DEPT = T3.ID order by T1.ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {2, 1}, {2, 1}});\n\n        sql = \"select T1.ID, T1.DEPT \" +\n                \"FROM (SELECT P1.ID, P1.DEPT FROM P1, P2 where P1.ID = P2.DEPT) T1, P2 \" +\n                \"where T1.ID = P2.DEPT and P2.DEPT = 2 order by T1.ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {2, 1}, {2, 1}, {2, 1}, {2, 1}});\n\n\n        // Outer joins\n        sql = \"select T1.ID, T1.DEPT FROM (SELECT ID, DEPT FROM P1) T1 LEFT OUTER JOIN P2 \" +\n                \"ON T1.ID = P2.DEPT order by T1.ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1,1}, {1, 1}, {1, 1},\n                {2, 1}, {2, 1}, {3, 1}, {4, 2}, {5, 2}});\n\n        sql = \"select T1.ID, T1.DEPT FROM (SELECT ID, DEPT FROM P1) T1 LEFT OUTER JOIN P2 \" +\n                \"ON T1.ID = P2.DEPT WHERE T1.ID = 3 order by T1.ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{3, 1}});\n\n        sql = \"select T1.ID, T1.DEPT, P2.WAGE FROM (SELECT ID, DEPT FROM P1) T1 LEFT OUTER JOIN P2 \" +\n                \"ON T1.ID = P2.DEPT AND P2.DEPT = 2 order by 1, 2, 3;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{1, 1, Long.MIN_VALUE}, {2, 1, 40}, {2, 1, 50},\n                {3, 1, Long.MIN_VALUE},{4,2, Long.MIN_VALUE}, {5,2, Long.MIN_VALUE}});\n\n    }","id":69662,"modified_method":"public void notestSubSelects_from_partitioned() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        loadData(false);\n        VoltTable vt;\n        String sql;\n\n        sql = \"select T1.ID, T1.DEPT FROM (SELECT ID, DEPT FROM P1) T1, P2 \" +\n                \"where T1.ID = P2.DEPT order by T1.ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1,1}, {1, 1}, {1, 1}, {2, 1}, {2, 1}});\n\n        sql = \"select T1.ID, T1.DEPT FROM (SELECT ID, DEPT FROM P1 where ID = 2) T1, P2 \" +\n                \"where T1.ID = P2.DEPT order by T1.ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {2, 1}, {2, 1}});\n\n        sql = \"select T1.ID, T1.DEPT \" +\n                \"FROM (SELECT ID, DEPT FROM P1 where ID = 2) T1, \" +\n                \"       (SELECT DEPT FROM P2 ) T2,  \" +\n                \"       (SELECT ID FROM P3 ) T3  \" +\n                \"where T1.ID = T2.DEPT and T2.DEPT = T3.ID order by T1.ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {2, 1}, {2, 1}});\n\n        sql = \"select T1.ID, T1.DEPT \" +\n                \"FROM (SELECT P1.ID, P1.DEPT FROM P1, P2 where P1.ID = P2.DEPT) T1, P2 \" +\n                \"where T1.ID = P2.DEPT and P2.DEPT = 2 order by T1.ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {2, 1}, {2, 1}, {2, 1}, {2, 1}});\n\n\n        // Outer joins\n        sql = \"select T1.ID, T1.DEPT FROM (SELECT ID, DEPT FROM P1) T1 LEFT OUTER JOIN P2 \" +\n                \"ON T1.ID = P2.DEPT order by T1.ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1,1}, {1, 1}, {1, 1},\n                {2, 1}, {2, 1}, {3, 1}, {4, 2}, {5, 2}});\n\n        sql = \"select T1.ID, T1.DEPT FROM (SELECT ID, DEPT FROM P1) T1 LEFT OUTER JOIN P2 \" +\n                \"ON T1.ID = P2.DEPT WHERE T1.ID = 3 order by T1.ID;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{3, 1}});\n\n        sql = \"select T1.ID, T1.DEPT, P2.WAGE FROM (SELECT ID, DEPT FROM P1) T1 LEFT OUTER JOIN P2 \" +\n                \"ON T1.ID = P2.DEPT AND P2.DEPT = 2 order by 1, 2, 3;\";\n        vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{1, 1, Long.MIN_VALUE}, {2, 1, 40}, {2, 1, 50},\n                {3, 1, Long.MIN_VALUE},{4,2, Long.MIN_VALUE}, {5,2, Long.MIN_VALUE}});\n\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Join two sub queries\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testExists_Joins() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        loadData(false);\n\n        VoltTable vt;\n\n        for (String tb: replicated_tbs) {\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select T1.id from R1 T1, \" + tb +\" T2 where \" +\n                            \"T1.id = T2.id and exists ( \" +\n                    \" select 1 from R1 where R1.dept * 2 = T2.dept)\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{4}, {5}});\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select t1.id, t2.id  from r1 t1, \" + tb + \" t2 where \" +\n                            \"t1.id IN (select id from r2 where t2.id = r2.id * 2)\"\n                    ).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{1,2}, {2,4}});\n\n            // Core dump\n            if (!isHSQL()) {\n                vt = client.callProcedure(\"@AdHoc\",\n                        \"select id, newid  \" +\n                                \"FROM (SELECT id, wage FROM R1) T1 \" +\n                                \"   LEFT OUTER JOIN \" +\n                                \"   (SELECT id as newid, dept FROM \"+ tb +\" where dept > 1) T2 \" +\n                                \"   ON T1.id = T2.dept and EXISTS( \" +\n                                \"      select 1 from R1 where R1.ID =  T2.newid ) \" +\n                        \"ORDER BY id, newid\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {1, Long.MIN_VALUE}, {2, 4}, {2, 5},\n                        {3, Long.MIN_VALUE}, {4, Long.MIN_VALUE}, {5, Long.MIN_VALUE}});\n            }\n        }\n\n    }","id":69663,"modified_method":"/**\n     * Join two sub queries\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testExists_Joins() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        loadData(false);\n\n        VoltTable vt;\n\n        for (String tb: replicated_tbs) {\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select T1.id from R1 T1, \" + tb +\" T2 where \" +\n                            \"T1.id = T2.id and exists ( \" +\n                    \" select 1 from R1 where R1.dept * 2 = T2.dept) order by id\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{4}, {5}});\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select t1.id, t2.id  from r1 t1, \" + tb + \" t2 where \" +\n                            \"t1.id IN (select id from r2 where t2.id = r2.id * 2) order by t1.id\"\n                    ).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{1,2}, {2,4}});\n\n            // Core dump\n            if (!isHSQL()) {\n                vt = client.callProcedure(\"@AdHoc\",\n                        \"select id, newid  \" +\n                                \"FROM (SELECT id, wage FROM R1) T1 \" +\n                                \"   LEFT OUTER JOIN \" +\n                                \"   (SELECT id as newid, dept FROM \"+ tb +\" where dept > 1) T2 \" +\n                                \"   ON T1.id = T2.dept and EXISTS( \" +\n                                \"      select 1 from R1 where R1.ID =  T2.newid ) \" +\n                        \"ORDER BY id, newid\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {1, Long.MIN_VALUE}, {2, 4}, {2, 5},\n                        {3, Long.MIN_VALUE}, {4, Long.MIN_VALUE}, {5, Long.MIN_VALUE}});\n            }\n        }\n\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * SELECT FROM WHERE OUTER IN(=ANY) (SELECT INNER ...) returning inner NULL.\n     * If there is a match, IN evalueates to TRUE\n     * If there is no match, IN evaluates to FASLE if the INNER result set is empty\n     * If there is no match, IN evaluates to NULL if the INNER result set is not empty\n     *       and there are inner NULLs\n     * Need to keep OFFSET for the IN expressions\n     * to prevent IN-to-EXISTS optimization\n     *\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testANYSubExpressions_InnerNull() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        VoltTable vt;\n        client.callProcedure(\"R1.insert\", 100,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 100,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 101,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 102,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 103,  1003,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 104,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 105,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n\n        // There is an exact match, IN/ANY extression evaluates to TRUE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) in \" +\n                \"( select WAGE, DEPT from R2 limit 6 offset 1) is true;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) =ANY \" +\n                \"( select WAGE, DEPT from R2 limit 6 offset 1) is true;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        // There inner result set is empty, IN/ANY expression evaluates to FALSE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) in \" +\n                \"( select WAGE, DEPT from R2 where ID = 0 limit 6 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) =ANY \" +\n                \"( select WAGE, DEPT from R2 where ID = 0 limit 6 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        // There is no match, IN extression evaluates to NULL (non-empty inner result set)\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) in \" +\n                \"( select WAGE, DEPT from R2 where WAGE != 1000 or WAGE is NULL limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) = ANY \" +\n                \"( select WAGE, DEPT from R2 where WAGE != 1000 or WAGE is NULL limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {});\n\n        // There is an exact match, NOT IN evaluates to FALSE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) not in \" +\n                \"( select WAGE, DEPT from R2 limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {});\n\n        // There is no match, inner result set is non empty, IN evaluates to NULL, NOT IN is also NULL\n        // HSQL gets it wrong\n        if (!isHSQL()) {\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select ID from R1 where (WAGE, DEPT) not in \" +\n                    \"( select WAGE, DEPT from R2 where WAGE != 1000 or WAGE is NULL limit 4 offset 1);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {});\n        }\n\n        // There is no match, the inner result set doesn't have NULLs\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where WAGE in \" +\n                \"( select WAGE from R2 where WAGE != 1000 limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where WAGE =ANY \" +\n                \"( select WAGE from R2 where WAGE != 1000 limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {});\n\n        // There is a match, the inner result set doesn't have NULLs, The IN expression evaluates to FALSE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where WAGE in \" +\n                \"( select WAGE from R2 where WAGE != 1000 limit 6 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where WAGE =ANY \" +\n                \"( select WAGE from R2 where WAGE != 1000 limit 6 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        // NULL row exists\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where exists \" +\n                \"( select WAGE from R2 where WAGE is NULL);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        // Rows exist\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where not exists \" +\n                \"( select WAGE, DEPT from R2 );\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {});\n\n        // The NULL from R2 is eliminated by the offset\n        // HSQL gets it wrong\n        if (!isHSQL()) {\n            vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where R1.WAGE NOT IN \" +\n                \"(select WAGE from R2 where ID < 104 order by WAGE desc limit 1 offset 1);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{100}});\n        }\n\n    }","id":69664,"modified_method":"/**\n     * SELECT FROM WHERE OUTER IN(=ANY) (SELECT INNER ...) returning inner NULL.\n     * If there is a match, IN evalueates to TRUE\n     * If there is no match, IN evaluates to FASLE if the INNER result set is empty\n     * If there is no match, IN evaluates to NULL if the INNER result set is not empty\n     *       and there are inner NULLs\n     * Need to keep OFFSET for the IN expressions\n     * to prevent IN-to-EXISTS optimization\n     *\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testANYSubExpressions_InnerNull() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        VoltTable vt;\n        client.callProcedure(\"R1.insert\", 100,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 100,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 101,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 102,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 103,  1003,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 104,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 105,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n\n        // There is an exact match, IN/ANY extression evaluates to TRUE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) in \" +\n                \"( select WAGE, DEPT from R2 ORDER BY WAGE, DEPT limit 6 offset 1) is true;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) =ANY \" +\n                \"( select WAGE, DEPT from R2 ORDER BY WAGE, DEPT limit 6 offset 1) is true;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        // There inner result set is empty, IN/ANY expression evaluates to FALSE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) in \" +\n                \"( select WAGE, DEPT from R2 where ID = 0 ORDER BY WAGE, DEPT limit 6 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) =ANY \" +\n                \"( select WAGE, DEPT from R2 where ID = 0 ORDER BY WAGE, DEPT limit 6 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        // There is no match, IN extression evaluates to NULL (non-empty inner result set)\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) in \" +\n                \"( select WAGE, DEPT from R2 where WAGE != 1000 or WAGE is NULL ORDER BY WAGE, DEPT limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) = ANY \" +\n                \"( select WAGE, DEPT from R2 where WAGE != 1000 or WAGE is NULL ORDER BY WAGE, DEPT limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {});\n\n        // There is an exact match, NOT IN evaluates to FALSE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) not in \" +\n                \"( select WAGE, DEPT from R2 ORDER BY WAGE, DEPT limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {});\n\n        // There is no match, inner result set is non empty, IN evaluates to NULL, NOT IN is also NULL\n        // HSQL gets it wrong\n        if (!isHSQL()) {\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select ID from R1 where (WAGE, DEPT) not in \" +\n                    \"( select WAGE, DEPT from R2 where WAGE != 1000 or WAGE is NULL ORDER BY WAGE, DEPT limit 4 offset 1);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {});\n        }\n\n        // There is no match, the inner result set doesn't have NULLs\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where WAGE in \" +\n                \"( select WAGE from R2 where WAGE != 1000 ORDER BY WAGE limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where WAGE =ANY \" +\n                \"( select WAGE from R2 where WAGE != 1000 ORDER BY WAGE limit 4 offset 1);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {});\n\n        // There is a match, the inner result set doesn't have NULLs, The IN expression evaluates to FALSE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where WAGE in \" +\n                \"( select WAGE from R2 where WAGE != 1000 ORDER BY WAGE limit 6 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where WAGE =ANY \" +\n                \"( select WAGE from R2 where WAGE != 1000 ORDER BY WAGE limit 6 offset 1) is false;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        // NULL row exists\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where exists \" +\n                \"( select WAGE from R2 where WAGE is NULL);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        // Rows exist\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where not exists \" +\n                \"( select WAGE, DEPT from R2 );\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {});\n\n        // The NULL from R2 is eliminated by the offset\n        // HSQL gets it wrong\n        if (!isHSQL()) {\n            vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where R1.WAGE NOT IN \" +\n                \"(select WAGE from R2 where ID < 104 order by WAGE desc limit 1 offset 1);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{100}});\n        }\n\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * SELECT FROM WHERE OUTER = ALL (SELECT INNER ...) returning inner NULL.\n     * If inner_expr is empty => TRUE\n     * If inner_expr contains NULL and outer_expr OP inner_expr is TRUE for all other inner values => NULL\n     * If inner_expr contains NULL and outer_expr OP inner_expr is FALSE for some other inner values => FALSE\n     *\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testALLSubExpressions_InnerNull() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        VoltTable vt;\n        client.callProcedure(\"R1.insert\", 100,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 100,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 101,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 102,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 103,  1003,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 104,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 105,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n\n        // The subquery select WAGE from R1 limit 4 offset 1)) returns the empty set\n        // The expression WAGE in ( select WAGE from R1 limit 4 offset 1))\n        // Evaluates to FALSE\n        //        vt = client.callProcedure(\"@AdHoc\",\n        //                \"select ID from R2 where (WAGE in \" +\n        //                \"( select WAGE from R1 limit 4 offset 1)) is null\").getResults()[0];\n        //        System.out.println(vt.toString());\n        //        validateTableOfLongs(vt, new long[][] {{200}, {203}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where not (WAGE in \" +\n                \"( select WAGE from R1 limit 4 offset 1)) order by ID\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}, {101}, {102}, {103}, {104}, {105}});\n\n        // The inner_expr is empty => TRUE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) = ALL \" +\n                \"( select WAGE, DEPT from R2 where ID = 1000);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (select WAGE from R1) = ALL \" +\n                \"( select WAGE from R2 where ID = 1000);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        // The inner set consists only of NULLs\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where WAGE = ALL \" +\n                \"( select WAGE from R2 where ID in (104, 105));\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE,DEPT) = ALL \" +\n                \"( select WAGE, DEPT from R2 where ID in (104, 105));\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        // If inner_expr contains NULL and outer_expr OP inner_expr is TRUE\n        // for all other inner values => NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE = ALL \" +\n                \"( select WAGE from R2 where ID in (100, 104, 105))) is NULL;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        if (!isHSQL()) {\n            // I think HSQL gets this one wrong evaluating the =ALL to FALSE instead of NULL.\n            // PostgreSQL agrees with us\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select ID from R1 where ((WAGE, DEPT) = ALL \" +\n                    \"( select WAGE, DEPT from R2 where ID in (100, 104, 105))) is NULL;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{100}});\n        }\n\n        // If inner_expr contains NULL and outer_expr OP inner_expr is FALSE\n        // for some other inner values => FALSE\n        if (!isHSQL()) {\n            // I think HSQL gets this one wrong evaluating the =ALL to NULL instead of FALSE.\n            // PostgreSQL agrees with us\n            vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where not (WAGE = ALL ( select WAGE from R2));\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{100}});\n        }\n    }","id":69665,"modified_method":"/**\n     * SELECT FROM WHERE OUTER = ALL (SELECT INNER ...) returning inner NULL.\n     * If inner_expr is empty => TRUE\n     * If inner_expr contains NULL and outer_expr OP inner_expr is TRUE for all other inner values => NULL\n     * If inner_expr contains NULL and outer_expr OP inner_expr is FALSE for some other inner values => FALSE\n     *\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testALLSubExpressions_InnerNull() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        VoltTable vt;\n        client.callProcedure(\"R1.insert\", 100,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 100,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 101,  null,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 102,  1001,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 103,  1003,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 104,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n        client.callProcedure(\"R2.insert\", 105,  1000,  2 , \"2013-07-18 02:00:00.123457\");\n\n        // The subquery select WAGE from R1 limit 4 offset 1)) returns the empty set\n        // The expression WAGE in ( select WAGE from R1 limit 4 offset 1))\n        // Evaluates to FALSE\n        //        vt = client.callProcedure(\"@AdHoc\",\n        //                \"select ID from R2 where (WAGE in \" +\n        //                \"( select WAGE from R1 limit 4 offset 1)) is null\").getResults()[0];\n        //        System.out.println(vt.toString());\n        //        validateTableOfLongs(vt, new long[][] {{200}, {203}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R2 where not (WAGE in \" +\n                \"( select WAGE from R1 ORDER BY WAGE limit 4 offset 1)) order by ID\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}, {101}, {102}, {103}, {104}, {105}});\n\n        // The inner_expr is empty => TRUE\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE, DEPT) = ALL \" +\n                \"( select WAGE, DEPT from R2 where ID = 1000);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (select WAGE from R1) = ALL \" +\n                \"( select WAGE from R2 where ID = 1000);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        // The inner set consists only of NULLs\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where WAGE = ALL \" +\n                \"( select WAGE from R2 where ID in (104, 105));\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE,DEPT) = ALL \" +\n                \"( select WAGE, DEPT from R2 where ID in (104, 105));\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        // If inner_expr contains NULL and outer_expr OP inner_expr is TRUE\n        // for all other inner values => NULL\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where (WAGE = ALL \" +\n                \"( select WAGE from R2 where ID in (100, 104, 105))) is NULL;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] {{100}});\n\n        if (!isHSQL()) {\n            // I think HSQL gets this one wrong evaluating the =ALL to FALSE instead of NULL.\n            // PostgreSQL agrees with us\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select ID from R1 where ((WAGE, DEPT) = ALL \" +\n                    \"( select WAGE, DEPT from R2 where ID in (100, 104, 105))) is NULL;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{100}});\n        }\n\n        // If inner_expr contains NULL and outer_expr OP inner_expr is FALSE\n        // for some other inner values => FALSE\n        if (!isHSQL()) {\n            // I think HSQL gets this one wrong evaluating the =ALL to NULL instead of FALSE.\n            // PostgreSQL agrees with us\n            vt = client.callProcedure(\"@AdHoc\",\n                \"select ID from R1 where not (WAGE = ALL ( select WAGE from R2));\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{100}});\n        }\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * SELECT FROM SELECT UNION SELECT\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testSubExpressions_Unions() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        loadData(false);\n        VoltTable vt;\n\n        for (String tb: replicated_tbs) {\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select ID from \" + tb + \" where ID in \" +\n                            \"( (SELECT ID from R1 WHERE ID > 2 LIMIT 3 OFFSET 1) \" +\n                            \" UNION SELECT ID from R2 WHERE ID <= 2\"\n                            + \" INTERSECT SELECT ID from R1 WHERE ID =1);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{1}, {4}, {5}});\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select ID from \" + tb + \" where ID in \" +\n                            \"( SELECT ID from R1 WHERE ID > 2 \" +\n                            \" EXCEPT SELECT ID from R2 WHERE ID <= 2);\").getResults()[0];\n            //* enable for debug */ System.out.println(vt.toString());\n            validateTableOfLongs(vt, new long[][] {{3}, {4}, {5}});\n        }\n    }","id":69666,"modified_method":"/**\n     * SELECT FROM SELECT UNION SELECT\n     * @throws NoConnectionsException\n     * @throws IOException\n     * @throws ProcCallException\n     */\n    public void testSubExpressions_Unions() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        loadData(false);\n        VoltTable vt;\n\n        for (String tb: replicated_tbs) {\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select ID from \" + tb + \" where ID in \" +\n                            \"( (SELECT ID from R1 WHERE ID > 2 LIMIT 3 OFFSET 1) \" +\n                            \" UNION SELECT ID from R2 WHERE ID <= 2\"\n                            + \" INTERSECT SELECT ID from R1 WHERE ID =1) order by ID;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{1}, {4}, {5}});\n\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select ID from \" + tb + \" where ID in \" +\n                            \"( SELECT ID from R1 WHERE ID > 2 \" +\n                            \" EXCEPT SELECT ID from R2 WHERE ID <= 2) order by ID;\").getResults()[0];\n            //* enable for debug */ System.out.println(vt.toString());\n            validateTableOfLongs(vt, new long[][] {{3}, {4}, {5}});\n        }\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testWhereScalarSubSelects() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        loadData(false);\n        VoltTable vt;\n\n        // Index Scan\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.ID = (SELECT ID FROM R2 where ID = ?);\", 2).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {2} });\n\n        // Index Scan correlated\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.ID = (SELECT ID/2 FROM R2 where ID = R1.ID * 2);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1}, {2} });\n\n        // Seq Scan\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.DEPT = (SELECT DEPT FROM R2 where ID = ?);\", 1).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1}, {2}, {3} });\n\n        // Seq Scan correlated\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.DEPT = (SELECT DEPT FROM R2 where ID = R1.ID * 2);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1} });\n\n        // Different comparison operators\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.DEPT > (SELECT DEPT FROM R2 where ID = 3);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {4}, {5} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (SELECT DEPT FROM R2 where ID = 3) != R1.DEPT;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {4}, {5} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.DEPT >= ALL (SELECT DEPT FROM R2);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {4}, {5} });\n\n        // Index scan\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.ID > ALL (SELECT ID FROM R2 WHERE R2.ID < 4);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {4}, {5} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.ID >= ALL (SELECT ID FROM R2 order by ID asc);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {5} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.ID >= ALL (SELECT ID FROM R2 order by ID desc);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {5} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.ID <= ALL (SELECT ID FROM R2 order by ID desc);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1} });\n\n        // NLIJ\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID, R2.ID FROM R1, R2 where R1.DEPT = R2.DEPT + (SELECT DEPT FROM R2 where ID = ?) limit 1;\", 1).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {4, 1} });\n\n        // @TODO NLIJ correlated\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R2.ID, R2.ID FROM R1, R2 where R2.ID = (SELECT id FROM R2 where ID = R1.ID);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1, 1}, {2,2}, {3,3}, {4,4}, {5,5} });\n\n        // NLJ\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID, R2.ID FROM R1, R2 where R1.DEPT = R2.DEPT + (SELECT DEPT FROM R2 where ID = ?) limit 1;\", 1).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {4, 1} });\n\n        // NLJ correlated\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID, R2.ID FROM R1, R2 where R2.DEPT = (SELECT DEPT FROM R2 where ID = R1.ID + 4);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1, 4}, {1,5} });\n\n        // Having\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select max(R1.ID) FROM R1 group by R1.DEPT having count(*) = \" +\n                        \"(select R2.ID from R2 where R2.ID = ?);\", 2).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {5} });\n\n        // Having correlated -- parent TVE in the aggregated child expression\n        try {\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select max(R1.ID) FROM R1 group by R1.DEPT having count(*) = \" +\n                    \"(select R2.ID from R2 where R2.ID = R1.DEPT);\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {5} });\n        } catch (ProcCallException ex) {\n            System.out.println(ex.getMessage());\n            String errMsg = \"java.lang.NullPointerException\";\n            assertTrue(ex.getMessage().contains(errMsg));\n        }\n\n        try {\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where R1.ID = (SELECT ID FROM R2);\").getResults()[0];\n        } catch (ProcCallException ex) {\n            System.out.println(ex.getMessage());\n            String errMsg = (isHSQL()) ? \"cardinality violation\" :\n                \"More than one row returned by a scalar/row subquery\";\n            assertTrue(ex.getMessage().contains(errMsg));\n        }\n    }","id":69667,"modified_method":"public void testWhereScalarSubSelects() throws NoConnectionsException, IOException, ProcCallException\n    {\n        Client client = getClient();\n        loadData(false);\n        VoltTable vt;\n\n        // Index Scan\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.ID = (SELECT ID FROM R2 where ID = ?);\", 2).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {2} });\n\n        // Index Scan correlated\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.ID = (SELECT ID/2 FROM R2 where ID = R1.ID * 2) order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1}, {2} });\n\n        // Seq Scan\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.DEPT = (SELECT DEPT FROM R2 where ID = ?) order by id;\", 1).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1}, {2}, {3} });\n\n        // Seq Scan correlated\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.DEPT = (SELECT DEPT FROM R2 where ID = R1.ID * 2);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1} });\n\n        // Different comparison operators\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.DEPT > (SELECT DEPT FROM R2 where ID = 3) order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {4}, {5} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where (SELECT DEPT FROM R2 where ID = 3) != R1.DEPT order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {4}, {5} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.DEPT >= ALL (SELECT DEPT FROM R2) order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {4}, {5} });\n\n        // Index scan\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.ID > ALL (SELECT ID FROM R2 WHERE R2.ID < 4) order by id;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {4}, {5} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.ID >= ALL (SELECT ID FROM R2 order by ID asc);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {5} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.ID >= ALL (SELECT ID FROM R2 order by ID desc);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {5} });\n\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID FROM R1 where R1.ID <= ALL (SELECT ID FROM R2 order by ID desc);\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1} });\n\n        // NLIJ\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID, R2.ID FROM R1, R2 where R1.DEPT = R2.DEPT + (SELECT DEPT FROM R2 where ID = ?) order by R1.ID, R2.ID limit 2;\", 1).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {4, 1}, {4, 2} });\n\n        // @TODO NLIJ correlated\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R2.ID, R2.ID FROM R1, R2 where R2.ID = (SELECT id FROM R2 where ID = R1.ID) order by R1.ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1, 1}, {2,2}, {3,3}, {4,4}, {5,5} });\n\n        // NLJ\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID, R2.ID FROM R1, R2 where R1.DEPT = R2.DEPT + (SELECT DEPT FROM R2 where ID = ?) order by R1.ID, R2.ID limit 1;\", 1).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {4, 1} });\n\n        // NLJ correlated\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select R1.ID, R2.ID FROM R1, R2 where R2.DEPT = (SELECT DEPT FROM R2 where ID = R1.ID + 4) order by R1.ID, R2.ID;\").getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {1, 4}, {1,5} });\n\n        // Having\n        vt = client.callProcedure(\"@AdHoc\",\n                \"select max(R1.ID) FROM R1 group by R1.DEPT having count(*) = \" +\n                        \"(select R2.ID from R2 where R2.ID = ?);\", 2).getResults()[0];\n        validateTableOfLongs(vt, new long[][] { {5} });\n\n        // Having correlated -- parent TVE in the aggregated child expression\n        try {\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select max(R1.ID) FROM R1 group by R1.DEPT having count(*) = \" +\n                    \"(select R2.ID from R2 where R2.ID = R1.DEPT);\").getResults()[0];\n            fail(\"Not support: Having correlated\");\n        } catch (ProcCallException ex) {\n            String errMsg = \"java.lang.NullPointerException\";\n            assertTrue(ex.getMessage().contains(errMsg));\n        }\n\n        try {\n            vt = client.callProcedure(\"@AdHoc\",\n                    \"select R1.ID FROM R1 where R1.ID = (SELECT ID FROM R2);\").getResults()[0];\n            fail();\n        } catch (ProcCallException ex) {\n            String errMsg = (isHSQL()) ? \"cardinality violation\" :\n                \"More than one row returned by a scalar/row subquery\";\n            assertTrue(ex.getMessage().contains(errMsg));\n        }\n    }","commit_id":"93ae8b3a86c55a2abb7f39cd27f5e0484ba8bf3b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testPartialIndexComparisonPredicateExactMatch()\n    {\n        {\n            // CREATE INDEX partial_idx_or_expr ON c (a) where e > 0 or d < 5; -- expression trees differ\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and e > 0 or d < 5;\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            String json = pn.toJSONString();\n            System.out.println(json);\n            assertTrue(json.contains(\"\\\"PURPOSE\\\":3,\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\"));\n        }\n        {\n            // CREATE INDEX partial_idx_1 ON c (b) where abs(e) > 1;\n            AbstractPlanNode pn = compile(\"select * from c where b = 0 and abs(e) > 1;\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() == null);\n            String json = pn.toJSONString();\n            System.out.println(json);\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_1\\\"\"));\n        }\n        {\n            // CREATE INDEX partial_idx_1 ON c (b) where abs(e) > 1;\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and 1 < abs(e);\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() == null);\n            String json = pn.toJSONString();\n            System.out.println(json);\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_1\\\"\"));\n        }\n        {\n            // CREATE INDEX partial_idx_2 ON c (b) where d > 0 and d < 5;\n            // CREATE INDEX partial_idx_3 ON c (b) where d > 0; is also a match\n            // but has higher cost because of the extra post filter\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and d > 0 and d < 5;\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() == null);\n            String json = pn.toJSONString();\n            System.out.println(json);\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_2\\\"\"));\n        }\n        {\n            // CREATE INDEX partial_idx_2 ON c (b) where d > 0 and d < 5;\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and d < 5 and 0 < d;\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() == null);\n            String json = pn.toJSONString();\n            System.out.println(json);\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_2\\\"\"));\n        }\n        {\n            // CREATE INDEX partial_idx_3 ON c (b) where 0 < f;\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and f > 0;\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() == null);\n            String json = pn.toJSONString();\n            System.out.println(json);\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_4\\\"\"));\n        }\n        {\n            // CREATE INDEX partial_idx_3 ON c (b) where 0 < f;\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and 0 < f;\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() == null);\n            String json = pn.toJSONString();\n            System.out.println(json);\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_4\\\"\"));\n        }\n    }","id":69668,"modified_method":"public void testPartialIndexComparisonPredicateExactMatch()\n    {\n        {\n            // CREATE INDEX partial_idx_or_expr ON c (a) where e > 0 or d < 5; -- expression trees differ\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and e > 0 or d < 5;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\");\n        }\n        {\n            // CREATE INDEX partial_idx_1 ON c (b) where abs(e) > 1;\n            AbstractPlanNode pn = compile(\"select * from c where b = 0 and abs(e) > 1;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_1\\\"\");\n            checkIndexPredicateIsNull(pn);\n        }\n        {\n            // CREATE INDEX partial_idx_1 ON c (b) where abs(e) > 1;\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and 1 < abs(e);\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_1\\\"\");\n            checkIndexPredicateIsNull(pn);\n        }\n        {\n            // CREATE INDEX partial_idx_2 ON c (b) where d > 0 and d < 5;\n            // CREATE INDEX partial_idx_3 ON c (b) where d > 0; is also a match\n            // but has higher cost because of the extra post filter\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and d > 0 and d < 5;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_2\\\"\");\n            checkIndexPredicateIsNull(pn);\n        }\n        {\n            // CREATE INDEX partial_idx_2 ON c (b) where d > 0 and d < 5;\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and d < 5 and 0 < d;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_2\\\"\");\n            checkIndexPredicateIsNull(pn);\n        }\n        {\n            // CREATE INDEX partial_idx_4 ON c (a, b) where 0 < f;\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and b > 0 and f > 0;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_4\\\"\");\n            String[] columns = {\"F\"};\n            checkIndexPredicateDoesNotHave(pn, columns);\n        }\n        {\n            // CREATE INDEX partial_idx_4 ON c (a, b) where 0 < f;\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and b > 0 and 0 < f;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_4\\\"\");\n            String[] columns = {\"F\"};\n            checkIndexPredicateDoesNotHave(pn, columns);\n        }\n        {\n            // CREATE INDEX partial_idx_5 ON c (b) where d > f;\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and d > f;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_5\\\"\");\n            String[] columns = {\"F\"};\n            checkIndexPredicateIsNull(pn);\n        }\n        {\n            // CREATE INDEX partial_idx_5 ON c (b) where d > f;\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and f < d;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_5\\\"\");\n            String[] columns = {\"F\"};\n            checkIndexPredicateIsNull(pn);\n        }\n    }","commit_id":"456ce98d71d692a163837a16b086e22743a4bee7","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testPartialIndexArbitraryPredicate()\n    {\n        {\n            // CREATE INDEX partial_idx_or_expr ON c (f) where e > 0 or d < 5;\n            AbstractPlanNode pn = compile(\"select * from c where f > 0 and (e > 0 or d < 5);\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() == null);\n            String json = pn.toJSONString();\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_OR_EXPR\\\"\"));\n        }\n    }","id":69669,"modified_method":"public void testPartialIndexArbitraryPredicate()\n    {\n        {\n            // CREATE INDEX partial_idx_or_expr ON c (f) where e > 0 or d < 5;\n            AbstractPlanNode pn = compile(\"select * from c where f > 0 and (e > 0 or d < 5);\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_OR_EXPR\\\"\");\n            checkIndexPredicateIsNull(pn);\n        }\n    }","commit_id":"456ce98d71d692a163837a16b086e22743a4bee7","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testPartialIndexComparisonPredicateNonExactMatch()\n        {\n            {\n                AbstractPlanNode pn = compile(\"select * from c where a > 0 and e > 0 or d < 5;\");\n                pn = pn.getChild(0);\n                assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n                String json = pn.toJSONString();\n                System.out.println(json);\n                assertTrue(json.contains(\"\\\"PURPOSE\\\":3,\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\"));\n            }\n            {\n                AbstractPlanNode pn = compile(\"select * from c where b > 0 and e = 0;\");\n                pn = pn.getChild(0);\n                String json = pn.toJSONString();\n                System.out.println(json);\n                assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n                // At the moment expression exact match only\n                assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\"));\n                //assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_1\\\"\"));\n            }\n            {\n                AbstractPlanNode pn = compile(\"select * from c where b > 0 and f > 3;\");\n                pn = pn.getChild(0);\n                assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n                String json = pn.toJSONString();\n                System.out.println(json);\n                // At the moment expression exact match only\n                assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\"));\n                //assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_3\\\"\"));\n            }\n            {\n                AbstractPlanNode pn = compile(\"select * from c where b > 0 and 3 < f;\");\n                pn = pn.getChild(0);\n                assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n                String json = pn.toJSONString();\n                System.out.println(json);\n                // At the moment expression exact match only\n                assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\"));\n//                assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_3\\\"\"));\n            }\n    }","id":69670,"modified_method":"public void testPartialIndexComparisonPredicateNonExactMatch()\n        {\n        // At the moment expression exact match only\n        {\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and e > 0 or d < 5;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\");\n        }\n        {\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and e = 0;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\");\n//            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_1\\\"\");\n        }\n        {\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and f > 3;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\");\n//          checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_3\\\"\");\n        }\n        {\n            AbstractPlanNode pn = compile(\"select * from c where b > 0 and 3 < f;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\");\n//          checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_3\\\"\");\n        }\n    }","commit_id":"456ce98d71d692a163837a16b086e22743a4bee7","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testPartialIndexNULLPredicate() {\n        {\n            AbstractPlanNode pn = compile(\"select * from c where a > 0;\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            String json = pn.toJSONString();\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\"));\n        }\n        {\n            // CREATE INDEX partial_idx_null_e ON c (a) where e is null;\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and e is NULL;\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() == null);\n            String json = pn.toJSONString();\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_NULL_E\\\"\"));\n        }\n        {\n            // CREATE INDEX a_partial_idx_not_null_e ON c (a) where e is not null;\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and e is not NULL;\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() == null);\n            String json = pn.toJSONString();\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"A_PARTIAL_IDX_NOT_NULL_E\\\"\"));\n        }\n        {\n            // CREATE INDEX a_partial_idx_not_null_e ON c (a) where e is not null;\n            // range-scan covering from (A > 0) to end Z_FULL_IDX_A has higher cost\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and e = 0;\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() != null);\n            AbstractExpression p = ipn.getPredicate();\n            assertEquals(ExpressionType.COMPARE_EQUAL, p.getExpressionType());\n            String json = pn.toJSONString();\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"A_PARTIAL_IDX_NOT_NULL_E\\\"\"));\n        }\n        {\n            // CREATE INDEX a_partial_idx_not_null_e ON c (a) where (d + e) is not null;\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and 0 = abs(e + d);\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() != null);\n            AbstractExpression p = ipn.getPredicate();\n            assertEquals(ExpressionType.COMPARE_EQUAL, p.getExpressionType());\n            String json = pn.toJSONString();\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"A_PARTIAL_IDX_NOT_NULL_D_E\\\"\"));\n        }\n        {\n            // CREATE INDEX a_partial_idx_not_null_e ON c (a) where e is not null;\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and 0 = abs(e + b);\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() != null);\n            AbstractExpression p = ipn.getPredicate();\n            assertEquals(ExpressionType.COMPARE_EQUAL, p.getExpressionType());\n            String json = pn.toJSONString();\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"A_PARTIAL_IDX_NOT_NULL_E\\\"\"));\n        }\n        {\n            // CREATE INDEX a_partial_idx_not_null_e ON c (a) where e is not null;\n            // uniquely match (A = 0) Z_FULL_IDX_A has the lowest cost\n            AbstractPlanNode pn = compile(\"select * from c where a = 0 and e = 0;\");\n            pn = pn.getChild(0);\n            assertEquals(PlanNodeType.INDEXSCAN, pn.getPlanNodeType());\n            IndexScanPlanNode ipn = (IndexScanPlanNode) pn;\n            assertTrue(ipn.getPredicate() != null);\n            AbstractExpression p = ipn.getPredicate();\n            assertEquals(ExpressionType.COMPARE_EQUAL, p.getExpressionType());\n            String json = pn.toJSONString();\n            assertTrue(json.contains(\"\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\"));\n        }\n    }","id":69671,"modified_method":"public void testPartialIndexNULLPredicate() {\n        {\n            AbstractPlanNode pn = compile(\"select * from c where a > 0;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\");\n        }\n        {\n            // CREATE INDEX partial_idx_null_e ON c (a) where e is null;\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and e is NULL;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"PARTIAL_IDX_NULL_E\\\"\");\n            checkIndexPredicateIsNull(pn);\n        }\n        {\n            // CREATE INDEX a_partial_idx_not_null_e ON c (a) where e is not null;\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and e is not NULL;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"A_PARTIAL_IDX_NOT_NULL_E\\\"\");\n            checkIndexPredicateIsNull(pn);\n        }\n        {\n            // CREATE INDEX a_partial_idx_not_null_e ON c (a) where e is not null;\n            // range-scan covering from (A > 0) to end Z_FULL_IDX_A has higher cost\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and e = 0;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"A_PARTIAL_IDX_NOT_NULL_E\\\"\");\n            String[] columns = {\"E\"};\n            checkIndexPredicateContains(pn, columns);\n        }\n        {\n            // CREATE INDEX a_partial_idx_not_null_d_e ON c (a+b) where (d + e) is not null;\n            AbstractPlanNode pn = compile(\"select * from c where a + b > 0 and 0 = abs(e + d);\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"A_PARTIAL_IDX_NOT_NULL_D_E\\\"\");\n            String[] columns = {\"E\", \"D\"};\n            checkIndexPredicateContains(pn, columns);\n        }\n        {\n            // CREATE INDEX a_partial_idx_not_null_e ON c (a) where e is not null;\n            AbstractPlanNode pn = compile(\"select * from c where a > 0 and 0 = abs(e + b);\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"A_PARTIAL_IDX_NOT_NULL_E\\\"\");\n            String[] columns = {\"E\", \"B\"};\n            checkIndexPredicateContains(pn, columns);\n        }\n        {\n            // CREATE INDEX a_partial_idx_not_null_e ON c (a) where e is not null;\n            // uniquely match (A = 0) Z_FULL_IDX_A has the lowest cost\n            AbstractPlanNode pn = compile(\"select * from c where a = 0 and e = 0;\");\n            checkIndexName(pn, \"\\\"TARGET_INDEX_NAME\\\":\\\"Z_FULL_IDX_A\\\"\");\n            String[] columns = {\"E\"};\n            checkIndexPredicateContains(pn, columns);\n        }\n    }","commit_id":"456ce98d71d692a163837a16b086e22743a4bee7","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testPartialIndex() throws Exception {\n        Client client = getClient();\n\n        if (!isHSQL()) { // HSQL doesn't support partial indexes\n\n            // CREATE INDEX r1_pidx_2 ON R1 (d) where a > 0;\n            // CREATE INDEX r1_pidx_hash_2 ON R1 (d) where a < 0;\n            for (String tb : replicated_tbs) {\n                emptyTable(client, tb);\n                ClientResponse cr =\n                        client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(1, NULL, 1, 1, 1);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(-2, NULL, 2, 2, 2);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(3, NULL, 3, 1, 5);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(-4, NULL, 4, 2, 6);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n                // r1_pidx_2\n                VoltTable vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d > 0 and a > 0 order by a, d\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {1,1 }, {3, 1} });\n                // r1_pidx_hash_2\n                vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d = 2 and a < 0 order by a, d\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {-4, 2}, {-2, 2} });\n\n                // Old and new tuples pass index predicate r1_pidx_2\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 2, D = 2 WHERE A = 1 AND D = 1;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d > 0 and a > 0 order by a, d\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {2,2 }, {3, 1} });\n\n                // Old and new tuples pass index predicate r1_pidx_hash_2\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = -5 WHERE A = -4 AND D = 2;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d = 2 and a < 0 order by a, d\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {-5, 2}, {-2, 2} });\n\n                // Old tuple fail index predicate r1_pidx_2\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 3 WHERE A = -5 AND D = 2;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d > 0 and a > 0 order by a, d\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {2,2}, {3, 1}, {3, 2} });\n\n                // Old tuple fail index predicate r1_pidx_hash_2\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = -5 WHERE A = 3 AND D = 2;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d = 2 and a < 0 order by a, d\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {-5, 2}, {-2, 2} });\n\n                // New tuple fail index predicate r1_pidx_2\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = -6  WHERE A = 2 AND D = 2;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d > 0 and a > 0 order by a, d\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {3, 1}});\n\n                // New tuple fail index predicate r1_pidx_hash_2\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 3 WHERE A = -6 AND D = 2;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d = 2 and a < 0 order by a, d\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {-5, 2}, {-2, 2} });\n\n                // Old and new tuples fail index predicate r1_pidx_2\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = -6  WHERE A = -5 AND D = 2;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d > 0 and a > 0 order by a, d\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {3, 1}, {3, 2} });\n\n                // Old and new tuples fail index predicate r1_pidx_hash_2\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 4  WHERE A = 3 AND D = 2;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d = 2 and a < 0 order by a, d\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {-6, 2}, {-2, 2} });\n\n                // Delete from index r1_pidx_2\n                cr = client.callProcedure(\"@AdHoc\",\"DELETE FROM \" + tb + \" WHERE A = 4 AND D = 2;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d > 0 and a > 0 order by a, d\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {3, 1} });\n\n                // Delete from index r1_pidx_hash_2\n                cr = client.callProcedure(\"@AdHoc\",\"DELETE FROM \" + tb + \" WHERE A = -6 AND D = 2;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d = 2 and a < 0 order by a, d\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {-2, 2} });\n            }\n        }\n    }","id":69672,"modified_method":"public void testPartialIndex() throws Exception {\n        Client client = getClient();\n\n        if (isHSQL()) {\n            // HSQL doesn't support partial indexes\n            return;\n        }\n\n        // CREATE INDEX r1_pidx_2 ON R1 (d) where a > 0;\n        // CREATE INDEX r1_pidx_hash_2 ON R1 (d) where a < 0;\n        for (String tb : replicated_tbs) {\n            emptyTable(client, tb);\n            ClientResponse cr =\n                    client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(1, NULL, 1, 1, 1);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(-2, NULL, 2, 2, 2);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(3, NULL, 3, 1, 5);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(-4, NULL, 4, 2, 6);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n            // r1_pidx_2\n            VoltTable vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d > 0 and a > 0 order by a, d\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1,1 }, {3, 1} });\n            // r1_pidx_hash_2\n            vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d = 2 and a < 0 order by a, d\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {-4, 2}, {-2, 2} });\n\n            // Old and new tuples pass index predicate r1_pidx_2\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 2, D = 2 WHERE A = 1 AND D = 1;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d > 0 and a > 0 order by a, d\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {2,2 }, {3, 1} });\n\n            // Old and new tuples pass index predicate r1_pidx_hash_2\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = -5 WHERE A = -4 AND D = 2;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d = 2 and a < 0 order by a, d\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {-5, 2}, {-2, 2} });\n\n            // Old tuple fail index predicate r1_pidx_2\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 3 WHERE A = -5 AND D = 2;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d > 0 and a > 0 order by a, d\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {2,2}, {3, 1}, {3, 2} });\n\n            // Old tuple fail index predicate r1_pidx_hash_2\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = -5 WHERE A = 3 AND D = 2;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d = 2 and a < 0 order by a, d\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {-5, 2}, {-2, 2} });\n\n            // New tuple fail index predicate r1_pidx_2\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = -6  WHERE A = 2 AND D = 2;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d > 0 and a > 0 order by a, d\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {3, 1}});\n\n            // New tuple fail index predicate r1_pidx_hash_2\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 3 WHERE A = -6 AND D = 2;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d = 2 and a < 0 order by a, d\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {-5, 2}, {-2, 2} });\n\n            // Old and new tuples fail index predicate r1_pidx_2\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = -6  WHERE A = -5 AND D = 2;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d > 0 and a > 0 order by a, d\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {3, 1}, {3, 2} });\n\n            // Old and new tuples fail index predicate r1_pidx_hash_2\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 4  WHERE A = 3 AND D = 2;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d = 2 and a < 0 order by a, d\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {-6, 2}, {-2, 2} });\n\n            // Delete from index r1_pidx_2\n            cr = client.callProcedure(\"@AdHoc\",\"DELETE FROM \" + tb + \" WHERE A = 4 AND D = 2;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d > 0 and a > 0 order by a, d\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {3, 1} });\n\n            // Delete from index r1_pidx_hash_2\n            cr = client.callProcedure(\"@AdHoc\",\"DELETE FROM \" + tb + \" WHERE A = -6 AND D = 2;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            vt = client.callProcedure(\"@AdHoc\", \"select a, d from \" + tb + \" where d = 2 and a < 0 order by a, d\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {-2, 2} });\n\n        }\n    }","commit_id":"456ce98d71d692a163837a16b086e22743a4bee7","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testPartitionPartialUniqueIndex() throws Exception {\n        Client client = getClient();\n\n        if (!isHSQL()) { // HSQL doesn't support partial indexes\n            // CREATE UNIQUE INDEX p1_pidx_1 ON P1 (a) where b is not null;\n            for (String tb : partitioned_tbs) {\n                emptyTable(client, tb);\n                ClientResponse cr =\n                        client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(1, 1, 1, 1);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(2, 2, 2, 2);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                try {\n                    client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(2, 3, 3, 3);\");\n                    fail(\"Shouldn't reach there\");\n                } catch (ProcCallException e) {\n                   assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n                }\n                cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(1, NULL, 4, 4);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(2, NULL, 5, 5);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n                VoltTable vt = client.callProcedure(\"@AdHoc\", \"select a, b from \" + tb +\n                        \" where a > 0 and b > 0 order by a\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {1,1}, {2, 2} });\n\n                cr = client.callProcedure(\"@AdHoc\",\"DELETE FROM \" + tb + \" WHERE A = 1;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n                vt = client.callProcedure(\"@AdHoc\", \"select a, b from \" + tb +\n                        \" where a > 0 and b > 0 order by a\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {2,2} });\n            }\n        }\n    }","id":69673,"modified_method":"public void testPartitionPartialUniqueIndex() throws Exception {\n        Client client = getClient();\n\n        if (!isHSQL()) {\n            // HSQL doesn't support partial indexes\n            return;\n        }\n        // CREATE UNIQUE INDEX p1_pidx_1 ON P1 (a) where b is not null;\n        for (String tb : partitioned_tbs) {\n            emptyTable(client, tb);\n            ClientResponse cr =\n                    client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(1, 1, 1, 1);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(2, 2, 2, 2);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            try {\n                client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(2, 3, 3, 3);\");\n                fail(\"Shouldn't reach there\");\n            } catch (ProcCallException e) {\n                assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n            }\n            cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(1, NULL, 4, 4);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(2, NULL, 5, 5);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n            VoltTable vt = client.callProcedure(\"@AdHoc\", \"select a, b from \" + tb +\n                    \" where a > 0 and b > 0 order by a\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1,1}, {2, 2} });\n\n            cr = client.callProcedure(\"@AdHoc\",\"DELETE FROM \" + tb + \" WHERE A = 1;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n            vt = client.callProcedure(\"@AdHoc\", \"select a, b from \" + tb +\n                    \" where a > 0 and b > 0 order by a\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {2,2} });\n        }\n    }","commit_id":"456ce98d71d692a163837a16b086e22743a4bee7","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testPartialUniqueIndex() throws Exception {\n        Client client = getClient();\n\n        if (!isHSQL()) { // HSQL doesn't support partial indexes\n\n            // CREATE UNIQUE INDEX r1_pidx_1 ON R1 (a) where b is not null;\n            // CREATE UNIQUE INDEX r1_pidx_hash_1 ON R1 (c) where b is not null;\n            for (String tb : replicated_tbs) {\n                emptyTable(client, tb);\n                ClientResponse cr =\n                        client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(1, 1, 1, 1, 1);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(2, 2, 2, 2, 2);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                try {\n                    // Fail the r1_pidx_1 index\n                    client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(2, 3, 3, 3, 4);\");\n                    fail(\"Shouldn't reach there\");\n                } catch (ProcCallException e) {\n                   assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n                }\n                try {\n                    // Fail the r1_pidx_hash_1 index\n                    client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(3, 3, 2, 3, 5);\");\n                    fail(\"Shouldn't reach there\");\n                } catch (ProcCallException e) {\n                   assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n                }\n                // fail the r1_pidx_1 predicate\n                cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(1, NULL, 4, 4, 6);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(2, NULL, 5, 5, 7);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n                // fail the r1_pidx_hash_1 predicate\n                cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(5, NULL, 1, 4, 8);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(6, NULL, 2, 5, 9);\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n                VoltTable vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb +\n                        \" where a > 0 and b > 0 order by a\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {1,1, 1}, {2, 2, 2} });\n                vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb +\n                        \" where c > 0 and b > 0 order by a\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {1,1, 1}, {2, 2, 2} });\n\n                // Old and new tuples pass index predicate r1_pidx_1\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 4, B = 4 WHERE A = 2 AND B = 2;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                try {\n                    client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 4 WHERE A = 1 AND B = 1;\");\n                    fail(\"Shouldn't reach there\");\n                } catch (ProcCallException e) {\n                   assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n                }\n                // Old and new tuples pass index predicate r1_pidx_hash_1\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET C = 4, B = 4 WHERE C = 2 AND B = 4;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                try {\n                    client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET C = 4 WHERE C = 1 AND B = 1;\");\n                    fail(\"Shouldn't reach there\");\n                } catch (ProcCallException e) {\n                   assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n                }\n                vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb + \" order by a,c\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] {\n                        {1,1,1}, {1,Long.MIN_VALUE,4}, {2,Long.MIN_VALUE,5},\n                        {4, 4, 4}, {5,Long.MIN_VALUE,1}, {6,Long.MIN_VALUE,2} });\n\n                // Old tuple fail index predicate r1_pidx_1\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 5, B = 5, C = 5  WHERE A = 1 AND B IS NULL;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                try {\n                    client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 5, B = 5, C = 5 WHERE A = 2 AND B IS NULL;\");\n                    fail(\"Shouldn't reach there\");\n                } catch (ProcCallException e) {\n                   assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n                }\n                vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb + \" order by a,c\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] {\n                        {1,1,1}, {2,Long.MIN_VALUE,5}, {4, 4, 4},\n                        {5,Long.MIN_VALUE,1}, {5, 5, 5}, {6,Long.MIN_VALUE,2} });\n\n\n                // Old tuple fail index predicate r1_pidx_hash_1\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 7, C = 7, B = 7  WHERE C = 1 AND B IS NULL;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                try {\n                    client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 7, C = 7, B = 7 WHERE C = 2 AND B IS NULL;\");\n                    fail(\"Shouldn't reach there\");\n                } catch (ProcCallException e) {\n                   assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n                }\n                vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb + \" order by a, c\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] {\n                        {1,1,1}, {2,Long.MIN_VALUE,5}, {4, 4, 4},\n                        {5, 5, 5}, {6,Long.MIN_VALUE,2}, {7, 7, 7} });\n\n                // New tuple fail index predicate r1_pidx_1\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 1, B = NULL  WHERE A = 5 AND B = 5;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 1, B = NULL WHERE A = 4 AND B = 4;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n                vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb + \" order by a, c\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] {\n                        {1,1,1}, {1,Long.MIN_VALUE,4}, {1,Long.MIN_VALUE,5},\n                        {2,Long.MIN_VALUE,5}, {6,Long.MIN_VALUE,2}, {7, 7, 7} });\n\n                // New tuple fail index predicate r1_pidx_hash_1\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET C = 1, B = NULL  WHERE C = 1 AND B = 1;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET C = 1, B = NULL WHERE C = 7 AND B = 7;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n                vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb +\" order by a,c;\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] {\n                      {1,Long.MIN_VALUE,1}, {1,Long.MIN_VALUE,4}, {1,Long.MIN_VALUE,5},\n                      {2,Long.MIN_VALUE,5}, {6,Long.MIN_VALUE,2}, {7, Long.MIN_VALUE, 1} });\n\n                // Old and new tuples fail index predicate r1_pidx_1\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 6 WHERE A = 2 AND B is NULL;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n                // Old and new tuples fail index predicate r1_pidx_1\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET C = 5 WHERE C = 4 AND B is NULL;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n                vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb +\" order by a,c;\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] {\n                        {1,Long.MIN_VALUE,1}, {1,Long.MIN_VALUE,5}, {1,Long.MIN_VALUE,5},\n                        {6,Long.MIN_VALUE,2}, {6,Long.MIN_VALUE,5}, {7, Long.MIN_VALUE, 1} });\n\n                cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET B = 7  WHERE A = 7;\");\n                cr = client.callProcedure(\"@AdHoc\",\"DELETE FROM \" + tb + \" WHERE A = 7;\");\n                assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n                vt = client.callProcedure(\"@AdHoc\", \"select a, b from \" + tb +\n                        \" where a = 7\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { });\n\n                cr = client.callProcedure(\"@AdHoc\",\"UPSERT INTO \" + tb + \" VALUES(6,NULL,3,3,10);\");\n                cr = client.callProcedure(\"@AdHoc\",\"UPSERT INTO \" + tb + \" VALUES(6,1,3,3,11);\");\n                try {\n                    client.callProcedure(\"@AdHoc\",\"UPSERT INTO \" + tb + \" VALUES(6,1,3,3,12);\");\n                    fail(\"Shouldn't reach there\");\n                } catch (ProcCallException e) {\n                   assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n                }\n                vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb +\" where a > 0 and b > 0 order by a,c;\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {6, 1, 3} });\n                vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb +\" where c = 3 and b > 0 order by a,c;\").getResults()[0];\n                validateTableOfLongs(vt, new long[][] { {6, 1, 3} });\n            }\n        }\n    }","id":69674,"modified_method":"public void testPartialUniqueIndex() throws Exception {\n        Client client = getClient();\n\n        if (isHSQL()) {\n            // HSQL doesn't support partial indexes\n            return;\n        }\n\n        // CREATE UNIQUE INDEX r1_pidx_1 ON R1 (a) where b is not null;\n        // CREATE UNIQUE INDEX r1_pidx_hash_1 ON R1 (c) where b is not null;\n        for (String tb : replicated_tbs) {\n            emptyTable(client, tb);\n            ClientResponse cr =\n                    client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(1, 1, 1, 1, 1);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(2, 2, 2, 2, 2);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            try {\n                // Fail the r1_pidx_1 index\n                client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(2, 3, 3, 3, 4);\");\n                fail(\"Shouldn't reach there\");\n            } catch (ProcCallException e) {\n                assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n            }\n            try {\n                // Fail the r1_pidx_hash_1 index\n                client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(3, 3, 2, 3, 5);\");\n                fail(\"Shouldn't reach there\");\n            } catch (ProcCallException e) {\n                assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n            }\n            // fail the r1_pidx_1 predicate\n            cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(1, NULL, 4, 4, 6);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(2, NULL, 5, 5, 7);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n            // fail the r1_pidx_hash_1 predicate\n            cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(5, NULL, 1, 4, 8);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            cr = client.callProcedure(\"@AdHoc\",\"INSERT INTO \" + tb + \" VALUES(6, NULL, 2, 5, 9);\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n            VoltTable vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb +\n                    \" where a > 0 and b > 0 order by a\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1,1, 1}, {2, 2, 2} });\n            vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb +\n                    \" where c > 0 and b > 0 order by a\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {1,1, 1}, {2, 2, 2} });\n\n            // Old and new tuples pass index predicate r1_pidx_1\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 4, B = 4 WHERE A = 2 AND B = 2;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            try {\n                client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 4 WHERE A = 1 AND B = 1;\");\n                fail(\"Shouldn't reach there\");\n            } catch (ProcCallException e) {\n                assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n            }\n            // Old and new tuples pass index predicate r1_pidx_hash_1\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET C = 4, B = 4 WHERE C = 2 AND B = 4;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            try {\n                client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET C = 4 WHERE C = 1 AND B = 1;\");\n                fail(\"Shouldn't reach there\");\n            } catch (ProcCallException e) {\n                assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n            }\n            vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb + \" order by a,c\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {\n                    {1,1,1}, {1,Long.MIN_VALUE,4}, {2,Long.MIN_VALUE,5},\n                    {4, 4, 4}, {5,Long.MIN_VALUE,1}, {6,Long.MIN_VALUE,2} });\n\n            // Old tuple fail index predicate r1_pidx_1\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 5, B = 5, C = 5  WHERE A = 1 AND B IS NULL;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            try {\n                client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 5, B = 5, C = 5 WHERE A = 2 AND B IS NULL;\");\n                fail(\"Shouldn't reach there\");\n            } catch (ProcCallException e) {\n                assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n            }\n            vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb + \" order by a,c\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {\n                    {1,1,1}, {2,Long.MIN_VALUE,5}, {4, 4, 4},\n                    {5,Long.MIN_VALUE,1}, {5, 5, 5}, {6,Long.MIN_VALUE,2} });\n\n\n            // Old tuple fail index predicate r1_pidx_hash_1\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 7, C = 7, B = 7  WHERE C = 1 AND B IS NULL;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            try {\n                client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 7, C = 7, B = 7 WHERE C = 2 AND B IS NULL;\");\n                fail(\"Shouldn't reach there\");\n            } catch (ProcCallException e) {\n                assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n            }\n            vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb + \" order by a, c\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {\n                    {1,1,1}, {2,Long.MIN_VALUE,5}, {4, 4, 4},\n                    {5, 5, 5}, {6,Long.MIN_VALUE,2}, {7, 7, 7} });\n\n            // New tuple fail index predicate r1_pidx_1\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 1, B = NULL  WHERE A = 5 AND B = 5;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 1, B = NULL WHERE A = 4 AND B = 4;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n            vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb + \" order by a, c\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {\n                    {1,1,1}, {1,Long.MIN_VALUE,4}, {1,Long.MIN_VALUE,5},\n                    {2,Long.MIN_VALUE,5}, {6,Long.MIN_VALUE,2}, {7, 7, 7} });\n\n            // New tuple fail index predicate r1_pidx_hash_1\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET C = 1, B = NULL  WHERE C = 1 AND B = 1;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET C = 1, B = NULL WHERE C = 7 AND B = 7;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n            vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb +\" order by a,c;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {\n                    {1,Long.MIN_VALUE,1}, {1,Long.MIN_VALUE,4}, {1,Long.MIN_VALUE,5},\n                    {2,Long.MIN_VALUE,5}, {6,Long.MIN_VALUE,2}, {7, Long.MIN_VALUE, 1} });\n\n            // Old and new tuples fail index predicate r1_pidx_1\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET A = 6 WHERE A = 2 AND B is NULL;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n            // Old and new tuples fail index predicate r1_pidx_1\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET C = 5 WHERE C = 4 AND B is NULL;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n\n            vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb +\" order by a,c;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] {\n                    {1,Long.MIN_VALUE,1}, {1,Long.MIN_VALUE,5}, {1,Long.MIN_VALUE,5},\n                    {6,Long.MIN_VALUE,2}, {6,Long.MIN_VALUE,5}, {7, Long.MIN_VALUE, 1} });\n\n            cr = client.callProcedure(\"@AdHoc\",\"UPDATE \" + tb + \" SET B = 7  WHERE A = 7;\");\n            cr = client.callProcedure(\"@AdHoc\",\"DELETE FROM \" + tb + \" WHERE A = 7;\");\n            assertEquals(ClientResponse.SUCCESS, cr.getStatus());\n            vt = client.callProcedure(\"@AdHoc\", \"select a, b from \" + tb +\n                    \" where a = 7\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { });\n\n            cr = client.callProcedure(\"@AdHoc\",\"UPSERT INTO \" + tb + \" VALUES(6,NULL,3,3,10);\");\n            cr = client.callProcedure(\"@AdHoc\",\"UPSERT INTO \" + tb + \" VALUES(6,1,3,3,11);\");\n            try {\n                client.callProcedure(\"@AdHoc\",\"UPSERT INTO \" + tb + \" VALUES(6,1,3,3,12);\");\n                fail(\"Shouldn't reach there\");\n            } catch (ProcCallException e) {\n                assertTrue(e.getMessage().contains(\"Constraint Type UNIQUE\"));\n            }\n            vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb +\" where a > 0 and b > 0 order by a,c;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {6, 1, 3} });\n            vt = client.callProcedure(\"@AdHoc\", \"select a, b, c from \" + tb +\" where c = 3 and b > 0 order by a,c;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][] { {6, 1, 3} });\n        }\n    }","commit_id":"456ce98d71d692a163837a16b086e22743a4bee7","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n\t * evaluate thed call to the xquery function,\n\t * it is really the main entry point of this class\n\t * \n\t * @param args\t\targuments from the  function call\n\t * @param contextSequence\tthe Context Sequence to operate on (not used here internally!)\n\t * @return\t\tA sequence representing the result of the function call\n\t * \n\t * @see org.exist.xquery.BasicFunction#eval(org.exist.xquery.value.Sequence[], org.exist.xquery.value.Sequence)\n\t */\n\tpublic Sequence eval(Sequence[] args, Sequence contextSequence) throws XPathException\n\t{\n\t\tString resource = args[0].getStringValue();\n\t\tString cronExpression = args[1].getStringValue();\n\t\tlong periodicValue = 0;\n\t\tlong delayValue = 0;\n\t\tint repeatValue = -1;\n        String jobName = args[2].getStringValue();\n        String delayString = \"0\";\n        String repeatString = \"0\";\n        Properties properties = null;\n\t\tif (getArgumentCount() >= 4) {\n            Node options = ((NodeValue)args[3].itemAt(0)).getNode();\n            properties = new Properties();\n            parseParameters(options, properties);\n        }\n\t\tif (getArgumentCount() >= 5) {\n\t\t\tdelayString = args[4].getStringValue();\n\t\t\ttry {\n\t\t\t\tdelayValue = Long.parseLong(delayString);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t}\n\t\t}\n\t\tif (getArgumentCount() >= 6) {\n\t\t\trepeatString = args[5].getStringValue();\n\t\t\ttry {\n\t\t\t\trepeatValue = Integer.parseInt(repeatString);\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t}\n\t\t}\n\n\t\tUser user = context.getUser();\n\t\t\n\t\t//Check if the user is a DBA\n\t\tif(!user.hasDbaRole())\n\t\t{\n\t\t\treturn(BooleanValue.FALSE);\n\t\t}\n\t\t\n\t\tObject job = null;\n\t\tboolean isCron = true;\n\t\t\n\t\t//scheule-xquery-cron-job\n\t\tif(isCalledAs(SCHEDULE_XQUERY_CRON_JOB))\n\t\t{\n\t\t\tjob = new UserXQueryJob(jobName, resource, user);\n\t\t}\n\t\telse if(isCalledAs(SCHEDULE_XQUERY_PERIODIC_JOB))\n\t\t{\n\t\t\tperiodicValue = Long.parseLong(cronExpression);\n\t\t\tjob = new UserXQueryJob(jobName, resource, user);\n\t\t\tisCron = true;\n\t\t}\n\t\t\n\t\t//schedule-java-cron-job\n\t\telse if(isCalledAs(SCHEDULE_JAVA_CRON_JOB) || isCalledAs(SCHEDULE_JAVA_PERIODIC_JOB))\n\t\t{\n\t\t\tif (isCalledAs(SCHEDULE_JAVA_PERIODIC_JOB)) {\n\t\t\t\tperiodicValue = Long.parseLong(cronExpression);\n\t\t\t}\n\t\t\ttry\n\t\t\t{\n\t\t\t\t//Check if the Class is a UserJob\n\t\t\t\tClass jobClass = Class.forName(resource);\n\t\t\t\tjob = jobClass.newInstance();\n\t\t\t\tif(!(job instanceof UserJavaJob))\n\t\t\t\t{\n\t\t\t\t\tLOG.error(\"Cannot Schedule job. Class \" + resource + \" is not an instance of org.exist.scheduler.UserJavaJob\");\n\t\t\t\t\treturn(BooleanValue.FALSE);\n\t\t\t\t}\n                ((UserJavaJob)job).setName(jobName);\n\t\t\t}\n\t\t\tcatch(ClassNotFoundException cnfe)\n\t\t\t{\n\t\t\t\tLOG.error(cnfe);\n\t\t\t\treturn(BooleanValue.FALSE);\n\t\t\t}\n\t\t\tcatch(IllegalAccessException iae)\n\t\t\t{\n\t\t\t\tLOG.error(iae);\n\t\t\t\treturn(BooleanValue.FALSE);\n\t\t\t}\n\t\t\tcatch(InstantiationException ie)\n\t\t\t{\n\t\t\t\tLOG.error(ie);\n\t\t\t\treturn(BooleanValue.FALSE);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(job != null)\n\t\t{\n\t\t\tif (isCron) {\n\t\t\t\t//schedule the job\n\t\t\t\tif(scheduler.createCronJob(cronExpression, (UserJob)job, properties))\n\t\t\t\t{\n\t\t\t\t\treturn(BooleanValue.TRUE);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn(BooleanValue.FALSE);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//schedule the job\n\t\t\t\tif(scheduler.createPeriodicJob(periodicValue, (UserJob)job, delayValue, properties, repeatValue))\n\t\t\t\t{\n\t\t\t\t\treturn(BooleanValue.TRUE);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn(BooleanValue.FALSE);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn(BooleanValue.FALSE);\n\t\t}\n\t}","id":69675,"modified_method":"/**\n\t * evaluate thed call to the xquery function,\n\t * it is really the main entry point of this class\n\t * \n\t * @param args\t\targuments from the  function call\n\t * @param contextSequence\tthe Context Sequence to operate on (not used here internally!)\n\t * @return\t\tA sequence representing the result of the function call\n\t * \n\t * @see org.exist.xquery.BasicFunction#eval(org.exist.xquery.value.Sequence[], org.exist.xquery.value.Sequence)\n\t */\n\tpublic Sequence eval(Sequence[] args, Sequence contextSequence) throws XPathException\n\t{\n\t\tString resource = args[0].getStringValue();\n\t\tlong periodicValue = 0;\n\t\tlong delayValue = 0;\n\t\tint repeatValue = -1;\n        String jobName = args[2].getStringValue();\n        Properties properties = null;\n\t\tif (getArgumentCount() >= 4 && args[3].hasOne()) {\n            Node options = ((NodeValue)args[3].itemAt(0)).getNode();\n            properties = new Properties();\n            parseParameters(options, properties);\n        }\n\t\tif (getArgumentCount() >= 5) {\n            delayValue = ((IntegerValue)args[4].itemAt(0)).getLong();\n\t\t}\n\t\tif (getArgumentCount() >= 6) {\n            repeatValue = ((IntegerValue)args[5].itemAt(0)).getInt();\n\t\t}\n\n\t\tUser user = context.getUser();\n\t\t\n\t\t//Check if the user is a DBA\n\t\tif(!user.hasDbaRole())\n\t\t{\n\t\t\treturn(BooleanValue.FALSE);\n\t\t}\n\t\t\n\t\tObject job = null;\n\t\tboolean isCron = true;\n\t\t\n\t\t//scheule-xquery-cron-job\n\t\tif(isCalledAs(SCHEDULE_XQUERY_CRON_JOB))\n\t\t{\n\t\t\tjob = new UserXQueryJob(jobName, resource, user);\n\t\t}\n\t\telse if(isCalledAs(SCHEDULE_XQUERY_PERIODIC_JOB))\n\t\t{\n            periodicValue = ((IntegerValue) args[1].itemAt(0)).getLong();\n\t\t\tjob = new UserXQueryJob(jobName, resource, user);\n\t\t\tisCron = false;\n\t\t}\n\t\t\n\t\t//schedule-java-cron-job\n\t\telse if(isCalledAs(SCHEDULE_JAVA_CRON_JOB) || isCalledAs(SCHEDULE_JAVA_PERIODIC_JOB))\n\t\t{\n\t\t\tif (isCalledAs(SCHEDULE_JAVA_PERIODIC_JOB)) {\n                periodicValue = ((IntegerValue) args[1].itemAt(0)).getLong();\n\t\t\t}\n\t\t\ttry\n\t\t\t{\n\t\t\t\t//Check if the Class is a UserJob\n\t\t\t\tClass jobClass = Class.forName(resource);\n\t\t\t\tjob = jobClass.newInstance();\n\t\t\t\tif(!(job instanceof UserJavaJob))\n\t\t\t\t{\n\t\t\t\t\tLOG.error(\"Cannot Schedule job. Class \" + resource + \" is not an instance of org.exist.scheduler.UserJavaJob\");\n\t\t\t\t\treturn(BooleanValue.FALSE);\n\t\t\t\t}\n                ((UserJavaJob)job).setName(jobName);\n\t\t\t}\n\t\t\tcatch(ClassNotFoundException cnfe)\n\t\t\t{\n\t\t\t\tLOG.error(cnfe);\n\t\t\t\treturn(BooleanValue.FALSE);\n\t\t\t}\n\t\t\tcatch(IllegalAccessException iae)\n\t\t\t{\n\t\t\t\tLOG.error(iae);\n\t\t\t\treturn(BooleanValue.FALSE);\n\t\t\t}\n\t\t\tcatch(InstantiationException ie)\n\t\t\t{\n\t\t\t\tLOG.error(ie);\n\t\t\t\treturn(BooleanValue.FALSE);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(job != null)\n\t\t{\n\t\t\tif (isCron) {\n\t\t\t\t//schedule the job\n                String cronExpression = args[1].getStringValue();\n\t\t\t\tif(scheduler.createCronJob(cronExpression, (UserJob)job, properties))\n\t\t\t\t{\n\t\t\t\t\treturn(BooleanValue.TRUE);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn(BooleanValue.FALSE);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//schedule the job\n\t\t\t\tif(scheduler.createPeriodicJob(periodicValue, (UserJob)job, delayValue, properties, repeatValue))\n\t\t\t\t{\n\t\t\t\t\treturn(BooleanValue.TRUE);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn(BooleanValue.FALSE);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn(BooleanValue.FALSE);\n\t\t}\n\t}","commit_id":"619d9482c719f2643bedd7b8b409685f1b5aceb4","url":"https://github.com/eXist-db/exist"},{"original_method":"/** called from the special XQuery function util:qname-index-lookup() */\n\tpublic Sequence findByQName(QName qname, String content, Sequence contextSequence) throws XPathException {\n\t\tNodeSet contextSet = contextSequence.toNodeSet();\n\t\tDocumentSet docSet = contextSet.getDocumentSet();\n\t\t\n\t\tValueIndexKeyFactory \n\t\t// Indexable \n\t\tindexable = new QNameValueIndexKeyFactory( new StringValue(content), qname);\n\t\tint relation = Constants.EQ;\n\t\treturn find(relation, docSet, contextSet, indexable);\n\t}","id":69676,"modified_method":"/** called from the special XQuery function util:qname-index-lookup() */\n\tpublic Sequence findByQName(QName qname, AtomicValue comparisonCriterium, Sequence contextSequence) throws XPathException {\n\t\tNodeSet contextSet = contextSequence.toNodeSet();\n\t\tDocumentSet docSet = contextSet.getDocumentSet();\n\t\t\n\t\tValueIndexKeyFactory \n\t\t// Indexable \n\t\tindexable = new QNameValueIndexKeyFactory( (Indexable)comparisonCriterium, qname);\n\t\tint relation = Constants.EQ;\n\t\treturn find(relation, docSet, contextSet, indexable);\n\t}","commit_id":"7cc94a636448d3af2a3899ba4d54e65959c82fed","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * @see org.exist.xquery.BasicFunction#eval(org.exist.xquery.value.Sequence[], org.exist.xquery.value.Sequence)\n\t */\n\tpublic Sequence eval(Sequence[] args, Sequence contextSequence)\n\t\t\tthrows XPathException {\n\t\tQName qname =((QNameValue) args[0].itemAt(0)).getQName();\n\t\tString content = args[1].getStringValue();\n\t\t\n        NativeValueIndexByQName valueIndex = context.getBroker().getQNameValueIndex();\n        if ( contextSequence == null ) {\n        \tRootNode rootNode = new RootNode(context);\n        \tcontextSequence = rootNode.eval(null, null);\n        }\n        Sequence result = valueIndex.findByQName(qname, content, contextSequence);\n        return result;\n\t}","id":69677,"modified_method":"/**\n\t * @see org.exist.xquery.BasicFunction#eval(org.exist.xquery.value.Sequence[], org.exist.xquery.value.Sequence)\n\t */\n\tpublic Sequence eval(Sequence[] args, Sequence contextSequence)\n\t\t\tthrows XPathException {\n\t\tQName qname = ((QNameValue) args[0].itemAt(0)).getQName();\n\t\tAtomicValue comparisonCriterium = (AtomicValue) args[1].itemAt(0);\n\t\tSequence result = Sequence.EMPTY_SEQUENCE;\n\n\t\tif (comparisonCriterium instanceof Indexable) {\n\t\t\tNativeValueIndexByQName valueIndex = context.getBroker()\n\t\t\t\t\t.getQNameValueIndex();\n\t\t\tif (contextSequence == null) {\n\t\t\t\tRootNode rootNode = new RootNode(context);\n\t\t\t\tcontextSequence = rootNode.eval(null, null);\n\t\t\t}\n\t\t\tresult = valueIndex.findByQName(qname, comparisonCriterium,\n\t\t\t\t\tcontextSequence);\n\t\t} else {\n\t\t\t// TODO error message & log : \n\t\t\t// \"The comparison Criterium must be an Indexable: boolean, numeric, string, and not ...\n\t\t}\n\t\treturn result;\n\t}","commit_id":"7cc94a636448d3af2a3899ba4d54e65959c82fed","url":"https://github.com/eXist-db/exist"},{"original_method":"protected void printPermissions(AttributesImpl attrs, Permission perm) {\n        attrs.addAttribute(\"\", \"owner\", \"owner\", \"CDATA\", perm.getOwner());\n        attrs.addAttribute(\"\", \"group\", \"group\", \"CDATA\", perm.getOwnerGroup());\n        attrs.addAttribute(\"\", \"permissions\", \"permissions\", \"CDATA\", perm\n                .toString());\n    }","id":69678,"modified_method":"protected void addPermissionAttributes(AttributesImpl attrs, Permission perm) {\n\t\tattrs.addAttribute(\"\", \"owner\", \"owner\", \"CDATA\", perm.getOwner());\n\t\tattrs.addAttribute(\"\", \"group\", \"group\", \"CDATA\", perm.getOwnerGroup());\n\t\tattrs.addAttribute(\"\", \"permissions\", \"permissions\", \"CDATA\", perm\n\t\t\t\t.toString());\n\t}","commit_id":"96d9349bd9f31f8e484a7ad8a9194fdc6632121c","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * TODO: pass request and response objects to XQuery.\n     *\n     * @throws XPathException\n     */\n    protected String search(DBBroker broker, String query, String path,\n            int howmany, int start, Properties outputProperties, boolean wrap,\n            boolean cache, HttpServletRequest request, HttpServletResponse response)\n            throws BadRequestException, PermissionDeniedException,\n            XPathException {\n        String sessionIdParam = outputProperties.getProperty(Serializer.PROPERTY_SESSION_ID);\n        if (sessionIdParam != null) {\n            try {\n                int sessionId = Integer.parseInt(sessionIdParam);\n                if (sessionId > -1) {\n                    Sequence cached = sessionManager.get(query, sessionId);\n                    if (cached != null) {\n                        LOG.debug(\"Returning cached query result\");\n                        return printResults(broker, cached, howmany, start,\n                            outputProperties, wrap);\n                    } else {\n                        LOG.debug(\"Cached query result not found. Probably timed out. Repeating query.\");\n                    }\n                }\n            } catch (NumberFormatException e) {\n                throw new BadRequestException(\"Invalid session id passed in query request: \" + sessionIdParam);\n            }\n        }\n        XmldbURI pathUri = XmldbURI.create(path);\n        try {\n            Source source = new StringSource(query);\n            XQuery xquery = broker.getXQueryService();\n            XQueryPool pool = xquery.getXQueryPool();\n            CompiledXQuery compiled = pool.borrowCompiledXQuery(broker, source);\n            XQueryContext context;\n            if (compiled == null)\n                context = xquery.newContext(AccessContext.REST);\n            else\n                context = compiled.getContext();\n            context.setStaticallyKnownDocuments(new XmldbURI[] { pathUri });\n            context.setBaseURI(new AnyURIValue(pathUri.toString()));\n            declareVariables(context, request, response);\n\n            if (compiled == null)\n                compiled = xquery.compile(context, source);\n            else\n                compiled.getContext().updateContext(context);\n            context.checkOptions(outputProperties);\n            try {\n                long startTime = System.currentTimeMillis();\n                Sequence resultSequence = xquery.execute(compiled, null);\n                long queryTime = System.currentTimeMillis() - startTime;\n                if (LOG.isDebugEnabled())\n                \tLOG.debug(\"Found \" + resultSequence.getItemCount() + \" in \"\n                        + queryTime + \"ms.\");\n\n                if (cache) {\n                    int sessionId = sessionManager.add(query, resultSequence);\n                    outputProperties.setProperty(Serializer.PROPERTY_SESSION_ID, Integer.toString(sessionId));\n                    if (!response.isCommitted())\n                        response.setIntHeader(\"X-Session-Id\", sessionId);\n                }\n                \n                return printResults(broker, resultSequence, howmany, start,\n                        outputProperties, wrap);\n            } finally {\n                pool.returnCompiledXQuery(source, compiled);\n            }\n        } catch (IOException e) {\n            throw new BadRequestException(e.getMessage(), e);\n        }\n    }","id":69679,"modified_method":"/**\n\t * TODO: pass request and response objects to XQuery.\n\t * \n\t * @throws XPathException\n\t */\n\tprotected void search(DBBroker broker, String query, String path,\n\t\t\tint howmany, int start, Properties outputProperties, boolean wrap,\n\t\t\tboolean cache, HttpServletRequest request,\n\t\t\tHttpServletResponse response) throws BadRequestException,\n\t\t\tPermissionDeniedException, XPathException {\n\t\tString sessionIdParam = outputProperties\n\t\t\t\t.getProperty(Serializer.PROPERTY_SESSION_ID);\n\t\tif (sessionIdParam != null) {\n\t\t\ttry {\n\t\t\t\tint sessionId = Integer.parseInt(sessionIdParam);\n\t\t\t\tif (sessionId > -1) {\n\t\t\t\t\tSequence cached = sessionManager.get(query, sessionId);\n\t\t\t\t\tif (cached != null) {\n\t\t\t\t\t\tLOG.debug(\"Returning cached query result\");\n\t\t\t\t\t\twriteResults(response, broker, cached, howmany, start,\n\t\t\t\t\t\t\t\toutputProperties, wrap);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLOG\n\t\t\t\t\t\t\t\t.debug(\"Cached query result not found. Probably timed out. Repeating query.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new BadRequestException(\n\t\t\t\t\t\t\"Invalid session id passed in query request: \"\n\t\t\t\t\t\t\t\t+ sessionIdParam);\n\t\t\t}\n\t\t}\n\t\tXmldbURI pathUri = XmldbURI.create(path);\n\t\ttry {\n\t\t\tSource source = new StringSource(query);\n\t\t\tXQuery xquery = broker.getXQueryService();\n\t\t\tXQueryPool pool = xquery.getXQueryPool();\n\t\t\tCompiledXQuery compiled = pool.borrowCompiledXQuery(broker, source);\n\t\t\tXQueryContext context;\n\t\t\tif (compiled == null)\n\t\t\t\tcontext = xquery.newContext(AccessContext.REST);\n\t\t\telse\n\t\t\t\tcontext = compiled.getContext();\n\t\t\tcontext.setStaticallyKnownDocuments(new XmldbURI[] { pathUri });\n\t\t\tcontext.setBaseURI(new AnyURIValue(pathUri.toString()));\n\t\t\tdeclareVariables(context, request, response);\n\n\t\t\tif (compiled == null)\n\t\t\t\tcompiled = xquery.compile(context, source);\n\t\t\telse\n\t\t\t\tcompiled.getContext().updateContext(context);\n\t\t\tcontext.checkOptions(outputProperties);\n\t\t\ttry {\n\t\t\t\tlong startTime = System.currentTimeMillis();\n\t\t\t\tSequence resultSequence = xquery.execute(compiled, null);\n\t\t\t\tlong queryTime = System.currentTimeMillis() - startTime;\n\t\t\t\tif (LOG.isDebugEnabled())\n\t\t\t\t\tLOG.debug(\"Found \" + resultSequence.getItemCount() + \" in \"\n\t\t\t\t\t\t\t+ queryTime + \"ms.\");\n\n\t\t\t\tif (cache) {\n\t\t\t\t\tint sessionId = sessionManager.add(query, resultSequence);\n\t\t\t\t\toutputProperties.setProperty(\n\t\t\t\t\t\t\tSerializer.PROPERTY_SESSION_ID, Integer\n\t\t\t\t\t\t\t\t\t.toString(sessionId));\n\t\t\t\t\tif (!response.isCommitted())\n\t\t\t\t\t\tresponse.setIntHeader(\"X-Session-Id\", sessionId);\n\t\t\t\t}\n\n\t\t\t\twriteResults(response, broker, resultSequence, howmany, start,\n\t\t\t\t\t\toutputProperties, wrap);\n\t\t\t} finally {\n\t\t\t\tpool.returnCompiledXQuery(source, compiled);\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\tthrow new BadRequestException(e.getMessage(), e);\n\t\t}\n\t}","commit_id":"96d9349bd9f31f8e484a7ad8a9194fdc6632121c","url":"https://github.com/eXist-db/exist"},{"original_method":"private void writeResourceAs(DocumentImpl resource, DBBroker broker,\n\t\t\tString stylesheet, String encoding, String asMimeType,\n\t\t\tProperties outputProperties, HttpServletResponse response)\n\t\t\tthrows BadRequestException, PermissionDeniedException, IOException {\n        //Do we have permission to read the resource\n\t\tif (!resource.getPermissions().validate(broker.getUser(),\n\t\t\t\tPermission.READ)) {\n            throw new PermissionDeniedException(\"Not allowed to read resource\");\n        }\n\n        if (resource.getResourceType() == DocumentImpl.BINARY_FILE) {\n            // binary resource\n            if(asMimeType != null)  { //was a mime-type specified?\n\n                response.setContentType(asMimeType);\n            } else {\n                response.setContentType(resource.getMetadata().getMimeType());\n            }\n            OutputStream os = response.getOutputStream();\n            broker.readBinaryResource((BinaryDocument) resource, os);\n            os.flush();\n        } else {\n            // xml resource\n            Serializer serializer = broker.getSerializer();\n            serializer.reset();\n\n            //Serialize the document\n            try {\n                //use a stylesheet if specified in query parameters\n                if (stylesheet != null) {\n                    serializer.setStylesheet(resource, stylesheet);\n                }\n                serializer.setProperties(outputProperties);\n                serializer.prepareStylesheets(resource);\n                if(asMimeType != null) { //was a mime-type specified?\n\t\t\t\t\tresponse.setContentType(asMimeType + \"; charset=\"\n\t\t\t\t\t\t\t+ encoding);\n                } else {\n\t\t\t\t\tif (serializer.isStylesheetApplied()\n\t\t\t\t\t\t\t|| serializer.hasXSLPi(resource) != null) {\n\t\t\t\t\t\tasMimeType = serializer\n\t\t\t\t\t\t\t\t.getStylesheetProperty(OutputKeys.MEDIA_TYPE);\n                        if (!useDynamicContentType || asMimeType == null)\n                            asMimeType = MimeType.HTML_TYPE.getName();\n                        LOG.debug(\"media-type: \" + asMimeType);\n\t\t\t\t\t\tresponse.setContentType(asMimeType + \"; charset=\"\n\t\t\t\t\t\t\t\t+ encoding);\n                    } else {\n                        asMimeType = resource.getMetadata().getMimeType();\n\t\t\t\t\t\tresponse.setContentType(asMimeType + \"; charset=\"\n\t\t\t\t\t\t\t\t+ encoding);\n                    }\n                }\n                if (asMimeType.equals(MimeType.HTML_TYPE.getName())){\n                    serializer.setProperty(\"method\", \"xhtml\");\n                    serializer.setProperty(\"media-type\", \"text/html\");\n                    serializer.setProperty(\"ident\", \"yes\");\n                    serializer.setProperty(\"omit-xml-declaration\", \"no\");\n                }\n                OutputStream is = response.getOutputStream();\n                Writer w = new OutputStreamWriter(is, encoding);\n                serializer.serialize(resource,w);\n                w.flush();\n                w.close();\n            } catch (SAXException saxe) {\n                LOG.warn(saxe);\n\t\t\t\tthrow new BadRequestException(\"Error while serializing XML: \"\n\t\t\t\t\t\t+ saxe.getMessage());\n            } catch (TransformerConfigurationException e) {\n                LOG.warn(e);\n                throw new BadRequestException(e.getMessageAndLocation());\n            }\n        }\n    }","id":69680,"modified_method":"private void writeResourceAs(DocumentImpl resource, DBBroker broker,\n\t\t\tString stylesheet, String encoding, String asMimeType,\n\t\t\tProperties outputProperties, HttpServletResponse response)\n\t\t\tthrows BadRequestException, PermissionDeniedException, IOException {\n\n\t\t// Do we have permission to read the resource\n\t\tif (!resource.getPermissions().validate(broker.getUser(),\n\t\t\t\tPermission.READ)) {\n\t\t\tthrow new PermissionDeniedException(\"Not allowed to read resource\");\n\t\t}\n\n\t\tif (resource.getResourceType() == DocumentImpl.BINARY_FILE) {\n\t\t\t// binary resource\n\n\t\t\tif (asMimeType != null) { // was a mime-type specified?\n\n\t\t\t\tresponse.setContentType(asMimeType);\n\t\t\t} else {\n\t\t\t\tresponse.setContentType(resource.getMetadata().getMimeType());\n\t\t\t}\n\t\t\tOutputStream os = response.getOutputStream();\n\t\t\tbroker.readBinaryResource((BinaryDocument) resource, os);\n\t\t\tos.flush();\n\t\t} else {\n\t\t\t// xml resource\n\n\t\t\tSAXSerializer sax = null;\n\t\t\tSerializer serializer = broker.getSerializer();\n\t\t\tserializer.reset();\n\n\t\t\t// Serialize the document\n\t\t\ttry {\n\t\t\t\tsax = (SAXSerializer) SerializerPool.getInstance()\n\t\t\t\t\t\t.borrowObject(SAXSerializer.class);\n\n\t\t\t\t// use a stylesheet if specified in query parameters\n\t\t\t\tif (stylesheet != null) {\n\t\t\t\t\tserializer.setStylesheet(resource, stylesheet);\n\t\t\t\t}\n\t\t\t\tserializer.setProperties(outputProperties);\n\t\t\t\tserializer.prepareStylesheets(resource);\n\n\t\t\t\tif (asMimeType != null) { // was a mime-type specified?\n\t\t\t\t\tresponse.setContentType(asMimeType + \"; charset=\"\n\t\t\t\t\t\t\t+ encoding);\n\t\t\t\t} else {\n\t\t\t\t\tif (serializer.isStylesheetApplied()\n\t\t\t\t\t\t\t|| serializer.hasXSLPi(resource) != null) {\n\t\t\t\t\t\tasMimeType = serializer\n\t\t\t\t\t\t\t\t.getStylesheetProperty(OutputKeys.MEDIA_TYPE);\n\t\t\t\t\t\tif (!useDynamicContentType || asMimeType == null)\n\t\t\t\t\t\t\tasMimeType = MimeType.HTML_TYPE.getName();\n\t\t\t\t\t\tLOG.debug(\"media-type: \" + asMimeType);\n\t\t\t\t\t\tresponse.setContentType(asMimeType + \"; charset=\"\n\t\t\t\t\t\t\t\t+ encoding);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tasMimeType = resource.getMetadata().getMimeType();\n\t\t\t\t\t\tresponse.setContentType(asMimeType + \"; charset=\"\n\t\t\t\t\t\t\t\t+ encoding);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (asMimeType.equals(MimeType.HTML_TYPE.getName())) {\n\t\t\t\t\tserializer.setProperty(\"method\", \"xhtml\");\n\t\t\t\t\tserializer.setProperty(\"media-type\", \"text/html\");\n\t\t\t\t\tserializer.setProperty(\"ident\", \"yes\");\n\t\t\t\t\tserializer.setProperty(\"omit-xml-declaration\", \"no\");\n\t\t\t\t}\n\n\t\t\t\tOutputStreamWriter writer = new OutputStreamWriter(response\n\t\t\t\t\t\t.getOutputStream(), encoding);\n\t\t\t\tsax.setOutput(writer, outputProperties);\n\t\t\t\tserializer.setSAXHandlers(sax, sax);\n\n\t\t\t\tserializer.toSAX(resource);\n\n\t\t\t\twriter.flush();\n\t\t\t\twriter.close();\n\t\t\t} catch (SAXException saxe) {\n\t\t\t\tLOG.warn(saxe);\n\t\t\t\tthrow new BadRequestException(\"Error while serializing XML: \"\n\t\t\t\t\t\t+ saxe.getMessage());\n\t\t\t} catch (TransformerConfigurationException e) {\n\t\t\t\tLOG.warn(e);\n\t\t\t\tthrow new BadRequestException(e.getMessageAndLocation());\n\t\t\t} finally {\n\t\t\t\tif (sax != null) {\n\t\t\t\t\tSerializerPool.getInstance().returnObject(sax);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"96d9349bd9f31f8e484a7ad8a9194fdc6632121c","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * @param query\n     * @param path\n     * @param e\n     */\n\tprivate String formatXPathExceptionHtml(String query, String path,\n\t\t\tXPathException e) {\n        StringWriter writer = new StringWriter();\n        writer.write(QUERY_ERROR_HEAD);\n        writer.write(\"<p class=\\\"path\\\"><span class=\\\"high\\\">Path<\/span>: \");\n        writer.write(\"<a href=\\\"\");\n        writer.write(path);\n        writer.write(\"\\\">\");\n        writer.write(path);\n        writer.write(\"<\/a><\/p>\");\n        \n        writer.write(\"<p class=\\\"errmsg\\\">\");\n        writer.write(e.getMessage());\n        writer.write(\"<\/p>\");\n        if(query != null) {\n            writer.write(\"<p><span class=\\\"high\\\">Query<\/span>:<\/p><pre>\");\n            writer.write(query);\n            writer.write(\"<\/pre>\");\n        }\n        writer.write(\"<\/body><\/html>\");\n        return writer.toString();\n    }","id":69681,"modified_method":"/**\n\t * @param response\n\t * @param encoding\n\t * @param query\n\t * @param path\n\t * @param e\n\t * \n\t */\n\tprivate void writeXPathExceptionHtml(HttpServletResponse response,\n\t\t\tString encoding, String query, String path, XPathException e)\n\t\t\tthrows IOException {\n\n\t\tresponse.setContentType(MimeType.HTML_TYPE.getName() + \"; charset=\"\n\t\t\t\t+ encoding);\n\n\t\tOutputStreamWriter writer = new OutputStreamWriter(response\n\t\t\t\t.getOutputStream(), encoding);\n\t\twriter.write(QUERY_ERROR_HEAD);\n\t\twriter.write(\"<p class=\\\"path\\\"><span class=\\\"high\\\">Path<\/span>: \");\n\t\twriter.write(\"<a href=\\\"\");\n\t\twriter.write(path);\n\t\twriter.write(\"\\\">\");\n\t\twriter.write(path);\n\t\twriter.write(\"<\/a><\/p>\");\n\n\t\twriter.write(\"<p class=\\\"errmsg\\\">\");\n\t\twriter.write(e.getMessage());\n\t\twriter.write(\"<\/p>\");\n\t\tif (query != null) {\n\t\t\twriter.write(\"<p><span class=\\\"high\\\">Query<\/span>:<\/p><pre>\");\n\t\t\twriter.write(query);\n\t\t\twriter.write(\"<\/pre>\");\n\t\t}\n\t\twriter.write(\"<\/body><\/html>\");\n\n\t\twriter.flush();\n\t\twriter.close();\n\t}","commit_id":"96d9349bd9f31f8e484a7ad8a9194fdc6632121c","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * @param query\n     * @param path\n     * @param e\n     */\n\tprivate String formatXPathException(String query, String path,\n\t\t\tXPathException e) {\n        StringWriter writer = new StringWriter();\n        writer.write(\"<?xml version=\\\"1.0\\\" ?>\");\n        writer.write(\"<exception><path>\");\n        writer.write(path);\n        writer.write(\"<\/path>\");\n        writer.write(\"<message>\");\n        writer.write(e.getMessage());\n        writer.write(\"<\/message>\");\n        if(query != null) {\n            writer.write(\"<query>\");\n            writer.write(query);\n            writer.write(\"<\/query>\");\n        }\n        writer.write(\"<\/exception>\");\n        return writer.toString();\n    }","id":69682,"modified_method":"/**\n\t * @param response\n\t * @param encoding\n\t * @param query\n\t * @param path\n\t * @param e\n\t */\n\tprivate void writeXPathException(HttpServletResponse response,\n\t\t\tString encoding, String query, String path, XPathException e)\n\t\t\tthrows IOException {\n\n\t\tresponse.setContentType(MimeType.XML_TYPE.getName() + \"; charset=\"\n\t\t\t\t+ encoding);\n\n\t\tOutputStreamWriter writer = new OutputStreamWriter(response\n\t\t\t\t.getOutputStream(), encoding);\n\n\t\twriter.write(\"<?xml version=\\\"1.0\\\" ?>\");\n\t\twriter.write(\"<exception><path>\");\n\t\twriter.write(path);\n\t\twriter.write(\"<\/path>\");\n\t\twriter.write(\"<message>\");\n\t\twriter.write(e.getMessage());\n\t\twriter.write(\"<\/message>\");\n\t\tif (query != null) {\n\t\t\twriter.write(\"<query>\");\n\t\t\twriter.write(query);\n\t\t\twriter.write(\"<\/query>\");\n\t\t}\n\t\twriter.write(\"<\/exception>\");\n\n\t\twriter.flush();\n\t\twriter.close();\n\t}","commit_id":"96d9349bd9f31f8e484a7ad8a9194fdc6632121c","url":"https://github.com/eXist-db/exist"},{"original_method":"private void writeResponse(HttpServletResponse response, String data,\n\t\t\tString contentType, String encoding) throws IOException {\n    \t//response.setCharacterEncoding(encoding);\n        // possible format contentType: text/xml; charset=UTF-8\n        if ( contentType != null && !response.isCommitted() ) {\n            \n            int semicolon = contentType.indexOf(';');\n            if (semicolon != Constants.STRING_NOT_FOUND) {\n                contentType = contentType.substring(0,semicolon);\n            }\n           \n            response.setContentType(contentType + \"; charset=\" + encoding);\n        }\n        \n        OutputStream is = response.getOutputStream();\n        is.write(data.getBytes(encoding));\n    }","id":69683,"modified_method":"/**\n\t * @response\n\t * @encoding\n\t * @updateCount\n\t */\n\tprivate void writeXUpdateResult(HttpServletResponse response,\n\t\t\tString encoding, long updateCount) throws IOException {\n\t\tresponse.setContentType(MimeType.XML_TYPE.getName() + \"; charset=\"\n\t\t\t\t+ encoding);\n\n\t\tOutputStreamWriter writer = new OutputStreamWriter(response\n\t\t\t\t.getOutputStream(), encoding);\n\n\t\twriter.write(\"<?xml version=\\\"1.0\\\" ?>\");\n\t\twriter.write(\"<exist:modifications xmlns:exist=\\\"\"\n\t\t\t\t+ Namespaces.EXIST_NS + \"\\\" count=\\\"\" + updateCount + \"\\\">\");\n\t\twriter.write(updateCount + \" modifications processed.\");\n\t\twriter.write(\"<\/exist:modifications>\");\n\n\t\twriter.flush();\n\t\twriter.close();\n\t}","commit_id":"96d9349bd9f31f8e484a7ad8a9194fdc6632121c","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Directly execute an XQuery stored as a binary document in the database.\n     */\n    private String executeXQuery(DBBroker broker, DocumentImpl resource,\n            HttpServletRequest request, HttpServletResponse response,\n\t\t\tProperties outputProperties, String servletPath, String pathInfo)\n\t\t\tthrows XPathException, BadRequestException {\n        Source source = new DBSource(broker, (BinaryDocument)resource, true);\n        XQuery xquery = broker.getXQueryService();\n        XQueryPool pool = xquery.getXQueryPool();\n        XQueryContext context;\n        CompiledXQuery compiled = pool.borrowCompiledXQuery(broker, source);\n        if(compiled == null) {\n\t\t\t// special header to indicate that the query is not returned from\n\t\t\t// cache\n        \tresponse.setHeader(\"X-XQuery-Cached\", \"false\");\n            context = xquery.newContext(AccessContext.REST);\n    \t} else {\n        \tresponse.setHeader(\"X-XQuery-Cached\", \"true\");\n            context = compiled.getContext();\n        }\n        //TODO: don't hardcode this?\n\t\tcontext.setModuleLoadPath(XmldbURI.EMBEDDED_SERVER_URI.append(\n\t\t\t\tresource.getCollection().getURI()).toString());\n\t\tcontext.setStaticallyKnownDocuments(new XmldbURI[] { resource\n\t\t\t\t.getCollection().getURI() });\n\t\tHttpRequestWrapper reqw = declareVariables(context, request, response);\n\t\treqw.setServletPath(servletPath);\n\t\treqw.setPathInfo(pathInfo);\n        if(compiled == null) {\n            try {\n                compiled = xquery.compile(context, source);\n            } catch (IOException e) {\n\t\t\t\tthrow new BadRequestException(\"Failed to read query from \"\n\t\t\t\t\t\t+ resource.getURI(), e);\n            }\n        }\n        context.checkOptions(outputProperties);\n        try {\n            Sequence result = xquery.execute(compiled, null);\n\t\t\treturn printResults(broker, result, -1, 1, outputProperties,\n\t\t\t\t\tfalse);\n        } finally {\n            pool.returnCompiledXQuery(source, compiled);\n        }\n    }","id":69684,"modified_method":"/**\n\t * Directly execute an XQuery stored as a binary document in the database.\n\t */\n\tprivate void executeXQuery(DBBroker broker, DocumentImpl resource,\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tProperties outputProperties, String servletPath, String pathInfo)\n\t\t\tthrows XPathException, BadRequestException {\n\t\tSource source = new DBSource(broker, (BinaryDocument) resource, true);\n\t\tXQuery xquery = broker.getXQueryService();\n\t\tXQueryPool pool = xquery.getXQueryPool();\n\t\tXQueryContext context;\n\t\tCompiledXQuery compiled = pool.borrowCompiledXQuery(broker, source);\n\t\tif (compiled == null) {\n\t\t\t// special header to indicate that the query is not returned from\n\t\t\t// cache\n\t\t\tresponse.setHeader(\"X-XQuery-Cached\", \"false\");\n\t\t\tcontext = xquery.newContext(AccessContext.REST);\n\t\t} else {\n\t\t\tresponse.setHeader(\"X-XQuery-Cached\", \"true\");\n\t\t\tcontext = compiled.getContext();\n\t\t}\n\t\t// TODO: don't hardcode this?\n\t\tcontext.setModuleLoadPath(XmldbURI.EMBEDDED_SERVER_URI.append(\n\t\t\t\tresource.getCollection().getURI()).toString());\n\t\tcontext.setStaticallyKnownDocuments(new XmldbURI[] { resource\n\t\t\t\t.getCollection().getURI() });\n\t\tHttpRequestWrapper reqw = declareVariables(context, request, response);\n\t\treqw.setServletPath(servletPath);\n\t\treqw.setPathInfo(pathInfo);\n\t\tif (compiled == null) {\n\t\t\ttry {\n\t\t\t\tcompiled = xquery.compile(context, source);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new BadRequestException(\"Failed to read query from \"\n\t\t\t\t\t\t+ resource.getURI(), e);\n\t\t\t}\n\t\t}\n\t\tcontext.checkOptions(outputProperties);\n\t\ttry {\n\t\t\tSequence result = xquery.execute(compiled, null);\n\t\t\twriteResults(response, broker, result, -1, 1, outputProperties,\n\t\t\t\t\tfalse);\n\t\t} finally {\n\t\t\tpool.returnCompiledXQuery(source, compiled);\n\t\t}\n\t}","commit_id":"96d9349bd9f31f8e484a7ad8a9194fdc6632121c","url":"https://github.com/eXist-db/exist"},{"original_method":"protected String printResults(DBBroker broker, Sequence results,\n            int howmany, int start,\n            Properties outputProperties, boolean wrap)\n            throws BadRequestException {        \n        if (!results.isEmpty()) {\n        \tint rlen = results.getItemCount();\n            if ((start < 1) || (start > rlen))\n                throw new BadRequestException(\"Start parameter out of range\");\n            // FD : correct bound evaluation\n            if (((howmany + start) > rlen) || (howmany <= 0))\n                howmany = rlen - start + 1;\n        } else\n            howmany = 0;\n        Serializer serializer = broker.getSerializer();\n        serializer.reset();\n        outputProperties.setProperty(Serializer.GENERATE_DOC_EVENTS, \"false\");\n        SAXSerializer sax;\n        try {\n            StringWriter writer = new StringWriter();\n\t\t\tsax = (SAXSerializer) SerializerPool.getInstance().borrowObject(\n\t\t\t\t\tSAXSerializer.class);\n            sax.setOutput(writer, outputProperties);\n            serializer.setProperties(outputProperties);\n            serializer.setSAXHandlers(sax, sax);\n            \n            serializer.toSAX(results, start, howmany, wrap);\n            \n            SerializerPool.getInstance().returnObject(sax);\n            return writer.toString();\n        } catch (SAXException e) {\n            LOG.warn(e);\n            throw new BadRequestException(\"Error while serializing xml: \"\n                    + e.toString(), e);\n        } catch (Exception e) {\n            LOG.warn(e.getMessage(), e);\n            throw new BadRequestException(\"Error while serializing xml: \"\n                    + e.toString(), e);\n        }\n    }","id":69685,"modified_method":"protected void writeResults(HttpServletResponse response, DBBroker broker,\n\t\t\tSequence results, int howmany, int start,\n\t\t\tProperties outputProperties, boolean wrap)\n\t\t\tthrows BadRequestException {\n\n\t\t// some xquery functions can write directly to the output stream\n\t\t// (response:stream-binary() etc...)\n\t\t// so if output is already written then dont overwrite here\n\t\tif (response.isCommitted())\n\t\t\treturn;\n\n\t\t// calculate number of results to return\n\t\tif (!results.isEmpty()) {\n\t\t\tint rlen = results.getItemCount();\n\t\t\tif ((start < 1) || (start > rlen))\n\t\t\t\tthrow new BadRequestException(\"Start parameter out of range\");\n\t\t\t// FD : correct bound evaluation\n\t\t\tif (((howmany + start) > rlen) || (howmany <= 0))\n\t\t\t\thowmany = rlen - start + 1;\n\t\t} else {\n\t\t\thowmany = 0;\n\t\t}\n\n\t\t// serialize the results to the response output stream\n\t\tSerializer serializer = broker.getSerializer();\n\t\tserializer.reset();\n\t\toutputProperties.setProperty(Serializer.GENERATE_DOC_EVENTS, \"false\");\n\t\tSAXSerializer sax = null;\n\t\ttry {\n\t\t\tsax = (SAXSerializer) SerializerPool.getInstance().borrowObject(\n\t\t\t\t\tSAXSerializer.class);\n\n\t\t\t// set output headers\n\t\t\tString encoding = outputProperties.getProperty(OutputKeys.ENCODING);\n\t\t\tString mimeType = outputProperties\n\t\t\t\t\t.getProperty(OutputKeys.MEDIA_TYPE);\n\t\t\tif (mimeType != null) {\n\t\t\t\tint semicolon = mimeType.indexOf(';');\n\t\t\t\tif (semicolon != Constants.STRING_NOT_FOUND) {\n\t\t\t\t\tmimeType = mimeType.substring(0, semicolon);\n\t\t\t\t}\n\t\t\t\tresponse.setContentType(mimeType + \"; charset=\" + encoding);\n\t\t\t}\n\n\t\t\tWriter writer = new OutputStreamWriter(response.getOutputStream(),\n\t\t\t\t\tencoding);\n\t\t\tsax.setOutput(writer, outputProperties);\n\n\t\t\tserializer.setProperties(outputProperties);\n\t\t\tserializer.setSAXHandlers(sax, sax);\n\t\t\tserializer.toSAX(results, start, howmany, wrap);\n\n\t\t\twriter.flush();\n\t\t\twriter.close();\n\n\t\t} catch (SAXException e) {\n\t\t\tLOG.warn(e);\n\t\t\tthrow new BadRequestException(\"Error while serializing xml: \"\n\t\t\t\t\t+ e.toString(), e);\n\t\t} catch (Exception e) {\n\t\t\tLOG.warn(e.getMessage(), e);\n\t\t\tthrow new BadRequestException(\"Error while serializing xml: \"\n\t\t\t\t\t+ e.toString(), e);\n\t\t} finally {\n\t\t\tif (sax != null) {\n\t\t\t\tSerializerPool.getInstance().returnObject(sax);\n\t\t\t}\n\t\t}\n\t}","commit_id":"96d9349bd9f31f8e484a7ad8a9194fdc6632121c","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * Pass the request, response and session objects to the XQuery context.\n     *\n     * @param context\n     * @param request\n     * @param response\n     * @throws XPathException\n     */\n\tprivate HttpRequestWrapper declareVariables(XQueryContext context,\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows XPathException {\n\t\tHttpRequestWrapper reqw = new HttpRequestWrapper(request, formEncoding,\n\t\t\t\tcontainerEncoding);\n        ResponseWrapper respw = new HttpResponseWrapper(response);\n\t\t// context.declareNamespace(RequestModule.PREFIX,\n\t\t// RequestModule.NAMESPACE_URI);\n\t\tcontext.declareVariable(RequestModule.PREFIX + \":request\",\n\t\t\t\t(RequestWrapper) reqw);\n        context.declareVariable(ResponseModule.PREFIX + \":response\", respw);\n\t\tcontext.declareVariable(SessionModule.PREFIX + \":session\", reqw\n\t\t\t\t.getSession());\n\t\treturn reqw;\n    }","id":69686,"modified_method":"/**\n\t * Pass the request, response and session objects to the XQuery context.\n\t * \n\t * @param context\n\t * @param request\n\t * @param response\n\t * @throws XPathException\n\t */\n\tprivate HttpRequestWrapper declareVariables(XQueryContext context,\n\t\t\tHttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows XPathException {\n\t\tHttpRequestWrapper reqw = new HttpRequestWrapper(request, formEncoding,\n\t\t\t\tcontainerEncoding);\n\t\tResponseWrapper respw = new HttpResponseWrapper(response);\n\t\t// context.declareNamespace(RequestModule.PREFIX,\n\t\t// RequestModule.NAMESPACE_URI);\n\t\tcontext.declareVariable(RequestModule.PREFIX + \":request\", reqw);\n\t\tcontext.declareVariable(ResponseModule.PREFIX + \":response\", respw);\n\t\tcontext.declareVariable(SessionModule.PREFIX + \":session\", reqw\n\t\t\t\t.getSession());\n\t\treturn reqw;\n\t}","commit_id":"96d9349bd9f31f8e484a7ad8a9194fdc6632121c","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Handles POST requests. If the path leads to a binary resource with\n     * mime-type \"application/xquery\", that resource will be read and executed\n     * by the XQuery engine. Otherwise, the request content is loaded and parsed\n     * as XML. It may either contain an XUpdate or a query request.\n     *\n     * @param broker\n     * @param request\n     * @param response\n     * @param path\n     * @throws BadRequestException\n     * @throws PermissionDeniedException\n     */\n    public void doPost(DBBroker broker, HttpServletRequest request,\n                       HttpServletResponse response, String path)\n            throws BadRequestException, PermissionDeniedException, IOException {\n        //if required, set character encoding\n        if (request.getCharacterEncoding() == null)\n            request.setCharacterEncoding(formEncoding);\n\n        Properties outputProperties = new Properties(\n                defaultOutputKeysProperties);\n        XmldbURI pathUri = XmldbURI.create(path);\n        DocumentImpl resource = null;\n\n        String encoding = outputProperties.getProperty(OutputKeys.ENCODING);\n        String mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE);\n        try {\n            // check if path leads to an XQuery resource.\n            // if yes, the resource is loaded and the XQuery executed.\n            String xquery_mime_type = MimeType.XQUERY_TYPE.getName();\n            resource = broker.getXMLResource(pathUri, Lock.READ_LOCK);\n\n            XmldbURI servletPath = pathUri;\n\n            // if resource is still null, work up the url path to find an\n            // xquery resource\n            while (null == resource) {\n                // traverse up the path looking for xquery objects\n                servletPath = servletPath.removeLastSegment();\n                if (servletPath == XmldbURI.EMPTY_URI)\n                    break;\n\n                resource = broker.getXMLResource(servletPath, Lock.READ_LOCK);\n                if (null != resource\n                        && resource.getResourceType() == DocumentImpl.BINARY_FILE\n                        && xquery_mime_type.equals(resource.getMetadata()\n                        .getMimeType())) {\n                    break; // found a binary file with mime-type xquery\n\n                } else if (null != resource) {\n                    // not an xquery resource. This means we have a path\n                    // that cannot contain an xquery object even if we keep\n                    // moving up the path, so bail out now\n                    resource.getUpdateLock().release(Lock.READ_LOCK);\n                    resource = null;\n                    break;\n                }\n            }\n\n            if (resource != null) {\n                if (resource.getResourceType() == DocumentImpl.BINARY_FILE\n                        && xquery_mime_type.equals(resource.getMetadata()\n                        .getMimeType())) {\n\n                    // found an XQuery resource, fixup request values\n                    String pathInfo = pathUri.trimFromBeginning(servletPath)\n                            .toString();\n                    try {\n                        String result = executeXQuery(broker, resource,\n                                request, response, outputProperties,\n                                servletPath.toString(), pathInfo.toString());\n                        encoding = outputProperties\n                                .getProperty(OutputKeys.ENCODING);\n                        mimeType = outputProperties\n                                .getProperty(OutputKeys.MEDIA_TYPE);\n                        writeResponse(response, result, mimeType, encoding);\n                    } catch (XPathException e) {\n                        response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                        if (MimeType.XML_TYPE.getName().equals(mimeType)) {\n                            writeResponse(response, formatXPathException(null,\n                                    path, e), mimeType, encoding);\n                        } else {\n                            writeResponse(response, formatXPathExceptionHtml(\n                                    null, path, e), MimeType.HTML_TYPE\n                                    .getName(), encoding);\n                        }\n                    }\n                    return;\n                }\n            }\n        } finally {\n            if(resource != null)\n                resource.getUpdateLock().release(Lock.READ_LOCK);\n        }\n\n        // third, normal POST: read the request content and check if\n        // it is an XUpdate or a query request.        \n        int howmany = 10;\n        int start = 1;\n        boolean enclose = true;\n        boolean cache = false;\n        String mime = MimeType.XML_TYPE.getName();\n        String query = null;\n        TransactionManager transact = broker.getBrokerPool()\n                .getTransactionManager();\n        Txn transaction = transact.beginTransaction();\n        try {\n            String content = getRequestContent(request);\n            InputSource src = new InputSource(new StringReader(content));\n            DocumentBuilderFactory docFactory = DocumentBuilderFactory\n                    .newInstance();\n            docFactory.setNamespaceAware(true);\n            DocumentBuilder docBuilder;\n            try {\n                docBuilder = docFactory.newDocumentBuilder();\n            } catch (ParserConfigurationException e) {\n                LOG.warn(e);\n                transact.abort(transaction);\n                throw new BadRequestException(e.getMessage());\n            }\n            Document doc = docBuilder.parse(src);\n            Element root = doc.getDocumentElement();\n            String rootNS = root.getNamespaceURI();\n            if (rootNS != null && rootNS.equals(Namespaces.EXIST_NS)) {\n                if (root.getLocalName().equals(\"query\")) {\n                    // process <query>xpathQuery<\/query>\n                    String option = root.getAttribute(\"start\");\n                    if (option != null)\n                        try {\n                            start = Integer.parseInt(option);\n                        } catch (NumberFormatException e) {\n                        }\n                    option = root.getAttribute(\"max\");\n                    if (option != null)\n                        try {\n                            howmany = Integer.parseInt(option);\n                        } catch (NumberFormatException e) {\n                        }\n\n                    option = root.getAttribute(\"enclose\");\n                    if (option != null) {\n                        if (option.equals(\"no\"))\n                            enclose = false;\n                    }\n\n                    option = root.getAttribute(\"mime\");\n                    mime = MimeType.XML_TYPE.getName();\n                    if ((option != null) && (!option.equals(\"\"))) {\n                        mime = option;\n                    }\n\n                    if ((option = root.getAttribute(\"cache\")) != null) {\n                        cache = option.equals(\"yes\");\n                    }\n\n                    if ((option = root.getAttribute(\"session\")) != null && option.length() > 0) {\n                        outputProperties.setProperty(Serializer.PROPERTY_SESSION_ID, option);\n                    }\n                    NodeList children = root.getChildNodes();\n                    for (int i = 0; i < children.getLength(); i++) {\n                        Node child = children.item(i);\n                        if (child.getNodeType() == Node.ELEMENT_NODE\n                                && child.getNamespaceURI().equals(\n                                Namespaces.EXIST_NS)) {\n                            if (child.getLocalName().equals(\"text\")) {\n                                StringBuffer buf = new StringBuffer();\n                                Node next = child.getFirstChild();\n                                while (next != null) {\n                                    if (next.getNodeType() == Node.TEXT_NODE\n                                            || next.getNodeType() == Node.CDATA_SECTION_NODE)\n                                        buf.append(next.getNodeValue());\n                                    next = next.getNextSibling();\n                                }\n                                query = buf.toString();\n                            } else if (child.getLocalName()\n                                    .equals(\"properties\")) {\n                                Node node = child.getFirstChild();\n                                while (node != null) {\n                                    if (node.getNodeType() == Node.ELEMENT_NODE\n                                            && node.getNamespaceURI().equals(\n                                            Namespaces.EXIST_NS)\n                                            && node.getLocalName().equals(\n                                            \"property\")) {\n                                        Element property = (Element) node;\n                                        String key = property\n                                                .getAttribute(\"name\");\n                                        String value = property\n                                                .getAttribute(\"value\");\n                                        LOG.debug(key + \" = \" + value);\n                                        if (key != null && value != null)\n                                            outputProperties.setProperty(key,\n                                                    value);\n                                    }\n                                    node = node.getNextSibling();\n                                }\n                            }\n                        }\n                    }\n                }\n                // execute query\n                if (query != null) {\n                    String result;\n                    try {\n                        result = search(broker, query, path, howmany, start,\n                                outputProperties, enclose, cache, request, response);\n                    } catch (Exception e) {\n                        response.setStatus(HttpServletResponse.SC_ACCEPTED);\n                        result = e.getMessage();\n                    }\n                    writeResponse(response, result, mime, outputProperties.getProperty(OutputKeys.ENCODING));\n\n                } else {\n                    transact.abort(transaction);\n                    throw new BadRequestException(\"No query specified\");\n                }\n            } else if (rootNS != null\n                    && rootNS.equals(XUpdateProcessor.XUPDATE_NS)) {\n                LOG.debug(\"Got xupdate request: \" + content);\n                MutableDocumentSet docs = new DefaultDocumentSet();\n                Collection collection = broker.getCollection(pathUri);\n                if (collection != null) {\n                    collection.allDocs(broker, docs, true, true);\n                } else {\n                    DocumentImpl xupdateDoc = (DocumentImpl) broker\n                            .getXMLResource(pathUri);\n                    if (xupdateDoc != null) {\n                        if (!xupdateDoc.getPermissions().validate(\n                                broker.getUser(), Permission.READ)) {\n                            transact.abort(transaction);\n                            throw new PermissionDeniedException(\n                                    \"Not allowed to read collection\");\n                        }\n                        docs.add(xupdateDoc);\n                    } else\n                        broker.getAllXMLResources(docs);\n                }\n\n                XUpdateProcessor processor = new XUpdateProcessor(broker, docs,\n                        AccessContext.REST);\n                Modification modifications[] = processor.parse(new InputSource(\n                        new StringReader(content)));\n                long mods = 0;\n                for (int i = 0; i < modifications.length; i++) {\n                    mods += modifications[i].process(transaction);\n                    broker.flush();\n                }\n                transact.commit(transaction);\n\n                // FD : Returns an XML doc\n                writeResponse(response, \"<?xml version='1.0'?>\\n\"\n                        + \"<exist:modifications xmlns:exist='\"\n                        + Namespaces.EXIST_NS + \"' count='\" + mods + \"'>\"\n                        + mods\n                        + \"modifications processed.<\/exist:modifications>\",\n                        MimeType.XML_TYPE.getName(), \"UTF-8\");\n                // END FD\n            } else {\n                transact.abort(transaction);\n                throw new BadRequestException(\"Unknown XML root element: \"\n                        + root.getNodeName());\n            }\n        } catch (SAXException e) {\n            transact.abort(transaction);\n            Exception cause = e;\n            if (e.getException() != null)\n                cause = e.getException();\n            LOG.debug(\"SAX exception while parsing request: \" + cause.getMessage(), cause);\n            throw new BadRequestException(\n                    \"SAX exception while parsing request: \"\n                            + cause.getMessage());\n        } catch (ParserConfigurationException e) {\n            transact.abort(transaction);\n            throw new BadRequestException(\n                    \"Parser exception while parsing request: \" + e.getMessage());\n        } catch (XPathException e) {\n            transact.abort(transaction);\n            throw new BadRequestException(\n                    \"Query exception while parsing request: \" + e.getMessage());\n        } catch (IOException e) {\n            transact.abort(transaction);\n            throw new BadRequestException(\n                    \"IO exception while parsing request: \" + e.getMessage());\n        } catch (EXistException e) {\n            transact.abort(transaction);\n            throw new BadRequestException(e.getMessage());\n        } catch (LockException e) {\n            transact.abort(transaction);\n            throw new PermissionDeniedException(e.getMessage());\n        }\n    }","id":69687,"modified_method":"/**\n\t * Handles POST requests. If the path leads to a binary resource with\n\t * mime-type \"application/xquery\", that resource will be read and executed\n\t * by the XQuery engine. Otherwise, the request content is loaded and parsed\n\t * as XML. It may either contain an XUpdate or a query request.\n\t * \n\t * @param broker\n\t * @param request\n\t * @param response\n\t * @param path\n\t * @throws BadRequestException\n\t * @throws PermissionDeniedException\n\t */\n\tpublic void doPost(DBBroker broker, HttpServletRequest request,\n\t\t\tHttpServletResponse response, String path)\n\t\t\tthrows BadRequestException, PermissionDeniedException, IOException {\n\t\t// if required, set character encoding\n\t\tif (request.getCharacterEncoding() == null)\n\t\t\trequest.setCharacterEncoding(formEncoding);\n\n\t\tProperties outputProperties = new Properties(\n\t\t\t\tdefaultOutputKeysProperties);\n\t\tXmldbURI pathUri = XmldbURI.create(path);\n\t\tDocumentImpl resource = null;\n\n\t\tString encoding = outputProperties.getProperty(OutputKeys.ENCODING);\n\t\tString mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE);\n\t\ttry {\n\t\t\t// check if path leads to an XQuery resource.\n\t\t\t// if yes, the resource is loaded and the XQuery executed.\n\t\t\tString xquery_mime_type = MimeType.XQUERY_TYPE.getName();\n\t\t\tresource = broker.getXMLResource(pathUri, Lock.READ_LOCK);\n\n\t\t\tXmldbURI servletPath = pathUri;\n\n\t\t\t// if resource is still null, work up the url path to find an\n\t\t\t// xquery resource\n\t\t\twhile (null == resource) {\n\t\t\t\t// traverse up the path looking for xquery objects\n\t\t\t\tservletPath = servletPath.removeLastSegment();\n\t\t\t\tif (servletPath == XmldbURI.EMPTY_URI)\n\t\t\t\t\tbreak;\n\n\t\t\t\tresource = broker.getXMLResource(servletPath, Lock.READ_LOCK);\n\t\t\t\tif (null != resource\n\t\t\t\t\t\t&& resource.getResourceType() == DocumentImpl.BINARY_FILE\n\t\t\t\t\t\t&& xquery_mime_type.equals(resource.getMetadata()\n\t\t\t\t\t\t\t\t.getMimeType())) {\n\t\t\t\t\tbreak; // found a binary file with mime-type xquery\n\n\t\t\t\t} else if (null != resource) {\n\t\t\t\t\t// not an xquery resource. This means we have a path\n\t\t\t\t\t// that cannot contain an xquery object even if we keep\n\t\t\t\t\t// moving up the path, so bail out now\n\t\t\t\t\tresource.getUpdateLock().release(Lock.READ_LOCK);\n\t\t\t\t\tresource = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resource != null) {\n\t\t\t\tif (resource.getResourceType() == DocumentImpl.BINARY_FILE\n\t\t\t\t\t\t&& xquery_mime_type.equals(resource.getMetadata()\n\t\t\t\t\t\t\t\t.getMimeType())) {\n\n\t\t\t\t\t// found an XQuery resource, fixup request values\n\t\t\t\t\tString pathInfo = pathUri.trimFromBeginning(servletPath)\n\t\t\t\t\t\t\t.toString();\n\t\t\t\t\ttry {\n\t\t\t\t\t\texecuteXQuery(broker, resource, request, response,\n\t\t\t\t\t\t\t\toutputProperties, servletPath.toString(),\n\t\t\t\t\t\t\t\tpathInfo.toString());\n\t\t\t\t\t} catch (XPathException e) {\n\t\t\t\t\t\tresponse.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n\t\t\t\t\t\tif (MimeType.XML_TYPE.getName().equals(mimeType)) {\n\t\t\t\t\t\t\twriteXPathException(response, encoding, null, path,\n\t\t\t\t\t\t\t\t\te);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twriteXPathExceptionHtml(response, encoding, null,\n\t\t\t\t\t\t\t\t\tpath, e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tif (resource != null)\n\t\t\t\tresource.getUpdateLock().release(Lock.READ_LOCK);\n\t\t}\n\n\t\t// third, normal POST: read the request content and check if\n\t\t// it is an XUpdate or a query request.\n\t\tint howmany = 10;\n\t\tint start = 1;\n\t\tboolean enclose = true;\n\t\tboolean cache = false;\n\t\tString mime = MimeType.XML_TYPE.getName();\n\t\tString query = null;\n\t\tTransactionManager transact = broker.getBrokerPool()\n\t\t\t\t.getTransactionManager();\n\t\tTxn transaction = transact.beginTransaction();\n\t\ttry {\n\t\t\tString content = getRequestContent(request);\n\t\t\tInputSource src = new InputSource(new StringReader(content));\n\t\t\tDocumentBuilderFactory docFactory = DocumentBuilderFactory\n\t\t\t\t\t.newInstance();\n\t\t\tdocFactory.setNamespaceAware(true);\n\t\t\tDocumentBuilder docBuilder;\n\t\t\ttry {\n\t\t\t\tdocBuilder = docFactory.newDocumentBuilder();\n\t\t\t} catch (ParserConfigurationException e) {\n\t\t\t\tLOG.warn(e);\n\t\t\t\ttransact.abort(transaction);\n\t\t\t\tthrow new BadRequestException(e.getMessage());\n\t\t\t}\n\t\t\tDocument doc = docBuilder.parse(src);\n\t\t\tElement root = doc.getDocumentElement();\n\t\t\tString rootNS = root.getNamespaceURI();\n\t\t\tif (rootNS != null && rootNS.equals(Namespaces.EXIST_NS)) {\n\t\t\t\tif (root.getLocalName().equals(\"query\")) {\n\t\t\t\t\t// process <query>xpathQuery<\/query>\n\t\t\t\t\tString option = root.getAttribute(\"start\");\n\t\t\t\t\tif (option != null)\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstart = Integer.parseInt(option);\n\t\t\t\t\t\t} catch (NumberFormatException e) {\n\t\t\t\t\t\t}\n\t\t\t\t\toption = root.getAttribute(\"max\");\n\t\t\t\t\tif (option != null)\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\thowmany = Integer.parseInt(option);\n\t\t\t\t\t\t} catch (NumberFormatException e) {\n\t\t\t\t\t\t}\n\n\t\t\t\t\toption = root.getAttribute(\"enclose\");\n\t\t\t\t\tif (option != null) {\n\t\t\t\t\t\tif (option.equals(\"no\"))\n\t\t\t\t\t\t\tenclose = false;\n\t\t\t\t\t}\n\n\t\t\t\t\toption = root.getAttribute(\"mime\");\n\t\t\t\t\tmime = MimeType.XML_TYPE.getName();\n\t\t\t\t\tif ((option != null) && (!option.equals(\"\"))) {\n\t\t\t\t\t\tmime = option;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((option = root.getAttribute(\"cache\")) != null) {\n\t\t\t\t\t\tcache = option.equals(\"yes\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((option = root.getAttribute(\"session\")) != null\n\t\t\t\t\t\t\t&& option.length() > 0) {\n\t\t\t\t\t\toutputProperties.setProperty(\n\t\t\t\t\t\t\t\tSerializer.PROPERTY_SESSION_ID, option);\n\t\t\t\t\t}\n\t\t\t\t\tNodeList children = root.getChildNodes();\n\t\t\t\t\tfor (int i = 0; i < children.getLength(); i++) {\n\t\t\t\t\t\tNode child = children.item(i);\n\t\t\t\t\t\tif (child.getNodeType() == Node.ELEMENT_NODE\n\t\t\t\t\t\t\t\t&& child.getNamespaceURI().equals(\n\t\t\t\t\t\t\t\t\t\tNamespaces.EXIST_NS)) {\n\t\t\t\t\t\t\tif (child.getLocalName().equals(\"text\")) {\n\t\t\t\t\t\t\t\tStringBuffer buf = new StringBuffer();\n\t\t\t\t\t\t\t\tNode next = child.getFirstChild();\n\t\t\t\t\t\t\t\twhile (next != null) {\n\t\t\t\t\t\t\t\t\tif (next.getNodeType() == Node.TEXT_NODE\n\t\t\t\t\t\t\t\t\t\t\t|| next.getNodeType() == Node.CDATA_SECTION_NODE)\n\t\t\t\t\t\t\t\t\t\tbuf.append(next.getNodeValue());\n\t\t\t\t\t\t\t\t\tnext = next.getNextSibling();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tquery = buf.toString();\n\t\t\t\t\t\t\t} else if (child.getLocalName()\n\t\t\t\t\t\t\t\t\t.equals(\"properties\")) {\n\t\t\t\t\t\t\t\tNode node = child.getFirstChild();\n\t\t\t\t\t\t\t\twhile (node != null) {\n\t\t\t\t\t\t\t\t\tif (node.getNodeType() == Node.ELEMENT_NODE\n\t\t\t\t\t\t\t\t\t\t\t&& node.getNamespaceURI().equals(\n\t\t\t\t\t\t\t\t\t\t\t\t\tNamespaces.EXIST_NS)\n\t\t\t\t\t\t\t\t\t\t\t&& node.getLocalName().equals(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"property\")) {\n\t\t\t\t\t\t\t\t\t\tElement property = (Element) node;\n\t\t\t\t\t\t\t\t\t\tString key = property\n\t\t\t\t\t\t\t\t\t\t\t\t.getAttribute(\"name\");\n\t\t\t\t\t\t\t\t\t\tString value = property\n\t\t\t\t\t\t\t\t\t\t\t\t.getAttribute(\"value\");\n\t\t\t\t\t\t\t\t\t\tLOG.debug(key + \" = \" + value);\n\t\t\t\t\t\t\t\t\t\tif (key != null && value != null)\n\t\t\t\t\t\t\t\t\t\t\toutputProperties.setProperty(key,\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tnode = node.getNextSibling();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// execute query\n\t\t\t\tif (query != null) {\n\t\t\t\t\tString result;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsearch(broker, query, path, howmany, start,\n\t\t\t\t\t\t\t\toutputProperties, enclose, cache, request,\n\t\t\t\t\t\t\t\tresponse);\n\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\tresponse.setStatus(HttpServletResponse.SC_ACCEPTED);\n\t\t\t\t\t\tresult = e.getMessage();\n\t\t\t\t\t\t// TODO: write error response\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\ttransact.abort(transaction);\n\t\t\t\t\tthrow new BadRequestException(\"No query specified\");\n\t\t\t\t}\n\t\t\t} else if (rootNS != null\n\t\t\t\t\t&& rootNS.equals(XUpdateProcessor.XUPDATE_NS)) {\n\t\t\t\tLOG.debug(\"Got xupdate request: \" + content);\n\t\t\t\tMutableDocumentSet docs = new DefaultDocumentSet();\n\t\t\t\tCollection collection = broker.getCollection(pathUri);\n\t\t\t\tif (collection != null) {\n\t\t\t\t\tcollection.allDocs(broker, docs, true, true);\n\t\t\t\t} else {\n\t\t\t\t\tDocumentImpl xupdateDoc = (DocumentImpl) broker\n\t\t\t\t\t\t\t.getXMLResource(pathUri);\n\t\t\t\t\tif (xupdateDoc != null) {\n\t\t\t\t\t\tif (!xupdateDoc.getPermissions().validate(\n\t\t\t\t\t\t\t\tbroker.getUser(), Permission.READ)) {\n\t\t\t\t\t\t\ttransact.abort(transaction);\n\t\t\t\t\t\t\tthrow new PermissionDeniedException(\n\t\t\t\t\t\t\t\t\t\"Not allowed to read collection\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdocs.add(xupdateDoc);\n\t\t\t\t\t} else\n\t\t\t\t\t\tbroker.getAllXMLResources(docs);\n\t\t\t\t}\n\n\t\t\t\tXUpdateProcessor processor = new XUpdateProcessor(broker, docs,\n\t\t\t\t\t\tAccessContext.REST);\n\t\t\t\tModification modifications[] = processor.parse(new InputSource(\n\t\t\t\t\t\tnew StringReader(content)));\n\t\t\t\tlong mods = 0;\n\t\t\t\tfor (int i = 0; i < modifications.length; i++) {\n\t\t\t\t\tmods += modifications[i].process(transaction);\n\t\t\t\t\tbroker.flush();\n\t\t\t\t}\n\t\t\t\ttransact.commit(transaction);\n\n\t\t\t\t// FD : Returns an XML doc\n\t\t\t\twriteXUpdateResult(response, encoding, mods);\n\t\t\t\t// END FD\n\t\t\t} else {\n\t\t\t\ttransact.abort(transaction);\n\t\t\t\tthrow new BadRequestException(\"Unknown XML root element: \"\n\t\t\t\t\t\t+ root.getNodeName());\n\t\t\t}\n\t\t} catch (SAXException e) {\n\t\t\ttransact.abort(transaction);\n\t\t\tException cause = e;\n\t\t\tif (e.getException() != null)\n\t\t\t\tcause = e.getException();\n\t\t\tLOG.debug(\"SAX exception while parsing request: \"\n\t\t\t\t\t+ cause.getMessage(), cause);\n\t\t\tthrow new BadRequestException(\n\t\t\t\t\t\"SAX exception while parsing request: \"\n\t\t\t\t\t\t\t+ cause.getMessage());\n\t\t} catch (ParserConfigurationException e) {\n\t\t\ttransact.abort(transaction);\n\t\t\tthrow new BadRequestException(\n\t\t\t\t\t\"Parser exception while parsing request: \" + e.getMessage());\n\t\t} catch (XPathException e) {\n\t\t\ttransact.abort(transaction);\n\t\t\tthrow new BadRequestException(\n\t\t\t\t\t\"Query exception while parsing request: \" + e.getMessage());\n\t\t} catch (IOException e) {\n\t\t\ttransact.abort(transaction);\n\t\t\tthrow new BadRequestException(\n\t\t\t\t\t\"IO exception while parsing request: \" + e.getMessage());\n\t\t} catch (EXistException e) {\n\t\t\ttransact.abort(transaction);\n\t\t\tthrow new BadRequestException(e.getMessage());\n\t\t} catch (LockException e) {\n\t\t\ttransact.abort(transaction);\n\t\t\tthrow new PermissionDeniedException(e.getMessage());\n\t\t}\n\t}","commit_id":"96d9349bd9f31f8e484a7ad8a9194fdc6632121c","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Handle GET request. In the simplest case just returns the document or\n     * binary resource specified in the path. If the path leads to a collection,\n\t * a listing of the collection contents is returned. If it resolves to a\n\t * binary resource with mime-type \"application/xquery\", this resource will\n\t * be loaded and executed by the XQuery engine.\n     *\n     * The method also recognizes a number of predefined parameters:\n     *\n     * <ul>\n     * <li>_xpath or _query: if specified, the given query is executed on the\n     * current resource or collection.<\/li>\n     *\n     * <li>_howmany: defines how many items from the query result will be\n     * returned.<\/li>\n     *\n     * <li>_start: a start offset into the result set.<\/li>\n     *\n     * <li>_wrap: if set to \"yes\", the query results will be wrapped into a\n     * exist:result element.<\/li>\n     *\n     * <li>_indent: if set to \"yes\", the returned XML will be pretty-printed.\n     * <\/li>\n     *\n\t * <li>_source: if set to \"yes\" and a resource with mime-type\n\t * \"application/xquery\" is requested then the xquery will not be executed,\n\t * instead the source of the document will be returned. Must be enabled in\n\t * descriptor.xml with the following syntax <xquery-app><allow-source><xquery\n\t * path=\"/db/mycollection/myquery.xql\"/><\/allow-source><\/xquery-app> <\/li>\n     * \n     * <li>_xsl: an URI pointing to an XSL stylesheet that will be applied to\n     * the returned XML.<\/li>\n     *\n     * @param broker\n     * @param request\n     * @param response\n     * @param path\n     * @throws BadRequestException\n     * @throws PermissionDeniedException\n     * @throws NotFoundException\n     */\n\tpublic void doGet(DBBroker broker, HttpServletRequest request,\n\t\t\tHttpServletResponse response, String path)\n    throws BadRequestException, PermissionDeniedException,\n            NotFoundException, IOException {\n\n        //if required, set character encoding\n        if (request.getCharacterEncoding() == null)\n            request.setCharacterEncoding(formEncoding);\n        \n        String option;\n        if ((option = request.getParameter(\"_release\")) != null) {\n            int sessionId = Integer.parseInt(option);\n            sessionManager.release(sessionId);\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Released session \" + sessionId);\n            response.setStatus(HttpServletResponse.SC_OK);\n            return;\n        }\n\n        // Process special parameters\n\n        int howmany = 10;\n        int start = 1;\n        boolean wrap = true;\n        boolean source = false;\n        boolean cache = false;\n        Properties outputProperties = new Properties(defaultOutputKeysProperties);\n\n        String query = request.getParameter(\"_xpath\");\n        if (query == null)\n            query = request.getParameter(\"_query\");\n\n        if ((option = request.getParameter(\"_howmany\")) != null) {\n            try {\n                howmany = Integer.parseInt(option);\n            } catch (NumberFormatException nfe) {\n                throw new BadRequestException(\n                        \"Parameter _howmany should be an int\");\n            }\n        }\n        if ((option = request.getParameter(\"_start\")) != null) {\n            try {\n                start = Integer.parseInt(option);\n            } catch (NumberFormatException nfe) {\n                throw new BadRequestException(\n                        \"Parameter _start should be an int\");\n            }\n        }\n        if ((option = request.getParameter(\"_wrap\")) != null) {\n            wrap = option.equals(\"yes\");\n        }\n        if ((option = request.getParameter(\"_cache\")) != null) {\n            cache = option.equals(\"yes\");\n        }\n        if ((option = request.getParameter(\"_indent\")) != null) {\n            outputProperties.setProperty(OutputKeys.INDENT, option);\n        }\n        if((option = request.getParameter(\"_source\")) != null) {\n            source = option.equals(\"yes\");\n        }\n        if ((option = request.getParameter(\"_session\")) != null) {\n            outputProperties.setProperty(Serializer.PROPERTY_SESSION_ID, option);\n        }\n        String stylesheet;\n        if ((stylesheet = request.getParameter(\"_xsl\")) != null) {\n            if (stylesheet.equals(\"no\")) {\n                outputProperties.setProperty(EXistOutputKeys.PROCESS_XSL_PI,\n                        \"no\");\n                outputProperties.remove(EXistOutputKeys.STYLESHEET);\n                stylesheet = null;\n            } else {\n                outputProperties.setProperty(EXistOutputKeys.STYLESHEET,\n                        stylesheet);\n            }\n        } else {\n            outputProperties.setProperty(EXistOutputKeys.PROCESS_XSL_PI, \"yes\");\n        }\n        LOG.debug(\"stylesheet = \" + stylesheet);\n        LOG.debug(\"query = \" + query);\n        String encoding;\n        if ((encoding = request.getParameter(\"_encoding\")) != null)\n            outputProperties.setProperty(OutputKeys.ENCODING, encoding);\n        else\n            encoding = \"UTF-8\";\n\n        String mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE);\n\n        if (query != null) {\n            // query parameter specified, search method does all the rest of the\n            // work\n            try {\n                String result = search(broker, query, path, howmany, start,\n                        outputProperties, wrap, cache, request, response);\n                encoding = outputProperties.getProperty(OutputKeys.ENCODING);\n                mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE);\n\n                //only write the response if it is not already committed,\n                //some xquery functions can write directly to the response\n                if(!response.isCommitted()) {\n                    writeResponse(response, result, mimeType, encoding);\n                }\n\n            } catch (XPathException e) {\n                response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                if (MimeType.XML_TYPE.getName().equals(mimeType)) {\n                    writeResponse(response,\n                            formatXPathException(query, path, e), mimeType,\n                            encoding);\n                } else {\n                    writeResponse(response, formatXPathExceptionHtml(query,\n                            path, e), MimeType.HTML_TYPE.getName(), encoding);\n                }\n\n            }\n            return;\n        }\n        // Process the request\n        DocumentImpl resource = null;\n        XmldbURI pathUri = XmldbURI.create(path);\n        try {\n            // check if path leads to an XQuery resource\n            String xquery_mime_type = MimeType.XQUERY_TYPE.getName();\n            resource = broker.getXMLResource(pathUri, Lock.READ_LOCK);\n\n            if (null != resource\n                    && (!xquery_mime_type.equals(resource.getMetadata()\n                    .getMimeType()) || // not xquery mime time\n                    (resource.getResourceType() != DocumentImpl.BINARY_FILE))) { // not\n                // a\n                // binary\n                // file\n                // return regular resource that is not an xquery\n                writeResourceAs(resource, broker, stylesheet, encoding, null,\n                        outputProperties, response);\n                return;\n            }\n            if (resource == null) { // could be request for a Collection\n                // no document: check if path points to a collection\n                Collection collection = broker.getCollection(pathUri);\n                if (collection != null) {\n                    if (!collection.getPermissions().validate(broker.getUser(),\n                            Permission.READ))\n                        throw new PermissionDeniedException(\n                                \"Not allowed to read collection\");\n                    // return a listing of the collection contents\n                    writeResponse(response,\n                            printCollection(broker, collection),\n                            MimeType.XML_TYPE.getName(), encoding);\n                    return;\n                } else if (source) {\n                    // didn't find regular resource, or user wants source\n                    // on a possible xquery resource that was not found\n                    throw new NotFoundException(\"Document \" + path\n                            + \" not found\");\n                }\n            }\n\n            XmldbURI servletPath = pathUri;\n\n            // if resource is still null, work up the url path to find an\n            // xquery resource\n            while (null == resource) {\n                // traverse up the path looking for xquery objects\n                servletPath = servletPath.removeLastSegment();\n                if (servletPath == XmldbURI.EMPTY_URI)\n                    break;\n\n                resource = broker.getXMLResource(servletPath, Lock.READ_LOCK);\n                if (null != resource\n                        && resource.getResourceType() == DocumentImpl.BINARY_FILE\n                        && xquery_mime_type.equals(resource.getMetadata()\n                        .getMimeType())) {\n                    break; // found a binary file with mime-type xquery\n\n                } else if (null != resource) {\n                    // not an xquery resource. This means we have a path\n                    // that cannot contain an xquery object even if we keep\n                    // moving up the path, so bail out now\n                    throw new NotFoundException(\"Document \" + path\n                            + \" not found\");\n                }\n            }\n\n            if (null == resource) { // path search failed\n                throw new NotFoundException(\"Document \" + path + \" not found\");\n            }\n\n            // found an XQuery resource, fixup request values\n            String pathInfo = pathUri.trimFromBeginning(servletPath).toString();\n\n            // Should we display the source of the XQuery or execute it\n            Descriptor descriptor = Descriptor.getDescriptorSingleton();\n            if (source) {\n                // show the source\n\n                // check are we allowed to show the xquery source -\n                // descriptor.xml\n                if ((null != descriptor) && descriptor.allowSourceXQuery(path)) {\n                    // TODO: change writeResourceAs to use a serializer\n                    // that will serialize xquery to syntax coloured\n                    // xhtml, replace the asMimeType parameter with a\n                    // method for specifying the serializer, or split\n                    // the code into two methods. - deliriumsky\n\n                    // Show the source of the XQuery\n                    writeResourceAs(resource, broker, stylesheet, encoding,\n                            MimeType.TEXT_TYPE.getName(), outputProperties,\n                            response);\n                } else {\n                    // we are not allowed to show the source - query not\n                    // allowed in descriptor.xml\n                    // or descriptor not found, so assume source view not\n                    // allowed\n                    response\n                            .sendError(\n                                    HttpServletResponse.SC_FORBIDDEN,\n                                    \"Permission to view XQuery source for: \"\n                                            + path\n                                            + \" denied. Must be explicitly defined in descriptor.xml\");\n                    return;\n                }\n            } else { // Execute the XQuery\n                try {\n                    String result = executeXQuery(broker, resource, request, response,\n                            outputProperties, servletPath.toString(), pathInfo);\n                    encoding = outputProperties\n                            .getProperty(OutputKeys.ENCODING);\n                    mimeType = outputProperties\n                            .getProperty(OutputKeys.MEDIA_TYPE);\n\n                    // only write the response if it is not already\n                    // committed,\n                    // some xquery functions can write directly to the\n                    // response\n                    if (!response.isCommitted()) {\n                        writeResponse(response, result, mimeType, encoding);\n                    }\n                } catch (XPathException e) {\n                    if (LOG.isDebugEnabled())\n                        LOG.debug(e.getMessage(), e);\n                    response.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n                    if (MimeType.XML_TYPE.getName().equals(mimeType)) {\n                        writeResponse(response, formatXPathException(query,\n                                path, e), mimeType, encoding);\n                    } else {\n                        writeResponse(response, formatXPathExceptionHtml(query,\n                                path, e), MimeType.HTML_TYPE.getName(),\n                                encoding);\n                    }\n                }\n            }\n        } finally {\n            if (resource != null)\n                resource.getUpdateLock().release(Lock.READ_LOCK);\n        }\n    }","id":69688,"modified_method":"/**\n\t * Handle GET request. In the simplest case just returns the document or\n\t * binary resource specified in the path. If the path leads to a collection,\n\t * a listing of the collection contents is returned. If it resolves to a\n\t * binary resource with mime-type \"application/xquery\", this resource will\n\t * be loaded and executed by the XQuery engine.\n\t * \n\t * The method also recognizes a number of predefined parameters:\n\t * \n\t * <ul>\n\t * <li>_xpath or _query: if specified, the given query is executed on the\n\t * current resource or collection.<\/li>\n\t * \n\t * <li>_howmany: defines how many items from the query result will be\n\t * returned.<\/li>\n\t * \n\t * <li>_start: a start offset into the result set.<\/li>\n\t * \n\t * <li>_wrap: if set to \"yes\", the query results will be wrapped into a\n\t * exist:result element.<\/li>\n\t * \n\t * <li>_indent: if set to \"yes\", the returned XML will be pretty-printed.\n\t * <\/li>\n\t * \n\t * <li>_source: if set to \"yes\" and a resource with mime-type\n\t * \"application/xquery\" is requested then the xquery will not be executed,\n\t * instead the source of the document will be returned. Must be enabled in\n\t * descriptor.xml with the following syntax <xquery-app><allow-source><xquery\n\t * path=\"/db/mycollection/myquery.xql\"/><\/allow-source><\/xquery-app> <\/li>\n\t * \n\t * <li>_xsl: an URI pointing to an XSL stylesheet that will be applied to\n\t * the returned XML.<\/li>\n\t * \n\t * @param broker\n\t * @param request\n\t * @param response\n\t * @param path\n\t * @throws BadRequestException\n\t * @throws PermissionDeniedException\n\t * @throws NotFoundException\n\t */\n\tpublic void doGet(DBBroker broker, HttpServletRequest request,\n\t\t\tHttpServletResponse response, String path)\n\t\t\tthrows BadRequestException, PermissionDeniedException,\n\t\t\tNotFoundException, IOException {\n\n\t\t// if required, set character encoding\n\t\tif (request.getCharacterEncoding() == null)\n\t\t\trequest.setCharacterEncoding(formEncoding);\n\n\t\tString option;\n\t\tif ((option = request.getParameter(\"_release\")) != null) {\n\t\t\tint sessionId = Integer.parseInt(option);\n\t\t\tsessionManager.release(sessionId);\n\t\t\tif (LOG.isDebugEnabled())\n\t\t\t\tLOG.debug(\"Released session \" + sessionId);\n\t\t\tresponse.setStatus(HttpServletResponse.SC_OK);\n\t\t\treturn;\n\t\t}\n\n\t\t// Process special parameters\n\n\t\tint howmany = 10;\n\t\tint start = 1;\n\t\tboolean wrap = true;\n\t\tboolean source = false;\n\t\tboolean cache = false;\n\t\tProperties outputProperties = new Properties(\n\t\t\t\tdefaultOutputKeysProperties);\n\n\t\tString query = request.getParameter(\"_xpath\");\n\t\tif (query == null)\n\t\t\tquery = request.getParameter(\"_query\");\n\n\t\tif ((option = request.getParameter(\"_howmany\")) != null) {\n\t\t\ttry {\n\t\t\t\thowmany = Integer.parseInt(option);\n\t\t\t} catch (NumberFormatException nfe) {\n\t\t\t\tthrow new BadRequestException(\n\t\t\t\t\t\t\"Parameter _howmany should be an int\");\n\t\t\t}\n\t\t}\n\t\tif ((option = request.getParameter(\"_start\")) != null) {\n\t\t\ttry {\n\t\t\t\tstart = Integer.parseInt(option);\n\t\t\t} catch (NumberFormatException nfe) {\n\t\t\t\tthrow new BadRequestException(\n\t\t\t\t\t\t\"Parameter _start should be an int\");\n\t\t\t}\n\t\t}\n\t\tif ((option = request.getParameter(\"_wrap\")) != null) {\n\t\t\twrap = option.equals(\"yes\");\n\t\t}\n\t\tif ((option = request.getParameter(\"_cache\")) != null) {\n\t\t\tcache = option.equals(\"yes\");\n\t\t}\n\t\tif ((option = request.getParameter(\"_indent\")) != null) {\n\t\t\toutputProperties.setProperty(OutputKeys.INDENT, option);\n\t\t}\n\t\tif ((option = request.getParameter(\"_source\")) != null) {\n\t\t\tsource = option.equals(\"yes\");\n\t\t}\n\t\tif ((option = request.getParameter(\"_session\")) != null) {\n\t\t\toutputProperties\n\t\t\t\t\t.setProperty(Serializer.PROPERTY_SESSION_ID, option);\n\t\t}\n\t\tString stylesheet;\n\t\tif ((stylesheet = request.getParameter(\"_xsl\")) != null) {\n\t\t\tif (stylesheet.equals(\"no\")) {\n\t\t\t\toutputProperties.setProperty(EXistOutputKeys.PROCESS_XSL_PI,\n\t\t\t\t\t\t\"no\");\n\t\t\t\toutputProperties.remove(EXistOutputKeys.STYLESHEET);\n\t\t\t\tstylesheet = null;\n\t\t\t} else {\n\t\t\t\toutputProperties.setProperty(EXistOutputKeys.STYLESHEET,\n\t\t\t\t\t\tstylesheet);\n\t\t\t}\n\t\t} else {\n\t\t\toutputProperties.setProperty(EXistOutputKeys.PROCESS_XSL_PI, \"yes\");\n\t\t}\n\t\tLOG.debug(\"stylesheet = \" + stylesheet);\n\t\tLOG.debug(\"query = \" + query);\n\t\tString encoding;\n\t\tif ((encoding = request.getParameter(\"_encoding\")) != null)\n\t\t\toutputProperties.setProperty(OutputKeys.ENCODING, encoding);\n\t\telse\n\t\t\tencoding = \"UTF-8\";\n\n\t\tString mimeType = outputProperties.getProperty(OutputKeys.MEDIA_TYPE);\n\n\t\tif (query != null) {\n\t\t\t// query parameter specified, search method does all the rest of the\n\t\t\t// work\n\t\t\ttry {\n\t\t\t\tsearch(broker, query, path, howmany, start, outputProperties,\n\t\t\t\t\t\twrap, cache, request, response);\n\n\t\t\t} catch (XPathException e) {\n\t\t\t\tresponse.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n\t\t\t\tif (MimeType.XML_TYPE.getName().equals(mimeType)) {\n\t\t\t\t\twriteXPathException(response, encoding, query, path, e);\n\t\t\t\t} else {\n\t\t\t\t\twriteXPathExceptionHtml(response, encoding, query, path, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t// Process the request\n\t\tDocumentImpl resource = null;\n\t\tXmldbURI pathUri = XmldbURI.create(path);\n\t\ttry {\n\t\t\t// check if path leads to an XQuery resource\n\t\t\tString xquery_mime_type = MimeType.XQUERY_TYPE.getName();\n\t\t\tresource = broker.getXMLResource(pathUri, Lock.READ_LOCK);\n\n\t\t\tif (null != resource\n\t\t\t\t\t&& (!xquery_mime_type.equals(resource.getMetadata()\n\t\t\t\t\t\t\t.getMimeType()) || // not xquery mime time\n\t\t\t\t\t(resource.getResourceType() != DocumentImpl.BINARY_FILE))) { // not\n\t\t\t\t// a\n\t\t\t\t// binary\n\t\t\t\t// file\n\t\t\t\t// return regular resource that is not an xquery\n\t\t\t\twriteResourceAs(resource, broker, stylesheet, encoding, null,\n\t\t\t\t\t\toutputProperties, response);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (resource == null) { // could be request for a Collection\n\t\t\t\t// no document: check if path points to a collection\n\t\t\t\tCollection collection = broker.getCollection(pathUri);\n\t\t\t\tif (collection != null) {\n\t\t\t\t\tif (!collection.getPermissions().validate(broker.getUser(),\n\t\t\t\t\t\t\tPermission.READ))\n\t\t\t\t\t\tthrow new PermissionDeniedException(\n\t\t\t\t\t\t\t\t\"Not allowed to read collection\");\n\t\t\t\t\t// return a listing of the collection contents\n\t\t\t\t\twriteCollection(response, encoding, broker, collection);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (source) {\n\t\t\t\t\t// didn't find regular resource, or user wants source\n\t\t\t\t\t// on a possible xquery resource that was not found\n\t\t\t\t\tthrow new NotFoundException(\"Document \" + path\n\t\t\t\t\t\t\t+ \" not found\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tXmldbURI servletPath = pathUri;\n\n\t\t\t// if resource is still null, work up the url path to find an\n\t\t\t// xquery resource\n\t\t\twhile (null == resource) {\n\t\t\t\t// traverse up the path looking for xquery objects\n\t\t\t\tservletPath = servletPath.removeLastSegment();\n\t\t\t\tif (servletPath == XmldbURI.EMPTY_URI)\n\t\t\t\t\tbreak;\n\n\t\t\t\tresource = broker.getXMLResource(servletPath, Lock.READ_LOCK);\n\t\t\t\tif (null != resource\n\t\t\t\t\t\t&& resource.getResourceType() == DocumentImpl.BINARY_FILE\n\t\t\t\t\t\t&& xquery_mime_type.equals(resource.getMetadata()\n\t\t\t\t\t\t\t\t.getMimeType())) {\n\t\t\t\t\tbreak; // found a binary file with mime-type xquery\n\n\t\t\t\t} else if (null != resource) {\n\t\t\t\t\t// not an xquery resource. This means we have a path\n\t\t\t\t\t// that cannot contain an xquery object even if we keep\n\t\t\t\t\t// moving up the path, so bail out now\n\t\t\t\t\tthrow new NotFoundException(\"Document \" + path\n\t\t\t\t\t\t\t+ \" not found\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (null == resource) { // path search failed\n\t\t\t\tthrow new NotFoundException(\"Document \" + path + \" not found\");\n\t\t\t}\n\n\t\t\t// found an XQuery resource, fixup request values\n\t\t\tString pathInfo = pathUri.trimFromBeginning(servletPath).toString();\n\n\t\t\t// Should we display the source of the XQuery or execute it\n\t\t\tDescriptor descriptor = Descriptor.getDescriptorSingleton();\n\t\t\tif (source) {\n\t\t\t\t// show the source\n\n\t\t\t\t// check are we allowed to show the xquery source -\n\t\t\t\t// descriptor.xml\n\t\t\t\tif ((null != descriptor) && descriptor.allowSourceXQuery(path)) {\n\t\t\t\t\t// TODO: change writeResourceAs to use a serializer\n\t\t\t\t\t// that will serialize xquery to syntax coloured\n\t\t\t\t\t// xhtml, replace the asMimeType parameter with a\n\t\t\t\t\t// method for specifying the serializer, or split\n\t\t\t\t\t// the code into two methods. - deliriumsky\n\n\t\t\t\t\t// Show the source of the XQuery\n\t\t\t\t\twriteResourceAs(resource, broker, stylesheet, encoding,\n\t\t\t\t\t\t\tMimeType.TEXT_TYPE.getName(), outputProperties,\n\t\t\t\t\t\t\tresponse);\n\t\t\t\t} else {\n\t\t\t\t\t// we are not allowed to show the source - query not\n\t\t\t\t\t// allowed in descriptor.xml\n\t\t\t\t\t// or descriptor not found, so assume source view not\n\t\t\t\t\t// allowed\n\t\t\t\t\tresponse\n\t\t\t\t\t\t\t.sendError(\n\t\t\t\t\t\t\t\t\tHttpServletResponse.SC_FORBIDDEN,\n\t\t\t\t\t\t\t\t\t\"Permission to view XQuery source for: \"\n\t\t\t\t\t\t\t\t\t\t\t+ path\n\t\t\t\t\t\t\t\t\t\t\t+ \" denied. Must be explicitly defined in descriptor.xml\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else { // Execute the XQuery\n\t\t\t\ttry {\n\t\t\t\t\texecuteXQuery(broker, resource, request, response,\n\t\t\t\t\t\t\toutputProperties, servletPath.toString(), pathInfo);\n\t\t\t\t} catch (XPathException e) {\n\t\t\t\t\tif (LOG.isDebugEnabled())\n\t\t\t\t\t\tLOG.debug(e.getMessage(), e);\n\t\t\t\t\tresponse.setStatus(HttpServletResponse.SC_BAD_REQUEST);\n\t\t\t\t\tif (MimeType.XML_TYPE.getName().equals(mimeType)) {\n\t\t\t\t\t\twriteXPathException(response, encoding, query, path, e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\twriteXPathExceptionHtml(response, encoding, query,\n\t\t\t\t\t\t\t\tpath, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tif (resource != null)\n\t\t\t\tresource.getUpdateLock().release(Lock.READ_LOCK);\n\t\t}\n\t}","commit_id":"96d9349bd9f31f8e484a7ad8a9194fdc6632121c","url":"https://github.com/eXist-db/exist"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            // Default karaf environment\n            Helper.getDefaultOptions(\n            // this is how you set the default log level when using pax logging (logProfile)\n                  Helper.setLogLevel(\"WARN\")),\n                  \n            // install the spring, http features first\n            scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n           \n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(),\n                                \"spring\", \"spring-dm\", \"camel-core\", \"camel-spring\", \"camel-http\", \"camel-test\", \"camel-cxf\"),\n                                        \n            // need to install the generated src as the pax-exam doesn't wrap this bundles\n            provision(newBundle()\n                            .add(org.apache.camel.example.reportincident.InputReportIncident.class)\n                            .add(org.apache.camel.example.reportincident.OutputReportIncident.class)\n                            .add(org.apache.camel.example.reportincident.ReportIncidentEndpoint.class)\n                            .add(org.apache.camel.example.reportincident.ReportIncidentEndpointService.class)\n                            .add(org.apache.camel.example.reportincident.ObjectFactory.class)\n                            .build(withBnd())),\n                            \n            workingDirectory(\"target/paxrunner/\"),\n                  \n            felix(), equinox());\n          \n        return options;\n    }","id":69689,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n            getDefaultCamelKarafOptions(),\n           \n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(),\n                         \"camel-http\", \"camel-cxf\"),\n                                        \n            // need to install the generated src as the pax-exam doesn't wrap this bundles\n            provision(newBundle()\n                            .add(org.apache.camel.example.reportincident.InputReportIncident.class)\n                            .add(org.apache.camel.example.reportincident.OutputReportIncident.class)\n                            .add(org.apache.camel.example.reportincident.ReportIncidentEndpoint.class)\n                            .add(org.apache.camel.example.reportincident.ReportIncidentEndpointService.class)\n                            .add(org.apache.camel.example.reportincident.ObjectFactory.class)\n                            .build(withBnd())));\n          \n        return options;\n    }","commit_id":"925ea97d655d3c56ff9637fe8aec9297a78cc698","url":"https://github.com/apache/camel"},{"original_method":"@Ignore(\"CXF bundle can't be installed in Karaf\")\n    @Test\n    public void testCxfProxy() throws Exception {\n        // create input parameter\n        InputReportIncident input = new InputReportIncident();\n        input.setIncidentId(\"123\");\n        input.setIncidentDate(\"2010-09-28\");\n        input.setGivenName(\"Claus\");\n        input.setFamilyName(\"Ibsen\");\n        input.setSummary(\"Bla\");\n        input.setDetails(\"Bla bla\");\n        input.setEmail(\"davsclaus@apache.org\");\n        input.setPhone(\"12345678\");\n\n        // create the webservice client and send the request\n        ReportIncidentEndpoint client = createCXFClient();\n        OutputReportIncident out = client.reportIncident(input);\n\n        // assert we got a OK back\n        assertEquals(\"OK;456\", out.getCode());\n    }","id":69690,"modified_method":"@Test\n    public void testCxfProxy() throws Exception {\n        // create input parameter\n        InputReportIncident input = new InputReportIncident();\n        input.setIncidentId(\"123\");\n        input.setIncidentDate(\"2010-09-28\");\n        input.setGivenName(\"Claus\");\n        input.setFamilyName(\"Ibsen\");\n        input.setSummary(\"Bla\");\n        input.setDetails(\"Bla bla\");\n        input.setEmail(\"davsclaus@apache.org\");\n        input.setPhone(\"12345678\");\n\n        // create the webservice client and send the request\n        ReportIncidentEndpoint client = createCXFClient();\n        OutputReportIncident out = client.reportIncident(input);\n\n        // assert we got a OK back\n        assertEquals(\"OK;456\", out.getCode());\n        LOG.warn(\"Finish the testing\");\n    }","commit_id":"925ea97d655d3c56ff9637fe8aec9297a78cc698","url":"https://github.com/apache/camel"},{"original_method":"public static Option[] getDefaultCamelKarafOptions() {\n        Option[] options = combine(\n            // Default karaf environment\n            Helper.getDefaultOptions(\n            // this is how you set the default log level when using pax logging (logProfile)\n                Helper.setLogLevel(\"WARN\")),\n                                         \n            // install the spring, http features first\n            scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n\n            // using the features to install the camel components             \n            scanFeatures(getCamelKarafFeatureUrl(),                         \n                \"camel-core\", \"camel-spring\", \"camel-test\"),\n                                   \n            workingDirectory(\"target/paxrunner/\"),\n\n            equinox(),\n            felix());\n        return options;\n    }","id":69691,"modified_method":"public static Option[] getDefaultCamelKarafOptions() {\n        Option[] options = combine(\n            // Set the karaf environment with some customer configuration\n            combine(\n                Helper.getDefaultConfigOptions(\n                    Helper.getDefaultSystemOptions(),\n                    getResource(\"/org/apache/camel/itest/karaf/config.properties\"),\n                    // this is how you set the default log level when using pax logging (logProfile)\n                    Helper.setLogLevel(\"WARN\")),\n                Helper.getDefaultProvisioningOptions()),                             \n            // install the spring, http features first\n            scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n\n            // using the features to install the camel components             \n            scanFeatures(getCamelKarafFeatureUrl(),                         \n                \"camel-core\", \"camel-spring\", \"camel-test\"),\n                                   \n            workingDirectory(\"target/paxrunner/\"));\n\n            //equinox(),\n            //felix());\n        return options;\n    }","commit_id":"925ea97d655d3c56ff9637fe8aec9297a78cc698","url":"https://github.com/apache/camel"},{"original_method":"protected void doPostSetup() throws Exception {\n        getInstalledBundle(\"CxfBeanBlueprintRouterTest\").start();\n        getOsgiService(CamelContext.class, \"(camel.context.symbolicname=CxfBeanBlueprintRouterTest)\", 10000);\n    }","id":69692,"modified_method":"protected void doPostSetup() throws Exception {\n        getInstalledBundle(\"CxfBeanBlueprintRouterTest\").start();\n        getOsgiService(CamelContext.class, \"(camel.context.symbolicname=CxfBeanBlueprintRouterTest)\", 20000);\n    }","commit_id":"28078b4a6f000f586f5369480155781cdc47f4c6","url":"https://github.com/apache/camel"},{"original_method":"protected void doPostSetup() throws Exception {\n        getInstalledBundle(\"CxfBlueprintRouterTest\").start();\n        getOsgiService(CamelContext.class, \"(camel.context.symbolicname=CxfBlueprintRouterTest)\", 10000);\n    }","id":69693,"modified_method":"protected void doPostSetup() throws Exception {\n        getInstalledBundle(\"CxfBlueprintRouterTest\").start();\n        getOsgiService(CamelContext.class, \"(camel.context.symbolicname=CxfBlueprintRouterTest)\", 20000);\n    }","commit_id":"28078b4a6f000f586f5369480155781cdc47f4c6","url":"https://github.com/apache/camel"},{"original_method":"protected void doPostSetup() throws Exception {\n        getInstalledBundle(\"CxfRsBlueprintRouterTest\").start();\n        getOsgiService(CamelContext.class, \"(camel.context.symbolicname=CxfRsBlueprintRouterTest)\", 10000);\n    }","id":69694,"modified_method":"protected void doPostSetup() throws Exception {\n        getInstalledBundle(\"CxfRsBlueprintRouterTest\").start();\n        getOsgiService(CamelContext.class, \"(camel.context.symbolicname=CxfRsBlueprintRouterTest)\", 30000);\n    }","commit_id":"28078b4a6f000f586f5369480155781cdc47f4c6","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testBlueprintRouteJpa() throws Exception {\n        getInstalledBundle(\"CamelBlueprintJpaTestBundle\").start();\n        BlueprintContainer ctn = getOsgiService(BlueprintContainer.class, \"(osgi.blueprint.container.symbolicname=CamelBlueprintJpaTestBundle)\", 20000);\n        CamelContext ctx = getOsgiService(CamelContext.class, \"(camel.context.symbolicname=CamelBlueprintJpaTestBundle)\", 20000);\n\n        MockEndpoint mock = (MockEndpoint) ctx.getEndpoint(\"mock:result\");\n        mock.expectedMessageCount(1);\n\n        ProducerTemplate template = ctx.createProducerTemplate();\n        template.sendBody(\"direct:start\", new SendEmail(1L, \"someone@somewhere.org\"));\n        template.sendBody(\"direct:start\", new SendEmail(2L, \"someoneelse@somewhere.org\"));\n\n        assertMockEndpointsSatisfied();\n    }","id":69695,"modified_method":"@Test\n    public void testBlueprintRouteJpa() throws Exception {\n        getInstalledBundle(\"CamelBlueprintJpaTestBundle\").start();\n        BlueprintContainer ctn = getOsgiService(BlueprintContainer.class, \"(osgi.blueprint.container.symbolicname=CamelBlueprintJpaTestBundle)\", 30000);\n        CamelContext ctx = getOsgiService(CamelContext.class, \"(camel.context.symbolicname=CamelBlueprintJpaTestBundle)\", 20000);\n\n        MockEndpoint mock = (MockEndpoint) ctx.getEndpoint(\"mock:result\");\n        mock.expectedMessageCount(1);\n\n        ProducerTemplate template = ctx.createProducerTemplate();\n        template.sendBody(\"direct:start\", new SendEmail(1L, \"someone@somewhere.org\"));\n        template.sendBody(\"direct:start\", new SendEmail(2L, \"someoneelse@somewhere.org\"));\n\n        assertMockEndpointsSatisfied();\n    }","commit_id":"28078b4a6f000f586f5369480155781cdc47f4c6","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n                getDefaultCamelKarafOptions(),\n                new Customizer() {\n                    @Override\n                    public InputStream customizeTestProbe(InputStream testProbe) {\n                        return modifyBundle(testProbe)\n                                .add(SendEmail.class)\n                                .add(\"META-INF/persistence.xml\", JpaBlueprintRouteTest.class.getResource(\"/META-INF/persistence.xml\"))\n                                .add(\"OSGI-INF/blueprint/test.xml\", JpaBlueprintRouteTest.class.getResource(\"blueprintCamelContext.xml\"))\n                                .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintJpaTestBundle\")\n                                .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                                .set(\"Meta-Persistence\", \"META-INF/persistence.xml\")\n                                .build();\n                    }\n                },\n                scanFeatures(getKarafFeatureUrl(), \"spring\"),\n                scanFeatures(getKarafEnterpriseFeatureUrl(), \"jndi\", \"jpa\", \"transaction\"),\n                mavenBundle(\"org.apache.derby\", \"derby\", \"10.4.2.0\"),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-blueprint\", \"camel-jpa\"),\n                felix(), equinox());\n\n        return options;\n    }","id":69696,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n\n        Option[] options = combine(\n                getDefaultCamelKarafOptions(),\n                new Customizer() {\n                    @Override\n                    public InputStream customizeTestProbe(InputStream testProbe) {\n                        return modifyBundle(testProbe)\n                                .add(SendEmail.class)\n                                .add(\"META-INF/persistence.xml\", JpaBlueprintRouteTest.class.getResource(\"/META-INF/persistence.xml\"))\n                                .add(\"OSGI-INF/blueprint/test.xml\", JpaBlueprintRouteTest.class.getResource(\"blueprintCamelContext.xml\"))\n                                .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintJpaTestBundle\")\n                                .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                                .set(\"Meta-Persistence\", \"META-INF/persistence.xml\")\n                                .build();\n                    }\n                },\n                scanFeatures(getKarafEnterpriseFeatureUrl(), \"jndi\", \"jpa\", \"transaction\"),\n                mavenBundle(\"org.apache.derby\", \"derby\", \"10.4.2.0\"),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-blueprint\", \"camel-jpa\"));\n                //felix(), equinox());\n\n        return options;\n    }","commit_id":"28078b4a6f000f586f5369480155781cdc47f4c6","url":"https://github.com/apache/camel"},{"original_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n                // Default karaf environment\n                Helper.getDefaultOptions(\n                        // this is how you set the default log level when using pax logging (logProfile)\n                        Helper.setLogLevel(\"INFO\")),\n                new Customizer() {\n                    @Override\n                    public InputStream customizeTestProbe(InputStream testProbe) {\n                        return modifyBundle(testProbe)\n                                .add(SomeObject.class)\n                                .add(\"META-INF/persistence.xml\", KratiBlueprintRouteTest.class.getResource(\"/META-INF/persistence.xml\"))\n                                .add(\"OSGI-INF/blueprint/test.xml\", KratiBlueprintRouteTest.class.getResource(\"blueprintCamelContext.xml\"))\n                                .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintKratiTestBundle\")\n                                .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                                .build();\n                    }\n                },\n                // install the spring.\n                scanFeatures(getKarafFeatureUrl(), \"spring\"),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                        \"camel-core\", \"camel-blueprint\", \"camel-test\", \"camel-krati\"),\n\n                workingDirectory(\"target/paxrunner/\"),\n                //vmOption(\"-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\"),\n                felix(), equinox());\n\n        return options;\n    }","id":69697,"modified_method":"@Configuration\n    public static Option[] configure() throws Exception {\n        Option[] options = combine(\n                // Default karaf environment\n                Helper.getDefaultOptions(\n                        // this is how you set the default log level when using pax logging (logProfile)\n                        Helper.setLogLevel(\"WARN\")),\n                new Customizer() {\n                    @Override\n                    public InputStream customizeTestProbe(InputStream testProbe) {\n                        return modifyBundle(testProbe)\n                                .add(SomeObject.class)\n                                .add(\"META-INF/persistence.xml\", KratiBlueprintRouteTest.class.getResource(\"/META-INF/persistence.xml\"))\n                                .add(\"OSGI-INF/blueprint/test.xml\", KratiBlueprintRouteTest.class.getResource(\"blueprintCamelContext.xml\"))\n                                .set(Constants.BUNDLE_SYMBOLICNAME, \"CamelBlueprintKratiTestBundle\")\n                                .set(Constants.DYNAMICIMPORT_PACKAGE, \"*\")\n                                .build();\n                    }\n                },\n                // install the spring.\n                scanFeatures(getKarafFeatureUrl(), \"spring\"),\n                // using the features to install the camel components\n                scanFeatures(getCamelKarafFeatureUrl(),\n                         \"camel-core\", \"camel-blueprint\", \"camel-test\", \"camel-krati\"),\n\n                workingDirectory(\"target/paxrunner/\"),\n                //vmOption(\"-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\"),\n                felix(), equinox());\n\n        return options;\n    }","commit_id":"28078b4a6f000f586f5369480155781cdc47f4c6","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testProducerConsumerAndIdempotent() throws Exception {\n        getInstalledBundle(\"CamelBlueprintKratiTestBundle\").start();\n        BlueprintContainer ctn = getOsgiService(BlueprintContainer.class, \"(osgi.blueprint.container.symbolicname=CamelBlueprintKratiTestBundle)\", 10000);\n        CamelContext ctx = getOsgiService(CamelContext.class, \"(camel.context.symbolicname=CamelBlueprintKratiTestBundle)\", 10000);\n        MockEndpoint mock = (MockEndpoint) ctx.getEndpoint(\"mock:results\");\n        ProducerTemplate template = ctx.createProducerTemplate();\n        mock.expectedMessageCount(2);\n        template.sendBodyAndHeader(\"direct:put\", new SomeObject(\"1\", \"Test 1\"), KratiConstants.KEY, \"1\");\n        template.sendBodyAndHeader(\"direct:put\", new SomeObject(\"2\", \"Test 2\"), KratiConstants.KEY, \"2\");\n        template.sendBodyAndHeader(\"direct:put\", new SomeObject(\"3\", \"Test 3\"), KratiConstants.KEY, \"1\");\n        assertMockEndpointsSatisfied();\n    }","id":69698,"modified_method":"@Test\n    public void testProducerConsumerAndIdempotent() throws Exception {\n        getInstalledBundle(\"CamelBlueprintKratiTestBundle\").start();\n        BlueprintContainer ctn = getOsgiService(BlueprintContainer.class, \"(osgi.blueprint.container.symbolicname=CamelBlueprintKratiTestBundle)\", 20000);\n        CamelContext ctx = getOsgiService(CamelContext.class, \"(camel.context.symbolicname=CamelBlueprintKratiTestBundle)\", 20000);\n        MockEndpoint mock = (MockEndpoint) ctx.getEndpoint(\"mock:results\");\n        ProducerTemplate template = ctx.createProducerTemplate();\n        mock.expectedMessageCount(2);\n        template.sendBodyAndHeader(\"direct:put\", new SomeObject(\"1\", \"Test 1\"), KratiConstants.KEY, \"1\");\n        template.sendBodyAndHeader(\"direct:put\", new SomeObject(\"2\", \"Test 2\"), KratiConstants.KEY, \"2\");\n        template.sendBodyAndHeader(\"direct:put\", new SomeObject(\"3\", \"Test 3\"), KratiConstants.KEY, \"1\");\n        assertMockEndpointsSatisfied();\n    }","commit_id":"28078b4a6f000f586f5369480155781cdc47f4c6","url":"https://github.com/apache/camel"},{"original_method":"public static Option[] getDefaultCamelKarafOptions() {\n        Option[] options = combine(\n            // Set the karaf environment with some customer configuration\n            combine(\n                Helper.getDefaultConfigOptions(\n                    Helper.getDefaultSystemOptions(),\n                    getResource(\"/org/apache/camel/itest/karaf/config.properties\"),\n                    // this is how you set the default log level when using pax logging (logProfile)\n                    Helper.setLogLevel(\"WARN\")),\n                Helper.getDefaultProvisioningOptions()),                             \n            // install the spring, http features first\n            scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n\n            // using the features to install the camel components             \n            scanFeatures(getCamelKarafFeatureUrl(),                         \n                \"xml-specs-api\", \"camel-core\", \"camel-spring\", \"camel-test\"),\n                                   \n            workingDirectory(\"target/paxrunner/\"));\n\n            //equinox(),\n            //felix());\n        return options;\n    }","id":69699,"modified_method":"public static Option[] getDefaultCamelKarafOptions() {\n        Option[] options = combine(\n            // Set the karaf environment with some customer configuration\n            combine(\n                Helper.getDefaultConfigOptions(\n                    Helper.getDefaultSystemOptions(),\n                    getResource(\"/org/apache/camel/itest/karaf/config.properties\"),\n                    // this is how you set the default log level when using pax logging (logProfile)\n                    Helper.setLogLevel(\"WARN\")),\n                Helper.getDefaultProvisioningOptions()),                             \n            // install the spring, http features first\n            scanFeatures(getKarafFeatureUrl(), \"spring\", \"spring-dm\", \"jetty\"),\n\n            // install the cxf jaxb spec as the karaf doesn't provide it by default\n            scanFeatures(getCamelKarafFeatureUrl(), \"cxf-jaxb\"),\n\n            // using the features to install the camel components             \n            scanFeatures(getCamelKarafFeatureUrl(),                         \n                \"camel-core\", \"camel-spring\", \"camel-test\"),\n                                   \n            workingDirectory(\"target/paxrunner/\"));\n\n            //equinox(),\n            //felix());\n        return options;\n    }","commit_id":"28078b4a6f000f586f5369480155781cdc47f4c6","url":"https://github.com/apache/camel"},{"original_method":"public static Option[] configure(String feature) {\n        Option[] options = combine(\n            // Set the karaf environment with some customer configuration\n            combine(\n                Helper.getDefaultConfigOptions(\n                    Helper.getDefaultSystemOptions(),\n                    getResource(\"/org/apache/camel/itest/karaf/config.properties\"),\n                    // this is how you set the default log level when using pax logging (logProfile)\n                    Helper.setLogLevel(\"WARN\")),\n                Helper.getDefaultProvisioningOptions()),\n            // install the spring, http features first\n            scanFeatures(getKarafFeatureUrl(), \"spring\", \"http\"),\n\n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(),\n                \"xml-specs-api\", \"camel-core\", \"camel-spring\", \"camel-\" + feature),\n\n            workingDirectory(\"target/paxrunner/\"));\n\n        return options;\n    }","id":69700,"modified_method":"public static Option[] configure(String feature) {\n        Option[] options = combine(\n            // Set the karaf environment with some customer configuration\n            combine(\n                Helper.getDefaultConfigOptions(\n                    Helper.getDefaultSystemOptions(),\n                    getResource(\"/org/apache/camel/itest/karaf/config.properties\"),\n                    // this is how you set the default log level when using pax logging (logProfile)\n                    Helper.setLogLevel(\"WARN\")),\n                Helper.getDefaultProvisioningOptions()),\n            // install the spring, http features first\n            scanFeatures(getKarafFeatureUrl(), \"spring\", \"http\"),\n            \n            // install the cxf jaxb spec as the karaf doesn't provide it by default\n            scanFeatures(getCamelKarafFeatureUrl(), \"cxf-jaxb\"),\n\n            // using the features to install the camel components\n            scanFeatures(getCamelKarafFeatureUrl(),\n                \"camel-core\", \"camel-spring\", \"camel-\" + feature),\n\n            workingDirectory(\"target/paxrunner/\"));\n\n        return options;\n    }","commit_id":"d9c12cbdfb4f47b02a39be7aff2e4504f7dc8fd9","url":"https://github.com/apache/camel"},{"original_method":"protected final void createComponent() {\n      super.createComponent();\n      MigrationProcessor processor = myProject.getComponent(MigrationProcessor.class);\n\n      JLabel label = new JLabel(\"List of migrations\");\n      myComponent.add(label, BorderLayout.NORTH);\n      JBList list = new JBList(processor.getActions());\n\n      Set<Object> excluded = Collections.synchronizedSet(new HashSet<Object>());\n      excluded.add(processor.getActions().get(3));\n      excluded.add(processor.getActions().get(5));\n      list.setCellRenderer(new MyListCellRenderer(excluded, Collections.emptySet()));\n\n      myComponent.add(new JBScrollPane(list), BorderLayout.CENTER);\n\n    }","id":69701,"modified_method":"protected final void createComponent() {\n      super.createComponent();\n      MigrationProcessor processor = myProject.getComponent(MigrationProcessor.class);\n      myAllActions.addAll(processor.getActions());\n      myExcludedActions.addAll(processor.getActions());\n      myExcludedActions.removeAll(processor.getSelectedActions());\n\n      JLabel label = new JLabel(\"List of migrations\");\n      myComponent.add(label, BorderLayout.NORTH);\n\n      myList = new JBList(processor.getActions());\n      myList.getSelectionModel().addListSelectionListener(new ListSelectionListener() {\n        @Override\n        public void valueChanged(ListSelectionEvent e) {\n          updateButtons();\n        }\n      });\n      myList.setCellRenderer(new MyListCellRenderer(myExcludedActions, Collections.emptySet()));\n\n      JPanel listPanel = new JPanel(new BorderLayout(5,5));\n      listPanel.add(new JBScrollPane(myList), BorderLayout.CENTER);\n\n      JPanel buttonsPanel = createButtonsPanel();\n      listPanel.add(buttonsPanel, BorderLayout.EAST);\n      myComponent.add(listPanel, BorderLayout.CENTER);\n    }","commit_id":"8ba6908172e537a713bc1aabda3b66e4e6c53682","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void commit(CommitType commitType) throws CommitStepException {\n      if (CommitType.Next == commitType) {\n        MigrationProcessor processor = myProject.getComponent(MigrationProcessor.class);\n        List<?> actions = new ArrayList<Object>(processor.getActions());\n        actions.remove(5);\n        actions.remove(3);\n        processor.setSelectedActions(actions);\n      }\n    }","id":69702,"modified_method":"@Override\n    public void commit(CommitType commitType) throws CommitStepException {\n      if (CommitType.Next == commitType) {\n        if (myExcludedActions.containsAll(myAllActions)) throw new CommitStepException(\"No actions selected\");\n        MigrationProcessor processor = myProject.getComponent(MigrationProcessor.class);\n        List<?> actions = new ArrayList<Object>(processor.getActions());\n        actions.removeAll(myExcludedActions);\n        processor.setSelectedActions(actions);\n      }\n    }","commit_id":"8ba6908172e537a713bc1aabda3b66e4e6c53682","url":"https://github.com/JetBrains/MPS"},{"original_method":"private Task createTask() {\n      return new Modal(myProject, \"executing\", false) {\n        @Override\n        public void run(final ProgressIndicator indicator) {\n          MigrationProcessor processor = myProject.getComponent(MigrationProcessor.class);\n          final List<?> actions = processor.getActions();\n          myExcluded.addAll(actions);\n          myExcluded.removeAll(processor.getSelectedActions());\n          processor.addCallback(new Callback() {\n            @Override\n            public void startingAction(Object action) {\n              indicator.setIndeterminate(false);\n            }\n\n            @Override\n            public void finishedAction(Object action) {\n              indicator.setFraction((double) (actions.indexOf(action)+1) / actions.size());\n              myMarked.add(action);\n              myList.ensureIndexIsVisible(actions.indexOf(action));\n              myList.repaint();\n            }\n\n            @Override\n            public void finishedAll() {\n              indicator.setFraction(1.0);\n              myFinished = true;\n              fireStateChanged();\n            }\n          });\n          indicator.setIndeterminate(true);\n          processor.startProcessing();\n        }\n      };\n    }","id":69703,"modified_method":"private Task createTask() {\n      return new Modal(myProject, \"executing\", false) {\n        @Override\n        public void run(final ProgressIndicator indicator) {\n          final MigrationProcessor processor = myProject.getComponent(MigrationProcessor.class);\n          final List<?> actions = processor.getActions();\n          myExcluded.addAll(actions);\n          myExcluded.removeAll(processor.getSelectedActions());\n          processor.addCallback(new Callback() {\n            @Override\n            public void startingAction(Object action) {\n              indicator.setIndeterminate(false);\n            }\n\n            @Override\n            public void finishedAction(Object action) {\n              indicator.setFraction((double) (actions.indexOf(action)+1) / actions.size());\n              myMarked.add(action);\n              myList.ensureIndexIsVisible(actions.indexOf(action));\n              myList.repaint();\n            }\n\n            @Override\n            public void finishedAll() {\n              processor.removeCallback(this);\n              indicator.setFraction(1.0);\n              myFinished = true;\n              fireStateChanged();\n            }\n          });\n          indicator.setIndeterminate(true);\n          processor.startProcessing();\n        }\n      };\n    }","commit_id":"8ba6908172e537a713bc1aabda3b66e4e6c53682","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public boolean isComplete() {\n      return true;\n    }","id":69704,"modified_method":"@Override\n    public boolean isComplete() {\n      return !myExcludedActions.containsAll(myAllActions);\n    }","commit_id":"8ba6908172e537a713bc1aabda3b66e4e6c53682","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void startProcessing () {\n    if (!myStarted.compareAndSet(false, true)) throw new IllegalStateException(\"already processing\");\n    \n    final ArrayList<Object> actionsCopy = new ArrayList<Object>(mySelectedActions);\n\n    final int[] steps = new int[]{0};\n\n    new Timer(\"foo\", 300) {\n      @Override\n      protected void onTimer() throws InterruptedException {\n        final int step = steps[0]++;\n        if (step >= actionsCopy.size()) {\n          this.dispose();\n          myFinished.set(true);\n          UIUtil.invokeLaterIfNeeded(new Runnable() {\n            @Override\n            public void run() {\n              fireFinishedAll();\n            }\n          });\n        } else {\n          UIUtil.invokeLaterIfNeeded(new Runnable() {\n            @Override\n            public void run() {\n              fireStartingAction(actionsCopy.get(step));\n              fireFinishedAction(actionsCopy.get(step));\n            }\n          });\n        }\n      }\n    }.start();\n  }","id":69705,"modified_method":"public void startProcessing () {\n    if (!myStarted.compareAndSet(false, true)) throw new IllegalStateException(\"already processing\");\n\n    final ArrayList<Object> actionsCopy = new ArrayList<Object>(mySelectedActions);\n\n    new Timer(\"foo\", 300) {\n      int myStep = 0;\n      @Override\n      protected void onTimer() throws InterruptedException {\n        final int step = myStep++;\n        if (step >= actionsCopy.size()) {\n          this.dispose();\n          myFinished.set(true);\n          UIUtil.invokeLaterIfNeeded(new Runnable() {\n            @Override\n            public void run() {\n              fireFinishedAll();\n            }\n          });\n        } else {\n          UIUtil.invokeLaterIfNeeded(new Runnable() {\n            @Override\n            public void run() {\n              fireStartingAction(actionsCopy.get(step));\n              fireFinishedAction(actionsCopy.get(step));\n            }\n          });\n        }\n      }\n    }.start();\n  }","commit_id":"8ba6908172e537a713bc1aabda3b66e4e6c53682","url":"https://github.com/JetBrains/MPS"},{"original_method":"private String getShardItertor() {\n        // either return a cached one or get a new one via a GetShardIterator request.\n        if (currentShardIterator == null) {\n            ListStreamsRequest req0 = new ListStreamsRequest()\n                    .withTableName(getEndpoint().getTableName())\n                    ;\n            ListStreamsResult res0 = getClient().listStreams(req0);\n            final String streamArn = res0.getStreams().get(0).getStreamArn(); // XXX assumes there is only one stream\n            DescribeStreamRequest req1 = new DescribeStreamRequest()\n                    .withStreamArn(streamArn)\n                    ;\n            DescribeStreamResult res1 = getClient().describeStream(req1);\n\n            GetShardIteratorRequest req = new GetShardIteratorRequest()\n                    .withStreamArn(streamArn)\n                    .withShardId(res1.getStreamDescription().getShards().get(0).getShardId()) // XXX only uses the first shard\n                    .withShardIteratorType(getEndpoint().getIteratorType())\n                    ;\n            GetShardIteratorResult result = getClient().getShardIterator(req);\n            currentShardIterator = result.getShardIterator();\n        }\n        LOG.trace(\"Shard Iterator is: {}\", currentShardIterator);\n        return currentShardIterator;\n    }","id":69706,"modified_method":"private String getShardItertor() {\n        // either return a cached one or get a new one via a GetShardIterator request.\n        if (currentShardIterator == null) {\n            ListStreamsRequest req0 = new ListStreamsRequest()\n                    .withTableName(getEndpoint().getTableName())\n                    ;\n            ListStreamsResult res0 = getClient().listStreams(req0);\n            final String streamArn = res0.getStreams().get(0).getStreamArn(); // XXX assumes there is only one stream\n            DescribeStreamRequest req1 = new DescribeStreamRequest()\n                    .withStreamArn(streamArn)\n                    ;\n            DescribeStreamResult res1 = getClient().describeStream(req1);\n            shardList.addAll(res1.getStreamDescription().getShards());\n\n            LOG.trace(\"Current shard is: {} (in {})\", currentShard, shardList);\n            if (currentShard == null) {\n                currentShard = shardList.first();\n            } else {\n                currentShard = shardList.nextAfter(currentShard);\n            }\n            shardList.removeOlderThan(currentShard);\n            LOG.trace(\"Next shard is: {} (in {})\", currentShard, shardList);\n\n            GetShardIteratorRequest req = new GetShardIteratorRequest()\n                    .withStreamArn(streamArn)\n                    .withShardId(currentShard.getShardId())\n                    .withShardIteratorType(getEndpoint().getIteratorType())\n                    ;\n            GetShardIteratorResult result = getClient().getShardIterator(req);\n            currentShardIterator = result.getShardIterator();\n        }\n        LOG.trace(\"Shard Iterator is: {}\", currentShardIterator);\n        return currentShardIterator;\n    }","commit_id":"ceaef105323d031ef92751d2744ad7a0f0be2c08","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Removes shards that are older than the provided shard.\n     * Does not remove the provided shard.\n     * @param removeBefore\n     */\n    void removeOlderThan(Shard removeBefore) {\n        String current = removeBefore.getParentShardId();\n\n        while (current != null) {\n            Shard s = shards.remove(current);\n            if (s == null) {\n                current = null;\n            } else {\n                current = s.getParentShardId();\n            }\n        }\n    }","id":69707,"modified_method":"/**\n     * Removes shards that are older than the provided shard.\n     * Does not remove the provided shard.\n     * @param removeBefore\n     */\n    void removeOlderThan(Shard removeBefore) {\n        String current = removeBefore.getParentShardId();\n\n        int removedShards = 0;\n        while (current != null) {\n            Shard s = shards.remove(current);\n            if (s == null) {\n                current = null;\n            } else {\n                removedShards++;\n                current = s.getParentShardId();\n            }\n        }\n        LOG.trace(\"removed {} shards from the store, new size is {}\", removedShards, shards.size());\n    }","commit_id":"ceaef105323d031ef92751d2744ad7a0f0be2c08","url":"https://github.com/apache/camel"},{"original_method":"@Override\n  public synchronized boolean isFileDeletable(FileStatus fStat) {\n    if (this.fs == null) return false;\n    Path filePath = fStat.getPath();\n    // HFile Link is always deletable\n    if (HFileLink.isHFileLink(filePath)) return true;\n\n    // If the file is inside a link references directory, means that it is a back ref link.\n    // The back ref can be deleted only if the referenced file doesn't exists.\n    Path parentDir = filePath.getParent();\n    if (HFileLink.isBackReferencesDir(parentDir)) {\n      Path hfilePath = null;\n      try {\n        hfilePath = HFileLink.getHFileFromBackReference(getConf(), filePath);\n        return !fs.exists(hfilePath);\n      } catch (IOException e) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Couldn't verify if the referenced file still exists, keep it just in case: \"\n              + hfilePath);\n        }\n        return false;\n      }\n    }\n\n    // HFile is deletable only if has no links\n    Path backRefDir = null;\n    try {\n      backRefDir = HFileLink.getBackReferencesDir(parentDir, filePath.getName());\n      return FSUtils.listStatus(fs, backRefDir) == null;\n    } catch (IOException e) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Couldn't get the references, not deleting file, just in case. filePath=\"\n            + filePath + \", backRefDir=\" + backRefDir);\n      }\n      return false;\n    }\n  }","id":69708,"modified_method":"@Override\n  public synchronized boolean isFileDeletable(FileStatus fStat) {\n    if (this.fs == null) return false;\n    Path filePath = fStat.getPath();\n    // HFile Link is always deletable\n    if (HFileLink.isHFileLink(filePath)) return true;\n\n    // If the file is inside a link references directory, means that it is a back ref link.\n    // The back ref can be deleted only if the referenced file doesn't exists.\n    Path parentDir = filePath.getParent();\n    if (HFileLink.isBackReferencesDir(parentDir)) {\n      Path hfilePath = null;\n      try {\n        // Also check if the HFile is in the HBASE_TEMP_DIRECTORY; this is where the referenced\n        // file gets created when cloning a snapshot.\n        hfilePath = HFileLink.getHFileFromBackReference(\n            new Path(FSUtils.getRootDir(getConf()), HConstants.HBASE_TEMP_DIRECTORY), filePath);\n        if (fs.exists(hfilePath)) {\n          return false;\n        }\n        hfilePath = HFileLink.getHFileFromBackReference(FSUtils.getRootDir(getConf()), filePath);\n        return !fs.exists(hfilePath);\n      } catch (IOException e) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Couldn't verify if the referenced file still exists, keep it just in case: \"\n              + hfilePath);\n        }\n        return false;\n      }\n    }\n\n    // HFile is deletable only if has no links\n    Path backRefDir = null;\n    try {\n      backRefDir = HFileLink.getBackReferencesDir(parentDir, filePath.getName());\n      return FSUtils.listStatus(fs, backRefDir) == null;\n    } catch (IOException e) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Couldn't get the references, not deleting file, just in case. filePath=\"\n            + filePath + \", backRefDir=\" + backRefDir);\n      }\n      return false;\n    }\n  }","commit_id":"176261af788dd4cfb9709b046f84ab67b18149cc","url":"https://github.com/apache/hbase"},{"original_method":"private static void setupConf(Configuration conf) {\n    // enable snapshot support\n    conf.setBoolean(SnapshotManager.HBASE_SNAPSHOT_ENABLED, true);\n    // disable the ui\n    conf.setInt(\"hbase.regionsever.info.port\", -1);\n    // change the flush size to a small amount, regulating number of store files\n    conf.setInt(\"hbase.hregion.memstore.flush.size\", 25000);\n    // so make sure we get a compaction when doing a load, but keep around\n    // some files in the store\n    conf.setInt(\"hbase.hstore.compaction.min\", 10);\n    conf.setInt(\"hbase.hstore.compactionThreshold\", 10);\n    // block writes if we get to 12 store files\n    conf.setInt(\"hbase.hstore.blockingStoreFiles\", 12);\n    conf.setInt(\"hbase.regionserver.msginterval\", 100);\n    conf.setBoolean(\"hbase.master.enabletable.roundrobin\", true);\n    // Avoid potentially aggressive splitting which would cause snapshot to fail\n    conf.set(HConstants.HBASE_REGION_SPLIT_POLICY_KEY,\n      ConstantSizeRegionSplitPolicy.class.getName());\n  }","id":69709,"modified_method":"private static void setupConf(Configuration conf) {\n    // enable snapshot support\n    conf.setBoolean(SnapshotManager.HBASE_SNAPSHOT_ENABLED, true);\n    // disable the ui\n    conf.setInt(\"hbase.regionsever.info.port\", -1);\n    // change the flush size to a small amount, regulating number of store files\n    conf.setInt(\"hbase.hregion.memstore.flush.size\", 25000);\n    // so make sure we get a compaction when doing a load, but keep around\n    // some files in the store\n    conf.setInt(\"hbase.hstore.compaction.min\", 10);\n    conf.setInt(\"hbase.hstore.compactionThreshold\", 10);\n    // block writes if we get to 12 store files\n    conf.setInt(\"hbase.hstore.blockingStoreFiles\", 12);\n    conf.setInt(\"hbase.regionserver.msginterval\", 100);\n    conf.setBoolean(\"hbase.master.enabletable.roundrobin\", true);\n    // Avoid potentially aggressive splitting which would cause snapshot to fail\n    conf.set(HConstants.HBASE_REGION_SPLIT_POLICY_KEY,\n      ConstantSizeRegionSplitPolicy.class.getName());\n    // Execute cleaner frequently to induce failures\n    conf.setInt(\"hbase.master.cleaner.interval\", CLEANER_INTERVAL);\n    conf.setInt(\"hbase.master.hfilecleaner.plugins.snapshot.period\", CLEANER_INTERVAL);\n    // Effectively disable TimeToLiveHFileCleaner. Don't want to fully disable it because that\n    // will even trigger races between creating the directory containing back references and\n    // the back reference itself.\n    conf.setInt(\"hbase.master.hfilecleaner.ttl\", CLEANER_INTERVAL);\n  }","commit_id":"176261af788dd4cfb9709b046f84ab67b18149cc","url":"https://github.com/apache/hbase"},{"original_method":"public void run()\n            {\n                if (operation.equals(MODIFY_OPERATION))\n                {\n                    if (!listModel.isGroupClosed(group))\n                    {\n                        int groupIndex = listModel.indexOf(group);\n                        int lastIndex = listModel\n                            .countContactsAndSubgroups(group);\n\n                        listModel.contentChanged(groupIndex, lastIndex);\n                    }\n                }\n                else if (operation.equals(ADD_OPERATION))\n                {\n                    int groupIndex = listModel.indexOf(group);\n                    int addedCount = listModel.countContactsAndSubgroups(group);\n                    int listSize = listModel.getSize();\n                    listModel.contentChanged(groupIndex, listSize - addedCount\n                        - 1);\n                    listModel.contentAdded(listSize - addedCount, listSize - 1);\n                }\n                else if (operation.equals(REMOVE_OPERATION))\n                {\n                    int groupIndex = listModel.indexOf(group);\n                    int removeCount = listModel\n                        .countContactsAndSubgroups(group);\n                    int listSize = listModel.getSize();\n\n                    if (listSize > 0)\n                    {\n                        listModel.contentRemoved(listSize - 1, listSize\n                            + removeCount - 1);\n                        listModel.contentChanged(groupIndex, listSize - 1);\n                    }\n                }\n            }","id":69710,"modified_method":"public void run()\n            {\n                if (operation.equals(MODIFY_OPERATION))\n                {\n                    if (!listModel.isGroupClosed(group))\n                    {\n                        int groupIndex = listModel.indexOf(group);\n                        int lastIndex = listModel\n                            .countContactsAndSubgroups(group);\n\n                        listModel.contentChanged(groupIndex, lastIndex);\n                    }\n                }\n                else if (operation.equals(ADD_OPERATION))\n                {\n                    int groupIndex = listModel.indexOf(group);\n                    int addedCount = listModel.countContactsAndSubgroups(group);\n                    int listSize = listModel.getSize();\n                    if (listSize > 0)\n                    {\n                        listModel.contentChanged(\n                            groupIndex, listSize - addedCount - 1);\n                        listModel.contentAdded(\n                            listSize - addedCount, listSize - 1);\n                    }\n                }\n                else if (operation.equals(REMOVE_OPERATION))\n                {\n                    int groupIndex = listModel.indexOf(group);\n                    int removeCount = listModel\n                        .countContactsAndSubgroups(group);\n                    int listSize = listModel.getSize();\n\n                    if (listSize > 0)\n                    {\n                        listModel.contentRemoved(listSize - 1, listSize\n                            + removeCount - 1);\n                        listModel.contentChanged(groupIndex, listSize - 1);\n                    }\n                }\n            }","commit_id":"190951a86f11490b8e2c0c034c4c5f7e07374aea","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Sets the showOffline property.\n     * \n     * @param isShowOffline TRUE to show all offline users, FALSE to hide\n     *            offline users.\n     */\n    public void setShowOffline(boolean isShowOffline)\n    {\n        int listSize = listModel.getSize();\n        \n        listModel.setShowOffline(isShowOffline);\n        \n        int newListSize = listModel.getSize();\n        \n        listModel.contentRemoved(newListSize - 1, listSize - 1);\n        listModel.contentChanged(0, newListSize - 1);\n    }","id":69711,"modified_method":"/**\n     * Sets the showOffline property.\n     * \n     * @param isShowOffline TRUE to show all offline users, FALSE to hide\n     *            offline users.\n     */\n    public void setShowOffline(boolean isShowOffline)\n    {\n        int listSize = listModel.getSize();\n        \n        listModel.setShowOffline(isShowOffline);\n        \n        int newListSize = listModel.getSize();\n        \n        if(listSize > 0 && newListSize > 0)\n        {\n            listModel.contentRemoved(newListSize - 1, listSize - 1);\n            listModel.contentChanged(0, newListSize - 1);\n        }\n    }","commit_id":"190951a86f11490b8e2c0c034c4c5f7e07374aea","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Closes the given group by hiding all containing contacts.\n     * \n     * @param group The group to close.\n     */\n    public void closeGroup(MetaContactGroup group)\n    {\n        if (countContactsAndSubgroups(group) > 0)\n        {\n            contentRemoved(this.indexOf(group.getMetaContact(0)), this\n                .indexOf(group\n                    .getMetaContact(countContactsAndSubgroups(group) - 1)));\n\n            this.closedGroups.add(group);\n        }\n    }","id":69712,"modified_method":"/**\n     * Closes the given group by hiding all containing contacts.\n     * \n     * @param group The group to close.\n     */\n    public void closeGroup(MetaContactGroup group)\n    {\n        if (!isGroupClosed(group))\n        {\n            if(showOffline || containsOnlineContacts(group))\n            {\n                contentRemoved(this.indexOf(group.getMetaContact(0)),\n                    this.indexOf(group.getMetaContact(\n                        countContactsAndSubgroups(group) - 1)));\n            }\n            \n            this.closedGroups.add(group);\n        }\n    }","commit_id":"c585099d7f58ce50c1e935ebe8fa4b52b82c6713","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Goes through all subgroups and contacts and determines the final size of\n     * the contact list.\n     * \n     * @param group The group which to be measured.\n     * @return The size of the contactlist\n     */\n    private int getContactListSize(MetaContactGroup group)\n    {\n        int size = 0;\n\n        if (!this.isGroupClosed(group))\n        {\n            if (showOffline)\n            {\n                size = group.countChildContacts();\n                \n                //count the group itself only if it's not empty\n                if(size > 0)\n                    size++;\n            }\n            else\n            {\n                Iterator i = group.getChildContacts();\n                while (i.hasNext())\n                {\n                    MetaContact contact = (MetaContact) i.next();\n\n                    if (isContactOnline(contact))\n                        size++;\n                }\n          \n                //count the group itself only if it contains any online contacts\n                if(size > 0)\n                    size++;\n            }\n\n            Iterator subgroups = group.getSubgroups();\n\n            while (subgroups.hasNext())\n            {\n                size += getContactListSize((MetaContactGroup) subgroups.next());\n            }\n        }\n        return size;\n    }","id":69713,"modified_method":"/**\n     * Goes through all subgroups and contacts and determines the final size of\n     * the contact list.\n     * \n     * @param group The group which to be measured.\n     * @return The size of the contactlist\n     */\n    private int getContactListSize(MetaContactGroup group)\n    {\n        int size = 0;\n\n        if (!isGroupClosed(group))\n        {\n            if (showOffline)\n            {\n                size = group.countChildContacts();\n                //count the group itself\n                size++;\n            }\n            else\n            {\n                Iterator i = group.getChildContacts();\n                while (i.hasNext())\n                {\n                    MetaContact contact = (MetaContact) i.next();\n\n                    if (isContactOnline(contact))\n                        size++;\n                }\n          \n                //count the group itself only if it contains any online contacts\n                if(size > 0)\n                    size++;\n            }\n\n            Iterator subgroups = group.getSubgroups();\n\n            while (subgroups.hasNext())\n            {\n                MetaContactGroup subGroup = (MetaContactGroup) subgroups.next();\n                size += getContactListSize(subGroup);                \n            }\n        }\n        else\n        {\n            //count the closed group\n            size++;\n        }\n        \n        return size;\n    }","commit_id":"c585099d7f58ce50c1e935ebe8fa4b52b82c6713","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Handles the <tt>ActionEvent<\/tt> triggered when user clicks on\n     * on the buttons. Shows the account registration wizard when user\n     * clicks on \"New\".\n     *\n     * @param evt the action event that has just occurred.\n     */\n    public void actionPerformed(ActionEvent evt) {\n        JButton sourceButton = (JButton)evt.getSource();\n\n        if (sourceButton.equals(newButton)) {\n            AccountRegWizardContainerImpl wizard\n                = (AccountRegWizardContainerImpl)GuiActivator.getUIService()\n                    .getAccountRegWizardContainer();\n\n            wizard.setTitle(\n                Messages.getString(\"accountRegistrationWizard\"));\n\n            wizard.newAccount();\n\n            wizard.showDialog(false);\n        }\n        else if (sourceButton.equals(modifyButton)) {\n\n            if(accountsTable.getSelectedRow() != -1) {\n                AccountRegWizardContainerImpl wizard\n                    = (AccountRegWizardContainerImpl)GuiActivator.getUIService()\n                        .getAccountRegWizardContainer();\n\n                wizard.setTitle(\n                    Messages.getString(\"accountRegistrationWizard\"));\n\n                ProtocolProviderService protocolProvider\n                    = (ProtocolProviderService)tableModel.getValueAt(\n                        accountsTable.getSelectedRow(), 0);\n\n                wizard.modifyAccount(protocolProvider);\n                wizard.showDialog(false);\n            }\n        }\n        else if(sourceButton.equals(removeButton)){\n\n            if(accountsTable.getSelectedRow() != -1) {\n                ProtocolProviderService protocolProvider\n                    = (ProtocolProviderService)tableModel.getValueAt(\n                        accountsTable.getSelectedRow(), 0);\n\n                ProtocolProviderFactory providerFactory\n                    = GuiActivator.getProtocolProviderFactory(protocolProvider);\n\n                if(providerFactory != null) {\n                    int result = JOptionPane.showConfirmDialog(this,\n                            Messages.getString(\"removeAccountMessage\"),\n                            Messages.getString(\"removeAccount\"),\n                            JOptionPane.YES_NO_CANCEL_OPTION);\n\n                    if(result == JOptionPane.YES_OPTION) {\n                        ConfigurationService configService\n                        = GuiActivator.getConfigurationService();\n\n                    String prefix\n                        = \"net.java.sip.communicator.impl.ui.accounts\";\n\n                    List accounts = configService\n                            .getPropertyNamesByPrefix(prefix, true);\n\n                    Iterator accountsIter = accounts.iterator();\n\n                    while(accountsIter.hasNext()) {\n\n                        String accountRootPropName\n                            = (String) accountsIter.next();\n\n                        String accountUID\n                            = configService.getString(accountRootPropName);\n\n                        if(accountUID.equals(protocolProvider\n                                .getAccountID().getAccountUniqueID())) {\n\n                            configService.setProperty(\n                                accountRootPropName,\n                                null);\n                            break;\n                        }\n                    }\n                    providerFactory.uninstallAccount(\n                                protocolProvider.getAccountID());\n                    }\n                }\n            }\n        }\n    }","id":69714,"modified_method":"/**\n     * Handles the <tt>ActionEvent<\/tt> triggered when user clicks on\n     * on the buttons. Shows the account registration wizard when user\n     * clicks on \"New\".\n     *\n     * @param evt the action event that has just occurred.\n     */\n    public void actionPerformed(ActionEvent evt) {\n        JButton sourceButton = (JButton)evt.getSource();\n\n        if (sourceButton.equals(newButton)) {\n            AccountRegWizardContainerImpl wizard\n                = (AccountRegWizardContainerImpl)GuiActivator.getUIService()\n                    .getAccountRegWizardContainer();\n\n            wizard.setTitle(\n                Messages.getString(\"accountRegistrationWizard\"));\n\n            wizard.newAccount();\n\n            wizard.showDialog(false);\n        }\n        else if (sourceButton.equals(modifyButton)) {\n\n            if(accountsTable.getSelectedRow() != -1) {\n                AccountRegWizardContainerImpl wizard\n                    = (AccountRegWizardContainerImpl)GuiActivator.getUIService()\n                        .getAccountRegWizardContainer();\n\n                wizard.setTitle(\n                    Messages.getString(\"accountRegistrationWizard\"));\n\n                ProtocolProviderService protocolProvider\n                    = (ProtocolProviderService)tableModel.getValueAt(\n                        accountsTable.getSelectedRow(), 0);\n\n                wizard.modifyAccount(protocolProvider);\n                wizard.showDialog(false);\n            }\n        }\n        else if(sourceButton.equals(removeButton)){\n\n            if(accountsTable.getSelectedRow() != -1) {\n                mainFrame.getLoginManager().setManuallyDisconnected(true);\n                \n                ProtocolProviderService protocolProvider\n                    = (ProtocolProviderService)tableModel.getValueAt(\n                        accountsTable.getSelectedRow(), 0);\n\n                ProtocolProviderFactory providerFactory\n                    = GuiActivator.getProtocolProviderFactory(protocolProvider);\n\n                if(providerFactory != null) {\n                    int result = JOptionPane.showConfirmDialog(this,\n                            Messages.getString(\"removeAccountMessage\"),\n                            Messages.getString(\"removeAccount\"),\n                            JOptionPane.YES_NO_CANCEL_OPTION);\n\n                    if(result == JOptionPane.YES_OPTION) {\n                        ConfigurationService configService\n                        = GuiActivator.getConfigurationService();\n\n                    String prefix\n                        = \"net.java.sip.communicator.impl.ui.accounts\";\n\n                    List accounts = configService\n                            .getPropertyNamesByPrefix(prefix, true);\n\n                    Iterator accountsIter = accounts.iterator();\n\n                    while(accountsIter.hasNext()) {\n\n                        String accountRootPropName\n                            = (String) accountsIter.next();\n\n                        String accountUID\n                            = configService.getString(accountRootPropName);\n\n                        if(accountUID.equals(protocolProvider\n                                .getAccountID().getAccountUniqueID())) {\n\n                            configService.setProperty(\n                                accountRootPropName,\n                                null);\n                            break;\n                        }\n                    }\n                    providerFactory.uninstallAccount(\n                                protocolProvider.getAccountID());\n                    }\n                }\n            }\n        }\n    }","commit_id":"81632a63d85f36171e462a59c2808fca2c230b51","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void run()\n            {\n                if (operation.equals(MODIFY_OPERATION)) {\n                    int contactIndex = listModel.indexOf(contact);\n\n                    listModel.contentChanged(contactIndex, contactIndex);\n                }\n                else if (operation.equals(ADD_OPERATION)) {\n                    int contactIndex = listModel.indexOf(contact);\n\n                    if (contactIndex != -1)\n                        listModel.contentAdded(contactIndex, contactIndex);\n                }\n                else if (operation.equals(REMOVE_OPERATION)) {\n                    int groupIndex = listModel.indexOf(parentGroup);\n\n                    int listSize = listModel.getSize();\n                    \n                    if (groupIndex != -1) {\n                        listModel.contentChanged(groupIndex, listSize - 1);\n                        listModel.contentRemoved(listSize, listSize);\n                    }\n                }\n            }","id":69715,"modified_method":"public void run()\n            {\n                if (operation.equals(MODIFY_OPERATION)) {\n                    int contactIndex = listModel.indexOf(contact);\n\n                    listModel.contentChanged(contactIndex, contactIndex);\n                }\n                else if (operation.equals(ADD_OPERATION)) {\n                    int contactIndex = listModel.indexOf(contact);\n\n                    if (contactIndex != -1)\n                        listModel.contentAdded(contactIndex, contactIndex);\n                }\n                else if (operation.equals(REMOVE_OPERATION)) {\n                    int groupIndex = listModel.indexOf(parentGroup);\n\n                    int listSize = listModel.getSize();\n                    \n                    if (groupIndex != -1 && listSize > 0) {\n                        listModel.contentChanged(groupIndex, listSize - 1);\n                        listModel.contentRemoved(listSize, listSize);\n                    }\n                }\n            }","commit_id":"81632a63d85f36171e462a59c2808fca2c230b51","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void run()\n            {\n                if (operation.equals(MODIFY_OPERATION)) {\n                    if (!listModel.isGroupClosed(group)) {\n                        if (listModel.showOffline()) {\n                            int groupIndex = listModel.indexOf(group);\n                            int lastIndex = listModel\n                                    .countContactsAndSubgroups(group);\n\n                            listModel.contentChanged(groupIndex, lastIndex);\n                        }\n                        else {\n                            int groupIndex = listModel.indexOf(group);\n                            int addedCount = listModel\n                                    .countContactsAndSubgroups(group);\n                            int listSize = listModel.getSize();\n                            listModel.contentChanged(groupIndex, listSize\n                                    - addedCount - 1);\n                            listModel.contentAdded(listSize - addedCount,\n                                    listSize - 1);\n                        }\n                    }\n                }\n                else if (operation.equals(ADD_OPERATION)) {\n                    int groupIndex = listModel.indexOf(group);\n                    int addedCount = listModel.countContactsAndSubgroups(group);\n                    int listSize = listModel.getSize();\n                    listModel.contentChanged(groupIndex, listSize - addedCount\n                            - 1);\n                    listModel.contentAdded(listSize - addedCount, listSize - 1);\n                }\n                else if (operation.equals(REMOVE_OPERATION)) {\n                    int groupIndex = listModel.indexOf(group);\n                    int removeCount = listModel\n                            .countContactsAndSubgroups(group);\n                    int listSize = listModel.getSize();\n\n                    listModel.contentRemoved(listSize - 1, listSize\n                            + removeCount - 1);\n                    listModel.contentChanged(groupIndex, listSize - 1);\n                }\n            }","id":69716,"modified_method":"public void run()\n            {\n                if (operation.equals(MODIFY_OPERATION)) {\n                    if (!listModel.isGroupClosed(group)) {\n                        if (listModel.showOffline()) {\n                            int groupIndex = listModel.indexOf(group);\n                            int lastIndex = listModel\n                                    .countContactsAndSubgroups(group);\n\n                            listModel.contentChanged(groupIndex, lastIndex);\n                        }\n                        else {\n                            int groupIndex = listModel.indexOf(group);\n                            int addedCount = listModel\n                                    .countContactsAndSubgroups(group);\n                            int listSize = listModel.getSize();\n                            listModel.contentChanged(groupIndex, listSize\n                                    - addedCount - 1);\n                            listModel.contentAdded(listSize - addedCount,\n                                    listSize - 1);\n                        }\n                    }\n                }\n                else if (operation.equals(ADD_OPERATION)) {\n                    int groupIndex = listModel.indexOf(group);\n                    int addedCount = listModel.countContactsAndSubgroups(group);\n                    int listSize = listModel.getSize();\n                    listModel.contentChanged(groupIndex, listSize - addedCount\n                            - 1);\n                    listModel.contentAdded(listSize - addedCount, listSize - 1);\n                }\n                else if (operation.equals(REMOVE_OPERATION)) {\n                    int groupIndex = listModel.indexOf(group);\n                    int removeCount = listModel\n                            .countContactsAndSubgroups(group);\n                    int listSize = listModel.getSize();\n\n                    if(listSize > 0 && removeCount > 0) {\n                        listModel.contentRemoved(listSize - 1, listSize\n                                + removeCount - 1);\n                        listModel.contentChanged(groupIndex, listSize - 1);\n                    }\n                }\n            }","commit_id":"81632a63d85f36171e462a59c2808fca2c230b51","url":"https://github.com/jitsi/jitsi"},{"original_method":"public boolean keyTyped (char character) {\r\n\t\tboolean handled = gui.handleKey(0, character, true);\r\n\t\treturn gui.handleKey(0, character, false) || handled;\r\n\t}","id":69717,"modified_method":"public boolean keyTyped (char character) {\r\n\t\treturn gui.handleKey(0, character, true);\r\n\t}","commit_id":"ae6e400bce766cb851da4c526ca95a991e0cd3bc","url":"https://github.com/libgdx/libgdx"},{"original_method":"static public int getTwlKeyCode (int gdxKeyCode) {\r\n\t\tswitch (gdxKeyCode) {\r\n\t\tcase Keys.KEYCODE_0:\r\n\t\t\treturn Event.KEY_0;\r\n\t\tcase Keys.KEYCODE_1:\r\n\t\t\treturn Event.KEY_1;\r\n\t\tcase Keys.KEYCODE_2:\r\n\t\t\treturn Event.KEY_2;\r\n\t\tcase Keys.KEYCODE_3:\r\n\t\t\treturn Event.KEY_3;\r\n\t\tcase Keys.KEYCODE_4:\r\n\t\t\treturn Event.KEY_4;\r\n\t\tcase Keys.KEYCODE_5:\r\n\t\t\treturn Event.KEY_5;\r\n\t\tcase Keys.KEYCODE_6:\r\n\t\t\treturn Event.KEY_6;\r\n\t\tcase Keys.KEYCODE_7:\r\n\t\t\treturn Event.KEY_7;\r\n\t\tcase Keys.KEYCODE_8:\r\n\t\t\treturn Event.KEY_8;\r\n\t\tcase Keys.KEYCODE_9:\r\n\t\t\treturn Event.KEY_9;\r\n\t\tcase Keys.KEYCODE_A:\r\n\t\t\treturn Event.KEY_A;\r\n\t\tcase Keys.KEYCODE_B:\r\n\t\t\treturn Event.KEY_B;\r\n\t\tcase Keys.KEYCODE_C:\r\n\t\t\treturn Event.KEY_C;\r\n\t\tcase Keys.KEYCODE_D:\r\n\t\t\treturn Event.KEY_D;\r\n\t\tcase Keys.KEYCODE_E:\r\n\t\t\treturn Event.KEY_E;\r\n\t\tcase Keys.KEYCODE_F:\r\n\t\t\treturn Event.KEY_F;\r\n\t\tcase Keys.KEYCODE_G:\r\n\t\t\treturn Event.KEY_G;\r\n\t\tcase Keys.KEYCODE_H:\r\n\t\t\treturn Event.KEY_H;\r\n\t\tcase Keys.KEYCODE_I:\r\n\t\t\treturn Event.KEY_I;\r\n\t\tcase Keys.KEYCODE_J:\r\n\t\t\treturn Event.KEY_J;\r\n\t\tcase Keys.KEYCODE_K:\r\n\t\t\treturn Event.KEY_K;\r\n\t\tcase Keys.KEYCODE_L:\r\n\t\t\treturn Event.KEY_L;\r\n\t\tcase Keys.KEYCODE_M:\r\n\t\t\treturn Event.KEY_M;\r\n\t\tcase Keys.KEYCODE_N:\r\n\t\t\treturn Event.KEY_N;\r\n\t\tcase Keys.KEYCODE_O:\r\n\t\t\treturn Event.KEY_O;\r\n\t\tcase Keys.KEYCODE_P:\r\n\t\t\treturn Event.KEY_P;\r\n\t\tcase Keys.KEYCODE_Q:\r\n\t\t\treturn Event.KEY_Q;\r\n\t\tcase Keys.KEYCODE_R:\r\n\t\t\treturn Event.KEY_R;\r\n\t\tcase Keys.KEYCODE_S:\r\n\t\t\treturn Event.KEY_S;\r\n\t\tcase Keys.KEYCODE_T:\r\n\t\t\treturn Event.KEY_T;\r\n\t\tcase Keys.KEYCODE_U:\r\n\t\t\treturn Event.KEY_U;\r\n\t\tcase Keys.KEYCODE_V:\r\n\t\t\treturn Event.KEY_V;\r\n\t\tcase Keys.KEYCODE_W:\r\n\t\t\treturn Event.KEY_W;\r\n\t\tcase Keys.KEYCODE_X:\r\n\t\t\treturn Event.KEY_X;\r\n\t\tcase Keys.KEYCODE_Y:\r\n\t\t\treturn Event.KEY_Y;\r\n\t\tcase Keys.KEYCODE_Z:\r\n\t\t\treturn Event.KEY_Z;\r\n\t\tcase Keys.KEYCODE_ALT_LEFT:\r\n\t\t\treturn Event.KEY_LMETA;\r\n\t\tcase Keys.KEYCODE_ALT_RIGHT:\r\n\t\t\treturn Event.KEY_RMETA;\r\n\t\tcase Keys.KEYCODE_BACKSLASH:\r\n\t\t\treturn Event.KEY_BACKSLASH;\r\n\t\tcase Keys.KEYCODE_COMMA:\r\n\t\t\treturn Event.KEY_COMMA;\r\n\t\tcase Keys.KEYCODE_DEL:\r\n\t\t\treturn Event.KEY_DELETE;\r\n\t\tcase Keys.KEYCODE_DPAD_LEFT:\r\n\t\t\treturn Event.KEY_LEFT;\r\n\t\tcase Keys.KEYCODE_DPAD_RIGHT:\r\n\t\t\treturn Event.KEY_RIGHT;\r\n\t\tcase Keys.KEYCODE_DPAD_UP:\r\n\t\t\treturn Event.KEY_UP;\r\n\t\tcase Keys.KEYCODE_DPAD_DOWN:\r\n\t\t\treturn Event.KEY_DOWN;\r\n\t\tcase Keys.KEYCODE_ENTER:\r\n\t\t\treturn Event.KEY_RETURN;\r\n\t\tcase Keys.KEYCODE_HOME:\r\n\t\t\treturn Event.KEY_HOME;\r\n\t\tcase Keys.KEYCODE_MINUS:\r\n\t\t\treturn Event.KEY_MINUS;\r\n\t\tcase Keys.KEYCODE_PERIOD:\r\n\t\t\treturn Event.KEY_PERIOD;\r\n\t\tcase Keys.KEYCODE_PLUS:\r\n\t\t\treturn Event.KEY_ADD;\r\n\t\tcase Keys.KEYCODE_SEMICOLON:\r\n\t\t\treturn Event.KEY_SEMICOLON;\r\n\t\tcase Keys.KEYCODE_SHIFT_LEFT:\r\n\t\t\treturn Event.KEY_LSHIFT;\r\n\t\tcase Keys.KEYCODE_SHIFT_RIGHT:\r\n\t\t\treturn Event.KEY_RSHIFT;\r\n\t\tcase Keys.KEYCODE_SLASH:\r\n\t\t\treturn Event.KEY_SLASH;\r\n\t\tcase Keys.KEYCODE_SPACE:\r\n\t\t\treturn Event.KEY_SPACE;\r\n\t\tcase Keys.KEYCODE_TAB:\r\n\t\t\treturn Event.KEY_TAB;\r\n\t\tdefault:\r\n\t\t\treturn Event.KEY_NONE;\r\n\t\t}\r\n\t}","id":69718,"modified_method":"static public int getTwlKeyCode (int gdxKeyCode) {\r\n\t\tswitch (gdxKeyCode) {\r\n\t\tcase Keys.KEYCODE_0:\r\n\t\t\treturn Event.KEY_0;\r\n\t\tcase Keys.KEYCODE_1:\r\n\t\t\treturn Event.KEY_1;\r\n\t\tcase Keys.KEYCODE_2:\r\n\t\t\treturn Event.KEY_2;\r\n\t\tcase Keys.KEYCODE_3:\r\n\t\t\treturn Event.KEY_3;\r\n\t\tcase Keys.KEYCODE_4:\r\n\t\t\treturn Event.KEY_4;\r\n\t\tcase Keys.KEYCODE_5:\r\n\t\t\treturn Event.KEY_5;\r\n\t\tcase Keys.KEYCODE_6:\r\n\t\t\treturn Event.KEY_6;\r\n\t\tcase Keys.KEYCODE_7:\r\n\t\t\treturn Event.KEY_7;\r\n\t\tcase Keys.KEYCODE_8:\r\n\t\t\treturn Event.KEY_8;\r\n\t\tcase Keys.KEYCODE_9:\r\n\t\t\treturn Event.KEY_9;\r\n\t\tcase Keys.KEYCODE_A:\r\n\t\t\treturn Event.KEY_A;\r\n\t\tcase Keys.KEYCODE_B:\r\n\t\t\treturn Event.KEY_B;\r\n\t\tcase Keys.KEYCODE_C:\r\n\t\t\treturn Event.KEY_C;\r\n\t\tcase Keys.KEYCODE_D:\r\n\t\t\treturn Event.KEY_D;\r\n\t\tcase Keys.KEYCODE_E:\r\n\t\t\treturn Event.KEY_E;\r\n\t\tcase Keys.KEYCODE_F:\r\n\t\t\treturn Event.KEY_F;\r\n\t\tcase Keys.KEYCODE_G:\r\n\t\t\treturn Event.KEY_G;\r\n\t\tcase Keys.KEYCODE_H:\r\n\t\t\treturn Event.KEY_H;\r\n\t\tcase Keys.KEYCODE_I:\r\n\t\t\treturn Event.KEY_I;\r\n\t\tcase Keys.KEYCODE_J:\r\n\t\t\treturn Event.KEY_J;\r\n\t\tcase Keys.KEYCODE_K:\r\n\t\t\treturn Event.KEY_K;\r\n\t\tcase Keys.KEYCODE_L:\r\n\t\t\treturn Event.KEY_L;\r\n\t\tcase Keys.KEYCODE_M:\r\n\t\t\treturn Event.KEY_M;\r\n\t\tcase Keys.KEYCODE_N:\r\n\t\t\treturn Event.KEY_N;\r\n\t\tcase Keys.KEYCODE_O:\r\n\t\t\treturn Event.KEY_O;\r\n\t\tcase Keys.KEYCODE_P:\r\n\t\t\treturn Event.KEY_P;\r\n\t\tcase Keys.KEYCODE_Q:\r\n\t\t\treturn Event.KEY_Q;\r\n\t\tcase Keys.KEYCODE_R:\r\n\t\t\treturn Event.KEY_R;\r\n\t\tcase Keys.KEYCODE_S:\r\n\t\t\treturn Event.KEY_S;\r\n\t\tcase Keys.KEYCODE_T:\r\n\t\t\treturn Event.KEY_T;\r\n\t\tcase Keys.KEYCODE_U:\r\n\t\t\treturn Event.KEY_U;\r\n\t\tcase Keys.KEYCODE_V:\r\n\t\t\treturn Event.KEY_V;\r\n\t\tcase Keys.KEYCODE_W:\r\n\t\t\treturn Event.KEY_W;\r\n\t\tcase Keys.KEYCODE_X:\r\n\t\t\treturn Event.KEY_X;\r\n\t\tcase Keys.KEYCODE_Y:\r\n\t\t\treturn Event.KEY_Y;\r\n\t\tcase Keys.KEYCODE_Z:\r\n\t\t\treturn Event.KEY_Z;\r\n\t\tcase Keys.KEYCODE_ALT_LEFT:\r\n\t\t\treturn Event.KEY_LMETA;\r\n\t\tcase Keys.KEYCODE_ALT_RIGHT:\r\n\t\t\treturn Event.KEY_RMETA;\r\n\t\tcase Keys.KEYCODE_BACKSLASH:\r\n\t\t\treturn Event.KEY_BACKSLASH;\r\n\t\tcase Keys.KEYCODE_COMMA:\r\n\t\t\treturn Event.KEY_COMMA;\r\n\t\tcase Keys.KEYCODE_DEL:\r\n\t\t\treturn Event.KEY_DELETE;\r\n\t\tcase Keys.KEYCODE_DPAD_LEFT:\r\n\t\t\treturn Event.KEY_LEFT;\r\n\t\tcase Keys.KEYCODE_DPAD_RIGHT:\r\n\t\t\treturn Event.KEY_RIGHT;\r\n\t\tcase Keys.KEYCODE_DPAD_UP:\r\n\t\t\treturn Event.KEY_UP;\r\n\t\tcase Keys.KEYCODE_DPAD_DOWN:\r\n\t\t\treturn Event.KEY_DOWN;\r\n\t\tcase Keys.KEYCODE_ENTER:\r\n\t\t\treturn Event.KEY_RETURN;\r\n\t\tcase Keys.KEYCODE_HOME:\r\n\t\t\treturn Event.KEY_HOME;\r\n\t\tcase Keys.KEYCODE_MINUS:\r\n\t\t\treturn Event.KEY_MINUS;\r\n\t\tcase Keys.KEYCODE_PERIOD:\r\n\t\t\treturn Event.KEY_PERIOD;\r\n\t\tcase Keys.KEYCODE_PLUS:\r\n\t\t\treturn Event.KEY_ADD;\r\n\t\tcase Keys.KEYCODE_SEMICOLON:\r\n\t\t\treturn Event.KEY_SEMICOLON;\r\n\t\tcase Keys.KEYCODE_SHIFT_LEFT:\r\n\t\t\treturn Event.KEY_LSHIFT;\r\n\t\tcase Keys.KEYCODE_SHIFT_RIGHT:\r\n\t\t\treturn Event.KEY_RSHIFT;\r\n\t\tcase Keys.KEYCODE_SLASH:\r\n\t\t\treturn Event.KEY_SLASH;\r\n\t\tcase Keys.KEYCODE_SPACE:\r\n\t\t\treturn Event.KEY_SPACE;\r\n\t\tcase Keys.KEYCODE_TAB:\r\n\t\t\treturn Event.KEY_TAB;\r\n\t\t}\r\n\t\treturn Event.KEY_NONE;\r\n\t}","commit_id":"ae6e400bce766cb851da4c526ca95a991e0cd3bc","url":"https://github.com/libgdx/libgdx"},{"original_method":"/**\r\n\t * Returns a URL to a theme file, which can be used with\r\n\t * {@link ThemeManager#createThemeManager(URL, de.matthiasmann.twl.renderer.Renderer) ThemeManager} to create a theme for\r\n\t * {@link GUI#applyTheme(ThemeManager)}. This is only needed if not using the TWL class make use of TWL.\r\n\t */\r\n\tstatic public URL getThemeURL (String themeFile, final FileType fileType) throws MalformedURLException {\r\n\t\tFile file = new File(themeFile);\r\n\t\tfinal File themeRoot = file.getParentFile();\r\n\t\treturn new URL(\"gdx-twl\", \"local\", 80, file.getName(), new URLStreamHandler() {\r\n\t\t\tprotected URLConnection openConnection (URL url) throws IOException {\r\n\t\t\t\tfinal String path = new File(themeRoot, url.getPath()).getPath();\r\n\t\t\t\tfinal FileHandle fileHandle = Gdx.files.getFileHandle(path, fileType);\r\n\t\t\t\treturn new URLConnection(url) {\r\n\t\t\t\t\tpublic void connect () {\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpublic Object getContent () {\r\n\t\t\t\t\t\treturn fileHandle;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpublic InputStream getInputStream () {\r\n\t\t\t\t\t\tif (!path.endsWith(\".xml\")) return null; // Only theme files are loaded through the URL.\r\n\t\t\t\t\t\treturn fileHandle.read();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t}","id":69719,"modified_method":"/**\r\n\t * Returns a URL to a theme file, which can be used with\r\n\t * {@link ThemeManager#createThemeManager(URL, de.matthiasmann.twl.renderer.Renderer) ThemeManager} to create a theme for\r\n\t * {@link GUI#applyTheme(ThemeManager)}. This is only needed if not using the {@link TWL} class to make use of TWL.\r\n\t */\r\n\tstatic public URL getThemeURL (String themeFile, final FileType fileType) throws MalformedURLException {\r\n\t\tFile file = new File(themeFile);\r\n\t\tfinal File themeRoot = file.getParentFile();\r\n\t\treturn new URL(\"gdx-twl\", \"local\", 80, file.getName(), new URLStreamHandler() {\r\n\t\t\tprotected URLConnection openConnection (URL url) throws IOException {\r\n\t\t\t\tfinal String path = new File(themeRoot, url.getPath()).getPath();\r\n\t\t\t\tfinal FileHandle fileHandle = Gdx.files.getFileHandle(path, fileType);\r\n\t\t\t\treturn new URLConnection(url) {\r\n\t\t\t\t\tpublic void connect () {\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpublic Object getContent () {\r\n\t\t\t\t\t\treturn fileHandle;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpublic InputStream getInputStream () {\r\n\t\t\t\t\t\tif (!path.endsWith(\".xml\")) return null; // Only theme files are loaded through the URL.\r\n\t\t\t\t\t\treturn fileHandle.read();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t}","commit_id":"ae6e400bce766cb851da4c526ca95a991e0cd3bc","url":"https://github.com/libgdx/libgdx"},{"original_method":"public boolean touchUp (int x, int y, int pointer) {\r\n\t\tboolean handled = gui.handleMouse(x, y, pointer, false);\r\n\t\tgui.handleMouse(-9999, -9999, -1, true);\r\n\t\treturn handled;\r\n\t}","id":69720,"modified_method":"public boolean touchUp (int x, int y, int pointer) {\r\n\t\tmouseDown = false;\r\n\t\tif (ignoreMouse) {\r\n\t\t\tignoreMouse = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tboolean handled = gui.handleMouse(x, y, pointer, false);\r\n\t\tgui.handleMouse(-9999, -9999, -1, false);\r\n\t\treturn handled;\r\n\t}","commit_id":"ae6e400bce766cb851da4c526ca95a991e0cd3bc","url":"https://github.com/libgdx/libgdx"},{"original_method":"public boolean touchDown (int x, int y, int pointer) {\r\n\t\treturn gui.handleMouse(x, y, pointer, true);\r\n\t}","id":69721,"modified_method":"public boolean touchDown (int x, int y, int pointer) {\r\n\t\tif (!mouseDown) lastPressConsumed = false; // Only the first button down counts.\r\n\t\tmouseDown = true;\r\n\t\tif (ignoreMouse) return false;\r\n\t\tboolean handled = gui.handleMouse(x, y, pointer, true);\r\n\t\tif (handled) lastPressConsumed = true;\r\n\t\treturn handled;\r\n\t}","commit_id":"ae6e400bce766cb851da4c526ca95a991e0cd3bc","url":"https://github.com/libgdx/libgdx"},{"original_method":"public boolean touchDragged (int x, int y, int pointer) {\r\n\t\tboolean handled = gui.handleMouse(x, y, -1, true);\r\n\t\tSystem.out.println(handled);\r\n\t\treturn handled;\r\n\t}","id":69722,"modified_method":"public boolean touchDragged (int x, int y, int pointer) {\r\n\t\tif (mouseDown && !lastPressConsumed) {\r\n\t\t\tignoreMouse = true;\r\n\t\t\tgui.clearMouseState();\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn gui.handleMouse(x, y, -1, true);\r\n\t}","commit_id":"ae6e400bce766cb851da4c526ca95a991e0cd3bc","url":"https://github.com/libgdx/libgdx"},{"original_method":"void updateKeyboard() {\r\n\t\tif (Keyboard.isCreated()) {\r\n\t\t\twhile (Keyboard.next()) {\r\n\t\t\t\tif (Keyboard.getEventKeyState()) {\r\n\t\t\t\t\tint keyCode = getKeyCode(Keyboard.getEventKey());\r\n\t\t\t\t\tchar keyChar = Keyboard.getEventCharacter();\r\n\t\t\t\t\t\r\n\t\t\t\t\tKeyEvent event = freeKeyEvents.newObject();\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tevent.keyCode = keyCode;\r\n\t\t\t\t\tevent.keyChar = 0;\r\n\t\t\t\t\tevent.type = KeyEvent.KEY_DOWN;\r\n\t\t\t\t\tkeyEvents.add(event);\r\n\t\t\t\t\t\r\n\t\t\t\t\tevent = freeKeyEvents.newObject();\r\n\t\t\t\t\tevent.keyCode = 0;\r\n\t\t\t\t\tevent.keyChar = keyChar;\r\n\t\t\t\t\tevent.type = KeyEvent.KEY_TYPED;\r\n\t\t\t\t\tkeyEvents.add(event);\t\t\t\t\t\r\n\t\t\t\t\tpressedKeys++;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\telse {\r\n\t\t\t\t\tint keyCode = LwjglInput.getKeyCode(Keyboard.getEventKey());\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tKeyEvent event = freeKeyEvents.newObject();\r\n\t\t\t\t\tevent.keyCode = keyCode;\r\n\t\t\t\t\tevent.keyChar = 0;\r\n\t\t\t\t\tevent.type = KeyEvent.KEY_UP;\r\n\t\t\t\t\tkeyEvents.add(event);\r\n\t\t\t\t\t\r\n\t\t\t\t\tpressedKeys--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\t\t\r\n\t}","id":69723,"modified_method":"void updateKeyboard() {\r\n\t\tif (Keyboard.isCreated()) {\r\n\t\t\twhile (Keyboard.next()) {\r\n\t\t\t\tif (Keyboard.getEventKeyState()) {\r\n\t\t\t\t\tint keyCode = getGdxKeyCode(Keyboard.getEventKey());\r\n\t\t\t\t\tchar keyChar = Keyboard.getEventCharacter();\r\n\t\t\t\t\t\r\n\t\t\t\t\tKeyEvent event = freeKeyEvents.newObject();\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tevent.keyCode = keyCode;\r\n\t\t\t\t\tevent.keyChar = 0;\r\n\t\t\t\t\tevent.type = KeyEvent.KEY_DOWN;\r\n\t\t\t\t\tkeyEvents.add(event);\r\n\t\t\t\t\t\r\n\t\t\t\t\tevent = freeKeyEvents.newObject();\r\n\t\t\t\t\tevent.keyCode = 0;\r\n\t\t\t\t\tevent.keyChar = keyChar;\r\n\t\t\t\t\tevent.type = KeyEvent.KEY_TYPED;\r\n\t\t\t\t\tkeyEvents.add(event);\t\t\t\t\t\r\n\t\t\t\t\tpressedKeys++;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\telse {\r\n\t\t\t\t\tint keyCode = LwjglInput.getGdxKeyCode(Keyboard.getEventKey());\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tKeyEvent event = freeKeyEvents.newObject();\r\n\t\t\t\t\tevent.keyCode = keyCode;\r\n\t\t\t\t\tevent.keyChar = 0;\r\n\t\t\t\t\tevent.type = KeyEvent.KEY_UP;\r\n\t\t\t\t\tkeyEvents.add(event);\r\n\t\t\t\t\t\r\n\t\t\t\t\tpressedKeys--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\t\t\t\r\n\t}","commit_id":"80d5684697aeb822ac08c871a47c4601ed5ac4d0","url":"https://github.com/libgdx/libgdx"},{"original_method":"public boolean isKeyPressed (int key) {\r\n\t\tif( key == Input.Keys.ANY_KEY )\r\n\t\t\treturn pressedKeys > 0;\r\n\t\telse\r\n\t\t\treturn Keyboard.isKeyDown(getKeyCodeReverse(key));\r\n\t}","id":69724,"modified_method":"public boolean isKeyPressed (int key) {\r\n\t\tif( key == Input.Keys.ANY_KEY )\r\n\t\t\treturn pressedKeys > 0;\r\n\t\telse\r\n\t\t\treturn Keyboard.isKeyDown(getLwjglKeyCode(key));\r\n\t}","commit_id":"80d5684697aeb822ac08c871a47c4601ed5ac4d0","url":"https://github.com/libgdx/libgdx"},{"original_method":"public static int getKeyCode (int keyCode) {\r\n\t\tif (keyCode == Keyboard.KEY_0) return Input.Keys.KEYCODE_0;\r\n\t\tif (keyCode == Keyboard.KEY_1) return Input.Keys.KEYCODE_1;\r\n\t\tif (keyCode == Keyboard.KEY_2) return Input.Keys.KEYCODE_2;\r\n\t\tif (keyCode == Keyboard.KEY_3) return Input.Keys.KEYCODE_3;\r\n\t\tif (keyCode == Keyboard.KEY_4) return Input.Keys.KEYCODE_4;\r\n\t\tif (keyCode == Keyboard.KEY_5) return Input.Keys.KEYCODE_5;\r\n\t\tif (keyCode == Keyboard.KEY_6) return Input.Keys.KEYCODE_6;\r\n\t\tif (keyCode == Keyboard.KEY_7) return Input.Keys.KEYCODE_7;\r\n\t\tif (keyCode == Keyboard.KEY_8) return Input.Keys.KEYCODE_8;\r\n\t\tif (keyCode == Keyboard.KEY_9) return Input.Keys.KEYCODE_9;\r\n\t\tif (keyCode == Keyboard.KEY_A) return Input.Keys.KEYCODE_A;\r\n\t\tif (keyCode == Keyboard.KEY_B) return Input.Keys.KEYCODE_B;\r\n\t\tif (keyCode == Keyboard.KEY_C) return Input.Keys.KEYCODE_C;\r\n\t\tif (keyCode == Keyboard.KEY_D) return Input.Keys.KEYCODE_D;\r\n\t\tif (keyCode == Keyboard.KEY_E) return Input.Keys.KEYCODE_E;\r\n\t\tif (keyCode == Keyboard.KEY_F) return Input.Keys.KEYCODE_F;\r\n\t\tif (keyCode == Keyboard.KEY_G) return Input.Keys.KEYCODE_G;\r\n\t\tif (keyCode == Keyboard.KEY_H) return Input.Keys.KEYCODE_H;\r\n\t\tif (keyCode == Keyboard.KEY_I) return Input.Keys.KEYCODE_I;\r\n\t\tif (keyCode == Keyboard.KEY_J) return Input.Keys.KEYCODE_J;\r\n\t\tif (keyCode == Keyboard.KEY_K) return Input.Keys.KEYCODE_K;\r\n\t\tif (keyCode == Keyboard.KEY_L) return Input.Keys.KEYCODE_L;\r\n\t\tif (keyCode == Keyboard.KEY_M) return Input.Keys.KEYCODE_M;\r\n\t\tif (keyCode == Keyboard.KEY_N) return Input.Keys.KEYCODE_N;\r\n\t\tif (keyCode == Keyboard.KEY_O) return Input.Keys.KEYCODE_O;\r\n\t\tif (keyCode == Keyboard.KEY_P) return Input.Keys.KEYCODE_P;\r\n\t\tif (keyCode == Keyboard.KEY_Q) return Input.Keys.KEYCODE_Q;\r\n\t\tif (keyCode == Keyboard.KEY_R) return Input.Keys.KEYCODE_R;\r\n\t\tif (keyCode == Keyboard.KEY_S) return Input.Keys.KEYCODE_S;\r\n\t\tif (keyCode == Keyboard.KEY_T) return Input.Keys.KEYCODE_T;\r\n\t\tif (keyCode == Keyboard.KEY_U) return Input.Keys.KEYCODE_U;\r\n\t\tif (keyCode == Keyboard.KEY_V) return Input.Keys.KEYCODE_V;\r\n\t\tif (keyCode == Keyboard.KEY_W) return Input.Keys.KEYCODE_W;\r\n\t\tif (keyCode == Keyboard.KEY_X) return Input.Keys.KEYCODE_X;\r\n\t\tif (keyCode == Keyboard.KEY_Y) return Input.Keys.KEYCODE_Y;\r\n\t\tif (keyCode == Keyboard.KEY_Z) return Input.Keys.KEYCODE_Z;\r\n\t\tif (keyCode == Keyboard.KEY_LMETA) return Input.Keys.KEYCODE_ALT_LEFT;\r\n\t\tif (keyCode == Keyboard.KEY_RMETA) return Input.Keys.KEYCODE_ALT_RIGHT;\r\n\t\tif (keyCode == Keyboard.KEY_BACKSLASH) return Input.Keys.KEYCODE_BACKSLASH;\r\n\t\tif (keyCode == Keyboard.KEY_COMMA) return Input.Keys.KEYCODE_COMMA;\r\n\t\tif (keyCode == Keyboard.KEY_DELETE) return Input.Keys.KEYCODE_DEL;\r\n\t\tif (keyCode == Keyboard.KEY_LEFT) return Input.Keys.KEYCODE_DPAD_LEFT;\r\n\t\tif (keyCode == Keyboard.KEY_RIGHT) return Input.Keys.KEYCODE_DPAD_RIGHT;\r\n\t\tif (keyCode == Keyboard.KEY_UP) return Input.Keys.KEYCODE_DPAD_UP;\r\n\t\tif (keyCode == Keyboard.KEY_DOWN) return Input.Keys.KEYCODE_DPAD_DOWN;\r\n\t\tif (keyCode == Keyboard.KEY_RETURN) return Input.Keys.KEYCODE_ENTER;\r\n\t\tif (keyCode == Keyboard.KEY_HOME) return Input.Keys.KEYCODE_HOME;\r\n\t\tif (keyCode == Keyboard.KEY_MINUS) return Input.Keys.KEYCODE_MINUS;\r\n\t\tif (keyCode == Keyboard.KEY_PERIOD) return Input.Keys.KEYCODE_PERIOD;\r\n\t\tif (keyCode == Keyboard.KEY_ADD) return Input.Keys.KEYCODE_PLUS;\r\n\t\tif (keyCode == Keyboard.KEY_SEMICOLON) return Input.Keys.KEYCODE_SEMICOLON;\r\n\t\tif (keyCode == Keyboard.KEY_LSHIFT) return Input.Keys.KEYCODE_SHIFT_LEFT;\r\n\t\tif (keyCode == Keyboard.KEY_RSHIFT) return Input.Keys.KEYCODE_SHIFT_RIGHT;\r\n\t\tif (keyCode == Keyboard.KEY_SLASH) return Input.Keys.KEYCODE_SLASH;\r\n\t\tif (keyCode == Keyboard.KEY_SPACE) return Input.Keys.KEYCODE_SPACE;\r\n\t\tif (keyCode == Keyboard.KEY_TAB) return Input.Keys.KEYCODE_TAB;\r\n\t\treturn Input.Keys.KEYCODE_UNKNOWN;\r\n\t}","id":69725,"modified_method":"public static int getGdxKeyCode (int lwjglKeyCode) {\r\n\t\tswitch (lwjglKeyCode) {\r\n\t\tcase Keyboard.KEY_0: return Input.Keys.KEYCODE_0;\r\n\t\tcase Keyboard.KEY_1: return Input.Keys.KEYCODE_1;\r\n\t\tcase Keyboard.KEY_2: return Input.Keys.KEYCODE_2;\r\n\t\tcase Keyboard.KEY_3: return Input.Keys.KEYCODE_3;\r\n\t\tcase Keyboard.KEY_4: return Input.Keys.KEYCODE_4;\r\n\t\tcase Keyboard.KEY_5: return Input.Keys.KEYCODE_5;\r\n\t\tcase Keyboard.KEY_6: return Input.Keys.KEYCODE_6;\r\n\t\tcase Keyboard.KEY_7: return Input.Keys.KEYCODE_7;\r\n\t\tcase Keyboard.KEY_8: return Input.Keys.KEYCODE_8;\r\n\t\tcase Keyboard.KEY_9: return Input.Keys.KEYCODE_9;\r\n\t\tcase Keyboard.KEY_A: return Input.Keys.KEYCODE_A;\r\n\t\tcase Keyboard.KEY_B: return Input.Keys.KEYCODE_B;\r\n\t\tcase Keyboard.KEY_C: return Input.Keys.KEYCODE_C;\r\n\t\tcase Keyboard.KEY_D: return Input.Keys.KEYCODE_D;\r\n\t\tcase Keyboard.KEY_E: return Input.Keys.KEYCODE_E;\r\n\t\tcase Keyboard.KEY_F: return Input.Keys.KEYCODE_F;\r\n\t\tcase Keyboard.KEY_G: return Input.Keys.KEYCODE_G;\r\n\t\tcase Keyboard.KEY_H: return Input.Keys.KEYCODE_H;\r\n\t\tcase Keyboard.KEY_I: return Input.Keys.KEYCODE_I;\r\n\t\tcase Keyboard.KEY_J: return Input.Keys.KEYCODE_J;\r\n\t\tcase Keyboard.KEY_K: return Input.Keys.KEYCODE_K;\r\n\t\tcase Keyboard.KEY_L: return Input.Keys.KEYCODE_L;\r\n\t\tcase Keyboard.KEY_M: return Input.Keys.KEYCODE_M;\r\n\t\tcase Keyboard.KEY_N: return Input.Keys.KEYCODE_N;\r\n\t\tcase Keyboard.KEY_O: return Input.Keys.KEYCODE_O;\r\n\t\tcase Keyboard.KEY_P: return Input.Keys.KEYCODE_P;\r\n\t\tcase Keyboard.KEY_Q: return Input.Keys.KEYCODE_Q;\r\n\t\tcase Keyboard.KEY_R: return Input.Keys.KEYCODE_R;\r\n\t\tcase Keyboard.KEY_S: return Input.Keys.KEYCODE_S;\r\n\t\tcase Keyboard.KEY_T: return Input.Keys.KEYCODE_T;\r\n\t\tcase Keyboard.KEY_U: return Input.Keys.KEYCODE_U;\r\n\t\tcase Keyboard.KEY_V: return Input.Keys.KEYCODE_V;\r\n\t\tcase Keyboard.KEY_W: return Input.Keys.KEYCODE_W;\r\n\t\tcase Keyboard.KEY_X: return Input.Keys.KEYCODE_X;\r\n\t\tcase Keyboard.KEY_Y: return Input.Keys.KEYCODE_Y;\r\n\t\tcase Keyboard.KEY_Z: return Input.Keys.KEYCODE_Z;\r\n\t\tcase Keyboard.KEY_LMETA: return Input.Keys.KEYCODE_ALT_LEFT;\r\n\t\tcase Keyboard.KEY_RMETA: return Input.Keys.KEYCODE_ALT_RIGHT;\r\n\t\tcase Keyboard.KEY_BACKSLASH: return Input.Keys.KEYCODE_BACKSLASH;\r\n\t\tcase Keyboard.KEY_COMMA: return Input.Keys.KEYCODE_COMMA;\r\n\t\tcase Keyboard.KEY_DELETE: return Input.Keys.KEYCODE_DEL;\r\n\t\tcase Keyboard.KEY_LEFT: return Input.Keys.KEYCODE_DPAD_LEFT;\r\n\t\tcase Keyboard.KEY_RIGHT: return Input.Keys.KEYCODE_DPAD_RIGHT;\r\n\t\tcase Keyboard.KEY_UP: return Input.Keys.KEYCODE_DPAD_UP;\r\n\t\tcase Keyboard.KEY_DOWN: return Input.Keys.KEYCODE_DPAD_DOWN;\r\n\t\tcase Keyboard.KEY_RETURN: return Input.Keys.KEYCODE_ENTER;\r\n\t\tcase Keyboard.KEY_HOME: return Input.Keys.KEYCODE_HOME;\r\n\t\tcase Keyboard.KEY_MINUS: return Input.Keys.KEYCODE_MINUS;\r\n\t\tcase Keyboard.KEY_PERIOD: return Input.Keys.KEYCODE_PERIOD;\r\n\t\tcase Keyboard.KEY_ADD: return Input.Keys.KEYCODE_PLUS;\r\n\t\tcase Keyboard.KEY_SEMICOLON: return Input.Keys.KEYCODE_SEMICOLON;\r\n\t\tcase Keyboard.KEY_LSHIFT: return Input.Keys.KEYCODE_SHIFT_LEFT;\r\n\t\tcase Keyboard.KEY_RSHIFT: return Input.Keys.KEYCODE_SHIFT_RIGHT;\r\n\t\tcase Keyboard.KEY_SLASH: return Input.Keys.KEYCODE_SLASH;\r\n\t\tcase Keyboard.KEY_SPACE: return Input.Keys.KEYCODE_SPACE;\r\n\t\tcase Keyboard.KEY_TAB: return Input.Keys.KEYCODE_TAB;\r\n\t\tdefault: return Input.Keys.KEYCODE_UNKNOWN;\r\n\t\t}\r\n\t}","commit_id":"80d5684697aeb822ac08c871a47c4601ed5ac4d0","url":"https://github.com/libgdx/libgdx"},{"original_method":"public static int getKeyCodeReverse (int keyCode) {\r\n\t\tif (keyCode == Input.Keys.KEYCODE_0) return Keyboard.KEY_0;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_1) return Keyboard.KEY_1;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_2) return Keyboard.KEY_2;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_3) return Keyboard.KEY_3;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_4) return Keyboard.KEY_4;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_5) return Keyboard.KEY_5;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_6) return Keyboard.KEY_6;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_7) return Keyboard.KEY_7;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_8) return Keyboard.KEY_8;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_9) return Keyboard.KEY_9;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_A) return Keyboard.KEY_A;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_B) return Keyboard.KEY_B;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_C) return Keyboard.KEY_C;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_D) return Keyboard.KEY_D;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_E) return Keyboard.KEY_E;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_F) return Keyboard.KEY_F;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_G) return Keyboard.KEY_G;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_H) return Keyboard.KEY_H;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_I) return Keyboard.KEY_I;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_J) return Keyboard.KEY_J;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_K) return Keyboard.KEY_K;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_L) return Keyboard.KEY_L;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_M) return Keyboard.KEY_M;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_N) return Keyboard.KEY_N;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_O) return Keyboard.KEY_O;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_P) return Keyboard.KEY_P;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_Q) return Keyboard.KEY_Q;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_R) return Keyboard.KEY_R;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_S) return Keyboard.KEY_S;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_T) return Keyboard.KEY_T;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_U) return Keyboard.KEY_U;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_V) return Keyboard.KEY_V;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_W) return Keyboard.KEY_W;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_X) return Keyboard.KEY_X;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_Y) return Keyboard.KEY_Y;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_Z) return Keyboard.KEY_Z;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_ALT_LEFT) return Keyboard.KEY_LMETA;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_ALT_RIGHT) return Keyboard.KEY_RMETA;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_BACKSLASH) return Keyboard.KEY_BACKSLASH;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_COMMA) return Keyboard.KEY_COMMA;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_DEL) return Keyboard.KEY_DELETE;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_DPAD_LEFT) return Keyboard.KEY_LEFT;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_DPAD_RIGHT) return Keyboard.KEY_RIGHT;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_DPAD_UP) return Keyboard.KEY_UP;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_DPAD_DOWN) return Keyboard.KEY_DOWN;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_ENTER) return Keyboard.KEY_RETURN;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_HOME) return Keyboard.KEY_HOME;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_MINUS) return Keyboard.KEY_MINUS;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_PERIOD) return Keyboard.KEY_PERIOD;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_PLUS) return Keyboard.KEY_ADD;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_SEMICOLON) return Keyboard.KEY_SEMICOLON;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_SHIFT_LEFT) return Keyboard.KEY_LSHIFT;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_SHIFT_RIGHT) return Keyboard.KEY_RSHIFT;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_SLASH) return Keyboard.KEY_SLASH;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_SPACE) return Keyboard.KEY_SPACE;\r\n\t\tif (keyCode == Input.Keys.KEYCODE_TAB) return Keyboard.KEY_TAB;\t\t\r\n\t\treturn Keyboard.KEY_NONE;\r\n\t}","id":69726,"modified_method":"public static int getLwjglKeyCode (int gdxKeyCode) {\r\n\t\tswitch (gdxKeyCode) {\r\n\t\tcase Input.Keys.KEYCODE_0: return Keyboard.KEY_0;\r\n\t\tcase Input.Keys.KEYCODE_1: return Keyboard.KEY_1;\r\n\t\tcase Input.Keys.KEYCODE_2: return Keyboard.KEY_2;\r\n\t\tcase Input.Keys.KEYCODE_3: return Keyboard.KEY_3;\r\n\t\tcase Input.Keys.KEYCODE_4: return Keyboard.KEY_4;\r\n\t\tcase Input.Keys.KEYCODE_5: return Keyboard.KEY_5;\r\n\t\tcase Input.Keys.KEYCODE_6: return Keyboard.KEY_6;\r\n\t\tcase Input.Keys.KEYCODE_7: return Keyboard.KEY_7;\r\n\t\tcase Input.Keys.KEYCODE_8: return Keyboard.KEY_8;\r\n\t\tcase Input.Keys.KEYCODE_9: return Keyboard.KEY_9;\r\n\t\tcase Input.Keys.KEYCODE_A: return Keyboard.KEY_A;\r\n\t\tcase Input.Keys.KEYCODE_B: return Keyboard.KEY_B;\r\n\t\tcase Input.Keys.KEYCODE_C: return Keyboard.KEY_C;\r\n\t\tcase Input.Keys.KEYCODE_D: return Keyboard.KEY_D;\r\n\t\tcase Input.Keys.KEYCODE_E: return Keyboard.KEY_E;\r\n\t\tcase Input.Keys.KEYCODE_F: return Keyboard.KEY_F;\r\n\t\tcase Input.Keys.KEYCODE_G: return Keyboard.KEY_G;\r\n\t\tcase Input.Keys.KEYCODE_H: return Keyboard.KEY_H;\r\n\t\tcase Input.Keys.KEYCODE_I: return Keyboard.KEY_I;\r\n\t\tcase Input.Keys.KEYCODE_J: return Keyboard.KEY_J;\r\n\t\tcase Input.Keys.KEYCODE_K: return Keyboard.KEY_K;\r\n\t\tcase Input.Keys.KEYCODE_L: return Keyboard.KEY_L;\r\n\t\tcase Input.Keys.KEYCODE_M: return Keyboard.KEY_M;\r\n\t\tcase Input.Keys.KEYCODE_N: return Keyboard.KEY_N;\r\n\t\tcase Input.Keys.KEYCODE_O: return Keyboard.KEY_O;\r\n\t\tcase Input.Keys.KEYCODE_P: return Keyboard.KEY_P;\r\n\t\tcase Input.Keys.KEYCODE_Q: return Keyboard.KEY_Q;\r\n\t\tcase Input.Keys.KEYCODE_R: return Keyboard.KEY_R;\r\n\t\tcase Input.Keys.KEYCODE_S: return Keyboard.KEY_S;\r\n\t\tcase Input.Keys.KEYCODE_T: return Keyboard.KEY_T;\r\n\t\tcase Input.Keys.KEYCODE_U: return Keyboard.KEY_U;\r\n\t\tcase Input.Keys.KEYCODE_V: return Keyboard.KEY_V;\r\n\t\tcase Input.Keys.KEYCODE_W: return Keyboard.KEY_W;\r\n\t\tcase Input.Keys.KEYCODE_X: return Keyboard.KEY_X;\r\n\t\tcase Input.Keys.KEYCODE_Y: return Keyboard.KEY_Y;\r\n\t\tcase Input.Keys.KEYCODE_Z: return Keyboard.KEY_Z;\r\n\t\tcase Input.Keys.KEYCODE_ALT_LEFT: return Keyboard.KEY_LMETA;\r\n\t\tcase Input.Keys.KEYCODE_ALT_RIGHT: return Keyboard.KEY_RMETA;\r\n\t\tcase Input.Keys.KEYCODE_BACKSLASH: return Keyboard.KEY_BACKSLASH;\r\n\t\tcase Input.Keys.KEYCODE_COMMA: return Keyboard.KEY_COMMA;\r\n\t\tcase Input.Keys.KEYCODE_DEL: return Keyboard.KEY_DELETE;\r\n\t\tcase Input.Keys.KEYCODE_DPAD_LEFT: return Keyboard.KEY_LEFT;\r\n\t\tcase Input.Keys.KEYCODE_DPAD_RIGHT: return Keyboard.KEY_RIGHT;\r\n\t\tcase Input.Keys.KEYCODE_DPAD_UP: return Keyboard.KEY_UP;\r\n\t\tcase Input.Keys.KEYCODE_DPAD_DOWN: return Keyboard.KEY_DOWN;\r\n\t\tcase Input.Keys.KEYCODE_ENTER: return Keyboard.KEY_RETURN;\r\n\t\tcase Input.Keys.KEYCODE_HOME: return Keyboard.KEY_HOME;\r\n\t\tcase Input.Keys.KEYCODE_MINUS: return Keyboard.KEY_MINUS;\r\n\t\tcase Input.Keys.KEYCODE_PERIOD: return Keyboard.KEY_PERIOD;\r\n\t\tcase Input.Keys.KEYCODE_PLUS: return Keyboard.KEY_ADD;\r\n\t\tcase Input.Keys.KEYCODE_SEMICOLON: return Keyboard.KEY_SEMICOLON;\r\n\t\tcase Input.Keys.KEYCODE_SHIFT_LEFT: return Keyboard.KEY_LSHIFT;\r\n\t\tcase Input.Keys.KEYCODE_SHIFT_RIGHT: return Keyboard.KEY_RSHIFT;\r\n\t\tcase Input.Keys.KEYCODE_SLASH: return Keyboard.KEY_SLASH;\r\n\t\tcase Input.Keys.KEYCODE_SPACE: return Keyboard.KEY_SPACE;\r\n\t\tcase Input.Keys.KEYCODE_TAB: return Keyboard.KEY_TAB;\r\n\t\tdefault: return Keyboard.KEY_NONE;\r\n\t\t}\r\n\t}","commit_id":"80d5684697aeb822ac08c871a47c4601ed5ac4d0","url":"https://github.com/libgdx/libgdx"},{"original_method":"/**\r\n\t * Sets the widget in the GUI's root pane. By default the root pane takes up the whole screen.\r\n\t */\r\n\tpublic void setWidget (Widget widget) {\r\n\t\tWidget root = gui.getRootPane();\r\n\t\troot.removeAllChildren();\r\n\t\troot.add(widget);\r\n\t}","id":69727,"modified_method":"/**\r\n\t * Sets the widget in the GUI's root pane. By default the root pane takes up the whole screen.\r\n\t * @param widget If null, this method is equivalent to {@link #clear()}.\r\n\t */\r\n\tpublic void setWidget (Widget widget) {\r\n\t\tWidget root = gui.getRootPane();\r\n\t\troot.removeAllChildren();\r\n\t\tif (widget != null) root.add(widget);\r\n\t}","commit_id":"80d5684697aeb822ac08c871a47c4601ed5ac4d0","url":"https://github.com/libgdx/libgdx"},{"original_method":"public boolean touchUp (int x, int y, int pointer) {\r\n\t\treturn gui.handleMouse(x, y, pointer, false);\r\n\t}","id":69728,"modified_method":"public boolean touchUp (int x, int y, int pointer) {\r\n\t\tboolean handled = gui.handleMouse(x, y, pointer, false);\r\n\t\tgui.handleMouse(-9999, -9999, -1, true);\r\n\t\treturn handled;\r\n\t}","commit_id":"80d5684697aeb822ac08c871a47c4601ed5ac4d0","url":"https://github.com/libgdx/libgdx"},{"original_method":"static public int getTwlKeyCode (int gdxKeyCode) {\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_0) return Event.KEY_0;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_1) return Event.KEY_1;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_2) return Event.KEY_2;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_3) return Event.KEY_3;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_4) return Event.KEY_4;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_5) return Event.KEY_5;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_6) return Event.KEY_6;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_7) return Event.KEY_7;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_8) return Event.KEY_8;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_9) return Event.KEY_9;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_A) return Event.KEY_A;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_B) return Event.KEY_B;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_C) return Event.KEY_C;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_D) return Event.KEY_D;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_E) return Event.KEY_E;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_F) return Event.KEY_F;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_G) return Event.KEY_G;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_H) return Event.KEY_H;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_I) return Event.KEY_I;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_J) return Event.KEY_J;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_K) return Event.KEY_K;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_L) return Event.KEY_L;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_M) return Event.KEY_M;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_N) return Event.KEY_N;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_O) return Event.KEY_O;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_P) return Event.KEY_P;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_Q) return Event.KEY_Q;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_R) return Event.KEY_R;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_S) return Event.KEY_S;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_T) return Event.KEY_T;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_U) return Event.KEY_U;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_V) return Event.KEY_V;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_W) return Event.KEY_W;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_X) return Event.KEY_X;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_Y) return Event.KEY_Y;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_Z) return Event.KEY_Z;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_ALT_LEFT) return Event.KEY_LMETA;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_ALT_RIGHT) return Event.KEY_RMETA;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_BACKSLASH) return Event.KEY_BACKSLASH;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_COMMA) return Event.KEY_COMMA;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_DEL) return Event.KEY_DELETE;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_DPAD_LEFT) return Event.KEY_LEFT;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_DPAD_RIGHT) return Event.KEY_RIGHT;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_DPAD_UP) return Event.KEY_UP;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_DPAD_DOWN) return Event.KEY_DOWN;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_ENTER) return Event.KEY_RETURN;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_HOME) return Event.KEY_HOME;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_MINUS) return Event.KEY_MINUS;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_PERIOD) return Event.KEY_PERIOD;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_PLUS) return Event.KEY_ADD;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_SEMICOLON) return Event.KEY_SEMICOLON;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_SHIFT_LEFT) return Event.KEY_LSHIFT;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_SHIFT_RIGHT) return Event.KEY_RSHIFT;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_SLASH) return Event.KEY_SLASH;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_SPACE) return Event.KEY_SPACE;\r\n\t\tif (gdxKeyCode == Input.Keys.KEYCODE_TAB) return Event.KEY_TAB;\r\n\t\treturn Event.KEY_NONE;\r\n\t}","id":69729,"modified_method":"static public int getTwlKeyCode (int gdxKeyCode) {\r\n\t\tswitch (gdxKeyCode) {\r\n\t\tcase Input.Keys.KEYCODE_0: return Event.KEY_0;\r\n\t\tcase Input.Keys.KEYCODE_1: return Event.KEY_1;\r\n\t\tcase Input.Keys.KEYCODE_2: return Event.KEY_2;\r\n\t\tcase Input.Keys.KEYCODE_3: return Event.KEY_3;\r\n\t\tcase Input.Keys.KEYCODE_4: return Event.KEY_4;\r\n\t\tcase Input.Keys.KEYCODE_5: return Event.KEY_5;\r\n\t\tcase Input.Keys.KEYCODE_6: return Event.KEY_6;\r\n\t\tcase Input.Keys.KEYCODE_7: return Event.KEY_7;\r\n\t\tcase Input.Keys.KEYCODE_8: return Event.KEY_8;\r\n\t\tcase Input.Keys.KEYCODE_9: return Event.KEY_9;\r\n\t\tcase Input.Keys.KEYCODE_A: return Event.KEY_A;\r\n\t\tcase Input.Keys.KEYCODE_B: return Event.KEY_B;\r\n\t\tcase Input.Keys.KEYCODE_C: return Event.KEY_C;\r\n\t\tcase Input.Keys.KEYCODE_D: return Event.KEY_D;\r\n\t\tcase Input.Keys.KEYCODE_E: return Event.KEY_E;\r\n\t\tcase Input.Keys.KEYCODE_F: return Event.KEY_F;\r\n\t\tcase Input.Keys.KEYCODE_G: return Event.KEY_G;\r\n\t\tcase Input.Keys.KEYCODE_H: return Event.KEY_H;\r\n\t\tcase Input.Keys.KEYCODE_I: return Event.KEY_I;\r\n\t\tcase Input.Keys.KEYCODE_J: return Event.KEY_J;\r\n\t\tcase Input.Keys.KEYCODE_K: return Event.KEY_K;\r\n\t\tcase Input.Keys.KEYCODE_L: return Event.KEY_L;\r\n\t\tcase Input.Keys.KEYCODE_M: return Event.KEY_M;\r\n\t\tcase Input.Keys.KEYCODE_N: return Event.KEY_N;\r\n\t\tcase Input.Keys.KEYCODE_O: return Event.KEY_O;\r\n\t\tcase Input.Keys.KEYCODE_P: return Event.KEY_P;\r\n\t\tcase Input.Keys.KEYCODE_Q: return Event.KEY_Q;\r\n\t\tcase Input.Keys.KEYCODE_R: return Event.KEY_R;\r\n\t\tcase Input.Keys.KEYCODE_S: return Event.KEY_S;\r\n\t\tcase Input.Keys.KEYCODE_T: return Event.KEY_T;\r\n\t\tcase Input.Keys.KEYCODE_U: return Event.KEY_U;\r\n\t\tcase Input.Keys.KEYCODE_V: return Event.KEY_V;\r\n\t\tcase Input.Keys.KEYCODE_W: return Event.KEY_W;\r\n\t\tcase Input.Keys.KEYCODE_X: return Event.KEY_X;\r\n\t\tcase Input.Keys.KEYCODE_Y: return Event.KEY_Y;\r\n\t\tcase Input.Keys.KEYCODE_Z: return Event.KEY_Z;\r\n\t\tcase Input.Keys.KEYCODE_ALT_LEFT: return Event.KEY_LMETA;\r\n\t\tcase Input.Keys.KEYCODE_ALT_RIGHT: return Event.KEY_RMETA;\r\n\t\tcase Input.Keys.KEYCODE_BACKSLASH: return Event.KEY_BACKSLASH;\r\n\t\tcase Input.Keys.KEYCODE_COMMA: return Event.KEY_COMMA;\r\n\t\tcase Input.Keys.KEYCODE_DEL: return Event.KEY_DELETE;\r\n\t\tcase Input.Keys.KEYCODE_DPAD_LEFT: return Event.KEY_LEFT;\r\n\t\tcase Input.Keys.KEYCODE_DPAD_RIGHT: return Event.KEY_RIGHT;\r\n\t\tcase Input.Keys.KEYCODE_DPAD_UP: return Event.KEY_UP;\r\n\t\tcase Input.Keys.KEYCODE_DPAD_DOWN: return Event.KEY_DOWN;\r\n\t\tcase Input.Keys.KEYCODE_ENTER: return Event.KEY_RETURN;\r\n\t\tcase Input.Keys.KEYCODE_HOME: return Event.KEY_HOME;\r\n\t\tcase Input.Keys.KEYCODE_MINUS: return Event.KEY_MINUS;\r\n\t\tcase Input.Keys.KEYCODE_PERIOD: return Event.KEY_PERIOD;\r\n\t\tcase Input.Keys.KEYCODE_PLUS: return Event.KEY_ADD;\r\n\t\tcase Input.Keys.KEYCODE_SEMICOLON: return Event.KEY_SEMICOLON;\r\n\t\tcase Input.Keys.KEYCODE_SHIFT_LEFT: return Event.KEY_LSHIFT;\r\n\t\tcase Input.Keys.KEYCODE_SHIFT_RIGHT: return Event.KEY_RSHIFT;\r\n\t\tcase Input.Keys.KEYCODE_SLASH: return Event.KEY_SLASH;\r\n\t\tcase Input.Keys.KEYCODE_SPACE: return Event.KEY_SPACE;\r\n\t\tcase Input.Keys.KEYCODE_TAB: return Event.KEY_TAB;\r\n\t\tdefault: return Event.KEY_NONE;\r\n\t\t}\r\n\t}","commit_id":"80d5684697aeb822ac08c871a47c4601ed5ac4d0","url":"https://github.com/libgdx/libgdx"},{"original_method":"public abstract void restartRunProfile(@NotNull Project project,\r\n                                         @NotNull Executor executor,\r\n                                         @NotNull ExecutionTarget target,\r\n                                         @NotNull RunnerAndConfigurationSettings configuration);","id":69730,"modified_method":"public abstract void restartRunProfile(@NotNull Project project,\n                                         @NotNull Executor executor,\n                                         @NotNull ExecutionTarget target,\n                                         @NotNull RunnerAndConfigurationSettings configuration,\n                                         @Nullable ProcessHandler processHandler);","commit_id":"0e2bdfe351599ff14b87c61e3a92401c72b811e0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\r\n  public void restartRunProfile(@NotNull final Project project,\r\n                                @NotNull final Executor executor,\r\n                                @NotNull final ExecutionTarget target,\r\n                                @NotNull final RunnerAndConfigurationSettings configuration) {\r\n    RunManagerImpl runManager = RunManagerImpl.getInstanceImpl(project);\r\n    final RunManagerConfig config = runManager.getConfig();\r\n    final List<Pair<RunContentDescriptor, Executor>> pairs = getRunningDescriptors(configuration);\r\n\r\n    for (Pair<RunContentDescriptor, Executor> pair : pairs) {\r\n      ProcessHandler processHandler = pair.getFirst().getProcessHandler();\r\n      if (processHandler == null)\r\n        continue;\r\n      if (!processHandler.isProcessTerminated()) {\r\n        if (config.isRestartRequiresConfirmation()) {\r\n          DialogWrapper.DoNotAskOption option = new DialogWrapper.DoNotAskOption() {\r\n            @Override\r\n            public boolean isToBeShown() {\r\n              return config.isRestartRequiresConfirmation();\r\n            }\r\n\r\n            @Override\r\n            public void setToBeShown(boolean value, int exitCode) {\r\n              config.setRestartRequiresConfirmation(value);\r\n            }                                                                                  /**/\r\n\r\n            @Override\r\n            public boolean canBeHidden() {\r\n              return true;\r\n            }\r\n\r\n            @Override\r\n            public boolean shouldSaveOptionsOnCancel() {\r\n              return false;\r\n            }\r\n\r\n            @Override\r\n            public String getDoNotShowMessage() {\r\n              return CommonBundle.message(\"dialog.options.do.not.show\");\r\n            }\r\n          };\r\n          if (Messages.OK != Messages.showOkCancelDialog(ExecutionBundle.message(\"rerun.confirmation.message\", configuration.getName()),\r\n                                                         ExecutionBundle.message(\"rerun.confirmation.title\") + \" (\"+pair.getSecond().getId()+\")\",\r\n                                                         CommonBundle.message(\"button.ok\"),\r\n                                                         CommonBundle.message(\"button.cancel\"),\r\n                                                         Messages.getQuestionIcon(), option)) {\r\n            return;\r\n          }\r\n        }\r\n        stop(processHandler);\r\n        for (\r\n          Iterator<Trinity<RunContentDescriptor, RunnerAndConfigurationSettings, Executor>> iterator = myRunningConfigurations.iterator();\r\n          iterator.hasNext(); ) {\r\n          Trinity<RunContentDescriptor, RunnerAndConfigurationSettings, Executor> trinity = iterator.next();\r\n          if (trinity.getFirst() == pair.getFirst()) {\r\n            iterator.remove();\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (pairs.isEmpty()) {\r\n      ProgramRunnerUtil.executeConfiguration(project, configuration, executor, target);\r\n      return;\r\n    }\r\n\r\n    Runnable runnable = new Runnable() {\r\n      @Override\r\n      public void run() {\r\n        for (Pair<RunContentDescriptor, Executor> pair : pairs) {\r\n          ProcessHandler processHandler = pair.getFirst().getProcessHandler();\r\n          if (processHandler == null)\r\n            continue;\r\n          if (!processHandler.isProcessTerminated()) {\r\n            awaitingTerminationAlarm.addRequest(this, 100);\r\n            return;\r\n          }\r\n        }\r\n        ProgramRunnerUtil.executeConfiguration(project, configuration, executor, target);\r\n      }\r\n    };\r\n    awaitingTerminationAlarm.addRequest(runnable, 100);\r\n  }","id":69731,"modified_method":"@Override\n  public void restartRunProfile(@NotNull final Project project,\n                                @NotNull final Executor executor,\n                                @NotNull final ExecutionTarget target,\n                                @NotNull final RunnerAndConfigurationSettings configuration,\n                                @Nullable final ProcessHandler handler) {\n    RunManagerImpl runManager = RunManagerImpl.getInstanceImpl(project);\n    final RunManagerConfig config = runManager.getConfig();\n    final List<ProcessHandler> allHandlers = new ArrayList<ProcessHandler>();\n    final List<ProcessHandler> handlersToStop = new ArrayList<ProcessHandler>();\n    final List<Pair<RunContentDescriptor, Executor>> pairs = getRunningDescriptors(configuration);\n    if (configuration.isSingleton()) {\n      for (Pair<RunContentDescriptor, Executor> pair : pairs) {\n        allHandlers.add(pair.getFirst().getProcessHandler());\n      }\n    }\n    else if (handler != null) {\n      allHandlers.add(handler);\n    }\n\n    if (!allHandlers.isEmpty()) {\n      for (Pair<RunContentDescriptor, Executor> pair : pairs) {\n        ProcessHandler processHandler = pair.getFirst().getProcessHandler();\n        if (processHandler == null || !allHandlers.contains(processHandler)) {\n          continue;\n        }\n        if (!processHandler.isProcessTerminated()) {\n          if (config.isRestartRequiresConfirmation()) {\n            DialogWrapper.DoNotAskOption option = new DialogWrapper.DoNotAskOption() {\n              @Override\n              public boolean isToBeShown() {\n                return config.isRestartRequiresConfirmation();\n              }\n\n              @Override\n              public void setToBeShown(boolean value, int exitCode) {\n                config.setRestartRequiresConfirmation(value);\n              }\n\n              @Override\n              public boolean canBeHidden() {\n                return true;\n              }\n\n              @Override\n              public boolean shouldSaveOptionsOnCancel() {\n                return false;\n              }\n\n              @Override\n              public String getDoNotShowMessage() {\n                return CommonBundle.message(\"dialog.options.do.not.show\");\n              }\n            };\n            if (Messages.OK != Messages.showOkCancelDialog(ExecutionBundle.message(\"rerun.confirmation.message\", configuration.getName()),\n                                                           ExecutionBundle.message(\"rerun.confirmation.title\") +\n                                                           \" (\" +\n                                                           pair.getSecond().getId() +\n                                                           \")\",\n                                                           CommonBundle.message(\"button.ok\"),\n                                                           CommonBundle.message(\"button.cancel\"),\n                                                           Messages.getQuestionIcon(), option)) {\n              return;\n            }\n          }\n          handlersToStop.add(processHandler);\n          stop(pair.getFirst());\n        }\n      }\n    }\n\n    if (handlersToStop.isEmpty()) {\n      ProgramRunnerUtil.executeConfiguration(project, configuration, executor, target);\n      return;\n    }\n\n    Runnable runnable = new Runnable() {\n      @Override\n      public void run() {\n        for (ProcessHandler processHandler : handlersToStop) {\n          if (!processHandler.isProcessTerminated()) {\n            awaitingTerminationAlarm.addRequest(this, 100);\n            return;\n          }\n        }\n        ProgramRunnerUtil.executeConfiguration(project, configuration, executor, target);\n      }\n    };\n    awaitingTerminationAlarm.addRequest(runnable, 100);\n  }","commit_id":"0e2bdfe351599ff14b87c61e3a92401c72b811e0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(final AnActionEvent e) {\r\n      final DataContext dataContext = e.getDataContext();\r\n      final Project project = PlatformDataKeys.PROJECT.getData(dataContext);\r\n      if (project == null || project.isDisposed()) {\r\n        return;\r\n      }\r\n      final RunnerAndConfigurationSettings configuration = getConfiguration(project);\r\n      if (configuration == null) {\r\n        return;\r\n      }\r\n\r\n      ExecutionTarget target = ExecutionTargetManager.getActiveTarget(project);\r\n      if (configuration.isSingleton()) {\r\n        ExecutionManager.getInstance(project).restartRunProfile(project, myExecutor, target, configuration);\r\n      } else {\r\n        ProgramRunnerUtil.executeConfiguration(project, configuration, myExecutor, target);\r\n      }\r\n    }","id":69732,"modified_method":"public void actionPerformed(final AnActionEvent e) {\n      final DataContext dataContext = e.getDataContext();\n      final Project project = PlatformDataKeys.PROJECT.getData(dataContext);\n      if (project == null || project.isDisposed()) {\n        return;\n      }\n      final RunnerAndConfigurationSettings configuration = getConfiguration(project);\n      if (configuration == null) {\n        return;\n      }\n\n      ExecutionTarget target = ExecutionTargetManager.getActiveTarget(project);\n      RunContentDescriptor runContentDescriptor = RunContentManager.RUN_CONTENT_DESCRIPTOR.getData(dataContext);\n      ProcessHandler processHandler = runContentDescriptor != null ? runContentDescriptor.getProcessHandler(): null;\n      ExecutionManager.getInstance(project).restartRunProfile(project, myExecutor, target, configuration, processHandler);\n    }","commit_id":"0e2bdfe351599ff14b87c61e3a92401c72b811e0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(final AnActionEvent event) {\n    final Presentation presentation = event.getPresentation();\n    String name = myEnvironment.getRunProfile().getName();\n    if (name.startsWith(ActionsBundle.message(\"action.RerunFailedTests.text\")))\n      name = myEnvironment.getRunnerAndConfigurationSettings().getName();\n    presentation.setText(ExecutionBundle.message(\"rerun.configuration.action.name\", name));\n    final boolean isRunning = myProcessHandler != null && !myProcessHandler.isProcessTerminated();\n    if (myProcessHandler != null && !isRunning) {\n      myProcessHandler = null; // already terminated\n    }\n    presentation.setIcon(isRunning ? STOP_AND_START_ICON : myIcon);\n    boolean isTerminating = myProcessHandler != null && myProcessHandler.isProcessTerminating();\n    boolean isStarting = ExecutorRegistry.getInstance().isStarting(myEnvironment.getProject(), myExecutor.getId(), myRunner.getRunnerId());\n    presentation.setEnabled(!isStarting && !isTerminating);\n  }","id":69733,"modified_method":"public void update(final AnActionEvent event) {\n    final Presentation presentation = event.getPresentation();\n    String name = myEnvironment.getRunProfile().getName();\n    if (name.startsWith(ActionsBundle.message(\"action.RerunFailedTests.text\"))) {\n      RunnerAndConfigurationSettings settings = myEnvironment.getRunnerAndConfigurationSettings();\n      if (settings != null)\n        name = settings.getName();\n    }\n    final boolean isRunning = myProcessHandler != null && !myProcessHandler.isProcessTerminated();\n    boolean isTerminating = myProcessHandler != null && myProcessHandler.isProcessTerminating();\n    boolean isStarting = ExecutorRegistry.getInstance().isStarting(myEnvironment.getProject(), myExecutor.getId(), myRunner.getRunnerId());\n\n    presentation.setText(ExecutionBundle.message(\"rerun.configuration.action.name\", name));\n    presentation.setIcon(isRunning ? STOP_AND_START_ICON : myIcon);\n    presentation.setEnabled(!isStarting && !isTerminating);\n  }","commit_id":"0e2bdfe351599ff14b87c61e3a92401c72b811e0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(final AnActionEvent e) {\n    ExecutionManager.getInstance(myEnvironment.getProject()).restartRunProfile(myEnvironment.getProject(),\n                                                                               myExecutor,\n                                                                               myEnvironment.getExecutionTarget(),\n                                                                               myEnvironment.getRunnerAndConfigurationSettings());\n  }","id":69734,"modified_method":"public void actionPerformed(final AnActionEvent e) {\n    Project project = myEnvironment.getProject();\n    RunnerAndConfigurationSettings settings = myEnvironment.getRunnerAndConfigurationSettings();\n    if (project == null || settings == null)\n      return;\n    ExecutionManager.getInstance(project).restartRunProfile(project,\n                                                            myExecutor,\n                                                            myEnvironment.getExecutionTarget(),\n                                                            settings,\n                                                            myProcessHandler);\n  }","commit_id":"0e2bdfe351599ff14b87c61e3a92401c72b811e0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void restart() {\n    doRestart(DataManager.getInstance().getDataContext(myDescriptor.getComponent()));\n  }","id":69735,"modified_method":"public void restart() {\n    final Project project = PlatformDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext(myDescriptor.getComponent()));\n    if (ExecutorRegistry.getInstance().isStarting(project, myExecutor.getId(), myRunner.getRunnerId())) {\n      return;\n    }\n    try {\n      final ExecutionEnvironment old = myEnvironment;\n      myRunner.execute(myExecutor, new ExecutionEnvironment(old.getRunProfile(),\n                                                            old.getExecutionTarget(),\n                                                            project,\n                                                            old.getRunnerSettings(),\n                                                            old.getConfigurationSettings(),\n                                                            myDescriptor,\n                                                            old.getRunnerAndConfigurationSettings()));\n    }\n    catch (RunCanceledByUserException ignore) {\n    }\n    catch (ExecutionException e1) {\n      Messages.showErrorDialog(project, e1.getMessage(), ExecutionBundle.message(\"restart.error.message.title\"));\n    }\n  }","commit_id":"0e2bdfe351599ff14b87c61e3a92401c72b811e0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void perform(final ConfigurationContext context) {\r\n    RunnerAndConfigurationSettings configuration = context.findExisting();\r\n    final RunManagerEx runManager = (RunManagerEx)context.getRunManager();\r\n    if (configuration == null) {\r\n      configuration = context.getConfiguration();\r\n      if (configuration == null) {\r\n        return;\r\n      }\r\n      runManager.setTemporaryConfiguration(configuration);\r\n    }\r\n    runManager.setActiveConfiguration(configuration);\r\n\r\n    ProgramRunnerUtil.executeConfiguration(context.getProject(), configuration, myExecutor);\r\n  }","id":69736,"modified_method":"protected void perform(final ConfigurationContext context) {\n    RunnerAndConfigurationSettings configuration = context.findExisting();\n    final RunManagerEx runManager = (RunManagerEx)context.getRunManager();\n    if (configuration == null) {\n      configuration = context.getConfiguration();\n      if (configuration == null) {\n        return;\n      }\n      runManager.setTemporaryConfiguration(configuration);\n    }\n    runManager.setSelectedConfiguration(configuration);\n    Project project = context.getProject();\n    if (configuration.isSingleton()) {\n      ExecutionTarget activeTarget = ExecutionTargetManager.getActiveTarget(project);\n      ExecutionManager.getInstance(project).restartRunProfile(project,\n                                                              myExecutor,\n                                                              activeTarget,\n                                                              configuration,\n                                                              null);\n    } else\n    {\n      ProgramRunnerUtil.executeConfiguration(project, configuration, myExecutor);\n    }\n  }","commit_id":"0e2bdfe351599ff14b87c61e3a92401c72b811e0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void restart() {\n    Project project = myEnvironment.getProject();\n    if (!ExecutorRegistry.getInstance().isStarting(project, myExecutor.getId(), getRunnerId())) {\n      ExecutionManager.getInstance(project).restartRunProfile(myRunner, myEnvironment, myDescriptor);\n    }\n  }","id":69737,"modified_method":"public void restart() {\n    Project project = myEnvironment.getProject();\n    if (!ExecutorRegistry.getInstance().isStarting(project, myExecutor.getId(), getRunnerId())) {\n      ProgramRunner runner = myRunner == null ? RunnerRegistry.getInstance().findRunnerById(myEnvironment.getRunnerId()) : myRunner;\n      ExecutionManager.getInstance(project).restartRunProfile(runner, myEnvironment, myDescriptor);\n    }\n  }","commit_id":"931cbfa23bc7c69947ef79add120c758d5475324","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void execute(@NotNull Project project,\n                              @NotNull Executor executor,\n                              @NotNull RunnerAndConfigurationSettings configuration,\n                              boolean created) {\n    RunManagerEx runManager = RunManagerEx.getInstanceEx(project);\n    if (created) {\n      runManager.setTemporaryConfiguration(configuration);\n    }\n    runManager.setSelectedConfiguration(configuration);\n    if (configuration.isSingleton()) {\n      ExecutionTarget activeTarget = ExecutionTargetManager.getActiveTarget(project);\n      ExecutionManager.getInstance(project).restartRunProfile(project,\n                                                              executor,\n                                                              activeTarget,\n                                                              configuration,\n                                                              (RunContentDescriptor)null);\n    }\n    else {\n      ProgramRunnerUtil.executeConfiguration(project, configuration, executor);\n    }\n  }","id":69738,"modified_method":"private static void execute(@NotNull Project project,\n                              @NotNull Executor executor,\n                              @NotNull RunnerAndConfigurationSettings configuration,\n                              boolean created) {\n    RunManagerEx runManager = RunManagerEx.getInstanceEx(project);\n    if (created) {\n      runManager.setTemporaryConfiguration(configuration);\n    }\n    runManager.setSelectedConfiguration(configuration);\n    if (configuration.isSingleton()) {\n      ProgramRunner programRunner = ProgramRunnerUtil.getRunner(executor.getId(), configuration);\n      if (programRunner != null) {\n        ExecutionEnvironment env = new ExecutionEnvironment(executor, programRunner, configuration, project);\n        ExecutionManager.getInstance(project).restartRunProfile(programRunner, env, null);\n      }\n    }\n    else {\n      ProgramRunnerUtil.executeConfiguration(project, configuration, executor);\n    }\n  }","commit_id":"870ad4be62f6ed296fafafd6a208119007c83ed9","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@Nullable\n  private static JstdRuntimeConfigurationProducer getJstdRuntimeConfigurationProducer() {\n    return RuntimeConfigurationProducer.getInstance(JstdRuntimeConfigurationProducer.class);\n  }","id":69739,"modified_method":"@Nullable\n  private static RunConfigurationProducer getJstdRunConfigurationProducer() {\n    return RunConfigurationProducer.getInstance(JstdRunConfigurationProducer.class);\n  }","commit_id":"870ad4be62f6ed296fafafd6a208119007c83ed9","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private static void execute(@NotNull Executor executor, @NotNull PsiElement element) {\n    Project project = element.getProject();\n    Editor editor = FileEditorManager.getInstance(project).getSelectedTextEditor();\n    if (editor == null) {\n      return;\n    }\n    DataContext dataContext = DataManager.getInstance().getDataContext(editor.getComponent());\n    JstdRuntimeConfigurationProducer jstdOriginalProducer = getJstdRuntimeConfigurationProducer();\n    if (jstdOriginalProducer == null) {\n      return;\n    }\n    Location<PsiElement> location = PsiLocation.fromPsiElement(element);\n    ConfigurationContext context = ConfigurationContext.getFromContext(dataContext);\n    RuntimeConfigurationProducer producer = jstdOriginalProducer.createProducer(location, context);\n    boolean created = false;\n    RunnerAndConfigurationSettings configuration = producer.findExistingConfiguration(location, context);\n    if (configuration == null) {\n      created = true;\n      configuration = producer.getConfiguration();\n      if (configuration == null) {\n        return;\n      }\n    }\n\n    execute(project, executor, configuration, created);\n  }","id":69740,"modified_method":"private static void execute(@NotNull Executor executor, @NotNull PsiElement element) {\n    Project project = element.getProject();\n    Editor editor = FileEditorManager.getInstance(project).getSelectedTextEditor();\n    if (editor == null) {\n      return;\n    }\n    DataContext dataContext = DataManager.getInstance().getDataContext(editor.getComponent());\n    RunConfigurationProducer jstdOriginalProducer = getJstdRunConfigurationProducer();\n    if (jstdOriginalProducer == null) {\n      return;\n    }\n    ConfigurationContext context = ConfigurationContext.getFromContext(dataContext);\n    boolean created = false;\n    RunnerAndConfigurationSettings configuration = jstdOriginalProducer.findExistingConfiguration(context);\n    if (configuration == null) {\n      created = true;\n      ConfigurationFromContext fromContext = jstdOriginalProducer.createConfigurationFromContext(context);\n      if (fromContext != null) {\n        configuration = fromContext.getConfigurationSettings();\n      }\n      else {\n        return;\n      }\n    }\n\n    execute(project, executor, configuration, created);\n  }","commit_id":"870ad4be62f6ed296fafafd6a208119007c83ed9","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"protected void drawImpl(DrawContext dc)\n    {\n        if (endpointMoved)\n            computeLinkEndpoints();\n\n        //if (dc.drawAbsoluteLinks) dc.setAbsoluteDrawing(true);\n\n        //super.draw(dc);\n\n        //BasicStroke stroke = this.stroke;\n\n        // If either end of this link is scaled, scale stroke\n        // to smallest of the scales (even better: render the stroke\n        // in a variable width narrowing as it went...)\n        // todo: cache this scaled stroke\n        // todo: do we really even want this functionality?\n        /*\n        if (head != null && tail != null) { // todo cleanup\n        if ((head != null && head.getScale() != 1f) || (tail != null && tail.getScale() != 1f)) {\n            float strokeWidth = getStrokeWidth();\n            if (head.getScale() < tail.getScale())\n                strokeWidth *= head.getScale();\n            else\n                strokeWidth *= tail.getScale();\n            //g.setStroke(new BasicStroke(strokeWidth));\n            stroke = new BasicStroke(strokeWidth);\n        } else {\n            //g.setStroke(this.stroke);\n            stroke = this.stroke;\n        }\n        }\n        */\n        final Graphics2D g = dc.g;\n        \n        if (isSelected() && dc.isInteractive()) {\n            g.setColor(COLOR_HIGHLIGHT);\n            g.setStroke(new BasicStroke(stroke.getLineWidth() + 5, BasicStroke.CAP_ROUND, BasicStroke.JOIN_BEVEL));//todo:config\n            g.draw(getShape());\n        }\n\n        if (DEBUG.BOXES) {\n            // Split the curves into green & red halves for debugging\n            Composite composite = dc.g.getComposite();\n            dc.g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f));\n            \n            if (curveControls == 1) {\n                QuadCurve2D left = new QuadCurve2D.Float();\n                QuadCurve2D right = new QuadCurve2D.Float();\n                quadCurve.subdivide(left,right);\n                g.setColor(Color.green);\n                g.setStroke(new BasicStroke(mStrokeWidth.get()+4));\n                g.draw(left);\n                g.setColor(Color.red);\n                g.draw(right);\n            } else if (curveControls == 2) {\n                CubicCurve2D left = new CubicCurve2D.Float();\n                CubicCurve2D right = new CubicCurve2D.Float();\n                cubicCurve.subdivide(left,right);\n                g.setColor(Color.green);\n                g.setStroke(new BasicStroke(mStrokeWidth.get()+4));\n                g.draw(left);\n                g.setColor(Color.red);\n                g.draw(right);\n            }\n            dc.g.setComposite(composite);\n        }\n        \n        //-------------------------------------------------------\n        // Draw the stroke\n        //-------------------------------------------------------\n\n        /*\n        if (isIndicated() && dc.isInteractive())\n            g.setColor(COLOR_INDICATION);\n        //else if (isSelected())\n        //  g.setColor(COLOR_SELECTION);\n        else\n        */\n\n        g.setColor(getStrokeColor());\n        if (dc.drawAbsoluteLinks)\n            dc.setAbsoluteStroke(stroke.getLineWidth());\n        else\n            g.setStroke(stroke);\n\n        if (this.curve != null) {\n            //-------------------------------------------------------\n            // draw the curve\n            //-------------------------------------------------------\n\n            if (DEBUG.BOXES) {\n                Point2D.Float last = null;\n                Line2D seg = new Line2D.Float();\n                for (Point2D.Float curPoint : mPoints) {\n                    if (last != null) {\n                        seg.setLine(last, curPoint);\n                        dc.g.draw(seg);\n                    }\n                    last = curPoint;\n                }\n            } else {\n                g.draw(this.curve);\n            }\n                    \n            if (dc.isInteractive() && (isSelected() || DEBUG.BOXES)) {\n                //-------------------------------------------------------\n                // draw faint lines to control points if selected TODO: need to do this\n                // at time we paint the selection, so these are always on top -- perhaps\n                // have a LWComponent drawSkeleton, who's default is to just draw an\n                // outline shape, which can replace the manual code in MapViewer, and in\n                // the case of LWLink, can also draw the control lines.\n                //-------------------------------------------------------\n                g.setColor(COLOR_SELECTION); // todo: move these to DrawContext\n                //g.setColor(Color.red);\n                dc.setAbsoluteStroke(0.5);\n                if (curveControls == 2) {\n                    Line2D ctrlLine = new Line2D.Float(line.getP1(), cubicCurve.getCtrlP1());\n                    g.draw(ctrlLine);\n                    //float clx1 = line.x1 + cubicCurve.ctrlx\n                    ctrlLine.setLine(line.getP2(), cubicCurve.getCtrlP2());\n                    g.draw(ctrlLine);\n                } else {\n                    Line2D ctrlLine = new Line2D.Float(line.getP1(), quadCurve.getCtrlPt());\n                    g.draw(ctrlLine);\n                    ctrlLine.setLine(line.getP2(), quadCurve.getCtrlPt());\n                    g.draw(ctrlLine);\n                }\n                g.setStroke(stroke);\n            }\n            //g.drawLine((int)line.getX1(), (int)line.getY1(), (int)curve.getCtrlX(), (int)curve.getCtrlY());\n            //g.drawLine((int)line.getX2(), (int)line.getY2(), (int)curve.getCtrlX(), (int)curve.getCtrlY());\n        } else {\n            //-------------------------------------------------------\n            // draw the line\n            //-------------------------------------------------------\n            g.draw(this.line);\n        }\n\n        if (mArrowState.get() > 0)\n            drawArrows(dc);\n\n        if (!isNestedLink())\n            drawLinkDecorations(dc);\n        \n        boolean headgroup = head instanceof LWGroup;\n        boolean tailgroup = tail instanceof LWGroup;\n        if (DEBUG.BOXES && ((headgroup || tailgroup) && dc.isInteractive() || DEBUG.BOXES)) {\n            float size = 8;\n            if (dc.zoom < 1)\n                size /= dc.zoom;\n            RectangularShape dot = new java.awt.geom.Ellipse2D.Float(0,0, size,size);\n            Composite composite = dc.g.getComposite();\n            dc.g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f));\n            dc.g.setColor(Color.green);\n            if (headgroup || DEBUG.BOXES) {\n                dot.setFrameFromCenter(headX, headY, headX+size/2, headY+size/2);\n                dc.g.fill(dot);\n            }\n            if (tailgroup || DEBUG.BOXES) {\n                dot.setFrameFromCenter(tailX, tailY, tailX+size/2, tailY+size/2);\n                if (DEBUG.BOXES) dc.g.setColor(Color.red);\n                dc.g.fill(dot);\n            }\n            dc.g.setComposite(composite);\n        }\n                \n        if (DEBUG.CONTAINMENT) { dc.setAbsoluteStroke(0.1); g.draw(getBounds()); }\n\n        //if (dc.drawAbsoluteLinks) dc.setAbsoluteDrawing(false);\n        \n    }","id":69741,"modified_method":"protected void drawImpl(DrawContext dc)\n    {\n        if (endpointMoved)\n            computeLinkEndpoints();\n\n        //if (dc.drawAbsoluteLinks) dc.setAbsoluteDrawing(true);\n\n        //super.draw(dc);\n\n        //BasicStroke stroke = this.stroke;\n\n        // If either end of this link is scaled, scale stroke\n        // to smallest of the scales (even better: render the stroke\n        // in a variable width narrowing as it went...)\n        // todo: cache this scaled stroke\n        // todo: do we really even want this functionality?\n        /*\n        if (head != null && tail != null) { // todo cleanup\n        if ((head != null && head.getScale() != 1f) || (tail != null && tail.getScale() != 1f)) {\n            float strokeWidth = getStrokeWidth();\n            if (head.getScale() < tail.getScale())\n                strokeWidth *= head.getScale();\n            else\n                strokeWidth *= tail.getScale();\n            //g.setStroke(new BasicStroke(strokeWidth));\n            stroke = new BasicStroke(strokeWidth);\n        } else {\n            //g.setStroke(this.stroke);\n            stroke = this.stroke;\n        }\n        }\n        */\n        final Graphics2D g = dc.g;\n        \n        if (isSelected() && dc.isInteractive()) {\n            g.setColor(COLOR_HIGHLIGHT);\n            g.setStroke(new BasicStroke(stroke.getLineWidth() + 5, BasicStroke.CAP_ROUND, BasicStroke.JOIN_BEVEL));//todo:config\n            g.draw(getShape());\n        }\n\n        if (DEBUG.BOXES) {\n            // Split the curves into green & red halves for debugging\n            Composite composite = dc.g.getComposite();\n            dc.g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f));\n            \n            if (curveControls == 1) {\n                QuadCurve2D left = new QuadCurve2D.Float();\n                QuadCurve2D right = new QuadCurve2D.Float();\n                quadCurve.subdivide(left,right);\n                g.setColor(Color.green);\n                g.setStroke(new BasicStroke(mStrokeWidth.get()+4));\n                g.draw(left);\n                g.setColor(Color.red);\n                g.draw(right);\n            } else if (curveControls == 2) {\n                CubicCurve2D left = new CubicCurve2D.Float();\n                CubicCurve2D right = new CubicCurve2D.Float();\n                cubicCurve.subdivide(left,right);\n                g.setColor(Color.green);\n                g.setStroke(new BasicStroke(mStrokeWidth.get()+4));\n                g.draw(left);\n                g.setColor(Color.red);\n                g.draw(right);\n            }\n            dc.g.setComposite(composite);\n        }\n        \n        //-------------------------------------------------------\n        // Draw the stroke\n        //-------------------------------------------------------\n\n        /*\n        if (isIndicated() && dc.isInteractive())\n            g.setColor(COLOR_INDICATION);\n        //else if (isSelected())\n        //  g.setColor(COLOR_SELECTION);\n        else\n        */\n\n        g.setColor(getStrokeColor());\n        if (dc.drawAbsoluteLinks)\n            dc.setAbsoluteStroke(stroke.getLineWidth());\n        else\n            g.setStroke(stroke);\n\n        if (this.curve != null) {\n            //-------------------------------------------------------\n            // draw the curve\n            //-------------------------------------------------------\n\n            if (DEBUG.BOXES) {\n                Point2D.Float last = null;\n                Line2D seg = new Line2D.Float();\n                for (Point2D.Float curPoint : mPoints) {\n                    if (last != null) {\n                        seg.setLine(last, curPoint);\n                        dc.g.draw(seg);\n                    }\n                    last = curPoint;\n                }\n            } else {\n                g.draw(this.curve);\n            }\n                    \n            if (dc.isInteractive() && (isSelected() || DEBUG.BOXES)) {\n                //-------------------------------------------------------\n                // draw faint lines to control points if selected TODO: need to do this\n                // at time we paint the selection, so these are always on top -- perhaps\n                // have a LWComponent drawSkeleton, who's default is to just draw an\n                // outline shape, which can replace the manual code in MapViewer, and in\n                // the case of LWLink, can also draw the control lines.\n                //-------------------------------------------------------\n                g.setColor(COLOR_SELECTION); // todo: move these to DrawContext\n                //g.setColor(Color.red);\n                dc.setAbsoluteStroke(0.5);\n                if (curveControls == 2) {\n                    Line2D ctrlLine = new Line2D.Float(line.getP1(), cubicCurve.getCtrlP1());\n                    g.draw(ctrlLine);\n                    //float clx1 = line.x1 + cubicCurve.ctrlx\n                    ctrlLine.setLine(line.getP2(), cubicCurve.getCtrlP2());\n                    g.draw(ctrlLine);\n                } else {\n                    Line2D ctrlLine = new Line2D.Float(line.getP1(), quadCurve.getCtrlPt());\n                    g.draw(ctrlLine);\n                    ctrlLine.setLine(line.getP2(), quadCurve.getCtrlPt());\n                    g.draw(ctrlLine);\n                }\n                g.setStroke(stroke);\n            }\n            //g.drawLine((int)line.getX1(), (int)line.getY1(), (int)curve.getCtrlX(), (int)curve.getCtrlY());\n            //g.drawLine((int)line.getX2(), (int)line.getY2(), (int)curve.getCtrlX(), (int)curve.getCtrlY());\n        } else {\n            //-------------------------------------------------------\n            // draw the line\n            //-------------------------------------------------------\n            g.draw(this.line);\n        }\n\n        if (mArrowState.get() > 0)\n            drawArrows(dc);\n\n        if (!isNestedLink())\n            drawLinkDecorations(dc);\n        \n        boolean headgroup = head instanceof LWGroup;\n        boolean tailgroup = tail instanceof LWGroup;\n        if ((headgroup || tailgroup) && dc.isInteractive() || DEBUG.BOXES) {\n            float size = 8;\n            if (dc.zoom < 1)\n                size /= dc.zoom;\n            RectangularShape dot = new java.awt.geom.Ellipse2D.Float(0,0, size,size);\n            Composite composite = dc.g.getComposite();\n            dc.g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f));\n            dc.g.setColor(Color.green);\n            if (headgroup || DEBUG.BOXES) {\n                dot.setFrameFromCenter(headX, headY, headX+size/2, headY+size/2);\n                dc.g.fill(dot);\n            }\n            if (tailgroup || DEBUG.BOXES) {\n                dot.setFrameFromCenter(tailX, tailY, tailX+size/2, tailY+size/2);\n                if (DEBUG.BOXES) dc.g.setColor(Color.red);\n                dc.g.fill(dot);\n            }\n            dc.g.setComposite(composite);\n        }\n                \n        if (DEBUG.CONTAINMENT) { dc.setAbsoluteStroke(0.1); g.draw(getBounds()); }\n\n        //if (dc.drawAbsoluteLinks) dc.setAbsoluteDrawing(false);\n        \n    }","commit_id":"73a60deb04afc42e5ec9281843420db37194cda8","url":"https://github.com/VUE/VUE"},{"original_method":"private void drawArrows(DrawContext dc)\n    {\n        //-------------------------------------------------------\n        // Draw arrows\n        //-------------------------------------------------------\n\n        ////headShape.setFrame(this.line.getP1(), new Dimension(arrowSize, arrowSize));\n        ////headShape.setFrame(this.line.getX1() - arrowSize/2, this.line.getY1(), arrowSize, arrowSize*2);\n        //headShape.setFrame(0,0, arrowSize, arrowSize*2);\n\n        double rotation1 = 0;\n        double rotation2 = 0;\n\n        if (curveControls == 1) {\n            rotation1 = computeVerticalRotation(headX, headY, quadCurve.ctrlx, quadCurve.ctrly);\n            rotation2 = computeVerticalRotation(tailX, tailY, quadCurve.ctrlx, quadCurve.ctrly);\n        } else if (curveControls == 2) {\n            rotation1 = computeVerticalRotation(headX, headY, cubicCurve.ctrlx1, cubicCurve.ctrly1);\n            rotation2 = computeVerticalRotation(tailX, tailY, cubicCurve.ctrlx2, cubicCurve.ctrly2);\n        } else {\n            rotation1 = computeVerticalRotation(line.getX1(), line.getY1(), line.getX2(), line.getY2());\n            rotation2 = rotation1 + Math.PI;  // flip: add 180 degrees\n        }\n\n        \n        AffineTransform savedTransform = dc.g.getTransform();\n        \n\n        // draw the first arrow\n        // todo: adjust the arrow shape with the stroke width\n        // do the adjustment in setStrokeWidth, actually.\n        //dc.g.translate(line.getX1(), line.getY1());\n\n        //double controlOffset = mLength / 10;\n        //double controlOffset = mLength / 10 + headShape.getHeight();\n        double controlOffset = HeadShape.getHeight() * 2;\n        double room = mLength - controlOffset * 2;\n        final int controlSize = 6;\n\n        if (room <= controlSize*2)\n            controlOffset = mLength/2 - controlSize;\n\n        if (DEBUG.WORK) out(\"LEN \" + mLength + \" CO \" + controlOffset + \" ROOM=\" + room);\n\n        if ((mArrowState.get() & ARROW_HEAD) != 0) {\n            dc.g.setStroke(this.stroke);\n            dc.g.setColor(getStrokeColor());\n            dc.g.translate(headX, headY);\n            dc.g.rotate(rotation1);\n\n            // Now we're operating in a coordinate space where the line is vertical.\n            // Adjust the y value moves us up and down the line, whereas adjusting\n            // the x value moves us horizontally off the line.  Positive y values\n            // move down the screen, negative up.\n            \n            // Move back to the left half the width of the arrow, so\n            // that when drawn it will be centered on the line.\n            dc.g.translate(-HeadShape.getWidth() / 2, 0);\n            dc.g.fill(HeadShape);\n            dc.g.draw(HeadShape);\n\n            // test: move down line to draw \"control\"\n            dc.g.translate(HeadShape.getWidth() / 2, 0); // return to line\n            dc.g.translate(-controlSize/2, controlOffset); // move half width of circle to left to center, and down 20 px\n            dc.g.setColor(Color.green);\n            //dc.g.setStroke(STROKE_EIGHTH);\n            dc.g.drawOval(0,0, controlSize,controlSize);\n            \n            dc.g.setTransform(savedTransform);\n        }\n        \n        if ((mArrowState.get() & ARROW_TAIL) != 0) {\n            dc.g.setStroke(this.stroke);\n            dc.g.setColor(getStrokeColor());\n            // draw the second arrow\n            //dc.g.translate(line.getX2(), line.getY2());\n            dc.g.translate(tailX, tailY);\n            dc.g.rotate(rotation2);\n            dc.g.translate(-TailShape.getWidth() / 2, 0); // center shape on point \n            dc.g.fill(TailShape);\n            dc.g.draw(TailShape);\n\n            dc.g.translate(TailShape.getWidth() / 2, 0);\n            dc.g.translate(-controlSize/2, controlOffset);\n            dc.g.setColor(Color.red);\n            //dc.g.setStroke(STROKE_EIGHTH);\n            dc.g.drawOval(0,0, controlSize,controlSize);\n            \n            dc.g.setTransform(savedTransform);\n        }\n    }","id":69742,"modified_method":"private void drawArrows(DrawContext dc)\n    {\n        //-------------------------------------------------------\n        // Draw arrows\n        //-------------------------------------------------------\n\n        ////headShape.setFrame(this.line.getP1(), new Dimension(arrowSize, arrowSize));\n        ////headShape.setFrame(this.line.getX1() - arrowSize/2, this.line.getY1(), arrowSize, arrowSize*2);\n        //headShape.setFrame(0,0, arrowSize, arrowSize*2);\n\n        double rotation1 = 0;\n        double rotation2 = 0;\n\n        if (curveControls == 1) {\n            rotation1 = computeVerticalRotation(headX, headY, quadCurve.ctrlx, quadCurve.ctrly);\n            rotation2 = computeVerticalRotation(tailX, tailY, quadCurve.ctrlx, quadCurve.ctrly);\n        } else if (curveControls == 2) {\n            rotation1 = computeVerticalRotation(headX, headY, cubicCurve.ctrlx1, cubicCurve.ctrly1);\n            rotation2 = computeVerticalRotation(tailX, tailY, cubicCurve.ctrlx2, cubicCurve.ctrly2);\n        } else {\n            rotation1 = computeVerticalRotation(line.getX1(), line.getY1(), line.getX2(), line.getY2());\n            rotation2 = rotation1 + Math.PI;  // flip: add 180 degrees\n        }\n\n        \n        AffineTransform savedTransform = dc.g.getTransform();\n        \n\n        // draw the first arrow\n        // todo: adjust the arrow shape with the stroke width\n        // do the adjustment in setStrokeWidth, actually.\n        //dc.g.translate(line.getX1(), line.getY1());\n\n        //double controlOffset = mLength / 10;\n        //double controlOffset = mLength / 10 + headShape.getHeight();\n        double controlOffset = HeadShape.getHeight() * 2;\n        double room = mLength - controlOffset * 2;\n        final int controlSize = 6;\n\n        if (room <= controlSize*2)\n            controlOffset = mLength/2 - controlSize;\n\n        if (DEBUG.WORK) out(\"LEN \" + mLength + \" CO \" + controlOffset + \" ROOM=\" + room);\n\n        if ((mArrowState.get() & ARROW_HEAD) != 0) {\n            dc.g.setStroke(this.stroke);\n            dc.g.setColor(getStrokeColor());\n            dc.g.translate(headX, headY);\n            dc.g.rotate(rotation1);\n\n            // Now we're operating in a coordinate space where the line is vertical.\n            // Adjust the y value moves us up and down the line, whereas adjusting\n            // the x value moves us horizontally off the line.  Positive y values\n            // move down the screen, negative up.\n            \n            // Move back to the left half the width of the arrow, so\n            // that when drawn it will be centered on the line.\n            dc.g.translate(-HeadShape.getWidth() / 2, 0);\n            dc.g.fill(HeadShape);\n            dc.g.draw(HeadShape);\n\n            if (DEBUG.Enabled) {\n                // test: move down line to draw \"control\"\n                dc.g.translate(HeadShape.getWidth() / 2, 0); // return to line\n                dc.g.translate(-controlSize/2, controlOffset); // move half width of circle to left to center, and down 20 px\n                dc.g.setColor(Color.green);\n                //dc.g.setStroke(STROKE_EIGHTH);\n                dc.g.drawOval(0,0, controlSize,controlSize);\n            }\n            \n            dc.g.setTransform(savedTransform);\n        }\n        \n        if ((mArrowState.get() & ARROW_TAIL) != 0) {\n            dc.g.setStroke(this.stroke);\n            dc.g.setColor(getStrokeColor());\n            // draw the second arrow\n            //dc.g.translate(line.getX2(), line.getY2());\n            dc.g.translate(tailX, tailY);\n            dc.g.rotate(rotation2);\n            dc.g.translate(-TailShape.getWidth() / 2, 0); // center shape on point \n            dc.g.fill(TailShape);\n            dc.g.draw(TailShape);\n\n            if (DEBUG.Enabled) {\n                dc.g.translate(TailShape.getWidth() / 2, 0);\n                dc.g.translate(-controlSize/2, controlOffset);\n                dc.g.setColor(Color.red);\n                //dc.g.setStroke(STROKE_EIGHTH);\n                dc.g.drawOval(0,0, controlSize,controlSize);\n            }\n            \n            dc.g.setTransform(savedTransform);\n        }\n    }","commit_id":"73a60deb04afc42e5ec9281843420db37194cda8","url":"https://github.com/VUE/VUE"},{"original_method":"public void onSuccess(FetchResult result, ClientGetter state) {\n\t\tprogressPending = null;\n\t\tFCPMessage msg = new DataFoundMessage(result, identifier);\n\t\tBucket data = result.asBucket();\n\t\tthis.foundDataLength = data.size();\n\t\tthis.foundDataMimeType = result.getMimeType();\n\t\tthis.succeeded = true;\n\t\tfinished = true;\n\t\tif(returnType == ClientGetMessage.RETURN_TYPE_DIRECT) {\n\t\t\t// Send all the data at once\n\t\t\t// FIXME there should be other options\n\t\t\ttrySendDataFoundOrGetFailed();\n\t\t\tAllDataMessage m = new AllDataMessage(data, identifier);\n\t\t\tif(persistenceType == PERSIST_CONNECTION)\n\t\t\t\tm.setFreeOnSent();\n\t\t\ttrySendAllDataMessage(m);\n\t\t\tfinish();\n\t\t\treturn;\n\t\t} else if(returnType == ClientGetMessage.RETURN_TYPE_NONE) {\n\t\t\t// Do nothing\n\t\t\ttrySendDataFoundOrGetFailed();\n\t\t\tdata.free();\n\t\t\tfinish();\n\t\t\treturn;\n\t\t} else if(returnType == ClientGetMessage.RETURN_TYPE_DISK) {\n\t\t\t// Write to temp file, then rename over filename\n\t\t\tFileOutputStream fos;\n\t\t\ttry {\n\t\t\t\tfos = new FileOutputStream(tempFile);\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\tpostFetchProtocolErrorMessage = new ProtocolErrorMessage(ProtocolErrorMessage.COULD_NOT_WRITE_FILE, false, null, identifier);\n\t\t\t\ttrySendDataFoundOrGetFailed();\n\t\t\t\tdata.free();\n\t\t\t\tfinish();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tBucketTools.copyTo(data, fos, data.size());\n\t\t\t} catch (IOException e) {\n\t\t\t\tpostFetchProtocolErrorMessage = new ProtocolErrorMessage(ProtocolErrorMessage.COULD_NOT_WRITE_FILE, false, null, identifier);\n\t\t\t\ttrySendDataFoundOrGetFailed();\n\t\t\t\tdata.free();\n\t\t\t\ttry {\n\t\t\t\t\tfos.close();\n\t\t\t\t} catch (IOException e1) {\n\t\t\t\t\t// Ignore\n\t\t\t\t}\n\t\t\t\tfinish();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tfos.close();\n\t\t\t} catch (IOException e) {\n\t\t\t\tLogger.error(this, \"Caught \"+e+\" closing file \"+tempFile, e);\n\t\t\t}\n\t\t\tif(!tempFile.renameTo(targetFile)) {\n\t\t\t\tpostFetchProtocolErrorMessage = new ProtocolErrorMessage(ProtocolErrorMessage.COULD_NOT_RENAME_FILE, false, null, identifier);\n\t\t\t\ttrySendDataFoundOrGetFailed();\n\t\t\t\t// Don't delete temp file, user might want it.\n\t\t\t}\n\t\t\tdata.free();\n\t\t\ttrySendDataFoundOrGetFailed();\n\t\t\tfinish();\n\t\t\treturn;\n\t\t}\n\t}","id":69743,"modified_method":"public void onSuccess(FetchResult result, ClientGetter state) {\n\t\tBucket data = result.asBucket();\n\t\tboolean dontFree = false;\n\t\t// FIXME I don't think this is a problem in this case...? (Disk write while locked..)\n\t\tsynchronized(this) {\n\t\t\tif(returnType == ClientGetMessage.RETURN_TYPE_DIRECT) {\n\t\t\t\t// Send all the data at once\n\t\t\t\t// FIXME there should be other options\n\t\t\t\ttrySendDataFoundOrGetFailed();\n\t\t\t\tAllDataMessage m = new AllDataMessage(data, identifier);\n\t\t\t\tif(persistenceType == PERSIST_CONNECTION)\n\t\t\t\t\tm.setFreeOnSent();\n\t\t\t\tdontFree = true;\n\t\t\t\ttrySendAllDataMessage(m);\n\t\t\t} else if(returnType == ClientGetMessage.RETURN_TYPE_NONE) {\n\t\t\t\t// Do nothing\n\t\t\t} else if(returnType == ClientGetMessage.RETURN_TYPE_DISK) {\n\t\t\t\t// Write to temp file, then rename over filename\n\t\t\t\tFileOutputStream fos = null;\n\t\t\t\ttry {\n\t\t\t\t\tfos = new FileOutputStream(tempFile);\n\t\t\t\t\tBucketTools.copyTo(data, fos, data.size());\n\t\t\t\t\tif(!tempFile.renameTo(targetFile)) {\n\t\t\t\t\t\tpostFetchProtocolErrorMessage = new ProtocolErrorMessage(ProtocolErrorMessage.COULD_NOT_RENAME_FILE, false, null, identifier);\n\t\t\t\t\t\ttrySendDataFoundOrGetFailed();\n\t\t\t\t\t\t// Don't delete temp file, user might want it.\n\t\t\t\t\t}\n\t\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\t\tpostFetchProtocolErrorMessage = new ProtocolErrorMessage(ProtocolErrorMessage.COULD_NOT_WRITE_FILE, false, null, identifier);\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tpostFetchProtocolErrorMessage = new ProtocolErrorMessage(ProtocolErrorMessage.COULD_NOT_WRITE_FILE, false, null, identifier);\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tif(fos != null)\n\t\t\t\t\t\tfos.close();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLogger.error(this, \"Caught \"+e+\" closing file \"+tempFile, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprogressPending = null;\n\t\t\tFCPMessage msg = new DataFoundMessage(result, identifier);\n\t\t\tthis.foundDataLength = data.size();\n\t\t\tthis.foundDataMimeType = result.getMimeType();\n\t\t\tthis.succeeded = true;\n\t\t\tfinished = true;\n\t\t}\n\t\ttrySendDataFoundOrGetFailed();\n\t\tif(!dontFree)\n\t\t\tdata.free();\n\t\tfinish();\n\t}","commit_id":"2feef30f4266f2b8f54b92445661044a936a611a","url":"https://github.com/freenet/fred"},{"original_method":"public void onFailure(FetchException e, ClientGetter state) {\n\t\tsucceeded = false;\n\t\tgetFailedMessage = new GetFailedMessage(e, identifier);\n\t\tfinished = true;\n\t\tLogger.minor(this, \"Caught \"+e, e);\n\t\ttrySendDataFoundOrGetFailed();\n\t\tfinish();\n\t}","id":69744,"modified_method":"public void onFailure(FetchException e, ClientGetter state) {\n\t\tsynchronized(this) {\n\t\t\tsucceeded = false;\n\t\t\tgetFailedMessage = new GetFailedMessage(e, identifier);\n\t\t\tfinished = true;\n\t\t}\n\t\tLogger.minor(this, \"Caught \"+e, e);\n\t\ttrySendDataFoundOrGetFailed();\n\t\tfinish();\n\t}","commit_id":"2feef30f4266f2b8f54b92445661044a936a611a","url":"https://github.com/freenet/fred"},{"original_method":"public void onGeneratedURI(FreenetURI uri, BaseClientPutter state) {\n\t\tif(generatedURI != null && !uri.equals(generatedURI))\n\t\t\tLogger.error(this, \"onGeneratedURI(\"+uri+\",\"+state+\") but already set generatedURI to \"+generatedURI);\n\t\tgeneratedURI = uri;\n\t\ttrySendGeneratedURIMessage();\n\t}","id":69745,"modified_method":"public void onGeneratedURI(FreenetURI uri, BaseClientPutter state) {\n\t\tsynchronized(this) {\n\t\t\tif(generatedURI != null && !uri.equals(generatedURI))\n\t\t\t\tLogger.error(this, \"onGeneratedURI(\"+uri+\",\"+state+\") but already set generatedURI to \"+generatedURI);\n\t\t\tgeneratedURI = uri;\n\t\t}\n\t\ttrySendGeneratedURIMessage();\n\t}","commit_id":"2feef30f4266f2b8f54b92445661044a936a611a","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Create from a persisted SimpleFieldSet.\n\t * Not very tolerant of errors, as the input was generated\n\t * by the node.\n\t * @throws MalformedURLException \n\t */\n\tpublic ClientPut(SimpleFieldSet fs, FCPClient client2) throws MalformedURLException {\n\t\turi = new FreenetURI(fs.get(\"URI\"));\n\t\tidentifier = fs.get(\"Identifier\");\n\t\tverbosity = Integer.parseInt(fs.get(\"Verbosity\"));\n\t\tpriorityClass = Short.parseShort(fs.get(\"PriorityClass\"));\n\t\tpersistenceType = ClientRequest.parsePersistence(fs.get(\"Persistence\"));\n\t\tif(persistenceType == ClientRequest.PERSIST_CONNECTION\n\t\t\t\t|| persistenceType == ClientRequest.PERSIST_REBOOT)\n\t\t\tthrow new IllegalArgumentException(\"Reading in persistent ClientPut, but persistence type = \"+ClientRequest.persistenceTypeString(persistenceType)+\" so shouldn't have been saved in the first place\");\n\t\tthis.client = client2;\n\t\torigHandler = null;\n\t\tString mimeType = fs.get(\"Metadata.ContentType\");\n                if(fs.get(\"GetCHKOnly\").equalsIgnoreCase(\"true\")){\n\t\t       \tgetCHKOnly = true;\n\t        }else{\n\t\t       \tgetCHKOnly = false;\n\t\t}\n\t\tboolean dontCompress;\n                if(fs.get(\"DontCompress\").equalsIgnoreCase(\"true\")){\n\t\t       \tdontCompress = true;\n\t        }else{\n\t\t       \tdontCompress = false;\n\t\t}\n\t\tint maxRetries = Integer.parseInt(fs.get(\"MaxRetries\"));\n\t\tclientToken = fs.get(\"ClientToken\");\n\t\tfromDisk = true;\n\t\torigFilename = new File(fs.get(\"Filename\"));\n\t\tBucket data = new FileBucket(origFilename, true, false, false);\n\t\tctx = new InserterContext(client.defaultInsertContext, new SimpleEventProducer());\n\t\tctx.dontCompress = dontCompress;\n\t\tctx.eventProducer.addEventListener(this);\n\t\tctx.maxInsertRetries = maxRetries;\n\t\tblock = new InsertBlock(data, new ClientMetadata(mimeType), uri);\n\t\tfinished = Fields.stringToBool(fs.get(\"Finished\"), false);\n\t\tsucceeded = Fields.stringToBool(fs.get(\"Succeeded\"), false);\n\t\tString genURI = fs.get(\"GeneratedURI\");\n\t\tif(genURI != null)\n\t\t\tgeneratedURI = new FreenetURI(genURI);\n\t\tif(finished && (!succeeded))\n\t\t\tputFailedMessage = new PutFailedMessage(fs.subset(\"PutFailed\"), false);\n\t\tinserter = new ClientPutter(this, data, uri, new ClientMetadata(mimeType), ctx, client.node.putScheduler, priorityClass, getCHKOnly, false, client);\n\t\tif(!finished)\n\t\t\tstart();\n\t}","id":69746,"modified_method":"/**\n\t * Create from a persisted SimpleFieldSet.\n\t * Not very tolerant of errors, as the input was generated\n\t * by the node.\n\t * @throws MalformedURLException \n\t */\n\tpublic ClientPut(SimpleFieldSet fs, FCPClient client2) throws MalformedURLException {\n\t\turi = new FreenetURI(fs.get(\"URI\"));\n\t\tidentifier = fs.get(\"Identifier\");\n\t\tverbosity = Integer.parseInt(fs.get(\"Verbosity\"));\n\t\tpriorityClass = Short.parseShort(fs.get(\"PriorityClass\"));\n\t\tpersistenceType = ClientRequest.parsePersistence(fs.get(\"Persistence\"));\n\t\tif(persistenceType == ClientRequest.PERSIST_CONNECTION\n\t\t\t\t|| persistenceType == ClientRequest.PERSIST_REBOOT)\n\t\t\tthrow new IllegalArgumentException(\"Reading in persistent ClientPut, but persistence type = \"+ClientRequest.persistenceTypeString(persistenceType)+\" so shouldn't have been saved in the first place\");\n\t\tthis.client = client2;\n\t\torigHandler = null;\n\t\tString mimeType = fs.get(\"Metadata.ContentType\");\n\t\tgetCHKOnly = Fields.stringToBool(fs.get(\"CHKOnly\"), false);\n\t\tboolean dontCompress = Fields.stringToBool(fs.get(\"DontCompress\"), false);\n\t\tint maxRetries = Integer.parseInt(fs.get(\"MaxRetries\"));\n\t\tclientToken = fs.get(\"ClientToken\");\n\t\tfromDisk = true;\n\t\torigFilename = new File(fs.get(\"Filename\"));\n\t\tBucket data = new FileBucket(origFilename, true, false, false);\n\t\tctx = new InserterContext(client.defaultInsertContext, new SimpleEventProducer());\n\t\tctx.dontCompress = dontCompress;\n\t\tctx.eventProducer.addEventListener(this);\n\t\tctx.maxInsertRetries = maxRetries;\n\t\tblock = new InsertBlock(data, new ClientMetadata(mimeType), uri);\n\t\tfinished = Fields.stringToBool(fs.get(\"Finished\"), false);\n\t\tsucceeded = Fields.stringToBool(fs.get(\"Succeeded\"), false);\n\t\tString genURI = fs.get(\"GeneratedURI\");\n\t\tif(genURI != null)\n\t\t\tgeneratedURI = new FreenetURI(genURI);\n\t\tif(finished && (!succeeded))\n\t\t\tputFailedMessage = new PutFailedMessage(fs.subset(\"PutFailed\"), false);\n\t\tinserter = new ClientPutter(this, data, uri, new ClientMetadata(mimeType), ctx, client.node.putScheduler, priorityClass, getCHKOnly, false, client);\n\t\tif(!finished)\n\t\t\tstart();\n\t}","commit_id":"2feef30f4266f2b8f54b92445661044a936a611a","url":"https://github.com/freenet/fred"},{"original_method":"public void onSuccess(BaseClientPutter state) {\n\t\tprogressMessage = null;\n\t\tsucceeded = true;\n\t\tfinished = true;\n\t\ttrySendFinalMessage();\n\t\tblock.getData().free();\n\t\tfinish();\n\t}","id":69747,"modified_method":"public void onSuccess(BaseClientPutter state) {\n\t\tsynchronized(this) {\n\t\t\tprogressMessage = null;\n\t\t\tsucceeded = true;\n\t\t\tfinished = true;\n\t\t}\n\t\ttrySendFinalMessage();\n\t\tblock.getData().free();\n\t\tfinish();\n\t}","commit_id":"2feef30f4266f2b8f54b92445661044a936a611a","url":"https://github.com/freenet/fred"},{"original_method":"public void onFailure(InserterException e, BaseClientPutter state) {\n\t\tfinished = true;\n\t\tputFailedMessage = new PutFailedMessage(e, identifier);\n\t\ttrySendFinalMessage();\n\t\tblock.getData().free();\n\t\tfinish();\n\t}","id":69748,"modified_method":"public void onFailure(InserterException e, BaseClientPutter state) {\n\t\tsynchronized(this) {\n\t\t\tfinished = true;\n\t\t\tputFailedMessage = new PutFailedMessage(e, identifier);\n\t\t}\n\t\ttrySendFinalMessage();\n\t\tblock.getData().free();\n\t\tfinish();\n\t}","commit_id":"2feef30f4266f2b8f54b92445661044a936a611a","url":"https://github.com/freenet/fred"},{"original_method":"/**\n     * Create a SplitFileInserterStorage.\n     * \n     * @param originalData\n     *            The original data as a RandomAccessThing. We need to be able\n     *            to read single blocks.\n     * @param rafFactory\n     *            A factory (persistent or not as appropriate) used to create\n     *            the temporary RAF storing check blocks etc.\n     * @param bf\n     *            A temporary Bucket factory used for temporarily storing the\n     *            cross-segment settings.\n     * @throws IOException\n     * @throws InsertException\n     */\n    public SplitFileInserterStorage(LockableRandomAccessThing originalData,\n            long decompressedLength, SplitFileInserterStorageCallback callback,\n            COMPRESSOR_TYPE compressionCodec, ClientMetadata meta, boolean isMetadata, \n            ARCHIVE_TYPE archiveType, LockableRandomAccessThingFactory rafFactory, \n            boolean persistent, InsertContext ctx, byte splitfileCryptoAlgorithm, \n            byte[] splitfileCryptoKey, byte[] hashThisLayerOnly, HashResult[] hashes, \n            BucketFactory bf, ChecksumChecker checker, Random random,\n            MemoryLimitedJobRunner memoryLimitedJobRunner, PersistentJobRunner jobRunner,\n            Ticker ticker, KeysFetchingLocally keysFetching, \n            boolean topDontCompress, int topRequiredBlocks, int topTotalBlocks, \n            long origDataSize, long origCompressedDataSize) throws IOException, InsertException {\n        this.originalData = originalData;\n        this.callback = callback;\n        this.persistent = persistent;\n        dataLength = originalData.size();\n        if (dataLength > ((long) Integer.MAX_VALUE) * CHKBlock.DATA_LENGTH)\n            throw new InsertException(InsertException.TOO_BIG);\n        totalDataBlocks = (int) ((dataLength + CHKBlock.DATA_LENGTH - 1) / CHKBlock.DATA_LENGTH);\n        this.decompressedLength = decompressedLength;\n        this.compressionCodec = compressionCodec;\n        this.clientMetadata = meta;\n        this.checker = checker;\n        this.memoryLimitedJobRunner = memoryLimitedJobRunner;\n        this.jobRunner = jobRunner;\n        this.hashes = hashes;\n        this.isMetadata = isMetadata;\n        this.archiveType = archiveType;\n        this.hashThisLayerOnly = hashThisLayerOnly;\n        this.topDontCompress = topDontCompress;\n        this.topRequiredBlocks = topRequiredBlocks;\n        this.topTotalBlocks = topTotalBlocks;\n        this.origDataSize = origDataSize;\n        this.origCompressedDataSize = origCompressedDataSize;\n        this.maxRetries = ctx.maxInsertRetries;\n        this.errors = new FailureCodeTracker(true);\n        this.ticker = ticker;\n\n        // Work out how many blocks in each segment, crypto keys etc.\n        // Complicated by back compatibility, i.e. the need to be able to\n        // reinsert old splitfiles.\n        // FIXME consider getting rid of support for very old splitfiles.\n\n        int segs;\n        cmode = ctx.getCompatibilityMode();\n        if (cmode == CompatibilityMode.COMPAT_1250_EXACT) {\n            segs = (totalDataBlocks + 128 - 1) / 128;\n            segmentSize = 128;\n            deductBlocksFromSegments = 0;\n        } else {\n            if (cmode == CompatibilityMode.COMPAT_1251) {\n                // Max 131 blocks per segment.\n                segs = (totalDataBlocks + 131 - 1) / 131;\n            } else {\n                // Algorithm from evanbd, see bug #2931.\n                if (totalDataBlocks > 520) {\n                    segs = (totalDataBlocks + 128 - 1) / 128;\n                } else if (totalDataBlocks > 393) {\n                    // maxSegSize = 130;\n                    segs = 4;\n                } else if (totalDataBlocks > 266) {\n                    // maxSegSize = 131;\n                    segs = 3;\n                } else if (totalDataBlocks > 136) {\n                    // maxSegSize = 133;\n                    segs = 2;\n                } else {\n                    // maxSegSize = 136;\n                    segs = 1;\n                }\n            }\n            int segSize = (totalDataBlocks + segs - 1) / segs;\n            if (ctx.splitfileSegmentDataBlocks < segSize) {\n                segs = (totalDataBlocks + ctx.splitfileSegmentDataBlocks - 1)\n                        / ctx.splitfileSegmentDataBlocks;\n                segSize = (totalDataBlocks + segs - 1) / segs;\n            }\n            segmentSize = segSize;\n            if (cmode == CompatibilityMode.COMPAT_CURRENT\n                    || cmode.ordinal() >= CompatibilityMode.COMPAT_1255.ordinal()) {\n                // Even with basic even segment splitting, it is possible for\n                // the last segment to be a lot smaller than the rest.\n                // So drop a single data block from each of the last\n                // [segmentSize-lastSegmentSize] segments instead.\n                // Hence all the segments are within 1 block of segmentSize.\n                int lastSegmentSize = totalDataBlocks - (segmentSize * (segs - 1));\n                deductBlocksFromSegments = segmentSize - lastSegmentSize;\n            } else {\n                deductBlocksFromSegments = 0;\n            }\n        }\n\n        int crossCheckBlocks = 0;\n\n        // Cross-segment splitfile redundancy becomes useful at 20 segments.\n        if (segs >= 20\n                && (cmode == CompatibilityMode.COMPAT_CURRENT || cmode.ordinal() >= CompatibilityMode.COMPAT_1255\n                        .ordinal())) {\n            // The optimal number of cross-check blocks per segment (and per\n            // cross-segment since there are the same number of cross-segments\n            // as segments) is 3.\n            crossCheckBlocks = 3;\n        }\n\n        this.crossCheckBlocks = crossCheckBlocks;\n\n        this.splitfileType = ctx.splitfileAlgorithm;\n        this.codec = FECCodec.getInstance(splitfileType);\n\n        checkSegmentSize = codec.getCheckBlocks(segmentSize + crossCheckBlocks, cmode);\n\n        this.splitfileCryptoAlgorithm = splitfileCryptoAlgorithm;\n        if (splitfileCryptoKey != null) {\n            this.splitfileCryptoKey = splitfileCryptoKey;\n            specifySplitfileKeyInMetadata = true;\n        } else if (cmode == CompatibilityMode.COMPAT_CURRENT\n                || cmode.ordinal() >= CompatibilityMode.COMPAT_1255.ordinal()) {\n            if (hashThisLayerOnly != null) {\n                this.splitfileCryptoKey = Metadata.getCryptoKey(hashThisLayerOnly);\n            } else {\n                this.splitfileCryptoKey = Metadata.getCryptoKey(hashes);\n            }\n            specifySplitfileKeyInMetadata = false;\n        } else {\n            this.splitfileCryptoKey = null;\n            specifySplitfileKeyInMetadata = false;\n        }\n\n        int totalCheckBlocks = 0;\n        int checkTotalDataBlocks = 0;\n        underlyingOffsetDataSegments = new long[segs];\n        keyLength = SplitFileInserterSegmentStorage.getKeyLength(this);\n        this.consecutiveRNFsCountAsSuccess = ctx.consecutiveRNFsCountAsSuccess;\n        segments = makeSegments(segmentSize, segs, totalDataBlocks, crossCheckBlocks,\n                deductBlocksFromSegments, persistent, splitfileCryptoAlgorithm, splitfileCryptoKey,\n                cmode, random, keysFetching, consecutiveRNFsCountAsSuccess);\n        for (SplitFileInserterSegmentStorage segment : segments) {\n            totalCheckBlocks += segment.checkBlockCount;\n            checkTotalDataBlocks += segment.dataBlockCount;\n        }\n        assert (checkTotalDataBlocks == totalDataBlocks);\n        this.totalCheckBlocks = totalCheckBlocks;\n\n        if (crossCheckBlocks != 0) {\n            byte[] seed = Metadata.getCrossSegmentSeed(hashes, hashThisLayerOnly);\n            if (logMINOR)\n                Logger.minor(this, \"Cross-segment seed: \" + HexUtil.bytesToHex(seed));\n            Random xsRandom = new MersenneTwister(seed);\n            // Cross segment redundancy: Allocate the blocks.\n            crossSegments = new SplitFileInserterCrossSegmentStorage[segs];\n            int segLen = segmentSize;\n            for (int i = 0; i < crossSegments.length; i++) {\n                if (logMINOR)\n                    Logger.minor(this, \"Allocating blocks for cross segment \" + i);\n                if (segments.length - i == deductBlocksFromSegments) {\n                    segLen--;\n                }\n\n                SplitFileInserterCrossSegmentStorage seg = new SplitFileInserterCrossSegmentStorage(\n                        this, i, persistent, segLen, crossCheckBlocks);\n                crossSegments[i] = seg;\n                for (int j = 0; j < segLen; j++) {\n                    // Allocate random data blocks\n                    allocateCrossDataBlock(seg, xsRandom);\n                }\n                for (int j = 0; j < crossCheckBlocks; j++) {\n                    // Allocate check blocks\n                    allocateCrossCheckBlock(seg, xsRandom);\n                }\n            }\n        } else {\n            crossSegments = null;\n        }\n\n        // Now set up the RAF.\n\n        // First we have all the fixed stuff ...\n\n        byte[] paddedLastBlock = null;\n        if (dataLength % CHKBlock.DATA_LENGTH != 0) {\n            this.hasPaddedLastBlock = true;\n            long from = (dataLength / CHKBlock.DATA_LENGTH) * CHKBlock.DATA_LENGTH;\n            byte[] buf = new byte[(int) (dataLength - from)];\n            this.originalData.pread(from, buf, 0, buf.length);\n            paddedLastBlock = BucketTools.pad(buf, CHKBlock.DATA_LENGTH, buf.length);\n        } else {\n            this.hasPaddedLastBlock = false;\n        }\n\n        byte[] header = null;\n        Bucket segmentSettings = null, crossSegmentSettings = null;\n        if (persistent) {\n            header = encodeHeader();\n\n            segmentSettings = encodeSegmentSettings(); // Checksummed with length\n            try {\n                crossSegmentSettings = encodeCrossSegmentSettings(bf); // Individually checksummed with length\n            } catch (IOException e) {\n                throw new InsertException(InsertException.BUCKET_ERROR,\n                        \"Failed to write to temporary storage while creating splitfile inserter\",\n                        null);\n            }\n        }\n\n        long ptr = 0;\n        if (persistent) {\n            ptr = header.length + segmentSettings.size() + crossSegmentSettings.size();\n            offsetOverallStatus = ptr;\n            overallStatusLength = encodeOverallStatus().length;\n            ptr += overallStatusLength;\n\n            // Pad to a 4KB block boundary.\n            int padding = 0;\n            padding = (int) (ptr % 4096);\n            if (padding != 0)\n                padding = 4096 - padding;\n\n            ptr += padding;\n        } else {\n            overallStatusLength = 0;\n            offsetOverallStatus = 0;\n        }\n\n        this.offsetPaddedLastBlock = ptr;\n\n        if (hasPaddedLastBlock)\n            ptr += CHKBlock.DATA_LENGTH;\n\n        if (crossSegments != null) {\n            offsetCrossSegmentBlocks = new long[crossSegments.length];\n            for (int i = 0; i < crossSegments.length; i++) {\n                offsetCrossSegmentBlocks[i] = ptr;\n                ptr += crossSegments[i].crossCheckBlockCount * CHKBlock.DATA_LENGTH;\n            }\n        } else {\n            offsetCrossSegmentBlocks = null;\n        }\n\n        offsetSegmentCheckBlocks = new long[segments.length];\n        for (int i = 0; i < segments.length; i++) {\n            offsetSegmentCheckBlocks[i] = ptr;\n            ptr += segments[i].checkBlockCount * CHKBlock.DATA_LENGTH;\n        }\n\n        if (persistent) {\n            offsetSegmentStatus = new long[segments.length];\n            for (int i = 0; i < segments.length; i++) {\n                offsetSegmentStatus[i] = ptr;\n                ptr += segments[i].storedStatusLength();\n            }\n\n            if (crossSegments != null) {\n                offsetCrossSegmentStatus = new long[crossSegments.length];\n                for (int i = 0; i < crossSegments.length; i++) {\n                    offsetCrossSegmentStatus[i] = ptr;\n                    ptr += crossSegments[i].storedStatusLength();\n                }\n            } else {\n                offsetCrossSegmentStatus = null;\n            }\n\n        } else {\n            offsetSegmentStatus = null;\n            offsetCrossSegmentStatus = null;\n        }\n        \n        offsetSegmentKeys = new long[segments.length];\n        for (int i = 0; i < segments.length; i++) {\n            offsetSegmentKeys[i] = ptr;\n            ptr += segments[i].storedKeysLength();\n        }\n\n        this.raf = rafFactory.makeRAF(ptr);\n        if (persistent) {\n            raf.pwrite(0, header, 0, header.length);\n            BucketTools.copyTo(segmentSettings, raf, header.length, Long.MAX_VALUE);\n            BucketTools.copyTo(crossSegmentSettings, raf, header.length + segmentSettings.size(),\n                    Long.MAX_VALUE);\n            segmentSettings.free();\n            crossSegmentSettings.free();\n            writeOverallStatus(true);\n        }\n        if (hasPaddedLastBlock)\n            raf.pwrite(offsetPaddedLastBlock, paddedLastBlock, 0, paddedLastBlock.length);\n        if (persistent) {\n            // Padding is initialized to random already.\n            for (SplitFileInserterSegmentStorage segment : segments) {\n                segment.storeStatus(true);\n            }\n            if (crossSegments != null) {\n                for (SplitFileInserterCrossSegmentStorage segment : crossSegments) {\n                    segment.storeStatus();\n                }\n            }\n            for (SplitFileInserterSegmentStorage segment : segments) {\n                segment.clearKeys();\n            }\n        }\n        // Keys are empty, and invalid.\n        status = Status.NOT_STARTED;\n    }","id":69749,"modified_method":"/**\n     * Create a SplitFileInserterStorage.\n     * \n     * @param originalData\n     *            The original data as a RandomAccessThing. We need to be able\n     *            to read single blocks.\n     * @param rafFactory\n     *            A factory (persistent or not as appropriate) used to create\n     *            the temporary RAF storing check blocks etc.\n     * @param bf\n     *            A temporary Bucket factory used for temporarily storing the\n     *            cross-segment settings.\n     * @throws IOException\n     * @throws InsertException\n     */\n    public SplitFileInserterStorage(LockableRandomAccessThing originalData,\n            long decompressedLength, SplitFileInserterStorageCallback callback,\n            COMPRESSOR_TYPE compressionCodec, ClientMetadata meta, boolean isMetadata, \n            ARCHIVE_TYPE archiveType, LockableRandomAccessThingFactory rafFactory, \n            boolean persistent, InsertContext ctx, byte splitfileCryptoAlgorithm, \n            byte[] splitfileCryptoKey, byte[] hashThisLayerOnly, HashResult[] hashes, \n            BucketFactory bf, ChecksumChecker checker, Random random,\n            MemoryLimitedJobRunner memoryLimitedJobRunner, PersistentJobRunner jobRunner,\n            Ticker ticker, KeysFetchingLocally keysFetching, \n            boolean topDontCompress, int topRequiredBlocks, int topTotalBlocks, \n            long origDataSize, long origCompressedDataSize) throws IOException, InsertException {\n        this.originalData = originalData;\n        this.callback = callback;\n        this.persistent = persistent;\n        dataLength = originalData.size();\n        if (dataLength > ((long) Integer.MAX_VALUE) * CHKBlock.DATA_LENGTH)\n            throw new InsertException(InsertException.TOO_BIG);\n        totalDataBlocks = (int) ((dataLength + CHKBlock.DATA_LENGTH - 1) / CHKBlock.DATA_LENGTH);\n        this.decompressedLength = decompressedLength;\n        this.compressionCodec = compressionCodec;\n        this.clientMetadata = meta;\n        this.checker = checker;\n        this.memoryLimitedJobRunner = memoryLimitedJobRunner;\n        this.jobRunner = jobRunner;\n        this.hashes = hashes;\n        this.isMetadata = isMetadata;\n        this.archiveType = archiveType;\n        this.hashThisLayerOnly = hashThisLayerOnly;\n        this.topDontCompress = topDontCompress;\n        this.topRequiredBlocks = topRequiredBlocks;\n        this.topTotalBlocks = topTotalBlocks;\n        this.origDataSize = origDataSize;\n        this.origCompressedDataSize = origCompressedDataSize;\n        this.maxRetries = ctx.maxInsertRetries;\n        this.errors = new FailureCodeTracker(true);\n        this.ticker = ticker;\n\n        // Work out how many blocks in each segment, crypto keys etc.\n        // Complicated by back compatibility, i.e. the need to be able to\n        // reinsert old splitfiles.\n        // FIXME consider getting rid of support for very old splitfiles.\n\n        int segs;\n        cmode = ctx.getCompatibilityMode();\n        if (cmode == CompatibilityMode.COMPAT_1250_EXACT) {\n            segs = (totalDataBlocks + 128 - 1) / 128;\n            segmentSize = 128;\n            deductBlocksFromSegments = 0;\n        } else {\n            if (cmode == CompatibilityMode.COMPAT_1251) {\n                // Max 131 blocks per segment.\n                segs = (totalDataBlocks + 131 - 1) / 131;\n            } else {\n                // Algorithm from evanbd, see bug #2931.\n                if (totalDataBlocks > 520) {\n                    segs = (totalDataBlocks + 128 - 1) / 128;\n                } else if (totalDataBlocks > 393) {\n                    // maxSegSize = 130;\n                    segs = 4;\n                } else if (totalDataBlocks > 266) {\n                    // maxSegSize = 131;\n                    segs = 3;\n                } else if (totalDataBlocks > 136) {\n                    // maxSegSize = 133;\n                    segs = 2;\n                } else {\n                    // maxSegSize = 136;\n                    segs = 1;\n                }\n            }\n            int segSize = (totalDataBlocks + segs - 1) / segs;\n            if (ctx.splitfileSegmentDataBlocks < segSize) {\n                segs = (totalDataBlocks + ctx.splitfileSegmentDataBlocks - 1)\n                        / ctx.splitfileSegmentDataBlocks;\n                segSize = (totalDataBlocks + segs - 1) / segs;\n            }\n            segmentSize = segSize;\n            if (cmode == CompatibilityMode.COMPAT_CURRENT\n                    || cmode.ordinal() >= CompatibilityMode.COMPAT_1255.ordinal()) {\n                // Even with basic even segment splitting, it is possible for\n                // the last segment to be a lot smaller than the rest.\n                // So drop a single data block from each of the last\n                // [segmentSize-lastSegmentSize] segments instead.\n                // Hence all the segments are within 1 block of segmentSize.\n                int lastSegmentSize = totalDataBlocks - (segmentSize * (segs - 1));\n                deductBlocksFromSegments = segmentSize - lastSegmentSize;\n            } else {\n                deductBlocksFromSegments = 0;\n            }\n        }\n\n        int crossCheckBlocks = 0;\n\n        // Cross-segment splitfile redundancy becomes useful at 20 segments.\n        if (segs >= 20\n                && (cmode == CompatibilityMode.COMPAT_CURRENT || cmode.ordinal() >= CompatibilityMode.COMPAT_1255\n                        .ordinal())) {\n            // The optimal number of cross-check blocks per segment (and per\n            // cross-segment since there are the same number of cross-segments\n            // as segments) is 3.\n            crossCheckBlocks = 3;\n        }\n\n        this.crossCheckBlocks = crossCheckBlocks;\n\n        this.splitfileType = ctx.splitfileAlgorithm;\n        this.codec = FECCodec.getInstance(splitfileType);\n\n        checkSegmentSize = codec.getCheckBlocks(segmentSize + crossCheckBlocks, cmode);\n\n        this.splitfileCryptoAlgorithm = splitfileCryptoAlgorithm;\n        if (splitfileCryptoKey != null) {\n            this.splitfileCryptoKey = splitfileCryptoKey;\n            specifySplitfileKeyInMetadata = true;\n        } else if (cmode == CompatibilityMode.COMPAT_CURRENT\n                || cmode.ordinal() >= CompatibilityMode.COMPAT_1255.ordinal()) {\n            if (hashThisLayerOnly != null) {\n                this.splitfileCryptoKey = Metadata.getCryptoKey(hashThisLayerOnly);\n            } else {\n                this.splitfileCryptoKey = Metadata.getCryptoKey(hashes);\n            }\n            specifySplitfileKeyInMetadata = false;\n        } else {\n            this.splitfileCryptoKey = null;\n            specifySplitfileKeyInMetadata = false;\n        }\n\n        int totalCheckBlocks = 0;\n        int checkTotalDataBlocks = 0;\n        underlyingOffsetDataSegments = new long[segs];\n        keyLength = SplitFileInserterSegmentStorage.getKeyLength(this);\n        this.consecutiveRNFsCountAsSuccess = ctx.consecutiveRNFsCountAsSuccess;\n        segments = makeSegments(segmentSize, segs, totalDataBlocks, crossCheckBlocks,\n                deductBlocksFromSegments, persistent, splitfileCryptoAlgorithm, splitfileCryptoKey,\n                cmode, random, keysFetching, consecutiveRNFsCountAsSuccess);\n        for (SplitFileInserterSegmentStorage segment : segments) {\n            totalCheckBlocks += segment.checkBlockCount;\n            checkTotalDataBlocks += segment.dataBlockCount;\n        }\n        assert (checkTotalDataBlocks == totalDataBlocks);\n        this.totalCheckBlocks = totalCheckBlocks;\n\n        if (crossCheckBlocks != 0) {\n            byte[] seed = Metadata.getCrossSegmentSeed(hashes, hashThisLayerOnly);\n            if (logMINOR)\n                Logger.minor(this, \"Cross-segment seed: \" + HexUtil.bytesToHex(seed));\n            Random xsRandom = new MersenneTwister(seed);\n            // Cross segment redundancy: Allocate the blocks.\n            crossSegments = new SplitFileInserterCrossSegmentStorage[segs];\n            int segLen = segmentSize;\n            for (int i = 0; i < crossSegments.length; i++) {\n                if (logMINOR)\n                    Logger.minor(this, \"Allocating blocks for cross segment \" + i);\n                if (segments.length - i == deductBlocksFromSegments) {\n                    segLen--;\n                }\n\n                SplitFileInserterCrossSegmentStorage seg = new SplitFileInserterCrossSegmentStorage(\n                        this, i, persistent, segLen, crossCheckBlocks);\n                crossSegments[i] = seg;\n                for (int j = 0; j < segLen; j++) {\n                    // Allocate random data blocks\n                    allocateCrossDataBlock(seg, xsRandom);\n                }\n                for (int j = 0; j < crossCheckBlocks; j++) {\n                    // Allocate check blocks\n                    allocateCrossCheckBlock(seg, xsRandom);\n                }\n            }\n        } else {\n            crossSegments = null;\n        }\n\n        // Now set up the RAF.\n        \n        // Setup offset arrays early so we can compute the length of encodeOffsets().\n        if(crossSegments != null) {\n            offsetCrossSegmentBlocks = new long[crossSegments.length];\n            if(persistent)\n                offsetCrossSegmentStatus = new long[crossSegments.length];\n            else\n                offsetCrossSegmentStatus = null;\n        } else {\n            offsetCrossSegmentBlocks = null;\n            offsetCrossSegmentStatus = null;\n        }\n        \n        offsetSegmentCheckBlocks = new long[segments.length];\n        \n        offsetSegmentKeys = new long[segments.length];\n        if(persistent) {\n            offsetSegmentStatus = new long[segments.length];\n        } else {\n            offsetSegmentStatus = null;\n        }\n\n        // First we have all the fixed stuff ...\n\n        byte[] paddedLastBlock = null;\n        if (dataLength % CHKBlock.DATA_LENGTH != 0) {\n            this.hasPaddedLastBlock = true;\n            long from = (dataLength / CHKBlock.DATA_LENGTH) * CHKBlock.DATA_LENGTH;\n            byte[] buf = new byte[(int) (dataLength - from)];\n            this.originalData.pread(from, buf, 0, buf.length);\n            paddedLastBlock = BucketTools.pad(buf, CHKBlock.DATA_LENGTH, buf.length);\n        } else {\n            this.hasPaddedLastBlock = false;\n        }\n        \n        byte[] header = null;\n        Bucket segmentSettings = null, crossSegmentSettings = null;\n        int offsetsLength = 0;\n        if (persistent) {\n            header = encodeHeader();\n            offsetsLength = encodeOffsets().length;\n\n            segmentSettings = encodeSegmentSettings(); // Checksummed with length\n            try {\n                crossSegmentSettings = encodeCrossSegmentSettings(bf); // Individually checksummed with length\n            } catch (IOException e) {\n                throw new InsertException(InsertException.BUCKET_ERROR,\n                        \"Failed to write to temporary storage while creating splitfile inserter\",\n                        null);\n            }\n        }\n\n        long ptr = 0;\n        if (persistent) {\n            ptr = header.length + offsetsLength + segmentSettings.size() + crossSegmentSettings.size();\n            offsetOverallStatus = ptr;\n            overallStatusLength = encodeOverallStatus().length;\n            ptr += overallStatusLength;\n\n            // Pad to a 4KB block boundary.\n            int padding = 0;\n            padding = (int) (ptr % 4096);\n            if (padding != 0)\n                padding = 4096 - padding;\n\n            ptr += padding;\n        } else {\n            overallStatusLength = 0;\n            offsetOverallStatus = 0;\n        }\n\n        this.offsetPaddedLastBlock = ptr;\n\n        if (hasPaddedLastBlock)\n            ptr += CHKBlock.DATA_LENGTH;\n\n        if (crossSegments != null) {\n            for (int i = 0; i < crossSegments.length; i++) {\n                offsetCrossSegmentBlocks[i] = ptr;\n                ptr += crossSegments[i].crossCheckBlockCount * CHKBlock.DATA_LENGTH;\n            }\n        }\n\n        for (int i = 0; i < segments.length; i++) {\n            offsetSegmentCheckBlocks[i] = ptr;\n            ptr += segments[i].checkBlockCount * CHKBlock.DATA_LENGTH;\n        }\n\n        if (persistent) {\n            for (int i = 0; i < segments.length; i++) {\n                offsetSegmentStatus[i] = ptr;\n                ptr += segments[i].storedStatusLength();\n            }\n\n            if (crossSegments != null) {\n                for (int i = 0; i < crossSegments.length; i++) {\n                    offsetCrossSegmentStatus[i] = ptr;\n                    ptr += crossSegments[i].storedStatusLength();\n                }\n            }\n        }\n        \n        for (int i = 0; i < segments.length; i++) {\n            offsetSegmentKeys[i] = ptr;\n            ptr += segments[i].storedKeysLength();\n        }\n\n        this.raf = rafFactory.makeRAF(ptr);\n        if (persistent) {\n            ptr = 0;\n            raf.pwrite(ptr, header, 0, header.length);\n            ptr += header.length;\n            byte[] encodedOffsets = encodeOffsets();\n            assert(encodedOffsets.length == offsetsLength);\n            raf.pwrite(ptr, encodedOffsets, 0, encodedOffsets.length);\n            ptr += encodedOffsets.length;\n            BucketTools.copyTo(segmentSettings, raf, ptr, Long.MAX_VALUE);\n            ptr += segmentSettings.size();\n            BucketTools.copyTo(crossSegmentSettings, raf, ptr, Long.MAX_VALUE);\n            ptr += crossSegmentSettings.size();\n            segmentSettings.free();\n            crossSegmentSettings.free();\n            writeOverallStatus(true);\n        }\n        if (hasPaddedLastBlock)\n            raf.pwrite(offsetPaddedLastBlock, paddedLastBlock, 0, paddedLastBlock.length);\n        if (persistent) {\n            // Padding is initialized to random already.\n            for (SplitFileInserterSegmentStorage segment : segments) {\n                segment.storeStatus(true);\n            }\n            if (crossSegments != null) {\n                for (SplitFileInserterCrossSegmentStorage segment : crossSegments) {\n                    segment.storeStatus();\n                }\n            }\n            for (SplitFileInserterSegmentStorage segment : segments) {\n                segment.clearKeys();\n            }\n        }\n        // Keys are empty, and invalid.\n        status = Status.NOT_STARTED;\n    }","commit_id":"b450fcff5c83988f4682a1c16e2be7e84626af9e","url":"https://github.com/freenet/fred"},{"original_method":"/** Includes magic, version, length, basic settings, checksum. */\n    private byte[] encodeHeader() {\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        DataOutputStream dos = new DataOutputStream(baos);\n        try {\n            dos.writeLong(MAGIC);\n            OutputStream os = checker.checksumWriterWithLength(baos, new ArrayBucketFactory());\n            dos = new DataOutputStream(os);\n            dos.writeInt(VERSION);\n            originalData.storeTo(dos);\n            dos.writeInt(totalDataBlocks);\n            dos.writeInt(totalCheckBlocks);\n            dos.writeShort(splitfileType); // And hence the FECCodec\n            dos.writeLong(dataLength);\n            dos.writeLong(decompressedLength);\n            clientMetadata.writeTo(dos);\n            if (compressionCodec == null)\n                dos.writeShort((short) -1);\n            else\n                dos.writeShort(compressionCodec.metadataID);\n            dos.writeInt(segments.length);\n            dos.writeInt(segmentSize);\n            dos.writeInt(checkSegmentSize);\n            dos.writeInt(crossCheckBlocks);\n            dos.writeByte(this.splitfileCryptoAlgorithm);\n            dos.writeBoolean(this.splitfileCryptoKey != null);\n            if (this.splitfileCryptoKey != null) {\n                assert (splitfileCryptoKey.length == 32);\n                dos.write(splitfileCryptoKey);\n            }\n            dos.writeInt(keyLength);\n            dos.writeInt(cmode.ordinal());\n            // hasPaddedLastBlock will be recomputed.\n            dos.writeInt(deductBlocksFromSegments);\n            dos.writeInt(maxRetries);\n            dos.writeInt(consecutiveRNFsCountAsSuccess);\n            // FIXME do we want to include offsets???\n            dos.close();\n            return baos.toByteArray();\n        } catch (IOException e) {\n            throw new Error(e); // Impossible\n        }\n    }","id":69750,"modified_method":"/** Includes magic, version, length, basic settings, checksum. */\n    private byte[] encodeHeader() {\n        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n        DataOutputStream dos = new DataOutputStream(baos);\n        try {\n            dos.writeLong(MAGIC);\n            dos.writeInt(checker.getChecksumTypeID());\n            OutputStream os = checker.checksumWriterWithLength(baos, new ArrayBucketFactory());\n            dos = new DataOutputStream(os);\n            dos.writeInt(VERSION);\n            originalData.storeTo(dos);\n            dos.writeInt(totalDataBlocks);\n            dos.writeInt(totalCheckBlocks);\n            dos.writeShort(splitfileType); // And hence the FECCodec\n            dos.writeLong(dataLength);\n            dos.writeLong(decompressedLength);\n            clientMetadata.writeTo(dos);\n            if (compressionCodec == null)\n                dos.writeShort((short) -1);\n            else\n                dos.writeShort(compressionCodec.metadataID);\n            dos.writeInt(segments.length);\n            dos.writeInt(segmentSize);\n            dos.writeInt(checkSegmentSize);\n            dos.writeInt(crossCheckBlocks);\n            dos.writeByte(this.splitfileCryptoAlgorithm);\n            dos.writeBoolean(this.splitfileCryptoKey != null);\n            if (this.splitfileCryptoKey != null) {\n                assert (splitfileCryptoKey.length == 32);\n                dos.write(splitfileCryptoKey);\n            }\n            dos.writeInt(keyLength);\n            dos.writeInt(cmode.ordinal());\n            // hasPaddedLastBlock will be recomputed.\n            dos.writeInt(deductBlocksFromSegments);\n            dos.writeInt(maxRetries);\n            dos.writeInt(consecutiveRNFsCountAsSuccess);\n            dos.close();\n            return baos.toByteArray();\n        } catch (IOException e) {\n            throw new Error(e); // Impossible\n        }\n    }","commit_id":"b450fcff5c83988f4682a1c16e2be7e84626af9e","url":"https://github.com/freenet/fred"},{"original_method":"public Mirror getMirror( ArtifactRepository repository, List<Mirror> mirrors )\n    {\n        String repoId = repository.getId();\n\n        if ( repoId != null && mirrors != null )\n        {\n            for ( Mirror mirror : mirrors )\n            {\n                if ( repoId.equals( mirror.getMirrorOf() ) )\n                {\n                    return mirror;\n                }\n            }\n\n            for ( Mirror mirror : mirrors )\n            {\n                if ( DefaultMirrorBuilder.matchPattern( repository, mirror.getMirrorOf() ) )\n                {\n                    return mirror;\n                }\n            }\n        }\n\n        return null;\n    }","id":69751,"modified_method":"public Mirror getMirror( ArtifactRepository repository, List<Mirror> mirrors )\n    {\n        return mirrorSelector.getMirror( repository, mirrors );\n    }","commit_id":"4648efa59b8e18c03ca63036a477cd89901eb0d2","url":"https://github.com/apache/maven"},{"original_method":"public void testPatternsWithExternal()\n    {\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\", \"http://localhost\" ), \"*\" ) );\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"a\", \"http://localhost\" ), \"external:*\" ) );\n\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\", \"http://localhost\" ), \"external:*,a\" ) );\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"a\", \"http://localhost\" ), \"external:*,!a\" ) );\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\", \"http://localhost\" ), \"a,external:*\" ) );\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"a\", \"http://localhost\" ), \"!a,external:*\" ) );\n\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"c\", \"http://localhost\" ), \"!a,external:*\" ) );\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"c\", \"http://somehost\" ), \"!a,external:*\" ) );\n    }","id":69752,"modified_method":"public void testPatternsWithExternal()\n    {\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\", \"http://localhost\" ), \"*\" ) );\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"a\", \"http://localhost\" ), \"external:*\" ) );\n\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\", \"http://localhost\" ), \"external:*,a\" ) );\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"a\", \"http://localhost\" ), \"external:*,!a\" ) );\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\", \"http://localhost\" ), \"a,external:*\" ) );\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"a\", \"http://localhost\" ), \"!a,external:*\" ) );\n\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"c\", \"http://localhost\" ), \"!a,external:*\" ) );\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"c\", \"http://somehost\" ), \"!a,external:*\" ) );\n    }","commit_id":"4648efa59b8e18c03ca63036a477cd89901eb0d2","url":"https://github.com/apache/maven"},{"original_method":"public void testMirrorStopOnFirstMatch()\n    {\n        //exact matches win first\n        mirrorBuilder.addMirror( \"a2\", \"a,b\", \"http://a2\", null );\n        mirrorBuilder.addMirror( \"a\", \"a\", \"http://a\", null );\n        //make sure repeated entries are skipped\n        mirrorBuilder.addMirror( \"a\", \"a\", \"http://a3\", null );\n\n        mirrorBuilder.addMirror( \"b\", \"b\", \"http://b\", null );\n        mirrorBuilder.addMirror( \"c\", \"d,e\", \"http://de\", null );\n        mirrorBuilder.addMirror( \"c\", \"*\", \"http://wildcard\", null );\n        mirrorBuilder.addMirror( \"c\", \"e,f\", \"http://ef\", null );\n\n        ArtifactRepository repo = null;\n        repo = mirrorBuilder.getMirrorRepository( getRepo( \"a\", \"http://a.a\" ) );\n        assertEquals( \"http://a\", repo.getUrl() );\n\n        repo = mirrorBuilder.getMirrorRepository( getRepo( \"b\", \"http://a.a\" ) );\n        assertEquals( \"http://b\", repo.getUrl() );\n\n        repo = mirrorBuilder.getMirrorRepository( getRepo( \"c\", \"http://c.c\" ) );\n        assertEquals( \"http://wildcard\", repo.getUrl() );\n\n        repo = mirrorBuilder.getMirrorRepository( getRepo( \"d\", \"http://d\" ) );\n        assertEquals( \"http://de\", repo.getUrl() );\n\n        repo = mirrorBuilder.getMirrorRepository( getRepo( \"e\", \"http://e\" ) );\n        assertEquals( \"http://de\", repo.getUrl() );\n\n        repo = mirrorBuilder.getMirrorRepository( getRepo( \"f\", \"http://f\" ) );\n        assertEquals( \"http://wildcard\", repo.getUrl() );\n\n    }","id":69753,"modified_method":"public void testMirrorStopOnFirstMatch()\n    {\n        // exact matches win first\n        Mirror mirrorA2 = newMirror( \"a2\", \"a,b\", \"http://a2\" );\n        Mirror mirrorA = newMirror( \"a\", \"a\", \"http://a\" );\n        // make sure repeated entries are skipped\n        Mirror mirrorA3 = newMirror( \"a\", \"a\", \"http://a3\" );\n\n        Mirror mirrorB = newMirror( \"b\", \"b\", \"http://b\" );\n        Mirror mirrorC = newMirror( \"c\", \"d,e\", \"http://de\" );\n        Mirror mirrorC2 = newMirror( \"c\", \"*\", \"http://wildcard\" );\n        Mirror mirrorC3 = newMirror( \"c\", \"e,f\", \"http://ef\" );\n\n        List<Mirror> mirrors = Arrays.asList( mirrorA2, mirrorA, mirrorA3, mirrorB, mirrorC, mirrorC2, mirrorC3 );\n\n        assertSame( mirrorA, mirrorSelector.getMirror( getRepo( \"a\", \"http://a.a\" ), mirrors ) );\n\n        assertSame( mirrorB, mirrorSelector.getMirror( getRepo( \"b\", \"http://a.a\" ), mirrors ) );\n\n        assertSame( mirrorC2, mirrorSelector.getMirror( getRepo( \"c\", \"http://c.c\" ), mirrors ) );\n\n        assertSame( mirrorC, mirrorSelector.getMirror( getRepo( \"d\", \"http://d\" ), mirrors ) );\n\n        assertSame( mirrorC, mirrorSelector.getMirror( getRepo( \"e\", \"http://e\" ), mirrors ) );\n\n        assertSame( mirrorC2, mirrorSelector.getMirror( getRepo( \"f\", \"http://f\" ), mirrors ) );\n    }","commit_id":"4648efa59b8e18c03ca63036a477cd89901eb0d2","url":"https://github.com/apache/maven"},{"original_method":"public void testPatterns()\n    {\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \"*\" ) );\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \"*,\" ) );\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \",*,\" ) );\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \"*,\" ) );\n\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \"a\" ) );\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \"a,\" ) );\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \",a,\" ) );\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \"a,\" ) );\n\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"b\" ), \"a\" ) );\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"b\" ), \"a,\" ) );\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"b\" ), \",a\" ) );\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"b\" ), \",a,\" ) );\n\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \"a,b\" ) );\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"b\" ), \"a,b\" ) );\n\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"c\" ), \"a,b\" ) );\n\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \"*\" ) );\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \"*,b\" ) );\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \"*,!b\" ) );\n\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \"*,!a\" ) );\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"a\" ), \"!a,*\" ) );\n\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"c\" ), \"*,!a\" ) );\n        assertTrue( DefaultMirrorBuilder.matchPattern( getRepo( \"c\" ), \"!a,*\" ) );\n\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"c\" ), \"!a,!c\" ) );\n        assertFalse( DefaultMirrorBuilder.matchPattern( getRepo( \"d\" ), \"!a,!c*\" ) );\n    }","id":69754,"modified_method":"public void testPatterns()\n    {\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \"*\" ) );\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \"*,\" ) );\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \",*,\" ) );\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \"*,\" ) );\n\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \"a\" ) );\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \"a,\" ) );\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \",a,\" ) );\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \"a,\" ) );\n\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"b\" ), \"a\" ) );\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"b\" ), \"a,\" ) );\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"b\" ), \",a\" ) );\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"b\" ), \",a,\" ) );\n\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \"a,b\" ) );\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"b\" ), \"a,b\" ) );\n\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"c\" ), \"a,b\" ) );\n\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \"*\" ) );\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \"*,b\" ) );\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \"*,!b\" ) );\n\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \"*,!a\" ) );\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"a\" ), \"!a,*\" ) );\n\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"c\" ), \"*,!a\" ) );\n        assertTrue( DefaultMirrorSelector.matchPattern( getRepo( \"c\" ), \"!a,*\" ) );\n\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"c\" ), \"!a,!c\" ) );\n        assertFalse( DefaultMirrorSelector.matchPattern( getRepo( \"d\" ), \"!a,!c*\" ) );\n    }","commit_id":"4648efa59b8e18c03ca63036a477cd89901eb0d2","url":"https://github.com/apache/maven"},{"original_method":"public void testMirrorWildcardLookup()\n    {\n        mirrorBuilder.addMirror( \"a\", \"a\", \"http://a\", null );\n        mirrorBuilder.addMirror( \"b\", \"b\", \"http://b\", null );\n        mirrorBuilder.addMirror( \"c\", \"*\", \"http://wildcard\", null );\n\n        ArtifactRepository repo = null;\n        repo = mirrorBuilder.getMirrorRepository( getRepo( \"a\", \"http://a.a\" ) );\n        assertEquals( \"http://a\", repo.getUrl() );\n\n        repo = mirrorBuilder.getMirrorRepository( getRepo( \"b\", \"http://a.a\" ) );\n        assertEquals( \"http://b\", repo.getUrl() );\n\n        repo = mirrorBuilder.getMirrorRepository( getRepo( \"c\", \"http://c.c\" ) );\n        assertEquals( \"http://wildcard\", repo.getUrl() );\n\n    }","id":69755,"modified_method":"public void testMirrorWildcardLookup()\n    {\n        Mirror mirrorA = newMirror( \"a\", \"a\", \"http://a\" );\n        Mirror mirrorB = newMirror( \"b\", \"b\", \"http://b\" );\n        Mirror mirrorC = newMirror( \"c\", \"*\", \"http://wildcard\" );\n\n        List<Mirror> mirrors = Arrays.asList( mirrorA, mirrorB, mirrorC );\n\n        assertSame( mirrorA, mirrorSelector.getMirror( getRepo( \"a\", \"http://a.a\" ), mirrors ) );\n\n        assertSame( mirrorB, mirrorSelector.getMirror( getRepo( \"b\", \"http://a.a\" ), mirrors ) );\n\n        assertSame( mirrorC, mirrorSelector.getMirror( getRepo( \"c\", \"http://c.c\" ), mirrors ) );\n    }","commit_id":"4648efa59b8e18c03ca63036a477cd89901eb0d2","url":"https://github.com/apache/maven"},{"original_method":"public void testExternalURL()\n    {\n        assertTrue( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"http://somehost\" ) ) );\n        assertTrue( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"http://somehost:9090/somepath\" ) ) );\n        assertTrue( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"ftp://somehost\" ) ) );\n        assertTrue( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"http://192.168.101.1\" ) ) );\n        assertTrue( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"http://\" ) ) );\n        // these are local\n        assertFalse( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"http://localhost:8080\" ) ) );\n        assertFalse( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"http://127.0.0.1:9090\" ) ) );\n        assertFalse( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"file://localhost/somepath\" ) ) );\n        assertFalse( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"file://localhost/D:/somepath\" ) ) );\n        assertFalse( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"http://localhost\" ) ) );\n        assertFalse( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"http://127.0.0.1\" ) ) );\n        assertFalse( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"file:///somepath\" ) ) );\n        assertFalse( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"file://D:/somepath\" ) ) );\n\n        // not a proper url so returns false;\n        assertFalse( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"192.168.101.1\" ) ) );\n        assertFalse( DefaultMirrorBuilder.isExternalRepo( getRepo( \"foo\", \"\" ) ) );\n    }","id":69756,"modified_method":"public void testExternalURL()\n    {\n        assertTrue( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"http://somehost\" ) ) );\n        assertTrue( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"http://somehost:9090/somepath\" ) ) );\n        assertTrue( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"ftp://somehost\" ) ) );\n        assertTrue( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"http://192.168.101.1\" ) ) );\n        assertTrue( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"http://\" ) ) );\n        // these are local\n        assertFalse( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"http://localhost:8080\" ) ) );\n        assertFalse( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"http://127.0.0.1:9090\" ) ) );\n        assertFalse( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"file://localhost/somepath\" ) ) );\n        assertFalse( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"file://localhost/D:/somepath\" ) ) );\n        assertFalse( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"http://localhost\" ) ) );\n        assertFalse( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"http://127.0.0.1\" ) ) );\n        assertFalse( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"file:///somepath\" ) ) );\n        assertFalse( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"file://D:/somepath\" ) ) );\n\n        // not a proper url so returns false;\n        assertFalse( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"192.168.101.1\" ) ) );\n        assertFalse( DefaultMirrorSelector.isExternalRepo( getRepo( \"foo\", \"\" ) ) );\n    }","commit_id":"4648efa59b8e18c03ca63036a477cd89901eb0d2","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    protected void tearDown()\n        throws Exception\n    {\n        mirrorBuilder = null;\n        super.tearDown();\n    }","id":69757,"modified_method":"@Override\n    protected void tearDown()\n        throws Exception\n    {\n        mirrorSelector = null;\n        repositorySystem = null;\n\n        super.tearDown();\n    }","commit_id":"4648efa59b8e18c03ca63036a477cd89901eb0d2","url":"https://github.com/apache/maven"},{"original_method":"protected void setUp()\n        throws Exception\n    {\n        mirrorBuilder = (DefaultMirrorBuilder) lookup( MirrorBuilder.class );\n        repositorySystem = lookup( ArtifactRepositoryFactory.class );\n        mirrorBuilder.clearMirrors();\n    }","id":69758,"modified_method":"protected void setUp()\n        throws Exception\n    {\n        mirrorSelector = (DefaultMirrorSelector) lookup( MirrorSelector.class );\n        repositorySystem = lookup( ArtifactRepositoryFactory.class );\n    }","commit_id":"4648efa59b8e18c03ca63036a477cd89901eb0d2","url":"https://github.com/apache/maven"},{"original_method":"public void testMirrorLookup()\n    {\n        mirrorBuilder.addMirror( \"a\", \"a\", \"http://a\", null );\n        mirrorBuilder.addMirror( \"b\", \"b\", \"http://b\", null );\n\n        ArtifactRepository repo = null;\n        repo = mirrorBuilder.getMirrorRepository( getRepo( \"a\", \"http://a.a\" ) );\n        assertEquals( \"http://a\", repo.getUrl() );\n\n        repo = mirrorBuilder.getMirrorRepository( getRepo( \"b\", \"http://a.a\" ) );\n        assertEquals( \"http://b\", repo.getUrl() );\n\n        repo = mirrorBuilder.getMirrorRepository( getRepo( \"c\", \"http://c.c\" ) );\n        assertEquals( \"http://c.c\", repo.getUrl() );\n\n    }","id":69759,"modified_method":"public void testMirrorLookup()\n    {\n        Mirror mirrorA = newMirror( \"a\", \"a\", \"http://a\" );\n        Mirror mirrorB = newMirror( \"b\", \"b\", \"http://b\" );\n\n        List<Mirror> mirrors = Arrays.asList( mirrorA, mirrorB );\n\n        assertSame( mirrorA, mirrorSelector.getMirror( getRepo( \"a\", \"http://a.a\" ), mirrors ) );\n\n        assertSame( mirrorB, mirrorSelector.getMirror( getRepo( \"b\", \"http://a.a\" ), mirrors ) );\n\n        assertNull( mirrorSelector.getMirror( getRepo( \"c\", \"http://c.c\" ), mirrors ) );\n    }","commit_id":"4648efa59b8e18c03ca63036a477cd89901eb0d2","url":"https://github.com/apache/maven"},{"original_method":"public void handleMessage(Message message) throws Fault {\n            AssertionInfoMap aim = message.get(AssertionInfoMap.class);\n            // extract Assertion information\n            if (aim != null) {\n                Collection<AssertionInfo> ais = aim.get(SP12Constants.ISSUED_TOKEN);\n                if (ais == null) {\n                    return;\n                }\n                if (!isRequestor(message)) {\n                    List<WSHandlerResult> results = \n                        CastUtils.cast((List<?>)message.get(WSHandlerConstants.RECV_RESULTS));\n                    if (results != null) {\n                        parseHandlerResults(results, message, aim);\n                    }\n                } else {\n                    //client side should be checked on the way out\n                    for (AssertionInfo ai : ais) {\n                        ai.setAsserted(true);\n                    }                    \n                }\n            }\n        }","id":69760,"modified_method":"public void handleMessage(Message message) throws Fault {\n            AssertionInfoMap aim = message.get(AssertionInfoMap.class);\n            // extract Assertion information\n            if (aim != null) {\n                Collection<AssertionInfo> ais = aim.get(SP12Constants.ISSUED_TOKEN);\n                if (ais == null) {\n                    return;\n                }\n                if (!isRequestor(message)) {\n                    List<WSHandlerResult> results = \n                        CastUtils.cast((List<?>)message.get(WSHandlerConstants.RECV_RESULTS));\n                    if (results != null && results.size() > 0) {\n                        parseHandlerResults(results.get(0), message, aim);\n                    }\n                } else {\n                    //client side should be checked on the way out\n                    for (AssertionInfo ai : ais) {\n                        ai.setAsserted(true);\n                    }                    \n                }\n            }\n        }","commit_id":"13547e2a9773b5d6b27a8d5c3472606922e309dd","url":"https://github.com/apache/cxf"},{"original_method":"private void parseHandlerResults(\n            List<WSHandlerResult> results,\n            Message message,\n            AssertionInfoMap aim\n        ) {\n            if (results != null) {\n                for (WSHandlerResult rResult : results) {\n                    List<WSSecurityEngineResult> signedResults = \n                        new ArrayList<WSSecurityEngineResult>();\n                    WSSecurityUtil.fetchAllActionResults(\n                        rResult.getResults(), WSConstants.SIGN, signedResults\n                    );\n                    IssuedTokenPolicyValidator issuedValidator = \n                        new IssuedTokenPolicyValidator(signedResults, message);\n                    Collection<AssertionInfo> issuedAis = aim.get(SP12Constants.ISSUED_TOKEN);\n                    \n                    for (AssertionWrapper assertionWrapper \n                        : findSamlTokenResults(rResult.getResults())) {\n                        boolean valid = issuedValidator.validatePolicy(issuedAis, assertionWrapper);\n                        if (valid) {\n                            SecurityToken token = createSecurityToken(assertionWrapper);\n                            message.getExchange().put(SecurityConstants.TOKEN, token);\n                            return;\n                        }\n                    }\n                    for (BinarySecurity binarySecurityToken \n                        : findBinarySecurityTokenResults(rResult.getResults())) {\n                        boolean valid = issuedValidator.validatePolicy(issuedAis, binarySecurityToken);\n                        if (valid) {\n                            SecurityToken token = createSecurityToken(binarySecurityToken);\n                            message.getExchange().put(SecurityConstants.TOKEN, token);\n                            return;\n                        }\n                    }\n                }\n            }\n        }","id":69761,"modified_method":"private void parseHandlerResults(\n            WSHandlerResult rResult,\n            Message message,\n            AssertionInfoMap aim\n        ) {\n            List<WSSecurityEngineResult> signedResults = new ArrayList<WSSecurityEngineResult>();\n            WSSecurityUtil.fetchAllActionResults(\n                rResult.getResults(), WSConstants.SIGN, signedResults\n            );\n            \n            IssuedTokenPolicyValidator issuedValidator = \n                new IssuedTokenPolicyValidator(signedResults, message);\n            Collection<AssertionInfo> issuedAis = aim.get(SP12Constants.ISSUED_TOKEN);\n\n            for (AssertionWrapper assertionWrapper : findSamlTokenResults(rResult.getResults())) {\n                boolean valid = issuedValidator.validatePolicy(issuedAis, assertionWrapper);\n                if (valid) {\n                    SecurityToken token = createSecurityToken(assertionWrapper);\n                    message.getExchange().put(SecurityConstants.TOKEN, token);\n                    return;\n                }\n            }\n            for (BinarySecurity binarySecurityToken : findBinarySecurityTokenResults(rResult.getResults())) {\n                boolean valid = issuedValidator.validatePolicy(issuedAis, binarySecurityToken);\n                if (valid) {\n                    SecurityToken token = createSecurityToken(binarySecurityToken);\n                    message.getExchange().put(SecurityConstants.TOKEN, token);\n                    return;\n                }\n            }\n        }","commit_id":"13547e2a9773b5d6b27a8d5c3472606922e309dd","url":"https://github.com/apache/cxf"},{"original_method":"public boolean validatePolicy(\n        Collection<AssertionInfo> issuedAis,\n        BinarySecurity binarySecurityToken\n    ) {\n        if (issuedAis != null) {\n            for (AssertionInfo ai : issuedAis) {\n                IssuedToken issuedToken = (IssuedToken)ai.getAssertion();\n                ai.setAsserted(true);\n\n                boolean tokenRequired = isTokenRequired(issuedToken, message);\n                if (tokenRequired && binarySecurityToken == null) {\n                    ai.setNotAsserted(\n                        \"The received token does not match the token inclusion requirement\"\n                    );\n                    return false;\n                }\n                if (!tokenRequired) {\n                    continue;\n                }\n\n                Element template = issuedToken.getRstTemplate();\n                if (template != null && !checkIssuedTokenTemplate(template, binarySecurityToken)) {\n                    ai.setNotAsserted(\"Error in validating the IssuedToken policy\");\n                    return false;\n                }\n            }\n        }\n        return true;\n    }","id":69762,"modified_method":"public boolean validatePolicy(\n        Collection<AssertionInfo> ais,\n        BinarySecurity binarySecurityToken\n    ) {\n        if (ais == null || ais.isEmpty()) {\n            return true;\n        }\n        \n        for (AssertionInfo ai : ais) {\n            IssuedToken issuedToken = (IssuedToken)ai.getAssertion();\n            ai.setAsserted(true);\n\n            if (!isTokenRequired(issuedToken, message)) {\n                continue;\n            }\n            if (binarySecurityToken == null) {\n                ai.setNotAsserted(\n                    \"The received token does not match the token inclusion requirement\"\n                );\n                return false;\n            }\n\n            Element template = issuedToken.getRstTemplate();\n            if (template != null && !checkIssuedTokenTemplate(template, binarySecurityToken)) {\n                ai.setNotAsserted(\"Error in validating the IssuedToken policy\");\n                return false;\n            }\n        }\n        return true;\n    }","commit_id":"13547e2a9773b5d6b27a8d5c3472606922e309dd","url":"https://github.com/apache/cxf"},{"original_method":"public boolean validatePolicy(\n        Collection<AssertionInfo> issuedAis,\n        AssertionWrapper assertionWrapper\n    ) {\n        if (issuedAis != null) {\n            for (AssertionInfo ai : issuedAis) {\n                IssuedToken issuedToken = (IssuedToken)ai.getAssertion();\n                ai.setAsserted(true);\n                \n                boolean tokenRequired = isTokenRequired(issuedToken, message);\n                if (tokenRequired && assertionWrapper == null) {\n                    ai.setNotAsserted(\n                        \"The received token does not match the token inclusion requirement\"\n                    );\n                    return false;\n                }\n                if (!tokenRequired) {\n                    continue;\n                }\n                \n                Element template = issuedToken.getRstTemplate();\n                if (template != null && !checkIssuedTokenTemplate(template, assertionWrapper)) {\n                    ai.setNotAsserted(\"Error in validating the IssuedToken policy\");\n                    return false;\n                }\n                \n                TLSSessionInfo tlsInfo = message.get(TLSSessionInfo.class);\n                Certificate[] tlsCerts = null;\n                if (tlsInfo != null) {\n                    tlsCerts = tlsInfo.getPeerCertificates();\n                }\n                if (!checkHolderOfKey(assertionWrapper, signedResults, tlsCerts)) {\n                    ai.setNotAsserted(\"Assertion fails holder-of-key requirements\");\n                    return false;\n                }\n            }\n        }\n        return true;\n    }","id":69763,"modified_method":"public boolean validatePolicy(\n        Collection<AssertionInfo> ais,\n        AssertionWrapper assertionWrapper\n    ) {\n        if (ais == null || ais.isEmpty()) {\n            return true;\n        }\n        \n        for (AssertionInfo ai : ais) {\n            IssuedToken issuedToken = (IssuedToken)ai.getAssertion();\n            ai.setAsserted(true);\n\n            if (!isTokenRequired(issuedToken, message)) {\n                continue;\n            }\n            \n            if (assertionWrapper == null) {\n                ai.setNotAsserted(\n                    \"The received token does not match the token inclusion requirement\"\n                );\n                return false;\n            }\n\n            Element template = issuedToken.getRstTemplate();\n            if (template != null && !checkIssuedTokenTemplate(template, assertionWrapper)) {\n                ai.setNotAsserted(\"Error in validating the IssuedToken policy\");\n                return false;\n            }\n\n            TLSSessionInfo tlsInfo = message.get(TLSSessionInfo.class);\n            Certificate[] tlsCerts = null;\n            if (tlsInfo != null) {\n                tlsCerts = tlsInfo.getPeerCertificates();\n            }\n            if (!checkHolderOfKey(assertionWrapper, signedResults, tlsCerts)) {\n                ai.setNotAsserted(\"Assertion fails holder-of-key requirements\");\n                return false;\n            }\n        }\n        return true;\n    }","commit_id":"13547e2a9773b5d6b27a8d5c3472606922e309dd","url":"https://github.com/apache/cxf"},{"original_method":"private void parseHandlerResults(\n            List<WSHandlerResult> results,\n            Message message,\n            AssertionInfoMap aim\n        ) {\n            if (results != null) {\n                for (WSHandlerResult rResult : results) {\n                    List<WSSecurityEngineResult> kerberosResults = findKerberosResults(rResult.getResults());\n                    for (WSSecurityEngineResult wser : kerberosResults) {\n                        KerberosSecurity kerberosToken = \n                            (KerberosSecurity)wser.get(WSSecurityEngineResult.TAG_BINARY_SECURITY_TOKEN);\n                        KerberosTokenPolicyValidator kerberosValidator = \n                            new KerberosTokenPolicyValidator(message);\n                        boolean valid = kerberosValidator.validatePolicy(aim, kerberosToken);\n                        if (valid) {\n                            SecurityToken token = createSecurityToken(kerberosToken);\n                            token.setSecret((byte[])wser.get(WSSecurityEngineResult.TAG_SECRET));\n                            message.getExchange().put(SecurityConstants.TOKEN, token);\n                            return;\n                        }\n                    }\n                }\n            }\n        }","id":69764,"modified_method":"private void parseHandlerResults(\n            WSHandlerResult rResult,\n            Message message,\n            AssertionInfoMap aim\n        ) {\n            List<WSSecurityEngineResult> kerberosResults = findKerberosResults(rResult.getResults());\n            for (WSSecurityEngineResult wser : kerberosResults) {\n                KerberosSecurity kerberosToken = \n                    (KerberosSecurity)wser.get(WSSecurityEngineResult.TAG_BINARY_SECURITY_TOKEN);\n                KerberosTokenPolicyValidator kerberosValidator = \n                    new KerberosTokenPolicyValidator(message);\n                boolean valid = kerberosValidator.validatePolicy(aim, kerberosToken);\n                if (valid) {\n                    SecurityToken token = createSecurityToken(kerberosToken);\n                    token.setSecret((byte[])wser.get(WSSecurityEngineResult.TAG_SECRET));\n                    message.getExchange().put(SecurityConstants.TOKEN, token);\n                    return;\n                }\n            }\n        }","commit_id":"13547e2a9773b5d6b27a8d5c3472606922e309dd","url":"https://github.com/apache/cxf"},{"original_method":"public void handleMessage(Message message) throws Fault {\n            AssertionInfoMap aim = message.get(AssertionInfoMap.class);\n            // extract Assertion information\n            if (aim != null) {\n                Collection<AssertionInfo> ais = aim.get(SP12Constants.KERBEROS_TOKEN);\n                if (ais == null) {\n                    return;\n                }\n                if (!isRequestor(message)) {\n                    List<WSHandlerResult> results = \n                        CastUtils.cast((List<?>)message.get(WSHandlerConstants.RECV_RESULTS));\n                    if (results != null) {\n                        parseHandlerResults(results, message, aim);\n                    }\n                } else {\n                    //client side should be checked on the way out\n                    for (AssertionInfo ai : ais) {\n                        ai.setAsserted(true);\n                    }                    \n                }\n            }\n        }","id":69765,"modified_method":"public void handleMessage(Message message) throws Fault {\n            AssertionInfoMap aim = message.get(AssertionInfoMap.class);\n            // extract Assertion information\n            if (aim != null) {\n                Collection<AssertionInfo> ais = aim.get(SP12Constants.KERBEROS_TOKEN);\n                if (ais == null) {\n                    return;\n                }\n                if (!isRequestor(message)) {\n                    List<WSHandlerResult> results = \n                        CastUtils.cast((List<?>)message.get(WSHandlerConstants.RECV_RESULTS));\n                    if (results != null && results.size() > 0) {\n                        parseHandlerResults(results.get(0), message, aim);\n                    }\n                } else {\n                    //client side should be checked on the way out\n                    for (AssertionInfo ai : ais) {\n                        ai.setAsserted(true);\n                    }                    \n                }\n            }\n        }","commit_id":"13547e2a9773b5d6b27a8d5c3472606922e309dd","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * Check the supporting token coverage\n     */\n    private boolean checkSupportingTokenCoverage(\n        AssertionInfoMap aim,\n        SoapMessage msg,\n        List<WSSecurityEngineResult> results, \n        List<WSSecurityEngineResult> signedResults, \n        boolean utWithCallbacks\n    ) {\n        boolean check = true;\n        \n        SignedTokenPolicyValidator suppValidator = \n            new SignedTokenPolicyValidator(msg, results, signedResults);\n        suppValidator.setValidateUsernameToken(utWithCallbacks);\n        check &= suppValidator.validatePolicy(aim);\n\n        EndorsingTokenPolicyValidator endorsingValidator = \n            new EndorsingTokenPolicyValidator(msg, results, signedResults);\n        check &= endorsingValidator.validatePolicy(aim);\n\n        SignedEndorsingTokenPolicyValidator signedEdorsingValidator = \n            new SignedEndorsingTokenPolicyValidator(msg, results, signedResults);\n        check &= signedEdorsingValidator.validatePolicy(aim);\n\n        SignedEncryptedTokenPolicyValidator signedEncryptedValidator = \n            new SignedEncryptedTokenPolicyValidator(msg, results, signedResults);\n        signedEncryptedValidator.setValidateUsernameToken(utWithCallbacks);\n        check &= signedEncryptedValidator.validatePolicy(aim);\n\n        EncryptedTokenPolicyValidator encryptedValidator = \n            new EncryptedTokenPolicyValidator(msg, results, signedResults);\n        encryptedValidator.setValidateUsernameToken(utWithCallbacks);\n        check &= encryptedValidator.validatePolicy(aim);\n\n        EndorsingEncryptedTokenPolicyValidator endorsingEncryptedValidator = \n            new EndorsingEncryptedTokenPolicyValidator(msg, results, signedResults);\n        endorsingEncryptedValidator.setValidateUsernameToken(utWithCallbacks);\n        check &= endorsingEncryptedValidator.validatePolicy(aim);\n\n        SignedEndorsingEncryptedTokenPolicyValidator signedEndorsingEncryptedValidator = \n            new SignedEndorsingEncryptedTokenPolicyValidator(msg, results, signedResults);\n        check &= signedEndorsingEncryptedValidator.validatePolicy(aim);\n        \n        return check;\n    }","id":69766,"modified_method":"/**\n     * Check the supporting token coverage\n     */\n    private boolean checkSupportingTokenCoverage(\n        AssertionInfoMap aim,\n        SoapMessage msg,\n        List<WSSecurityEngineResult> results, \n        List<WSSecurityEngineResult> signedResults, \n        boolean utWithCallbacks\n    ) {\n        boolean check = true;\n        \n        List<WSSecurityEngineResult> utResults = new ArrayList<WSSecurityEngineResult>();\n        WSSecurityUtil.fetchAllActionResults(results, WSConstants.UT, utResults);\n        WSSecurityUtil.fetchAllActionResults(results, WSConstants.UT_NOPASSWORD, utResults);\n        \n        List<WSSecurityEngineResult> samlResults = new ArrayList<WSSecurityEngineResult>();\n        WSSecurityUtil.fetchAllActionResults(results, WSConstants.ST_SIGNED, samlResults);\n        WSSecurityUtil.fetchAllActionResults(results, WSConstants.ST_UNSIGNED, samlResults);\n        \n        SignedTokenPolicyValidator suppValidator = \n            new SignedTokenPolicyValidator(msg, results, signedResults);\n        suppValidator.setValidateUsernameToken(utWithCallbacks);\n        check &= suppValidator.validatePolicy(aim);\n\n        EndorsingTokenPolicyValidator endorsingValidator = \n            new EndorsingTokenPolicyValidator(msg, results, signedResults);\n        check &= endorsingValidator.validatePolicy(aim);\n\n        SignedEndorsingTokenPolicyValidator signedEdorsingValidator = \n            new SignedEndorsingTokenPolicyValidator(msg, results, signedResults);\n        check &= signedEdorsingValidator.validatePolicy(aim);\n\n        SignedEncryptedTokenPolicyValidator signedEncryptedValidator = \n            new SignedEncryptedTokenPolicyValidator(msg, results, signedResults);\n        signedEncryptedValidator.setValidateUsernameToken(utWithCallbacks);\n        check &= signedEncryptedValidator.validatePolicy(aim);\n\n        EncryptedTokenPolicyValidator encryptedValidator = \n            new EncryptedTokenPolicyValidator(msg, results, signedResults);\n        encryptedValidator.setValidateUsernameToken(utWithCallbacks);\n        check &= encryptedValidator.validatePolicy(aim);\n\n        EndorsingEncryptedTokenPolicyValidator endorsingEncryptedValidator = \n            new EndorsingEncryptedTokenPolicyValidator(msg, results, signedResults);\n        endorsingEncryptedValidator.setValidateUsernameToken(utWithCallbacks);\n        check &= endorsingEncryptedValidator.validatePolicy(aim);\n\n        SignedEndorsingEncryptedTokenPolicyValidator signedEndorsingEncryptedValidator = \n            new SignedEndorsingEncryptedTokenPolicyValidator(msg, results, signedResults);\n        check &= signedEndorsingEncryptedValidator.validatePolicy(aim);\n        \n        return check;\n    }","commit_id":"13547e2a9773b5d6b27a8d5c3472606922e309dd","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * Check the token coverage\n     */\n    private boolean checkTokenCoverage(\n        AssertionInfoMap aim,\n        SoapMessage msg,\n        Element soapBody,\n        List<WSSecurityEngineResult> results, \n        List<WSSecurityEngineResult> signedResults, \n        boolean utWithCallbacks\n    ) {\n        List<WSSecurityEngineResult> utResults = new ArrayList<WSSecurityEngineResult>();\n        WSSecurityUtil.fetchAllActionResults(results, WSConstants.UT, utResults);\n        WSSecurityUtil.fetchAllActionResults(results, WSConstants.UT_NOPASSWORD, utResults);\n        \n        List<WSSecurityEngineResult> samlResults = new ArrayList<WSSecurityEngineResult>();\n        WSSecurityUtil.fetchAllActionResults(results, WSConstants.ST_SIGNED, samlResults);\n        WSSecurityUtil.fetchAllActionResults(results, WSConstants.ST_UNSIGNED, samlResults);\n        \n        boolean check = true;\n        X509TokenPolicyValidator x509Validator = new X509TokenPolicyValidator(msg, results);\n        check &= x509Validator.validatePolicy(aim);\n        \n        if (utWithCallbacks) {\n            UsernameTokenPolicyValidator utValidator = \n                new UsernameTokenPolicyValidator(msg, results);\n            check &= utValidator.validatePolicy(aim);\n        } else {\n            Collection<AssertionInfo> ais = aim.get(SP12Constants.USERNAME_TOKEN);\n            if (ais != null) {\n                for (AssertionInfo ai : ais) {\n                    ai.setAsserted(true);\n                }\n            }\n        }\n        \n        SamlTokenPolicyValidator samlValidator = \n            new SamlTokenPolicyValidator(soapBody, signedResults, msg, results);\n        check &= samlValidator.validatePolicy(aim);\n        \n        SecurityContextTokenPolicyValidator sctValidator = \n            new SecurityContextTokenPolicyValidator(msg, results);\n        check &= sctValidator.validatePolicy(aim);\n        \n        WSS11PolicyValidator wss11Validator = new WSS11PolicyValidator(msg, results);\n        check &= wss11Validator.validatePolicy(aim);\n        \n        return check;\n    }","id":69767,"modified_method":"/**\n     * Check the token coverage\n     */\n    private boolean checkTokenCoverage(\n        AssertionInfoMap aim,\n        SoapMessage msg,\n        Element soapBody,\n        List<WSSecurityEngineResult> results, \n        List<WSSecurityEngineResult> signedResults, \n        boolean utWithCallbacks\n    ) {\n        boolean check = true;\n        TokenPolicyValidator x509Validator = new X509TokenPolicyValidator();\n        check &= x509Validator.validatePolicy(aim, msg, soapBody, results, signedResults);\n        \n        TokenPolicyValidator utValidator = new UsernameTokenPolicyValidator(utWithCallbacks);\n        check &= utValidator.validatePolicy(aim, msg, soapBody, results, signedResults);\n        \n        TokenPolicyValidator samlValidator = new SamlTokenPolicyValidator();\n        check &= samlValidator.validatePolicy(aim, msg, soapBody, results, signedResults);\n        \n        TokenPolicyValidator sctValidator = new SecurityContextTokenPolicyValidator();\n        check &= sctValidator.validatePolicy(aim, msg, soapBody, results, signedResults);\n        \n        TokenPolicyValidator wss11Validator = new WSS11PolicyValidator();\n        check &= wss11Validator.validatePolicy(aim, msg, soapBody, results, signedResults);\n        \n        return check;\n    }","commit_id":"13547e2a9773b5d6b27a8d5c3472606922e309dd","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * Check the sender-vouches requirements against the received assertion. The SAML\n     * Assertion and the SOAP Body must be signed by the same signature.\n     */\n    private boolean checkSenderVouches(\n        AssertionWrapper assertionWrapper,\n        Certificate[] tlsCerts\n    ) {\n        //\n        // If we have a 2-way TLS connection, then we don't have to check that the\n        // assertion + SOAP body are signed\n        //\n        if (tlsCerts != null && tlsCerts.length > 0) {\n            return true;\n        }\n        List<String> confirmationMethods = assertionWrapper.getConfirmationMethods();\n        for (String confirmationMethod : confirmationMethods) {\n            if (OpenSAMLUtil.isMethodSenderVouches(confirmationMethod)) {\n                if (signedResults == null || signedResults.isEmpty()) {\n                    return false;\n                }\n                if (!checkAssertionAndBodyAreSigned(assertionWrapper)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }","id":69768,"modified_method":"/**\n     * Check the sender-vouches requirements against the received assertion. The SAML\n     * Assertion and the SOAP Body must be signed by the same signature.\n     */\n    private boolean checkSenderVouches(\n        AssertionWrapper assertionWrapper,\n        Certificate[] tlsCerts\n    ) {\n        //\n        // If we have a 2-way TLS connection, then we don't have to check that the\n        // assertion + SOAP body are signed\n        //\n        if (tlsCerts != null && tlsCerts.length > 0) {\n            return true;\n        }\n        List<String> confirmationMethods = assertionWrapper.getConfirmationMethods();\n        for (String confirmationMethod : confirmationMethods) {\n            if (OpenSAMLUtil.isMethodSenderVouches(confirmationMethod)) {\n                if (signed == null || signed.isEmpty()) {\n                    return false;\n                }\n                if (!checkAssertionAndBodyAreSigned(assertionWrapper)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }","commit_id":"13547e2a9773b5d6b27a8d5c3472606922e309dd","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * Return true if there is a signature which references the Assertion and the SOAP Body.\n     * @param assertionWrapper the AssertionWrapper object\n     * @return true if there is a signature which references the Assertion and the SOAP Body.\n     */\n    private boolean checkAssertionAndBodyAreSigned(AssertionWrapper assertionWrapper) {\n        for (WSSecurityEngineResult signedResult : signedResults) {\n            List<WSDataRef> sl =\n                CastUtils.cast((List<?>)signedResult.get(\n                    WSSecurityEngineResult.TAG_DATA_REF_URIS\n                ));\n            boolean assertionIsSigned = false;\n            boolean bodyIsSigned = false;\n            if (sl != null) {\n                for (WSDataRef dataRef : sl) {\n                    Element se = dataRef.getProtectedElement();\n                    if (se == assertionWrapper.getElement()) {\n                        assertionIsSigned = true;\n                    }\n                    if (se == soapBody) {\n                        bodyIsSigned = true;\n                    }\n                    if (assertionIsSigned && bodyIsSigned) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }","id":69769,"modified_method":"/**\n     * Return true if there is a signature which references the Assertion and the SOAP Body.\n     * @param assertionWrapper the AssertionWrapper object\n     * @return true if there is a signature which references the Assertion and the SOAP Body.\n     */\n    private boolean checkAssertionAndBodyAreSigned(AssertionWrapper assertionWrapper) {\n        for (WSSecurityEngineResult signedResult : signed) {\n            List<WSDataRef> sl =\n                CastUtils.cast((List<?>)signedResult.get(\n                    WSSecurityEngineResult.TAG_DATA_REF_URIS\n                ));\n            boolean assertionIsSigned = false;\n            boolean bodyIsSigned = false;\n            if (sl != null) {\n                for (WSDataRef dataRef : sl) {\n                    Element se = dataRef.getProtectedElement();\n                    if (se == assertionWrapper.getElement()) {\n                        assertionIsSigned = true;\n                    }\n                    if (se == body) {\n                        bodyIsSigned = true;\n                    }\n                    if (assertionIsSigned && bodyIsSigned) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }","commit_id":"13547e2a9773b5d6b27a8d5c3472606922e309dd","url":"https://github.com/apache/cxf"},{"original_method":"public boolean checkTokens(\n        org.apache.cxf.ws.security.policy.model.UsernameToken usernameTokenPolicy,\n        AssertionInfo ai\n    ) {\n        for (WSSecurityEngineResult result : utResults) {\n            UsernameToken usernameToken = \n                (UsernameToken)result.get(WSSecurityEngineResult.TAG_USERNAME_TOKEN);\n            if (usernameTokenPolicy.isHashPassword() != usernameToken.isHashed()) {\n                ai.setNotAsserted(\"Password hashing policy not enforced\");\n                return false;\n            }\n            if (usernameTokenPolicy.isNoPassword() && usernameToken.getPassword() != null) {\n                ai.setNotAsserted(\"Username Token NoPassword policy not enforced\");\n                return false;\n            }\n            if (usernameTokenPolicy.isRequireCreated() \n                    && (usernameToken.getCreated() == null || usernameToken.isHashed())) {\n                ai.setNotAsserted(\"Username Token Created policy not enforced\");\n                return false;\n            }\n            if (usernameTokenPolicy.isRequireNonce() \n                && (usernameToken.getNonce() == null || usernameToken.isHashed())) {\n                ai.setNotAsserted(\"Username Token Nonce policy not enforced\");\n                return false;\n            }\n        }\n        return true;\n    }","id":69770,"modified_method":"/**\n     * All UsernameTokens must conform to the policy\n     */\n    public boolean checkTokens(\n        org.apache.cxf.ws.security.policy.model.UsernameToken usernameTokenPolicy,\n        AssertionInfo ai,\n        List<WSSecurityEngineResult> utResults\n    ) {\n        for (WSSecurityEngineResult result : utResults) {\n            UsernameToken usernameToken = \n                (UsernameToken)result.get(WSSecurityEngineResult.TAG_USERNAME_TOKEN);\n            if (usernameTokenPolicy.isHashPassword() != usernameToken.isHashed()) {\n                ai.setNotAsserted(\"Password hashing policy not enforced\");\n                return false;\n            }\n            if (usernameTokenPolicy.isNoPassword() && usernameToken.getPassword() != null) {\n                ai.setNotAsserted(\"Username Token NoPassword policy not enforced\");\n                return false;\n            }\n            if (usernameTokenPolicy.isRequireCreated() \n                && (usernameToken.getCreated() == null || usernameToken.isHashed())) {\n                ai.setNotAsserted(\"Username Token Created policy not enforced\");\n                return false;\n            }\n            if (usernameTokenPolicy.isRequireNonce() \n                && (usernameToken.getNonce() == null || usernameToken.isHashed())) {\n                ai.setNotAsserted(\"Username Token Nonce policy not enforced\");\n                return false;\n            }\n        }\n        return true;\n    }","commit_id":"13547e2a9773b5d6b27a8d5c3472606922e309dd","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * Returns the NavText property value of the current resource.<p>\n     * \n     * @return the NavText property value of the current resource\n     */\n    public String getCurrentNavText() {\n        try {\n            return getCms().readProperty(getParamFile(), I_CmsConstants.C_PROPERTY_NAVTEXT);\n        } catch (CmsException e) {\n            return \"\";\n        }\n        \n    }","id":69771,"modified_method":"/**\n     * Returns the NavText property value of the current resource.<p>\n     * \n     * @return the NavText property value of the current resource\n     */\n    public String getCurrentNavText() {\n        try {\n            String navText = getCms().readProperty(getParamFile(), I_CmsConstants.C_PROPERTY_NAVTEXT);\n            if (navText == null) {\n                navText = \"\";\n            }\n            return navText;\n        } catch (CmsException e) {\n            return \"\";\n        }\n        \n    }","commit_id":"ca42a66489af3bac72ccd30ea20e4c105a1fdeb6","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Reads log entries for a project with\n     * added unescaping of comment as as MySQL doesn't support Unicode strings.\n     *\n     * @param project The projec for tasklog to read.\n     * @return A Vector of new TaskLog objects\n     * @throws CmsException Throws CmsException if something goes wrong.\n     */\n    public Vector readProjectLogs(int projectid) throws CmsException {\n        Vector v = super.readProjectLogs(projectid);\n        for (int i=0; i<v.size(); i++) {\n            CmsTaskLog log = (CmsTaskLog)v.elementAt(i);\n            log.setComment(Encoder.decode(log.getComment(), \"UTF-8\", true));\n            v.set(i, log);\n        }\n        return v;    \n    }","id":69772,"modified_method":"/**\n     * Reads log entries for a project with\n     * added unescaping of comment as as MySQL doesn't support Unicode strings.\n     *\n     * @param project The projec for tasklog to read.\n     * @return A Vector of new TaskLog objects\n     * @throws CmsException Throws CmsException if something goes wrong.\n     */\n    public Vector readProjectLogs(int projectid) throws CmsException {\n        Vector v = super.readProjectLogs(projectid);\n        for (int i=0; i<v.size(); i++) {\n            CmsTaskLog log = (CmsTaskLog)v.elementAt(i);\n            log.setComment(unescape(log.getComment()));\n            v.set(i, log);\n        }\n        return v;    \n    }","commit_id":"9797b9f0b032635993a82e2aa95b237e78e5bccd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n * Reads a task from the Cms.\n *\n * @param id The id of the task to read.\n *\n * @return a task object or null if the task is not found.\n *\n * @exception CmsException Throws CmsException if something goes wrong.\n */\npublic CmsTask readTask(int id) throws CmsException {\n    ResultSet res = null;\n    CmsTask task = null;\n    PreparedStatement statement = null;\n    Connection con = null;\n\n    try {\n        con = DriverManager.getConnection(m_poolName);\n        statement = con.prepareStatement(m_cq.get(\"C_TASK_READ\"));\n        statement.setInt(1, id);\n        res = statement.executeQuery();\n        if (res.next()) {\n            id = res.getInt(m_cq.get(\"C_TASK_ID\"));\n            String name = res.getString(m_cq.get(\"C_TASK_NAME\"));\n            int autofinish = res.getInt(m_cq.get(\"C_TASK_AUTOFINISH\"));\n            java.sql.Timestamp starttime = SqlHelper.getTimestamp(res, m_cq.get(\"C_TASK_STARTTIME\"));\n            java.sql.Timestamp timeout = SqlHelper.getTimestamp(res, m_cq.get(\"C_TASK_TIMEOUT\"));\n            java.sql.Timestamp endtime = SqlHelper.getTimestamp(res, m_cq.get(\"C_TASK_ENDTIME\"));\n            java.sql.Timestamp wakeuptime = SqlHelper.getTimestamp(res, m_cq.get(\"C_TASK_WAKEUPTIME\"));\n            int escalationtype = res.getInt(m_cq.get(\"C_TASK_ESCALATIONTYPE\"));\n            int initiatoruser = res.getInt(m_cq.get(\"C_TASK_INITIATORUSER\"));\n            int originaluser = res.getInt(m_cq.get(\"C_TASK_ORIGINALUSER\"));\n            int agentuser = res.getInt(m_cq.get(\"C_TASK_AGENTUSER\"));\n            int role = res.getInt(m_cq.get(\"C_TASK_ROLE\"));\n            int root = res.getInt(m_cq.get(\"C_TASK_ROOT\"));\n            int parent = res.getInt(m_cq.get(\"C_TASK_PARENT\"));\n            int milestone = res.getInt(m_cq.get(\"C_TASK_MILESTONE\"));\n            int percentage = res.getInt(m_cq.get(\"C_TASK_PERCENTAGE\"));\n            String permission = res.getString(m_cq.get(\"C_TASK_PERMISSION\"));\n            int priority = res.getInt(m_cq.get(\"C_TASK_PRIORITY\"));\n            int state = res.getInt(m_cq.get(\"C_TASK_STATE\"));\n            int tasktype = res.getInt(m_cq.get(\"C_TASK_TASKTYPE\"));\n            String htmllink = res.getString(m_cq.get(\"C_TASK_HTMLLINK\"));\n            task = new CmsTask(id, name, state, tasktype, root, parent, initiatoruser, role, agentuser,\n                                originaluser, starttime, wakeuptime, timeout, endtime, percentage,\n                                permission, priority, escalationtype, htmllink, milestone, autofinish);\n        }\n    } catch (SQLException exc) {\n        throw new CmsException(exc.getMessage(), CmsException.C_SQL_ERROR, exc);\n    } catch (Exception exc) {\n        throw new CmsException(exc.getMessage(), CmsException.C_UNKNOWN_EXCEPTION, exc);\n    } finally {\n        // close all db-resources\n        if(res != null) {\n             try {\n                 res.close();\n             } catch(SQLException exc) {\n                 // nothing to do here\n             }\n        }\n        if(statement != null) {\n             try {\n                 statement.close();\n             } catch(SQLException exc) {\n                 // nothing to do here\n             }\n        }\n        if(con != null) {\n             try {\n                 con.close();\n             } catch(SQLException exc) {\n                 // nothing to do here\n             }\n        }\n    }\n    return task;\n}","id":69773,"modified_method":"/**\n     * Reads a task from the Cms with\n     * added escaping of Strings since MySQL dosen't support Unicode strings\n     *\n     * @param id the id of the task to read\n     * @return a task object or null if the task is not found\n     *\n     * @throws CmsException if something goes wrong\n     */\n    public CmsTask readTask(int id) throws CmsException {\n        CmsTask task = super.readTask(id);\n        task.setName(unescape(task.getName()));\n        return task;\n    }","commit_id":"9797b9f0b032635993a82e2aa95b237e78e5bccd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n * Reads all tasks of a user in a project.\n * @param project The Project in which the tasks are defined.\n * @param agent The task agent\n * @param owner The task owner .\n * @param group The group who has to process the task.\n * @tasktype C_TASKS_ALL, C_TASKS_OPEN, C_TASKS_DONE, C_TASKS_NEW\n * @param orderBy Chooses, how to order the tasks.\n * @param sort Sort Ascending or Descending (ASC or DESC)\n *\n * @return A vector with the tasks\n *\n * @exception CmsException Throws CmsException if something goes wrong.\n */\npublic Vector readTasks(CmsProject project, CmsUser agent, CmsUser owner, CmsGroup role, int tasktype, String orderBy, String sort) throws CmsException {\n    boolean first = true;\n    Vector tasks = new Vector(); // vector for the return result\n    CmsTask task = null; // tmp task for adding to vector\n    ResultSet recset = null;\n    Connection con = null;\n    Statement statement = null;\n\n    // create the sql string depending on parameters\n    // handle the project for the SQL String\n    String sqlstr = \"SELECT * FROM \" + m_cq.get(\"C_TABLENAME_TASK\") + \" WHERE \";\n    if (project != null) {\n        sqlstr = sqlstr + m_cq.get(\"C_TASK_ROOT\") + \"=\" + project.getTaskId();\n        first = false;\n    } else {\n        sqlstr = sqlstr + m_cq.get(\"C_TASK_ROOT\") + \"<>0 AND \" + m_cq.get(\"C_TASK_PARENT\") + \"<>0\";\n        first = false;\n    }\n\n    // handle the agent for the SQL String\n    if (agent != null) {\n        if (!first) {\n            sqlstr = sqlstr + \" AND \";\n        }\n        sqlstr = sqlstr + m_cq.get(\"C_TASK_AGENTUSER\") + \"=\" + agent.getId();\n        first = false;\n    }\n\n    // handle the owner for the SQL String\n    if (owner != null) {\n        if (!first) {\n            sqlstr = sqlstr + \" AND \";\n        }\n        sqlstr = sqlstr + m_cq.get(\"C_TASK_INITIATORUSER\") + \"=\" + owner.getId();\n        first = false;\n    }\n\n    // handle the role for the SQL String\n    if (role != null) {\n        if (!first) {\n            sqlstr = sqlstr + \" AND \";\n        }\n        sqlstr = sqlstr + m_cq.get(\"C_TASK_ROLE\") + \"=\" + role.getId();\n        first = false;\n    }\n    sqlstr = sqlstr + getTaskTypeConditon(first, tasktype);\n\n    // handel the order and sort parameter for the SQL String\n    if (orderBy != null) {\n        if (!orderBy.equals(\"\")) {\n            sqlstr = sqlstr + \" ORDER BY \" + orderBy;\n            if (orderBy != null) {\n                if (!orderBy.equals(\"\")) {\n                    sqlstr = sqlstr + \" \" + sort;\n                }\n            }\n        }\n    }\n    try {\n        con = DriverManager.getConnection(m_poolName);\n        statement = con.createStatement();\n        recset = statement.executeQuery(sqlstr);\n\n        // if resultset exists - return vector of tasks\n        while (recset.next()) {\n            task = new CmsTask(recset.getInt(m_cq.get(\"C_TASK_ID\")),\n                                recset.getString(m_cq.get(\"C_TASK_NAME\")),\n                                recset.getInt(m_cq.get(\"C_TASK_STATE\")),\n                                recset.getInt(m_cq.get(\"C_TASK_TASKTYPE\")),\n                                recset.getInt(m_cq.get(\"C_TASK_ROOT\")),\n                                recset.getInt(m_cq.get(\"C_TASK_PARENT\")),\n                                recset.getInt(m_cq.get(\"C_TASK_INITIATORUSER\")),\n                                recset.getInt(m_cq.get(\"C_TASK_ROLE\")),\n                                recset.getInt(m_cq.get(\"C_TASK_AGENTUSER\")),\n                                recset.getInt(m_cq.get(\"C_TASK_ORIGINALUSER\")),\n                                SqlHelper.getTimestamp(recset, m_cq.get(\"C_TASK_STARTTIME\")),\n                                SqlHelper.getTimestamp(recset, m_cq.get(\"C_TASK_WAKEUPTIME\")),\n                                SqlHelper.getTimestamp(recset, m_cq.get(\"C_TASK_TIMEOUT\")),\n                                SqlHelper.getTimestamp(recset, m_cq.get(\"C_TASK_ENDTIME\")),\n                                recset.getInt(m_cq.get(\"C_TASK_PERCENTAGE\")),\n                                recset.getString(m_cq.get(\"C_TASK_PERMISSION\")),\n                                recset.getInt(m_cq.get(\"C_TASK_PRIORITY\")),\n                                recset.getInt(m_cq.get(\"C_TASK_ESCALATIONTYPE\")),\n                                recset.getString(m_cq.get(\"C_TASK_HTMLLINK\")),\n                                recset.getInt(m_cq.get(\"C_TASK_MILESTONE\")),\n                                recset.getInt(m_cq.get(\"C_TASK_AUTOFINISH\")));\n            tasks.addElement(task);\n        }\n    } catch (SQLException exc) {\n        throw new CmsException(exc.getMessage(), CmsException.C_SQL_ERROR, exc);\n    } catch (Exception exc) {\n        throw new CmsException(exc.getMessage(), CmsException.C_UNKNOWN_EXCEPTION, exc);\n    } finally {\n        // close all db-resources\n        if(statement != null) {\n             try {\n                 statement.close();\n             } catch(SQLException exc) {\n                 // nothing to do here\n             }\n        }\n        if(con != null) {\n             try {\n                 con.close();\n             } catch(SQLException exc) {\n                 // nothing to do here\n             }\n        }\n    }\n    return tasks;\n}","id":69774,"modified_method":"/**\n     * Reads all tasks of a user in a project with\n     * added escaping of Strings since MySQL dosen't support Unicode strings.\n     * \n     * @param project the Project in which the tasks are defined\n     * @param agent the task agent\n     * @param owner the task owner .\n     * @param group the group who has to process the task\n     * @param tasktype one of C_TASKS_ALL, C_TASKS_OPEN, C_TASKS_DONE, C_TASKS_NEW\n     * @param orderBy selects filter how to order the tasks\n     * @param sort select to sort ascending or descending (\"ASC\" or \"DESC\")\n     * @return a vector with the tasks read\n     *\n     * @throws CmsException Throws CmsException if something goes wrong.\n     */\n    public Vector readTasks(CmsProject project, CmsUser agent, CmsUser owner, CmsGroup role, int tasktype, String orderBy, String sort) \n    throws CmsException {\n        Vector v = super.readTasks(project, agent, owner, role, tasktype, orderBy, sort);\n        for (int i=0; i<v.size(); i++) {\n            CmsTask task = (CmsTask)v.elementAt(i);\n            task.setName(unescape(task.getName()));\n            v.set(i, task);\n        }    \n        return v;          \n    }","commit_id":"9797b9f0b032635993a82e2aa95b237e78e5bccd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Added unescaping of property values as MySQL doesn't support Unicode strings\n     * \n     * @see com.opencms.file.genericSql.CmsDbAccess#readAllProperties(int, CmsResource, int)\n     */\n    public Hashtable readAllProperties(int projectId, CmsResource resource,\n        int resourceType) throws CmsException {\n        Hashtable result = super.readAllProperties(projectId, resource, resourceType);\n        Iterator keys = result.keySet().iterator();\n        while (keys.hasNext()) {\n            Object key = keys.next();\n            String value = (String)result.get(key);         \n            result.put(key, Encoder.decode(value, \"UTF-8\", true));\n        }\n        return result;\n    }","id":69775,"modified_method":"/**\n     * Added unescaping of property values as MySQL doesn't support Unicode strings\n     * \n     * @see com.opencms.file.genericSql.CmsDbAccess#readAllProperties(int, CmsResource, int)\n     */\n    public Hashtable readAllProperties(int projectId, CmsResource resource,\n        int resourceType) throws CmsException {\n        Hashtable result = super.readAllProperties(projectId, resource, resourceType);\n        Iterator keys = result.keySet().iterator();\n        while (keys.hasNext()) {\n            Object key = keys.next();\n            String value = (String)result.get(key);         \n            result.put(key, unescape(value));\n        }\n        return result;\n    }","commit_id":"9797b9f0b032635993a82e2aa95b237e78e5bccd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Reads a log for a task with\n     * added unescaping of comment as as MySQL doesn't support Unicode strings.\n     *\n     * @param id The id for the tasklog .\n     * @return A new TaskLog object\n     * @throws CmsException Throws CmsException if something goes wrong.\n     */\n    public CmsTaskLog readTaskLog(int id)\n        throws CmsException {\n        // added unescaping of property value as MySQL doesn't support Unicode strings\n        CmsTaskLog log = super.readTaskLog(id);\n        log.setComment(Encoder.decode(log.getComment(), \"UTF-8\", true));\n        return log;\n    }","id":69776,"modified_method":"/**\n     * Reads a log for a task with\n     * added unescaping of comment as as MySQL doesn't support Unicode strings.\n     *\n     * @param id The id for the tasklog .\n     * @return A new TaskLog object\n     * @throws CmsException Throws CmsException if something goes wrong.\n     */\n    public CmsTaskLog readTaskLog(int id)\n        throws CmsException {\n        CmsTaskLog log = super.readTaskLog(id);\n        log.setComment(unescape(log.getComment()));\n        return log;\n    }","commit_id":"9797b9f0b032635993a82e2aa95b237e78e5bccd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Writes new log for a task with\n     * added escaping of comment as as MySQL doesn't support Unicode strings.\n     *\n     * @param taskid The id of the task.\n     * @param user User who added the Log.\n     * @param starttime Time when the log is created.\n     * @param comment Description for the log.\n     * @param type Type of the log. 0 = Sytem log, 1 = User Log\n     *\n     * @throws CmsException if something goes wrong\n     */\n    public void writeTaskLog(int taskId, int userid,\n                             java.sql.Timestamp starttime, String comment, int type)\n        throws CmsException {\n        // added escaping of property value as MySQL doesn't support Unicode strings\n        comment =  Encoder.encode(comment, \"UTF-8\", true);\n        super.writeTaskLog(taskId, userid, starttime, comment, type);\n    }","id":69777,"modified_method":"/**\n     * Writes new log for a task with\n     * added escaping of comment as as MySQL doesn't support Unicode strings.\n     *\n     * @param taskid The id of the task.\n     * @param user User who added the Log.\n     * @param starttime Time when the log is created.\n     * @param comment Description for the log.\n     * @param type Type of the log. 0 = Sytem log, 1 = User Log\n     *\n     * @throws CmsException if something goes wrong\n     */\n    public void writeTaskLog(int taskId, int userid,\n                             java.sql.Timestamp starttime, String comment, int type)\n        throws CmsException {\n        super.writeTaskLog(taskId, userid, starttime, escape(comment), type);\n    }","commit_id":"9797b9f0b032635993a82e2aa95b237e78e5bccd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Added unescaping of property values as MySQL doesn't support Unicode strings\n     * \n     * @see com.opencms.file.genericSql.CmsDbAccess#readProperty(String, int, CmsResource, int)\n     */\n    public String readProperty(String meta, int projectId,\n        CmsResource resource, int resourceType) throws CmsException {\n        String result = super.readProperty(meta, projectId, resource, resourceType);\n        return Encoder.decode(result, \"UTF-8\", true);\n    }","id":69778,"modified_method":"/**\n     * Added unescaping of property values as MySQL doesn't support Unicode strings\n     * \n     * @see com.opencms.file.genericSql.CmsDbAccess#readProperty(String, int, CmsResource, int)\n     */\n    public String readProperty(String meta, int projectId,\n        CmsResource resource, int resourceType) throws CmsException {\n        return unescape(super.readProperty(meta, projectId, resource, resourceType));\n    }","commit_id":"9797b9f0b032635993a82e2aa95b237e78e5bccd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Reads log entries for a task with\n     * added unescaping of comment as as MySQL doesn't support Unicode strings.\n     *\n     * @param taskid The id of the task for the tasklog to read .\n     * @return A Vector of new TaskLog objects\n     * @throws CmsException Throws CmsException if something goes wrong.\n     */\n    public Vector readTaskLogs(int taskId) throws CmsException {\n        Vector v = super.readTaskLogs(taskId);\n        for (int i=0; i<v.size(); i++) {\n            CmsTaskLog log = (CmsTaskLog)v.elementAt(i);\n            log.setComment(Encoder.decode(log.getComment(), \"UTF-8\", true));\n            v.set(i, log);\n        }    \n        return v;    \n    }","id":69779,"modified_method":"/**\n     * Reads log entries for a task with\n     * added unescaping of comment as as MySQL doesn't support Unicode strings.\n     *\n     * @param taskid The id of the task for the tasklog to read .\n     * @return A Vector of new TaskLog objects\n     * @throws CmsException Throws CmsException if something goes wrong.\n     */\n    public Vector readTaskLogs(int taskId) throws CmsException {\n        Vector v = super.readTaskLogs(taskId);\n        for (int i=0; i<v.size(); i++) {\n            CmsTaskLog log = (CmsTaskLog)v.elementAt(i);\n            log.setComment(unescape(log.getComment()));\n            v.set(i, log);\n        }    \n        return v;    \n    }","commit_id":"9797b9f0b032635993a82e2aa95b237e78e5bccd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Writes a property for a file or folder with\n     * added escaping of property values as MySQL doesn't support Unicode strings\n     *\n     * @param meta The property-name of which the property has to be read.\n     * @param value The value for the property to be set.\n     * @param resourceId The id of the resource.\n     * @param resourceType The Type of the resource.\n     *\n     * @exception CmsException Throws CmsException if operation was not succesful\n     */\n    public void writeProperty(String meta, int projectId, String value, CmsResource resource,\n                                      int resourceType, boolean addDefinition)\n        throws CmsException {            \n        // added escaping of property value as MySQL doesn't support Unicode strings\n        value =  Encoder.encode(value, \"UTF-8\", true);\n        super.writeProperty(meta, projectId, value, resource, resourceType, addDefinition);\n    }","id":69780,"modified_method":"/**\n     * Writes a property for a file or folder with\n     * added escaping of property values as MySQL doesn't support Unicode strings\n     *\n     * @param meta The property-name of which the property has to be read.\n     * @param value The value for the property to be set.\n     * @param resourceId The id of the resource.\n     * @param resourceType The Type of the resource.\n     *\n     * @exception CmsException Throws CmsException if operation was not succesful\n     */\n    public void writeProperty(String meta, int projectId, String value, CmsResource resource,\n                                      int resourceType, boolean addDefinition)\n        throws CmsException {            \n        super.writeProperty(meta, projectId, escape(value), resource, resourceType, addDefinition);\n    }","commit_id":"9797b9f0b032635993a82e2aa95b237e78e5bccd","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns a selected file property value, same as using \n     * the <code>&lt;cms:property name=\"...\" file=\"...\" default=\"...\" /&gt;<\/code> tag.<p>\n     * \n     * Please see the description of {@link #property(String, String)} for\n     * valid options of the <code>file<\/code> parameter.<p>\n     * \n     * If the named property could not be read from the selected file, \n     * the value of <code>defaultValue<\/code> is returned.\n     * \n     * @param name the name of the property to look for\n     * @param file the file (or folder) to look at for the property\n     * @param defaultValue a default value in case the property was not found\n     * @return the value of the property found, or the value of defaultValue \n     *     if the property could not be found\n     *\n     * @see  com.opencms.flex.jsp.CmsJspTagFileProperty\n     */\n    public String property(String name, String file, String defaultValue) {\n        if (m_notInitialized) return C_NOT_INITIALIZED;\n        try {\n            return CmsJspTagFileProperty.propertyTagAction(name, file, defaultValue, m_request);\n        } catch (CmsException e) {\n            if (defaultValue == null) {\n                return \"+++ error reading property '\" + name + \"' +++\";\n            } else {\n                return defaultValue;\n            }\n        }        \n    }","id":69781,"modified_method":"/**\n     * Returns a selected file property value, same as using\n     * the <code>&lt;cms:property name=\"...\" file=\"...\" default=\"...\" /&gt;<\/code> tag.<p>\n     *\n     * Please see the description of {@link #property(String, String)} for\n     * valid options of the <code>file<\/code> parameter.<p>\n     *\n     * If the named property could not be read from the selected file,\n     * the value of <code>defaultValue<\/code> is returned.<p>\n     *\n     * @param name the name of the property to look for\n     * @param file the file (or folder) to look at for the property\n     * @param defaultValue a default value in case the property was not found\n     * @return the value of the property found, or the value of defaultValue\n     *     if the property could not be found\n     *\n     * @see  com.opencms.flex.jsp.CmsJspTagFileProperty\n     */\n    public String property(String name, String file, String defaultValue) {\n        if (m_notInitialized) return C_NOT_INITIALIZED;\n        return this.property(name, file, defaultValue, false);\n    }","commit_id":"da06e9dfa6c9d4ecbfe294013fb0bb10fc92572f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Returns a selected file property value, same as using \n     * the <code>&lt;cms:property name=\"...\" file=\"...\" /&gt;<\/code> tag.<p>\n     * \n     * The <code>file<\/code> parameter controls from which file the\n     * property is read. Keep in mind that there are two basic options\n     * to read the property from: The file that was requested by the\n     * user is the obvious first option. However, a JSP might also have been \n     * included as a sub-element on a page, and so the currently processed JSP \n     * file is the second option.<p>\n     * \n     * Valid options for the <code>file<\/code> parameter are:<br><ul>\n     * <li><code>\"this\"<\/code>: look for the property only at the currently \n     *     processed file, which could be an included sub-element\n     * <li><code>\"parent\"<\/code>: look for the property only at the file requested by the user\n     * <li><code>\"search-this\":<\/code> look for the property at <code>\"this\"<\/code> file. \n     *     If not found, walk all folders upwards to the root folder and look \n     *     at the folders for the property, return the first value found.\n     * <li><code>\"search-parent\"<\/code> or <code>\"search\"<\/code>:\n     *     look for the property at the <code>\"parent\"<\/code> file.\n     *     If not found, walk all folders upwards to the root folder and look \n     *     at the folders for the property, return the first value found.\n     * <li><code>[filename]<\/code>: Look for the property only at \n     *     the file <code>[filename]<\/code>. This way you can read a property\n     *     from any file in the VFS.\n     * <\/ul><p>\n     * \n     * If the named property could not be read from the selected file, \n     * <code>null<\/code> is returned.\n     * \n     * @param name the name of the property to look for\n     * @param file the file (or folder) to look at for the property\n     * @return the value of the property found, or null if the property could not be found\n     * \n     * @see com.opencms.flex.jsp.CmsJspTagFileProperty\n     */\n    public String property(String name, String file) {\n        if (m_notInitialized) return C_NOT_INITIALIZED;\n        return this.property(name, file, null);       \n    }","id":69782,"modified_method":"/**\n     * Returns a selected file property value, same as using \n     * the <code>&lt;cms:property name=\"...\" file=\"...\" /&gt;<\/code> tag.<p>\n     * \n     * The <code>file<\/code> parameter controls from which file the\n     * property is read. Keep in mind that there are two basic options\n     * to read the property from: The file that was requested by the\n     * user is the obvious first option. However, a JSP might also have been \n     * included as a sub-element on a page, and so the currently processed JSP \n     * file is the second option.<p>\n     * \n     * Valid options for the <code>file<\/code> parameter are:<br><ul>\n     * <li><code>\"this\"<\/code>: look for the property only at the currently \n     *     processed file, which could be an included sub-element\n     * <li><code>\"parent\"<\/code>: look for the property only at the file requested by the user\n     * <li><code>\"search-this\":<\/code> look for the property at <code>\"this\"<\/code> file. \n     *     If not found, walk all folders upwards to the root folder and look \n     *     at the folders for the property, return the first value found.\n     * <li><code>\"search-parent\"<\/code> or <code>\"search\"<\/code>:\n     *     look for the property at the <code>\"parent\"<\/code> file.\n     *     If not found, walk all folders upwards to the root folder and look \n     *     at the folders for the property, return the first value found.\n     * <li><code>[filename]<\/code>: Look for the property only at \n     *     the file <code>[filename]<\/code>. This way you can read a property\n     *     from any file in the VFS.\n     * <\/ul><p>\n     * \n     * If the named property could not be read from the selected file, \n     * <code>null<\/code> is returned.<p>\n     * \n     * @param name the name of the property to look for\n     * @param file the file (or folder) to look at for the property\n     * @return the value of the property found, or null if the property could not be found\n     * \n     * @see com.opencms.flex.jsp.CmsJspTagFileProperty\n     */\n    public String property(String name, String file) {\n        if (m_notInitialized) return C_NOT_INITIALIZED;\n        return this.property(name, file, null, false);       \n    }","commit_id":"da06e9dfa6c9d4ecbfe294013fb0bb10fc92572f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public static String propertyTagAction(String property, String action, String defaultValue, CmsFlexRequest req) \n    throws CmsException\n    {\n        // Make sure that no null String is returned\n        if (defaultValue == null) defaultValue = \"\";\n        \n        if (\"parent\".equals(action)) {                    \n            // Read properties of parent (i.e. top requested) file\n            return req.getCmsObject().readProperty(req.getCmsRequestedResource(), property, false, defaultValue);                  \n        } else if (\"this\".equals(action)) {\n            // Read properties of this file\n            return  req.getCmsObject().readProperty(req.getCmsResource(), property, false, defaultValue);\n        } else if (\"search-this\".equals(action)) {\n            // Try to find property on this file and all parent folders\n            return req.getCmsObject().readProperty(req.getCmsResource(), property, true, defaultValue);\n        } else if (\"search-parent\".equals(action) || \"search\".equals(action)) {\n            // Try to find property on parent file and all parent folders\n            return  req.getCmsObject().readProperty(req.getCmsRequestedResource(), property, true, defaultValue);\n        } else {\n            // Read properties of the file named in the attribute\n            return  req.getCmsObject().readProperty(req.toAbsolute(action), property, false, defaultValue);\n        }\n    }","id":69783,"modified_method":"public static String propertyTagAction(String property, String action, String defaultValue, boolean escape, CmsFlexRequest req) \n    throws CmsException\n    {\n        // Make sure that no null String is returned\n        if (defaultValue == null) defaultValue = \"\";\n        String value;\n        \n        if (\"parent\".equals(action)) {                    \n            // Read properties of parent (i.e. top requested) file\n            value = req.getCmsObject().readProperty(req.getCmsRequestedResource(), property, false, defaultValue);                  \n        } else if (\"this\".equals(action)) {\n            // Read properties of this file\n            value = req.getCmsObject().readProperty(req.getCmsResource(), property, false, defaultValue);\n        } else if (\"search-this\".equals(action)) {\n            // Try to find property on this file and all parent folders\n            value = req.getCmsObject().readProperty(req.getCmsResource(), property, true, defaultValue);\n        } else if (\"search-parent\".equals(action) || \"search\".equals(action)) {\n            // Try to find property on parent file and all parent folders\n            value = req.getCmsObject().readProperty(req.getCmsRequestedResource(), property, true, defaultValue);\n        } else {\n            // Read properties of the file named in the attribute\n            value = req.getCmsObject().readProperty(req.toAbsolute(action), property, false, defaultValue);\n        }        \n        if (escape) value = Encoder.escapeHtml(value);        \n        return value;\n    }","commit_id":"da06e9dfa6c9d4ecbfe294013fb0bb10fc92572f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public int doStartTag() throws javax.servlet.jsp.JspException {\n        \n        javax.servlet.ServletRequest req = pageContext.getRequest();\n        javax.servlet.ServletResponse res = pageContext.getResponse();\n        \n        // This will always be true if the page is called through OpenCms \n        if (req instanceof com.opencms.flex.cache.CmsFlexRequest) {\n\n            com.opencms.flex.cache.CmsFlexRequest c_req = (com.opencms.flex.cache.CmsFlexRequest)req;\n\n            try {       \n                String prop = propertyTagAction(getName(), getFile(), m_defaultValue, c_req);\n                pageContext.getOut().print(prop);\n                \n            } catch (Exception ex) {\n                System.err.println(\"Error in Jsp 'property' tag processing: \" + ex);\n                System.err.println(com.opencms.util.Utils.getStackTrace(ex));\n                throw new javax.servlet.jsp.JspException(ex);\n            }\n        }\n        return SKIP_BODY;\n    }","id":69784,"modified_method":"public int doStartTag() throws javax.servlet.jsp.JspException {\n        \n        javax.servlet.ServletRequest req = pageContext.getRequest();\n        javax.servlet.ServletResponse res = pageContext.getResponse();\n        \n        // This will always be true if the page is called through OpenCms \n        if (req instanceof com.opencms.flex.cache.CmsFlexRequest) {\n\n            com.opencms.flex.cache.CmsFlexRequest c_req = (com.opencms.flex.cache.CmsFlexRequest)req;\n\n            try {       \n                String prop = propertyTagAction(getName(), getFile(), m_defaultValue, m_escapeHtml, c_req);\n                pageContext.getOut().print(prop);\n                \n            } catch (Exception ex) {\n                System.err.println(\"Error in Jsp 'property' tag processing: \" + ex);\n                System.err.println(com.opencms.util.Utils.getStackTrace(ex));\n                throw new javax.servlet.jsp.JspException(ex);\n            }\n        }\n        return SKIP_BODY;\n    }","commit_id":"da06e9dfa6c9d4ecbfe294013fb0bb10fc92572f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public static void getPublicRenderParameterConfigurationList(\n\t\t\tRenderRequest renderRequest, Portlet portlet)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)renderRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tLayout layout = themeDisplay.getLayout();\n\n\t\tPortletPreferences preferences =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, portlet.getPortletId());\n\n\t\tMap<String, String> mappings = new HashMap<String, String>();\n\n\t\tif (SessionErrors.isEmpty(renderRequest)) {\n\t\t\tSet<PublicRenderParameter> publicRenderParameters =\n\t\t\t\t(Set<PublicRenderParameter>)renderRequest.getAttribute(\n\t\t\t\t\tWebKeys.PUBLIC_RENDER_PARAMETERS);\n\n\t\t\tfor (PublicRenderParameter publicRenderParameter :\n\t\t\t\t\tpublicRenderParameters) {\n\n\t\t\t\tString mapping = preferences.getValue(\n\t\t\t\t\t_MAPPING_PREFIX + publicRenderParameter.getIdentifier(),\n\t\t\t\t\tnull);\n\n\t\t\t\tif (Validator.isNotNull(mapping)) {\n\t\t\t\t\tmappings.put(\n\t\t\t\t\t\tmapping, publicRenderParameter.getIdentifier());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tfor (PublicRenderParameter publicRenderParameter :\n\t\t\t\t\tportlet.getPublicRenderParameters()) {\n\n\t\t\t\tString mapping = ParamUtil.getString(\n\t\t\t\t\trenderRequest,\n\t\t\t\t\t_MAPPING_PREFIX + publicRenderParameter.getIdentifier());\n\n\t\t\t\tmappings.put(publicRenderParameter.getIdentifier(), mapping);\n\t\t\t}\n\t\t}\n\n\t\tList<PublicRenderParameterConfiguration>\n\t\t\tpublicRenderParameterConfigurations =\n\t\t\t\tnew ArrayList<PublicRenderParameterConfiguration>();\n\n\t\tfor (PublicRenderParameter publicRenderParameter:\n\t\t\t\tportlet.getPublicRenderParameters()) {\n\n\t\t\tboolean ignore = false;\n\n\t\t\tString ignoreKey =\n\t\t\t\t_IGNORE_PREFIX + publicRenderParameter.getIdentifier();\n\n\t\t\tif (SessionErrors.isEmpty(renderRequest)) {\n\t\t\t\tignore = GetterUtil.getBoolean(\n\t\t\t\t\tpreferences.getValue(ignoreKey, null));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tignore = GetterUtil.getBoolean(\n\t\t\t\t\tParamUtil.getString(renderRequest, ignoreKey));\n\t\t\t}\n\n\t\t\tpublicRenderParameterConfigurations.add(\n\t\t\t\tnew PublicRenderParameterConfiguration(\n\t\t\t\t\tpublicRenderParameter,\n\t\t\t\t\tmappings.get(publicRenderParameter.getIdentifier()),\n\t\t\t\t\tignore));\n\t\t}\n\n\t\tCollections.sort(\n\t\t\tpublicRenderParameterConfigurations,\n\t\t\tnew PublicRenderParameterIdentifierConfigurationComparator());\n\n\t\trenderRequest.setAttribute(\n\t\t\tWebKeys.PUBLIC_RENDER_PARAMETER_CONFIGURATIONS,\n\t\t\tpublicRenderParameterConfigurations);\n\t}","id":69785,"modified_method":"public static void getPublicRenderParameterConfigurationList(\n\t\t\tRenderRequest renderRequest, Portlet portlet)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)renderRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tLayout layout = themeDisplay.getLayout();\n\n\t\tPortletPreferences preferences =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, portlet.getPortletId());\n\n\t\tList<PublicRenderParameterConfiguration>\n\t\t\tpublicRenderParameterConfigurations =\n\t\t\t\tnew ArrayList<PublicRenderParameterConfiguration>();\n\n\t\tfor (PublicRenderParameter publicRenderParameter:\n\t\t\t\tportlet.getPublicRenderParameters()) {\n\n\t\t\tboolean ignore = false;\n\t\t\tString mapping = null;\n\n\t\t\tString ignoreKey =\n\t\t\t\t_IGNORE_PREFIX + PortletQNameUtil.getPublicRenderParameterName(\n\t\t\t\t\tpublicRenderParameter.getQName());\n\t\t\tString mappingKey =\n\t\t\t\t_MAPPING_PREFIX + PortletQNameUtil.getPublicRenderParameterName(\n\t\t\t\t\tpublicRenderParameter.getQName());\n\n\t\t\tif (SessionErrors.isEmpty(renderRequest)) {\n\t\t\t\tignore = GetterUtil.getBoolean(\n\t\t\t\t\tpreferences.getValue(ignoreKey, null));\n\t\t\t\tmapping = preferences.getValue(mappingKey, null);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tignore = GetterUtil.getBoolean(\n\t\t\t\t\tParamUtil.getString(renderRequest, ignoreKey));\n\t\t\t\tmapping = ParamUtil.getString(renderRequest, mappingKey);\n\t\t\t}\n\n\t\t\tpublicRenderParameterConfigurations.add(\n\t\t\t\tnew PublicRenderParameterConfiguration(\n\t\t\t\t\tpublicRenderParameter, mapping, ignore));\n\t\t}\n\n\t\tCollections.sort(\n\t\t\tpublicRenderParameterConfigurations,\n\t\t\tnew PublicRenderParameterIdentifierConfigurationComparator());\n\n\t\trenderRequest.setAttribute(\n\t\t\tWebKeys.PUBLIC_RENDER_PARAMETER_CONFIGURATIONS,\n\t\t\tpublicRenderParameterConfigurations);\n\t}","commit_id":"119b02bb54e8826ee916a16e45dcb820f283d35f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void updatePreferences(\n\t\t\tActionRequest actionRequest, Portlet portlet)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tLayout layout = themeDisplay.getLayout();\n\n\t\tPortletPreferences preferences =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, portlet.getPortletId());\n\n\t\tEnumeration<String> enu = preferences.getNames();\n\n\t\twhile (enu.hasMoreElements()) {\n\t\t\tString name = enu.nextElement();\n\n\t\t\tif (name.startsWith(_IGNORE_PREFIX) ||\n\t\t\t\tname.startsWith(_MAPPING_PREFIX)) {\n\n\t\t\t\tpreferences.reset(name);\n\t\t\t}\n\t\t}\n\n\t\tfor (PublicRenderParameter publicRenderParameter :\n\t\t\t\tportlet.getPublicRenderParameters()) {\n\n\t\t\tString ignoreName =\n\t\t\t\t_IGNORE_PREFIX + publicRenderParameter.getIdentifier();\n\n\t\t\tif (Validator.isNotNull(\n\t\t\t\t\tParamUtil.getString(actionRequest, ignoreName))) {\n\n\t\t\t\tpreferences.setValue(ignoreName, StringPool.TRUE);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString mappingName =\n\t\t\t\t\t_MAPPING_PREFIX + publicRenderParameter.getIdentifier();\n\n\t\t\t\tString mappingValue = ParamUtil.getString(\n\t\t\t\t\tactionRequest, mappingName);\n\n\t\t\t\tif (Validator.isNotNull(mappingValue)) {\n\t\t\t\t\tString mappingKey = _MAPPING_PREFIX + mappingValue;\n\n\t\t\t\t\tif (Validator.isNull(\n\t\t\t\t\t\t\tpreferences.getValue(mappingKey, null))) {\n\n\t\t\t\t\t\tpreferences.setValue(\n\t\t\t\t\t\t\tmappingKey, publicRenderParameter.getIdentifier());\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tSessionErrors.add(actionRequest, \"duplicateMapping\");\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (SessionErrors.isEmpty(actionRequest)) {\n\t\t\tpreferences.store();\n\t\t}\n\t}","id":69786,"modified_method":"protected void updatePreferences(\n\t\t\tActionRequest actionRequest, Portlet portlet)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tLayout layout = themeDisplay.getLayout();\n\n\t\tPortletPreferences preferences =\n\t\t\tPortletPreferencesFactoryUtil.getLayoutPortletSetup(\n\t\t\t\tlayout, portlet.getPortletId());\n\n\t\tEnumeration<String> preferenceNames = preferences.getNames();\n\n\t\twhile (preferenceNames.hasMoreElements()) {\n\t\t\tString name = preferenceNames.nextElement();\n\n\t\t\tif (name.startsWith(_IGNORE_PREFIX) ||\n\t\t\t\tname.startsWith(_MAPPING_PREFIX)) {\n\n\t\t\t\tpreferences.reset(name);\n\t\t\t}\n\t\t}\n\n\t\tfor (PublicRenderParameter publicRenderParameter :\n\t\t\t\tportlet.getPublicRenderParameters()) {\n\n\t\t\tString ignoreKey =\n\t\t\t\t_IGNORE_PREFIX + PortletQNameUtil.getPublicRenderParameterName(\n\t\t\t\t\tpublicRenderParameter.getQName());\n\n\t\t\tboolean ignoreValue = ParamUtil.getBoolean(\n\t\t\t\t\tactionRequest, ignoreKey);\n\n\t\t\tif (ignoreValue) {\n\t\t\t\tpreferences.setValue(ignoreKey, String.valueOf(Boolean.TRUE));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString mappingKey =\n\t\t\t\t\t_MAPPING_PREFIX +\n\t\t\t\t\tPortletQNameUtil.getPublicRenderParameterName(\n\t\t\t\t\t\tpublicRenderParameter.getQName());\n\n\t\t\t\tString mappingValue = ParamUtil.getString(\n\t\t\t\t\tactionRequest, mappingKey);\n\n\t\t\t\tif (Validator.isNotNull(mappingValue)) {\n\t\t\t\t\tpreferences.setValue(mappingKey, mappingValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (SessionErrors.isEmpty(actionRequest)) {\n\t\t\tpreferences.store();\n\t\t}\n\t}","commit_id":"119b02bb54e8826ee916a16e45dcb820f283d35f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void mergePublicRenderParameters(\n\t\tDynamicServletRequest dynamicRequest, PortletPreferences preferences,\n\t\tlong plid, Map<String, String[]> renderParameters) {\n\n\t\tEnumeration<PublicRenderParameter> publicRenderParameters =\n\t\t\tCollections.enumeration(_portlet.getPublicRenderParameters());\n\n\t\twhile (publicRenderParameters.hasMoreElements()) {\n\t\t\tPublicRenderParameter publicRenderParameter =\n\t\t\t\tpublicRenderParameters.nextElement();\n\n\t\t\tboolean ignore = GetterUtil.getBoolean(\n\t\t\t\tpreferences.getValue(\n\t\t\t\t\tPublicRenderParameterConfiguration.IGNORE_PREFIX +\n\t\t\t\t\t\tpublicRenderParameter.getIdentifier(),\n\t\t\t\t\tnull));\n\n\t\t\tif (ignore) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString name = GetterUtil.getString(\n\t\t\t\tpreferences.getValue(\n\t\t\t\t\tPublicRenderParameterConfiguration.MAPPING_PREFIX +\n\t\t\t\t\t\tpublicRenderParameter.getIdentifier(),\n\t\t\t\t\tnull));\n\n\t\t\tif (Validator.isNull(name)) {\n\t\t\t\tname = publicRenderParameter.getIdentifier();\n\t\t\t}\n\n\t\t\tQName qName = publicRenderParameter.getQName();\n\n\t\t\tString[] values = _publicRenderParameters.get(\n\t\t\t\tPortletQNameUtil.getKey(qName));\n\n\t\t\tif ((values) == null || (values.length == 0)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tString[] newValues = dynamicRequest.getParameterValues(name);\n\n\t\t\tif (newValues != null) {\n\t\t\t\tvalues = ArrayUtil.append(newValues, values);\n\t\t\t}\n\n\t\t\tdynamicRequest.setParameterValues(name, values);\n\t\t}\n\t}","id":69787,"modified_method":"protected void mergePublicRenderParameters(\n\t\tDynamicServletRequest dynamicRequest, PortletPreferences preferences,\n\t\tlong plid, Map<String, String[]> renderParameters) {\n\n\t\tEnumeration<PublicRenderParameter> publicRenderParameters =\n\t\t\tCollections.enumeration(_portlet.getPublicRenderParameters());\n\n\t\twhile (publicRenderParameters.hasMoreElements()) {\n\t\t\tPublicRenderParameter publicRenderParameter =\n\t\t\t\tpublicRenderParameters.nextElement();\n\n\t\t\tboolean ignore = GetterUtil.getBoolean(\n\t\t\t\tpreferences.getValue(\n\t\t\t\t\tPublicRenderParameterConfiguration.IGNORE_PREFIX +\n\t\t\t\t\t\tpublicRenderParameter.getIdentifier(),\n\t\t\t\t\tnull));\n\n\t\t\tif (ignore) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tQName qName = publicRenderParameter.getQName();\n\t\t\tString[] values = _publicRenderParameters.get(\n\t\t\t\tPortletQNameUtil.getKey(qName));\n\n\t\t\tString mappedTo = GetterUtil.getString(\n\t\t\t\tpreferences.getValue(\n\t\t\t\t\tPublicRenderParameterConfiguration.MAPPING_PREFIX +\n\t\t\t\t\t\tPortletQNameUtil.getPublicRenderParameterName(\n\t\t\t\t\t\t\tpublicRenderParameter.getQName()),\n\t\t\t\t\tnull));\n\t\t\tString[] newValues = dynamicRequest.getRequest().getParameterValues(\n\t\t\t\tmappedTo);\n\n\t\t\tif (newValues != null && newValues.length != 0) {\n\t\t\t\tnewValues = ArrayUtil.remove(newValues, \"null\");\n\t\t\t}\n\n\t\t\tString name = publicRenderParameter.getIdentifier();\n\n\t\t\tif (newValues == null || newValues.length == 0) {\n\t\t\t\tif ((values) == null || (values.length == 0)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdynamicRequest.setParameterValues(name, values);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdynamicRequest.setParameterValues(name, newValues);\n\t\t\t}\n\t\t}\n\t}","commit_id":"119b02bb54e8826ee916a16e45dcb820f283d35f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PublicRenderParameterConfiguration(\n\t\tPublicRenderParameter publicRenderParameter, String mapping,\n\t\tboolean ignore) {\n\n\t\t_publicRenderParameter = publicRenderParameter;\n\t\t_mapping = mapping;\n\t\t_ignore = ignore;\n\t}","id":69788,"modified_method":"public PublicRenderParameterConfiguration(\n\t\tPublicRenderParameter publicRenderParameter, String mapping,\n\t\tboolean ignore) {\n\n\t\t_publicRenderParameter = publicRenderParameter;\n\t\t_publicRenderParameterName =\n\t\t\tPortletQNameUtil.getPublicRenderParameterName(\n\t\t\t\t_publicRenderParameter.getQName());\n\t\t_mapping = mapping;\n\t\t_ignore = ignore;\n\t}","commit_id":"119b02bb54e8826ee916a16e45dcb820f283d35f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getMappingKey() {\n\t\treturn MAPPING_PREFIX + _publicRenderParameter.getIdentifier();\n\t}","id":69789,"modified_method":"public String getMappingKey() {\n\t\treturn MAPPING_PREFIX + _publicRenderParameterName;\n\t}","commit_id":"119b02bb54e8826ee916a16e45dcb820f283d35f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getIgnoreKey() {\n\t\treturn IGNORE_PREFIX + _publicRenderParameter.getIdentifier();\n\t}","id":69790,"modified_method":"public String getIgnoreKey() {\n\t\treturn IGNORE_PREFIX + _publicRenderParameterName;\n\t}","commit_id":"119b02bb54e8826ee916a16e45dcb820f283d35f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void init(\n\t\tHttpServletRequest request, Portlet portlet,\n\t\tInvokerPortlet invokerPortlet, PortletContext portletContext,\n\t\tWindowState windowState, PortletMode portletMode,\n\t\tPortletPreferences preferences, long plid) {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t_portlet = portlet;\n\t\t_portletName = portlet.getPortletId();\n\t\t_publicRenderParameters = PublicRenderParametersPool.get(request, plid);\n\n\t\tString portletNamespace = PortalUtil.getPortletNamespace(_portletName);\n\n\t\tboolean portalSessionShared = false;\n\n\t\tPortletApp portletApp = portlet.getPortletApp();\n\n\t\tif (portletApp.isWARFile() && !portlet.isPrivateSessionAttributes()) {\n\t\t\tportalSessionShared = true;\n\t\t}\n\n\t\trequest = new SharedSessionServletRequest(request, portalSessionShared);\n\n\t\tString dynamicQueryString = (String)request.getAttribute(\n\t\t\tDynamicServletRequest.DYNAMIC_QUERY_STRING);\n\n\t\tif (dynamicQueryString != null) {\n\t\t\trequest.removeAttribute(DynamicServletRequest.DYNAMIC_QUERY_STRING);\n\n\t\t\trequest = DynamicServletRequest.addQueryString(\n\t\t\t\trequest, dynamicQueryString, true);\n\t\t}\n\n\t\tDynamicServletRequest dynamicRequest = null;\n\n\t\tif (portlet.isPrivateRequestAttributes()) {\n\t\t\tdynamicRequest = new NamespaceServletRequest(\n\t\t\t\trequest, portletNamespace, portletNamespace, false);\n\t\t}\n\t\telse {\n\t\t\tdynamicRequest = new DynamicServletRequest(request, false);\n\t\t}\n\n\t\tboolean portletFocus = false;\n\n\t\tString ppid = ParamUtil.getString(request, \"p_p_id\");\n\n\t\tboolean windowStateRestoreCurrentView = ParamUtil.getBoolean(\n\t\t\trequest, \"p_p_state_rcv\");\n\n\t\tif (_portletName.equals(ppid) &&\n\t\t\t!(windowStateRestoreCurrentView &&\n\t\t\t  portlet.isRestoreCurrentView())) {\n\n\t\t\t// Request was targeted to this portlet\n\n\t\t\tif (themeDisplay.isLifecycleRender() ||\n\t\t\t\tthemeDisplay.isLifecycleResource()) {\n\n\t\t\t\t// Request was triggered by a render or resource URL\n\n\t\t\t\tportletFocus = true;\n\t\t\t}\n\t\t\telse if (themeDisplay.isLifecycleAction()) {\n\t\t\t\t_triggeredByActionURL = true;\n\n\t\t\t\tif (getLifecycle().equals(PortletRequest.ACTION_PHASE)) {\n\n\t\t\t\t\t// Request was triggered by an action URL and is being\n\t\t\t\t\t// processed by com.liferay.portlet.ActionRequestImpl\n\n\t\t\t\t\tportletFocus = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (portletFocus) {\n\t\t\tMap<String, String[]> renderParameters =\n\t\t\t\tnew HashMap<String, String[]>();\n\n\t\t\tif (getLifecycle().equals(PortletRequest.RENDER_PHASE) &&\n\t\t\t\t!LiferayWindowState.isExclusive(request) &&\n\t\t\t\t!LiferayWindowState.isPopUp(request)) {\n\n\t\t\t\tRenderParametersPool.put(\n\t\t\t\t\trequest, plid, _portletName, renderParameters);\n\t\t\t}\n\n\t\t\tMap<String, String[]> parameters = request.getParameterMap();\n\n\t\t\tfor (Map.Entry<String, String[]> entry : parameters.entrySet()) {\n\t\t\t\tString name = entry.getKey();\n\n\t\t\t\tif (isInvalidParameter(name)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tString[] values = entry.getValue();\n\n\t\t\t\tif (themeDisplay.isLifecycleRender()) {\n\t\t\t\t\trenderParameters.put(name, values);\n\t\t\t\t}\n\n\t\t\t\tif (values == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tname = removePortletNamespace(\n\t\t\t\t\tinvokerPortlet, portletNamespace, name);\n\n\t\t\t\tdynamicRequest.setParameterValues(name, values);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tMap<String, String[]> renderParameters = RenderParametersPool.get(\n\t\t\t\trequest, plid, _portletName);\n\n\t\t\tfor (Map.Entry<String, String[]> entry :\n\t\t\t\t\trenderParameters.entrySet()) {\n\n\t\t\t\tString name = entry.getKey();\n\t\t\t\tString[] values = entry.getValue();\n\n\t\t\t\tname = removePortletNamespace(\n\t\t\t\t\tinvokerPortlet, portletNamespace, name);\n\n\t\t\t\tdynamicRequest.setParameterValues(name, values);\n\t\t\t}\n\t\t}\n\n\t\tmergePublicRenderParameters(dynamicRequest, preferences, plid);\n\n\t\t_request = dynamicRequest;\n\t\t_originalRequest = request;\n\t\t_wapTheme = BrowserSnifferUtil.isWap(_request);\n\t\t_portlet = portlet;\n\t\t_portalContext = new PortalContextImpl();\n\t\t_portletContext = portletContext;\n\t\t_windowState = windowState;\n\t\t_portletMode = portletMode;\n\t\t_preferences = preferences;\n\t\t_session = new PortletSessionImpl(\n\t\t\t_request.getSession(), _portletContext, _portletName, plid);\n\n\t\tString remoteUser = request.getRemoteUser();\n\n\t\tString userPrincipalStrategy = portlet.getUserPrincipalStrategy();\n\n\t\tif (userPrincipalStrategy.equals(\n\t\t\t\tPortletConstants.USER_PRINCIPAL_STRATEGY_SCREEN_NAME)) {\n\n\t\t\ttry {\n\t\t\t\tUser user = PortalUtil.getUser(request);\n\n\t\t\t\tif (user != null) {\n\t\t\t\t\t_remoteUser = user.getScreenName();\n\t\t\t\t\t_remoteUserId = user.getUserId();\n\t\t\t\t\t_userPrincipal = new ProtectedPrincipal(_remoteUser);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlong userId = PortalUtil.getUserId(request);\n\n\t\t\tif ((userId > 0) && (remoteUser == null)) {\n\t\t\t\t_remoteUser = String.valueOf(userId);\n\t\t\t\t_remoteUserId = userId;\n\t\t\t\t_userPrincipal = new ProtectedPrincipal(_remoteUser);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_remoteUser = remoteUser;\n\t\t\t\t_remoteUserId = GetterUtil.getLong(remoteUser);\n\t\t\t\t_userPrincipal = request.getUserPrincipal();\n\t\t\t}\n\t\t}\n\n\t\t_locale = themeDisplay.getLocale();\n\t\t_plid = plid;\n\t}","id":69791,"modified_method":"protected void init(\n\t\tHttpServletRequest request, Portlet portlet,\n\t\tInvokerPortlet invokerPortlet, PortletContext portletContext,\n\t\tWindowState windowState, PortletMode portletMode,\n\t\tPortletPreferences preferences, long plid) {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t_portlet = portlet;\n\t\t_portletName = portlet.getPortletId();\n\t\t_publicRenderParameters = PublicRenderParametersPool.get(request, plid);\n\n\t\tString portletNamespace = PortalUtil.getPortletNamespace(_portletName);\n\n\t\tboolean portalSessionShared = false;\n\n\t\tPortletApp portletApp = portlet.getPortletApp();\n\n\t\tif (portletApp.isWARFile() && !portlet.isPrivateSessionAttributes()) {\n\t\t\tportalSessionShared = true;\n\t\t}\n\n\t\trequest = new SharedSessionServletRequest(request, portalSessionShared);\n\n\t\tString dynamicQueryString = (String)request.getAttribute(\n\t\t\tDynamicServletRequest.DYNAMIC_QUERY_STRING);\n\n\t\tif (dynamicQueryString != null) {\n\t\t\trequest.removeAttribute(DynamicServletRequest.DYNAMIC_QUERY_STRING);\n\n\t\t\trequest = DynamicServletRequest.addQueryString(\n\t\t\t\trequest, dynamicQueryString, true);\n\t\t}\n\n\t\tDynamicServletRequest dynamicRequest = null;\n\n\t\tif (portlet.isPrivateRequestAttributes()) {\n\t\t\tdynamicRequest = new NamespaceServletRequest(\n\t\t\t\trequest, portletNamespace, portletNamespace, false);\n\t\t}\n\t\telse {\n\t\t\tdynamicRequest = new DynamicServletRequest(request, false);\n\t\t}\n\n\t\tboolean portletFocus = false;\n\n\t\tString ppid = ParamUtil.getString(request, \"p_p_id\");\n\n\t\tboolean windowStateRestoreCurrentView = ParamUtil.getBoolean(\n\t\t\trequest, \"p_p_state_rcv\");\n\n\t\tif (_portletName.equals(ppid) &&\n\t\t\t!(windowStateRestoreCurrentView &&\n\t\t\t  portlet.isRestoreCurrentView())) {\n\n\t\t\t// Request was targeted to this portlet\n\n\t\t\tif (themeDisplay.isLifecycleRender() ||\n\t\t\t\tthemeDisplay.isLifecycleResource()) {\n\n\t\t\t\t// Request was triggered by a render or resource URL\n\n\t\t\t\tportletFocus = true;\n\t\t\t}\n\t\t\telse if (themeDisplay.isLifecycleAction()) {\n\t\t\t\t_triggeredByActionURL = true;\n\n\t\t\t\tif (getLifecycle().equals(PortletRequest.ACTION_PHASE)) {\n\n\t\t\t\t\t// Request was triggered by an action URL and is being\n\t\t\t\t\t// processed by com.liferay.portlet.ActionRequestImpl\n\n\t\t\t\t\tportletFocus = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (portletFocus) {\n\t\t\tMap<String, String[]> renderParameters =\n\t\t\t\tnew HashMap<String, String[]>();\n\n\t\t\tif (getLifecycle().equals(PortletRequest.RENDER_PHASE) &&\n\t\t\t\t!LiferayWindowState.isExclusive(request) &&\n\t\t\t\t!LiferayWindowState.isPopUp(request)) {\n\n\t\t\t\tRenderParametersPool.put(\n\t\t\t\t\trequest, plid, _portletName, renderParameters);\n\t\t\t}\n\n\t\t\tMap<String, String[]> parameters = request.getParameterMap();\n\n\t\t\tfor (Map.Entry<String, String[]> entry : parameters.entrySet()) {\n\t\t\t\tString name = entry.getKey();\n\n\t\t\t\tif (isInvalidParameter(name)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tString[] values = entry.getValue();\n\n\t\t\t\tif (themeDisplay.isLifecycleRender()) {\n\t\t\t\t\trenderParameters.put(name, values);\n\t\t\t\t}\n\n\t\t\t\tif (values == null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tString realName = removePortletNamespace(\n\t\t\t\t\tinvokerPortlet, portletNamespace, name);\n\n\t\t\t\tif (!realName.equals(name)) {\n\t\t\t\t\tdynamicRequest.setParameterValues(realName, values);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tMap<String, String[]> renderParameters = RenderParametersPool.get(\n\t\t\t\trequest, plid, _portletName);\n\n\t\t\tfor (Map.Entry<String, String[]> entry :\n\t\t\t\t\trenderParameters.entrySet()) {\n\n\t\t\t\tString name = entry.getKey();\n\t\t\t\tString[] values = entry.getValue();\n\n\t\t\t\tname = removePortletNamespace(\n\t\t\t\t\tinvokerPortlet, portletNamespace, name);\n\n\t\t\t\tdynamicRequest.setParameterValues(name, values);\n\t\t\t}\n\t\t}\n\n\t\tmergePublicRenderParameters(dynamicRequest, preferences, plid);\n\n\t\t_request = dynamicRequest;\n\t\t_originalRequest = request;\n\t\t_wapTheme = BrowserSnifferUtil.isWap(_request);\n\t\t_portlet = portlet;\n\t\t_portalContext = new PortalContextImpl();\n\t\t_portletContext = portletContext;\n\t\t_windowState = windowState;\n\t\t_portletMode = portletMode;\n\t\t_preferences = preferences;\n\t\t_session = new PortletSessionImpl(\n\t\t\t_request.getSession(), _portletContext, _portletName, plid);\n\n\t\tString remoteUser = request.getRemoteUser();\n\n\t\tString userPrincipalStrategy = portlet.getUserPrincipalStrategy();\n\n\t\tif (userPrincipalStrategy.equals(\n\t\t\t\tPortletConstants.USER_PRINCIPAL_STRATEGY_SCREEN_NAME)) {\n\n\t\t\ttry {\n\t\t\t\tUser user = PortalUtil.getUser(request);\n\n\t\t\t\tif (user != null) {\n\t\t\t\t\t_remoteUser = user.getScreenName();\n\t\t\t\t\t_remoteUserId = user.getUserId();\n\t\t\t\t\t_userPrincipal = new ProtectedPrincipal(_remoteUser);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlong userId = PortalUtil.getUserId(request);\n\n\t\t\tif ((userId > 0) && (remoteUser == null)) {\n\t\t\t\t_remoteUser = String.valueOf(userId);\n\t\t\t\t_remoteUserId = userId;\n\t\t\t\t_userPrincipal = new ProtectedPrincipal(_remoteUser);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_remoteUser = remoteUser;\n\t\t\t\t_remoteUserId = GetterUtil.getLong(remoteUser);\n\t\t\t\t_userPrincipal = request.getUserPrincipal();\n\t\t\t}\n\t\t}\n\n\t\t_locale = themeDisplay.getLocale();\n\t\t_plid = plid;\n\t}","commit_id":"4a22300e27f2e333a309b4f6812f4de25a2fdf97","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void init(\n\t\tHttpServletRequest req, Portlet portlet, InvokerPortlet invokerPortlet,\n\t\tPortletContext portletCtx, WindowState windowState,\n\t\tPortletMode portletMode, PortletPreferences prefs, long plid) {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)req.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t_portletName = portlet.getPortletId();\n\n\t\tString portletNamespace = PortalUtil.getPortletNamespace(_portletName);\n\n\t\tMap<String, Object> sharedSessionAttributes =\n\t\t\tSharedSessionUtil.getSharedSessionAttributes(req);\n\n\t\tboolean portalSessionShared = false;\n\n\t\tPortletApp portletApp = portlet.getPortletApp();\n\n\t\tif (portletApp.isWARFile() && !portlet.isPrivateSessionAttributes()) {\n\t\t\tportalSessionShared = true;\n\t\t}\n\n\t\treq = new SharedSessionServletRequest(\n\t\t\treq, sharedSessionAttributes, portalSessionShared);\n\n\t\tDynamicServletRequest dynamicReq = null;\n\n\t\tif (portlet.isPrivateRequestAttributes()) {\n\t\t\tdynamicReq = new NamespaceServletRequest(\n\t\t\t\treq, portletNamespace, portletNamespace, false);\n\t\t}\n\t\telse {\n\t\t\tdynamicReq = new DynamicServletRequest(req, false);\n\t\t}\n\n\t\tEnumeration<String> enu = null;\n\n\t\tboolean portletFocus = false;\n\n\t\tif (_portletName.equals(req.getParameter(\"p_p_id\"))) {\n\n\t\t\t// Request was targeted to this portlet\n\n\t\t\tif (themeDisplay.isLifecycleRender() ||\n\t\t\t\tthemeDisplay.isLifecycleResource()) {\n\n\t\t\t\t// Request was triggered by a render or resource URL\n\n\t\t\t   portletFocus = true;\n\t\t\t}\n\t\t\telse if (themeDisplay.isLifecycleAction() &&\n\t\t\t\t\t getLifecycle().equals(PortletRequest.ACTION_PHASE)) {\n\n\t\t\t\t// Request was triggered by an action URL and is being processed\n\t\t\t\t// by com.liferay.portlet.ActionRequestImpl\n\n\t\t\t   portletFocus = true;\n\t\t\t}\n\t\t}\n\n\t\tMap<String, String[]> oldRenderParameters = RenderParametersPool.get(\n\t\t\treq, plid, _portletName);\n\n\t\tMap<String, String[]> newRenderParameters = null;\n\n\t\tif (portletFocus) {\n\t\t\tnewRenderParameters = new HashMap<String, String[]>();\n\n\t\t\tif (getLifecycle().equals(PortletRequest.RENDER_PHASE) &&\n\t\t\t\t!LiferayWindowState.isExclusive(req) &&\n\t\t\t\t!LiferayWindowState.isPopUp(req)) {\n\n\t\t\t\tRenderParametersPool.put(\n\t\t\t\t\treq, plid, _portletName, newRenderParameters);\n\t\t\t}\n\n\t\t\tif (themeDisplay.isLifecycleResource()) {\n\t\t\t\tSet<String> oldNames = oldRenderParameters.keySet();\n\t\t\t\tSet<String> newNames = req.getParameterMap().keySet();\n\n\t\t\t\tSet<String> allNames = new HashSet<String>();\n\n\t\t\t\tallNames.addAll(oldNames);\n\t\t\t\tallNames.addAll(newNames);\n\n\t\t\t\tenu = Collections.enumeration(newNames);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tenu = req.getParameterNames();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tenu = Collections.enumeration(oldRenderParameters.keySet());\n\t\t}\n\n\t\twhile (enu.hasMoreElements()) {\n\t\t\tString name = enu.nextElement();\n\n\t\t\tif (name.startsWith(portletNamespace) &&\n\t\t\t\t!invokerPortlet.isFacesPortlet()) {\n\n\t\t\t\tString shortName = name.substring(\n\t\t\t\t\tportletNamespace.length(), name.length());\n\t\t\t\tString[] values = null;\n\n\t\t\t\tif (portletFocus) {\n\t\t\t\t\tvalues = req.getParameterValues(name);\n\n\t\t\t\t\tif (themeDisplay.isLifecycleRender()) {\n\t\t\t\t\t\tnewRenderParameters.put(name, values);\n\t\t\t\t\t}\n\t\t\t\t\telse if (themeDisplay.isLifecycleResource()) {\n\t\t\t\t\t\tString[] oldValues = oldRenderParameters.get(name);\n\n\t\t\t\t\t\tif (oldValues != null) {\n\t\t\t\t\t\t\tif (values == null) {\n\t\t\t\t\t\t\t\tvalues = oldValues;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvalues = ArrayUtil.append(values, oldValues);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalues = oldRenderParameters.get(name);\n\t\t\t\t}\n\n\t\t\t\tdynamicReq.setParameterValues(shortName, values);\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t// Do not allow reserved or null parameters to pass through.\n\t\t\t\t// Jetty has a bug that adds an additional null parameter\n\t\t\t\t// the enumeration of parameter names.\n\n\t\t\t\tif (!PortalUtil.isReservedParameter(name) &&\n\t\t\t\t\tValidator.isNotNull(name)) {\n\n\t\t\t\t\tString[] values = null;\n\n\t\t\t\t\tif (portletFocus) {\n\t\t\t\t\t\tif (themeDisplay.isLifecycleRender()) {\n\t\t\t\t\t\t\tnewRenderParameters.put(name, values);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (themeDisplay.isLifecycleResource()) {\n\t\t\t\t\t\t\tString[] oldValues = oldRenderParameters.get(name);\n\n\t\t\t\t\t\t\tif (oldValues != null) {\n\t\t\t\t\t\t\t\tif (values == null) {\n\t\t\t\t\t\t\t\t\tvalues = oldValues;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tvalues = ArrayUtil.append(values, oldValues);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalues = oldRenderParameters.get(name);\n\t\t\t\t\t}\n\n\t\t\t\t\tdynamicReq.setParameterValues(name, values);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_req = dynamicReq;\n\t\t_wapTheme = BrowserSniffer.is_wap_xhtml(_req);\n\t\t_portlet = portlet;\n\t\t_portalCtx = new PortalContextImpl();\n\t\t_portletCtx = portletCtx;\n\t\t_windowState = windowState;\n\t\t_portletMode = portletMode;\n\t\t_prefs = prefs;\n\t\t_portalSessionId = _req.getRequestedSessionId();\n\t\t_ses = new PortletSessionImpl(\n\t\t\t_req, _portletName, _portletCtx, _portalSessionId, plid);\n\n\t\tlong userId = PortalUtil.getUserId(req);\n\t\tString remoteUser = req.getRemoteUser();\n\n\t\tString userPrincipalStrategy = portlet.getUserPrincipalStrategy();\n\n\t\tif (userPrincipalStrategy.equals(\n\t\t\t\tPortletImpl.USER_PRINCIPAL_STRATEGY_SCREEN_NAME)) {\n\n\t\t\ttry {\n\t\t\t\tUser user = PortalUtil.getUser(req);\n\n\t\t\t\t_remoteUser = user.getScreenName();\n\t\t\t\t_remoteUserId = user.getUserId();\n\t\t\t\t_userPrincipal = new ProtectedPrincipal(_remoteUser);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ((userId > 0) && (remoteUser == null)) {\n\t\t\t\t_remoteUser = String.valueOf(userId);\n\t\t\t\t_remoteUserId = userId;\n\t\t\t\t_userPrincipal = new ProtectedPrincipal(_remoteUser);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_remoteUser = remoteUser;\n\t\t\t\t_remoteUserId = GetterUtil.getLong(remoteUser);\n\t\t\t\t_userPrincipal = req.getUserPrincipal();\n\t\t\t}\n\t\t}\n\n\t\t_locale = (Locale)_req.getSession().getAttribute(Globals.LOCALE_KEY);\n\t\t_plid = plid;\n\t}","id":69792,"modified_method":"protected void init(\n\t\tHttpServletRequest req, Portlet portlet, InvokerPortlet invokerPortlet,\n\t\tPortletContext portletCtx, WindowState windowState,\n\t\tPortletMode portletMode, PortletPreferences prefs, long plid) {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)req.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t_portletName = portlet.getPortletId();\n\n\t\tString portletNamespace = PortalUtil.getPortletNamespace(_portletName);\n\n\t\tMap<String, Object> sharedSessionAttributes =\n\t\t\tSharedSessionUtil.getSharedSessionAttributes(req);\n\n\t\tboolean portalSessionShared = false;\n\n\t\tPortletApp portletApp = portlet.getPortletApp();\n\n\t\tif (portletApp.isWARFile() && !portlet.isPrivateSessionAttributes()) {\n\t\t\tportalSessionShared = true;\n\t\t}\n\n\t\treq = new SharedSessionServletRequest(\n\t\t\treq, sharedSessionAttributes, portalSessionShared);\n\n\t\tDynamicServletRequest dynamicReq = null;\n\n\t\tif (portlet.isPrivateRequestAttributes()) {\n\t\t\tdynamicReq = new NamespaceServletRequest(\n\t\t\t\treq, portletNamespace, portletNamespace, false);\n\t\t}\n\t\telse {\n\t\t\tdynamicReq = new DynamicServletRequest(req, false);\n\t\t}\n\n\t\tEnumeration<String> enu = null;\n\n\t\tboolean portletFocus = false;\n\n\t\tif (_portletName.equals(req.getParameter(\"p_p_id\"))) {\n\n\t\t\t// Request was targeted to this portlet\n\n\t\t\tif (themeDisplay.isLifecycleRender() ||\n\t\t\t\tthemeDisplay.isLifecycleResource()) {\n\n\t\t\t\t// Request was triggered by a render or resource URL\n\n\t\t\t   portletFocus = true;\n\t\t\t}\n\t\t\telse if (themeDisplay.isLifecycleAction() &&\n\t\t\t\t\t getLifecycle().equals(PortletRequest.ACTION_PHASE)) {\n\n\t\t\t\t// Request was triggered by an action URL and is being processed\n\t\t\t\t// by com.liferay.portlet.ActionRequestImpl\n\n\t\t\t   portletFocus = true;\n\t\t\t}\n\t\t}\n\n\t\tMap<String, String[]> oldRenderParameters = RenderParametersPool.get(\n\t\t\treq, plid, _portletName);\n\n\t\tMap<String, String[]> newRenderParameters = null;\n\n\t\tif (portletFocus) {\n\t\t\tnewRenderParameters = new HashMap<String, String[]>();\n\n\t\t\tif (getLifecycle().equals(PortletRequest.RENDER_PHASE) &&\n\t\t\t\t!LiferayWindowState.isExclusive(req) &&\n\t\t\t\t!LiferayWindowState.isPopUp(req)) {\n\n\t\t\t\tRenderParametersPool.put(\n\t\t\t\t\treq, plid, _portletName, newRenderParameters);\n\t\t\t}\n\n\t\t\tif (themeDisplay.isLifecycleResource()) {\n\t\t\t\tSet<String> oldNames = oldRenderParameters.keySet();\n\t\t\t\tSet<String> newNames = req.getParameterMap().keySet();\n\n\t\t\t\tSet<String> allNames = new HashSet<String>();\n\n\t\t\t\tallNames.addAll(oldNames);\n\t\t\t\tallNames.addAll(newNames);\n\n\t\t\t\tenu = Collections.enumeration(newNames);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tenu = req.getParameterNames();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tenu = Collections.enumeration(oldRenderParameters.keySet());\n\t\t}\n\n\t\twhile (enu.hasMoreElements()) {\n\t\t\tString name = enu.nextElement();\n\n\t\t\tif (name.startsWith(portletNamespace) &&\n\t\t\t\t!invokerPortlet.isFacesPortlet()) {\n\n\t\t\t\tString shortName = name.substring(\n\t\t\t\t\tportletNamespace.length(), name.length());\n\n\t\t\t\tString[] values = getParameterValues(\n\t\t\t\t\treq, themeDisplay, portletFocus, oldRenderParameters,\n\t\t\t\t\tnewRenderParameters, name);\n\n\t\t\t\tdynamicReq.setParameterValues(shortName, values);\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\t// Do not allow reserved or null parameters to pass through.\n\t\t\t\t// Jetty has a bug that adds an additional null parameter\n\t\t\t\t// the enumeration of parameter names.\n\n\t\t\t\tif (!PortalUtil.isReservedParameter(name) &&\n\t\t\t\t\tValidator.isNotNull(name)) {\n\n\t\t\t\t\tString[] values = getParameterValues(\n\t\t\t\t\t\treq, themeDisplay, portletFocus, oldRenderParameters,\n\t\t\t\t\t\tnewRenderParameters, name);\n\n\t\t\t\t\tdynamicReq.setParameterValues(name, values);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_req = dynamicReq;\n\t\t_wapTheme = BrowserSniffer.is_wap_xhtml(_req);\n\t\t_portlet = portlet;\n\t\t_portalCtx = new PortalContextImpl();\n\t\t_portletCtx = portletCtx;\n\t\t_windowState = windowState;\n\t\t_portletMode = portletMode;\n\t\t_prefs = prefs;\n\t\t_portalSessionId = _req.getRequestedSessionId();\n\t\t_ses = new PortletSessionImpl(\n\t\t\t_req, _portletName, _portletCtx, _portalSessionId, plid);\n\n\t\tlong userId = PortalUtil.getUserId(req);\n\t\tString remoteUser = req.getRemoteUser();\n\n\t\tString userPrincipalStrategy = portlet.getUserPrincipalStrategy();\n\n\t\tif (userPrincipalStrategy.equals(\n\t\t\t\tPortletImpl.USER_PRINCIPAL_STRATEGY_SCREEN_NAME)) {\n\n\t\t\ttry {\n\t\t\t\tUser user = PortalUtil.getUser(req);\n\n\t\t\t\t_remoteUser = user.getScreenName();\n\t\t\t\t_remoteUserId = user.getUserId();\n\t\t\t\t_userPrincipal = new ProtectedPrincipal(_remoteUser);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ((userId > 0) && (remoteUser == null)) {\n\t\t\t\t_remoteUser = String.valueOf(userId);\n\t\t\t\t_remoteUserId = userId;\n\t\t\t\t_userPrincipal = new ProtectedPrincipal(_remoteUser);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_remoteUser = remoteUser;\n\t\t\t\t_remoteUserId = GetterUtil.getLong(remoteUser);\n\t\t\t\t_userPrincipal = req.getUserPrincipal();\n\t\t\t}\n\t\t}\n\n\t\t_locale = (Locale)_req.getSession().getAttribute(Globals.LOCALE_KEY);\n\t\t_plid = plid;\n\t}","commit_id":"fc12da0d557452b38ba8bda5f00c32b02b1cc56a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected HttpServletRequest createDynamicRequest(\n\t\tMap<String, String[]> queryParams, HttpServletRequest request,\n\t\tPortletRequestImpl portletRequestImpl) {\n\n\t\tDynamicServletRequest dynamicRequest;\n\n\t\tif (portletRequestImpl.isPrivateRequestAttributes()) {\n\t\t\tString portletNamespace = PortalUtil.getPortletNamespace(\n\t\t\t\tportletRequestImpl.getPortletName());\n\n\t\t\tdynamicRequest = new NamespaceServletRequest(\n\t\t\t\trequest, portletNamespace, portletNamespace);\n\t\t}\n\t\telse {\n\t\t\tdynamicRequest = new DynamicServletRequest(request);\n\t\t}\n\n\t\tfor (Map.Entry<String, String[]> entry : queryParams.entrySet()) {\n\t\t\tString name = entry.getKey();\n\t\t\tString[] values = entry.getValue();\n\n\t\t\tString[] oldValues = dynamicRequest.getParameterValues(name);\n\n\t\t\tif (oldValues == null) {\n\t\t\t\tdynamicRequest.setParameterValues(name, values);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString[] newValues = ArrayUtil.append(values, oldValues);\n\n\t\t\t\tdynamicRequest.setParameterValues(name, newValues);\n\t\t\t}\n\t\t}\n\n\t\treturn dynamicRequest;\n\t}","id":69793,"modified_method":"protected HttpServletRequest createDynamicRequest(\n\t\tMap<String, String[]> queryParams, HttpServletRequest request,\n\t\tPortletRequestImpl portletRequestImpl) {\n\n\t\tDynamicServletRequest dynamicRequest;\n\n\t\tif (portletRequestImpl.isPrivateRequestAttributes()) {\n\t\t\tString portletNamespace = PortalUtil.getPortletNamespace(\n\t\t\t\tportletRequestImpl.getPortletName());\n\n\t\t\tdynamicRequest = new NamespaceServletRequest(\n\t\t\t\trequest, portletNamespace, portletNamespace);\n\t\t}\n\t\telse {\n\t\t\tdynamicRequest = new DynamicServletRequest(request);\n\t\t}\n\n\t\tfor (Map.Entry<String, String[]> entry : queryParams.entrySet()) {\n\t\t\tString name = entry.getKey();\n\t\t\tString[] values = entry.getValue();\n\n\t\t\tString[] oldValues = dynamicRequest.getParameterValues(name);\n\n\t\t\tif (oldValues != null) {\n\t\t\t\tvalues = ArrayUtil.append(values, oldValues);\n\t\t\t}\n\n\t\t\tdynamicRequest.setParameterValues(name, values);\n\t\t}\n\n\t\treturn dynamicRequest;\n\t}","commit_id":"9a00b8af9b11f6b855ffd57d592f0c8539254af4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected Map<String, String[]> extractQueryParameters(String queryString) {\n\t\tMap<String, String[]> queryParams = new HashMap<>();\n\n\t\tString[] queryParamsArray = StringUtil.split(\n\t\t\tqueryString, CharPool.AMPERSAND);\n\n\t\tfor (String element : queryParamsArray) {\n\t\t\tString[] nameValuePair = StringUtil.split(element, CharPool.EQUAL);\n\n\t\t\tString name = nameValuePair[0];\n\t\t\tString value = StringPool.BLANK;\n\n\t\t\tif (nameValuePair.length == 2) {\n\t\t\t\tvalue = nameValuePair[1];\n\t\t\t}\n\n\t\t\tString[] values = queryParams.get(name);\n\n\t\t\tif (values == null) {\n\t\t\t\tqueryParams.put(name, new String[] {value});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString[] newValues = new String[values.length + 1];\n\n\t\t\t\tSystem.arraycopy(values, 0, newValues, 0, values.length);\n\n\t\t\t\tnewValues[newValues.length - 1] = value;\n\n\t\t\t\tqueryParams.put(name, newValues);\n\t\t\t}\n\t\t}\n\n\t\treturn queryParams;\n\t}","id":69794,"modified_method":"protected Map<String, String[]> extractQueryParameters(String queryString) {\n\t\tMap<String, String[]> queryParams = new HashMap<>();\n\n\t\tfor (String element : StringUtil.split(\n\t\t\t\tqueryString, CharPool.AMPERSAND)) {\n\n\t\t\tString[] nameValuePair = StringUtil.split(element, CharPool.EQUAL);\n\n\t\t\tString name = nameValuePair[0];\n\t\t\tString value = StringPool.BLANK;\n\n\t\t\tif (nameValuePair.length == 2) {\n\t\t\t\tvalue = nameValuePair[1];\n\t\t\t}\n\n\t\t\tString[] values = queryParams.get(name);\n\n\t\t\tif (values == null) {\n\t\t\t\tqueryParams.put(name, new String[] {value});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString[] newValues = new String[values.length + 1];\n\n\t\t\t\tSystem.arraycopy(values, 0, newValues, 0, values.length);\n\n\t\t\t\tnewValues[newValues.length - 1] = value;\n\n\t\t\t\tqueryParams.put(name, newValues);\n\t\t\t}\n\t\t}\n\n\t\treturn queryParams;\n\t}","commit_id":"9a00b8af9b11f6b855ffd57d592f0c8539254af4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void dispatch(\n\t\t\tPortletRequest portletRequest, PortletResponse portletResponse,\n\t\t\tboolean strutsURLEncoder, boolean include)\n\t\tthrows IOException, PortletException {\n\n\t\tcheckCalledFlushBuffer(include, portletResponse);\n\n\t\tPortletRequestImpl portletRequestImpl =\n\t\t\tPortletRequestImpl.getPortletRequestImpl(portletRequest);\n\t\tPortletResponseImpl portletResponseImpl =\n\t\t\tPortletResponseImpl.getPortletResponseImpl(portletResponse);\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\t\tHttpServletResponse response = PortalUtil.getHttpServletResponse(\n\t\t\tportletResponse);\n\n\t\trequest.setAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_REQUEST, portletRequest);\n\t\trequest.setAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_RESPONSE, portletResponse);\n\n\t\tString pathInfo = null;\n\t\tString queryString = null;\n\t\tString requestURI = null;\n\t\tString servletPath = null;\n\n\t\tif (_path != null) {\n\t\t\tString pathNoQueryString = _path;\n\n\t\t\tint pos = _path.indexOf(CharPool.QUESTION);\n\n\t\t\tif (pos != -1) {\n\t\t\t\tpathNoQueryString = _path.substring(0, pos);\n\t\t\t\tqueryString = _path.substring(pos + 1);\n\n\t\t\t\tMap<String, String[]> queryParams = extractQueryParameters(\n\t\t\t\t\tqueryString);\n\n\t\t\t\trequest = createDynamicRequest(\n\t\t\t\t\tqueryParams, request, portletRequestImpl);\n\t\t\t}\n\n\t\t\tPortlet portlet = portletRequestImpl.getPortlet();\n\n\t\t\tPortletApp portletApp = portlet.getPortletApp();\n\n\t\t\tSet<String> servletURLPatterns = portletApp.getServletURLPatterns();\n\n\t\t\tfor (String urlPattern : servletURLPatterns) {\n\t\t\t\tif (urlPattern.endsWith(\"/*\")) {\n\t\t\t\t\turlPattern = urlPattern.substring(\n\t\t\t\t\t\t0, urlPattern.length() - 2);\n\n\t\t\t\t\tif ((pathNoQueryString.length() > urlPattern.length()) &&\n\t\t\t\t\t\tpathNoQueryString.startsWith(urlPattern) &&\n\t\t\t\t\t\t(pathNoQueryString.charAt(urlPattern.length()) ==\n\t\t\t\t\t\t\tCharPool.SLASH)) {\n\n\t\t\t\t\t\tpathInfo = pathNoQueryString.substring(\n\t\t\t\t\t\t\turlPattern.length());\n\t\t\t\t\t\tservletPath = urlPattern;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (pathInfo == null) {\n\t\t\t\tpathInfo = pathNoQueryString;\n\t\t\t}\n\n\t\t\tString contextPath = portletRequest.getContextPath();\n\n\t\t\tif (contextPath.equals(StringPool.SLASH)) {\n\t\t\t\trequestURI = pathNoQueryString;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trequestURI = contextPath + pathNoQueryString;\n\t\t\t}\n\t\t}\n\n\t\tPortletServletRequest portletServletRequest = new PortletServletRequest(\n\t\t\trequest, portletRequest, pathInfo, queryString, requestURI,\n\t\t\tservletPath, _named, include);\n\n\t\tPortletServletResponse portletServletResponse =\n\t\t\tnew PortletServletResponse(response, portletResponse, include);\n\n\t\tURLEncoder urlEncoder = _portlet.getURLEncoderInstance();\n\n\t\tif (urlEncoder != null) {\n\t\t\tportletResponseImpl.setURLEncoder(urlEncoder);\n\t\t}\n\t\telse if (strutsURLEncoder) {\n\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t(ThemeDisplay)portletRequest.getAttribute(\n\t\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\tURLEncoder strutsURLEncoderObj = new StrutsURLEncoder(\n\t\t\t\tportletServletRequest.getContextPath(),\n\t\t\t\tthemeDisplay.getPathMain(),\n\t\t\t\t(String)_liferayPortletContext.getAttribute(\n\t\t\t\t\tGlobals.SERVLET_KEY),\n\t\t\t\t(LiferayPortletURL)portletResponseImpl.createRenderURL());\n\n\t\t\tportletResponseImpl.setURLEncoder(strutsURLEncoderObj);\n\t\t}\n\n\t\ttry {\n\t\t\tif (include) {\n\t\t\t\t_requestDispatcher.include(\n\t\t\t\t\tportletServletRequest, portletServletResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_requestDispatcher.forward(\n\t\t\t\t\tportletServletRequest, portletServletResponse);\n\t\t\t}\n\t\t}\n\t\tcatch (ServletException se) {\n\t\t\t_log.error(se, se);\n\n\t\t\tthrow new PortletException(se);\n\t\t}\n\t}","id":69795,"modified_method":"protected void dispatch(\n\t\t\tPortletRequest portletRequest, PortletResponse portletResponse,\n\t\t\tboolean strutsURLEncoder, boolean include)\n\t\tthrows IOException, PortletException {\n\n\t\tcheckCalledFlushBuffer(include, portletResponse);\n\n\t\tPortletRequestImpl portletRequestImpl =\n\t\t\tPortletRequestImpl.getPortletRequestImpl(portletRequest);\n\t\tPortletResponseImpl portletResponseImpl =\n\t\t\tPortletResponseImpl.getPortletResponseImpl(portletResponse);\n\n\t\tHttpServletRequest request = PortalUtil.getHttpServletRequest(\n\t\t\tportletRequest);\n\n\t\trequest.setAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_REQUEST, portletRequest);\n\t\trequest.setAttribute(\n\t\t\tJavaConstants.JAVAX_PORTLET_RESPONSE, portletResponse);\n\n\t\tString pathInfo = null;\n\t\tString queryString = null;\n\t\tString requestURI = null;\n\t\tString servletPath = null;\n\n\t\tif (_path != null) {\n\t\t\tString pathNoQueryString = _path;\n\n\t\t\tint pos = _path.indexOf(CharPool.QUESTION);\n\n\t\t\tif (pos != -1) {\n\t\t\t\tpathNoQueryString = _path.substring(0, pos);\n\t\t\t\tqueryString = _path.substring(pos + 1);\n\n\t\t\t\trequest = createDynamicRequest(\n\t\t\t\t\textractQueryParameters(queryString), request,\n\t\t\t\t\tportletRequestImpl);\n\t\t\t}\n\n\t\t\tPortlet portlet = portletRequestImpl.getPortlet();\n\n\t\t\tPortletApp portletApp = portlet.getPortletApp();\n\n\t\t\tSet<String> servletURLPatterns = portletApp.getServletURLPatterns();\n\n\t\t\tfor (String urlPattern : servletURLPatterns) {\n\t\t\t\tif (urlPattern.endsWith(\"/*\")) {\n\t\t\t\t\turlPattern = urlPattern.substring(\n\t\t\t\t\t\t0, urlPattern.length() - 2);\n\n\t\t\t\t\tif ((pathNoQueryString.length() > urlPattern.length()) &&\n\t\t\t\t\t\tpathNoQueryString.startsWith(urlPattern) &&\n\t\t\t\t\t\t(pathNoQueryString.charAt(urlPattern.length()) ==\n\t\t\t\t\t\t\tCharPool.SLASH)) {\n\n\t\t\t\t\t\tpathInfo = pathNoQueryString.substring(\n\t\t\t\t\t\t\turlPattern.length());\n\t\t\t\t\t\tservletPath = urlPattern;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (pathInfo == null) {\n\t\t\t\tpathInfo = pathNoQueryString;\n\t\t\t}\n\n\t\t\tString contextPath = portletRequest.getContextPath();\n\n\t\t\tif (contextPath.equals(StringPool.SLASH)) {\n\t\t\t\trequestURI = pathNoQueryString;\n\t\t\t}\n\t\t\telse {\n\t\t\t\trequestURI = contextPath + pathNoQueryString;\n\t\t\t}\n\t\t}\n\n\t\tPortletServletRequest portletServletRequest = new PortletServletRequest(\n\t\t\trequest, portletRequest, pathInfo, queryString, requestURI,\n\t\t\tservletPath, _named, include);\n\n\t\tPortletServletResponse portletServletResponse =\n\t\t\tnew PortletServletResponse(\n\t\t\t\tPortalUtil.getHttpServletResponse(portletResponse),\n\t\t\t\tportletResponse, include);\n\n\t\tURLEncoder urlEncoder = _portlet.getURLEncoderInstance();\n\n\t\tif (urlEncoder != null) {\n\t\t\tportletResponseImpl.setURLEncoder(urlEncoder);\n\t\t}\n\t\telse if (strutsURLEncoder) {\n\t\t\tThemeDisplay themeDisplay =\n\t\t\t\t(ThemeDisplay)portletRequest.getAttribute(\n\t\t\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\t\tURLEncoder strutsURLEncoderObj = new StrutsURLEncoder(\n\t\t\t\tportletServletRequest.getContextPath(),\n\t\t\t\tthemeDisplay.getPathMain(),\n\t\t\t\t(String)_liferayPortletContext.getAttribute(\n\t\t\t\t\tGlobals.SERVLET_KEY),\n\t\t\t\t(LiferayPortletURL)portletResponseImpl.createRenderURL());\n\n\t\t\tportletResponseImpl.setURLEncoder(strutsURLEncoderObj);\n\t\t}\n\n\t\ttry {\n\t\t\tif (include) {\n\t\t\t\t_requestDispatcher.include(\n\t\t\t\t\tportletServletRequest, portletServletResponse);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_requestDispatcher.forward(\n\t\t\t\t\tportletServletRequest, portletServletResponse);\n\t\t\t}\n\t\t}\n\t\tcatch (ServletException se) {\n\t\t\t_log.error(se, se);\n\n\t\t\tthrow new PortletException(se);\n\t\t}\n\t}","commit_id":"9a00b8af9b11f6b855ffd57d592f0c8539254af4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n     * Returns the search result.<p>\n     * \n     * @param query the query parameters\n     * @return the search result\n     * @throws JSONException if something goes wrong\n     */\n    private JSONObject search(JSONObject query) throws JSONException {\n\n        JSONObject result = new JSONObject();\n        if (query == null) {\n            return result;\n        }\n        JSONArray types = query.getJSONArray(JsonKeys.TYPES.getName());\n        JSONArray galleries = query.getJSONArray(JsonKeys.GALLERIES.getName());\n        List<String> galleriesList = transformToStringList(galleries);\n        JSONArray categories = query.getJSONArray(JsonKeys.CATEGORIES.getName());\n        List<String> categoriesList = transformToStringList(categories);\n        String queryStr = query.getString(JsonKeys.QUERY.getName());\n        CmsGallerySearch.SortParam sortOrder = CmsGallerySearch.SortParam.valueOf(query.getString(JsonKeys.SORTORDER.getName()));\n        int page = query.getInt(JsonKeys.PAGE.getName());\n\n        List<String> typeNames = new ArrayList<String>();\n\n        try {\n            typeNames = getTypeNames(types);\n        } catch (CmsLoaderException e) {\n            // TODO: Auto-generated catch block\n            e.printStackTrace();\n        }\n\n        // TODO: searching the old index, replace with new search\n        CmsUser user = m_cms.getRequestContext().currentUser();\n        String indexName = new CmsUserSettings(user).getWorkplaceSearchIndexName();\n\n        CmsSearchParameters params = new CmsSearchParameters(queryStr);\n        params.setIndex(indexName);\n        params.setMatchesPerPage(20);\n        params.setSearchPage(page);\n        params.setResourceTypes(typeNames);\n        params.setCategories(categoriesList);\n        params.setRoots(galleriesList);\n        // search\n        CmsSearch searchBean = new CmsSearch();\n        searchBean.init(m_cms);\n        searchBean.setParameters(params);\n        List<CmsSearchResult> searchResults = searchBean.getSearchResult();\n        // TODO: use for new search\n        //        CmsGallerySearch gSearch = new CmsGallerySearch();\n        //        gSearch.setCategories(categoriesArr);\n        //        gSearch.setGalleries(galleriesArr);\n        //        gSearch.setResultPage(page);\n        //        gSearch.setQuery(queryStr);\n        //        gSearch.setTypes(typesArr);\n        //        gSearch.setSortBy(sortBy);\n        //        gSearch.setSortOrder(sortOrder);\n        //        result.put(\"sortorder\", gSearch.getSortOrder().getName());\n        //        result.put(\"sortby\", gSearch.getSortBy().getName());\n        //        result.put(\"resultcount\", gSearch.getSearchResultCount());\n        //        result.put(\"resultpage\", gSearch.getResultPage());\n        //        result.put(\"resultpagecount\", gSearch.getPageCount());\n        //        result.put(\"resultlist\", buildJSONForSearchResult(gSearch.getResult()));\n\n        result.put(\"sortorder\", searchBean.getSortOrder());\n        result.put(\"resultcount\", searchBean.getSearchResultCount());\n        result.put(\"resultpage\", searchBean.getSearchPage());\n        result.put(\"resultlist\", buildJSONForSearchResult(searchResults));\n\n        return result;\n    }","id":69796,"modified_method":"/**\n     * Returns the search result.<p>\n     * \n     * @param query the query parameters\n     * @return the search result\n     * @throws JSONException if something goes wrong\n     */\n    private JSONObject search(JSONObject query) throws JSONException {\n\n        JSONObject result = new JSONObject();\n        if (query == null) {\n            return result;\n        }\n        JSONArray types = query.getJSONArray(JsonKeys.TYPES.getName());\n        JSONArray galleries = query.getJSONArray(JsonKeys.GALLERIES.getName());\n        List<String> galleriesList = transformToStringList(galleries);\n        JSONArray categories = query.getJSONArray(JsonKeys.CATEGORIES.getName());\n        List<String> categoriesList = transformToStringList(categories);\n        String queryStr = query.getString(JsonKeys.QUERY.getName());\n        CmsGallerySearch.SortParam sortOrder = CmsGallerySearch.SortParam.DEFAULT;\n        try {\n            sortOrder = CmsGallerySearch.SortParam.valueOf(query.getString(JsonKeys.SORTORDER.getName()).toUpperCase());\n        } catch (Exception e) {\n            //may happen\n        }\n        int page = query.getInt(JsonKeys.PAGE.getName());\n\n        List<String> typeNames = new ArrayList<String>();\n\n        try {\n            typeNames = getTypeNames(types);\n        } catch (CmsLoaderException e) {\n            // TODO: Auto-generated catch block\n            e.printStackTrace();\n        }\n\n        // TODO: searching the old index, replace with new search\n        CmsUser user = m_cms.getRequestContext().currentUser();\n        String indexName = new CmsUserSettings(user).getWorkplaceSearchIndexName();\n\n        CmsSearchParameters params = new CmsSearchParameters(queryStr);\n        params.setIndex(indexName);\n        params.setMatchesPerPage(20);\n        params.setSearchPage(page);\n        if (typeNames != null) {\n            params.setResourceTypes(typeNames);\n        }\n        if (categoriesList != null) {\n            params.setCategories(categoriesList);\n        }\n        if (galleriesList != null) {\n            params.setRoots(galleriesList);\n        }\n        // search\n        CmsSearch searchBean = new CmsSearch();\n        searchBean.init(m_cms);\n        searchBean.setParameters(params);\n        List<CmsSearchResult> searchResults = searchBean.getSearchResult();\n        // TODO: use for new search\n        //        CmsGallerySearch gSearch = new CmsGallerySearch();\n        //        gSearch.setCategories(categoriesArr);\n        //        gSearch.setGalleries(galleriesArr);\n        //        gSearch.setResultPage(page);\n        //        gSearch.setQuery(queryStr);\n        //        gSearch.setTypes(typesArr);\n        //        gSearch.setSortBy(sortBy);\n        //        gSearch.setSortOrder(sortOrder);\n        //        result.put(\"sortorder\", gSearch.getSortOrder().getName());\n        //        result.put(\"sortby\", gSearch.getSortBy().getName());\n        //        result.put(\"resultcount\", gSearch.getSearchResultCount());\n        //        result.put(\"resultpage\", gSearch.getResultPage());\n        //        result.put(\"resultpagecount\", gSearch.getPageCount());\n        //        result.put(\"resultlist\", buildJSONForSearchResult(gSearch.getResult()));\n\n        result.put(\"sortorder\", searchBean.getSortOrder());\n        result.put(\"resultcount\", searchBean.getSearchResultCount());\n        result.put(\"resultpage\", searchBean.getSearchPage());\n        result.put(\"resultlist\", buildJSONForSearchResult(searchResults));\n\n        return result;\n    }","commit_id":"565cf92b78a7e1bd74998ebd86fe273249b6dd8f","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public static void main(String[] args) throws Exception {\n\t\tDetectorFactoryCollection.instance(); // load plugins\n\t\t\n\t\tCountBugs2CommandLine commandLine = new CountBugs2CommandLine();\n\t\tint argCount = commandLine.parse(args);\n\t\t\n\t\tif (args.length - argCount != 1) {\n\t\t\tSystem.err.println(\"Usage: \" + CountBugs2.class.getName() +\n\t\t\t\t\t\" [options] <bug collection>\");\n\t\t\tSystem.err.println(\"Options:\");\n\t\t\tcommandLine.printUsage(System.err);\n\t\t\tSystem.exit(1);\n\t\t}\n\t\t\n\t\tSortedBugCollection bugCollection = new SortedBugCollection();\n\t\tbugCollection.readXML(args[argCount], new Project());\n\t\t\n\t\tCountBugs2 countBugs = new CountBugs2(bugCollection);\n\t\tcountBugs.setAbbrevs(commandLine.getAbbrevs());\n\t\tcountBugs.setCategories(commandLine.getCategories());\n\t\tcountBugs.setMinPriority(commandLine.getMinPriority());\n\t\t\n\t\tcountBugs.execute();\n\t\tSystem.out.println(countBugs.getCount());\n\t}","id":69797,"modified_method":"public static void main(String[] args) throws Exception {\n\t\tDetectorFactoryCollection.instance(); // load plugins\n\t\t\n\t\tCountBugs2CommandLine commandLine = new CountBugs2CommandLine();\n\t\tint argCount = commandLine.parse(args);\n\t\t\n\t\tif (args.length - argCount != 1) {\n\t\t\tSystem.err.println(\"Usage: \" + CountBugs2.class.getName() +\n\t\t\t\t\t\" [options] <bug collection>\");\n\t\t\tSystem.err.println(\"Options:\");\n\t\t\tcommandLine.printUsage(System.err);\n\t\t\tSystem.exit(1);\n\t\t}\n\t\t\n\t\tSortedBugCollection bugCollection = new SortedBugCollection();\n\t\tbugCollection.readXML(args[argCount], new Project());\n\t\t\n\t\tCountBugs2 countBugs = new CountBugs2(bugCollection);\n\t\tif (commandLine.getAbbrevs() != null)\n\t\t\tcountBugs.setAbbrevs(commandLine.getAbbrevs());\n\t\tif (commandLine.getCategories() != null)\n\t\t\tcountBugs.setCategories(commandLine.getCategories());\n\t\tcountBugs.setMinPriority(commandLine.getMinPriority());\n\t\t\n\t\tcountBugs.execute();\n\t\tSystem.out.println(countBugs.getCount());\n\t}","commit_id":"6acee5fd8070c96555bcfb548baa9aca501fcdd9","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public CountBugs2(BugCollection bugCollection) {\n\t\tthis.bugCollection = bugCollection;\n\t\tthis.categorySet = new HashSet<String>();\n\t\tthis.minPriority = Detector.NORMAL_PRIORITY;\n\t}","id":69798,"modified_method":"public CountBugs2(BugCollection bugCollection) {\n\t\tthis.bugCollection = bugCollection;\n\t\tthis.categorySet = new HashSet<String>();\n\t\tthis.abbrevSet = new HashSet<String>();\n\t\tthis.minPriority = Detector.NORMAL_PRIORITY;\n\t}","commit_id":"6acee5fd8070c96555bcfb548baa9aca501fcdd9","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private static boolean validateProperties() throws IOException, FileNotFoundException, IllegalArgumentException  {\n\t\t\n\t\tSystem.out.println(\"\\n\\nProperties:\\n\");\n\t\tm_foreignSource = System.getProperty(PROPERTY_FOREIGN_SOURCE, m_foreignSource);\n\t\tSystem.out.println(\"\\t\"+PROPERTY_FOREIGN_SOURCE+\":\"+m_foreignSource);\n\t\t\n\t\tm_parseDb = Boolean.valueOf(System.getProperty(PROPERTY_PARSE_DB, m_parseDb.toString()));\n\t\tSystem.out.println(\"\\t\"+PROPERTY_PARSE_DB+\":\"+m_parseDb);\n\t\t\n\t\t\n\t\tif (!m_parseDb.booleanValue()) {\n\n\t\t\tString csvFileName = System.getProperty(PROPERTY_CSV_FILE, m_csvFile.getCanonicalPath());\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_CSV_FILE+\":\"+m_csvFile);\n\t\t\t\n\t\t\tm_csvFile = new File(csvFileName);\n\t\t\tif (!m_csvFile.exists()) {\n\t\t\t\tthrow new FileNotFoundException(\"CSV Input File: \"+csvFileName+\"; Not Found!\");\n\t\t\t}\n\t\t} else {\n\t\t\tm_dbSvr = System.getProperty(PROPERTY_DB_SVR, m_dbSvr);\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_DB_SVR+\":\"+m_dbSvr);\n\n\t\t\tm_dbName = System.getProperty(PROPERTY_DB_NAME, m_dbName);\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_DB_NAME+\":\"+m_dbName);\n\t\t\t\n\t\t\tm_dbUser = System.getProperty(PROPERTY_DB_USER, m_dbUser);\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_DB_USER+\":\"+m_dbUser);\n\t\t\t\n\t\t\tm_dbPass = System.getProperty(PROPERTY_DB_PW, m_dbPass);\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_DB_PW+\":\"+m_dbPass);\n\t\t\t\n\t\t\tm_iplikeQuery = System.getProperty(PROPERTY_IPLIKE_QUERY, m_iplikeQuery);\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_IPLIKE_QUERY+\":\"+m_iplikeQuery);\n\t\t\t\n\t\t\tm_useNodeId = Boolean.valueOf(System.getProperty(PROPERTY_USE_NODE_ID, m_useNodeId.toString()));\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_USE_NODE_ID+\":\"+m_useNodeId);\n\t\t\t\n\t\t\tm_addOnly = Boolean.valueOf(System.getProperty(PROPERTY_ADD_ONLY, m_addOnly.toString()));\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_ADD_ONLY+\":\"+m_addOnly);\n\t\t\t\n\t\t\tm_categoryAddExisting = Boolean.valueOf(System.getProperty(PROPERTY_CATEGORY_ADD_EXISTING, m_categoryAddExisting.toString()));\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_CATEGORY_ADD_EXISTING+\":\"+m_categoryAddExisting);\n\t\t\t\n\t\t}\n\t\t\n\t\tString fsRepo = System.getProperty(PROPERTY_FS_REPO_PATH, m_repoPath.getCanonicalPath());\n\t\tSystem.out.println(\"\\t\"+PROPERTY_FS_REPO_PATH+\":\"+fsRepo);\n\t\t\n\t\tm_repoPath = new File(fsRepo);\n\t\t\n\t\tif (!m_repoPath.exists() || !m_repoPath.isDirectory() || !m_repoPath.canWrite()) {\n\t\t\tthrow new IllegalArgumentException(\"The specified \"+PROPERTY_FS_REPO_PATH+\": \"+m_repoPath.getCanonicalPath()+\", either doesn't exist, isn't writable, or isn't a directory.\");\n\t\t} else {\n\t\t\tm_fsr = new FilesystemForeignSourceRepository();\n\t\t\tm_fsr.setRequisitionPath(m_repoPath.getCanonicalPath());\n\t\t}\n\t\t\n\t\tm_resolveIps = Boolean.valueOf(System.getProperty(PROPERTY_RESOLVE_IPS, m_resolveIps.toString()));\n\t\tSystem.out.println(\"\\t\"+PROPERTY_RESOLVE_IPS+\":\"+m_resolveIps.toString());\n\t\t\n\t\tString categories = System.getProperty(PROPERTY_CATEGORY_LIST);\n\t\tif (categories != null) {\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_CATEGORY_LIST+\":\"+categories);\n\t\t\tString[] cats = categories.split(\",\");\n\t\t\tm_categoryList = new ArrayList<String>();\n\t\t\tfor (String cat : cats) {\n\t\t\t\tm_categoryList.add(cat);\n\t\t\t}\n\t\t}\n\t\t\n\t\tString services = System.getProperty(PROPERTY_SERVICE_LIST);\n\t\tif (categories != null) {\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_SERVICE_LIST+\":\"+services);\n\t\t\tString[] srvs = services.split(\",\");\n\t\t\tm_serviceList = new ArrayList<String>();\n\t\t\tfor (String srv : srvs) {\n\t\t\t\tm_serviceList.add(srv);\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(\"\\n\");\n\t\treturn true;\n\t}","id":69799,"modified_method":"private static boolean validateProperties() throws IOException, FileNotFoundException, IllegalArgumentException  {\n\t\t\n\t\tSystem.out.println(\"\\n\\nProperties:\\n\");\n\t\tm_foreignSource = System.getProperty(PROPERTY_FOREIGN_SOURCE, m_foreignSource);\n\t\tSystem.out.println(\"\\t\"+PROPERTY_FOREIGN_SOURCE+\":\"+m_foreignSource);\n\t\t\n\t\tm_parseDb = Boolean.valueOf(System.getProperty(PROPERTY_PARSE_DB, m_parseDb.toString()));\n\t\tSystem.out.println(\"\\t\"+PROPERTY_PARSE_DB+\":\"+m_parseDb);\n\t\t\n\t\t\n\t\tif (!m_parseDb.booleanValue()) {\n\n\t\t\tString csvFileName = System.getProperty(PROPERTY_CSV_FILE, m_csvFile.getCanonicalPath());\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_CSV_FILE+\":\"+m_csvFile);\n\t\t\t\n\t\t\tm_csvFile = new File(csvFileName);\n\t\t\tif (!m_csvFile.exists()) {\n\t\t\t\tthrow new FileNotFoundException(\"CSV Input File: \"+csvFileName+\"; Not Found!\");\n\t\t\t}\n\t\t} else {\n\t\t\tm_dbSvr = System.getProperty(PROPERTY_DB_SVR, m_dbSvr);\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_DB_SVR+\":\"+m_dbSvr);\n\n\t\t\tm_dbName = System.getProperty(PROPERTY_DB_NAME, m_dbName);\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_DB_NAME+\":\"+m_dbName);\n\t\t\t\n\t\t\tm_dbUser = System.getProperty(PROPERTY_DB_USER, m_dbUser);\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_DB_USER+\":\"+m_dbUser);\n\t\t\t\n\t\t\tm_dbPass = System.getProperty(PROPERTY_DB_PW, m_dbPass);\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_DB_PW+\":\"+m_dbPass);\n\t\t\t\n\t\t\tm_iplikeQuery = System.getProperty(PROPERTY_IPLIKE_QUERY, m_iplikeQuery);\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_IPLIKE_QUERY+\":\"+m_iplikeQuery);\n\t\t\t\n\t\t\tm_useNodeId = Boolean.valueOf(System.getProperty(PROPERTY_USE_NODE_ID, m_useNodeId.toString()));\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_USE_NODE_ID+\":\"+m_useNodeId);\n\t\t\t\n\t\t\tm_addOnly = Boolean.valueOf(System.getProperty(PROPERTY_ADD_ONLY, m_addOnly.toString()));\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_ADD_ONLY+\":\"+m_addOnly);\n\t\t\t\n\t\t\tm_categoryAddExisting = Boolean.valueOf(System.getProperty(PROPERTY_CATEGORY_ADD_EXISTING, m_categoryAddExisting.toString()));\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_CATEGORY_ADD_EXISTING+\":\"+m_categoryAddExisting);\n\t\t\t\n\t\t}\n\t\t\n\t\tString fsRepo = System.getProperty(PROPERTY_FS_REPO_PATH, m_repoPath.getCanonicalPath());\n\t\tSystem.out.println(\"\\t\"+PROPERTY_FS_REPO_PATH+\":\"+fsRepo);\n\t\t\n\t\tm_repoPath = new File(fsRepo);\n\t\t\n\t\tif (!m_repoPath.exists() || !m_repoPath.isDirectory() || !m_repoPath.canWrite()) {\n\t\t\tthrow new IllegalArgumentException(\"The specified \"+PROPERTY_FS_REPO_PATH+\": \"+m_repoPath.getCanonicalPath()+\", either doesn't exist, isn't writable, or isn't a directory.\");\n\t\t} else {\n\t\t\tm_fsr = new FilesystemForeignSourceRepository();\n\t\t\tm_fsr.setRequisitionPath(m_repoPath.getCanonicalPath());\n\t\t}\n\t\t\n\t\tm_resolveIps = Boolean.valueOf(System.getProperty(PROPERTY_RESOLVE_IPS, m_resolveIps.toString()));\n\t\tSystem.out.println(\"\\t\"+PROPERTY_RESOLVE_IPS+\":\"+m_resolveIps.toString());\n\t\t\n\t\tString categories = System.getProperty(PROPERTY_CATEGORY_LIST);\n\t\tif (categories != null) {\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_CATEGORY_LIST+\":\"+categories);\n\t\t\tString[] cats = categories.split(\",\");\n\t\t\tfor (String cat : cats) {\n\t\t\t\tm_categoryList.add(cat);\n\t\t\t}\n\t\t}\n\t\t\n\t\tString services = System.getProperty(PROPERTY_SERVICE_LIST);\n\t\tif (services != null) {\n\t\t\tSystem.out.println(\"\\t\"+PROPERTY_SERVICE_LIST+\":\"+services);\n\t\t\tString[] srvs = services.split(\",\");\n\t\t\tfor (String srv : srvs) {\n\t\t\t\tm_serviceList.add(srv);\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(\"\\n\");\n\t\treturn true;\n\t}","commit_id":"58ff851c4a03cd95c9c1ce787c13bc8609dae990","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private static void createOrUpdateRequistion(RequisitionData rd) throws UnknownHostException {\n\t\tRequisition r = null;\n\t\tRequisitionNode rn = new RequisitionNode();\n\t\tString foreignSource = rd.getForeignSource();\n\t\t\n\t\tr = m_fsr.getRequisition(foreignSource);\n\t\t\n\t\tif (r == null) {\n\t\t\tr = new Requisition(foreignSource);\n\t\t}\n\t\t\n\t\tSystem.err.println(\"Creating/Updating requistion: \"+foreignSource);\n\t\t\n\t\tr.updateDateStamp();\n\t\t\n\t\tRequisitionMonitoredServiceCollection services = new RequisitionMonitoredServiceCollection();\n\t\tfor (String svc : m_serviceList) {\n\t\t\tservices.add(new RequisitionMonitoredService(svc));\n\t\t}\n\t\t\n\t\tRequisitionInterface iface = new RequisitionInterface();\n\t\tiface.setDescr(\"mgmt-if\");\n\t\tiface.setIpAddr(rd.getPrimaryIp());\n\t\tiface.setManaged(true);\n\t\tiface.setSnmpPrimary(PrimaryType.PRIMARY);\n\t\tiface.setStatus(Integer.valueOf(1));\n\t\tiface.setMonitoredServices(services);\n\t\t\n\t\tRequisitionInterfaceCollection ric = new RequisitionInterfaceCollection();\n\t\tric.add(iface);\n\t\t\t\t\n\t\t//add categories requisition level categories\n\t\tRequisitionCategoryCollection rcc = null;\n\t\tif (m_categoryList != null && m_categoryList.size() > 0) {\n\t\t\trcc = new RequisitionCategoryCollection();\n\t\t\tfor (String cat : m_categoryList) {\n\t\t\t\trcc.add(new RequisitionCategory(cat));\n\t\t\t}\n\t\t}\n\t\t\n\t\t//add categories already on the node to the requisition\n\t\tif (rd.getCategories() != null) {\n\t\t\tfor (String cat : rd.getCategories()) {\n\t\t\t\trcc.add(new RequisitionCategory(cat));\n\t\t\t}\n\t\t}\n\t\t\n\t\trn.setBuilding(foreignSource);\n\t\trn.setCategories(rcc);\n\t\trn.setForeignId(rd.getForeignId());\n\t\trn.setInterfaces(ric);\n\t\t\n\t\tString nodeLabel = rd.getNodeLabel();\n\t\tif (m_resolveIps) {\n\t\t\tInetAddress addr = InetAddress.getByName(rd.getPrimaryIp());\n\t\t\tnodeLabel = addr.getCanonicalHostName();\n\t\t}\n\t\t\n\t\trn.setNodeLabel(nodeLabel);\n\t\t\n\t\t//r.insertNode(rn);\n\t\tr.putNode(rn);\n\t\tm_fsr.save(r);\n\t}","id":69800,"modified_method":"private static void createOrUpdateRequistion(RequisitionData rd) throws UnknownHostException {\n\t\tRequisition r = null;\n\t\tRequisitionNode rn = new RequisitionNode();\n\t\tString foreignSource = rd.getForeignSource();\n\t\t\n\t\tr = m_fsr.getRequisition(foreignSource);\n\t\t\n\t\tif (r == null) {\n\t\t\tr = new Requisition(foreignSource);\n\t\t}\n\t\t\n\t\tSystem.err.println(\"Creating/Updating requistion: \"+foreignSource);\n\t\t\n\t\tr.updateDateStamp();\n\t\t\n\t\tRequisitionMonitoredServiceCollection services = new RequisitionMonitoredServiceCollection();\n\t\tfor (String svc : m_serviceList) {\n\t\t\tservices.add(new RequisitionMonitoredService(svc));\n\t\t}\n\t\t\n\t\tRequisitionInterface iface = new RequisitionInterface();\n\t\tiface.setDescr(\"mgmt-if\");\n\t\tiface.setIpAddr(rd.getPrimaryIp());\n\t\tiface.setManaged(true);\n\t\tiface.setSnmpPrimary(PrimaryType.PRIMARY);\n\t\tiface.setStatus(Integer.valueOf(1));\n\t\tiface.setMonitoredServices(services);\n\t\t\n\t\tRequisitionInterfaceCollection ric = new RequisitionInterfaceCollection();\n\t\tric.add(iface);\n\t\t\t\t\n\t\t//add categories requisition level categories\n\t\tRequisitionCategoryCollection rcc = new RequisitionCategoryCollection();\n\t\tif (m_categoryList != null && m_categoryList.size() > 0) {\n\t\t\tfor (String cat : m_categoryList) {\n\t\t\t\trcc.add(new RequisitionCategory(cat));\n\t\t\t}\n\t\t}\n\t\t\n\t\t//add categories already on the node to the requisition\n\t\tif (rd.getCategories() != null) {\n\t\t\tfor (String cat : rd.getCategories()) {\n\t\t\t\trcc.add(new RequisitionCategory(cat));\n\t\t\t}\n\t\t}\n\t\t\n\t\trn.setBuilding(foreignSource);\n\t\t\n\t\tif (rcc.size() >= 1) {\n\t\t\trn.setCategories(rcc);\n\t\t}\n\t\t\n\t\trn.setForeignId(rd.getForeignId());\n\t\trn.setInterfaces(ric);\n\t\t\n\t\tString nodeLabel = rd.getNodeLabel();\n\t\tif (m_resolveIps) {\n\t\t\tInetAddress addr = InetAddress.getByName(rd.getPrimaryIp());\n\t\t\tnodeLabel = addr.getCanonicalHostName();\n\t\t}\n\t\t\n\t\trn.setNodeLabel(nodeLabel);\n\t\t\n\t\t//r.insertNode(rn);\n\t\tr.putNode(rn);\n\t\tm_fsr.save(r);\n\t}","commit_id":"58ff851c4a03cd95c9c1ce787c13bc8609dae990","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private static void defineIndexAction(NewController controller) {\n    WebService.NewAction action = controller.createAction(\"index\")\n      .setDescription(\"Get a profile. Deprecated since 5.2.\")\n      .setSince(\"3.3\")\n      .setHandler(RailsHandler.INSTANCE)\n      .setResponseExample(Resources.getResource(ProfilesWs.class, \"example-index.json\"));\n\n    action.createParam(\"language\")\n      .setDescription(\"Profile language\")\n      .setRequired(true)\n      .setExampleValue(\"java\");\n    action.createParam(\"name\")\n      .setDescription(\"Profile name. If no profile name is given, default profile for the given language will be returned\")\n      .setRequired(true)\n      .setExampleValue(\"Sonar way\");\n    RailsHandler.addFormatParam(action);\n  }","id":69801,"modified_method":"private static void defineIndexAction(NewController controller) {\n    WebService.NewAction action = controller.createAction(\"index\")\n      .setDescription(\"Get a profile.\")\n      .setSince(\"3.3\")\n      .setDeprecatedSince(\"5.2\")\n      .setHandler(RailsHandler.INSTANCE)\n      .setResponseExample(Resources.getResource(ProfilesWs.class, \"example-index.json\"));\n\n    action.createParam(\"language\")\n      .setDescription(\"Profile language\")\n      .setRequired(true)\n      .setExampleValue(\"java\");\n    action.createParam(\"name\")\n      .setDescription(\"Profile name. If no profile name is given, default profile for the given language will be returned\")\n      .setRequired(true)\n      .setExampleValue(\"Sonar way\");\n    RailsHandler.addFormatParam(action);\n  }","commit_id":"e2379a7ffa7e879ededf5f160f55eba26a785a6c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private static void defineListAction(NewController controller) {\n    WebService.NewAction action = controller.createAction(\"list\")\n      .setDescription(\"Get a list of profiles. Deprecated since 5.2.\")\n      .setSince(\"3.3\")\n      .setHandler(RailsHandler.INSTANCE)\n      .setResponseExample(Resources.getResource(ProfilesWs.class, \"example-list.json\"));\n\n    action.createParam(\"language\")\n      .setDescription(\"Profile language\")\n      .setExampleValue(\"java\");\n    action.createParam(\"project\")\n      .setDescription(\"Project key or id\")\n      .setExampleValue(\"org.codehaus.sonar:sonar\");\n    RailsHandler.addJsonOnlyFormatParam(action);\n  }","id":69802,"modified_method":"private static void defineListAction(NewController controller) {\n    WebService.NewAction action = controller.createAction(\"list\")\n      .setDescription(\"Get a list of profiles.\")\n      .setSince(\"3.3\")\n      .setDeprecatedSince(\"5.2\")\n      .setHandler(RailsHandler.INSTANCE)\n      .setResponseExample(Resources.getResource(ProfilesWs.class, \"example-list.json\"));\n\n    action.createParam(\"language\")\n      .setDescription(\"Profile language\")\n      .setExampleValue(\"java\");\n    action.createParam(\"project\")\n      .setDescription(\"Project key or id\")\n      .setExampleValue(\"org.codehaus.sonar:sonar\");\n    RailsHandler.addJsonOnlyFormatParam(action);\n  }","commit_id":"e2379a7ffa7e879ededf5f160f55eba26a785a6c","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void defineIndexAction(NewController controller) {\n    NewAction action = controller.createAction(\"index\")\n      .setDescription(\"Get a list of components. Requires Browse permission on resource\")\n      .setSince(\"2.10\")\n      .setHandler(RailsHandler.INSTANCE)\n      .setResponseExample(Resources.getResource(this.getClass(), \"resources-example-index.json\"));\n\n    action.createParam(\"resource\")\n      .setDescription(\"id or key of the resource\")\n      .setExampleValue(\"org.codehaus.sonar:sonar\");\n\n    action.createParam(\"metrics\")\n      .setDescription(\"Comma-separated list of <a href=\\\"http://redirect.sonarsource.com/doc/metric-definitions.html\\\">metric keys/ids<\/a>. \" +\n        \"Load measures on selected metrics. If only one metric is set, then measures are ordered by value\")\n      .setExampleValue(\"lines,blocker_violations\");\n\n    action.createParam(\"depth\")\n      .setDescription(\"Used only when resource is set:<br/>\" +\n        \"<ul>\" +\n        \"<li>0: only selected resource<\/li>\" +\n        \"<li>-1: all children, including selected resource<\/li>\" +\n        \"<li>>0: depth toward the selected resource<\/li>\" +\n        \"<\/ul>\")\n      .setDefaultValue(\"0\")\n      .setExampleValue(\"-1\");\n\n    action.createParam(\"scopes\")\n      .setDescription(\"Comma-separated list of scopes:<br/>\" +\n        \"<ul>\" +\n        \"<li>PRJ: project/module<\/li>\" +\n        \"<li>DIR: directory (like Java package)<\/li>\" +\n        \"<li>FIL: file<\/li>\" +\n        \"<\/ul>\")\n      .setExampleValue(\"PRJ,DIR\");\n\n    action.createParam(\"qualifiers\")\n      .setDescription(\"Comma-separated list of qualifiers:<br/>\" +\n        \"<ul>\" +\n        \"<li>VW: view<\/li>\" +\n        \"<li>SVW: sub-view<\/li>\" +\n        \"<li>TRK: project<\/li>\" +\n        \"<li>BRC: module<\/li>\" +\n        \"<li>UTS: unit test<\/li>\" +\n        \"<li>DIR: directory<\/li>\" +\n        \"<li>FIL: file<\/li>\" +\n        \"<li>DEV: developer<\/li>\" +\n        \"<\/ul>\")\n      .setExampleValue(\"TRK,BRC\");\n\n    action.createParam(\"verbose\")\n      .setDescription(\"Add some data to response\")\n      .setBooleanPossibleValues()\n      .setDefaultValue(String.valueOf(false));\n\n    action.createParam(\"limit\")\n      .setDescription(\"Limit the number of results. Only used if one metric, and only one, is set\")\n      .setExampleValue(\"10\");\n\n    action.createParam(\"includetrends\")\n      .setDescription(\"Include period variations in response: add nodes &ltp*&gt for period variations\")\n      .setDefaultValue(String.valueOf(false))\n      .setBooleanPossibleValues();\n\n    action.createParam(\"includealerts\")\n      .setDescription(\"Include alerts data: add nodes &ltalert&gt (ERROR, WARN, OK) and &ltalert_text&gt\")\n      .setBooleanPossibleValues()\n      .setDefaultValue(String.valueOf(false));\n\n    action.createParam(\"rules\")\n      .setDescription(\"Filter on rules: setting it to true will return rules id and rule name for measure having such info \" +\n        \"(such as 'blocker_violations', 'critical_violations', ..., 'new_blocker_violations', ...). Possible values: true | false | list of rule ids\")\n      .setBooleanPossibleValues()\n      .setDefaultValue(String.valueOf(true));\n\n    RailsHandler.addFormatParam(action);\n  }","id":69803,"modified_method":"private void defineIndexAction(NewController controller) {\n    NewAction action = controller.createAction(\"index\")\n      .setDescription(\"Get a list of components. Requires Browse permission on resource\")\n      .setSince(\"2.10\")\n      .setDeprecatedSince(\"5.4\")\n      .setHandler(RailsHandler.INSTANCE)\n      .setResponseExample(Resources.getResource(this.getClass(), \"resources-example-index.json\"));\n\n    action.createParam(\"resource\")\n      .setDescription(\"id or key of the resource\")\n      .setExampleValue(\"org.codehaus.sonar:sonar\");\n\n    action.createParam(\"metrics\")\n      .setDescription(\"Comma-separated list of <a href=\\\"http://redirect.sonarsource.com/doc/metric-definitions.html\\\">metric keys/ids<\/a>. \" +\n        \"Load measures on selected metrics. If only one metric is set, then measures are ordered by value\")\n      .setExampleValue(\"lines,blocker_violations\");\n\n    action.createParam(\"depth\")\n      .setDescription(\"Used only when resource is set:<br/>\" +\n        \"<ul>\" +\n        \"<li>0: only selected resource<\/li>\" +\n        \"<li>-1: all children, including selected resource<\/li>\" +\n        \"<li>>0: depth toward the selected resource<\/li>\" +\n        \"<\/ul>\")\n      .setDefaultValue(\"0\")\n      .setExampleValue(\"-1\");\n\n    action.createParam(\"scopes\")\n      .setDescription(\"Comma-separated list of scopes:<br/>\" +\n        \"<ul>\" +\n        \"<li>PRJ: project/module<\/li>\" +\n        \"<li>DIR: directory (like Java package)<\/li>\" +\n        \"<li>FIL: file<\/li>\" +\n        \"<\/ul>\")\n      .setExampleValue(\"PRJ,DIR\");\n\n    action.createParam(\"qualifiers\")\n      .setDescription(\"Comma-separated list of qualifiers:<br/>\" +\n        \"<ul>\" +\n        \"<li>VW: view<\/li>\" +\n        \"<li>SVW: sub-view<\/li>\" +\n        \"<li>TRK: project<\/li>\" +\n        \"<li>BRC: module<\/li>\" +\n        \"<li>UTS: unit test<\/li>\" +\n        \"<li>DIR: directory<\/li>\" +\n        \"<li>FIL: file<\/li>\" +\n        \"<li>DEV: developer<\/li>\" +\n        \"<\/ul>\")\n      .setExampleValue(\"TRK,BRC\");\n\n    action.createParam(\"verbose\")\n      .setDescription(\"Add some data to response\")\n      .setBooleanPossibleValues()\n      .setDefaultValue(String.valueOf(false));\n\n    action.createParam(\"limit\")\n      .setDescription(\"Limit the number of results. Only used if one metric, and only one, is set\")\n      .setExampleValue(\"10\");\n\n    action.createParam(\"includetrends\")\n      .setDescription(\"Include period variations in response: add nodes &ltp*&gt for period variations\")\n      .setDefaultValue(String.valueOf(false))\n      .setBooleanPossibleValues();\n\n    action.createParam(\"includealerts\")\n      .setDescription(\"Include alerts data: add nodes &ltalert&gt (ERROR, WARN, OK) and &ltalert_text&gt\")\n      .setBooleanPossibleValues()\n      .setDefaultValue(String.valueOf(false));\n\n    action.createParam(\"rules\")\n      .setDescription(\"Filter on rules: setting it to true will return rules id and rule name for measure having such info \" +\n        \"(such as 'blocker_violations', 'critical_violations', ..., 'new_blocker_violations', ...). Possible values: true | false | list of rule ids\")\n      .setBooleanPossibleValues()\n      .setDefaultValue(String.valueOf(true));\n\n    RailsHandler.addFormatParam(action);\n  }","commit_id":"08e697e6a8e0f13d0c38961e24d9136eba032a12","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void defineSearchAction(NewController controller) {\n    NewAction action = controller.createAction(\"search\")\n      .setDescription(\"Search for components\")\n      .setSince(\"3.3\")\n      .addPagingParams(10)\n      .setInternal(true)\n      .setHandler(RailsHandler.INSTANCE)\n      .setResponseExample(Resources.getResource(this.getClass(), \"resources-example-search.json\"));\n\n    action.createParam(\"s\")\n      .setDescription(\"To filter on resources containing a specified text in their name\")\n      .setExampleValue(\"sonar\");\n\n    action.createParam(\"display_key\")\n      .setDescription(\"Return the resource key instead of the resource id\")\n      .setBooleanPossibleValues()\n      .setDefaultValue(String.valueOf(false));\n\n    action.createParam(\"q\")\n      .setDescription(\"Comma-separated list of qualifiers\")\n      .setExampleValue(\"TRK,BRC\");\n\n    action.createParam(\"qp\")\n      .setDescription(\"Resource Property\")\n      .setExampleValue(\"supportsMeasureFilters\");\n\n    action.createParam(\"f\")\n      .setDescription(\"If 's2', then it will return a select2 compatible format\")\n      .setExampleValue(\"s2\");\n\n    RailsHandler.addJsonOnlyFormatParam(action);\n  }","id":69804,"modified_method":"private void defineSearchAction(NewController controller) {\n    NewAction action = controller.createAction(\"search\")\n      .setDescription(\"Search for components\")\n      .setSince(\"3.3\")\n      .setDeprecatedSince(\"5.4\")\n      .addPagingParams(10)\n      .setInternal(true)\n      .setHandler(RailsHandler.INSTANCE)\n      .setResponseExample(Resources.getResource(this.getClass(), \"resources-example-search.json\"));\n\n    action.createParam(\"s\")\n      .setDescription(\"To filter on resources containing a specified text in their name\")\n      .setExampleValue(\"sonar\");\n\n    action.createParam(\"display_key\")\n      .setDescription(\"Return the resource key instead of the resource id\")\n      .setBooleanPossibleValues()\n      .setDefaultValue(String.valueOf(false));\n\n    action.createParam(\"q\")\n      .setDescription(\"Comma-separated list of qualifiers\")\n      .setExampleValue(\"TRK,BRC\");\n\n    action.createParam(\"qp\")\n      .setDescription(\"Resource Property\")\n      .setExampleValue(\"supportsMeasureFilters\");\n\n    action.createParam(\"f\")\n      .setDescription(\"If 's2', then it will return a select2 compatible format\")\n      .setExampleValue(\"s2\");\n\n    RailsHandler.addJsonOnlyFormatParam(action);\n  }","commit_id":"08e697e6a8e0f13d0c38961e24d9136eba032a12","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private static void appendPermissions(JsonWriter json, ComponentDto component, UserSession userSession) {\n    boolean hasBrowsePermission = userSession.hasComponentPermission(UserRole.USER, component.key());\n    json.prop(\"canMarkAsFavourite\", userSession.isLoggedIn() && hasBrowsePermission);\n    json.prop(\"canCreateManualIssue\", userSession.isLoggedIn() && hasBrowsePermission);\n  }","id":69805,"modified_method":"private static void appendPermissions(JsonWriter json, ComponentDto component, UserSession userSession) {\n    boolean hasBrowsePermission = userSession.hasComponentPermission(UserRole.USER, component.key());\n    json.prop(\"canMarkAsFavourite\", userSession.isLoggedIn() && hasBrowsePermission);\n  }","commit_id":"98b3ff0a5f05667b59723714d95bcfb1060d93c0","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void define(WebService.NewController controller) {\n    WebService.NewAction action = controller.createAction(ACTION)\n      .setDescription(\"Create a manual issue. Requires authentication and Browse permission on project\")\n      .setSince(\"3.6\")\n      .setHandler(this)\n      .setPost(true);\n\n    action.createParam(\"component\")\n      .setDescription(\"Key of the component on which to log the issue\")\n      .setRequired(true)\n      .setExampleValue(KEY_PROJECT_EXAMPLE_001);\n    action.createParam(\"rule\")\n      .setDescription(\"Manual rule key\")\n      .setRequired(true)\n      .setExampleValue(\"manual:performance\");\n    action.createParam(\"severity\")\n      .setDescription(\"Severity of the issue\")\n      .setExampleValue(Severity.BLOCKER + \",\" + Severity.CRITICAL)\n      .setPossibleValues(Severity.ALL);\n    action.createParam(\"line\")\n      .setDescription(\"Line on which to log the issue. \" +\n        \"If no line is specified, the issue is attached to the component and not to a specific line\")\n      .setExampleValue(\"15\");\n    action.createParam(\"message\")\n      .setDescription(\"Description of the issue\")\n      .setExampleValue(\"blabla...\");\n  }","id":69806,"modified_method":"@Override\n  public void define(WebService.NewController controller) {\n    WebService.NewAction action = controller.createAction(ACTION)\n      .setDescription(\"Deprecated web service to do create a manual issue. Manual issue feature has been removed in 5.5. This web service has no effect.\")\n      .setSince(\"3.6\")\n      .setDeprecatedSince(\"5.5\")\n      .setHandler(this)\n      .setPost(true);\n\n    action.createParam(\"component\")\n      .setDescription(\"Key of the component on which to log the issue\")\n      .setRequired(true)\n      .setExampleValue(KEY_PROJECT_EXAMPLE_001);\n    action.createParam(\"rule\")\n      .setDescription(\"Manual rule key\")\n      .setRequired(true)\n      .setExampleValue(\"manual:performance\");\n    action.createParam(\"severity\")\n      .setDescription(\"Severity of the issue\")\n      .setExampleValue(Severity.BLOCKER + \",\" + Severity.CRITICAL)\n      .setPossibleValues(Severity.ALL);\n    action.createParam(\"line\")\n      .setDescription(\"Line on which to log the issue. \" +\n        \"If no line is specified, the issue is attached to the component and not to a specific line\")\n      .setExampleValue(\"15\");\n    action.createParam(\"message\")\n      .setDescription(\"Description of the issue\")\n      .setExampleValue(\"blabla...\");\n  }","commit_id":"98b3ff0a5f05667b59723714d95bcfb1060d93c0","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void handle(Request request, Response response) throws Exception {\n    // required parameters\n    String componentKey = request.mandatoryParam(\"component\");\n    RuleKey ruleKey = RuleKey.parse(request.mandatoryParam(\"rule\"));\n\n    Issue issue = issueService.createManualIssue(componentKey, ruleKey,\n      request.paramAsInt(\"line\"),\n      request.param(\"message\"),\n      request.param(\"severity\"));\n\n    responseWriter.write(issue.key(), request, response);\n  }","id":69807,"modified_method":"@Override\n  public void handle(Request request, Response response) throws Exception {\n    response.noContent();\n  }","commit_id":"98b3ff0a5f05667b59723714d95bcfb1060d93c0","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public IssueService(DbClient dbClient, IssueIndex issueIndex,\n    IssueWorkflow workflow,\n    IssueStorage issueStorage,\n    IssueUpdater issueUpdater,\n    NotificationManager notificationService,\n    UserFinder userFinder,\n    UserIndex userIndex, SourceService sourceService, UserSession userSession) {\n    this.dbClient = dbClient;\n    this.issueIndex = issueIndex;\n    this.workflow = workflow;\n    this.issueStorage = issueStorage;\n    this.issueUpdater = issueUpdater;\n    this.notificationService = notificationService;\n    this.userFinder = userFinder;\n    this.userIndex = userIndex;\n    this.sourceService = sourceService;\n    this.userSession = userSession;\n  }","id":69808,"modified_method":"public IssueService(DbClient dbClient, IssueIndex issueIndex,\n    IssueWorkflow workflow,\n    IssueStorage issueStorage,\n    IssueUpdater issueUpdater,\n    NotificationManager notificationService,\n    UserFinder userFinder,\n    UserSession userSession) {\n    this.dbClient = dbClient;\n    this.issueIndex = issueIndex;\n    this.workflow = workflow;\n    this.issueStorage = issueStorage;\n    this.issueUpdater = issueUpdater;\n    this.notificationService = notificationService;\n    this.userFinder = userFinder;\n    this.userSession = userSession;\n  }","commit_id":"98b3ff0a5f05667b59723714d95bcfb1060d93c0","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeParam(JsonWriter writer, Param param) {\n    writer.beginObject();\n    writer.prop(\"key\", param.key());\n    writer.prop(\"description\", param.description());\n    writer.prop(\"required\", param.isRequired());\n    writer.prop(\"defaultValue\", param.defaultValue());\n    writer.prop(\"exampleValue\", param.exampleValue());\n    Set<String> possibleValues = param.possibleValues();\n    if (possibleValues != null) {\n      writer.name(\"possibleValues\").beginArray().values(possibleValues).endArray();\n    }\n    writer.endObject();\n  }","id":69809,"modified_method":"private void writeParam(JsonWriter writer, Param param) {\n    writer.beginObject();\n    writer.prop(\"key\", param.key());\n    writer.prop(\"description\", param.description());\n    writer.prop(\"required\", param.isRequired());\n    writer.prop(\"defaultValue\", param.defaultValue());\n    writer.prop(\"exampleValue\", param.exampleValue());\n    writer.prop(\"deprecatedSince\", param.deprecatedSince());\n    Set<String> possibleValues = param.possibleValues();\n    if (possibleValues != null) {\n      writer.name(\"possibleValues\").beginArray().values(possibleValues).endArray();\n    }\n    writer.endObject();\n  }","commit_id":"859348e3f052ed6a418468df997c540db9cc829a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeAction(JsonWriter writer, Action action, boolean includeInternals) {\n    if (includeInternals || !action.isInternal()) {\n      writer.beginObject();\n      writer.prop(\"key\", action.key());\n      writer.prop(\"description\", action.description());\n      writer.prop(\"since\", action.since());\n      writer.prop(\"internal\", action.isInternal());\n      writer.prop(\"post\", action.isPost());\n      writer.prop(\"hasResponseExample\", action.responseExample() != null);\n      if (!action.params().isEmpty()) {\n        // sort parameters by key\n        Ordering<Param> ordering = Ordering.natural().onResultOf(new Function<Param, String>() {\n          @Override\n          public String apply(@Nullable Param param) {\n            return param != null ? param.key() : null;\n          }\n        });\n        writer.name(\"params\").beginArray();\n        for (Param param : ordering.sortedCopy(action.params())) {\n          writeParam(writer, param);\n        }\n        writer.endArray();\n      }\n      writer.endObject();\n    }\n  }","id":69810,"modified_method":"private void writeAction(JsonWriter writer, Action action, boolean includeInternals) {\n    if (includeInternals || !action.isInternal()) {\n      writer.beginObject();\n      writer.prop(\"key\", action.key());\n      writer.prop(\"description\", action.description());\n      writer.prop(\"since\", action.since());\n      writer.prop(\"deprecatedSince\", action.deprecatedSince());\n      writer.prop(\"internal\", action.isInternal());\n      writer.prop(\"post\", action.isPost());\n      writer.prop(\"hasResponseExample\", action.responseExample() != null);\n      if (!action.params().isEmpty()) {\n        // sort parameters by key\n        Ordering<Param> ordering = Ordering.natural().onResultOf(new Function<Param, String>() {\n          @Override\n          public String apply(@Nullable Param param) {\n            return param != null ? param.key() : null;\n          }\n        });\n        writer.name(\"params\").beginArray();\n        for (Param param : ordering.sortedCopy(action.params())) {\n          writeParam(writer, param);\n        }\n        writer.endArray();\n      }\n      writer.endObject();\n    }\n  }","commit_id":"859348e3f052ed6a418468df997c540db9cc829a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n    public void define(Context context) {\n      NewController newController = context.createController(\"api/metric\")\n        .setDescription(\"Metrics\")\n        .setSince(\"3.2\");\n\n      // action with default values\n      newController.createAction(\"show\")\n        .setHandler(new RequestHandler() {\n          @Override\n          public void handle(Request request, Response response) {\n          }\n        });\n\n\n      // action with a lot of overridden values\n      NewAction create = newController.createAction(\"create\")\n        .setDescription(\"Create metric\")\n        .setSince(\"4.1\")\n        .setPost(true)\n        .setResponseExample(Resources.getResource(getClass(), \"ListingWsTest/metrics_example.json\"))\n        .setHandler(new RequestHandler() {\n          @Override\n          public void handle(Request request, Response response) {\n          }\n        });\n      create\n        .createParam(\"severity\")\n        .setDescription(\"Severity\")\n        .setRequired(false)\n        .setPossibleValues(\"BLOCKER\", \"INFO\")\n        .setExampleValue(\"INFO\")\n        .setDefaultValue(\"BLOCKER\");\n      create.createParam(\"name\");\n\n      newController.createAction(\"internal_action\").setInternal(true).setHandler(new RequestHandler() {\n        @Override\n        public void handle(Request request, Response response) throws Exception {\n\n        }\n      });\n\n      newController.done();\n    }","id":69811,"modified_method":"@Override\n    public void define(Context context) {\n      NewController newController = context.createController(\"api/metric\")\n        .setDescription(\"Metrics\")\n        .setSince(\"3.2\");\n\n      // action with default values\n      newController.createAction(\"show\")\n        .setHandler(new RequestHandler() {\n          @Override\n          public void handle(Request request, Response response) {\n          }\n        });\n\n      // action with a lot of overridden values\n      NewAction create = newController.createAction(\"create\")\n        .setDescription(\"Create metric\")\n        .setSince(\"4.1\")\n        .setDeprecatedSince(\"5.3\")\n        .setPost(true)\n        .setResponseExample(Resources.getResource(getClass(), \"ListingWsTest/metrics_example.json\"))\n        .setHandler(new RequestHandler() {\n          @Override\n          public void handle(Request request, Response response) {\n          }\n        });\n      create\n        .createParam(\"severity\")\n        .setDescription(\"Severity\")\n        .setDeprecatedSince(\"5.2\")\n        .setRequired(false)\n        .setPossibleValues(\"BLOCKER\", \"INFO\")\n        .setExampleValue(\"INFO\")\n        .setDefaultValue(\"BLOCKER\");\n      create.createParam(\"name\");\n\n      newController.createAction(\"internal_action\").setInternal(true).setHandler(new RequestHandler() {\n        @Override\n        public void handle(Request request, Response response) throws Exception {\n\n        }\n      });\n\n      newController.done();\n    }","commit_id":"859348e3f052ed6a418468df997c540db9cc829a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n    public void define(Context context) {\n      NewController newController = context.createController(\"api/metric\")\n        .setDescription(\"Metrics\")\n        .setSince(\"3.2\");\n\n      newController.createAction(\"show\")\n        .setDescription(\"Show metric\")\n        .setHandler(new RequestHandler() {\n          @Override\n          public void handle(Request request, Response response) {\n            show(request, response);\n          }\n        });\n\n      newController.createAction(\"create\")\n        .setDescription(\"Create metric\")\n        .setSince(\"4.1\")\n        .setPost(true)\n        .setInternal(true)\n        .setResponseExample(getClass().getResource(\"/org/sonar/api/server/ws/WebServiceTest/response-example.txt\"))\n        .setHandler(new RequestHandler() {\n          @Override\n          public void handle(Request request, Response response) {\n            create(request, response);\n          }\n        });\n\n      newController.done();\n    }","id":69812,"modified_method":"@Override\n    public void define(Context context) {\n      NewController newController = context.createController(\"api/metric\")\n        .setDescription(\"Metrics\")\n        .setSince(\"3.2\");\n\n      newController.createAction(\"show\")\n        .setDescription(\"Show metric\")\n        .setHandler(new RequestHandler() {\n          @Override\n          public void handle(Request request, Response response) {\n            show(request, response);\n          }\n        });\n\n      newController.createAction(\"create\")\n        .setDescription(\"Create metric\")\n        .setSince(\"4.1\")\n        .setDeprecatedSince(\"5.3\")\n        .setPost(true)\n        .setInternal(true)\n        .setResponseExample(getClass().getResource(\"/org/sonar/api/server/ws/WebServiceTest/response-example.txt\"))\n        .setHandler(new RequestHandler() {\n          @Override\n          public void handle(Request request, Response response) {\n            create(request, response);\n          }\n        });\n\n      newController.done();\n    }","commit_id":"859348e3f052ed6a418468df997c540db9cc829a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void define_web_service() {\n    MetricWs metricWs = new MetricWs();\n\n    metricWs.define(context);\n\n    WebService.Controller controller = context.controller(\"api/metric\");\n    assertThat(controller).isNotNull();\n    assertThat(controller.path()).isEqualTo(\"api/metric\");\n    assertThat(controller.description()).isEqualTo(\"Metrics\");\n    assertThat(controller.since()).isEqualTo(\"3.2\");\n    assertThat(controller.actions()).hasSize(2);\n    assertThat(controller.isInternal()).isFalse();\n    WebService.Action showAction = controller.action(\"show\");\n    assertThat(showAction).isNotNull();\n    assertThat(showAction.key()).isEqualTo(\"show\");\n    assertThat(showAction.description()).isEqualTo(\"Show metric\");\n    assertThat(showAction.handler()).isNotNull();\n    assertThat(showAction.responseExample()).isNull();\n    assertThat(showAction.responseExampleFormat()).isNull();\n    assertThat(showAction.responseExampleAsString()).isNull();\n    // same as controller\n    assertThat(showAction.since()).isEqualTo(\"3.2\");\n    assertThat(showAction.isPost()).isFalse();\n    assertThat(showAction.isInternal()).isFalse();\n    assertThat(showAction.path()).isEqualTo(\"api/metric/show\");\n    WebService.Action createAction = controller.action(\"create\");\n    assertThat(createAction).isNotNull();\n    assertThat(createAction.key()).isEqualTo(\"create\");\n    assertThat(createAction.toString()).isEqualTo(\"api/metric/create\");\n    // overrides controller version\n    assertThat(createAction.since()).isEqualTo(\"4.1\");\n    assertThat(createAction.isPost()).isTrue();\n    assertThat(createAction.isInternal()).isTrue();\n  }","id":69813,"modified_method":"@Test\n  public void define_web_service() {\n    MetricWs metricWs = new MetricWs();\n\n    metricWs.define(context);\n\n    WebService.Controller controller = context.controller(\"api/metric\");\n    assertThat(controller).isNotNull();\n    assertThat(controller.path()).isEqualTo(\"api/metric\");\n    assertThat(controller.description()).isEqualTo(\"Metrics\");\n    assertThat(controller.since()).isEqualTo(\"3.2\");\n    assertThat(controller.actions()).hasSize(2);\n    assertThat(controller.isInternal()).isFalse();\n    WebService.Action showAction = controller.action(\"show\");\n    assertThat(showAction).isNotNull();\n    assertThat(showAction.key()).isEqualTo(\"show\");\n    assertThat(showAction.description()).isEqualTo(\"Show metric\");\n    assertThat(showAction.handler()).isNotNull();\n    assertThat(showAction.responseExample()).isNull();\n    assertThat(showAction.responseExampleFormat()).isNull();\n    assertThat(showAction.responseExampleAsString()).isNull();\n    assertThat(showAction.deprecatedSince()).isNull();\n    // same as controller\n    assertThat(showAction.since()).isEqualTo(\"3.2\");\n    assertThat(showAction.isPost()).isFalse();\n    assertThat(showAction.isInternal()).isFalse();\n    assertThat(showAction.path()).isEqualTo(\"api/metric/show\");\n    WebService.Action createAction = controller.action(\"create\");\n    assertThat(createAction).isNotNull();\n    assertThat(createAction.key()).isEqualTo(\"create\");\n    assertThat(createAction.toString()).isEqualTo(\"api/metric/create\");\n    assertThat(createAction.deprecatedSince()).isEqualTo(\"5.3\");\n    // overrides controller version\n    assertThat(createAction.since()).isEqualTo(\"4.1\");\n    assertThat(createAction.isPost()).isTrue();\n    assertThat(createAction.isInternal()).isTrue();\n  }","commit_id":"859348e3f052ed6a418468df997c540db9cc829a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void action_parameters() {\n    new WebService() {\n      @Override\n      public void define(Context context) {\n        NewController newController = context.createController(\"api/rule\");\n        NewAction newAction = newController.createAction(\"create\").setHandler(mock(RequestHandler.class));\n        newAction.createParam(\"key\").setDescription(\"Key of the new rule\");\n        newAction.createParam(\"severity\").setDefaultValue(\"MAJOR\").setPossibleValues(\"INFO\", \"MAJOR\", \"BLOCKER\");\n        newAction.addPagingParams(20);\n        newAction.addFieldsParam(Arrays.asList(\"name\", \"severity\"));\n        newAction.addSortParams(Arrays.asList(\"name\", \"updatedAt\", \"severity\"), \"updatedAt\", false);\n        newController.done();\n      }\n    }.define(context);\n\n    WebService.Action action = context.controller(\"api/rule\").action(\"create\");\n    assertThat(action.params()).hasSize(7);\n\n    assertThat(action.param(\"key\").key()).isEqualTo(\"key\");\n    assertThat(action.param(\"key\").description()).isEqualTo(\"Key of the new rule\");\n    assertThat(action.param(\"key\").toString()).isEqualTo(\"key\");\n\n    assertThat(action.param(\"severity\").key()).isEqualTo(\"severity\");\n    assertThat(action.param(\"severity\").description()).isNull();\n    assertThat(action.param(\"severity\").defaultValue()).isEqualTo(\"MAJOR\");\n    assertThat(action.param(\"severity\").possibleValues()).containsOnly(\"INFO\", \"MAJOR\", \"BLOCKER\");\n\n    // predefined fields\n    assertThat(action.param(\"p\").defaultValue()).isEqualTo(\"1\");\n    assertThat(action.param(\"p\").description()).isNotEmpty();\n    assertThat(action.param(\"ps\").defaultValue()).isEqualTo(\"20\");\n    assertThat(action.param(\"ps\").description()).isNotEmpty();\n    assertThat(action.param(\"f\").possibleValues()).containsOnly(\"name\", \"severity\");\n    assertThat(action.param(\"s\").possibleValues()).containsOnly(\"name\", \"severity\", \"updatedAt\");\n    assertThat(action.param(\"s\").description()).isNotEmpty();\n    assertThat(action.param(\"asc\").defaultValue()).isEqualTo(\"false\");\n  }","id":69814,"modified_method":"@Test\n  public void action_parameters() {\n    new WebService() {\n      @Override\n      public void define(Context context) {\n        NewController newController = context.createController(\"api/rule\");\n        NewAction newAction = newController.createAction(\"create\").setHandler(mock(RequestHandler.class));\n        newAction\n          .createParam(\"key\")\n          .setDescription(\"Key of the new rule\");\n        newAction\n          .createParam(\"severity\")\n          .setDefaultValue(\"MAJOR\")\n          .setDeprecatedSince(\"5.3\")\n          .setDeprecatedKey(\"old-severity\")\n          .setPossibleValues(\"INFO\", \"MAJOR\", \"BLOCKER\");\n        newAction.addPagingParams(20);\n        newAction.addFieldsParam(Arrays.asList(\"name\", \"severity\"));\n        newAction.addSortParams(Arrays.asList(\"name\", \"updatedAt\", \"severity\"), \"updatedAt\", false);\n        newController.done();\n      }\n    }.define(context);\n\n    WebService.Action action = context.controller(\"api/rule\").action(\"create\");\n    assertThat(action.params()).hasSize(7);\n\n    WebService.Param keyParam = action.param(\"key\");\n    assertThat(keyParam.key()).isEqualTo(\"key\");\n    assertThat(keyParam.description()).isEqualTo(\"Key of the new rule\");\n    assertThat(keyParam.toString()).isEqualTo(\"key\");\n\n    WebService.Param severityParam = action.param(\"severity\");\n    assertThat(severityParam.key()).isEqualTo(\"severity\");\n    assertThat(severityParam.description()).isNull();\n    assertThat(severityParam.deprecatedSince()).isEqualTo(\"5.3\");\n    assertThat(severityParam.deprecatedKey()).isEqualTo(\"old-severity\");\n    assertThat(severityParam.defaultValue()).isEqualTo(\"MAJOR\");\n    assertThat(severityParam.possibleValues()).containsOnly(\"INFO\", \"MAJOR\", \"BLOCKER\");\n\n    // predefined fields\n    assertThat(action.param(\"p\").defaultValue()).isEqualTo(\"1\");\n    assertThat(action.param(\"p\").description()).isNotEmpty();\n    assertThat(action.param(\"ps\").defaultValue()).isEqualTo(\"20\");\n    assertThat(action.param(\"ps\").description()).isNotEmpty();\n    assertThat(action.param(\"f\").possibleValues()).containsOnly(\"name\", \"severity\");\n    assertThat(action.param(\"s\").possibleValues()).containsOnly(\"name\", \"severity\", \"updatedAt\");\n    assertThat(action.param(\"s\").description()).isNotEmpty();\n    assertThat(action.param(\"asc\").defaultValue()).isEqualTo(\"false\");\n  }","commit_id":"859348e3f052ed6a418468df997c540db9cc829a","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Nullable\n  public static IFile getCachesDir(IModule module, String outputPath) {\n    if (outputPath == null) return null;\n\n    if (module.isPackaged()) {\n      String suffix = outputPath;\n      int index = outputPath.replace(\"\\\\\", \"/\").lastIndexOf(\"/\");\n      if (index >= 0) {\n        suffix = outputPath.substring(index + 1);\n      }\n      IFile descriptorFile;\n      if (module instanceof Generator) {\n        descriptorFile = ((Generator) module).getSourceLanguage().getDescriptorFile();\n      } else {\n        descriptorFile = module.getDescriptorFile();\n      }\n      return descriptorFile.getParent().getParent().child(FileGenerationUtil.getCachesPath(suffix));\n    } else {\n      return FileSystem.getFile(new File(FileGenerationUtil.getCachesPath(new File(outputPath).getAbsolutePath())));\n    }\n  }","id":69815,"modified_method":"@Nullable\n  public static IFile getCachesDir(IModule module, String outputPath) {\n    if (outputPath == null) return null;\n\n    if (module.isPackaged()) {\n      String suffix = outputPath;\n      int index = outputPath.replace(\"\\\\\", \"/\").lastIndexOf(\"/\");\n      if (index >= 0) {\n        suffix = outputPath.substring(index + 1);\n      }\n      IFile descriptorFile;\n      if (module instanceof Generator) {\n        descriptorFile = ((Generator) module).getSourceLanguage().getDescriptorFile();\n      } else {\n        descriptorFile = module.getDescriptorFile();\n      }\n      return descriptorFile.getParent().getParent().child(FileGenerationUtil.getCachesPath(suffix));\n    } else {\n      return FileSystem.getFile(FileGenerationUtil.getCachesPath(new File(outputPath).getAbsolutePath()));\n    }\n  }","commit_id":"13bb994b35543665df52d1e6bf67340a8c5a7278","url":"https://github.com/JetBrains/MPS"},{"original_method":"private String calculateGeneratedHash(SModelDescriptor sm) {\n    IModule module = sm.getModule();\n\n    if (module == null) {\n      throw new IllegalStateException();\n    }\n\n    File outputPath = new File(FileGenerationUtil.getCachesPath(new File(module.getOutputFor(sm)).getAbsolutePath()));\n    File sourcesDir = FileGenerationUtil.getDefaultOutputDir(sm, FileSystem.getFile(outputPath)).toFile();\n\n    File[] files = sourcesDir.listFiles();\n    String result = null;\n    if (files != null) {\n      for (File f : files) {\n        String name = f.getName();\n        if (name.startsWith(HASH_PREFIX)) {\n          if (result != null) {\n            return null; //we have several hash files so it was probably caused by merge\n          }\n          result = name.substring(HASH_PREFIX.length());\n        }\n      }\n    }\n\n    return result;\n  }","id":69816,"modified_method":"private String calculateGeneratedHash(SModelDescriptor sm) {\n    IModule module = sm.getModule();\n\n    if (module == null) {\n      throw new IllegalStateException();\n    }\n\n    IFile outputPath = BaseModelCache.getCachesDir(module, module.getOutputFor(sm));\n    IFile sourcesDir = FileGenerationUtil.getDefaultOutputDir(sm, outputPath);\n\n    List<IFile> files = sourcesDir.list();\n    String result = null;\n    if (files != null) {\n      for (IFile f : files) {\n        String name = f.getName();\n        if (name.startsWith(HASH_PREFIX)) {\n          if (result != null) {\n            return null; //we have several hash files so it was probably caused by merge\n          }\n          result = name.substring(HASH_PREFIX.length());\n        }\n      }\n    }\n\n    return result;\n  }","commit_id":"13bb994b35543665df52d1e6bf67340a8c5a7278","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static IFile getDefaultOutputDir(SModelReference reference, @NotNull IFile outputRootDir) {\n    String packageName = JavaNameUtil.packageNameForModelUID(reference);\n    String packagePath;\n    if (FileSystem.getInstance().isPackaged(outputRootDir)) {\n      packagePath = packageName.replace('.', '/');\n    } else {\n      packagePath = packageName.replace('.', File.separatorChar);\n    }\n    return outputRootDir.getDescendant(packagePath);\n  }","id":69817,"modified_method":"/**\n   * Returns a (sub-)subdirectory of outputRootDir matching the reference model package.\n   * @param reference\n   * @param outputRootDir\n   * @return\n   */\n  public static IFile getDefaultOutputDir(SModelReference reference, @NotNull IFile outputRootDir) {\n    String packageName = JavaNameUtil.packageNameForModelUID(reference);\n    String packagePath;\n    if (FileSystem.getInstance().isPackaged(outputRootDir)) {\n      packagePath = packageName.replace('.', '/');\n    } else {\n      packagePath = packageName.replace('.', File.separatorChar);\n    }\n    return outputRootDir.getDescendant(packagePath);\n  }","commit_id":"ddef96057d6240d1bd37ca753247932913d753d1","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void cacheGenChildren(IFile dir) {\n    if (GeneratorPathsComponent.getInstance().isForeign(dir)) {\n      List<IFile> genChildren = GeneratorPathsComponent.getInstance().getGeneratedChildren(dir);\n      if (ListSequence.fromList(genChildren).isNotEmpty()) {\n        MapSequence.fromMap(generatedChildren).put(dir, ListSequence.fromListWithValues(new ArrayList<IFile>(), genChildren));\n      }\n    }\n  }","id":69818,"modified_method":"private void cacheGenChildren(IFile dir) {\n    cacheGenChildren(dir, dir);\n  }","commit_id":"ddef96057d6240d1bd37ca753247932913d753d1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void saveStream(String name, String content, boolean isCache) {\n    IFile outputRootDir = (isCache ?\n      myCachesOutputDir :\n      myOutputDir\n    );\n    IFile file = FileGenerationUtil.getDefaultOutputDir(myModelDescriptor, outputRootDir).getDescendant(name);\n    myProcessor.saveContent(file, content);\n    mySavedFiles.add(file);\n    ((isCache ?\n      myCachesFileDelta :\n      myOutputFileDelta\n    )).written(file);\n  }","id":69819,"modified_method":"public void saveStream(String name, String content, boolean isCache) {\n    IFile file = getFile(name, isCache);\n    myProcessor.saveContent(file, content);\n    mySavedFiles.add(file);\n    getDelta(isCache).written(file);\n  }","commit_id":"ddef96057d6240d1bd37ca753247932913d753d1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public JavaStreamHandler(SModelDescriptor modelDescriptor, IFile outputDir, IFile cachesOutputDir) {\n    myModelDescriptor = modelDescriptor;\n    myOutputDir = outputDir;\n    myCachesOutputDir = cachesOutputDir;\n    myProcessor = new FileProcessor();\n    this.myOutputFileDelta = new FilesDelta(FileGenerationUtil.getDefaultOutputDir(myModelDescriptor, myOutputDir));\n    this.myCachesFileDelta = new FilesDelta(FileGenerationUtil.getDefaultOutputDir(myModelDescriptor, myCachesOutputDir));\n  }","id":69820,"modified_method":"public JavaStreamHandler(SModelDescriptor modelDescriptor, IFile outputDir, IFile cachesOutputDir) {\n    myModelDescriptor = modelDescriptor;\n    IFile overriddenOutputDir = getOverriddenOutputDir(modelDescriptor);\n    IFile defaultOutputDir = FileGenerationUtil.getDefaultOutputDir(myModelDescriptor, outputDir);\n    this.myModelOutputDir = (overriddenOutputDir != null ?\n      overriddenOutputDir :\n      defaultOutputDir\n    );\n    this.myModelCacheOutputDir = FileGenerationUtil.getDefaultOutputDir(myModelDescriptor, cachesOutputDir);\n\n    this.myOutputFileDelta = (overriddenOutputDir != null ?\n      new FilesDelta(myModelOutputDir, defaultOutputDir) :\n      new FilesDelta(myModelOutputDir)\n    );\n    this.myCachesFileDelta = new FilesDelta(myModelCacheOutputDir);\n  }","commit_id":"ddef96057d6240d1bd37ca753247932913d753d1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void saveStream(String name, Element content, boolean isCache) {\n    IFile outputRootDir = (isCache ?\n      myCachesOutputDir :\n      myOutputDir\n    );\n    IFile file = FileGenerationUtil.getDefaultOutputDir(myModelDescriptor, outputRootDir).getDescendant(name);\n    myProcessor.saveContent(file, content);\n    mySavedFiles.add(file);\n    ((isCache ?\n      myCachesFileDelta :\n      myOutputFileDelta\n    )).written(file);\n  }","id":69821,"modified_method":"public void saveStream(String name, Element content, boolean isCache) {\n    IFile file = getFile(name, isCache);\n    myProcessor.saveContent(file, content);\n    mySavedFiles.add(file);\n    getDelta(isCache).written(file);\n  }","commit_id":"ddef96057d6240d1bd37ca753247932913d753d1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void saveStream(String name, byte[] content, boolean isCache) {\n    IFile outputRootDir = (isCache ?\n      myCachesOutputDir :\n      myOutputDir\n    );\n    IFile file = FileGenerationUtil.getDefaultOutputDir(myModelDescriptor, outputRootDir).getDescendant(name);\n    myProcessor.saveContent(file, content);\n    mySavedFiles.add(file);\n    ((isCache ?\n      myCachesFileDelta :\n      myOutputFileDelta\n    )).written(file);\n  }","id":69822,"modified_method":"public void saveStream(String name, byte[] content, boolean isCache) {\n    IFile file = getFile(name, isCache);\n    myProcessor.saveContent(file, content);\n    mySavedFiles.add(file);\n    getDelta(isCache).written(file);\n  }","commit_id":"ddef96057d6240d1bd37ca753247932913d753d1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void dispose() {\n    if (false) {\n      Set<IFile> directories = new HashSet<IFile>();\n      directories.add(myOutputDir);\n      directories.add(myCachesOutputDir);\n      for (IFile f : mySavedFiles) {\n        directories.add(f.getParent());\n      }\n      final List<IFile> filesToDelete = new ArrayList<IFile>();\n      for (IFile dir : directories) {\n        for (IFile outputDirectoryFile : dir.getChildren()) {\n          if (outputDirectoryFile.isDirectory()) {\n            continue;\n          }\n          if (mySavedFiles.contains(outputDirectoryFile)) {\n            continue;\n          }\n          // todo temporaty hack to fix tests (icons as resources) \n          if (outputDirectoryFile.getName().endsWith(\".png\")) {\n            continue;\n          }\n          filesToDelete.add(outputDirectoryFile);\n        }\n      }\n      myProcessor.filesToDelete(filesToDelete);\n    }\n    myProcessor.invalidateModel(myModelDescriptor);\n  }","id":69823,"modified_method":"public void dispose() {\n    myProcessor.invalidateModel(myModelDescriptor);\n  }","commit_id":"ddef96057d6240d1bd37ca753247932913d753d1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean touch(String name, boolean isCache) {\n    IFile outputRootDir = (isCache ?\n      myCachesOutputDir :\n      myOutputDir\n    );\n    IFile file = FileGenerationUtil.getDefaultOutputDir(myModelDescriptor, outputRootDir).getDescendant(name);\n    mySavedFiles.add(file);\n    ((isCache ?\n      myCachesFileDelta :\n      myOutputFileDelta\n    )).kept(file);\n    return file.exists();\n  }","id":69824,"modified_method":"public boolean touch(String name, boolean isCache) {\n    IFile file = getFile(name, isCache);\n    mySavedFiles.add(file);\n    getDelta(isCache).kept(file);\n    return file.exists();\n  }","commit_id":"ddef96057d6240d1bd37ca753247932913d753d1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Iterable<String> getOutputPaths() {\n      return Sequence.fromIterable(Sequence.fromArray(sortedOutDirs)).concat(Sequence.fromIterable(Sequence.fromArray(sortedTestOutDirs)));\n    }","id":69825,"modified_method":"public Iterable<String> getOutputPaths() {\n      return Sequence.fromIterable(Sequence.fromArray(sortedOutDirs)).concat(Sequence.fromIterable(Sequence.fromArray(sortedTestOutDirs))).concat(Sequence.fromIterable(Sequence.fromArray(sortedModelDirs)));\n    }","commit_id":"ddef96057d6240d1bd37ca753247932913d753d1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public ModuleOutputPaths(Iterable<IModule> modules) {\n      this.sortedOutDirs = DirUtil.sortDirs(Sequence.fromIterable(modules).select(new ISelector<IModule, String>() {\n        public String select(IModule mod) {\n          return mod.getGeneratorOutputPath();\n        }\n      }));\n      this.sortedOutCacheDirs = DirUtil.sortDirs(Sequence.fromIterable(modules).select(new ISelector<IModule, String>() {\n        public String select(IModule mod) {\n          return FileGenerationUtil.getCachesPath(mod.getGeneratorOutputPath());\n        }\n      }));\n\n      this.sortedTestOutDirs = DirUtil.sortDirs(Sequence.fromIterable(modules).select(new ISelector<IModule, String>() {\n        public String select(IModule mod) {\n          return mod.getTestsGeneratorOutputPath();\n        }\n      }));\n      this.sortedTestOutCacheDirs = DirUtil.sortDirs(Sequence.fromIterable(modules).select(new ISelector<IModule, String>() {\n        public String select(IModule mod) {\n          return FileGenerationUtil.getCachesPath(mod.getTestsGeneratorOutputPath());\n        }\n      }));\n    }","id":69826,"modified_method":"public ModuleOutputPaths(Iterable<IModule> modules) {\n      this.sortedOutDirs = DirUtil.sortDirs(Sequence.fromIterable(modules).select(new ISelector<IModule, String>() {\n        public String select(IModule mod) {\n          return mod.getGeneratorOutputPath();\n        }\n      }));\n      this.sortedOutCacheDirs = DirUtil.sortDirs(Sequence.fromIterable(modules).select(new ISelector<IModule, String>() {\n        public String select(IModule mod) {\n          return FileGenerationUtil.getCachesPath(mod.getGeneratorOutputPath());\n        }\n      }));\n\n      this.sortedTestOutDirs = DirUtil.sortDirs(Sequence.fromIterable(modules).select(new ISelector<IModule, String>() {\n        public String select(IModule mod) {\n          return mod.getTestsGeneratorOutputPath();\n        }\n      }));\n      this.sortedTestOutCacheDirs = DirUtil.sortDirs(Sequence.fromIterable(modules).select(new ISelector<IModule, String>() {\n        public String select(IModule mod) {\n          return FileGenerationUtil.getCachesPath(mod.getTestsGeneratorOutputPath());\n        }\n      }));\n\n      this.sortedModelDirs = DirUtil.sortDirs(Sequence.fromIterable(modules).translate(new ITranslator2<IModule, SModelRoot>() {\n        public Iterable<SModelRoot> translate(IModule mod) {\n          return mod.getSModelRoots();\n        }\n      }).select(new ISelector<SModelRoot, String>() {\n        public String select(SModelRoot smr) {\n          return smr.getModelRoot().getPath();\n        }\n      }).select(new ISelector<String, IFile>() {\n        public IFile select(String path) {\n          return FileSystem.getInstance().getFileByPath(path);\n        }\n      }).where(new IWhereFilter<IFile>() {\n        public boolean accept(IFile f) {\n          return f.isDirectory() && !(f instanceof JarEntryFile);\n        }\n      }).select(new ISelector<IFile, String>() {\n        public String select(IFile dir) {\n          return dir.getPath();\n        }\n      }));\n    }","commit_id":"ddef96057d6240d1bd37ca753247932913d753d1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String toLocalCachePath(String path) {\n      String normPath = DirUtil.normalizeAsDir(path);\n      int idx = DirUtil.findPrefixAsDir(normPath, sortedOutCacheDirs);\n      if (idx >= 0) {\n        return DirUtil.withoutPrefix(normPath, sortedOutCacheDirs[idx]);\n      }\n\n      int tidx = DirUtil.findPrefixAsDir(normPath, sortedTestOutCacheDirs);\n      if (tidx >= 0) {\n        return DirUtil.withoutPrefix(normPath, sortedTestOutCacheDirs[tidx]);\n      }\n\n      // not found \n      return null;\n    }","id":69827,"modified_method":"public String toLocalCachePath(String path) {\n      String localCacheOut = toLocal(path, sortedOutCacheDirs);\n      if (localCacheOut != null) {\n        return localCacheOut;\n      }\n      return toLocal(path, sortedTestOutCacheDirs);\n    }","commit_id":"ddef96057d6240d1bd37ca753247932913d753d1","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String toLocalPath(String path) {\n      String normPath = DirUtil.normalizeAsDir(path);\n      int idx = DirUtil.findPrefixAsDir(normPath, sortedOutDirs);\n      if (idx >= 0) {\n        return DirUtil.withoutPrefix(normPath, sortedOutDirs[idx]);\n      }\n\n      int tidx = DirUtil.findPrefixAsDir(normPath, sortedTestOutDirs);\n      if (tidx >= 0) {\n        return DirUtil.withoutPrefix(normPath, sortedTestOutDirs[tidx]);\n      }\n\n      // not found \n      return null;\n    }","id":69828,"modified_method":"public String toLocalPath(String path) {\n      String localOut = toLocal(path, sortedOutDirs);\n      if (localOut != null) {\n        return localOut;\n      }\n      return toLocal(path, sortedTestOutDirs);\n    }","commit_id":"ddef96057d6240d1bd37ca753247932913d753d1","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static boolean isInheritor(@NotNull PsiClass candidateClass, @NotNull PsiClass baseClass, boolean checkDeep, Set<PsiClass> checkedClasses) {\n    if (candidateClass instanceof PsiAnonymousClass) {\n      final PsiClass baseCandidateClass = ((PsiAnonymousClass)candidateClass).getBaseClassType().resolve();\n      return baseCandidateClass != null && InheritanceUtil.isInheritorOrSelf(baseCandidateClass, baseClass, checkDeep);\n    }\n    PsiManager manager = candidateClass.getManager();\n    /* //TODO fix classhashprovider so it doesn't use class qnames only\n    final ClassHashProvider provider = getHashProvider((PsiManagerImpl) manager);\n    if (checkDeep && provider != null) {\n      try {\n        return provider.isInheritor(baseClass, candidateClass);\n      }\n      catch (ClassHashProvider.OutOfRangeException e) {\n      }\n    }\n    */\n    if(checkDeep && LOG.isDebugEnabled()){\n      LOG.debug(\"Using uncached version for \" + candidateClass.getQualifiedName() + \" and \" + baseClass);\n    }\n\n    @NonNls final String baseName = baseClass.getName();\n    if (\"Object\".equals(baseName)) {\n      PsiClass objectClass = JavaPsiFacade.getInstance(manager.getProject()).findClass(CommonClassNames.JAVA_LANG_OBJECT, candidateClass.getResolveScope());\n      if (manager.areElementsEquivalent(baseClass, objectClass)) {\n        if (manager.areElementsEquivalent(candidateClass, objectClass)) return false;\n        if (checkDeep || candidateClass.isInterface()) return true;\n        return manager.areElementsEquivalent(candidateClass.getSuperClass(), objectClass);\n      }\n    }\n\n    if (!checkDeep) {\n      final boolean cInt = candidateClass.isInterface();\n      final boolean bInt = baseClass.isInterface();\n\n      if (candidateClass instanceof PsiCompiledElement) {\n        String baseQName = baseClass.getQualifiedName();\n        if (baseQName == null) return false;\n\n        GlobalSearchScope scope = candidateClass.getResolveScope();\n        if (cInt == bInt && checkReferenceListWithQualifiedNames(baseQName, candidateClass.getExtendsList(), manager, scope)) return true;\n        return bInt && !cInt && checkReferenceListWithQualifiedNames(baseQName, candidateClass.getImplementsList(), manager, scope);\n      }\n      if (cInt == bInt) {\n        for (PsiClassType type : candidateClass.getExtendsListTypes()) {\n          if (Comparing.equal(type.getClassName(), baseName)) {\n            if (manager.areElementsEquivalent(baseClass, type.resolve())) {\n              return true;\n            }\n          }\n        }\n      }\n      else if (!cInt) {\n        for (PsiClassType type : candidateClass.getImplementsListTypes()) {\n          if (Comparing.equal(type.getClassName(), baseName)) {\n            if (manager.areElementsEquivalent(baseClass, type.resolve())) {\n              return true;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n\n    return isInheritorWithoutCaching(candidateClass, baseClass, checkDeep, checkedClasses);\n  }","id":69829,"modified_method":"private static boolean isInheritor(@NotNull PsiClass candidateClass, @NotNull PsiClass baseClass, boolean checkDeep, Set<PsiClass> checkedClasses) {\n    if (candidateClass instanceof PsiAnonymousClass) {\n      final PsiClass baseCandidateClass = ((PsiAnonymousClass)candidateClass).getBaseClassType().resolve();\n      return baseCandidateClass != null && InheritanceUtil.isInheritorOrSelf(baseCandidateClass, baseClass, checkDeep);\n    }\n    PsiManager manager = candidateClass.getManager();\n    /* //TODO fix classhashprovider so it doesn't use class qnames only\n    final ClassHashProvider provider = getHashProvider((PsiManagerImpl) manager);\n    if (checkDeep && provider != null) {\n      try {\n        return provider.isInheritor(baseClass, candidateClass);\n      }\n      catch (ClassHashProvider.OutOfRangeException e) {\n      }\n    }\n    */\n    if(checkDeep && LOG.isDebugEnabled()){\n      LOG.debug(\"Using uncached version for \" + candidateClass.getQualifiedName() + \" and \" + baseClass);\n    }\n\n    @NonNls final String baseName = baseClass.getName();\n    if (\"Object\".equals(baseName)) {\n      PsiClass objectClass = JavaPsiFacade.getInstance(manager.getProject()).findClass(CommonClassNames.JAVA_LANG_OBJECT, candidateClass.getResolveScope());\n      if (manager.areElementsEquivalent(baseClass, objectClass)) {\n        if (manager.areElementsEquivalent(candidateClass, objectClass)) return false;\n        if (checkDeep || candidateClass.isInterface()) return true;\n        return manager.areElementsEquivalent(candidateClass.getSuperClass(), objectClass);\n      }\n    }\n\n    if (!checkDeep) {\n      final boolean cInt = candidateClass.isInterface();\n      final boolean bInt = baseClass.isInterface();\n\n      if (candidateClass instanceof PsiCompiledElement) {\n        if (cInt == bInt && checkReferenceListWithQualifiedNames(candidateClass.getExtendsList(), baseClass)) return true;\n        return bInt && !cInt && checkReferenceListWithQualifiedNames(candidateClass.getImplementsList(), baseClass);\n      }\n      if (cInt == bInt) {\n        for (PsiClassType type : candidateClass.getExtendsListTypes()) {\n          if (Comparing.equal(type.getClassName(), baseName)) {\n            if (manager.areElementsEquivalent(baseClass, type.resolve())) {\n              return true;\n            }\n          }\n        }\n      }\n      else if (!cInt) {\n        for (PsiClassType type : candidateClass.getImplementsListTypes()) {\n          if (Comparing.equal(type.getClassName(), baseName)) {\n            if (manager.areElementsEquivalent(baseClass, type.resolve())) {\n              return true;\n            }\n          }\n        }\n      }\n\n      return false;\n    }\n\n    return isInheritorWithoutCaching(candidateClass, baseClass, checkDeep, checkedClasses);\n  }","commit_id":"fc7ad3de9e455a11790fe6dd494da01571a032d0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean checkReferenceListWithQualifiedNames(final String baseQName, final PsiReferenceList extList, final PsiManager manager,\n                                                              final GlobalSearchScope scope) {\n    if (extList != null) {\n      final PsiJavaCodeReferenceElement[] refs = extList.getReferenceElements();\n      for (PsiJavaCodeReferenceElement ref : refs) {\n        if (Comparing.equal(PsiNameHelper.getQualifiedClassName(ref.getQualifiedName(), false), baseQName) && JavaPsiFacade\n          .getInstance(manager.getProject()).findClass(baseQName, scope) != null)\n          return true;\n      }\n    }\n    return false;\n  }","id":69830,"modified_method":"private static boolean checkReferenceListWithQualifiedNames(final PsiReferenceList extList, PsiClass baseClass) {\n    if (extList != null) {\n      String qname = baseClass.getQualifiedName();\n      if (qname != null) {\n        for (PsiJavaCodeReferenceElement ref : extList.getReferenceElements()) {\n          if (Comparing.equal(PsiNameHelper.getQualifiedClassName(ref.getQualifiedName(), false), qname) &&\n              baseClass.isEquivalentTo(ref.resolve())) {\n            return true;\n          }\n        }\n      }\n    }\n    return false;\n  }","commit_id":"fc7ad3de9e455a11790fe6dd494da01571a032d0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean isClassEquivalentTo(@NotNull PsiClass aClass, PsiElement another) {\n    if (aClass == another) return true;\n    if (!(another instanceof PsiClass)) return false;\n    String name1 = aClass.getName();\n    if (name1 == null) return false;\n    if (!another.isValid()) return false;\n    String name2 = ((PsiClass)another).getName();\n    if (name2 == null) return false;\n    if (name1.hashCode() != name2.hashCode()) return false;\n    if (!name1.equals(name2)) return false;\n    String qName1 = aClass.getQualifiedName();\n    String qName2 = ((PsiClass)another).getQualifiedName();\n    if (qName1 == null || qName2 == null) {\n      //noinspection StringEquality\n      if (qName1 != qName2) return false;\n\n      if (aClass instanceof PsiTypeParameter && another instanceof PsiTypeParameter) {\n        PsiTypeParameter p1 = (PsiTypeParameter)aClass;\n        PsiTypeParameter p2 = (PsiTypeParameter)another;\n\n        return p1.getIndex() == p2.getIndex() &&\n               aClass.getManager().areElementsEquivalent(p1.getOwner(), p2.getOwner());\n      }\n      else {\n        return false;\n      }\n    }\n    if (qName1.hashCode() != qName2.hashCode() || !qName1.equals(qName2)) {\n      return false;\n    }\n\n    if (originalElement(aClass).equals(originalElement((PsiClass)another))) {\n      return true;\n    }\n\n    final PsiFile file1 = aClass.getContainingFile().getOriginalFile();\n    final PsiFile file2 = another.getContainingFile().getOriginalFile();\n\n    //see com.intellij.openapi.vcs.changes.PsiChangeTracker\n    //see com.intellij.psi.impl.PsiFileFactoryImpl#createFileFromText(CharSequence,PsiFile)\n    final PsiFile original1 = file1.getUserData(PsiFileFactory.ORIGINAL_FILE);\n    final PsiFile original2 = file2.getUserData(PsiFileFactory.ORIGINAL_FILE);\n    if (original1 == original2 && original1 != null || original1 == file2 || original2 == file1 || file1 == file2) {\n      return compareClassSeqNumber(aClass, (PsiClass)another);\n    }\n\n    final FileIndexFacade fileIndex = ServiceManager.getService(file1.getProject(), FileIndexFacade.class);\n    final VirtualFile vfile1 = file1.getViewProvider().getVirtualFile();\n    final VirtualFile vfile2 = file2.getViewProvider().getVirtualFile();\n    return (fileIndex.isInSource(vfile1) || fileIndex.isInLibraryClasses(vfile1)) &&\n           (fileIndex.isInSource(vfile2) || fileIndex.isInLibraryClasses(vfile2));\n  }","id":69831,"modified_method":"public static boolean isClassEquivalentTo(@NotNull PsiClass aClass, PsiElement another) {\n    if (aClass == another) return true;\n    if (!(another instanceof PsiClass)) return false;\n    String name1 = aClass.getName();\n    if (name1 == null) return false;\n    if (!another.isValid()) return false;\n    String name2 = ((PsiClass)another).getName();\n    if (name2 == null) return false;\n    if (name1.hashCode() != name2.hashCode()) return false;\n    if (!name1.equals(name2)) return false;\n    String qName1 = aClass.getQualifiedName();\n    String qName2 = ((PsiClass)another).getQualifiedName();\n    if (qName1 == null || qName2 == null) {\n      //noinspection StringEquality\n      if (qName1 != qName2) return false;\n\n      if (aClass instanceof PsiTypeParameter && another instanceof PsiTypeParameter) {\n        PsiTypeParameter p1 = (PsiTypeParameter)aClass;\n        PsiTypeParameter p2 = (PsiTypeParameter)another;\n\n        return p1.getIndex() == p2.getIndex() &&\n               aClass.getManager().areElementsEquivalent(p1.getOwner(), p2.getOwner());\n      }\n      else {\n        return false;\n      }\n    }\n    if (qName1.hashCode() != qName2.hashCode() || !qName1.equals(qName2)) {\n      return false;\n    }\n\n    if (originalElement(aClass).equals(originalElement((PsiClass)another))) {\n      return true;\n    }\n\n    final PsiFile file1 = aClass.getContainingFile().getOriginalFile();\n    final PsiFile file2 = another.getContainingFile().getOriginalFile();\n\n    //see com.intellij.openapi.vcs.changes.PsiChangeTracker\n    //see com.intellij.psi.impl.PsiFileFactoryImpl#createFileFromText(CharSequence,PsiFile)\n    final PsiFile original1 = file1.getUserData(PsiFileFactory.ORIGINAL_FILE);\n    final PsiFile original2 = file2.getUserData(PsiFileFactory.ORIGINAL_FILE);\n    if (original1 == original2 && original1 != null || original1 == file2 || original2 == file1 || file1 == file2) {\n      return compareClassSeqNumber(aClass, (PsiClass)another);\n    }\n\n    final FileIndexFacade fileIndex = ServiceManager.getService(file1.getProject(), FileIndexFacade.class);\n    final VirtualFile vfile1 = file1.getViewProvider().getVirtualFile();\n    final VirtualFile vfile2 = file2.getViewProvider().getVirtualFile();\n    boolean lib1 = fileIndex.isInLibraryClasses(vfile1);\n    boolean lib2 = fileIndex.isInLibraryClasses(vfile2);\n    if (aClass instanceof PsiCompiledElement && another instanceof PsiCompiledElement && lib1 && lib2) {\n      if (fileIndex.isInSdkClasses(vfile1) && fileIndex.isInSdkClasses(vfile2)) {\n        return true;\n      }\n      return vfile1.equals(vfile2);\n    }\n\n    return (fileIndex.isInSource(vfile1) || lib1) && (fileIndex.isInSource(vfile2) || lib2);\n  }","commit_id":"fc7ad3de9e455a11790fe6dd494da01571a032d0","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * @param strict Strict scope respects <a href=\"https://www.dartlang.org/tools/pub/package-layout.html\">Dart Package Layout Conventions<\/a>,\n   *               not strict includes the whole Dart project and Path Packages it depends on.\n   *               But both strict and not strict scope for file in 'packages' folder includes only 'packages', 'lib' and Path Packages folders.\n   */\n  @Nullable\n  public static GlobalSearchScope getDartScope(@NotNull final Project project, @NotNull final VirtualFile file, boolean strict) {\n    if (file.getFileType() != DartFileType.INSTANCE) return null;\n\n    final ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex();\n    final DartSdk sdk = DartSdk.getDartSdk(project);\n\n    if (fileIndex.isInLibraryClasses(file)) {\n      if (sdk != null && file.getPath().startsWith(sdk.getHomePath() + \"/\")) {\n        return getDartSdkResolveScope(project);\n      }\n\n      return getLibraryAndSdkScope(project, file, sdk);\n    }\n\n    final Module module = fileIndex.getModuleForFile(file);\n    if (module == null) {\n      return null;\n    }\n\n    VirtualFile contextSubdir = null;\n    VirtualFile dir = file.getParent();\n\n    while (dir != null && fileIndex.isInContent(dir)) {\n      final VirtualFile pubspecFile = dir.findChild(PubspecYamlUtil.PUBSPEC_YAML);\n      if (pubspecFile != null) {\n        final boolean inPackages = contextSubdir != null && PACKAGES_FOLDER_NAME.equals(contextSubdir.getName());\n        return getDartResolveScope(module, pubspecFile, strict || inPackages ? contextSubdir : null);\n      }\n      contextSubdir = dir;\n      dir = dir.getParent();\n    }\n\n    // no pubspec.yaml => return module content scope + libs + SDK\n    return module.getModuleContentWithDependenciesScope().union(module.getModuleWithLibrariesScope());\n  }","id":69832,"modified_method":"/**\n   * @param strict Strict scope respects <a href=\"https://www.dartlang.org/tools/pub/package-layout.html\">Dart Package Layout Conventions<\/a>,\n   *               not strict includes the whole Dart project and Path Packages it depends on.\n   *               But both strict and not strict scope for file in 'packages' folder includes only 'packages', 'lib' and Path Packages folders.\n   */\n  @Nullable\n  public static GlobalSearchScope getDartScope(@NotNull final Project project, @NotNull final VirtualFile file, boolean strict) {\n    if (file.getFileType() != DartFileType.INSTANCE) return null;\n\n    final ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex();\n    final DartSdk sdk = DartSdk.getDartSdk(project);\n\n    if (fileIndex.isInLibraryClasses(file) && !fileIndex.isInContent(file)) {\n      if (sdk != null && file.getPath().startsWith(sdk.getHomePath() + \"/\")) {\n        return getDartSdkResolveScope(project);\n      }\n\n      return getLibraryAndSdkScope(project, file, sdk);\n    }\n\n    final Module module = fileIndex.getModuleForFile(file);\n    if (module == null) {\n      return null;\n    }\n\n    VirtualFile contextSubdir = null;\n    VirtualFile dir = file.getParent();\n\n    while (dir != null && fileIndex.isInContent(dir)) {\n      final VirtualFile pubspecFile = dir.findChild(PubspecYamlUtil.PUBSPEC_YAML);\n      if (pubspecFile != null) {\n        final boolean inPackages = contextSubdir != null && PACKAGES_FOLDER_NAME.equals(contextSubdir.getName());\n        return getDartResolveScope(module, pubspecFile, strict || inPackages ? contextSubdir : null);\n      }\n      contextSubdir = dir;\n      dir = dir.getParent();\n    }\n\n    // no pubspec.yaml => return module content scope + libs + SDK\n    return module.getModuleContentWithDependenciesScope().union(module.getModuleWithLibrariesScope());\n  }","commit_id":"e66d9ee78c0af508caf185a94087c15fedfeec7d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private void configureLibrary(final VirtualFile root) {\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final ModifiableRootModel model = ModuleRootManager.getInstance(myModule).getModifiableModel();\n        final Library library = model.getModuleLibraryTable().createLibrary();\n        final Library.ModifiableModel libModel = library.getModifiableModel();\n        libModel.addRoot(root, OrderRootType.CLASSES);\n        libModel.commit();\n        model.commit();\n      }\n    });\n  }","id":69833,"modified_method":"private void configureLibrary(final VirtualFile root) {\n    ApplicationManager.getApplication().runWriteAction(new Runnable() {\n      @Override\n      public void run() {\n        final ModifiableRootModel model = ModuleRootManager.getInstance(myModule).getModifiableModel();\n        final Library library = model.getModuleLibraryTable().createLibrary();\n        final Library.ModifiableModel libModel = library.getModifiableModel();\n        libModel.addRoot(root, OrderRootType.CLASSES);\n        libModel.commit();\n\n        model.getContentEntries()[0].addExcludeFolder(root);\n        model.commit();\n      }\n    });\n  }","commit_id":"e66d9ee78c0af508caf185a94087c15fedfeec7d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public void testResolveAndUseScope() throws Exception {\n    try {\n      final VirtualFile inSdk1 = DartLibraryIndex.getSdkLibByUri(getProject(), \"dart:collection\");\n      final VirtualFile inSdk2 = DartLibraryIndex.getSdkLibByUri(getProject(), \"dart:math\");\n\n      final VirtualFile inIdeLib1 = myFixture.addFileToProject(\"library/inLibrary1.dart\", \"\").getVirtualFile();\n      final VirtualFile inIdeLib2 = myFixture.addFileToProject(\"library/inLibrary2.dart\", \"\").getVirtualFile();\n      configureLibrary(inIdeLib1.getParent());\n\n      final VirtualFile inContent = myFixture.addFileToProject(\"inContentOutsideDartRoot.dart\", \"\").getVirtualFile();\n\n      myFixture.addFileToProject(\"DartProject3/pubspec.yaml\", \"name: DartProject3\");\n      final VirtualFile inProject3Web = myFixture.addFileToProject(\"DartProject3/web/inProject3Web.dart\", \"\").getVirtualFile();\n      final VirtualFile inProject3Lib = myFixture.addFileToProject(\"DartProject3/lib/inProject3Lib.dart\", \"\").getVirtualFile();\n\n      myFixture.addFileToProject(\"DartProject2/pubspec.yaml\", \"name: DartProject2\\n\" +\n                                                              \"dependencies:\\n\" +\n                                                              \"  DartProject3:\\n\" +\n                                                              \"    path: ../DartProject3\\n\");\n      final VirtualFile inProject2Web = myFixture.addFileToProject(\"DartProject2/web/inProject2Web.dart\", \"\").getVirtualFile();\n      final VirtualFile inProject2Lib = myFixture.addFileToProject(\"DartProject2/lib/inProject2Lib.dart\", \"\").getVirtualFile();\n\n      final VirtualFile pubspec = myFixture.addFileToProject(\"DartProject1/pubspec.yaml\", \"name: DartProject1\\n\" +\n                                                                                          \"dependencies:\\n\" +\n                                                                                          \"  DartProject2:\\n\" +\n                                                                                          \"    path: ../DartProject2\\n\").getVirtualFile();\n      final VirtualFile inProject1Root = myFixture.addFileToProject(\"DartProject1/inProject1Root.dart\", \"\").getVirtualFile();\n      final VirtualFile inLib = myFixture.addFileToProject(\"DartProject1/lib/inLib.dart\", \"\").getVirtualFile();\n      final VirtualFile inPackages = myFixture.addFileToProject(\"DartProject1/packages/inPackages.dart\", \"\").getVirtualFile();\n      final VirtualFile inWeb = myFixture.addFileToProject(\"DartProject1/web/inWeb.dart\", \"\").getVirtualFile();\n      final VirtualFile inWebSub = myFixture.addFileToProject(\"DartProject1/web/sub/inWebSub.dart\", \"\").getVirtualFile();\n      final VirtualFile inExcluded = myFixture.addFileToProject(\"DartProject1/web/packages/inExcluded.dart\", \"\").getVirtualFile();\n      final VirtualFile inTest = myFixture.addFileToProject(\"DartProject1/test/inTest.dart\", \"\").getVirtualFile();\n      final VirtualFile inExample = myFixture.addFileToProject(\"DartProject1/example/inExample.dart\", \"\").getVirtualFile();\n\n      DartProjectComponent.excludeBuildAndPackagesFolders(myModule, pubspec);\n\n      doTestResolveScope(inExcluded, null, null, true);\n      doTestResolveScope(new VirtualFile[]{inSdk1, inSdk2},\n                         new VirtualFile[]{inSdk1, inSdk2},\n                         new VirtualFile[]{inIdeLib1, inIdeLib2, inContent, inProject2Web, inProject2Lib, inProject3Web, inProject3Lib,\n                           inProject1Root, inLib, inPackages, inWeb, inWebSub, inExcluded, inTest, inExample});\n      doTestResolveScope(new VirtualFile[]{inIdeLib1, inIdeLib2},\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2},\n                         new VirtualFile[]{inContent, inProject2Web, inProject2Lib, inProject3Web, inProject3Lib,\n                           inProject1Root, inLib, inPackages, inWeb, inWebSub, inExcluded, inTest, inExample});\n      doTestResolveScope(new VirtualFile[]{inContent},\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inContent, inProject2Web, inProject2Lib, inProject3Web,\n                           inProject3Lib, inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample},\n                         new VirtualFile[]{inExcluded});\n      doTestResolveScope(inLib,\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Lib, inProject3Lib, inLib, inPackages},\n                         new VirtualFile[]{inContent, inProject2Web, inProject3Web, inExcluded, inProject1Root, inWeb, inWebSub, inTest,\n                           inExample},\n                         true);\n      doTestResolveScope(new VirtualFile[]{inPackages},\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Lib, inProject3Lib, inLib, inPackages},\n                         new VirtualFile[]{inContent, inProject2Web, inProject3Web, inExcluded, inProject1Root, inWeb, inWebSub, inTest,\n                           inExample});\n      doTestResolveScope(new VirtualFile[]{inWeb, inWebSub},\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Lib, inProject3Lib, inLib, inPackages, inWeb,\n                           inWebSub},\n                         new VirtualFile[]{inContent, inProject2Web, inProject3Web, inExcluded, inProject1Root, inTest, inExample},\n                         true);\n      doTestResolveScope(inExample,\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Lib, inProject3Lib, inLib, inPackages,\n                           inExample},\n                         new VirtualFile[]{inContent, inProject2Web, inProject3Web, inExcluded, inProject1Root, inTest, inWeb, inWebSub},\n                         true);\n      doTestResolveScope(new VirtualFile[]{inProject1Root, inTest},\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Lib, inProject3Lib,\n                           inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample},\n                         new VirtualFile[]{inContent, inProject2Web, inProject3Web, inExcluded},\n                         true);\n      doTestResolveScope(new VirtualFile[]{inProject1Root, inLib, inWeb, inWebSub, inTest, inExample},\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Lib, inProject3Lib,\n                           inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample},\n                         new VirtualFile[]{inContent, inProject2Web, inProject3Web, inExcluded},\n                         false);\n\n      doTestUseScope(new VirtualFile[]{inSdk1, inSdk2},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inContent, inProject2Web, inProject2Lib, inProject3Web,\n                       inProject3Lib, inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample},\n                     new VirtualFile[]{inExcluded});\n      doTestUseScope(new VirtualFile[]{inIdeLib1, inIdeLib2},\n                     new VirtualFile[]{inIdeLib1, inIdeLib2, inContent, inProject2Web, inProject2Lib, inProject3Web,\n                       inProject3Lib, inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample},\n                     new VirtualFile[]{inSdk1, inSdk2});\n      doTestUseScope(new VirtualFile[]{inContent},\n                     new VirtualFile[]{inContent},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Web, inProject2Lib, inProject3Web,\n                       inProject3Lib, inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample});\n      doTestUseScope(new VirtualFile[]{inPackages, inLib},\n                     new VirtualFile[]{inContent, inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Web, inProject2Lib, inProject3Web,\n                       inProject3Lib});\n      doTestUseScope(new VirtualFile[]{inProject1Root, inWeb, inWebSub, inTest, inExample},\n                     new VirtualFile[]{inContent, inProject1Root, inLib, inWeb, inWebSub, inTest, inExample},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inPackages, inProject2Web, inProject2Lib, inProject3Web,\n                       inProject3Lib});\n      doTestUseScope(new VirtualFile[]{inProject2Lib},\n                     new VirtualFile[]{inContent, inPackages, inProject1Root, inLib, inWeb, inWebSub, inTest, inExample, inProject2Web,\n                       inProject2Lib},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject3Web, inProject3Lib});\n      doTestUseScope(new VirtualFile[]{inProject2Web},\n                     new VirtualFile[]{inProject2Web, inProject2Lib, inContent},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inPackages, inProject1Root, inLib, inWeb, inWebSub,\n                       inTest, inExample, inProject3Web, inProject3Lib});\n      doTestUseScope(new VirtualFile[]{inProject3Lib},\n                     new VirtualFile[]{inContent, inPackages, inProject1Root, inLib, inWeb, inWebSub, inTest, inExample, inProject2Web,\n                       inProject2Lib, inProject3Web, inProject3Lib},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2});\n      doTestUseScope(new VirtualFile[]{inProject3Web},\n                     new VirtualFile[]{inContent, inProject3Web, inProject3Lib},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inPackages, inProject1Root, inLib, inWeb, inWebSub, inTest,\n                       inExample, inProject2Web, inProject2Lib});\n    }\n    finally {\n      DartTestUtils.resetModuleRoots(myModule);\n    }\n  }","id":69834,"modified_method":"public void testResolveAndUseScope() throws Exception {\n    try {\n      final VirtualFile inSdk1 = DartLibraryIndex.getSdkLibByUri(getProject(), \"dart:collection\");\n      final VirtualFile inSdk2 = DartLibraryIndex.getSdkLibByUri(getProject(), \"dart:math\");\n\n      final VirtualFile inIdeLib1 = myFixture.addFileToProject(\"library/inLibrary1.dart\", \"\").getVirtualFile();\n      final VirtualFile inIdeLib2 = myFixture.addFileToProject(\"library/inLibrary2.dart\", \"\").getVirtualFile();\n      configureLibrary(inIdeLib1.getParent());\n\n      final VirtualFile inContent = myFixture.addFileToProject(\"inContentOutsideDartRoot.dart\", \"\").getVirtualFile();\n\n      myFixture.addFileToProject(\"DartProject3/pubspec.yaml\", \"name: DartProject3\");\n      final VirtualFile inProject3Web = myFixture.addFileToProject(\"DartProject3/web/inProject3Web.dart\", \"\").getVirtualFile();\n      final VirtualFile inProject3Lib = myFixture.addFileToProject(\"DartProject3/lib/inProject3Lib.dart\", \"\").getVirtualFile();\n\n      myFixture.addFileToProject(\"DartProject2/pubspec.yaml\", \"name: DartProject2\\n\" +\n                                                              \"dependencies:\\n\" +\n                                                              \"  DartProject3:\\n\" +\n                                                              \"    path: ../DartProject3\\n\");\n      final VirtualFile inProject2Web = myFixture.addFileToProject(\"DartProject2/web/inProject2Web.dart\", \"\").getVirtualFile();\n      final VirtualFile inProject2Lib = myFixture.addFileToProject(\"DartProject2/lib/inProject2Lib.dart\", \"\").getVirtualFile();\n\n      final VirtualFile pubspec = myFixture.addFileToProject(\"DartProject1/pubspec.yaml\", \"name: DartProject1\\n\" +\n                                                                                          \"dependencies:\\n\" +\n                                                                                          \"  DartProject2:\\n\" +\n                                                                                          \"    path: ../DartProject2\\n\").getVirtualFile();\n      final VirtualFile inProject1Root = myFixture.addFileToProject(\"DartProject1/inProject1Root.dart\", \"\").getVirtualFile();\n      final VirtualFile inLib = myFixture.addFileToProject(\"DartProject1/lib/inLib.dart\", \"\").getVirtualFile();\n      final VirtualFile inPackages = myFixture.addFileToProject(\"DartProject1/packages/inPackages.dart\", \"\").getVirtualFile();\n      final VirtualFile inWeb = myFixture.addFileToProject(\"DartProject1/web/inWeb.dart\", \"\").getVirtualFile();\n      final VirtualFile inWebSub = myFixture.addFileToProject(\"DartProject1/web/sub/inWebSub.dart\", \"\").getVirtualFile();\n      final VirtualFile inExcluded = myFixture.addFileToProject(\"DartProject1/web/packages/inExcluded.dart\", \"\").getVirtualFile();\n      final VirtualFile inTest = myFixture.addFileToProject(\"DartProject1/test/inTest.dart\", \"\").getVirtualFile();\n      final VirtualFile inExample = myFixture.addFileToProject(\"DartProject1/example/inExample.dart\", \"\").getVirtualFile();\n\n      DartProjectComponent.excludeBuildAndPackagesFolders(myModule, pubspec);\n\n      doTestResolveScope(inExcluded, null, null, true);\n      doTestResolveScope(new VirtualFile[]{inSdk1, inSdk2},\n                         new VirtualFile[]{inSdk1, inSdk2},\n                         new VirtualFile[]{inIdeLib1, inIdeLib2, inContent, inProject2Web, inProject2Lib, inProject3Web, inProject3Lib,\n                           inProject1Root, inLib, inPackages, inWeb, inWebSub, inExcluded, inTest, inExample});\n      doTestResolveScope(new VirtualFile[]{inIdeLib1, inIdeLib2},\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2},\n                         new VirtualFile[]{inContent, inProject2Web, inProject2Lib, inProject3Web, inProject3Lib,\n                           inProject1Root, inLib, inPackages, inWeb, inWebSub, inExcluded, inTest, inExample});\n      doTestResolveScope(new VirtualFile[]{inContent},\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inContent, inProject2Web, inProject2Lib, inProject3Web,\n                           inProject3Lib, inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample},\n                         new VirtualFile[]{inExcluded});\n      doTestResolveScope(inLib,\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Lib, inProject3Lib, inLib, inPackages},\n                         new VirtualFile[]{inContent, inProject2Web, inProject3Web, inExcluded, inProject1Root, inWeb, inWebSub, inTest,\n                           inExample},\n                         true);\n      doTestResolveScope(new VirtualFile[]{inPackages},\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Lib, inProject3Lib, inLib, inPackages},\n                         new VirtualFile[]{inContent, inProject2Web, inProject3Web, inExcluded, inProject1Root, inWeb, inWebSub, inTest,\n                           inExample});\n      doTestResolveScope(new VirtualFile[]{inWeb, inWebSub},\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Lib, inProject3Lib, inLib, inPackages, inWeb,\n                           inWebSub},\n                         new VirtualFile[]{inContent, inProject2Web, inProject3Web, inExcluded, inProject1Root, inTest, inExample},\n                         true);\n      doTestResolveScope(inExample,\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Lib, inProject3Lib, inLib, inPackages,\n                           inExample},\n                         new VirtualFile[]{inContent, inProject2Web, inProject3Web, inExcluded, inProject1Root, inTest, inWeb, inWebSub},\n                         true);\n      doTestResolveScope(new VirtualFile[]{inProject1Root, inTest},\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Lib, inProject3Lib,\n                           inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample},\n                         new VirtualFile[]{inContent, inProject2Web, inProject3Web, inExcluded},\n                         true);\n      doTestResolveScope(new VirtualFile[]{inProject1Root, inLib, inWeb, inWebSub, inTest, inExample},\n                         new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Lib, inProject3Lib,\n                           inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample},\n                         new VirtualFile[]{inContent, inProject2Web, inProject3Web, inExcluded},\n                         false);\n\n      doTestUseScope(new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inContent, inProject2Web, inProject2Lib, inProject3Web,\n                       inProject3Lib, inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample},\n                     new VirtualFile[]{inExcluded});\n      doTestUseScope(new VirtualFile[]{inContent},\n                     new VirtualFile[]{inContent},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Web, inProject2Lib, inProject3Web,\n                       inProject3Lib, inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample});\n      doTestUseScope(new VirtualFile[]{inPackages, inLib},\n                     new VirtualFile[]{inContent, inProject1Root, inLib, inPackages, inWeb, inWebSub, inTest, inExample},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject2Web, inProject2Lib, inProject3Web,\n                       inProject3Lib});\n      doTestUseScope(new VirtualFile[]{inProject1Root, inWeb, inWebSub, inTest, inExample},\n                     new VirtualFile[]{inContent, inProject1Root, inLib, inWeb, inWebSub, inTest, inExample},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inPackages, inProject2Web, inProject2Lib, inProject3Web,\n                       inProject3Lib});\n      doTestUseScope(new VirtualFile[]{inProject2Lib},\n                     new VirtualFile[]{inContent, inPackages, inProject1Root, inLib, inWeb, inWebSub, inTest, inExample, inProject2Web,\n                       inProject2Lib},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inProject3Web, inProject3Lib});\n      doTestUseScope(new VirtualFile[]{inProject2Web},\n                     new VirtualFile[]{inProject2Web, inProject2Lib, inContent},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inPackages, inProject1Root, inLib, inWeb, inWebSub,\n                       inTest, inExample, inProject3Web, inProject3Lib});\n      doTestUseScope(new VirtualFile[]{inProject3Lib},\n                     new VirtualFile[]{inContent, inPackages, inProject1Root, inLib, inWeb, inWebSub, inTest, inExample, inProject2Web,\n                       inProject2Lib, inProject3Web, inProject3Lib},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2});\n      doTestUseScope(new VirtualFile[]{inProject3Web},\n                     new VirtualFile[]{inContent, inProject3Web, inProject3Lib},\n                     new VirtualFile[]{inSdk1, inSdk2, inIdeLib1, inIdeLib2, inPackages, inProject1Root, inLib, inWeb, inWebSub, inTest,\n                       inExample, inProject2Web, inProject2Lib});\n    }\n    finally {\n      DartTestUtils.resetModuleRoots(myModule);\n    }\n  }","commit_id":"e66d9ee78c0af508caf185a94087c15fedfeec7d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public static boolean isInDartSdkOrDartPackagesFolder(final @NotNull Project project, final @NotNull VirtualFile file) {\n    final ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex();\n\n    if (fileIndex.isInLibraryClasses(file)) {\n      return true; // file in SDK or in custom package root\n    }\n\n    if (fileIndex.isExcluded(file) || (fileIndex.isInContent(file) && isInDartPackagesFolder(fileIndex, file))) {\n      return true; // symlinked child of 'packages' folder. Real location is in user cache folder for Dart packages, not in project\n    }\n\n    return false;\n  }","id":69835,"modified_method":"public static boolean isInDartSdkOrDartPackagesFolder(final @NotNull Project project, final @NotNull VirtualFile file) {\n    final ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex();\n    return !fileIndex.isInContent(file) || fileIndex.isExcluded(file) || isInDartPackagesFolder(fileIndex, file);\n  }","commit_id":"e66d9ee78c0af508caf185a94087c15fedfeec7d","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public boolean isInLibraryClasses(Project project, VirtualFile file) {\n    final ProjectFileIndex projectFileIndex = ProjectRootManager.getInstance(project).getFileIndex();\n\n    return projectFileIndex.isInLibraryClasses(file);\n  }","id":69836,"modified_method":"public boolean isInLibraryClasses(Project project, VirtualFile file) {\n    final ProjectFileIndex projectFileIndex = ProjectRootManager.getInstance(project).getFileIndex();\n\n    return projectFileIndex.isInLibraryClasses(file) && !projectFileIndex.isInSource(file);\n  }","commit_id":"ae4792bda2a85d3ae8499b2ec6d872f4bf4625a3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public DeleteSecurityGroupResponseType delete( DeleteSecurityGroupType request ) throws EucalyptusCloudException {\n    Context ctx = Contexts.lookup( );\n    NetworkGroups.createDefault( ctx.getUserFullName( ) );//ensure the default group exists to cover some old broken installs\n    DeleteSecurityGroupResponseType reply = ( DeleteSecurityGroupResponseType ) request.getReply( );\n    if ( Contexts.lookup( ).hasAdministrativePrivileges( ) && request.getGroupName( ).indexOf( \"::\" ) != -1 ) {\n      String[] nameParts = request.getGroupName( ).split( \"::\" );\n      if ( nameParts.length != 2 ) {\n        throw new EucalyptusCloudException( \"Request to delete group named: \" + request.getGroupName( ) + \" is malformed.\" );\n      } else {\n        String accountId = nameParts[0];\n        String groupName = nameParts[1];\n        try {\n          Account account = Accounts.lookupAccountById( accountId );\n          for ( User user : account.getUsers( ) ) {\n            UserFullName userFullName = UserFullName.getInstance( user );\n            try {\n              NetworkGroupUtil.getUserNetworkRulesGroup( userFullName, groupName );\n              NetworkGroupUtil.deleteUserNetworkRulesGroup( userFullName, groupName );\n            } catch ( EucalyptusCloudException ex ) {\n              //need to iterate over all users in the account and check each of their security groups\n            }\n          }\n        } catch ( AuthException ex ) {\n          LOG.error( ex.getMessage( ) );\n          throw new EucalyptusCloudException( \"Deleting security failed because of: \" + ex.getMessage( ) + \" for request \" + request.toSimpleString( ) );\n        }\n      }\n    } else {\n      if ( !Permissions.isAuthorized( PolicySpec.VENDOR_EC2, PolicySpec.EC2_RESOURCE_SECURITYGROUP, request.getGroupName( ), ctx.getAccount( ),\n                                      PolicySpec.requestToAction( request ), ctx.getUser( ) ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to delete network group \" + request.getGroupName( ) + \" for \" + ctx.getUser( ) );\n      }\n      NetworkGroupUtil.deleteUserNetworkRulesGroup( ctx.getUserFullName( ), request.getGroupName( ) );\n    }\n    reply.set_return( true );\n    return reply;\n  }","id":69837,"modified_method":"public DeleteSecurityGroupResponseType delete( final DeleteSecurityGroupType request ) throws EucalyptusCloudException {\n    final Context ctx = Contexts.lookup( );\n    NetworkGroups.createDefault( ctx.getUserFullName( ) );//ensure the default group exists to cover some old broken installs\n    final DeleteSecurityGroupResponseType reply = ( DeleteSecurityGroupResponseType ) request.getReply( );\n    if ( Contexts.lookup( ).hasAdministrativePrivileges( ) && ( request.getGroupName( ).indexOf( \"::\" ) != -1 ) ) {\n      final String[] nameParts = request.getGroupName( ).split( \"::\" );\n      if ( nameParts.length != 2 ) {\n        throw new EucalyptusCloudException( \"Request to delete group named: \" + request.getGroupName( ) + \" is malformed.\" );\n      } else {\n        final String accountId = nameParts[0];\n        final String groupName = nameParts[1];\n        try {\n          final Account account = Accounts.lookupAccountById( accountId );\n          for ( final User user : account.getUsers( ) ) {\n            final UserFullName userFullName = UserFullName.getInstance( user );\n            try {\n              NetworkGroupUtil.getUserNetworkRulesGroup( userFullName, groupName );\n              NetworkGroupUtil.deleteUserNetworkRulesGroup( userFullName, groupName );\n            } catch ( final EucalyptusCloudException ex ) {\n              //need to iterate over all users in the account and check each of their security groups\n            }\n          }\n        } catch ( final AuthException ex ) {\n          LOG.error( ex.getMessage( ) );\n          throw new EucalyptusCloudException( \"Deleting security failed because of: \" + ex.getMessage( ) + \" for request \" + request.toSimpleString( ) );\n        }\n      }\n    } else {\n      if ( !Permissions.isAuthorized( PolicySpec.VENDOR_EC2, PolicySpec.EC2_RESOURCE_SECURITYGROUP, request.getGroupName( ), ctx.getAccount( ),\n                                      PolicySpec.requestToAction( request ), ctx.getUser( ) ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to delete network group \" + request.getGroupName( ) + \" for \" + ctx.getUser( ) );\n      }\n      NetworkGroupUtil.deleteUserNetworkRulesGroup( ctx.getUserFullName( ), request.getGroupName( ) );\n    }\n    reply.set_return( true );\n    return reply;\n  }","commit_id":"d75b4e63e3db893e5d438d91df42fb01c12f4f62","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public RevokeSecurityGroupIngressResponseType revoke( RevokeSecurityGroupIngressType request ) throws EucalyptusCloudException {\n    Context ctx = Contexts.lookup( );\n    NetworkGroups.createDefault( ctx.getUserFullName( ) );//ensure the default group exists to cover some old broken installs\n    RevokeSecurityGroupIngressResponseType reply = ( RevokeSecurityGroupIngressResponseType ) request.getReply( );\n    NetworkGroup ruleGroup = NetworkGroupUtil.getUserNetworkRulesGroup( ctx.getUserFullName( ), request.getGroupName( ) );\n    if ( !ctx.hasAdministrativePrivileges( )\n         && !Permissions.isAuthorized( PolicySpec.VENDOR_EC2, PolicySpec.EC2_RESOURCE_SECURITYGROUP, request.getGroupName( ), ctx.getAccount( ),\n                                       PolicySpec.requestToAction( request ), ctx.getUser( ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to revoke network group \" + request.getGroupName( ) + \" for \" + ctx.getUser( ) );\n    }\n    final List<NetworkRule> ruleList = Lists.newArrayList( );\n    for ( IpPermissionType ipPerm : request.getIpPermissions( ) ) {\n      ruleList.addAll( NetworkGroupUtil.getNetworkRules( ipPerm ) );\n    }\n    List<NetworkRule> filtered = Lists.newArrayList( Iterables.filter( ruleGroup.getNetworkRules( ), new Predicate<NetworkRule>( ) {\n      @Override\n      public boolean apply( NetworkRule rule ) {\n        for ( NetworkRule r : ruleList ) {\n          if ( r.equals( rule ) && r.getNetworkPeers( ).equals( rule.getNetworkPeers( ) ) && r.getIpRanges( ).equals( rule.getIpRanges( ) ) ) {\n            return true;\n          }\n        }\n        return false;\n      }\n    } ) );\n    if ( filtered.size( ) == ruleList.size( ) ) {\n      try {\n        for ( NetworkRule r : filtered ) {\n          ruleGroup.getNetworkRules( ).remove( r );\n        }\n        ruleGroup = EntityWrapper.get( NetworkGroup.class ).mergeAndCommit( ruleGroup );\n      } catch ( Exception ex ) {\n        Logs.extreme( ).error( ex, ex );\n        throw new EucalyptusCloudException( \"RevokeSecurityGroupIngress failed because: \" + ex.getMessage( ), ex );\n      }\n      return reply;\n    } else if ( request.getIpPermissions( ).size( ) == 1 && request.getIpPermissions( ).get( 0 ).getIpProtocol( ) == null ) {\n      //LAME: this is for the query-based clients which send incomplete named-network requests.\n      for ( NetworkRule rule : ruleList ) {\n        if ( ruleGroup.getNetworkRules( ).remove( rule ) ) {\n          reply.set_return( true );\n        }\n      }\n      if ( reply.get_return( ) ) {\n        try {\n          ruleGroup = EntityWrapper.get( ruleGroup ).mergeAndCommit( ruleGroup );\n        } catch ( Exception ex ) {\n          Logs.extreme( ).error( ex, ex );\n          throw new EucalyptusCloudException( \"RevokeSecurityGroupIngress failed because: \" + ex.getMessage( ), ex );\n        }\n      }\n      return reply;\n    } else {\n      return reply.markFailed( );\n    }\n  }","id":69838,"modified_method":"public RevokeSecurityGroupIngressResponseType revoke( final RevokeSecurityGroupIngressType request ) throws EucalyptusCloudException {\n    final Context ctx = Contexts.lookup( );\n    NetworkGroups.createDefault( ctx.getUserFullName( ) );//ensure the default group exists to cover some old broken installs\n    final RevokeSecurityGroupIngressResponseType reply = ( RevokeSecurityGroupIngressResponseType ) request.getReply( );\n    NetworkGroup ruleGroup = NetworkGroupUtil.getUserNetworkRulesGroup( ctx.getUserFullName( ), request.getGroupName( ) );\n    if ( !ctx.hasAdministrativePrivileges( )\n         && !Permissions.isAuthorized( PolicySpec.VENDOR_EC2, PolicySpec.EC2_RESOURCE_SECURITYGROUP, request.getGroupName( ), ctx.getAccount( ),\n                                       PolicySpec.requestToAction( request ), ctx.getUser( ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to revoke network group \" + request.getGroupName( ) + \" for \" + ctx.getUser( ) );\n    }\n    final List<NetworkRule> ruleList = Lists.newArrayList( );\n    for ( final IpPermissionType ipPerm : request.getIpPermissions( ) ) {\n      ruleList.addAll( NetworkGroupUtil.getNetworkRules( ipPerm ) );\n    }\n    final List<NetworkRule> filtered = Lists.newArrayList( Iterables.filter( ruleGroup.getNetworkRules( ), new Predicate<NetworkRule>( ) {\n      @Override\n      public boolean apply( final NetworkRule rule ) {\n        for ( final NetworkRule r : ruleList ) {\n          if ( r.equals( rule ) && r.getNetworkPeers( ).equals( rule.getNetworkPeers( ) ) && r.getIpRanges( ).equals( rule.getIpRanges( ) ) ) {\n            return true;\n          }\n        }\n        return false;\n      }\n    } ) );\n    if ( filtered.size( ) == ruleList.size( ) ) {\n      try {\n        for ( final NetworkRule r : filtered ) {\n          ruleGroup.getNetworkRules( ).remove( r );\n        }\n        ruleGroup = EntityWrapper.get( NetworkGroup.class ).mergeAndCommit( ruleGroup );\n      } catch ( final Exception ex ) {\n        Logs.extreme( ).error( ex, ex );\n        throw new EucalyptusCloudException( \"RevokeSecurityGroupIngress failed because: \" + ex.getMessage( ), ex );\n      }\n      return reply;\n    } else if ( ( request.getIpPermissions( ).size( ) == 1 ) && ( request.getIpPermissions( ).get( 0 ).getIpProtocol( ) == null ) ) {\n      //LAME: this is for the query-based clients which send incomplete named-network requests.\n      for ( final NetworkRule rule : ruleList ) {\n        if ( ruleGroup.getNetworkRules( ).remove( rule ) ) {\n          reply.set_return( true );\n        }\n      }\n      if ( reply.get_return( ) ) {\n        try {\n          ruleGroup = EntityWrapper.get( ruleGroup ).mergeAndCommit( ruleGroup );\n        } catch ( final Exception ex ) {\n          Logs.extreme( ).error( ex, ex );\n          throw new EucalyptusCloudException( \"RevokeSecurityGroupIngress failed because: \" + ex.getMessage( ), ex );\n        }\n      }\n      return reply;\n    } else {\n      return reply.markFailed( );\n    }\n  }","commit_id":"d75b4e63e3db893e5d438d91df42fb01c12f4f62","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DescribeSecurityGroupsResponseType describe( final DescribeSecurityGroupsType request ) throws EucalyptusCloudException {\n    final Context ctx = Contexts.lookup( );\n    NetworkGroups.createDefault( ctx.getUserFullName( ) );//ensure the default group exists to cover some old broken installs\n    final List<String> groupNames = request.getSecurityGroupSet( );\n    DescribeSecurityGroupsResponseType reply = ( DescribeSecurityGroupsResponseType ) request.getReply( );\n    final List<SecurityGroupItemType> replyList = reply.getSecurityGroupInfo( );\n    if ( Contexts.lookup( ).hasAdministrativePrivileges( ) ) {\n      try {\n        for ( SecurityGroupItemType group : Iterables.filter( NetworkGroupUtil.getUserNetworksAdmin( ctx.getUserFullName( ), request.getSecurityGroupSet( ) ),\n                                                              new Predicate<SecurityGroupItemType>( ) {\n                                                                @Override\n                                                                public boolean apply( SecurityGroupItemType arg0 ) {\n                                                                  return groupNames.isEmpty( ) || groupNames.contains( arg0.getGroupName( ) );\n                                                                }\n                                                              } ) ) {\n          replyList.add( group );\n        }\n      } catch ( Exception e ) {\n        LOG.debug( e, e );\n      }\n    } else {\n      try {\n        for ( SecurityGroupItemType group : Iterables.filter( NetworkGroupUtil.getUserNetworks( ctx.getUserFullName( ), request.getSecurityGroupSet( ) ),\n                                                              new Predicate<SecurityGroupItemType>( ) {\n                                                                @Override\n                                                                public boolean apply( SecurityGroupItemType arg0 ) {\n                                                                  if ( !Permissions.isAuthorized( PolicySpec.VENDOR_EC2, PolicySpec.EC2_RESOURCE_SECURITYGROUP,\n                                                                                                  arg0.getGroupName( ), ctx.getAccount( ),\n                                                                                                  PolicySpec.requestToAction( request ), ctx.getUser( ) ) ) {\n                                                                    return false;\n                                                                  }\n                                                                  return groupNames.isEmpty( ) || groupNames.contains( arg0.getGroupName( ) );\n                                                                }\n                                                              } ) ) {\n          replyList.add( group );\n        }\n      } catch ( Exception e ) {\n        LOG.debug( e, e );\n      }\n    }\n    return reply;\n  }","id":69839,"modified_method":"public DescribeSecurityGroupsResponseType describe( final DescribeSecurityGroupsType request ) throws EucalyptusCloudException {\n    final DescribeSecurityGroupsResponseType reply = request.getReply( );\n    final Context ctx = Contexts.lookup( );\n    NetworkGroups.createDefault( ctx.getUserFullName( ) );//ensure the default group exists to cover some old broken installs\n\n    final List<String> groupNames = request.getSecurityGroupSet( );\n    final Predicate<NetworkGroup> argListFilter = new Predicate<NetworkGroup>( ) {\n      @Override\n      public boolean apply( final NetworkGroup arg0 ) {\n        return groupNames.isEmpty( ) || groupNames.contains( arg0.getName( ) );\n      }\n    };\n    \n    Predicate<NetworkGroup> netFilter = Predicates.and( argListFilter, userAuthFilter( ) );\n    OwnerFullName ownerFn = AccountFullName.getInstance( ctx.getAccount( ) );\n    if ( Contexts.lookup( ).hasAdministrativePrivileges( ) ) {\n      ownerFn = null;\n      netFilter = argListFilter;\n    }\n    \n    final EntityTransaction db = Entities.get( NetworkGroup.class );\n    try {\n      final Iterable<NetworkGroup> matches = Iterables.filter( Entities.query( NetworkGroup.named( ownerFn, null ) ), netFilter );\n      final Iterable<SecurityGroupItemType> transformed = Iterables.transform( matches, TypeMappers.lookup( NetworkGroup.class, SecurityGroupItemType.class ) );\n      Iterables.addAll( reply.getSecurityGroupInfo( ), transformed );\n    } catch ( final Exception e ) {\n      LOG.debug( e, e );\n    }\n    return reply;\n  }","commit_id":"d75b4e63e3db893e5d438d91df42fb01c12f4f62","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public AuthorizeSecurityGroupIngressResponseType authorize( AuthorizeSecurityGroupIngressType request ) throws Exception {\n    Context ctx = Contexts.lookup( );\n    NetworkGroups.createDefault( ctx.getUserFullName( ) );//ensure the default group exists to cover some old broken installs\n    AuthorizeSecurityGroupIngressResponseType reply = ( AuthorizeSecurityGroupIngressResponseType ) request.getReply( );\n    NetworkGroup ruleGroup = NetworkGroupUtil.getUserNetworkRulesGroup( ctx.getUserFullName( ), request.getGroupName( ) );\n    if ( !ctx.hasAdministrativePrivileges( )\n         && !Permissions.isAuthorized( PolicySpec.VENDOR_EC2, PolicySpec.EC2_RESOURCE_SECURITYGROUP, request.getGroupName( ), ctx.getAccount( ),\n                                       PolicySpec.requestToAction( request ), ctx.getUser( ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to authorize network group \" + request.getGroupName( ) + \" for \" + ctx.getUser( ) );\n    }\n    final List<NetworkRule> ruleList = Lists.newArrayList( );\n    for ( IpPermissionType ipPerm : request.getIpPermissions( ) ) {\n      try {\n        ruleList.addAll( NetworkGroupUtil.getNetworkRules( ipPerm ) );\n      } catch ( IllegalArgumentException ex ) {\n        LOG.error( ex.getMessage( ) );\n        reply.set_return( false );\n        return reply;\n      }\n    }\n    if ( Iterables.any( ruleGroup.getNetworkRules( ), new Predicate<NetworkRule>( ) {\n      @Override\n      public boolean apply( NetworkRule rule ) {\n        for ( NetworkRule r : ruleList ) {\n          if ( r.equals( rule ) && r.getNetworkPeers( ).equals( rule.getNetworkPeers( ) ) && r.getIpRanges( ).equals( rule.getIpRanges( ) ) ) {\n            return true || !r.isValid( );\n          }\n        }\n        return false;\n      }\n    } ) ) {\n      reply.set_return( false );\n      return reply;\n    } else {\n      ruleGroup.getNetworkRules( ).addAll( ruleList );\n      EntityWrapper.get( ruleGroup ).mergeAndCommit( ruleGroup );\n      reply.set_return( true );\n    }\n    return reply;\n  }","id":69840,"modified_method":"public AuthorizeSecurityGroupIngressResponseType authorize( final AuthorizeSecurityGroupIngressType request ) throws Exception {\n    final Context ctx = Contexts.lookup( );\n    NetworkGroups.createDefault( ctx.getUserFullName( ) );//ensure the default group exists to cover some old broken installs\n    final AuthorizeSecurityGroupIngressResponseType reply = ( AuthorizeSecurityGroupIngressResponseType ) request.getReply( );\n    final NetworkGroup ruleGroup = NetworkGroupUtil.getUserNetworkRulesGroup( ctx.getUserFullName( ), request.getGroupName( ) );\n    if ( !ctx.hasAdministrativePrivileges( )\n         && !Permissions.isAuthorized( PolicySpec.VENDOR_EC2, PolicySpec.EC2_RESOURCE_SECURITYGROUP, request.getGroupName( ), ctx.getAccount( ),\n                                       PolicySpec.requestToAction( request ), ctx.getUser( ) ) ) {\n      throw new EucalyptusCloudException( \"Not authorized to authorize network group \" + request.getGroupName( ) + \" for \" + ctx.getUser( ) );\n    }\n    final List<NetworkRule> ruleList = Lists.newArrayList( );\n    for ( final IpPermissionType ipPerm : request.getIpPermissions( ) ) {\n      try {\n        ruleList.addAll( NetworkGroupUtil.getNetworkRules( ipPerm ) );\n      } catch ( final IllegalArgumentException ex ) {\n        LOG.error( ex.getMessage( ) );\n        reply.set_return( false );\n        return reply;\n      }\n    }\n    if ( Iterables.any( ruleGroup.getNetworkRules( ), new Predicate<NetworkRule>( ) {\n      @Override\n      public boolean apply( final NetworkRule rule ) {\n        for ( final NetworkRule r : ruleList ) {\n          if ( r.equals( rule ) && r.getNetworkPeers( ).equals( rule.getNetworkPeers( ) ) && r.getIpRanges( ).equals( rule.getIpRanges( ) ) ) {\n            return true || !r.isValid( );\n          }\n        }\n        return false;\n      }\n    } ) ) {\n      reply.set_return( false );\n      return reply;\n    } else {\n      ruleGroup.getNetworkRules( ).addAll( ruleList );\n      EntityWrapper.get( ruleGroup ).mergeAndCommit( ruleGroup );\n      reply.set_return( true );\n    }\n    return reply;\n  }","commit_id":"d75b4e63e3db893e5d438d91df42fb01c12f4f62","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public CreateSecurityGroupResponseType create( CreateSecurityGroupType request ) throws EucalyptusCloudException, DuplicateMetadataException {\n    Context ctx = Contexts.lookup( );\n    NetworkGroups.createDefault( ctx.getUserFullName( ) );\n    /**\n     * GRZE:WARN: do this /first/, ensure the default group exists to cover some old broken installs\n     **/\n    if ( !Types.isContextAuthorized( null ) ) {\n\n    }\n    String action = PolicySpec.requestToAction( request );\n    if ( !ctx.hasAdministrativePrivileges( ) ) {\n      if ( !Permissions.isAuthorized( PolicySpec.VENDOR_EC2, PolicySpec.EC2_RESOURCE_SECURITYGROUP, \"\", ctx.getAccount( ), action, ctx.getUser( ) ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to create network group for \" + ctx.getUser( ) );\n      }\n      if ( !Permissions.canAllocate( PolicySpec.VENDOR_EC2, PolicySpec.EC2_RESOURCE_SECURITYGROUP, \"\", action, ctx.getUser( ), 1L ) ) {\n        throw new EucalyptusCloudException( \"Quota exceeded to create network group for \" + ctx.getUser( ) );\n      }\n    }\n    CreateSecurityGroupResponseType reply = ( CreateSecurityGroupResponseType ) request.getReply( );\n    NetworkGroup newGroup = NetworkGroups.create( ctx.getUserFullName( ), request.getGroupName( ), request.getGroupDescription( ) );\n    try {\n      EntityWrapper.get( NetworkGroup.class ).mergeAndCommit( newGroup );\n      return reply;\n    } catch ( final Exception ex ) {\n      Logs.extreme( ).error( ex, ex );\n//      if( ex.getCause( ) instanceof  ) {\n//        return reply.markFailed( );\n//      } else {\n      throw new EucalyptusCloudException( \"CreatSecurityGroup failed because: \" + ex.getMessage( ), ex );\n//      }\n    }\n  }","id":69841,"modified_method":"public CreateSecurityGroupResponseType create( final CreateSecurityGroupType request ) throws EucalyptusCloudException, DuplicateMetadataException {\n    final Context ctx = Contexts.lookup( );\n    NetworkGroups.createDefault( ctx.getUserFullName( ) );\n    /**\n     * GRZE:WARN: do this /first/, ensure the default group exists to cover some old broken installs\n     **/\n    if ( !Types.isContextAuthorized( null ) ) {\n\n    }\n    final String action = PolicySpec.requestToAction( request );\n    if ( !ctx.hasAdministrativePrivileges( ) ) {\n      if ( !Permissions.isAuthorized( PolicySpec.VENDOR_EC2, PolicySpec.EC2_RESOURCE_SECURITYGROUP, \"\", ctx.getAccount( ), action, ctx.getUser( ) ) ) {\n        throw new EucalyptusCloudException( \"Not authorized to create network group for \" + ctx.getUser( ) );\n      }\n      if ( !Permissions.canAllocate( PolicySpec.VENDOR_EC2, PolicySpec.EC2_RESOURCE_SECURITYGROUP, \"\", action, ctx.getUser( ), 1L ) ) {\n        throw new EucalyptusCloudException( \"Quota exceeded to create network group for \" + ctx.getUser( ) );\n      }\n    }\n    final CreateSecurityGroupResponseType reply = ( CreateSecurityGroupResponseType ) request.getReply( );\n    final NetworkGroup newGroup = NetworkGroups.create( ctx.getUserFullName( ), request.getGroupName( ), request.getGroupDescription( ) );\n    try {\n      EntityWrapper.get( NetworkGroup.class ).mergeAndCommit( newGroup );\n      return reply;\n    } catch ( final Exception ex ) {\n      Logs.extreme( ).error( ex, ex );\n//      if( ex.getCause( ) instanceof  ) {\n//        return reply.markFailed( );\n//      } else {\n      throw new EucalyptusCloudException( \"CreatSecurityGroup failed because: \" + ex.getMessage( ), ex );\n//      }\n    }\n  }","commit_id":"d75b4e63e3db893e5d438d91df42fb01c12f4f62","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Deprecated\n  public static List<SecurityGroupItemType> getUserNetworks( OwnerFullName ownerFullName, List<String> groupNames ) throws EucalyptusCloudException {\n    List<SecurityGroupItemType> groupInfoList = Lists.newArrayList( );\n    List<NetworkGroup> userGroups = Lists.newArrayList( );\n    if ( groupNames.isEmpty( ) ) {\n      userGroups.addAll( NetworkGroupUtil.getUserNetworkRulesGroup( ownerFullName ) );\n    } else {\n      for ( String groupName : groupNames ) {\n        try {\n          userGroups.add( NetworkGroupUtil.getUserNetworkRulesGroup( ownerFullName, groupName ) );\n        } catch ( Exception e ) {}\n      }\n    }\n    for ( NetworkGroup group : NetworkGroupUtil.getUserNetworkRulesGroup( ownerFullName ) ) {\n      groupInfoList.add( getAsSecurityGroupItemType( ownerFullName, group ) );\n    }\n    return groupInfoList;\n  }","id":69842,"modified_method":"@Deprecated\n  public static List<SecurityGroupItemType> getUserNetworks( OwnerFullName ownerFullName, List<String> groupNames ) throws EucalyptusCloudException {\n    List<SecurityGroupItemType> groupInfoList = Lists.newArrayList( );\n    List<NetworkGroup> userGroups = Lists.newArrayList( );\n    if ( groupNames.isEmpty( ) ) {\n      userGroups.addAll( NetworkGroupUtil.getUserNetworkRulesGroup( ownerFullName ) );\n    } else {\n      for ( String groupName : groupNames ) {\n        try {\n          userGroups.add( NetworkGroupUtil.getUserNetworkRulesGroup( ownerFullName, groupName ) );\n        } catch ( Exception e ) {}\n      }\n    }\n    for ( NetworkGroup group : NetworkGroupUtil.getUserNetworkRulesGroup( ownerFullName ) ) {\n      SecurityGroupItemType groupItem = TypeMappers.transform( group, SecurityGroupItemType.class );\n      groupInfoList.add( groupItem );\n    }\n    return groupInfoList;\n  }","commit_id":"d75b4e63e3db893e5d438d91df42fb01c12f4f62","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DescribeAvailabilityZonesResponseType DescribeAvailabilityZones( DescribeAvailabilityZonesType request ) throws EucalyptusCloudException {\n    final DescribeAvailabilityZonesResponseType reply = ( DescribeAvailabilityZonesResponseType ) request.getReply( );\n    final List<String> args = request.getAvailabilityZoneSet( );\n    final Filter filter = Filters.generate( request.getFilterSet(), Cluster.class );\n    \n    if ( Contexts.lookup( ).hasAdministrativePrivileges( ) ) {\n      for ( String keyword : describeKeywords.keySet( ) ) {\n        if ( args.remove( keyword ) ) {\n          reply.getAvailabilityZoneInfo( ).addAll( describeKeywords.get( keyword ).get( ) );\n          return reply;\n        }\n      }\n    } else {\n      for ( String keyword : describeKeywords.keySet( ) ) {\n        args.remove( keyword );\n      }\n    }\n\n    final Clusters clusterRegistry = Clusters.getInstance( );\n    final List<Cluster> clusters;\n    if ( args.isEmpty( ) ) {\n      clusters = Lists.newArrayList( clusterRegistry.listValues( ) );\n      Iterables.addAll( clusters, Iterables.filter(\n          clusterRegistry.listDisabledValues( ),\n          Predicates.not(\n              CollectionUtils.propertyPredicate(\n                  Collections2.transform( clusters, CloudMetadatas.toDisplayName() ),\n                  CloudMetadatas.toDisplayName() ) ) ) );\n    } else {\n      clusters = Lists.newArrayList();\n      for ( final String partitionName : request.getAvailabilityZoneSet( ) ) {\n        try {\n          clusters.add( Iterables.find( clusterRegistry.listValues( ), new Predicate<Cluster>( ) {\n            @Override\n            public boolean apply( Cluster input ) {\n              return partitionName.equals( input.getConfiguration( ).getPartition( ) );\n            }\n          } ) );\n        } catch ( NoSuchElementException e ) {\n          try {\n            clusters.add( clusterRegistry.lookup( partitionName ) );\n          } catch ( NoSuchElementException ex ) {\n            try {\n              clusters.add( clusterRegistry.lookupDisabled( partitionName ) );\n            } catch ( NoSuchElementException ex2 ) { }\n          }\n        }\n      }\n    }\n\n    for ( final Cluster c : Iterables.filter( clusters, filter.asPredicate() ) ) {\n      reply.getAvailabilityZoneInfo( ).addAll( this.getDescriptionEntry( c ) );\n    }\n\n    return reply;\n  }","id":69843,"modified_method":"public DescribeAvailabilityZonesResponseType DescribeAvailabilityZones( DescribeAvailabilityZonesType request ) throws EucalyptusCloudException {\n    final DescribeAvailabilityZonesResponseType reply = request.getReply( );\n    final List<String> args = request.getAvailabilityZoneSet( );\n    final Predicate<Object> filterPredicate = Filters.generateFor( request.getFilterSet(), Cluster.class )\n        .withOptionalInternalFilter(\n            \"zone-name\",\n            Iterables.filter( args, Predicates.not( Predicates.in( describeKeywords.keySet( ) ) ) ) )\n        .generate( )\n        .asPredicate( );\n\n    final boolean admin = Contexts.lookup( ).hasAdministrativePrivileges( );\n    for ( String keyword : describeKeywords.keySet( ) ) {\n      if ( args.remove( keyword ) && admin ) {\n        reply.getAvailabilityZoneInfo( ).addAll( describeKeywords.get( keyword ).apply( filterPredicate ) );\n        return reply;\n      }\n    }\n\n    final Clusters clusterRegistry = Clusters.getInstance( );\n    final List<Cluster> clusters = Lists.newArrayList( clusterRegistry.listValues( ) );\n    Iterables.addAll( clusters, Iterables.filter(\n        clusterRegistry.listDisabledValues( ),\n        Predicates.not(\n            CollectionUtils.propertyPredicate(\n                Collections2.transform( clusters, CloudMetadatas.toDisplayName() ),\n                CloudMetadatas.toDisplayName() ) ) ) );\n\n    for ( final Cluster c : Iterables.filter( clusters, filterPredicate ) ) {\n      reply.getAvailabilityZoneInfo( ).addAll( this.getDescriptionEntry( c ) );\n    }\n\n    return reply;\n  }","commit_id":"6c08aa0aa95b149446a78bafe3abf9bccbca3bb0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private List<ClusterInfoType> getDescriptionEntry( Cluster c ) {\n    final List<ClusterInfoType> ret = Lists.newArrayList( );\n    ret.add( new ClusterInfoType( c.getConfiguration( ).getPartition( ), ClusterFunctions.STATE.apply( c ) ) );\n    NavigableSet<String> tagList = new ConcurrentSkipListSet<String>( );\n    if ( tagList.size( ) == 1 )\n      tagList = c.getNodeTags( );\n    else tagList.retainAll( c.getNodeTags( ) );\n    return ret;\n  }","id":69844,"modified_method":"private List<ClusterInfoType> getDescriptionEntry( Cluster c ) {\n    final List<ClusterInfoType> ret = Lists.newArrayList( );\n    ret.add( new ClusterInfoType( c.getConfiguration( ).getPartition( ), ClusterFunctions.STATE.apply( c ) ) );\n    NavigableSet<String> tagList = new ConcurrentSkipListSet<>( );\n    if ( tagList.size( ) == 1 )\n      tagList = c.getNodeTags( );\n    else tagList.retainAll( c.getNodeTags( ) );\n    return ret;\n  }","commit_id":"6c08aa0aa95b149446a78bafe3abf9bccbca3bb0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public MigrateInstancesResponseType migrateInstances( final MigrateInstancesType request ) throws EucalyptusCloudException {\n    final MigrateInstancesResponseType reply = request.getReply( );\n    final Context context = Contexts.lookup( );\n    if ( !context.isAdministrator( ) || !Permissions.isAuthorized(\n        VENDOR_EC2,\n        EC2_RESOURCE_INSTANCE,\n        \"\",\n        null,\n        EC2_MIGRATEINSTANCES,\n        context.getAuthContext() )  ) {\n      throw new EucalyptusCloudException( \"Authorization failed.\" );\n    }\n    if ( !Strings.isNullOrEmpty( request.getSourceHost( ) ) ) {\n      final Predicate<VmInstance> filterHost = new Predicate<VmInstance>( ) {\n        @Override\n        public boolean apply( @Nullable VmInstance input ) {\n          String vmHost = URI.create( input.getServiceTag( ) ).getHost( );\n          return Strings.nullToEmpty( vmHost ).equals( request.getSourceHost( ) );\n        }\n      };\n      for ( ServiceConfiguration ccConfig : Topology.enabledServices( ClusterController.class ) ) {\n        try {\n          ServiceConfiguration node = Nodes.lookup( ccConfig, request.getSourceHost( ) );//found the node!\n          Cluster cluster = Clusters.lookup( ccConfig );//lookup the cluster\n          final List<VmInstance> instances = VmInstances.list(filterHost);\n          for(final VmInstance instance : instances){\n            try{\n              updatePasswordIfWindows(instance, ccConfig);\n            }catch(final Exception ex){\n              ;\n            }\n          }\n          \n          try {\n            cluster.migrateInstances( request.getSourceHost( ), request.getAllowHosts( ), request.getDestinationHosts( ) );//submit the migration request\n            return reply.markWinning( );\n          } catch ( Exception ex ) {\n            LOG.error( ex );\n            throw new EucalyptusCloudException( \"Migrating off of node \"\n                                                + request.getSourceHost( )\n                                                + \" failed because of: \"\n                                                + Strings.nullToEmpty( ex.getMessage( ) ).replaceAll( \".*:status=\", \"\" ), ex );\n          }\n        } catch ( EucalyptusCloudException ex ) {\n          throw ex;\n        } catch ( NoSuchElementException ex ) {\n          // Ignore and continue\n        } catch ( Exception ex ) {\n          LOG.error( ex );\n          throw new EucalyptusCloudException( \"Migrating off of node \" + request.getSourceHost( ) + \" failed because of: \" + ex.getMessage( ), ex );\n        }\n      }\n      throw new EucalyptusCloudException( \"No ENABLED cluster found which can service the requested node: \" + request.getSourceHost( ) );\n    } else if ( !Strings.isNullOrEmpty( request.getInstanceId( ) ) ) {\n      final VmInstance vm;\n      try {\n        vm = VmInstances.lookup( request.getInstanceId( ) );\n        if ( !VmInstance.VmState.RUNNING.apply( vm ) ) {\n          throw new EucalyptusCloudException( \"Cannot migrate a \" + vm.getState( ).name( ).toLowerCase( ) + \" instance: \" + request.getInstanceId( ) );\n        }\n      } catch ( TerminatedInstanceException ex ) {\n        throw new EucalyptusCloudException( \"Cannot migrate a terminated instance: \" + request.getInstanceId( ), ex );\n      } catch ( NoSuchElementException ex ) {\n        throw new EucalyptusCloudException( \"Failed to lookup requested instance: \" + request.getInstanceId( ), ex );\n      }\n      try {\n        ServiceConfiguration ccConfig = Topology.lookup( ClusterController.class, vm.lookupPartition( ) );\n        Cluster cluster = Clusters.lookup( ccConfig );\n        // update windows password\n        try{\n          updatePasswordIfWindows(vm, ccConfig);\n        }catch(final Exception ex){\n          ;\n        }\n        try {\n          cluster.migrateInstance( request.getInstanceId( ), request.getAllowHosts( ), request.getDestinationHosts( ) );\n          return reply.markWinning( );\n        } catch ( Exception ex ) {\n          LOG.error( ex );\n          throw new EucalyptusCloudException( \"Migrating instance \"\n                                              + request.getInstanceId( )\n                                              + \" failed because of: \"\n                                              + Strings.nullToEmpty( ex.getMessage( ) ).replaceAll( \".*:status=\", \"\" ), ex );\n        }\n      } catch ( NoSuchElementException ex ) {\n        throw new EucalyptusCloudException( \"Failed to lookup ENABLED cluster for instance \" + request.getInstanceId( ), ex );\n      }\n    } else {\n      throw new EucalyptusCloudException( \"Either the sourceHost or instanceId must be provided\" );\n    }\n  }","id":69845,"modified_method":"public MigrateInstancesResponseType migrateInstances( final MigrateInstancesType request ) throws EucalyptusCloudException {\n    final MigrateInstancesResponseType reply = request.getReply( );\n    final Context context = Contexts.lookup( );\n    if ( !context.isAdministrator( ) || !Permissions.isAuthorized(\n        VENDOR_EC2,\n        EC2_RESOURCE_INSTANCE,\n        \"\",\n        null,\n        EC2_MIGRATEINSTANCES,\n        context.getAuthContext() )  ) {\n      throw new EucalyptusCloudException( \"Authorization failed.\" );\n    }\n    if ( !Strings.isNullOrEmpty( request.getSourceHost( ) ) ) {\n      final Predicate<VmInstance> filterHost = new Predicate<VmInstance>( ) {\n        @Override\n        public boolean apply( VmInstance input ) {\n          String vmHost = URI.create( input.getServiceTag( ) ).getHost( );\n          return Strings.nullToEmpty( vmHost ).equals( request.getSourceHost( ) );\n        }\n      };\n      for ( ServiceConfiguration ccConfig : Topology.enabledServices( ClusterController.class ) ) {\n        try {\n          ServiceConfiguration node = Nodes.lookup( ccConfig, request.getSourceHost( ) );//found the node!\n          Cluster cluster = Clusters.lookup( ccConfig );//lookup the cluster\n          final List<VmInstance> instances = VmInstances.list(filterHost);\n          for(final VmInstance instance : instances){\n            try{\n              updatePasswordIfWindows(instance, ccConfig);\n            }catch(final Exception ex){\n              ;\n            }\n          }\n          \n          try {\n            cluster.migrateInstances( request.getSourceHost( ), request.getAllowHosts( ), request.getDestinationHosts( ) );//submit the migration request\n            return reply.markWinning( );\n          } catch ( Exception ex ) {\n            LOG.error( ex );\n            throw new EucalyptusCloudException( \"Migrating off of node \"\n                                                + request.getSourceHost( )\n                                                + \" failed because of: \"\n                                                + Strings.nullToEmpty( ex.getMessage( ) ).replaceAll( \".*:status=\", \"\" ), ex );\n          }\n        } catch ( EucalyptusCloudException ex ) {\n          throw ex;\n        } catch ( NoSuchElementException ex ) {\n          // Ignore and continue\n        } catch ( Exception ex ) {\n          LOG.error( ex );\n          throw new EucalyptusCloudException( \"Migrating off of node \" + request.getSourceHost( ) + \" failed because of: \" + ex.getMessage( ), ex );\n        }\n      }\n      throw new EucalyptusCloudException( \"No ENABLED cluster found which can service the requested node: \" + request.getSourceHost( ) );\n    } else if ( !Strings.isNullOrEmpty( request.getInstanceId( ) ) ) {\n      final VmInstance vm;\n      try {\n        vm = VmInstances.lookup( request.getInstanceId( ) );\n        if ( !VmInstance.VmState.RUNNING.apply( vm ) ) {\n          throw new EucalyptusCloudException( \"Cannot migrate a \" + vm.getState( ).name( ).toLowerCase( ) + \" instance: \" + request.getInstanceId( ) );\n        }\n      } catch ( TerminatedInstanceException ex ) {\n        throw new EucalyptusCloudException( \"Cannot migrate a terminated instance: \" + request.getInstanceId( ), ex );\n      } catch ( NoSuchElementException ex ) {\n        throw new EucalyptusCloudException( \"Failed to lookup requested instance: \" + request.getInstanceId( ), ex );\n      }\n      try {\n        ServiceConfiguration ccConfig = Topology.lookup( ClusterController.class, vm.lookupPartition( ) );\n        Cluster cluster = Clusters.lookup( ccConfig );\n        // update windows password\n        try{\n          updatePasswordIfWindows(vm, ccConfig);\n        }catch(final Exception ex){\n        }\n        try {\n          cluster.migrateInstance( request.getInstanceId( ), request.getAllowHosts( ), request.getDestinationHosts( ) );\n          return reply.markWinning( );\n        } catch ( Exception ex ) {\n          LOG.error( ex );\n          throw new EucalyptusCloudException( \"Migrating instance \"\n                                              + request.getInstanceId( )\n                                              + \" failed because of: \"\n                                              + Strings.nullToEmpty( ex.getMessage( ) ).replaceAll( \".*:status=\", \"\" ), ex );\n        }\n      } catch ( NoSuchElementException ex ) {\n        throw new EucalyptusCloudException( \"Failed to lookup ENABLED cluster for instance \" + request.getInstanceId( ), ex );\n      }\n    } else {\n      throw new EucalyptusCloudException( \"Either the sourceHost or instanceId must be provided\" );\n    }\n  }","commit_id":"6c08aa0aa95b149446a78bafe3abf9bccbca3bb0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DescribeRegionsResponseType DescribeRegions( final DescribeRegionsType request ) throws EucalyptusCloudException {//TODO:GRZE:URGENT fix the behaviour here.\n    final DescribeRegionsResponseType reply = ( DescribeRegionsResponseType ) request.getReply( );\n    for ( final Class<? extends ComponentId> componentIdClass : ImmutableList.of(Eucalyptus.class) ) {\n      try {\n        final Component component = Components.lookup( componentIdClass );\n        final String region = component.getComponentId( ).name();\n        final List<Region> regions = Lists.newArrayList();\n        final NavigableSet<ServiceConfiguration> configs = component.services( );\n        if ( !configs.isEmpty( ) && Component.State.ENABLED.equals( configs.first( ).lookupState( ) ) ) {\n          regions.add( new Region( region, ServiceUris.remotePublicify( configs.first() ).toASCIIString() ) );\n        }\n\n        final Filter filter = Filters.generate( request.getFilterSet(), Region.class );\n        final Predicate<Object> requested = Predicates.and(\n            filterByName( request.getRegions() ),\n            filter.asPredicate() );\n        for ( final Region item : Iterables.filter( regions, requested ) ) {\n          reply.getRegionInfo( ).add( new RegionInfoType( item.getDisplayName(), item.getEndpointUrl() ) );\n        }\n      } catch ( NoSuchElementException ex ) {\n        LOG.error( ex, ex );\n      }\n    }\n    return reply;\n  }","id":69846,"modified_method":"public DescribeRegionsResponseType DescribeRegions( final DescribeRegionsType request ) throws EucalyptusCloudException {//TODO:GRZE:URGENT fix the behaviour here.\n    final DescribeRegionsResponseType reply = request.getReply( );\n    for ( final Class<? extends ComponentId> componentIdClass : ImmutableList.of(Eucalyptus.class) ) {\n      try {\n        final Component component = Components.lookup( componentIdClass );\n        final String region = component.getComponentId( ).name();\n        final List<Region> regions = Lists.newArrayList();\n        final NavigableSet<ServiceConfiguration> configs = component.services( );\n        if ( !configs.isEmpty( ) && Component.State.ENABLED.equals( configs.first( ).lookupState( ) ) ) {\n          regions.add( new Region( region, ServiceUris.remotePublicify( configs.first() ).toASCIIString() ) );\n        }\n\n        final Predicate<Object>  filterPredicate = Filters.generateFor( request.getFilterSet(), Region.class )\n            .withOptionalInternalFilter( \"region-name\", request.getRegions() )\n            .generate()\n            .asPredicate();\n        for ( final Region item : Iterables.filter( regions, filterPredicate ) ) {\n          reply.getRegionInfo( ).add( new RegionInfoType( item.getDisplayName(), item.getEndpointUrl() ) );\n        }\n      } catch ( NoSuchElementException ex ) {\n        LOG.error( ex, ex );\n      }\n    }\n    return reply;\n  }","commit_id":"6c08aa0aa95b149446a78bafe3abf9bccbca3bb0","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public DeregisterImageResponseType deregister( DeregisterImageType request ) throws EucalyptusCloudException {\n    DeregisterImageResponseType reply = ( DeregisterImageResponseType ) request.getReply( );\n    EntityWrapper<ImageInfo> db = EntityWrapper.get( ImageInfo.class );\n    \n    ImageInfo imgInfo = null;\n    try {\n      imgInfo = db.getUnique( Images.exampleWithImageId( request.getImageId( ) ) );\n      if ( !imgInfo.getOwner( ).getUniqueId( ).equals( request.getUserErn( ).getUniqueId( ) ) && !request.isAdministrator( ) ) throw new EucalyptusCloudException(\n                                                                                                                                                                   \"Only the owner of a registered image or the administrator can deregister it.\" );\n      WalrusUtil.invalidate( imgInfo );\n      db.commit( );\n      reply.set_return( true );\n    } catch ( EucalyptusCloudException e ) {\n      reply.set_return( false );\n      db.rollback( );\n    }\n    return reply;\n  }","id":69847,"modified_method":"public DeregisterImageResponseType deregister( DeregisterImageType request ) throws EucalyptusCloudException {\n    DeregisterImageResponseType reply = request.getReply( );\n    Context ctx = Contexts.lookup( );\n    User requestUser = ctx.getUser( );\n    Account requestAccount = ctx.getAccount( );\n    try {\n      ImageInfo imgInfo = EntityWrapper.get( ImageInfo.class ).lookupAndClose( Images.exampleWithImageId( request.getImageId( ) ) );\n      if( requestUser.isAccountAdmin( ) && imgInfo.getOwnerAccountId( ).equals( ctx.getAccount( ).getId( ) ) ) {\n        Images.deregisterImage( imgInfo.getDisplayName( ) );\n      } else if( ctx.hasSystemPrivileges( ) ) {\n        Images.deregisterImage( imgInfo.getDisplayName( ) );\n     } else {\n        throw new EucalyptusCloudException( \"Only the owner of a registered image or the administrator can deregister it.\" );        \n      }\n      return reply;\n    } catch ( NoSuchImageException ex ) {\n      LOG.trace( ex );\n      reply.set_return( false );\n      return reply;\n    } catch ( NoSuchElementException ex ) {\n      LOG.trace( ex );\n      reply.set_return( false );\n      return reply;\n    }\n  }","commit_id":"2043afe2ab49965555507775970bb6f3d7315faa","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static void deregisterImage( String imageId ) throws NoSuchImageException {\n    EntityWrapper<ImageInfo> db = EntityWrapper.get( ImageInfo.class );\n    try {\n      ImageInfo img = db.getUnique( Images.exampleWithImageId( imageId ) );\n      img.setState( Image.State.deregistered );\n      db.commit( );\n    } catch ( EucalyptusCloudException e ) {\n      db.rollback( );\n      throw new NoSuchImageException( \"Failed to lookup image: \" + imageId, e );\n    }\n  }","id":69848,"modified_method":"public static void deregisterImage( String imageId ) throws NoSuchImageException {\n    EntityWrapper<ImageInfo> db = EntityWrapper.get( ImageInfo.class );\n    try {\n      ImageInfo img = db.getUnique( Images.exampleWithImageId( imageId ) );\n      WalrusUtil.invalidate( img );\n      img.setState( Image.State.deregistered );\n      db.commit( );\n    } catch ( EucalyptusCloudException e ) {\n      db.rollback( );\n      throw new NoSuchImageException( \"Failed to lookup image: \" + imageId, e );\n    }\n  }","commit_id":"2043afe2ab49965555507775970bb6f3d7315faa","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public FullName getOwner( ) {\n    if ( super.owner == null && this.ownerUserId != null ) {\n      return ( super.owner = Accounts.lookupUserFullNameById( this.ownerUserId ) );\n    } else if ( super.owner == null && this.ownerUserId != null ) {\n      return FakePrincipals.NOBODY_USER_ERN;\n    } else {\n      return super.owner;\n    }\n  }","id":69849,"modified_method":"@Override\n  public FullName getOwner( ) {\n    if ( super.owner == null && this.ownerUserId != null ) {\n      return ( super.owner = Accounts.lookupUserFullNameById( this.ownerUserId ) );\n    } else if ( super.owner == null && this.ownerUserId == null ) {\n      return FakePrincipals.NOBODY_USER_ERN;\n    } else {\n      return super.owner;\n    }\n  }","commit_id":"2043afe2ab49965555507775970bb6f3d7315faa","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n   protected Widget createMainWidget()\n   {\n      VerticalPanel mainPanel = new VerticalPanel();\n      mainPanel.setStylePrimaryName(RESOURCES.styles().mainWidget());\n \n      updatesTable_ = new CellTable<PendingUpdate>(\n            15,\n            GWT.<PackagesCellTableResources> create(PackagesCellTableResources.class));\n      updatesTable_.setKeyboardSelectionPolicy(KeyboardSelectionPolicy.DISABLED);\n      updatesTable_.setSelectionModel(new NoSelectionModel<PendingUpdate>());\n      updatesTable_.setWidth(\"100%\", true);\n      \n      UpdateColumn updateColumn = new UpdateColumn();\n      updatesTable_.addColumn(updateColumn);\n      updatesTable_.setColumnWidth(updateColumn, 30, Unit.PX);\n      \n      \n      TextColumn<PendingUpdate> nameColumn = new TextColumn<PendingUpdate>() {\n         public String getValue(PendingUpdate update)\n         {\n            return update.getUpdateInfo().getPackageName();\n         } \n      };  \n      updatesTable_.addColumn(nameColumn, \"Package\");\n      updatesTable_.setColumnWidth(nameColumn, 28, Unit.PCT);\n      \n      TextColumn<PendingUpdate> installedColumn = new TextColumn<PendingUpdate>() {\n         public String getValue(PendingUpdate update)\n         {\n            return update.getUpdateInfo().getInstalled();\n         } \n      };  \n      updatesTable_.addColumn(installedColumn, \"Installed\");\n      updatesTable_.setColumnWidth(installedColumn, 28, Unit.PCT);\n      \n      TextColumn<PendingUpdate> availableColumn = new TextColumn<PendingUpdate>() {\n         public String getValue(PendingUpdate update)\n         {\n            return update.getUpdateInfo().getAvailable();\n         } \n      };  \n      updatesTable_.addColumn(availableColumn, \"Available\");\n      updatesTable_.setColumnWidth(availableColumn, 28, Unit.PCT);\n      \n      ImageButtonColumn<PendingUpdate> newsColumn = \n         new ImageButtonColumn<PendingUpdate>(\n           AbstractImagePrototype.create(ThemeResources.INSTANCE.newsButton()),\n           new OperationWithInput<PendingUpdate>() {\n             public void execute(PendingUpdate update)\n             {\n                globalDisplay_.openMinimalWindow(\n                                           update.getUpdateInfo().getNewsUrl(),\n                                           false, \n                                           700, \n                                           800, \n                                           \"_rstudio_package_news\", \n                                           true);\n             }  \n           }) \n           {\n               @Override\n               protected boolean showButton(PendingUpdate update)\n               {\n                  return !StringUtil.isNullOrEmpty(\n                                          update.getUpdateInfo().getNewsUrl());\n               }\n           };\n      updatesTable_.addColumn(newsColumn, \"NEWS\");\n      updatesTable_.setColumnWidth(newsColumn, 16, Unit.PCT);\n      \n      ScrollPanel scrollPanel = new ScrollPanel();\n      scrollPanel.setWidget(updatesTable_);\n      mainPanel.add(scrollPanel);\n      \n      // query for updates\n      updatesDS_.requestData(new SimpleRequestCallback<JsArray<PackageUpdate>>() {\n\n         @Override\n         public void onResponseReceived(JsArray<PackageUpdate> packageUpdates)\n         {\n            if (packageUpdates.length() > 0)\n            {\n               ArrayList<PendingUpdate> updates = new ArrayList<PendingUpdate>();\n               for (int i=0; i<packageUpdates.length(); i++)\n                  updates.add(new PendingUpdate(packageUpdates.get(i), false));\n               updatesTable_.setPageSize(updates.size());\n               updatesDataProvider_ = new ListDataProvider<PendingUpdate>();\n               updatesDataProvider_.setList(updates);\n               updatesDataProvider_.addDataDisplay(updatesTable_);\n            }\n            else\n            {\n               closeDialog();\n               globalDisplay_.showMessage(\n                     MessageDialog.INFO, \n                     \"Check for Updates\", \n                     \"All packages are up to date.\");\n            }\n         }\n         \n         @Override\n         public void onError(ServerError error)\n         {\n            closeDialog();\n            super.onError(error);            \n         }  \n      });\n \n      return mainPanel;\n   }","id":69850,"modified_method":"@Override\n   protected Widget createMainWidget()\n   {\n      updatesTable_ = new CellTable<PendingUpdate>(\n            15,\n            GWT.<PackagesCellTableResources> create(PackagesCellTableResources.class));\n      updatesTable_.setKeyboardSelectionPolicy(KeyboardSelectionPolicy.DISABLED);\n      updatesTable_.setSelectionModel(new NoSelectionModel<PendingUpdate>());\n      updatesTable_.setWidth(\"100%\", true);\n      \n      UpdateColumn updateColumn = new UpdateColumn();\n      updatesTable_.addColumn(updateColumn);\n      updatesTable_.setColumnWidth(updateColumn, 30, Unit.PX);\n      \n      \n      TextColumn<PendingUpdate> nameColumn = new TextColumn<PendingUpdate>() {\n         public String getValue(PendingUpdate update)\n         {\n            return update.getUpdateInfo().getPackageName();\n         } \n      };  \n      updatesTable_.addColumn(nameColumn, \"Package\");\n      updatesTable_.setColumnWidth(nameColumn, 28, Unit.PCT);\n      \n      TextColumn<PendingUpdate> installedColumn = new TextColumn<PendingUpdate>() {\n         public String getValue(PendingUpdate update)\n         {\n            return update.getUpdateInfo().getInstalled();\n         } \n      };  \n      updatesTable_.addColumn(installedColumn, \"Installed\");\n      updatesTable_.setColumnWidth(installedColumn, 28, Unit.PCT);\n      \n      TextColumn<PendingUpdate> availableColumn = new TextColumn<PendingUpdate>() {\n         public String getValue(PendingUpdate update)\n         {\n            return update.getUpdateInfo().getAvailable();\n         } \n      };  \n      updatesTable_.addColumn(availableColumn, \"Available\");\n      updatesTable_.setColumnWidth(availableColumn, 28, Unit.PCT);\n      \n      ImageButtonColumn<PendingUpdate> newsColumn = \n         new ImageButtonColumn<PendingUpdate>(\n           AbstractImagePrototype.create(ThemeResources.INSTANCE.newsButton()),\n           new OperationWithInput<PendingUpdate>() {\n             public void execute(PendingUpdate update)\n             {\n                globalDisplay_.openMinimalWindow(\n                                           update.getUpdateInfo().getNewsUrl(),\n                                           false, \n                                           700, \n                                           800, \n                                           \"_rstudio_package_news\", \n                                           true);\n             }  \n           }) \n           {\n               @Override\n               protected boolean showButton(PendingUpdate update)\n               {\n                  return !StringUtil.isNullOrEmpty(\n                                          update.getUpdateInfo().getNewsUrl());\n               }\n           };\n      updatesTable_.addColumn(newsColumn, \"NEWS\");\n      updatesTable_.setColumnWidth(newsColumn, 16, Unit.PCT);\n      \n      ScrollPanel scrollPanel = new ScrollPanel();\n      scrollPanel.setStylePrimaryName(RESOURCES.styles().mainWidget());\n      scrollPanel.setWidget(updatesTable_);\n      \n      // query for updates\n      updatesDS_.requestData(new SimpleRequestCallback<JsArray<PackageUpdate>>() {\n\n         @Override\n         public void onResponseReceived(JsArray<PackageUpdate> packageUpdates)\n         {\n            if (packageUpdates.length() > 0)\n            {\n               ArrayList<PendingUpdate> updates = new ArrayList<PendingUpdate>();\n               for (int i=0; i<packageUpdates.length(); i++)\n                  updates.add(new PendingUpdate(packageUpdates.get(i), false));\n               updatesTable_.setPageSize(updates.size());\n               updatesDataProvider_ = new ListDataProvider<PendingUpdate>();\n               updatesDataProvider_.setList(updates);\n               updatesDataProvider_.addDataDisplay(updatesTable_);\n            }\n            else\n            {\n               closeDialog();\n               globalDisplay_.showMessage(\n                     MessageDialog.INFO, \n                     \"Check for Updates\", \n                     \"All packages are up to date.\");\n            }\n         }\n         \n         @Override\n         public void onError(ServerError error)\n         {\n            closeDialog();\n            super.onError(error);            \n         }  \n      });\n \n      return scrollPanel;\n   }","commit_id":"9ceebb94a310044564c49f346ccc0896c681de5c","url":"https://github.com/rstudio/rstudio"},{"original_method":"@Override\n   protected Widget createMainWidget()\n   {\n      VerticalPanel mainPanel = new VerticalPanel();\n      mainPanel.setStylePrimaryName(\n                  ExportPlotDialogResources.INSTANCE.styles().mainWidget());\n      \n      \n   \n      plotSizer_ = new PlotSizer(options_.getWidth(), \n                                 options_.getHeight(),\n                                 options_.getKeepRatio(),\n                                 server_,\n                                 new PlotSizer.Observer() {\n                                    public void onPlotResized(boolean withMouse)\n                                    {\n                                       if (!withMouse)\n                                          center();       \n                                    }\n                                 }); \n      mainPanel.add(plotSizer_);\n       \n      return mainPanel;\n      \n   }","id":69851,"modified_method":"@Override\n   protected Widget createMainWidget()\n   {\n      VerticalPanel mainPanel = new VerticalPanel();    \n   \n      plotSizer_ = new PlotSizer(options_.getWidth(), \n                                 options_.getHeight(),\n                                 options_.getKeepRatio(),\n                                 server_,\n                                 new PlotSizer.Observer() {\n                                    public void onPlotResized(boolean withMouse)\n                                    {\n                                       if (!withMouse)\n                                          center();       \n                                    }\n                                 }); \n      mainPanel.add(plotSizer_);\n       \n      return mainPanel;\n      \n   }","commit_id":"fa290c052c41216cb4a52ef894392fe32d466518","url":"https://github.com/rstudio/rstudio"},{"original_method":"public PlotSizer(int initialWidth, \n                    int initialHeight,\n                    boolean keepRatio,\n                    Widget extraWidget,\n                    PlotsServerOperations server,\n                    final Observer observer)\n   {\n      // alias objects and resources\n      server_ = server;\n      ExportPlotDialogResources resources = ExportPlotDialogResources.INSTANCE;\n           \n      // main widget\n      VerticalPanel verticalPanel = new VerticalPanel();\n      \n      // options panel\n      HorizontalPanel optionsPanel = new HorizontalPanel();\n      optionsPanel.setStylePrimaryName(resources.styles().imageOptions());\n      configureHorizontalOptionsPanel(optionsPanel);\n      \n      // image width\n      HorizontalPanel widthAndHeightPanel = new HorizontalPanel();\n      configureHorizontalOptionsPanel(widthAndHeightPanel);\n      widthAndHeightPanel.add(createImageOptionLabel(\"Width:\"));\n      widthTextBox_ = createImageSizeTextBox();\n      widthTextBox_.addChangeHandler(new ChangeHandler() {\n         @Override\n         public void onChange(ChangeEvent event)\n         {\n            // screen out programmatic sets\n            if (settingDimenensionInProgress_)\n               return;\n            \n            // enforce min size\n            int width = constrainWidth(getImageWidth());\n           \n            // preserve aspect ratio if requested\n            if (getKeepRatio())\n            {  \n               double ratio = (double)lastHeight_ / (double)lastWidth_;\n               int height = constrainHeight((int) (ratio * (double)width));\n               setHeightTextBox(height);\n            }\n  \n            // set width\n            setWidthTextBox(width);\n         }\n         \n      });\n      widthAndHeightPanel.add(widthTextBox_);\n     \n      // image height\n      widthAndHeightPanel.add(new HTML(\"&nbsp;&nbsp;\"));\n      widthAndHeightPanel.add(createImageOptionLabel(\"Height:\"));\n      heightTextBox_ = createImageSizeTextBox();\n      heightTextBox_.addChangeHandler(new ChangeHandler() {\n         @Override\n         public void onChange(ChangeEvent event)\n         {\n            // screen out programmatic sets\n            if (settingDimenensionInProgress_)\n               return;\n            \n            // enforce min size\n            int height = constrainHeight(getImageHeight());\n            \n            // preserve aspect ratio if requested\n            if (getKeepRatio())\n            {\n               double ratio = (double)lastWidth_ / (double)lastHeight_;\n               int width = constrainWidth((int) (ratio * (double)height));\n               setWidthTextBox(width);\n            }\n           \n            // always set height\n            setHeightTextBox(height);\n         }\n         \n      });\n      widthAndHeightPanel.add(heightTextBox_);\n      \n      // add width and height panel to options panel container\n      optionsPanel.add(widthAndHeightPanel);\n  \n      // lock ratio check box\n      optionsPanel.add(new HTML(\"&nbsp;&nbsp;\"));\n      keepRatioCheckBox_ = new CheckBox();\n      keepRatioCheckBox_.setValue(keepRatio);\n      keepRatioCheckBox_.setText(\"Maintain aspect ratio\");\n      optionsPanel.add(keepRatioCheckBox_);\n      \n      // image and sizer in layout panel (create now so we can call\n      // setSize in update button click handler)\n      final LayoutPanel previewPanel = new LayoutPanel(); \n     \n      \n      // update button\n      ThemedButton updateButton = new ThemedButton(\"Update Image Size\", \n                                                    new ClickHandler(){\n         public void onClick(ClickEvent event) \n         {\n            previewPanel.setSize((getImageWidth() + IMAGE_INSET) + \"px\", \n                                (getImageHeight() + IMAGE_INSET) + \"px\");\n            updateImage();\n            \n            observer.onPlotResized(false);\n         }\n      });\n      updateButton.getElement().getStyle().setMarginTop(5, Unit.PX);\n      optionsPanel.add(new HTML(\"&nbsp;\"));\n      optionsPanel.add(updateButton);\n\n      verticalPanel.add(optionsPanel); \n       \n      // image frame\n      imageFrame_ = new ImageFrame();\n      imageFrame_.setUrl(\"about:blank\");\n      imageFrame_.setSize(\"100%\", \"100%\");\n      imageFrame_.setMarginHeight(0);\n      imageFrame_.setMarginWidth(0);\n      imageFrame_.setStylePrimaryName(resources.styles().imagePreview());\n      previewPanel.add(imageFrame_);\n      previewPanel.setWidgetLeftRight(imageFrame_, 0, Unit.PX, IMAGE_INSET, Unit.PX);\n      previewPanel.setWidgetTopBottom(imageFrame_, 0, Unit.PX, IMAGE_INSET, Unit.PX);\n      previewPanel.getWidgetContainerElement(imageFrame_).getStyle().setOverflow(Overflow.VISIBLE);\n      \n      // Stops mouse events from being routed to the iframe, which would\n      // interfere with resizing\n      FlowPanel imageSurface = new FlowPanel();\n      imageSurface.setSize(\"100%\", \"100%\");\n      previewPanel.add(imageSurface);\n      previewPanel.setWidgetTopBottom(imageSurface, 0, Unit.PX, 0, Unit.PX);\n      previewPanel.setWidgetLeftRight(imageSurface, 0, Unit.PX, 0, Unit.PX);\n      \n      // resize gripper\n      ResizeGripper gripper = new ResizeGripper(new ResizeGripper.Observer() \n      {\n         @Override\n         public void onResizingStarted()\n         {    \n            int startWidth = getImageWidth();\n            int startHeight = getImageHeight();\n            \n            widthAspectRatio_ = (double)startWidth / (double)startHeight;\n            heightAspectRatio_ = (double)startHeight / (double)startWidth;\n         }\n         \n         @Override\n         public void onResizing(int xDelta, int yDelta)\n         {\n            // get start width and height\n            int startWidth = getImageWidth();\n            int startHeight = getImageHeight();\n            \n            // calculate new height and width \n            int newWidth = constrainWidth(startWidth + xDelta);\n            int newHeight = constrainHeight(startHeight + yDelta);\n            \n            // preserve aspect ratio if requested\n            if (getKeepRatio())\n            {\n               if (Math.abs(xDelta) > Math.abs(yDelta))\n                  newHeight = (int) (heightAspectRatio_ * (double)newWidth);\n               else\n                  newWidth = (int) (widthAspectRatio_ * (double)newHeight);\n            }\n            \n            // set text boxes\n            setWidthTextBox(newWidth);\n            setHeightTextBox(newHeight);  \n            \n            // set image preview size\n            previewPanel.setSize(newWidth + IMAGE_INSET + \"px\", \n                                 newHeight + IMAGE_INSET + \"px\");\n         }\n\n         @Override\n         public void onResizingCompleted()\n         {\n            updateImage();\n            observer.onPlotResized(true);\n         } \n         \n         private double widthAspectRatio_ = 1.0;\n         private double heightAspectRatio_ = 1.0;\n      });\n      \n      // layout gripper\n      previewPanel.add(gripper);\n      previewPanel.setWidgetRightWidth(gripper, \n                                      0, Unit.PX, \n                                      gripper.getImageWidth(), Unit.PX);\n      previewPanel.setWidgetBottomHeight(gripper, \n                                        0, Unit.PX, \n                                        gripper.getImageHeight(), Unit.PX);\n     \n      // constrain dimensions\n      initialWidth = constrainWidth(initialWidth);\n      initialHeight = constrainHeight(initialHeight);\n            \n      // initialie text boxes\n      setWidthTextBox(initialWidth);\n      setHeightTextBox(initialHeight);\n \n      // initialize preview\n      previewPanel.setSize((initialWidth + IMAGE_INSET) + \"px\", \n                          (initialHeight + IMAGE_INSET) + \"px\");\n      \n      verticalPanel.add(previewPanel);\n     \n      initWidget(verticalPanel);\n     \n   }","id":69852,"modified_method":"public PlotSizer(int initialWidth, \n                    int initialHeight,\n                    boolean keepRatio,\n                    Widget extraWidget,\n                    PlotsServerOperations server,\n                    final Observer observer)\n   {\n      // alias objects and resources\n      server_ = server;\n      ExportPlotDialogResources resources = ExportPlotDialogResources.INSTANCE;\n           \n      // main widget\n      VerticalPanel verticalPanel = new VerticalPanel();\n           \n      // if we have an extra widget then enclose it within a horizontal\n      // panel with it on the left and the options on the right\n      HorizontalPanel topPanel = new HorizontalPanel();\n      CellPanel optionsPanel = null;\n      if (extraWidget != null)\n      {\n         topPanel.setWidth(\"100%\");\n         \n         topPanel.add(extraWidget);\n         topPanel.setCellHorizontalAlignment(extraWidget, \n                                             HasHorizontalAlignment.ALIGN_LEFT);\n         \n         optionsPanel = new VerticalPanel();\n         optionsPanel.setStylePrimaryName(\n                                    resources.styles().verticalSizeOptions());\n         optionsPanel.setSpacing(0);\n         topPanel.add(optionsPanel);\n         topPanel.setCellHorizontalAlignment(\n                                       optionsPanel,\n                                       HasHorizontalAlignment.ALIGN_RIGHT);\n         \n         \n         \n      }\n      else\n      {\n         optionsPanel = topPanel;\n         optionsPanel.setStylePrimaryName(\n                                 resources.styles().horizontalSizeOptions());\n         configureHorizontalOptionsPanel(topPanel);  \n      }\n          \n      // image width\n      HorizontalPanel widthAndHeightPanel = new HorizontalPanel();\n      widthAndHeightPanel.setStylePrimaryName(\n                                    resources.styles().widthAndHeightEntry());\n      configureHorizontalOptionsPanel(widthAndHeightPanel);\n      widthAndHeightPanel.add(createImageOptionLabel(\"Width:\"));\n      widthTextBox_ = createImageSizeTextBox();\n      widthTextBox_.addChangeHandler(new ChangeHandler() {\n         @Override\n         public void onChange(ChangeEvent event)\n         {\n            // screen out programmatic sets\n            if (settingDimenensionInProgress_)\n               return;\n            \n            // enforce min size\n            int width = constrainWidth(getImageWidth());\n           \n            // preserve aspect ratio if requested\n            if (getKeepRatio())\n            {  \n               double ratio = (double)lastHeight_ / (double)lastWidth_;\n               int height = constrainHeight((int) (ratio * (double)width));\n               setHeightTextBox(height);\n            }\n  \n            // set width\n            setWidthTextBox(width);\n         }\n         \n      });\n      widthAndHeightPanel.add(widthTextBox_);\n     \n      // image height\n      widthAndHeightPanel.add(new HTML(\"&nbsp;&nbsp;\"));\n      widthAndHeightPanel.add(createImageOptionLabel(\"Height:\"));\n      heightTextBox_ = createImageSizeTextBox();\n      heightTextBox_.addChangeHandler(new ChangeHandler() {\n         @Override\n         public void onChange(ChangeEvent event)\n         {\n            // screen out programmatic sets\n            if (settingDimenensionInProgress_)\n               return;\n            \n            // enforce min size\n            int height = constrainHeight(getImageHeight());\n            \n            // preserve aspect ratio if requested\n            if (getKeepRatio())\n            {\n               double ratio = (double)lastWidth_ / (double)lastHeight_;\n               int width = constrainWidth((int) (ratio * (double)height));\n               setWidthTextBox(width);\n            }\n           \n            // always set height\n            setHeightTextBox(height);\n         }\n         \n      });\n      widthAndHeightPanel.add(heightTextBox_);\n      \n      // add width and height panel to options panel container\n      optionsPanel.add(widthAndHeightPanel);\n  \n      // lock ratio check box\n      keepRatioCheckBox_ = new CheckBox();\n      keepRatioCheckBox_.setStylePrimaryName(\n                           resources.styles().maintainAspectRatioCheckBox());\n      keepRatioCheckBox_.setValue(keepRatio);\n      keepRatioCheckBox_.setText(\"Maintain aspect ratio\");\n      optionsPanel.add(keepRatioCheckBox_);\n      \n      // image and sizer in layout panel (create now so we can call\n      // setSize in update button click handler)\n      final LayoutPanel previewPanel = new LayoutPanel(); \n     \n      \n      // update button\n      ThemedButton updateButton = new ThemedButton(\"Update Image Size\", \n                                                    new ClickHandler(){\n         public void onClick(ClickEvent event) \n         {\n            previewPanel.setSize((getImageWidth() + IMAGE_INSET) + \"px\", \n                                (getImageHeight() + IMAGE_INSET) + \"px\");\n            updateImage();\n            \n            observer.onPlotResized(false);\n         }\n      });\n      updateButton.setStylePrimaryName(\n                                 resources.styles().updateImageSizeButton());\n      optionsPanel.add(updateButton);\n\n      // add top panel\n      verticalPanel.add(topPanel);\n         \n      // image frame\n      imageFrame_ = new ImageFrame();\n      imageFrame_.setUrl(\"about:blank\");\n      imageFrame_.setSize(\"100%\", \"100%\");\n      imageFrame_.setMarginHeight(0);\n      imageFrame_.setMarginWidth(0);\n      imageFrame_.setStylePrimaryName(resources.styles().imagePreview());\n      previewPanel.add(imageFrame_);\n      previewPanel.setWidgetLeftRight(imageFrame_, \n                                      0, Unit.PX, \n                                      IMAGE_INSET, Unit.PX);\n      previewPanel.setWidgetTopBottom(imageFrame_, \n                                      0, Unit.PX, \n                                      IMAGE_INSET, Unit.PX);\n      previewPanel.getWidgetContainerElement(\n                     imageFrame_).getStyle().setOverflow(Overflow.VISIBLE);\n      \n      // Stops mouse events from being routed to the iframe, which would\n      // interfere with resizing\n      FlowPanel imageSurface = new FlowPanel();\n      imageSurface.setSize(\"100%\", \"100%\");\n      previewPanel.add(imageSurface);\n      previewPanel.setWidgetTopBottom(imageSurface, 0, Unit.PX, 0, Unit.PX);\n      previewPanel.setWidgetLeftRight(imageSurface, 0, Unit.PX, 0, Unit.PX);\n      \n      // resize gripper\n      ResizeGripper gripper = new ResizeGripper(new ResizeGripper.Observer() \n      {\n         @Override\n         public void onResizingStarted()\n         {    \n            int startWidth = getImageWidth();\n            int startHeight = getImageHeight();\n            \n            widthAspectRatio_ = (double)startWidth / (double)startHeight;\n            heightAspectRatio_ = (double)startHeight / (double)startWidth;\n         }\n         \n         @Override\n         public void onResizing(int xDelta, int yDelta)\n         {\n            // get start width and height\n            int startWidth = getImageWidth();\n            int startHeight = getImageHeight();\n            \n            // calculate new height and width \n            int newWidth = constrainWidth(startWidth + xDelta);\n            int newHeight = constrainHeight(startHeight + yDelta);\n            \n            // preserve aspect ratio if requested\n            if (getKeepRatio())\n            {\n               if (Math.abs(xDelta) > Math.abs(yDelta))\n                  newHeight = (int) (heightAspectRatio_ * (double)newWidth);\n               else\n                  newWidth = (int) (widthAspectRatio_ * (double)newHeight);\n            }\n            \n            // set text boxes\n            setWidthTextBox(newWidth);\n            setHeightTextBox(newHeight);  \n            \n            // set image preview size\n            previewPanel.setSize(newWidth + IMAGE_INSET + \"px\", \n                                 newHeight + IMAGE_INSET + \"px\");\n         }\n\n         @Override\n         public void onResizingCompleted()\n         {\n            updateImage();\n            observer.onPlotResized(true);\n         } \n         \n         private double widthAspectRatio_ = 1.0;\n         private double heightAspectRatio_ = 1.0;\n      });\n      \n      // layout gripper\n      previewPanel.add(gripper);\n      previewPanel.setWidgetRightWidth(gripper, \n                                      0, Unit.PX, \n                                      gripper.getImageWidth(), Unit.PX);\n      previewPanel.setWidgetBottomHeight(gripper, \n                                        0, Unit.PX, \n                                        gripper.getImageHeight(), Unit.PX);\n     \n      // constrain dimensions\n      initialWidth = constrainWidth(initialWidth);\n      initialHeight = constrainHeight(initialHeight);\n            \n      // initialie text boxes\n      setWidthTextBox(initialWidth);\n      setHeightTextBox(initialHeight);\n \n      // initialize preview\n      previewPanel.setSize((initialWidth + IMAGE_INSET) + \"px\", \n                          (initialHeight + IMAGE_INSET) + \"px\");\n      \n      verticalPanel.add(previewPanel);\n      \n      // set initial focus widget\n      if (extraWidget == null)\n         initialFocusWidget_ = widthTextBox_;\n      else\n         initialFocusWidget_ = null;\n     \n      initWidget(verticalPanel);\n     \n   }","commit_id":"fa290c052c41216cb4a52ef894392fe32d466518","url":"https://github.com/rstudio/rstudio"},{"original_method":"public void onSizerShown()\n   {  \n      updateImage();\n      FocusHelper.setFocusDeferred(widthTextBox_);\n   }","id":69853,"modified_method":"public void onSizerShown()\n   {  \n      updateImage();\n      \n      if (initialFocusWidget_ != null)\n         FocusHelper.setFocusDeferred(initialFocusWidget_);\n   }","commit_id":"fa290c052c41216cb4a52ef894392fe32d466518","url":"https://github.com/rstudio/rstudio"},{"original_method":"private boolean isDirty(){\r\n\t\tif(cellValue == null) return false;\r\n\t\treturn !textArea.getText().equals(cellValue.getTarget());\r\n\t}","id":69854,"modified_method":"private boolean isDirty(){\r\n\t\tif(cellValue == null) return false;\r\n\t\treturn !textArea.getText().equals(cellValue.getTarget()) || cellValue.isFuzzy() != toggleFuzzy.isDown();\r\n\t}","commit_id":"2648700125b541b1c789e292f5aee6fde9f6f58e","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\r\n\t * Construct a new {@link InlineTargetCellEditor} with the specified images.\r\n\t * \r\n\t * @param content\r\n\t *            the {@link Widget} used to edit\r\n\t * @param images\r\n\t *            the images to use for the accept/cancel buttons\r\n\t */\r\n\tpublic InlineTargetCellEditor(TargetCellEditorImages images) {\r\n\r\n\t\t// Wrap contents in a table\r\n\t\tlayoutTable = new FlexTable();\r\n\t\tFlexCellFormatter formatter = layoutTable.getFlexCellFormatter();\r\n\t\tlayoutTable.setCellSpacing(0);\r\n\r\n\t\tformatter.setColSpan(0, 0, 3);\r\n\r\n\t\ttextArea = new TextArea();\r\n\t\ttextArea.setWidth(\"100%\");\r\n\t\ttextArea.setStyleName(\"webtrans-editor-content\");\r\n\t\ttextArea.addStyleName(\"webtrans-editor-content-editor\");\r\n\t\ttextArea.addKeyUpHandler(new KeyUpHandler() {\r\n\t\t\t\r\n\t\t\t@Override\r\n\t\t\tpublic void onKeyUp(KeyUpEvent event) {\r\n\t\t\t\tif(event.isControlKeyDown() && event.getNativeKeyCode() == KeyCodes.KEY_ENTER) {\r\n\t\t\t\t\taccept();\r\n\t\t\t\t}\r\n\t\t\t\telse if(event.getNativeKeyCode() == KeyCodes.KEY_ESCAPE) {\r\n\t\t\t\t\tcancel();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t// Add content widget\r\n\t\tlayoutTable.setWidget(0, 0, textArea);\r\n\t\tlayoutTable.setWidth(\"100%\");\r\n\r\n\t\t// Add accept and cancel buttons\r\n\t\tsetAcceptWidget(images.cellEditorAccept().createImage());\r\n\t\tsetCancelWidget(images.cellEditorCancel().createImage());\r\n\t}","id":69855,"modified_method":"/**\r\n\t * Construct a new {@link InlineTargetCellEditor} with the specified images.\r\n\t * \r\n\t * @param content\r\n\t *            the {@link Widget} used to edit\r\n\t * @param images\r\n\t *            the images to use for the accept/cancel buttons\r\n\t */\r\n\tpublic InlineTargetCellEditor(TargetCellEditorImages images) {\r\n\r\n\t\t// Wrap contents in a table\r\n\t\tlayoutTable = new FlexTable();\r\n\t\tFlexCellFormatter formatter = layoutTable.getFlexCellFormatter();\r\n\t\tlayoutTable.setCellSpacing(0);\r\n\r\n\t\tformatter.setColSpan(0, 0, 3);\r\n\r\n\t\ttextArea = new TextArea();\r\n\t\ttextArea.setWidth(\"100%\");\r\n\t\ttextArea.setStyleName(\"TableEditorContent-Edit\");\r\n\t\ttextArea.addKeyUpHandler(new KeyUpHandler() {\r\n\t\t\t\r\n\t\t\t@Override\r\n\t\t\tpublic void onKeyUp(KeyUpEvent event) {\r\n\t\t\t\tif(event.isControlKeyDown() && event.getNativeKeyCode() == KeyCodes.KEY_ENTER) {\r\n\t\t\t\t\taccept();\r\n\t\t\t\t}\r\n\t\t\t\telse if(event.getNativeKeyCode() == KeyCodes.KEY_ESCAPE) {\r\n\t\t\t\t\tcancel();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t// Add content widget\r\n\t\tlayoutTable.setWidget(0, 0, textArea);\r\n\t\tlayoutTable.setWidth(\"100%\");\r\n\r\n\t\t// Add accept and cancel buttons\r\n\t\tsetAcceptWidget(images.cellEditorAccept().createImage());\r\n\t\tsetCancelWidget(images.cellEditorCancel().createImage());\r\n\t\t\r\n\t\ttoggleFuzzy = new ToggleButton(\"Translated\", \"Fuzzy\");\r\n\t\tlayoutTable.setWidget(1, 0, toggleFuzzy);\r\n\r\n\t}","commit_id":"2648700125b541b1c789e292f5aee6fde9f6f58e","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\r\n\t * Accept the contents of the cell editor as the new cell value.\r\n\t */\r\n\tprotected void accept() {\r\n\t\t// Check if we are ready to accept\r\n\t\tif (!onAccept()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcellValue.setTarget(textArea.getText());\r\n\t\tcellValue.setFuzzy(false);\r\n\t\trestoreView();\r\n\t\t\r\n\t\t// Send the new cell value to the callback\r\n\t\tcurCallback.onComplete(curCellEditInfo, cellValue);\r\n\t\t\r\n\t\tclearSelection();\r\n\t}","id":69856,"modified_method":"/**\r\n\t * Accept the contents of the cell editor as the new cell value.\r\n\t */\r\n\tprotected void accept() {\r\n\t\t// Check if we are ready to accept\r\n\t\tif (!onAccept()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcellValue.setTarget(textArea.getText());\r\n\t\tcellValue.setFuzzy(toggleFuzzy.isDown());\r\n\t\trestoreView();\r\n\t\t\r\n\t\t// Send the new cell value to the callback\r\n\t\tcurCallback.onComplete(curCellEditInfo, cellValue);\r\n\t\t\r\n\t\tclearSelection();\r\n\t}","commit_id":"2648700125b541b1c789e292f5aee6fde9f6f58e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public void editCell(CellEditInfo cellEditInfo, TransUnit cellValue,\r\n\t\t\tCallback<TransUnit> callback) {\r\n\r\n\t\t// don't allow edits of two cells at once\r\n\t\tif( isDirty() ) {\r\n\t    \tcallback.onCancel(cellEditInfo);\r\n\t    \treturn;\r\n\t    }\r\n\t\t\r\n\t\tif( inEditMode() ){\r\n\t\t\tif(cellEditInfo.getCellIndex() == col && cellEditInfo.getRowIndex() == row){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\trestoreView();\r\n\t\t}\r\n\t\t\r\n\t\tLog.debug(\"starting edit of cell\");\r\n\t\t\r\n\t\t// Save the current values\r\n\t\tcurCallback = callback;\r\n\t\tcurCellEditInfo = cellEditInfo;\r\n\r\n\t\t// Get the info about the cell\r\n\t\tHTMLTable table = curCellEditInfo.getTable();\r\n\r\n\t\trow = curCellEditInfo.getRowIndex();\r\n\t\tcol = curCellEditInfo.getCellIndex();\r\n\r\n\t\tcellViewWidget = table.getWidget(row, col);\r\n\t\ttextArea.setHeight( table.getWidget(row, col-1).getOffsetHeight() + \"px\");\r\n\t\ttable.setWidget(row, col, layoutTable);\r\n\r\n\t\ttextArea.setText(cellValue.getTarget());\r\n\t\tthis.cellValue = cellValue;\r\n\t\ttextArea.setFocus(true);\r\n\t\t\r\n\t}","id":69857,"modified_method":"public void editCell(CellEditInfo cellEditInfo, TransUnit cellValue,\r\n\t\t\tCallback<TransUnit> callback) {\r\n\r\n\t\t// don't allow edits of two cells at once\r\n\t\tif( isDirty() ) {\r\n\t    \tcallback.onCancel(cellEditInfo);\r\n\t    \treturn;\r\n\t    }\r\n\t\t\r\n\t\tif( inEditMode() ){\r\n\t\t\tif(cellEditInfo.getCellIndex() == col && cellEditInfo.getRowIndex() == row){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\trestoreView();\r\n\t\t}\r\n\t\t\r\n\t\tLog.debug(\"starting edit of cell\");\r\n\t\t\r\n\t\t// Save the current values\r\n\t\tcurCallback = callback;\r\n\t\tcurCellEditInfo = cellEditInfo;\r\n\r\n\t\t// Get the info about the cell\r\n\t\tHTMLTable table = curCellEditInfo.getTable();\r\n\r\n\t\trow = curCellEditInfo.getRowIndex();\r\n\t\tcol = curCellEditInfo.getCellIndex();\r\n\r\n\t\tcellViewWidget = table.getWidget(row, col);\r\n\t\ttextArea.setHeight( table.getWidget(row, col-1).getOffsetHeight() + \"px\");\r\n\t\ttable.setWidget(row, col, layoutTable);\r\n\r\n\t\ttextArea.setText(cellValue.getTarget());\r\n\t\tthis.cellValue = cellValue;\r\n\t\ttextArea.setFocus(true);\r\n\t\ttoggleFuzzy.setDown(cellValue.isFuzzy());\r\n\t\t\r\n\t}","commit_id":"2648700125b541b1c789e292f5aee6fde9f6f58e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public SourcePanel(TransUnit value) {\n\t\tthis.value = value;\n\t\tpanel = new FlowPanel();\n\t\tpanel.setSize(\"100%\", \"100%\");\n\n\t\tinitWidget(panel);\n\n\t\tsourceLabel = new HighlightingLabel(value.getSource(), ParserSyntax.MIXED);\n\t\tsourceLabel.setStylePrimaryName(\"webtrans-editor-content\");\n\t\tsourceLabel.addStyleName(\"webtrans-editor-content-source\");\n\n\t\tVerticalPanel vPanel = new VerticalPanel();\n\t\tvPanel.setStylePrimaryName(\"webtrans-editor-status\");\n\t\tfuzzyLabel = new Label(\"F\");\n\t\tvPanel.add(fuzzyLabel);\n\t\tvPanel.setWidth(\"10px\");\n\t\t\n\t\tpanel.add(vPanel);\n\n\t\tpanel.add(sourceLabel);\n\t\trefresh();\n\t}","id":69858,"modified_method":"public SourcePanel(TransUnit value) {\n\t\tthis.value = value;\n\t\tpanel = new FlowPanel();\n\t\tpanel.setSize(\"100%\", \"100%\");\n\t\tinitWidget(panel);\n\t\tsetStylePrimaryName(\"TableEditorSource\");\n\n\t\tsourceLabel = new HighlightingLabel(value.getSource(), ParserSyntax.MIXED);\n\t\tsourceLabel.setStylePrimaryName(\"TableEditorContent\");\n\t\tpanel.add(sourceLabel);\n\t\trefresh();\n\t}","commit_id":"2648700125b541b1c789e292f5aee6fde9f6f58e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public void refresh() {\n\t\tfuzzyLabel.setVisible(value.isFuzzy());\n\t}","id":69859,"modified_method":"public void refresh() {\n\t}","commit_id":"2648700125b541b1c789e292f5aee6fde9f6f58e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public TableEditorTableDefinition() {\r\n\t\taddColumnDefinition(new SourceColumnDefinition());\r\n\t\taddColumnDefinition(new TargetColumnDefinition());\r\n\t}","id":69860,"modified_method":"public TableEditorTableDefinition() {\r\n\t\tsetRowRenderer(rowRenderer);\r\n\r\n\t\tsourceColumnDefinition.setCellRenderer(sourceCellRenderer);\r\n\t\ttargetColumnDefinition.setCellRenderer(targetCellRenderer);\r\n\t\ttargetColumnDefinition.setCellEditor(new InlineTargetCellEditor());\r\n\t\t\r\n\t\taddColumnDefinition(sourceColumnDefinition);\r\n\t\taddColumnDefinition(targetColumnDefinition);\r\n\t}","commit_id":"2648700125b541b1c789e292f5aee6fde9f6f58e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public TableEditorView(RedirectingCachedTableModel<TransUnit> tableModel, TableEditorTableDefinition tableDefinition) {\n\t\tsuper(tableModel,tableDefinition);\n\t\tthis.cachedTableModel = tableModel;\n\t\tsetSize(\"100%\", \"100%\");\n\t\ttableDefinition.setRowRenderer( new TableEditorRowRenderer());\n\t\tsetPageSize(10);\n\t\tsetEmptyTableWidget(new HTML(\n\t\t\t\t\"There is no data to display\"));\n\n\t\t// Setup the bulk renderer\n\t\tFixedWidthGridBulkRenderer<TransUnit> bulkRenderer = new FixedWidthGridBulkRenderer<TransUnit>(\n\t\t\t\tgetDataTable(), this);\n\t\tsetBulkRenderer(bulkRenderer);\n\n\t\t// Setup the formatting\n\t\tsetCellPadding(3);\n\t\tsetCellSpacing(0);\n\t\tsetResizePolicy(ScrollTable.ResizePolicy.FILL_WIDTH);\n\t\t\n\t\tgetDataTable().setSelectionPolicy(SelectionPolicy.ONE_ROW);\n\t\tgetDataTable().setCellPadding(3);\n\t\tgetDataTable().addRowSelectionHandler(new RowSelectionHandler() {\n\t\t\t@Override\n\t\t\tpublic void onRowSelection(RowSelectionEvent event) {\n\t\t\t\tif(!event.getSelectedRows().isEmpty()){\n\t\t\t\t\tRow row = event.getSelectedRows().iterator().next();\n\t\t\t\t\tTransUnit tu = getRowValue(row.getRowIndex());\n\t\t\t\t\tSelectionEvent.fire(TableEditorView.this, tu);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}","id":69861,"modified_method":"public TableEditorView(RedirectingCachedTableModel<TransUnit> tableModel, TableEditorTableDefinition tableDefinition) {\n\t\tsuper(tableModel,tableDefinition);\n\t\tthis.cachedTableModel = tableModel;\n\t\tthis.tableDefinition = tableDefinition;\n\t\tsetStylePrimaryName(\"TableEditorWrapper\");\n\t\tsetSize(\"100%\", \"100%\");\n\t\tsetPageSize(10);\n\t\tsetEmptyTableWidget(new HTML(\n\t\t\t\t\"There is no data to display\"));\n\n\t\t// Setup the bulk renderer\n\t\tFixedWidthGridBulkRenderer<TransUnit> bulkRenderer = new FixedWidthGridBulkRenderer<TransUnit>(\n\t\t\t\tgetDataTable(), this);\n\t\tsetBulkRenderer(bulkRenderer);\n\n\t\t// Setup the formatting\n\t\tsetCellPadding(3);\n\t\tsetCellSpacing(0);\n\t\tsetResizePolicy(ScrollTable.ResizePolicy.FILL_WIDTH);\n\n\t\tgetDataTable().setStylePrimaryName(\"TableEditor\");\n\t\tgetDataTable().setSelectionPolicy(SelectionPolicy.ONE_ROW);\n\t\tgetDataTable().setCellPadding(3);\n\t\tgetDataTable().addRowSelectionHandler(new RowSelectionHandler() {\n\t\t\t@Override\n\t\t\tpublic void onRowSelection(RowSelectionEvent event) {\n\t\t\t\tif(!event.getSelectedRows().isEmpty()){\n\t\t\t\t\tRow row = event.getSelectedRows().iterator().next();\n\t\t\t\t\tTransUnit tu = getRowValue(row.getRowIndex());\n\t\t\t\t\tSelectionEvent.fire(TableEditorView.this, tu);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}","commit_id":"2648700125b541b1c789e292f5aee6fde9f6f58e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public WebTransEditorMenubar() {\n\t\tsetStylePrimaryName(\"WebTransEditor\");\n\t\taddStyleDependentName(\"MenuBar\");\n\t\tsetHeight(\"20px\");\n\t\tsetWidth(\"100%\");\n\t\tsetVerticalAlignment(HorizontalPanel.ALIGN_MIDDLE);\n\t\tsetLeftWidget(new Label());\n\t\tsetMiddleWidget(new Label());\n\t\tsetRightWidget(new Label());\n\t}","id":69862,"modified_method":"public WebTransEditorMenubar() {\n\t\tsetStylePrimaryName(\"WebTransEditorMenu\");\n\t\tsetHeight(\"20px\");\n\t\tsetWidth(\"100%\");\n\t\tsetVerticalAlignment(HorizontalPanel.ALIGN_MIDDLE);\n\t\tsetLeftWidget(new Label());\n\t\tsetMiddleWidget(new Label());\n\t\tsetRightWidget(new Label());\n\t}","commit_id":"2648700125b541b1c789e292f5aee6fde9f6f58e","url":"https://github.com/zanata/zanata-server"},{"original_method":"public WebTransEditorView() {\n\t\taddStyleName(\"TransPanel-Outer\");\n\t\tthis.header = new WebTransEditorMenubar();\n\t\tthis.footer = new WebTransEditorMenubar();\n\t\n\t\tmainPanel = new VerticalPanel();\n\t\tmainPanel.addStyleName(\"TransPanel\");\n\t\tmainPanel.add(header);\n\t\tmainPanel.setCellHeight(header, \"20px\");\n\t\t\n\t\teditor = new Label(\"editor\");\n\t\tmainPanel.add(editor);\n\t\t\n\t\tmainPanel.add(footer);\n\t\tmainPanel.setCellHeight(footer, \"20px\");\n\t\t\n\t\tsetWidth(\"100%\");\n\t\tsetHeight(\"100%\");\n\t\tsetWidget(mainPanel);\n\t\n\t\tmainPanel.setSize(\"100%\", \"100%\");\n\t\t\n\t\tstatusLabel = new Label();\n\t\tfooter.setLeftWidget(statusLabel);\n\t}","id":69863,"modified_method":"public WebTransEditorView() {\n\t\taddStyleName(\"WebTransEditor-Outer\");\n\t\tthis.header = new WebTransEditorMenubar();\n\t\tthis.footer = new WebTransEditorMenubar();\n\t\n\t\tmainPanel = new VerticalPanel();\n\t\tmainPanel.addStyleName(\"WebTransEditor\");\n\t\tmainPanel.add(header);\n\t\tmainPanel.setCellHeight(header, \"20px\");\n\t\t\n\t\teditor = new Label(\"editor\");\n\t\tmainPanel.add(editor);\n\t\t\n\t\tmainPanel.add(footer);\n\t\tmainPanel.setCellHeight(footer, \"20px\");\n\t\t\n\t\tsetWidth(\"100%\");\n\t\tsetHeight(\"100%\");\n\t\tsetWidget(mainPanel);\n\t\n\t\tmainPanel.setSize(\"100%\", \"100%\");\n\t\t\n\t\tstatusLabel = new Label();\n\t\tfooter.setLeftWidget(statusLabel);\n\t}","commit_id":"2648700125b541b1c789e292f5aee6fde9f6f58e","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic Collection getGroupsWithMemberHasRole(String userId, String role)\n\t{\n\t\tCollection groups = getGroups();\n\t\tCollection rv = new Vector();\n\t\tfor (Iterator i = groups.iterator(); i.hasNext();)\n\t\t{\n\t\t\tGroup g = (Group) i.next();\n\t\t\tMember m = g.getMember(userId);\n\t\t\tif ((m != null) && (m.isActive()) && (m.getRole().getId().equals(role)))\n\t\t\t{\n\t\t\t\trv.add(g);\n\t\t\t}\n\t\t}\n\n\t\treturn rv;\n\t}","id":69864,"modified_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic Collection getGroupsWithMemberHasRole(String userId, String role)\n\t{\n\t\tCollection siteGroups = getGroups();\n\t\tArrayList siteGroupIds = new ArrayList(siteGroups.size());\n\t\tfor ( Iterator it=siteGroups.iterator(); it.hasNext(); )\n\t\t\tsiteGroupIds.add( it.next() );\n\t\t\t\n\t\tList groups = AuthzGroupService.getAuthzUserGroupIds(getId(), siteGroupIds, userId);\n\t\tCollection rv = new Vector();\n\t\tfor (Iterator i = groups.iterator(); i.hasNext();)\n\t\t{\n\t\t\tMember m = null;\n\t\t\tGroup g = getGroup( (String)i.next() );\n\t\t\tif ( g != null )\n\t\t\t\tm = g.getMember(userId);\n\t\t\tif ((m != null) && (m.isActive()) && (m.getRole().getId().equals(role)))\n\t\t\t\trv.add(g);\n\t\t}\n\n\t\treturn rv;\n\t}","commit_id":"2fb4380a0dc297f0a83d8771be09e0b6c389aba1","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic Collection getGroupsWithMember(String userId)\n\t{\n\t\tCollection groups = getGroups();\n\t\tCollection rv = new Vector();\n\t\tfor (Iterator i = groups.iterator(); i.hasNext();)\n\t\t{\n\t\t\tGroup g = (Group) i.next();\n\t\t\tMember m = g.getMember(userId);\n\t\t\tif ((m != null) && (m.isActive()))\n\t\t\t{\n\t\t\t\trv.add(g);\n\t\t\t}\n\t\t}\n\n\t\treturn rv;\n\t}","id":69865,"modified_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic Collection getGroupsWithMember(String userId)\n\t{\n\t\tCollection siteGroups = getGroups();\n\t\tArrayList siteGroupIds = new ArrayList(siteGroups.size());\n\t\tfor ( Iterator it=siteGroups.iterator(); it.hasNext(); )\n\t\t\tsiteGroupIds.add( ((Group)it.next()).getId() );\n\t\t\t\n\t\tList groups = AuthzGroupService.getAuthzUserGroupIds(getId(), siteGroupIds, userId);\n\t\tCollection rv = new Vector();\n\t\tfor (Iterator i = groups.iterator(); i.hasNext();)\n\t\t{\n\t\t\tMember m = null;\n\t\t\tGroup g = getGroup( (String)i.next() );\n\t\t\t\n\t\t\tif ( g != null )\n\t\t\t\tm = g.getMember(userId);\n\t\t\tif ((m != null) && (m.isActive()))\n\t\t\t\trv.add(g);\n\t\t}\n\n\t\treturn rv;\n\t}","commit_id":"2fb4380a0dc297f0a83d8771be09e0b6c389aba1","url":"https://github.com/sakaiproject/sakai"},{"original_method":"private void assertWikiStyleLinkSyntax(File destDir) throws IOException {\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubClass = <a href='class_StubClass.html'>StubClass<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubInterface = <a href='interface_StubInterface.html'>StubInterface<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubInnerException = <a href='class_StubClass.StubInnerException.html'>StubInnerException<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"stubTopLevelMethod = <a href='index.html#stubTopLevelMethod'>stubTopLevelMethod<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"stubTopLevelAttribute = <a href='index.html#stubTopLevelAttribute'>stubTopLevelAttribute<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubInterface.formalMethodFromStubInterface = <a href='interface_StubInterface.html#formalMethodFromStubInterface'>StubInterface.formalMethodFromStubInterface<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubClass.StubInnerClass = <a href='class_StubClass.StubInnerClass.html'>StubClass.StubInnerClass<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubClass.StubInnerClass.innerMethod = <a href='class_StubClass.StubInnerClass.html#innerMethod'>StubClass.StubInnerClass.innerMethod<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubInterface with custom name = <a href='interface_StubInterface.html'>custom stub interface<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"unresolvable = unresolvable\"));\n        \n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"fullStubInterface = <a href='interface_StubInterface.html'>com.redhat.ceylon.ceylondoc.test.modules.single@StubInterface<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"fullStubInterface.formalMethodFromStubInterface = <a href='interface_StubInterface.html#formalMethodFromStubInterface'>com.redhat.ceylon.ceylondoc.test.modules.single@StubInterface.formalMethodFromStubInterface<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"fullStubInterface with custom name = <a href='interface_StubInterface.html'>full custom stub interface<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"fullUnresolvable = unresolvable@StubInterface\"));\n    }","id":69866,"modified_method":"private void assertWikiStyleLinkSyntax(File destDir) throws IOException {\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubClass = <a href='class_StubClass.html'>StubClass<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubInterface = <a href='interface_StubInterface.html'>StubInterface<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubInnerException = <a href='class_StubClass.StubInnerException.html'>StubInnerException<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"stubTopLevelMethod = <a href='index.html#stubTopLevelMethod'>stubTopLevelMethod<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"stubTopLevelAttribute = <a href='index.html#stubTopLevelAttribute'>stubTopLevelAttribute<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubInterface.formalMethodFromStubInterface = <a href='interface_StubInterface.html#formalMethodFromStubInterface'>StubInterface.formalMethodFromStubInterface<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubClass.StubInnerClass = <a href='class_StubClass.StubInnerClass.html'>StubClass.StubInnerClass<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubClass.StubInnerClass.innerMethod = <a href='class_StubClass.StubInnerClass.html#innerMethod'>StubClass.StubInnerClass.innerMethod<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"StubInterface with custom name = <a href='interface_StubInterface.html'>custom stub interface<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"unresolvable = unresolvable\"));\n        \n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"imported A1 = <a href='a/class_A1.html'>A1<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"imported AliasA2 = <a href='a/class_A2.html'>AliasA2<\/a>\"));\n        \n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"fullStubInterface = <a href='interface_StubInterface.html'>com.redhat.ceylon.ceylondoc.test.modules.single@StubInterface<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"fullStubInterface.formalMethodFromStubInterface = <a href='interface_StubInterface.html#formalMethodFromStubInterface'>com.redhat.ceylon.ceylondoc.test.modules.single@StubInterface.formalMethodFromStubInterface<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"fullStubInterface with custom name = <a href='interface_StubInterface.html'>full custom stub interface<\/a>\"));\n        assertMatchInFile(destDir, \"class_StubClass.html\", \n                Pattern.compile(\"fullUnresolvable = unresolvable@StubInterface\"));\n    }","commit_id":"c9ea3f353a9c3e2f11b384afb5bb2798cd173974","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private Declaration resolveDeclaration(Scope scope, String declName) {\n        if (scope == null) {\n            return null;\n        }\n        Declaration member = scope.getMember(declName, null);\n        if (member != null) {\n            return member;\n        }\n        return resolveDeclaration(scope.getContainer(), declName);\n    }","id":69867,"modified_method":"private Declaration resolveDeclaration(Scope scope, String declName, boolean isNested) {\n        Declaration decl = null;\n\n        if (scope != null) {\n            decl = scope.getMember(declName, null);\n\n            if (decl == null && !isNested && scope instanceof Element) {\n                decl = ((Element) scope).getUnit().getImportedDeclaration(declName, null);\n            }\n\n            if (decl == null && !isNested) {\n                decl = resolveDeclaration(scope.getContainer(), declName, isNested);\n            }\n        }\n\n        return decl;\n    }","commit_id":"c9ea3f353a9c3e2f11b384afb5bb2798cd173974","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private void processDeclarationLink(String declLink) {\n        String declName;\n        Scope currentScope;\n        \n        int pkgSeparatorIndex = declLink.indexOf(\"@\");\n        if( pkgSeparatorIndex == -1 ) {\n            declName = declLink;\n            currentScope = scope;\n        } else {\n            String pkgName = declLink.substring(0, pkgSeparatorIndex);\n            declName = declLink.substring(pkgSeparatorIndex+1, declLink.length());\n            currentScope = ceylonDocTool.getCurrentModule().getPackage(pkgName);\n        }\n        \n        String[] declNames = declName.split(\"\\\\.\");\n        Declaration currentDecl = null;\n        for (String currentDeclName : declNames) {\n            currentDecl = resolveDeclaration(currentScope, currentDeclName);\n            if (currentDecl != null) {\n                currentScope = resolveScope(currentDecl);\n            }\n        }\n    \n        if (currentDecl != null) {\n            if (currentDecl instanceof ClassOrInterface) {\n                processClassOrInterface((ClassOrInterface) currentDecl);\n            } else {\n                processDeclaration(currentDecl);\n            }\n        } else {\n            buffer.append(declLink);\n        }\n    }","id":69868,"modified_method":"private void processDeclarationLink(String declLink) {\n        String declName;\n        Scope currentScope;\n        \n        int pkgSeparatorIndex = declLink.indexOf(\"@\");\n        if( pkgSeparatorIndex == -1 ) {\n            declName = declLink;\n            currentScope = scope;\n        } else {\n            String pkgName = declLink.substring(0, pkgSeparatorIndex);\n            declName = declLink.substring(pkgSeparatorIndex+1, declLink.length());\n            currentScope = ceylonDocTool.getCurrentModule().getPackage(pkgName);\n        }\n        \n        String[] declNames = declName.split(\"\\\\.\");\n        Declaration currentDecl = null;\n        boolean isNested = false;\n        for (String currentDeclName : declNames) {\n            currentDecl = resolveDeclaration(currentScope, currentDeclName, isNested);\n            if (currentDecl != null) {\n                currentScope = resolveScope(currentDecl);\n                isNested = true;\n            } else {\n                break;\n            }\n        }\n    \n        if (currentDecl != null) {\n            if (currentDecl instanceof ClassOrInterface) {\n                processClassOrInterface((ClassOrInterface) currentDecl);\n            } else {\n                processDeclaration(currentDecl);\n            }\n        } else {\n            buffer.append(declLink);\n        }\n    }","commit_id":"c9ea3f353a9c3e2f11b384afb5bb2798cd173974","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"protected void link(CommandContext ctx) throws CommandLineException {\n\n        final ParsedCommandLine args = ctx.getParsedCommandLine();\n        final String name = this.name.getValue(args, true);\n        final String deploymentsStr = deployment.getValue(args, true);\n        final String[] deployments = deploymentsStr.split(\",+\");\n\n        if(deployments.length == 0) {\n            throw new CommandFormatException(\"Missing value for \" + deployment.getFullName() + \": '\" + deploymentsStr + \"'\");\n        }\n\n        final ModelNode composite = new ModelNode();\n        composite.get(Util.OPERATION).set(Util.COMPOSITE);\n        composite.get(Util.ADDRESS).setEmptyList();\n        final ModelNode steps = composite.get(Util.STEPS);\n\n        // link the deployments\n        for(String deployment : deployments) {\n            final ModelNode op = new ModelNode();\n            final ModelNode address = op.get(Util.ADDRESS);\n            address.add(Util.DEPLOYMENT_OVERLAY_LINK, name + \"-\" + deployment);\n            op.get(Util.OPERATION).set(Util.ADD);\n            op.get(Util.DEPLOYMENT).set(deployment);\n            op.get(Util.DEPLOYMENT_OVERLAY).set(name);\n            steps.add(op);\n        }\n\n        try {\n            final ModelNode result = ctx.getModelControllerClient().execute(composite);\n            if (!Util.isSuccess(result)) {\n                throw new CommandFormatException(Util.getFailureDescription(result));\n            }\n        } catch (IOException e) {\n            throw new CommandFormatException(\"Failed to link overlay\", e);\n        }\n    }","id":69869,"modified_method":"protected void link(CommandContext ctx) throws CommandLineException {\n\n        final ParsedCommandLine args = ctx.getParsedCommandLine();\n        final String name = this.name.getValue(args, true);\n        final String deploymentsStr = deployment.getValue(args, true);\n        final String[] deployments = deploymentsStr.split(\",+\");\n\n        if(deployments.length == 0) {\n            throw new CommandFormatException(\"Missing value for \" + deployment.getFullName() + \": '\" + deploymentsStr + \"'\");\n        }\n\n        final ModelNode composite = new ModelNode();\n        composite.get(Util.OPERATION).set(Util.COMPOSITE);\n        composite.get(Util.ADDRESS).setEmptyList();\n        final ModelNode steps = composite.get(Util.STEPS);\n\n        // link the deployments\n        for(String deployment : deployments) {\n            final ModelNode op = new ModelNode();\n            final ModelNode address = op.get(Util.ADDRESS);\n            address.add(Util.DEPLOYMENT_OVERLAY, name);\n            address.add(Util.DEPLOYMENT, deployment);\n            op.get(Util.OPERATION).set(Util.ADD);\n            steps.add(op);\n        }\n\n        try {\n            final ModelNode result = ctx.getModelControllerClient().execute(composite);\n            if (!Util.isSuccess(result)) {\n                throw new CommandFormatException(Util.getFailureDescription(result));\n            }\n        } catch (IOException e) {\n            throw new CommandFormatException(\"Failed to link overlay\", e);\n        }\n    }","commit_id":"bb03ab7c27090aa8a1e92421c6eea893fb622851","url":"https://github.com/wildfly/wildfly"},{"original_method":"protected void remove(CommandContext ctx) throws CommandLineException {\n\n        final ModelControllerClient client = ctx.getModelControllerClient();\n\n        final ParsedCommandLine args = ctx.getParsedCommandLine();\n        final String name = this.name.getValue(args, true);\n        if(name == null) {\n            throw new CommandFormatException(this.name + \" is missing value.\");\n        }\n        final String contentStr = content.getValue(args);\n        final String deploymentStr = deployment.getValue(args);\n\n        final ModelNode composite = new ModelNode();\n        composite.get(Util.OPERATION).set(Util.COMPOSITE);\n        composite.get(Util.ADDRESS).setEmptyList();\n        final ModelNode steps = composite.get(Util.STEPS);\n\n        if(deploymentStr != null || contentStr == null) {\n            // remove the overlay links\n\n            final List<String> overlays;\n            if(deploymentStr == null) {\n                overlays = loadLinks(client, name);\n            } else {\n                overlays = new ArrayList<String>();\n                final String[] deployments = deploymentStr.split(\",+\");\n                for(String deploymentName : deployments) {\n                    overlays.add(name + '-' + deploymentName);\n                }\n            }\n\n            for(String overlay : overlays) {\n                final ModelNode op = new ModelNode();\n                op.get(Util.ADDRESS).add(Util.DEPLOYMENT_OVERLAY_LINK, overlay);\n                op.get(Util.OPERATION).set(Util.REMOVE);\n                steps.add(op);\n            }\n        }\n\n        if(contentStr != null || deploymentStr == null) {\n            // determine the content to be removed\n\n            final List<String> contentList;\n            if(contentStr == null) {\n                contentList = loadContentFor(client, name);\n            } else {\n                contentList = java.util.Arrays.asList(contentStr.split(\",+\"));\n            }\n\n            for(String content : contentList) {\n                final ModelNode op = new ModelNode();\n                ModelNode addr = op.get(Util.ADDRESS);\n                addr.add(Util.DEPLOYMENT_OVERLAY, name);\n                addr.add(Util.CONTENT, content);\n                op.get(Util.OPERATION).set(Util.REMOVE);\n                steps.add(op);\n            }\n        }\n\n        if(contentStr == null && deploymentStr == null) {\n            final ModelNode op = new ModelNode();\n            op.get(Util.ADDRESS).add(Util.DEPLOYMENT_OVERLAY, name);\n            op.get(Util.OPERATION).set(Util.REMOVE);\n            steps.add(op);\n        }\n\n        try {\n            final ModelNode result = client.execute(composite);\n            if (!Util.isSuccess(result)) {\n                throw new CommandFormatException(Util.getFailureDescription(result));\n            }\n        } catch (IOException e) {\n            throw new CommandFormatException(\"Failed to remove overlay\", e);\n        }\n    }","id":69870,"modified_method":"protected void remove(CommandContext ctx) throws CommandLineException {\n\n        final ModelControllerClient client = ctx.getModelControllerClient();\n\n        final ParsedCommandLine args = ctx.getParsedCommandLine();\n        final String name = this.name.getValue(args, true);\n        if(name == null) {\n            throw new CommandFormatException(this.name + \" is missing value.\");\n        }\n        final String contentStr = content.getValue(args);\n        final String deploymentStr = deployment.getValue(args);\n\n        final ModelNode composite = new ModelNode();\n        composite.get(Util.OPERATION).set(Util.COMPOSITE);\n        composite.get(Util.ADDRESS).setEmptyList();\n        final ModelNode steps = composite.get(Util.STEPS);\n\n        if(deploymentStr != null || contentStr == null) {\n            // remove the overlay links\n\n            final List<String> overlays;\n            if(deploymentStr == null) {\n                overlays = loadLinks(client, name);\n            } else {\n                overlays = Arrays.asList(deploymentStr.split(\",+\"));\n            }\n\n            for(String overlay : overlays) {\n                final ModelNode op = new ModelNode();\n                final ModelNode addr = op.get(Util.ADDRESS);\n                addr.add(Util.DEPLOYMENT_OVERLAY, name);\n                addr.add(Util.DEPLOYMENT, overlay);\n                op.get(Util.OPERATION).set(Util.REMOVE);\n                steps.add(op);\n            }\n        }\n\n        if(contentStr != null || deploymentStr == null) {\n            // determine the content to be removed\n\n            final List<String> contentList;\n            if(contentStr == null) {\n                contentList = loadContentFor(client, name);\n            } else {\n                contentList = java.util.Arrays.asList(contentStr.split(\",+\"));\n            }\n\n            for(String content : contentList) {\n                final ModelNode op = new ModelNode();\n                ModelNode addr = op.get(Util.ADDRESS);\n                addr.add(Util.DEPLOYMENT_OVERLAY, name);\n                addr.add(Util.CONTENT, content);\n                op.get(Util.OPERATION).set(Util.REMOVE);\n                steps.add(op);\n            }\n        }\n\n        if(contentStr == null && deploymentStr == null) {\n            final ModelNode op = new ModelNode();\n            op.get(Util.ADDRESS).add(Util.DEPLOYMENT_OVERLAY, name);\n            op.get(Util.OPERATION).set(Util.REMOVE);\n            steps.add(op);\n        }\n\n        try {\n            final ModelNode result = client.execute(composite);\n            if (!Util.isSuccess(result)) {\n                throw new CommandFormatException(Util.getFailureDescription(result));\n            }\n        } catch (IOException e) {\n            throw new CommandFormatException(\"Failed to remove overlay\", e);\n        }\n    }","commit_id":"bb03ab7c27090aa8a1e92421c6eea893fb622851","url":"https://github.com/wildfly/wildfly"},{"original_method":"protected void add(CommandContext ctx) throws CommandLineException {\n\n        final ParsedCommandLine args = ctx.getParsedCommandLine();\n        final String name = this.name.getValue(args, true);\n        final String contentStr = content.getValue(args, true);\n\n        final String[] contentPairs = contentStr.split(\",+\");\n        if(contentPairs.length == 0) {\n            throw new CommandFormatException(\"Overlay content is not specified.\");\n        }\n        final String[] contentNames = new String[contentPairs.length];\n        final File[] contentPaths = new File[contentPairs.length];\n        for(int i = 0; i < contentPairs.length; ++i) {\n            final String pair = contentPairs[i];\n            final int equalsIndex = pair.indexOf('=');\n            if(equalsIndex < 0) {\n                throw new CommandFormatException(\"Content pair is not following archive-path=fs-path format: '\" + pair + \"'\");\n            }\n            contentNames[i] = pair.substring(0, equalsIndex);\n            if(contentNames[i].length() == 0) {\n                throw new CommandFormatException(\"The archive path is missing for the content '\" + pair + \"'\");\n            }\n            final String path = pair.substring(equalsIndex + 1);\n            if(path.length() == 0) {\n                throw new CommandFormatException(\"The filesystem paths is missing for the content '\" + pair + \"'\");\n            }\n            final File f = new File(path);\n            if(!f.exists()) {\n                throw new CommandFormatException(\"Content file doesn't exist \" + f.getAbsolutePath());\n            }\n            contentPaths[i] = f;\n        }\n\n        final String deploymentsStr = deployment.getValue(args);\n        final String[] deployments;\n        if(deploymentsStr == null) {\n            deployments = null;\n        } else {\n            deployments = deploymentsStr.split(\",+\");\n        }\n\n        final ModelControllerClient client = ctx.getModelControllerClient();\n\n        // upload the content\n        final List<ModelNode> uploadResponses;\n        {\n            final ModelNode composite = new ModelNode();\n            final OperationBuilder opBuilder = new OperationBuilder(composite);\n            composite.get(Util.OPERATION).set(Util.COMPOSITE);\n            composite.get(Util.ADDRESS).setEmptyList();\n            final ModelNode steps = composite.get(Util.STEPS);\n            for (int i = 0; i < contentPaths.length; ++i) {\n                final ModelNode op = new ModelNode();\n                op.get(Util.ADDRESS).setEmptyList();\n                op.get(Util.OPERATION).set(Util.UPLOAD_DEPLOYMENT_STREAM);\n                op.get(Util.INPUT_STREAM_INDEX).set(i);\n                opBuilder.addFileAsAttachment(contentPaths[i]);\n                steps.add(op);\n            }\n            final Operation compositeOp = opBuilder.build();\n            final ModelNode response;\n            try {\n                response = client.execute(compositeOp);\n            } catch (IOException e) {\n                throw new CommandFormatException(\"Failed to upload content\", e);\n            } finally {\n                try {\n                    compositeOp.close();\n                } catch (IOException e) {\n                }\n            }\n            if(!response.hasDefined(Util.RESULT)) {\n                throw new CommandFormatException(\"Upload response is missing result.\");\n            }\n            uploadResponses = response.get(Util.RESULT).asList();\n        }\n\n        // create the overlay and link it to the deployments\n        {\n            final ModelNode composite = new ModelNode();\n            composite.get(Util.OPERATION).set(Util.COMPOSITE);\n            composite.get(Util.ADDRESS).setEmptyList();\n            final ModelNode steps = composite.get(Util.STEPS);\n\n            // add the overlay\n            ModelNode op = new ModelNode();\n            ModelNode address = op.get(Util.ADDRESS);\n            address.add(Util.DEPLOYMENT_OVERLAY, name);\n            op.get(Util.OPERATION).set(Util.ADD);\n            steps.add(op);\n\n            // add the content\n            for (int i = 0; i < contentNames.length; ++i) {\n                final String contentName = contentNames[i];\n                ModelNode result = uploadResponses.get(i);\n                result = result.get(\"step-\" + (i+1));\n                if(!result.isDefined()) {\n                    throw new CommandFormatException(\"Upload step response is missing expected step-\" + (i+1) + \" attribute: \" + result);\n                }\n                result = result.get(Util.RESULT);\n                if(!result.isDefined()) {\n                    throw new CommandFormatException(\"Upload step response is missing result: \" + result);\n                }\n                op = new ModelNode();\n                address = op.get(Util.ADDRESS);\n                address.add(Util.DEPLOYMENT_OVERLAY, name);\n                address.add(Util.CONTENT, contentName);\n                op.get(Util.OPERATION).set(Util.ADD);\n                op.get(Util.CONTENT).set(result);\n                steps.add(op);\n            }\n\n            if(deployments != null && deployments.length > 0) {\n                // link the deployments\n                for(String deployment : deployments) {\n                    op = new ModelNode();\n                    address = op.get(Util.ADDRESS);\n                    address.add(Util.DEPLOYMENT_OVERLAY_LINK, name + \"-\" + deployment);\n                    op.get(Util.OPERATION).set(Util.ADD);\n                    op.get(Util.DEPLOYMENT).set(deployment);\n                    op.get(Util.DEPLOYMENT_OVERLAY).set(name);\n                    steps.add(op);\n                }\n            }\n\n            try {\n                final ModelNode result = client.execute(composite);\n                if (!Util.isSuccess(result)) {\n                    throw new CommandFormatException(Util.getFailureDescription(result));\n                }\n            } catch (IOException e) {\n                throw new CommandFormatException(\"Failed to add overlay\", e);\n            }\n        }\n    }","id":69871,"modified_method":"protected void add(CommandContext ctx) throws CommandLineException {\n\n        final ParsedCommandLine args = ctx.getParsedCommandLine();\n        final String name = this.name.getValue(args, true);\n        final String contentStr = content.getValue(args, true);\n\n        final String[] contentPairs = contentStr.split(\",+\");\n        if(contentPairs.length == 0) {\n            throw new CommandFormatException(\"Overlay content is not specified.\");\n        }\n        final String[] contentNames = new String[contentPairs.length];\n        final File[] contentPaths = new File[contentPairs.length];\n        for(int i = 0; i < contentPairs.length; ++i) {\n            final String pair = contentPairs[i];\n            final int equalsIndex = pair.indexOf('=');\n            if(equalsIndex < 0) {\n                throw new CommandFormatException(\"Content pair is not following archive-path=fs-path format: '\" + pair + \"'\");\n            }\n            contentNames[i] = pair.substring(0, equalsIndex);\n            if(contentNames[i].length() == 0) {\n                throw new CommandFormatException(\"The archive path is missing for the content '\" + pair + \"'\");\n            }\n            final String path = pair.substring(equalsIndex + 1);\n            if(path.length() == 0) {\n                throw new CommandFormatException(\"The filesystem paths is missing for the content '\" + pair + \"'\");\n            }\n            final File f = new File(path);\n            if(!f.exists()) {\n                throw new CommandFormatException(\"Content file doesn't exist \" + f.getAbsolutePath());\n            }\n            contentPaths[i] = f;\n        }\n\n        final String deploymentsStr = deployment.getValue(args);\n        final String[] deployments;\n        if(deploymentsStr == null) {\n            deployments = null;\n        } else {\n            deployments = deploymentsStr.split(\",+\");\n        }\n\n        final ModelControllerClient client = ctx.getModelControllerClient();\n\n        // upload the content\n        final List<ModelNode> uploadResponses;\n        {\n            final ModelNode composite = new ModelNode();\n            final OperationBuilder opBuilder = new OperationBuilder(composite);\n            composite.get(Util.OPERATION).set(Util.COMPOSITE);\n            composite.get(Util.ADDRESS).setEmptyList();\n            final ModelNode steps = composite.get(Util.STEPS);\n            for (int i = 0; i < contentPaths.length; ++i) {\n                final ModelNode op = new ModelNode();\n                op.get(Util.ADDRESS).setEmptyList();\n                op.get(Util.OPERATION).set(Util.UPLOAD_DEPLOYMENT_STREAM);\n                op.get(Util.INPUT_STREAM_INDEX).set(i);\n                opBuilder.addFileAsAttachment(contentPaths[i]);\n                steps.add(op);\n            }\n            final Operation compositeOp = opBuilder.build();\n            final ModelNode response;\n            try {\n                response = client.execute(compositeOp);\n            } catch (IOException e) {\n                throw new CommandFormatException(\"Failed to upload content\", e);\n            } finally {\n                try {\n                    compositeOp.close();\n                } catch (IOException e) {\n                }\n            }\n            if(!response.hasDefined(Util.RESULT)) {\n                throw new CommandFormatException(\"Upload response is missing result.\");\n            }\n            uploadResponses = response.get(Util.RESULT).asList();\n        }\n\n        // create the overlay and link it to the deployments\n        {\n            final ModelNode composite = new ModelNode();\n            composite.get(Util.OPERATION).set(Util.COMPOSITE);\n            composite.get(Util.ADDRESS).setEmptyList();\n            final ModelNode steps = composite.get(Util.STEPS);\n\n            // add the overlay\n            ModelNode op = new ModelNode();\n            ModelNode address = op.get(Util.ADDRESS);\n            address.add(Util.DEPLOYMENT_OVERLAY, name);\n            op.get(Util.OPERATION).set(Util.ADD);\n            steps.add(op);\n\n            // add the content\n            for (int i = 0; i < contentNames.length; ++i) {\n                final String contentName = contentNames[i];\n                ModelNode result = uploadResponses.get(i);\n                result = result.get(\"step-\" + (i+1));\n                if(!result.isDefined()) {\n                    throw new CommandFormatException(\"Upload step response is missing expected step-\" + (i+1) + \" attribute: \" + result);\n                }\n                result = result.get(Util.RESULT);\n                if(!result.isDefined()) {\n                    throw new CommandFormatException(\"Upload step response is missing result: \" + result);\n                }\n                op = new ModelNode();\n                address = op.get(Util.ADDRESS);\n                address.add(Util.DEPLOYMENT_OVERLAY, name);\n                address.add(Util.CONTENT, contentName);\n                op.get(Util.OPERATION).set(Util.ADD);\n                op.get(Util.CONTENT).set(result);\n                steps.add(op);\n            }\n\n            if(deployments != null && deployments.length > 0) {\n                // link the deployments\n                for(String deployment : deployments) {\n                    op = new ModelNode();\n                    address = op.get(Util.ADDRESS);\n                    address.add(Util.DEPLOYMENT_OVERLAY, name);\n                    address.add(Util.DEPLOYMENT, deployment);\n                    op.get(Util.OPERATION).set(Util.ADD);\n                    steps.add(op);\n                }\n            }\n\n            try {\n                final ModelNode result = client.execute(composite);\n                if (!Util.isSuccess(result)) {\n                    throw new CommandFormatException(Util.getFailureDescription(result));\n                }\n            } catch (IOException e) {\n                throw new CommandFormatException(\"Failed to add overlay\", e);\n            }\n        }\n    }","commit_id":"bb03ab7c27090aa8a1e92421c6eea893fb622851","url":"https://github.com/wildfly/wildfly"},{"original_method":"protected List<String> loadLinks(final ModelControllerClient client, String name) throws CommandLineException {\n        final ModelNode op = new ModelNode();\n        op.get(Util.OPERATION).set(Util.READ_CHILDREN_NAMES);\n        op.get(Util.ADDRESS).setEmptyList();\n        op.get(Util.CHILD_TYPE).set(Util.DEPLOYMENT_OVERLAY_LINK);\n        final ModelNode response;\n        try {\n            response = client.execute(op);\n        } catch (IOException e) {\n            throw new CommandLineException(\"Failed to load the list of existing overlay links\", e);\n        }\n\n        final ModelNode result = response.get(Util.RESULT);\n        if(!result.isDefined()) {\n            throw new CommandLineException(\"Failed to load the list of existing overlay links: \" + response);\n        }\n        final List<String> overlays = new ArrayList<String>();\n        for(ModelNode node : result.asList()) {\n            final String linkName = node.asString();\n            if(linkName.startsWith(name + '-')) {\n                overlays.add(linkName);\n            }\n        }\n        return overlays;\n    }","id":69872,"modified_method":"protected List<String> loadLinks(final ModelControllerClient client, String name) throws CommandLineException {\n        final List<String> contentList;\n        final ModelNode op = new ModelNode();\n        final ModelNode addr = op.get(Util.ADDRESS);\n        addr.add(Util.DEPLOYMENT_OVERLAY, name);\n        op.get(Util.OPERATION).set(Util.READ_CHILDREN_NAMES);\n        op.get(Util.CHILD_TYPE).set(Util.DEPLOYMENT);\n        final ModelNode response;\n        try {\n            response = client.execute(op);\n        } catch (IOException e) {\n            throw new CommandLineException(\"Failed to load the list of the existing content for overlay \" + name, e);\n        }\n\n        final ModelNode result = response.get(Util.RESULT);\n        if(!result.isDefined()) {\n            throw new CommandLineException(\"Failed to load the list of the existing content for overlay \" + name + \": \" + response);\n        }\n        contentList = new ArrayList<String>();\n        for(ModelNode node : result.asList()) {\n            contentList.add(node.asString());\n        }\n        return contentList;\n    }","commit_id":"bb03ab7c27090aa8a1e92421c6eea893fb622851","url":"https://github.com/wildfly/wildfly"},{"original_method":"protected void readLiferayFilterWebXML(\n\t\t\tServletContext servletContext, String path)\n\t\tthrows Exception {\n\n\t\tInputStream inputStream = servletContext.getResourceAsStream(path);\n\n\t\tif (inputStream == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(inputStream, true);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tMap<String, ObjectValuePair<Filter, FilterConfig>>\n\t\t\tfilterObjectValuePairs = new HashMap<>();\n\n\t\tfor (Element filterElement : rootElement.elements(\"filter\")) {\n\t\t\tString filterName = filterElement.elementText(\"filter-name\");\n\t\t\tString filterClassName = filterElement.elementText(\"filter-class\");\n\n\t\t\tMap<String, String> initParameterMap = new HashMap<>();\n\n\t\t\tList<Element> initParamElements = filterElement.elements(\n\t\t\t\t\"init-param\");\n\n\t\t\tfor (Element initParamElement : initParamElements) {\n\t\t\t\tString name = initParamElement.elementText(\"param-name\");\n\t\t\t\tString value = initParamElement.elementText(\"param-value\");\n\n\t\t\t\tinitParameterMap.put(name, value);\n\t\t\t}\n\n\t\t\tFilterConfig filterConfig = new InvokerFilterConfig(\n\t\t\t\tservletContext, filterName, initParameterMap);\n\n\t\t\tFilter filter = initFilter(\n\t\t\t\tservletContext, filterClassName, filterName, filterConfig);\n\n\t\t\tif (filter != null) {\n\t\t\t\tfilterObjectValuePairs.put(\n\t\t\t\t\tfilterName, new ObjectValuePair<>(filter, filterConfig));\n\t\t\t}\n\t\t}\n\n\t\tList<Element> filterMappingElements = rootElement.elements(\n\t\t\t\"filter-mapping\");\n\n\t\tfor (Element filterMappingElement : filterMappingElements) {\n\t\t\tString filterName = filterMappingElement.elementText(\"filter-name\");\n\n\t\t\tList<String> urlPatterns = new ArrayList<>();\n\n\t\t\tList<Element> urlPatternElements = filterMappingElement.elements(\n\t\t\t\t\"url-pattern\");\n\n\t\t\tfor (Element urlPatternElement : urlPatternElements) {\n\t\t\t\turlPatterns.add(urlPatternElement.getTextTrim());\n\t\t\t}\n\n\t\t\tList<String> dispatchers = new ArrayList<>(4);\n\n\t\t\tList<Element> dispatcherElements = filterMappingElement.elements(\n\t\t\t\t\"dispatcher\");\n\n\t\t\tfor (Element dispatcherElement : dispatcherElements) {\n\t\t\t\tString dispatcher = StringUtil.toUpperCase(\n\t\t\t\t\tdispatcherElement.getTextTrim());\n\n\t\t\t\tdispatchers.add(dispatcher);\n\t\t\t}\n\n\t\t\tObjectValuePair<Filter, FilterConfig> filterObjectValuePair =\n\t\t\t\tfilterObjectValuePairs.get(filterName);\n\n\t\t\tif (filterObjectValuePair == null) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"No filter and filter config exists with filter name \" +\n\t\t\t\t\t\t\tfilterName);\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tFilterMapping filterMapping = new FilterMapping(\n\t\t\t\t\tfilterObjectValuePair.getKey(),\n\t\t\t\t\tfilterObjectValuePair.getValue(), urlPatterns, dispatchers,\n\t\t\t\t\tfilterName);\n\n\t\t\tList<FilterMapping> filterMappings = _filterMappingsMap.get(\n\t\t\t\tfilterName);\n\n\t\t\tif (filterMappings == null) {\n\t\t\t\tfilterMappings = new CopyOnWriteArrayList<>();\n\n\t\t\t\tList<FilterMapping> previousFilterMapping =\n\t\t\t\t\t_filterMappingsMap.putIfAbsent(filterName, filterMappings);\n\n\t\t\t\tif (previousFilterMapping != null) {\n\t\t\t\t\tfilterMappings = previousFilterMapping;\n\t\t\t\t}\n\n\t\t\t\t_filterNames.add(filterName);\n\t\t\t}\n\n\t\t\tfilterMappings.add(filterMapping);\n\t\t}\n\t}","id":69873,"modified_method":"protected void readLiferayFilterWebXML(\n\t\t\tServletContext servletContext, String path)\n\t\tthrows Exception {\n\n\t\tInputStream inputStream = servletContext.getResourceAsStream(path);\n\n\t\tif (inputStream == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tDocument document = SAXReaderUtil.read(inputStream, true);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tMap<String, ObjectValuePair<Filter, FilterConfig>>\n\t\t\tfilterObjectValuePairs = new HashMap<>();\n\n\t\tfor (Element filterElement : rootElement.elements(\"filter\")) {\n\t\t\tString filterName = filterElement.elementText(\"filter-name\");\n\t\t\tString filterClassName = filterElement.elementText(\"filter-class\");\n\n\t\t\tMap<String, String> initParameterMap = new HashMap<>();\n\n\t\t\tList<Element> initParamElements = filterElement.elements(\n\t\t\t\t\"init-param\");\n\n\t\t\tfor (Element initParamElement : initParamElements) {\n\t\t\t\tString name = initParamElement.elementText(\"param-name\");\n\t\t\t\tString value = initParamElement.elementText(\"param-value\");\n\n\t\t\t\tinitParameterMap.put(name, value);\n\t\t\t}\n\n\t\t\tFilterConfig filterConfig = new InvokerFilterConfig(\n\t\t\t\tservletContext, filterName, initParameterMap);\n\n\t\t\tFilter filter = initFilter(\n\t\t\t\tservletContext, filterClassName, filterName, filterConfig);\n\n\t\t\tif (filter != null) {\n\t\t\t\tfilterObjectValuePairs.put(\n\t\t\t\t\tfilterName, new ObjectValuePair<>(filter, filterConfig));\n\t\t\t}\n\t\t}\n\n\t\tList<Element> filterMappingElements = rootElement.elements(\n\t\t\t\"filter-mapping\");\n\n\t\tfor (Element filterMappingElement : filterMappingElements) {\n\t\t\tString filterName = filterMappingElement.elementText(\"filter-name\");\n\n\t\t\tList<String> urlPatterns = new ArrayList<>();\n\n\t\t\tList<Element> urlPatternElements = filterMappingElement.elements(\n\t\t\t\t\"url-pattern\");\n\n\t\t\tfor (Element urlPatternElement : urlPatternElements) {\n\t\t\t\turlPatterns.add(urlPatternElement.getTextTrim());\n\t\t\t}\n\n\t\t\tList<String> dispatchers = new ArrayList<>(4);\n\n\t\t\tList<Element> dispatcherElements = filterMappingElement.elements(\n\t\t\t\t\"dispatcher\");\n\n\t\t\tfor (Element dispatcherElement : dispatcherElements) {\n\t\t\t\tString dispatcher = StringUtil.toUpperCase(\n\t\t\t\t\tdispatcherElement.getTextTrim());\n\n\t\t\t\tdispatchers.add(dispatcher);\n\t\t\t}\n\n\t\t\tObjectValuePair<Filter, FilterConfig> filterObjectValuePair =\n\t\t\t\tfilterObjectValuePairs.get(filterName);\n\n\t\t\tif (filterObjectValuePair == null) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\"No filter and filter config exists with filter name \" +\n\t\t\t\t\t\t\tfilterName);\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tFilterMapping filterMapping = new FilterMapping(\n\t\t\t\t\tfilterObjectValuePair.getKey(),\n\t\t\t\t\tfilterObjectValuePair.getValue(), urlPatterns, dispatchers,\n\t\t\t\t\tfilterName);\n\n\t\t\tregisterFilterMapping(filterMapping, filterName, true);\n\t\t}\n\t}","commit_id":"a85885832ac413d533373b76dad2626533f6b867","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void registerFilterMapping(\n\t\tFilterMapping filterMapping, String filterName, boolean after) {\n\n\t\tList<FilterMapping> filterMappings = _filterMappingsMap.get(filterName);\n\n\t\tif (filterMappings == null) {\n\t\t\tfilterMappings = new CopyOnWriteArrayList<>();\n\n\t\t\tList<FilterMapping> previousFilterMapping =\n\t\t\t\t_filterMappingsMap.putIfAbsent(filterName, filterMappings);\n\n\t\t\tif (previousFilterMapping != null) {\n\t\t\t\tfilterMappings = previousFilterMapping;\n\t\t\t}\n\n\t\t\t_filterNames.add(filterName);\n\t\t}\n\n\t\tif (after) {\n\t\t\tfilterMappings.add(filterMapping);\n\t\t}\n\t\telse {\n\t\t\tfilterMappings.add(0, filterMapping);\n\t\t}\n\n\t\tfor (InvokerFilter invokerFilter : _invokerFilters) {\n\t\t\tinvokerFilter.clearFilterChainsCache();\n\t\t}\n\t}","id":69874,"modified_method":"public void registerFilterMapping(\n\t\tFilterMapping filterMapping, String filterName, boolean after) {\n\n\t\twhile (true) {\n\t\t\tboolean putIfAbsent = false;\n\t\t\tList<FilterMapping> previousFilterMappings = _filterMappingsMap.get(\n\t\t\t\tfilterName);\n\t\t\tList<FilterMapping> filterMappings;\n\n\t\t\tif (previousFilterMappings == null) {\n\t\t\t\tputIfAbsent = true;\n\t\t\t\tfilterMappings = new ArrayList<>();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfilterMappings = new ArrayList<>(previousFilterMappings);\n\t\t\t}\n\n\t\t\tif (after) {\n\t\t\t\tfilterMappings.add(filterMapping);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfilterMappings.add(0, filterMapping);\n\t\t\t}\n\n\t\t\tif (putIfAbsent) {\n\t\t\t\tif (_filterMappingsMap.putIfAbsent(\n\t\t\t\t\t\tfilterName, filterMappings)== null) {\n\n\t\t\t\t\t_filterNames.add(filterName);\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (_filterMappingsMap.replace(\n\t\t\t\t\t\tfilterName, previousFilterMappings, filterMappings)) {\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"a85885832ac413d533373b76dad2626533f6b867","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void destroy() {\n\t\t_serviceTracker.close();\n\n\t\tfor (List<FilterMapping> filterMappings : _filterMappingsMap.values()) {\n\t\t\tFilterMapping filterMapping = filterMappings.get(0);\n\n\t\t\tFilter filter = filterMapping.getFilter();\n\n\t\t\ttry {\n\t\t\t\tfilter.destroy();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\t_filterMappingsMap.clear();\n\t\t_filterNames.clear();\n\n\t\tfor (InvokerFilter invokerFilter : _invokerFilters) {\n\t\t\tinvokerFilter.clearFilterChainsCache();\n\t\t}\n\t}","id":69875,"modified_method":"public void destroy() {\n\t\t_serviceTracker.close();\n\n\t\tfor (List<FilterMapping> filterMappings : _filterMappingsMap.values()) {\n\t\t\tFilterMapping filterMapping = filterMappings.get(0);\n\n\t\t\tFilter filter = filterMapping.getFilter();\n\n\t\t\ttry {\n\t\t\t\tfilter.destroy();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\t_filterMappingsMap.clear();\n\t\t_filterNames.clear();\n\n\t\tclearInvokerFilterChainsCache();\n\t}","commit_id":"a85885832ac413d533373b76dad2626533f6b867","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void unregisterFilter(String filterName) {\n\t\tList<FilterMapping> filterMappings = _filterMappingsMap.remove(\n\t\t\tfilterName);\n\n\t\tif (filterMappings == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tFilterMapping filterMapping = filterMappings.get(0);\n\n\t\tFilter filter = filterMapping.getFilter();\n\n\t\tif (filter != null) {\n\t\t\ttry {\n\t\t\t\tfilter.destroy();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\t_filterNames.remove(filterName);\n\n\t\tfor (InvokerFilter invokerFilter : _invokerFilters) {\n\t\t\tinvokerFilter.clearFilterChainsCache();\n\t\t}\n\t}","id":69876,"modified_method":"public void unregisterFilterMappings(String filterName) {\n\t\tList<FilterMapping> filterMappings = _filterMappingsMap.remove(\n\t\t\tfilterName);\n\n\t\tif (filterMappings == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tFilterMapping filterMapping = filterMappings.get(0);\n\n\t\tFilter filter = filterMapping.getFilter();\n\n\t\tif (filter != null) {\n\t\t\ttry {\n\t\t\t\tfilter.destroy();\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\t_log.error(e, e);\n\t\t\t}\n\t\t}\n\n\t\t_filterNames.remove(filterName);\n\n\t\tclearInvokerFilterChainsCache();\n\t}","commit_id":"a85885832ac413d533373b76dad2626533f6b867","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic void removedService(\n\t\t\tServiceReference<Filter> serviceReference,\n\t\t\tFilterMapping filterMapping) {\n\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\tregistry.ungetService(serviceReference);\n\n\t\t\tunregisterFilter(\n\t\t\t\tGetterUtil.getString(\n\t\t\t\t\tserviceReference.getProperty(\"servlet-filter-name\")));\n\t\t}","id":69877,"modified_method":"@Override\n\t\tpublic void removedService(\n\t\t\tServiceReference<Filter> serviceReference,\n\t\t\tFilterMapping filterMapping) {\n\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\tregistry.ungetService(serviceReference);\n\n\t\t\tunregisterFilterMappings(\n\t\t\t\tGetterUtil.getString(\n\t\t\t\t\tserviceReference.getProperty(\"servlet-filter-name\")));\n\t\t}","commit_id":"a85885832ac413d533373b76dad2626533f6b867","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void updateFilterMappings(String filterName, Filter filter) {\n\t\tList<FilterMapping> filterMappings = _filterMappingsMap.get(filterName);\n\n\t\tif (filterMappings == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (int i = 0; i < filterMappings.size(); i++) {\n\t\t\tFilterMapping filterMapping = filterMappings.get(i);\n\n\t\t\tfilterMappings.set(i, filterMapping.replaceFilter(filter));\n\t\t}\n\t}","id":69878,"modified_method":"public void updateFilterMappings(String filterName, Filter filter) {\n\t\twhile (true) {\n\t\t\tList<FilterMapping> previousFilterMappings = _filterMappingsMap.get(\n\t\t\t\tfilterName);\n\n\t\t\tif (previousFilterMappings == null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tList<FilterMapping> filterMappings = new ArrayList<>();\n\n\t\t\tfor (FilterMapping filterMapping : previousFilterMappings) {\n\t\t\t\tfilterMappings.add(filterMapping.replaceFilter(filter));\n\t\t\t}\n\n\t\t\tif (_filterMappingsMap.replace(\n\t\t\t\t\tfilterName, previousFilterMappings, filterMappings)) {\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}","commit_id":"a85885832ac413d533373b76dad2626533f6b867","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\t\tpublic FilterMapping addingService(\n\t\t\tServiceReference<Filter> serviceReference) {\n\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\tFilter filter = registry.getService(serviceReference);\n\n\t\t\tString afterFilter = GetterUtil.getString(\n\t\t\t\tserviceReference.getProperty(\"after-filter\"));\n\t\t\tString beforeFilter = GetterUtil.getString(\n\t\t\t\tserviceReference.getProperty(\"before-filter\"));\n\t\t\tList<String> dispatchers = StringPlus.asList(\n\t\t\t\tserviceReference.getProperty(\"dispatcher\"));\n\t\t\tString servletContextName = GetterUtil.getString(\n\t\t\t\tserviceReference.getProperty(\"servlet-context-name\"),\n\t\t\t\tStringPool.BLANK);\n\t\t\tString servletFilterName = GetterUtil.getString(\n\t\t\t\tserviceReference.getProperty(\"servlet-filter-name\"));\n\t\t\tList<String> urlPatterns = StringPlus.asList(\n\t\t\t\tserviceReference.getProperty(\"url-pattern\"));\n\n\t\t\tString positionFilterName = beforeFilter;\n\t\t\tboolean after = false;\n\n\t\t\tif (Validator.isNotNull(afterFilter)) {\n\t\t\t\tpositionFilterName = afterFilter;\n\t\t\t\tafter = true;\n\t\t\t}\n\n\t\t\tMap<String, String> initParameterMap = new HashMap<>();\n\n\t\t\tMap<String, Object> properties = serviceReference.getProperties();\n\n\t\t\tfor (String key : properties.keySet()) {\n\t\t\t\tif (!key.startsWith(\"init.param.\")) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tString value = GetterUtil.getString(\n\t\t\t\t\tserviceReference.getProperty(key));\n\n\t\t\t\tinitParameterMap.put(key, value);\n\t\t\t}\n\n\t\t\tServletContext servletContext = ServletContextPool.get(\n\t\t\t\tservletContextName);\n\n\t\t\tFilterConfig filterConfig = new InvokerFilterConfig(\n\t\t\t\tservletContext, servletFilterName, initParameterMap);\n\n\t\t\ttry {\n\t\t\t\tfilter.init(filterConfig);\n\t\t\t}\n\t\t\tcatch (ServletException se) {\n\t\t\t\t_log.error(se, se);\n\n\t\t\t\tregistry.ungetService(serviceReference);\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tupdateFilterMappings(servletFilterName, filter);\n\n\t\t\tFilterMapping filterMapping = new FilterMapping(\n\t\t\t\tfilter, filterConfig, urlPatterns, dispatchers,\n\t\t\t\tservletFilterName);\n\n\t\t\tregisterFilterMapping(filterMapping, positionFilterName, after);\n\n\t\t\treturn filterMapping;\n\t\t}","id":69879,"modified_method":"@Override\n\t\tpublic FilterMapping addingService(\n\t\t\tServiceReference<Filter> serviceReference) {\n\n\t\t\tRegistry registry = RegistryUtil.getRegistry();\n\n\t\t\tFilter filter = registry.getService(serviceReference);\n\n\t\t\tString afterFilter = GetterUtil.getString(\n\t\t\t\tserviceReference.getProperty(\"after-filter\"));\n\t\t\tString beforeFilter = GetterUtil.getString(\n\t\t\t\tserviceReference.getProperty(\"before-filter\"));\n\t\t\tList<String> dispatchers = StringPlus.asList(\n\t\t\t\tserviceReference.getProperty(\"dispatcher\"));\n\t\t\tString servletContextName = GetterUtil.getString(\n\t\t\t\tserviceReference.getProperty(\"servlet-context-name\"),\n\t\t\t\tStringPool.BLANK);\n\t\t\tString servletFilterName = GetterUtil.getString(\n\t\t\t\tserviceReference.getProperty(\"servlet-filter-name\"));\n\t\t\tList<String> urlPatterns = StringPlus.asList(\n\t\t\t\tserviceReference.getProperty(\"url-pattern\"));\n\n\t\t\tString positionFilterName = beforeFilter;\n\t\t\tboolean after = false;\n\n\t\t\tif (Validator.isNotNull(afterFilter)) {\n\t\t\t\tpositionFilterName = afterFilter;\n\t\t\t\tafter = true;\n\t\t\t}\n\n\t\t\tMap<String, String> initParameterMap = new HashMap<>();\n\n\t\t\tMap<String, Object> properties = serviceReference.getProperties();\n\n\t\t\tfor (String key : properties.keySet()) {\n\t\t\t\tif (!key.startsWith(\"init.param.\")) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tString value = GetterUtil.getString(\n\t\t\t\t\tserviceReference.getProperty(key));\n\n\t\t\t\tinitParameterMap.put(key, value);\n\t\t\t}\n\n\t\t\tServletContext servletContext = ServletContextPool.get(\n\t\t\t\tservletContextName);\n\n\t\t\tFilterConfig filterConfig = new InvokerFilterConfig(\n\t\t\t\tservletContext, servletFilterName, initParameterMap);\n\n\t\t\ttry {\n\t\t\t\tfilter.init(filterConfig);\n\t\t\t}\n\t\t\tcatch (ServletException se) {\n\t\t\t\t_log.error(se, se);\n\n\t\t\t\tregistry.ungetService(serviceReference);\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tupdateFilterMappings(servletFilterName, filter);\n\n\t\t\tFilterMapping filterMapping = new FilterMapping(\n\t\t\t\tfilter, filterConfig, urlPatterns, dispatchers,\n\t\t\t\tservletFilterName);\n\n\t\t\tregisterFilterMapping(filterMapping, positionFilterName, after);\n\n\t\t\tclearInvokerFilterChainsCache();\n\n\t\t\treturn filterMapping;\n\t\t}","commit_id":"a85885832ac413d533373b76dad2626533f6b867","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic HttpServletResponse getWrappedHttpServletResponse(\n\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\tif (!ServerDetector.isWebLogic()) {\n\t\t\tServletContext servletContext = request.getServletContext();\n\n\t\t\tInvokerFilterHelper invokerFilterHelper =\n\t\t\t\t(InvokerFilterHelper)servletContext.getAttribute(\n\t\t\t\t\tInvokerFilterHelper.class.getName());\n\n\t\t\tFilterConfig filterConfig = getFilterConfig();\n\n\t\t\tinvokerFilterHelper.unregisterFilter(filterConfig.getFilterName());\n\t\t}\n\n\t\tif (isWrap(response)) {\n\t\t\treturn new WebLogicIncludeServletResponse(response);\n\t\t}\n\n\t\treturn response;\n\t}","id":69880,"modified_method":"@Override\n\tpublic HttpServletResponse getWrappedHttpServletResponse(\n\t\tHttpServletRequest request, HttpServletResponse response) {\n\n\t\tif (!ServerDetector.isWebLogic()) {\n\t\t\tServletContext servletContext = request.getServletContext();\n\n\t\t\tInvokerFilterHelper invokerFilterHelper =\n\t\t\t\t(InvokerFilterHelper)servletContext.getAttribute(\n\t\t\t\t\tInvokerFilterHelper.class.getName());\n\n\t\t\tFilterConfig filterConfig = getFilterConfig();\n\n\t\t\tinvokerFilterHelper.unregisterFilterMappings(\n\t\t\t\tfilterConfig.getFilterName());\n\t\t}\n\n\t\tif (isWrap(response)) {\n\t\t\treturn new WebLogicIncludeServletResponse(response);\n\t\t}\n\n\t\treturn response;\n\t}","commit_id":"a85885832ac413d533373b76dad2626533f6b867","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public void prepare()\n    {\n        if (getState() == null) {\n            setState(State.COMPLETED);\n\n            Collection<InstalledExtension> installedExtensions;\n            if (isMainWiki()) {\n                installedExtensions = this.installedRepository.getInstalledExtensions();\n            } else {\n                installedExtensions = this.installedRepository.getInstalledExtensions(getNamespace());\n            }\n\n            // Upgrade outdated extensions only when there is invalid extensions\n            for (InstalledExtension extension : installedExtensions) {\n                Collection<String> installedNamespaces = extension.getNamespaces();\n                if (installedNamespaces == null) {\n                    if (!extension.isValid(null)) {\n                        setState(null);\n                        break;\n                    }\n                } else {\n                    for (String installedNamespace : installedNamespaces) {\n                        if (!extension.isValid(installedNamespace)) {\n                            setState(null);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }","id":69881,"modified_method":"@Override\n    public void prepare()\n    {\n        if (getState() == null) {\n            setState(State.COMPLETED);\n\n            if (isMainWiki()) {\n                Collection<InstalledExtension> installedExtensions = this.installedRepository.getInstalledExtensions();\n\n                // Upgrade outdated extensions only when there is invalid extensions\n                for (InstalledExtension extension : installedExtensions) {\n                    Collection<String> installedNamespaces = extension.getNamespaces();\n                    if (installedNamespaces == null) {\n                        if (!extension.isValid(null)) {\n                            this.logger.debug(\"Enabling outdate extension step on main wiki \"\n                                + \"because extension [{}] is invalid on root namespace\", extension.getId());\n\n                            setState(null);\n                            break;\n                        }\n                    } else {\n                        for (String installedNamespace : installedNamespaces) {\n                            if (!extension.isValid(installedNamespace)) {\n                                this.logger.debug(\"Enabling outdate extension step on main wiki \"\n                                    + \"because extension [{}] is invalid on namespace [{}]\", extension.getId(),\n                                    installedNamespace);\n\n                                setState(null);\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                String currentNamespace = getNamespace();\n                Collection<InstalledExtension> installedExtensions =\n                    this.installedRepository.getInstalledExtensions(currentNamespace);\n\n                // Upgrade outdated extensions only when there is invalid extensions\n                for (InstalledExtension extension : installedExtensions) {\n                    if (!extension.isValid(currentNamespace)) {\n                        this.logger.debug(\"Enabling outdate extension step on wiki [{}]\"\n                            + \"because extension [{}] is invalid\", getWiki(), extension.getId());\n\n                        setState(null);\n                        break;\n                    }\n                }\n            }\n        }\n    }","commit_id":"27a39c497822b20223436aab0240ba18f26b4227","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    protected AbstractJobStatus<DistributionRequest> createNewStatus(DistributionRequest request)\n    {\n        // TODO: make steps components automatically discovered so that any module can add custom steps\n\n        List<DistributionStepStatus> steps = new ArrayList<DistributionStepStatus>(2);\n\n        ExtensionId extensionUI = this.distributionManager.getUIExtensionId();\n\n        // Step 1: Install/upgrade main wiki UI\n\n        // Only if the UI is not already installed\n        if (this.installedRepository.getInstalledExtension(extensionUI) == null) {\n            steps.add(new DistributionStepStatus(\"extension.mainui\"));\n        }\n\n        DistributionState state = this.distributionManager.getDistributionState();\n\n        // Step 2: Upgrade outdated extensions\n\n        // Upgrade outdated extension only when the distribution changed\n        if (!this.installedRepository.getInstalledExtensions().isEmpty()) {\n            steps.add(new DistributionStepStatus(\"extension.outdatedextensions\"));\n        }\n\n        // Create status\n\n        DistributionJobStatus status =\n            new DistributionJobStatus(request, this.observationManager, this.loggerManager, steps);\n\n        if (this.distributionManager.getDistributionExtension() != null) {\n            DistributionJobStatus previousStatus = this.distributionManager.getPreviousJobStatus();\n\n            if (previousStatus != null\n                && previousStatus.getDistributionExtension() != null\n                && !ObjectUtils.equals(previousStatus.getDistributionExtension(),\n                    this.distributionManager.getDistributionExtension())) {\n                status.setDistributionExtension(previousStatus.getDistributionExtension());\n                status.setDistributionExtensionUi(previousStatus.getDistributionExtensionUi());\n            }\n\n            status.setDistributionExtension(this.distributionManager.getDistributionExtension().getId());\n            status.setDistributionExtensionUi(extensionUI);\n        }\n\n        return status;\n    }","id":69882,"modified_method":"@Override\n    protected AbstractJobStatus<DistributionRequest> createNewStatus(DistributionRequest request)\n    {\n        // TODO: make steps components automatically discovered so that any module can add custom steps\n\n        List<DistributionStepStatus> steps = new ArrayList<DistributionStepStatus>(2);\n\n        ExtensionId extensionUI = this.distributionManager.getUIExtensionId();\n\n        // Step 1: Install/upgrade main wiki UI\n\n        // Only if the UI is not already installed\n        if (this.installedRepository.getInstalledExtension(extensionUI) == null) {\n            steps.add(new DistributionStepStatus(\"extension.mainui\"));\n        }\n\n        DistributionState state = this.distributionManager.getDistributionState();\n\n        // Step 2: Upgrade outdated extensions\n\n        // Upgrade outdated extension only when the distribution changed\n        for (InstalledExtension extension : this.installedRepository.getInstalledExtensions()) {\n            Collection<String> namespaces = extension.getNamespaces();\n            if (namespaces == null) {\n                if (!extension.isValid(null)) {\n                    steps.add(new DistributionStepStatus(\"extension.outdatedextensions\"));\n                    break;\n                }\n            } else {\n                for (String namespace : namespaces) {\n                    if (!extension.isValid(namespace)) {\n                        steps.add(new DistributionStepStatus(\"extension.outdatedextensions\"));\n                        break;\n                    }\n                }\n            }\n        }\n\n        // Create status\n\n        DistributionJobStatus status =\n            new DistributionJobStatus(request, this.observationManager, this.loggerManager, steps);\n\n        if (this.distributionManager.getDistributionExtension() != null) {\n            DistributionJobStatus previousStatus = this.distributionManager.getPreviousJobStatus();\n\n            if (previousStatus != null\n                && previousStatus.getDistributionExtension() != null\n                && !ObjectUtils.equals(previousStatus.getDistributionExtension(),\n                    this.distributionManager.getDistributionExtension())) {\n                status.setDistributionExtension(previousStatus.getDistributionExtension());\n                status.setDistributionExtensionUi(previousStatus.getDistributionExtensionUi());\n            }\n\n            status.setDistributionExtension(this.distributionManager.getDistributionExtension().getId());\n            status.setDistributionExtensionUi(extensionUI);\n        }\n\n        return status;\n    }","commit_id":"ef5fa715b51e0638d0384aede984e210dae4305c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public static ArrayList<Byte> getQualsAsArrayList( List<SAMRecord> reads, List<Integer> offsets, boolean includeDeletions ) {\n        ArrayList<Byte> quals = new ArrayList<Byte>(reads.size());\n        for ( int i = 0; i < reads.size(); i++ ) {\n            SAMRecord read = reads.get(i);\n            int offset = offsets.get(i);\n\n            // skip deletion sites\n            if ( offset == -1 ) {\n                if ( includeDeletions )  // we need the qual vector to be the same length as base vector!\n                    quals.add((byte)0);\n            } else {\n                byte qual = read.getBaseQualities()[offset];\n                quals.add(qual);\n            }\n        }\n        return quals;\n    }","id":69883,"modified_method":"public static ArrayList<Byte> getQualsAsArrayList( List<SAMRecord> reads, List<Integer> offsets, boolean includeDeletions ) {\n        ArrayList<Byte> quals = new ArrayList<Byte>(reads.size());\n        for (byte value : getQualsAsArray(reads, offsets, includeDeletions))\n            quals.add(value);\n        return quals;\n    }","commit_id":"33dcfc858d939d15ef9e3cad0fe450d93cf5777d","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static byte[] getBases( List<SAMRecord> reads, List<Integer> offsets ) {\n        return ArrayList2byte(getBasesAsArrayList( reads, offsets ));\n    }","id":69884,"modified_method":"public static byte[] getBases( List<SAMRecord> reads, List<Integer> offsets ) {\n        return getBasesAsArray(reads,offsets,false);\n    }","commit_id":"33dcfc858d939d15ef9e3cad0fe450d93cf5777d","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static byte[] getQuals( List<SAMRecord> reads, List<Integer> offsets ) {\n        return ArrayList2byte(getQualsAsArrayList( reads, offsets ));\n    }","id":69885,"modified_method":"public static byte[] getQuals( List<SAMRecord> reads, List<Integer> offsets ) {\n        return getQualsAsArray( reads, offsets,false);\n    }","commit_id":"33dcfc858d939d15ef9e3cad0fe450d93cf5777d","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static byte[] getQuals( List<SAMRecord> reads, List<Integer> offsets, boolean includeDeletions ) {\n        return ArrayList2byte(getQualsAsArrayList( reads, offsets, includeDeletions ));\n    }","id":69886,"modified_method":"public static byte[] getQuals( List<SAMRecord> reads, List<Integer> offsets, boolean includeDeletions ) {\n        return getQualsAsArray( reads, offsets, includeDeletions);\n    }","commit_id":"33dcfc858d939d15ef9e3cad0fe450d93cf5777d","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static byte[] getBases( List<SAMRecord> reads, List<Integer> offsets, boolean includeDeletions ) {\n        return ArrayList2byte(getBasesAsArrayList( reads, offsets, includeDeletions ));\n    }","id":69887,"modified_method":"public static byte[] getBases( List<SAMRecord> reads, List<Integer> offsets, boolean includeDeletions ) {\n        return getBasesAsArray(reads,offsets,includeDeletions);\n    }","commit_id":"33dcfc858d939d15ef9e3cad0fe450d93cf5777d","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static ArrayList<Byte> getBasesAsArrayList( List<SAMRecord> reads, List<Integer> offsets, boolean includeDeletions ) {\n        ArrayList<Byte> bases = new ArrayList<Byte>(reads.size());\n        for ( int i = 0; i < reads.size(); i++ ) {\n            SAMRecord read = reads.get(i);\n            int offset = offsets.get(i);\n            if ( offset == -1 ) {\n                if ( includeDeletions )\n                    bases.add((byte)DELETION_CHAR);\n            } else {\n                bases.add(read.getReadBases()[offset]);\n            }\n        }\n        return bases;\n     }","id":69888,"modified_method":"public static ArrayList<Byte> getBasesAsArrayList( List<SAMRecord> reads, List<Integer> offsets, boolean includeDeletions ) {\n        ArrayList<Byte> bases = new ArrayList<Byte>(reads.size());\n        for (byte value : getBasesAsArray(reads, offsets, includeDeletions))\n            bases.add(value);\n        return bases;\n     }","commit_id":"33dcfc858d939d15ef9e3cad0fe450d93cf5777d","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * our map function, which takes the reads spanning this locus, any associated reference ordered data,\n     * and the reference information.  We output a simple genotype call as the result of this function\n     *\n     * @param tracker the reference ordered data tracker\n     * @param ref     the reference information\n     * @param context the locus context, which contains all of the read information\n     * @return a SimpleCall, which stores the genotype we're calling and the LOD score\n     */\n    public SimpleCall map(RefMetaDataTracker tracker, ReferenceContext ref, AlignmentContext context) {\n        if (ref.getBase() == 'N' || ref.getBase() == 'n') return null; // we don't deal with the N ref base case\n\n        ReadBackedPileup pileup = new ReadBackedPileup(context.getLocation(), ref.getBase(), context.getReads(), context.getOffsets());\n        double likelihoods[] = DiploidGenotypePriors.getReferencePolarizedPriors(ref.getBase(),\n                DiploidGenotypePriors.HUMAN_HETEROZYGOSITY,\n                DiploidGenotypePriors.PROB_OF_TRISTATE_GENOTYPE);\n\n        for (GENOTYPE genotype : GENOTYPE.values())\n            for (byte pileupBase : pileup.getBases()) {\n                // todo -- epsilon isn't a constant variable, it's the de-phred error probabilities of the base\n                // you need to grab the qual score associated with this base and calcluate\n                // epsilon = pow(10, qual / -10.0)\n                // Also, only do the calculations below for bases with qual > 0\n                for (char genotypeBase : genotype.toString().toCharArray())\n                    // todo -- all of these calculations should be in log10 space (like the priors are)\n                    if (genotypeBase == pileupBase)\n                        // todo -- potential int flow problems there.  Needs parens\n                        likelihoods[genotype.ordinal()] += 1 / 2 * (1 - EPSILON) + EPSILON / 3;\n                    else\n                        likelihoods[genotype.ordinal()] += EPSILON / 3;\n            }\n\n        Integer sortedList[] = Utils.SortPermutation(likelihoods);\n\n        // get our reference genotype\n        String refGenotype = (String.valueOf(ref.getBase()) + String.valueOf(ref.getBase())).toUpperCase();\n\n        // create call using the best genotype (GENOTYPE.values()[sortedList[9]].toString())\n        // and calculate the LOD score from best - ref (likelihoods[sortedList[9]] - likelihoods[sortedList[8])\n        return new SimpleCall(context.getLocation(),\n                GENOTYPE.values()[sortedList[9]].toString(),\n                likelihoods[sortedList[9]] - likelihoods[GENOTYPE.valueOf(refGenotype).ordinal()]);\n    }","id":69889,"modified_method":"/**\n     * our map function, which takes the reads spanning this locus, any associated reference ordered data,\n     * and the reference information.  We output a simple genotype call as the result of this function\n     *\n     * @param tracker the reference ordered data tracker\n     * @param ref     the reference information\n     * @param context the locus context, which contains all of the read information\n     * @return a SimpleCall, which stores the genotype we're calling and the LOD score\n     */\n    public SimpleCall map(RefMetaDataTracker tracker, ReferenceContext ref, AlignmentContext context) {\n        if (ref.getBase() == 'N' || ref.getBase() == 'n') return null; // we don't deal with the N ref base case\n\n        ReadBackedPileup pileup = new ReadBackedPileup(context.getLocation(), ref.getBase(), context.getReads(), context.getOffsets());\n        double likelihoods[] = DiploidGenotypePriors.getReferencePolarizedPriors(ref.getBase(),\n                                                                                 DiploidGenotypePriors.HUMAN_HETEROZYGOSITY,\n                                                                                 DiploidGenotypePriors.PROB_OF_TRISTATE_GENOTYPE);\n\n        for (GENOTYPE genotype : GENOTYPE.values())\n            for (int index = 0; index < pileup.getBases().length; index++) {\n                if (pileup.getQuals()[index] > 0) {\n                    double epsilon = Math.pow(10, pileup.getQuals()[index] / -10.0);\n                    byte pileupBase = pileup.getBases()[index];\n                    for (char genotypeBase : genotype.toString().toCharArray())\n                        if (genotypeBase == pileupBase)\n                            likelihoods[genotype.ordinal()] += Math.log10(0.5 * ((1 - epsilon) + epsilon / 3));\n                        else\n                            likelihoods[genotype.ordinal()] += Math.log10(epsilon / 3);\n                }\n            }\n\n        Integer sortedList[] = Utils.SortPermutation(likelihoods);\n\n        // get our reference genotype\n        String refGenotype = (String.valueOf(ref.getBase()) + String.valueOf(ref.getBase())).toUpperCase();\n\n        // create call using the best genotype (GENOTYPE.values()[sortedList[9]].toString())\n        // and calculate the LOD score from best - ref (likelihoods[sortedList[9]] - likelihoods[sortedList[8])\n        return new SimpleCall(context.getLocation(),\n                              GENOTYPE.values()[sortedList[9]].toString(),\n                              likelihoods[sortedList[9]] - likelihoods[GENOTYPE.valueOf(refGenotype).ordinal()]);\n    }","commit_id":"33dcfc858d939d15ef9e3cad0fe450d93cf5777d","url":"https://github.com/broadgsa/gatk"},{"original_method":"public Integer map(RefMetaDataTracker tracker, ReferenceContext ref, AlignmentContext context) {\n        if ( tracker == null )\n            return 0;\n\n        Collection<VariantContext> VCs = tracker.getVariantContexts(ref, \"variant\", null, context.getLocation(), true, false);\n        for ( VariantContext vc : VCs )\n            filterAndWrite(ref.getBase(), vc);\n\n        return 0;\n    }","id":69890,"modified_method":"public Integer map(RefMetaDataTracker tracker, ReferenceContext ref, AlignmentContext context) {\n        if ( tracker == null )\n            return 0;\n\n        Collection<VariantContext> VCs = tracker.getVariantContexts(ref, \"variant\", null, context.getLocation(), true, false);\n        for ( VariantContext vc : VCs )\n            filterAndWrite(ref.getBases(), vc);\n\n        return 0;\n    }","commit_id":"df76474b34ef372f74234d9cbca5bc014f13aad1","url":"https://github.com/broadgsa/gatk"},{"original_method":"private void filterAndWrite(byte ref, VariantContext vc) {\n\n        totalLocs++;\n\n        byte recordRef = vc.getReference().getBases()[0];\n\n        if ( recordRef != ref ) {\n            failedLocs++;\n        } else {\n            writer.add(vc, ref);\n        }\n    }","id":69891,"modified_method":"private void filterAndWrite(byte[] ref, VariantContext vc) {\n\n        totalLocs++;\n\n        boolean failed = false;\n        byte[] recordRef = vc.getReference().getBases();\n        for (int i = 0; i < recordRef.length; i++) {\n            if ( recordRef[i] != ref[i + (vc.isSNP() ? 0 : 1)] ) {\n                failed = true;\n                break;\n            }\n        }\n\n        if ( failed )\n            failedLocs++;\n        else\n            writer.add(vc, ref[0]);\n    }","commit_id":"df76474b34ef372f74234d9cbca5bc014f13aad1","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Calculates he probability of the data (reference sample reads) given the phred scaled site quality score.\n     * @param data - array of bases from the reference sample\n     * @param refBases - base from the reference sequence for this site\n     * @param phredScaledPrior - phred scaled expected site quality (prior)\n     * @return an array of log10 probabilities of site qualities ranging from Q1-Q40.\n     */\n    private double[] buildErrorModel (byte[] data, Collection<Byte> refBases, byte phredScaledPrior) {\n        double [] model = new double[maxQualityScore+1];\n        int coverage = data.length;\n        int mismatches = getNumberOfMismatches(data, refBases);\n        int matches = coverage - mismatches;\n\n        for (byte q=0; q<=maxQualityScore; q++) {\n            double probMismatch = MathUtils.phredScaleToProbability(q);\n            model[q] = MathUtils.phredScaleToLog10Probability(phredScaledPrior) +\n                       MathUtils.log10BinomialCoefficient(coverage, mismatches) +\n                       mismatches * Math.log10(probMismatch) +\n                       matches * Math.log10(1-probMismatch);\n        }\n        return model;\n    }","id":69892,"modified_method":"/**\n     * Calculates he probability of the data (reference sample reads) given the phred scaled site quality score.\n     * @param referenceSamplePileup reference sample pileup\n     * @param refBases base from the reference sequence for this site\n     * @param phredScaledPrior phred scaled expected site quality (prior)\n     * @return an array of log10 probabilities of site qualities ranging from Q1-Q40.\n     */\n    private double[] buildErrorModel (ReadBackedPileup referenceSamplePileup, Collection<Byte> refBases, byte phredScaledPrior) {\n        double [] model = new double[maxQualityScore+1];\n        byte [] data = referenceSamplePileup.getBases();\n\n        int coverage = data.length;\n        int mismatches = getNumberOfMismatches(data, refBases);\n        int matches = coverage - mismatches;\n\n        for (byte q=0; q<=maxQualityScore; q++) {\n            double probMismatch = MathUtils.phredScaleToProbability(q);\n            model[q] = MathUtils.phredScaleToLog10Probability(phredScaledPrior) +\n                       MathUtils.log10BinomialCoefficient(coverage, mismatches) +\n                       mismatches * Math.log10(probMismatch) +\n                       matches * Math.log10(1-probMismatch);\n        }\n        return model;\n    }","commit_id":"772291c38fb3dae213030dd4882d692fd1fa9dec","url":"https://github.com/broadgsa/gatk"},{"original_method":"public Integer map(RefMetaDataTracker tracker, ReferenceContext ref, AlignmentContext context) {\n\n        // Get reference base from VCF or Reference\n        VariantContext referenceContext = tracker.getVariantContext(ref, REFERENCE_ROD_NAME, context.getLocation());\n        ArrayList<Byte> trueReferenceBase = new ArrayList<Byte>();\n\n        if (referenceContext.isIndel()) {\n            return 0; // TODO: add special treatment for extended events. For Now just skip these altogether.\n        }\n\n        // Site is not a variant, take from the reference\n        if (referenceContext == null) {\n            trueReferenceBase.add(ref.getBase());\n        }\n\n        // Site has a VCF entry -- is variant\n        else {\n            // Site is filtered, don't mess with it if option is set\n            if (referenceContext.isFiltered() && EXCLUDE_FILTERED_REFERENCE_SITES) {\n                return 0;\n            }\n\n            Genotype referenceGenotype = referenceContext.getGenotype(referenceSampleName);\n            List<Allele> referenceAlleles = referenceGenotype.getAlleles();\n            for (Allele allele : referenceAlleles) {\n                byte [] bases = allele.getBases();\n                for (byte b : bases) {\n                    trueReferenceBase.add(b);\n                }\n            }\n        }\n\n\n\n        ReadBackedPileup contextPileup = context.getBasePileup();\n        Set<String> lanesInLocus = getLaneIDs(contextPileup.getReadGroups());\n        for (String laneID : lanesInLocus) {\n            // make a pileup for this lane\n            ReadBackedPileup lanePileup = contextPileup.getPileupForLane(laneID);\n\n            // make a pileup without the reference sample\n            HashSet<String> samples = new HashSet<String>(lanePileup.getSampleNames());\n            samples.remove(referenceSampleName);\n\n            ReadBackedPileup poolPileup = lanePileup.getPileupForSampleNames(samples);\n\n            // create a reference pileup to build error model\n            ReadBackedPileup referenceSamplePileup = lanePileup.getPileupForSampleName(referenceSampleName);\n\n            // We can only analyze loci where we have reference sample coverage. And it only makes sense to build\n            // an error model if the site has reads in the pileup (other than the reference sample)\n            if (referenceSamplePileup != null && !referenceSamplePileup.isEmpty() && !poolPileup.isEmpty()) {\n\n                // Build error model\n                double [] errorModel = buildErrorModel(referenceSamplePileup.getBases(), trueReferenceBase, defaultPrior);\n\n                // Debug error model\n                System.out.println(laneID + \":\");\n                for (double v : errorModel)\n                    System.out.print(v + \", \");\n                System.out.println();\n\n                // todo: call each pool for this site\n                // todo: merge pools\n                // todo: decide whether or not it's a variant\n            }\n        }\n        return 1;\n    }","id":69893,"modified_method":"public Integer map(RefMetaDataTracker tracker, ReferenceContext ref, AlignmentContext context) {\n\n        // Get reference base from VCF or Reference\n        VariantContext referenceSampleContext = tracker.getVariantContext(ref, REFERENCE_ROD_NAME, context.getLocation());\n        Collection<Byte> trueReferenceBases = getTrueBases(referenceSampleContext, ref);\n\n        // If there is no true reference base in this locus, skip it.\n        if (trueReferenceBases == null)\n            return 0;\n\n        ReadBackedPileup contextPileup = context.getBasePileup();\n        Set<String> lanesInLocus = getLaneIDs(contextPileup.getReadGroups());\n        for (String laneID : lanesInLocus) {\n            // make a pileup for this lane\n            ReadBackedPileup lanePileup = contextPileup.getPileupForLane(laneID);\n            Collection<String> samplesInLane = lanePileup.getSampleNames();\n\n            // we can only analyze loci that have reads for the reference sample\n            if (samplesInLane.contains(referenceSampleName)) {\n\n                // build reference sample pileup\n                ReadBackedPileup referenceSamplePileup = lanePileup.getPileupForSampleName(referenceSampleName);\n\n                // Build error model\n                double [] errorModel = buildErrorModel(referenceSamplePileup, trueReferenceBases, defaultPrior);\n\n                // iterate over all samples (pools) in this lane except the reference\n                samplesInLane.remove(referenceSampleName);\n                for (String pool : samplesInLane) {\n                    ReadBackedPileup poolPileup = lanePileup.getPileupForSampleName(pool);\n\n                    // Debug error model\n                    if (referenceSamplePileup.getBases().length > 50) {\n                        System.out.println(\"\\n\" + laneID + \" - \" + pool + \": \" + referenceSamplePileup.getBases().length);\n                        for (double v : errorModel)\n                            System.out.print(v + \", \");\n                        System.out.println();\n                    }\n                }\n            }\n            // todo: call each pool for this site\n            // todo: merge pools\n            // todo: decide whether or not it's a variant\n        }\n        return 1;\n    }","commit_id":"772291c38fb3dae213030dd4882d692fd1fa9dec","url":"https://github.com/broadgsa/gatk"},{"original_method":"private static void buildContatenationText(PsiExpression expression,\n                                               StringBuilder out) {\n        if (expression instanceof PsiLiteralExpression) {\n            final String text = expression.getText();\n            final PsiType type = expression.getType();\n            if (type != null && type.equalsToText(\"java.lang.String\")) {\n                final int textLength = text.length();\n                if (textLength > 2) {\n                    out.append(text.substring(1, textLength - 1));\n                }\n            } else {\n                out.append(text);\n            }\n        } else if (expression instanceof PsiBinaryExpression) {\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression) expression;\n            final Project project = expression.getProject();\n            final JavaPsiFacade facade = JavaPsiFacade.getInstance(project);\n            final PsiConstantEvaluationHelper evaluationHelper =\n                    facade.getConstantEvaluationHelper();\n            final Object result =\n                    evaluationHelper.computeConstantExpression(expression);\n            if (result != null) {\n                out.append(result.toString());\n            } else {\n                final PsiExpression lhs = binaryExpression.getLOperand();\n                buildContatenationText(lhs, out);\n                final PsiExpression rhs = binaryExpression.getROperand();\n                if (rhs != null) {\n                    buildContatenationText(rhs, out);\n                }\n            }\n        } else {\n            out.append(\"?\");\n        }\n    }","id":69894,"modified_method":"private static void buildContatenationText(PsiExpression expression,\n                                               StringBuilder out) {\n        if (expression instanceof PsiLiteralExpression) {\n            final String text = expression.getText();\n            final PsiType type = expression.getType();\n            if (type != null && (type.equalsToText(\"java.lang.String\")\n                    || type.equalsToText(\"char\"))) {\n                final int textLength = text.length();\n                if (textLength > 2) {\n                    out.append(text.substring(1, textLength - 1));\n                }\n            } else {\n                out.append(text);\n            }\n        } else if (expression instanceof PsiBinaryExpression) {\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression) expression;\n            final Project project = expression.getProject();\n            final JavaPsiFacade facade = JavaPsiFacade.getInstance(project);\n            final PsiConstantEvaluationHelper evaluationHelper =\n                    facade.getConstantEvaluationHelper();\n            final Object result =\n                    evaluationHelper.computeConstantExpression(expression);\n            if (result != null) {\n                out.append(result.toString());\n            } else {\n                final PsiExpression lhs = binaryExpression.getLOperand();\n                buildContatenationText(lhs, out);\n                final PsiExpression rhs = binaryExpression.getROperand();\n                if (rhs != null) {\n                    buildContatenationText(rhs, out);\n                }\n            }\n        } else {\n            out.append(\"?\");\n        }\n    }","commit_id":"59460e4ee07a0affd7c1a28837875c6dced9ae3f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String createInitializerReplacementText(PsiType varType, PsiExpression initializer) {\n      final PsiType initializerType = initializer.getType();\n      final PsiClassType rawType = initializerType instanceof PsiClassType ? ((PsiClassType)initializerType).rawType() : null;\n      final PsiClassType rawVarType = varType instanceof PsiClassType ? ((PsiClassType)varType).rawType() : null;\n      if (rawType != null && rawVarType != null &&\n          rawType.equalsToText(CommonClassNames.JAVA_UTIL_ARRAY_LIST) &&\n          rawVarType.equalsToText(CommonClassNames.JAVA_UTIL_LIST)) {\n        return \"toList()\";\n      }\n      else if (rawType != null && rawVarType != null &&\n               rawType.equalsToText(CommonClassNames.JAVA_UTIL_HASH_SET) &&\n               rawVarType.equalsToText(CommonClassNames.JAVA_UTIL_SET)) {\n        return \"toSet()\";\n      }\n      else if (rawType != null) {\n        return \"toCollection(\" + rawType.getClassName() + \"::new)\";\n      }\n      else {\n        return \"toCollection(() -> \" + initializer.getText() +\")\";\n      }\n    }","id":69895,"modified_method":"private static String createInitializerReplacementText(PsiType varType, PsiExpression initializer) {\n      final PsiType initializerType = initializer.getType();\n      final PsiClassType rawType = initializerType instanceof PsiClassType ? ((PsiClassType)initializerType).rawType() : null;\n      final PsiClassType rawVarType = varType instanceof PsiClassType ? ((PsiClassType)varType).rawType() : null;\n      if (rawType != null && rawVarType != null &&\n          rawType.equalsToText(CommonClassNames.JAVA_UTIL_ARRAY_LIST) &&\n          (rawVarType.equalsToText(CommonClassNames.JAVA_UTIL_LIST) || rawVarType.equalsToText(CommonClassNames.JAVA_UTIL_COLLECTION))) {\n        return \"toList()\";\n      }\n      else if (rawType != null && rawVarType != null &&\n               rawType.equalsToText(CommonClassNames.JAVA_UTIL_HASH_SET) &&\n               (rawVarType.equalsToText(CommonClassNames.JAVA_UTIL_SET) || rawVarType.equalsToText(CommonClassNames.JAVA_UTIL_COLLECTION))) {\n        return \"toSet()\";\n      }\n      else if (rawType != null) {\n        return \"toCollection(\" + rawType.getClassName() + \"::new)\";\n      }\n      else {\n        return \"toCollection(() -> \" + initializer.getText() +\")\";\n      }\n    }","commit_id":"f0276b724d437f4760bcb03888c1a3958487a9ee","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    protected void processIntention(@NotNull PsiElement element)\n            throws IncorrectOperationException {\n        PsiBinaryExpression expression =\n                (PsiBinaryExpression)element;\n        PsiElement parent = expression.getParent();\n        while (ConcatenationUtils.isConcatenation(parent)) {\n            expression = (PsiBinaryExpression)parent;\n            assert expression != null;\n            parent = expression.getParent();\n        }\n\n        final StringBuilder formatString = new StringBuilder();\n        final List<PsiExpression> formatParameters = new ArrayList();\n        buildFormatString(expression, formatString, formatParameters);\n        if (replaceWithPrintfExpression(expression, formatString,\n                formatParameters)) {\n            return;\n        }\n        final StringBuilder newExpression = new StringBuilder();\n        newExpression.append(\"java.lang.String.format(\\\"\");\n        newExpression.append(formatString);\n        newExpression.append('\\\"');\n        for (PsiExpression formatParameter : formatParameters) {\n            newExpression.append(\", \");\n            newExpression.append(formatParameter.getText());\n        }\n        newExpression.append(')');\n        replaceExpression(newExpression.toString(), expression);\n    }","id":69896,"modified_method":"@Override\n    protected void processIntention(@NotNull PsiElement element)\n            throws IncorrectOperationException {\n        PsiBinaryExpression expression =\n                (PsiBinaryExpression)element;\n        PsiElement parent = expression.getParent();\n        while (ConcatenationUtils.isConcatenation(parent)) {\n            expression = (PsiBinaryExpression)parent;\n            if (expression == null) {\n                return;\n            }\n            parent = expression.getParent();\n        }\n\n        final StringBuilder formatString = new StringBuilder();\n        final List<PsiExpression> formatParameters = new ArrayList();\n        buildFormatString(expression, formatString, formatParameters);\n        if (replaceWithPrintfExpression(expression, formatString,\n                formatParameters)) {\n            return;\n        }\n        final StringBuilder newExpression = new StringBuilder();\n        newExpression.append(\"java.lang.String.format(\\\"\");\n        newExpression.append(formatString);\n        newExpression.append('\\\"');\n        for (PsiExpression formatParameter : formatParameters) {\n            newExpression.append(\", \");\n            newExpression.append(formatParameter.getText());\n        }\n        newExpression.append(')');\n        replaceExpression(newExpression.toString(), expression);\n    }","commit_id":"95b9ac083a2b06859c9b145e21361b915a78e53a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void appendFormatString(PsiExpression lhs,\n                                    StringBuilder formatString,\n                                    List<PsiExpression> formatParameters) {\n        if (lhs instanceof PsiLiteralExpression) {\n            final String text = lhs.getText();\n            final int length = text.length();\n            final PsiType type = lhs.getType();\n            if (type != null && type.equalsToText(\"java.lang.String\")) {\n                if (length > 2) {\n                    formatString.append(text.substring(1, length - 1));\n                }\n            } else {\n                formatString.append(text);\n            }\n        } else if (lhs instanceof PsiBinaryExpression) {\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression) lhs;\n            buildFormatString(binaryExpression, formatString, formatParameters);\n        } else {\n            final PsiType type = lhs.getType();\n            if (type != null &&\n                    (type.equalsToText(\"long\") ||\n                    type.equalsToText(\"int\") ||\n                    type.equalsToText(\"java.lang.Long\") ||\n                    type.equalsToText(\"java.lang.Integer\"))) {\n                formatString.append(\"%d\");\n            } else {\n                formatString.append(\"%s\");\n            }\n            formatParameters.add(lhs);\n        }\n    }","id":69897,"modified_method":"private void appendFormatString(PsiExpression lhs,\n                                    StringBuilder formatString,\n                                    List<PsiExpression> formatParameters) {\n        if (lhs instanceof PsiLiteralExpression) {\n            final String text = lhs.getText();\n            final int length = text.length();\n            final PsiType type = lhs.getType();\n            if (type != null && (type.equalsToText(\"java.lang.String\") ||\n                 type.equalsToText(\"char\"))) {\n                if (length > 2) {\n                    formatString.append(text.substring(1, length - 1));\n                }\n            } else {\n                formatString.append(text);\n            }\n        } else if (lhs instanceof PsiBinaryExpression) {\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression) lhs;\n            buildFormatString(binaryExpression, formatString, formatParameters);\n        } else {\n            final PsiType type = lhs.getType();\n            if (type != null &&\n                    (type.equalsToText(\"long\") ||\n                    type.equalsToText(\"int\") ||\n                    type.equalsToText(\"java.lang.Long\") ||\n                    type.equalsToText(\"java.lang.Integer\"))) {\n                formatString.append(\"%d\");\n            } else {\n                formatString.append(\"%s\");\n            }\n            formatParameters.add(lhs);\n        }\n    }","commit_id":"95b9ac083a2b06859c9b145e21361b915a78e53a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static Path patch(\n\t\tPath targetFilePath, InputStream deltaInputStream) {\n\n\t\tif (Files.notExists(targetFilePath)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tFileInputStream targetInputStream = null;\n\t\tFileChannel targetFileChannel = null;\n\t\tOutputStream patchedFileOutputStream = null;\n\t\tWritableByteChannel patchedWritableByteChannel = null;\n\t\tReadableByteChannel deltaReadableByteChannel = null;\n\n\t\ttry {\n\t\t\ttargetInputStream = new FileInputStream(\n\t\t\t\tFilePathNameUtil.getFilePathName(targetFilePath));\n\n\t\t\ttargetFileChannel = targetInputStream.getChannel();\n\n\t\t\tPath patchedFilePath = Files.createTempFile(\n\t\t\t\tString.valueOf(targetFilePath.getFileName()), \".tmp\");\n\n\t\t\tpatchedFileOutputStream = Files.newOutputStream(patchedFilePath);\n\n\t\t\tpatchedWritableByteChannel = Channels.newChannel(\n\t\t\t\tpatchedFileOutputStream);\n\n\t\t\tdeltaReadableByteChannel = Channels.newChannel(deltaInputStream);\n\n\t\t\tByteChannelReader deltaByteChannelReader = new ByteChannelReader(\n\t\t\t\tdeltaReadableByteChannel);\n\n\t\t\tDeltaUtil.patch(\n\t\t\t\ttargetFileChannel, patchedWritableByteChannel,\n\t\t\t\tdeltaByteChannelReader);\n\n\t\t\tFiles.move(\n\t\t\t\tpatchedFilePath, targetFilePath,\n\t\t\t\tStandardCopyOption.REPLACE_EXISTING);\n\n\t\t\treturn targetFilePath;\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\t_logger.error(ioe.getMessage(), ioe);\n\n\t\t\treturn null;\n\t\t}\n\t\tfinally {\n\t\t\tStreamUtil.cleanUp(targetInputStream);\n\t\t\tStreamUtil.cleanUp(targetFileChannel);\n\t\t\tStreamUtil.cleanUp(patchedFileOutputStream);\n\t\t\tStreamUtil.cleanUp(patchedWritableByteChannel);\n\t\t\tStreamUtil.cleanUp(deltaReadableByteChannel);\n\t\t}\n\t}","id":69898,"modified_method":"public static Path patch(\n\t\tPath targetFilePath, InputStream deltaInputStream) {\n\n\t\tif (Files.notExists(targetFilePath)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tFileInputStream targetInputStream = null;\n\t\tFileChannel targetFileChannel = null;\n\t\tPath patchedFilePath = null;\n\t\tOutputStream patchedFileOutputStream = null;\n\t\tWritableByteChannel patchedWritableByteChannel = null;\n\t\tReadableByteChannel deltaReadableByteChannel = null;\n\n\t\ttry {\n\t\t\ttargetInputStream = new FileInputStream(\n\t\t\t\tFilePathNameUtil.getFilePathName(targetFilePath));\n\n\t\t\ttargetFileChannel = targetInputStream.getChannel();\n\n\t\t\tpatchedFilePath = Files.createTempFile(\n\t\t\t\tString.valueOf(targetFilePath.getFileName()), \".tmp\");\n\n\t\t\tpatchedFileOutputStream = Files.newOutputStream(patchedFilePath);\n\n\t\t\tpatchedWritableByteChannel = Channels.newChannel(\n\t\t\t\tpatchedFileOutputStream);\n\n\t\t\tdeltaReadableByteChannel = Channels.newChannel(deltaInputStream);\n\n\t\t\tByteChannelReader deltaByteChannelReader = new ByteChannelReader(\n\t\t\t\tdeltaReadableByteChannel);\n\n\t\t\tDeltaUtil.patch(\n\t\t\t\ttargetFileChannel, patchedWritableByteChannel,\n\t\t\t\tdeltaByteChannelReader);\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\t_logger.error(ioe.getMessage(), ioe);\n\n\t\t\treturn null;\n\t\t}\n\t\tfinally {\n\t\t\tStreamUtil.cleanUp(targetInputStream);\n\t\t\tStreamUtil.cleanUp(targetFileChannel);\n\t\t\tStreamUtil.cleanUp(patchedFileOutputStream);\n\t\t\tStreamUtil.cleanUp(patchedWritableByteChannel);\n\t\t\tStreamUtil.cleanUp(deltaReadableByteChannel);\n\t\t}\n\n\t\ttry {\n\t\t\tFiles.move(\n\t\t\t\tpatchedFilePath, targetFilePath,\n\t\t\t\tStandardCopyOption.REPLACE_EXISTING);\n\n\t\t\treturn targetFilePath;\n\t\t}\n\t\tcatch (IOException ioe) {\n\t\t\t_logger.error(ioe.getMessage(), ioe);\n\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"4a21c442767ac55a0d476abfd0480fa969d0c5d0","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public boolean move(VirtualFile file, VirtualFile toDir) throws IOException {\n    File srcFile = getIOFile(file);\n    File dstFile = new File(getIOFile(toDir), file.getName());\n\n    SvnVcs vcs = getVCS(toDir);\n    if (vcs == null) {\n      vcs = getVCS(file);\n    }\n    if (vcs == null) {\n      return false;\n    }\n    myFilesToRefresh.add(file.getParent());\n    return move(vcs, srcFile, dstFile);\n  }","id":69899,"modified_method":"public boolean move(VirtualFile file, VirtualFile toDir) throws IOException {\n    File srcFile = getIOFile(file);\n    File dstFile = new File(getIOFile(toDir), file.getName());\n\n    SvnVcs vcs = getVCS(toDir);\n    if (vcs == null) {\n      vcs = getVCS(file);\n    }\n    if (vcs == null) {\n      return false;\n    }\n    final VirtualFile oldParent = file.getParent();\n    myFilesToRefresh.add(oldParent);\n    final VcsDirtyScopeManager dirtyScopeManager = VcsDirtyScopeManager.getInstance(vcs.getProject());\n    final boolean result = move(vcs, srcFile, dstFile);\n    dirtyScopeManager.dirDirtyRecursively(toDir, true);\n    dirtyScopeManager.dirDirtyRecursively(oldParent, true);\n    return result;\n  }","commit_id":"f2ab9114d5b58ff0a1c8e34a89595657701bd6d8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Test\n  public void testRenamePackageWithChildren() throws Exception {\n    final VirtualFile child = prepareDirectoriesForRename();\n\n    renameFileInCommand(child, \"newchild\");\n    final RunResult result = runSvn(\"status\");\n    verify(result, \"D child\", \"D child\\\\grandChild\", \"D child\\\\grandChild\\\\b.txt\", \"D child\\\\a.txt\", \"A + newchild\");\n\n    List<Change> changes = getAllChanges();\n    Assert.assertEquals(4, changes.size());\n    Collections.sort(changes, new Comparator<Change>() {\n      public int compare(final Change o1, final Change o2) {\n        final String p1 = FileUtil.toSystemIndependentName(o1.getBeforeRevision().getFile().getPath());\n        final String p2 = FileUtil.toSystemIndependentName(o2.getBeforeRevision().getFile().getPath());\n        return p1.compareTo(p2);\n      }\n    });\n    verifyChange(changes.get(0), \"child\", \"newchild\");\n    verifyChange(changes.get(1), \"child\\\\a.txt\", \"newchild\\\\a.txt\");\n    verifyChange(changes.get(2), \"child\\\\grandChild\", \"newchild\\\\grandChild\");\n    verifyChange(changes.get(3), \"child\\\\grandChild\\\\b.txt\", \"newchild\\\\grandChild\\\\b.txt\");\n\n    final VirtualFile newChild = myWorkingCopyDir.findChild(\"newchild\");\n    assert newChild != null;\n    changes = getChangesForFile(newChild.findChild(\"a.txt\"));\n    Assert.assertEquals(1, changes.size());\n    verifyChange(changes.get(0), \"child\\\\a.txt\", \"newchild\\\\a.txt\");\n\n    VcsDirtyScopeManager.getInstance(myProject).markEverythingDirty();\n    final ChangeListManager changeListManager = ChangeListManager.getInstance(myProject);\n    changeListManager.ensureUpToDate(false);\n    VirtualFile oldChild = myWorkingCopyDir.findChild(\"child\");\n    Assert.assertEquals(FileStatus.DELETED, changeListManager.getStatus(oldChild));\n  }","id":69900,"modified_method":"@Test\n  public void testRenamePackageWithChildren() throws Exception {\n    final VirtualFile child = prepareDirectoriesForRename();\n\n    renameFileInCommand(child, \"newchild\");\n    final RunResult result = runSvn(\"status\");\n    verify(result, \"D child\", \"D child\\\\grandChild\", \"D child\\\\grandChild\\\\b.txt\", \"D child\\\\a.txt\", \"A + newchild\");\n\n    List<Change> changes = getAllChanges();\n    Assert.assertEquals(4, changes.size());\n    sortChanges(changes);\n    verifyChange(changes.get(0), \"child\", \"newchild\");\n    verifyChange(changes.get(1), \"child\\\\a.txt\", \"newchild\\\\a.txt\");\n    verifyChange(changes.get(2), \"child\\\\grandChild\", \"newchild\\\\grandChild\");\n    verifyChange(changes.get(3), \"child\\\\grandChild\\\\b.txt\", \"newchild\\\\grandChild\\\\b.txt\");\n\n    final VirtualFile newChild = myWorkingCopyDir.findChild(\"newchild\");\n    assert newChild != null;\n    changes = getChangesForFile(newChild.findChild(\"a.txt\"));\n    Assert.assertEquals(1, changes.size());\n    verifyChange(changes.get(0), \"child\\\\a.txt\", \"newchild\\\\a.txt\");\n\n    VcsDirtyScopeManager.getInstance(myProject).markEverythingDirty();\n    final ChangeListManager changeListManager = ChangeListManager.getInstance(myProject);\n    changeListManager.ensureUpToDate(false);\n    VirtualFile oldChild = myWorkingCopyDir.findChild(\"child\");\n    Assert.assertEquals(FileStatus.DELETED, changeListManager.getStatus(oldChild));\n  }","commit_id":"f2ab9114d5b58ff0a1c8e34a89595657701bd6d8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Move a node\n     * @param srcPath  oak path to the source node to copy\n     * @param destPath  oak path to the destination\n     * @param transientOp  whether or not to perform the move in transient space\n     * @throws RepositoryException\n     */\n    public void move(String srcPath, String destPath, boolean transientOp, AccessManager accessManager)\n            throws RepositoryException {\n\n        Root moveRoot = transientOp ? root : contentSession.getLatestRoot();\n\n        // check destination\n        Tree dest = moveRoot.getTree(destPath);\n        if (dest.exists()) {\n            throw new ItemExistsException(destPath);\n        }\n\n        // check parent of destination\n        String destParentPath = PathUtils.getParentPath(destPath);\n        Tree destParent = moveRoot.getTree(destParentPath);\n        if (!destParent.exists()) {\n            throw new PathNotFoundException(PathUtils.getParentPath(destPath));\n        }\n\n        // check source exists\n        Tree src = moveRoot.getTree(srcPath);\n        if (!src.exists()) {\n            throw new PathNotFoundException(srcPath);\n        }\n\n        accessManager.checkPermissions(destPath, Permissions.getString(Permissions.NODE_TYPE_MANAGEMENT));\n\n        try {\n            moveRoot.move(srcPath, destPath);\n            if (!transientOp) {\n                moveRoot.commit();\n            }\n        } catch (CommitFailedException e) {\n            throw newRepositoryException(e);\n        }\n    }","id":69901,"modified_method":"/**\n     * Move a node\n     * @param srcPath  oak path to the source node to copy\n     * @param destPath  oak path to the destination\n     * @param transientOp  whether or not to perform the move in transient space\n     * @throws RepositoryException\n     */\n    public void move(String srcPath, String destPath, boolean transientOp, AccessManager accessManager)\n            throws RepositoryException {\n\n        Root moveRoot = transientOp ? root : contentSession.getLatestRoot();\n\n        // check destination\n        Tree dest = moveRoot.getTree(destPath);\n        if (dest.exists()) {\n            throw new ItemExistsException(destPath);\n        }\n\n        // check parent of destination\n        String destParentPath = PathUtils.getParentPath(destPath);\n        Tree destParent = moveRoot.getTree(destParentPath);\n        if (!destParent.exists()) {\n            throw new PathNotFoundException(PathUtils.getParentPath(destPath));\n        }\n\n        // check source exists\n        Tree src = moveRoot.getTree(srcPath);\n        if (!src.exists()) {\n            throw new PathNotFoundException(srcPath);\n        }\n\n        accessManager.checkPermissions(destPath, Permissions.getString(Permissions.NODE_TYPE_MANAGEMENT));\n\n        try {\n            if (!moveRoot.move(srcPath, destPath)) {\n                throw new RepositoryException(\"Cannot move node at \" + srcPath + \" to \" + destPath);\n            }\n            if (!transientOp) {\n                moveRoot.commit();\n            }\n        } catch (CommitFailedException e) {\n            throw newRepositoryException(e);\n        }\n    }","commit_id":"1fc110e3555d5219524ddb701cf400eb9db41650","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/**\n     * Copy a node\n     * @param srcPath  oak path to the source node to copy\n     * @param destPath  oak path to the destination\n     * @throws RepositoryException\n     */\n    public void copy(String srcPath, String destPath, AccessManager accessManager) throws RepositoryException {\n        // check destination\n        Tree dest = root.getTree(destPath);\n        if (dest.exists()) {\n            throw new ItemExistsException(destPath);\n        }\n\n        // check parent of destination\n        String destParentPath = PathUtils.getParentPath(destPath);\n        Tree destParent = root.getTree(destParentPath);\n        if (!destParent.exists()) {\n            throw new PathNotFoundException(PathUtils.getParentPath(destPath));\n        }\n\n        // check source exists\n        Tree src = root.getTree(srcPath);\n        if (!src.exists()) {\n            throw new PathNotFoundException(srcPath);\n        }\n\n        accessManager.checkPermissions(destPath, Permissions.getString(Permissions.NODE_TYPE_MANAGEMENT));\n\n        try {\n            Root currentRoot = contentSession.getLatestRoot();\n            currentRoot.copy(srcPath, destPath);\n            currentRoot.commit();\n        } catch (CommitFailedException e) {\n            throw newRepositoryException(e);\n        }\n    }","id":69902,"modified_method":"/**\n     * Copy a node\n     * @param srcPath  oak path to the source node to copy\n     * @param destPath  oak path to the destination\n     * @throws RepositoryException\n     */\n    public void copy(String srcPath, String destPath, AccessManager accessManager) throws RepositoryException {\n        // check destination\n        Tree dest = root.getTree(destPath);\n        if (dest.exists()) {\n            throw new ItemExistsException(destPath);\n        }\n\n        // check parent of destination\n        String destParentPath = PathUtils.getParentPath(destPath);\n        Tree destParent = root.getTree(destParentPath);\n        if (!destParent.exists()) {\n            throw new PathNotFoundException(PathUtils.getParentPath(destPath));\n        }\n\n        // check source exists\n        Tree src = root.getTree(srcPath);\n        if (!src.exists()) {\n            throw new PathNotFoundException(srcPath);\n        }\n\n        accessManager.checkPermissions(destPath, Permissions.getString(Permissions.NODE_TYPE_MANAGEMENT));\n\n        try {\n            Root currentRoot = contentSession.getLatestRoot();\n            if (!currentRoot.copy(srcPath, destPath)) {\n                throw new RepositoryException(\"Cannot copy node at \" + srcPath + \" to \" + destPath);\n            }\n            currentRoot.commit();\n        } catch (CommitFailedException e) {\n            throw newRepositoryException(e);\n        }\n    }","commit_id":"1fc110e3555d5219524ddb701cf400eb9db41650","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public void addResolver(String name,\r\n                            VariableResolver vr) {\r\n        if ( this.variableResolvers == null ) {\r\n            this.variableResolvers = new HashMap();\r\n        }\r\n        this.variableResolvers.put( name,\r\n                                    vr );\r\n    }","id":69903,"modified_method":"public VariableResolver addResolver(String name,\r\n                                        VariableResolver vr) {\r\n        if (this.variableResolvers == null) {\r\n            this.variableResolvers = new HashMap();\r\n        }\r\n        this.variableResolvers.put(name, vr);\r\n        return vr;\r\n    }","commit_id":"45594843af21b9cb988aa75551ffa8eebba46899","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public VariableResolver createVariable(String name,\r\n                                           Object value) {\r\n        VariableResolver vr = getVariableResolver( name );\r\n        if ( vr == null ) {\r\n            addResolver( name,\r\n                         vr = new LocalVariableResolver( this,\r\n                                                         name ) );\r\n        }\r\n\r\n        vr.setValue( value );\r\n        return vr;\r\n    }","id":69904,"modified_method":"public VariableResolver createVariable(String name, Object value) {\r\n        try {\r\n            VariableResolver vr = getVariableResolver(name);\r\n            vr.setValue(value);\r\n            return vr;\r\n        }\r\n        catch (CompileException e) {\r\n            return addResolver(name, new LocalVariableResolver(this, name), value);\r\n        }\r\n    }","commit_id":"45594843af21b9cb988aa75551ffa8eebba46899","url":"https://github.com/droolsjbpm/drools"},{"original_method":"public VariableResolver createVariable(String name,\r\n                                           Object value,\r\n                                           Class type) {\r\n        VariableResolver vr = getVariableResolver( name );\r\n        if ( vr == null ) {\r\n            addResolver( name,\r\n                         vr = new LocalVariableResolver( this,\r\n                                                         name,\r\n                                                         type ) );\r\n        }\r\n\r\n        vr.setValue( value );\r\n        return vr;\r\n    }","id":69905,"modified_method":"public VariableResolver createVariable(String name,\r\n                                           Object value,\r\n                                           Class type) {\r\n\r\n        try {\r\n            VariableResolver vr = getVariableResolver(name);\r\n            vr.setValue(value);\r\n            return vr;\r\n        }\r\n        catch (CompileException e) {\r\n            return addResolver(name, new LocalVariableResolver(this, name, type), value);\r\n        }\r\n    }","commit_id":"45594843af21b9cb988aa75551ffa8eebba46899","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@Override\r\n    public VariableResolver getVariableResolver(String name) {\r\n        if ( this.shadowValues != null && this.shadowVariables.contains( name ) ) {\r\n            return new ShadowVariableResolver( super.getVariableResolver( name ),\r\n                                               this.shadowValues,\r\n                                               name );\r\n        }\r\n        return super.getVariableResolver( name );\r\n    }","id":69906,"modified_method":"@Override\r\n    public VariableResolver getVariableResolver(String name) {\r\n        if ( this.shadowValues != null && this.shadowVariables.contains( name ) ) {\r\n            return new ShadowVariableResolver( super.getVariableResolver( name ),\r\n                                               this.shadowValues,\r\n                                               name );\r\n        }\r\n        VariableResolver vr = super.getVariableResolver( name );\r\n\r\n        Object val = vr.getValue();\r\n\r\n        return vr;\r\n    }","commit_id":"45594843af21b9cb988aa75551ffa8eebba46899","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@Override\n    protected void initializePipeline(ApplicationAttemptId applicationAttemptId,\n        String user, Token<AMRMTokenIdentifier> amrmToken,\n        Token<AMRMTokenIdentifier> localToken) {\n      super.initializePipeline(applicationAttemptId, user, amrmToken,\n          localToken);\n      RequestInterceptor rt = getPipelines()\n          .get(applicationAttemptId.getApplicationId()).getRootInterceptor();\n      if (rt instanceof DefaultRequestInterceptor) {\n        ((DefaultRequestInterceptor) rt)\n            .setRMClient(getResourceManager().getApplicationMasterService());\n      }\n    }","id":69907,"modified_method":"@Override\n    protected void initializePipeline(ApplicationAttemptId applicationAttemptId,\n        String user, Token<AMRMTokenIdentifier> amrmToken,\n        Token<AMRMTokenIdentifier> localToken) {\n      super.initializePipeline(applicationAttemptId, user, amrmToken,\n          localToken);\n      RequestInterceptor rt = getPipelines()\n          .get(applicationAttemptId.getApplicationId()).getRootInterceptor();\n      // The DefaultRequestInterceptor will generally be the last\n      // interceptor\n      while (rt.getNextInterceptor() != null) {\n        rt = rt.getNextInterceptor();\n      }\n      if (rt instanceof DefaultRequestInterceptor) {\n        ((DefaultRequestInterceptor) rt)\n            .setRMClient(getResourceManager().getApplicationMasterService());\n      }\n    }","commit_id":"8a9ecb7584b529be1de3a6e8850041e211c88ebc","url":"https://github.com/apache/hadoop"},{"original_method":"private AllocateRequest createAllocateRequest(List<NodeReport> listNode) {\n    // The test needs AMRMClient to create a real allocate request\n    AMRMClientImpl<ContainerRequest> amClient =\n        new AMRMClientImpl<ContainerRequest>();\n\n    Resource capability = Resource.newInstance(1024, 2);\n    Priority priority = Priority.newInstance(1);\n    List<NodeReport> nodeReports = listNode;\n    String node = nodeReports.get(0).getNodeId().getHost();\n    String[] nodes = new String[] { node };\n\n    ContainerRequest storedContainer1 =\n        new ContainerRequest(capability, nodes, null, priority);\n    amClient.addContainerRequest(storedContainer1);\n    amClient.addContainerRequest(storedContainer1);\n\n    List<ResourceRequest> resourceAsk = new ArrayList<ResourceRequest>();\n    for (ResourceRequest rr : amClient.ask) {\n      resourceAsk.add(rr);\n    }\n\n    ResourceBlacklistRequest resourceBlacklistRequest = ResourceBlacklistRequest\n        .newInstance(new ArrayList<String>(), new ArrayList<String>());\n\n    int responseId = 1;\n\n    return AllocateRequest.newInstance(responseId, 0, resourceAsk,\n        new ArrayList<ContainerId>(), resourceBlacklistRequest);\n  }","id":69908,"modified_method":"protected AllocateRequest createAllocateRequest(List<NodeReport> listNode) {\n    // The test needs AMRMClient to create a real allocate request\n    AMRMClientImpl<ContainerRequest> amClient =\n        new AMRMClientImpl<ContainerRequest>();\n\n    Resource capability = Resource.newInstance(1024, 2);\n    Priority priority = Priority.newInstance(1);\n    List<NodeReport> nodeReports = listNode;\n    String node = nodeReports.get(0).getNodeId().getHost();\n    String[] nodes = new String[] { node };\n\n    ContainerRequest storedContainer1 =\n        new ContainerRequest(capability, nodes, null, priority);\n    amClient.addContainerRequest(storedContainer1);\n    amClient.addContainerRequest(storedContainer1);\n\n    List<ResourceRequest> resourceAsk = new ArrayList<ResourceRequest>();\n    for (ResourceRequest rr : amClient.ask) {\n      resourceAsk.add(rr);\n    }\n\n    ResourceBlacklistRequest resourceBlacklistRequest = ResourceBlacklistRequest\n        .newInstance(new ArrayList<String>(), new ArrayList<String>());\n\n    int responseId = 1;\n\n    return AllocateRequest.newInstance(responseId, 0, resourceAsk,\n        new ArrayList<ContainerId>(), resourceBlacklistRequest);\n  }","commit_id":"8a9ecb7584b529be1de3a6e8850041e211c88ebc","url":"https://github.com/apache/hadoop"},{"original_method":"private ApplicationId createApp(YarnClient yarnClient,\n      MiniYARNCluster yarnCluster) throws Exception {\n\n    ApplicationSubmissionContext appContext =\n        yarnClient.createApplication().getApplicationSubmissionContext();\n    ApplicationId appId = appContext.getApplicationId();\n\n    appContext.setApplicationName(\"Test\");\n\n    Priority pri = Records.newRecord(Priority.class);\n    pri.setPriority(0);\n    appContext.setPriority(pri);\n\n    appContext.setQueue(\"default\");\n\n    ContainerLaunchContext amContainer = BuilderUtils.newContainerLaunchContext(\n        Collections.<String, LocalResource> emptyMap(),\n        new HashMap<String, String>(), Arrays.asList(\"sleep\", \"10000\"),\n        new HashMap<String, ByteBuffer>(), null,\n        new HashMap<ApplicationAccessType, String>());\n    appContext.setAMContainerSpec(amContainer);\n    appContext.setResource(Resource.newInstance(1024, 1));\n\n    SubmitApplicationRequest appRequest =\n        Records.newRecord(SubmitApplicationRequest.class);\n    appRequest.setApplicationSubmissionContext(appContext);\n\n    yarnClient.submitApplication(appContext);\n\n    RMAppAttempt appAttempt = null;\n    while (true) {\n      ApplicationReport appReport = yarnClient.getApplicationReport(appId);\n      if (appReport\n          .getYarnApplicationState() == YarnApplicationState.ACCEPTED) {\n        ApplicationAttemptId attemptId =\n            appReport.getCurrentApplicationAttemptId();\n        appAttempt = yarnCluster.getResourceManager().getRMContext().getRMApps()\n            .get(attemptId.getApplicationId()).getCurrentAppAttempt();\n        while (true) {\n          if (appAttempt.getAppAttemptState() == RMAppAttemptState.LAUNCHED) {\n            break;\n          }\n        }\n        break;\n      }\n    }\n    Thread.sleep(1000);\n    return appId;\n  }","id":69909,"modified_method":"protected ApplicationId createApp(YarnClient yarnClient,\n      MiniYARNCluster yarnCluster) throws Exception {\n\n    ApplicationSubmissionContext appContext =\n        yarnClient.createApplication().getApplicationSubmissionContext();\n    ApplicationId appId = appContext.getApplicationId();\n\n    appContext.setApplicationName(\"Test\");\n\n    Priority pri = Records.newRecord(Priority.class);\n    pri.setPriority(0);\n    appContext.setPriority(pri);\n\n    appContext.setQueue(\"default\");\n\n    ContainerLaunchContext amContainer = BuilderUtils.newContainerLaunchContext(\n        Collections.<String, LocalResource> emptyMap(),\n        new HashMap<String, String>(), Arrays.asList(\"sleep\", \"10000\"),\n        new HashMap<String, ByteBuffer>(), null,\n        new HashMap<ApplicationAccessType, String>());\n    appContext.setAMContainerSpec(amContainer);\n    appContext.setResource(Resource.newInstance(1024, 1));\n\n    SubmitApplicationRequest appRequest =\n        Records.newRecord(SubmitApplicationRequest.class);\n    appRequest.setApplicationSubmissionContext(appContext);\n\n    yarnClient.submitApplication(appContext);\n\n    RMAppAttempt appAttempt = null;\n    while (true) {\n      ApplicationReport appReport = yarnClient.getApplicationReport(appId);\n      if (appReport\n          .getYarnApplicationState() == YarnApplicationState.ACCEPTED) {\n        ApplicationAttemptId attemptId =\n            appReport.getCurrentApplicationAttemptId();\n        appAttempt = yarnCluster.getResourceManager().getRMContext().getRMApps()\n            .get(attemptId.getApplicationId()).getCurrentAppAttempt();\n        while (true) {\n          if (appAttempt.getAppAttemptState() == RMAppAttemptState.LAUNCHED) {\n            break;\n          }\n        }\n        break;\n      }\n    }\n    Thread.sleep(1000);\n    return appId;\n  }","commit_id":"8a9ecb7584b529be1de3a6e8850041e211c88ebc","url":"https://github.com/apache/hadoop"},{"original_method":"private ApplicationMasterProtocol createAMRMProtocol(YarnClient rmClient,\n      ApplicationId appId, MiniYARNCluster cluster,\n      final Configuration yarnConf)\n          throws IOException, InterruptedException, YarnException {\n\n    UserGroupInformation user = null;\n\n    // Get the AMRMToken from AMRMProxy\n\n    ApplicationReport report = rmClient.getApplicationReport(appId);\n\n    user = UserGroupInformation.createProxyUser(\n        report.getCurrentApplicationAttemptId().toString(),\n        UserGroupInformation.getCurrentUser());\n\n    ContainerManagerImpl containerManager = (ContainerManagerImpl) cluster\n        .getNodeManager(0).getNMContext().getContainerManager();\n\n    AMRMProxyTokenSecretManager amrmTokenSecretManager =\n        containerManager.getAMRMProxyService().getSecretManager();\n    org.apache.hadoop.security.token.Token<AMRMTokenIdentifier> token =\n        amrmTokenSecretManager\n            .createAndGetAMRMToken(report.getCurrentApplicationAttemptId());\n\n    SecurityUtil.setTokenService(token,\n        containerManager.getAMRMProxyService().getBindAddress());\n    user.addToken(token);\n\n    // Start Application Master\n\n    return user\n        .doAs(new PrivilegedExceptionAction<ApplicationMasterProtocol>() {\n          @Override\n          public ApplicationMasterProtocol run() throws Exception {\n            return ClientRMProxy.createRMProxy(yarnConf,\n                ApplicationMasterProtocol.class);\n          }\n        });\n  }","id":69910,"modified_method":"protected ApplicationMasterProtocol createAMRMProtocol(YarnClient rmClient,\n      ApplicationId appId, MiniYARNCluster cluster,\n      final Configuration yarnConf)\n          throws IOException, InterruptedException, YarnException {\n\n    UserGroupInformation user = null;\n\n    // Get the AMRMToken from AMRMProxy\n\n    ApplicationReport report = rmClient.getApplicationReport(appId);\n\n    user = UserGroupInformation.createProxyUser(\n        report.getCurrentApplicationAttemptId().toString(),\n        UserGroupInformation.getCurrentUser());\n\n    ContainerManagerImpl containerManager = (ContainerManagerImpl) cluster\n        .getNodeManager(0).getNMContext().getContainerManager();\n\n    AMRMProxyTokenSecretManager amrmTokenSecretManager =\n        containerManager.getAMRMProxyService().getSecretManager();\n    org.apache.hadoop.security.token.Token<AMRMTokenIdentifier> token =\n        amrmTokenSecretManager\n            .createAndGetAMRMToken(report.getCurrentApplicationAttemptId());\n\n    SecurityUtil.setTokenService(token,\n        containerManager.getAMRMProxyService().getBindAddress());\n    user.addToken(token);\n\n    // Start Application Master\n\n    return user\n        .doAs(new PrivilegedExceptionAction<ApplicationMasterProtocol>() {\n          @Override\n          public ApplicationMasterProtocol run() throws Exception {\n            return ClientRMProxy.createRMProxy(yarnConf,\n                ApplicationMasterProtocol.class);\n          }\n        });\n  }","commit_id":"8a9ecb7584b529be1de3a6e8850041e211c88ebc","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testRPCWrapping() throws Exception {\n    Configuration conf = new Configuration();\n    conf.set(YarnConfiguration.IPC_RPC_IMPL, HadoopYarnProtoRPC.class\n        .getName());\n    YarnRPC rpc = YarnRPC.create(conf);\n    String bindAddr = \"localhost:0\";\n    InetSocketAddress addr = NetUtils.createSocketAddr(bindAddr);\n    conf.setSocketAddr(YarnConfiguration.RM_SCHEDULER_ADDRESS, addr);\n    final RecordFactory factory = RecordFactoryProvider.getRecordFactory(null);\n    final RMContext rmContext = new RMContextImpl() {\n      @Override\n      public AMLivelinessMonitor getAMLivelinessMonitor() {\n        return null;\n      }\n\n      @Override\n      public Configuration getYarnConfiguration() {\n        return new YarnConfiguration();\n      }\n    };\n    DistributedSchedulingService service =\n        new DistributedSchedulingService(rmContext, null) {\n          @Override\n          public RegisterApplicationMasterResponse registerApplicationMaster\n              (RegisterApplicationMasterRequest request) throws\n              YarnException, IOException {\n            RegisterApplicationMasterResponse resp = factory.newRecordInstance(\n                RegisterApplicationMasterResponse.class);\n            // Dummy Entry to Assert that we get this object back\n            resp.setQueue(\"dummyQueue\");\n            return resp;\n          }\n\n          @Override\n          public FinishApplicationMasterResponse finishApplicationMaster\n              (FinishApplicationMasterRequest request) throws YarnException,\n              IOException {\n            FinishApplicationMasterResponse resp = factory.newRecordInstance(\n                FinishApplicationMasterResponse.class);\n            // Dummy Entry to Assert that we get this object back\n            resp.setIsUnregistered(false);\n            return resp;\n          }\n\n          @Override\n          public AllocateResponse allocate(AllocateRequest request) throws\n              YarnException, IOException {\n            AllocateResponse response = factory.newRecordInstance\n                (AllocateResponse.class);\n            response.setNumClusterNodes(12345);\n            return response;\n          }\n\n          @Override\n          public DistSchedRegisterResponse\n          registerApplicationMasterForDistributedScheduling\n              (RegisterApplicationMasterRequest request) throws\n              YarnException, IOException {\n            DistSchedRegisterResponse resp = factory.newRecordInstance(\n                DistSchedRegisterResponse.class);\n            resp.setContainerIdStart(54321l);\n            return resp;\n          }\n\n          @Override\n          public DistSchedAllocateResponse allocateForDistributedScheduling\n              (AllocateRequest request) throws YarnException, IOException {\n            DistSchedAllocateResponse resp =\n                factory.newRecordInstance(DistSchedAllocateResponse.class);\n            resp.setNodesForScheduling(\n                Arrays.asList(NodeId.newInstance(\"h1\", 1234)));\n            return resp;\n          }\n        };\n    Server server = service.getServer(rpc, conf, addr, null);\n    server.start();\n\n    // Verify that the DistrubutedSchedulingService can handle vanilla\n    // ApplicationMasterProtocol clients\n    RPC.setProtocolEngine(conf, ApplicationMasterProtocolPB.class,\n        ProtobufRpcEngine.class);\n    ApplicationMasterProtocol ampProxy =\n        (ApplicationMasterProtocol) rpc.getProxy(ApplicationMasterProtocol\n            .class, NetUtils.getConnectAddress(server), conf);\n    RegisterApplicationMasterResponse regResp = ampProxy.registerApplicationMaster(\n            factory.newRecordInstance(RegisterApplicationMasterRequest.class));\n    Assert.assertEquals(\"dummyQueue\", regResp.getQueue());\n    FinishApplicationMasterResponse finishResp = ampProxy\n        .finishApplicationMaster(factory.newRecordInstance(\n            FinishApplicationMasterRequest.class));\n    Assert.assertEquals(false, finishResp.getIsUnregistered());\n    AllocateResponse allocResp = ampProxy\n        .allocate(factory.newRecordInstance(AllocateRequest.class));\n    Assert.assertEquals(12345, allocResp.getNumClusterNodes());\n\n\n    // Verify that the DistrubutedSchedulingService can handle the\n    // DistributedSchedulerProtocol clients as well\n    RPC.setProtocolEngine(conf, DistributedSchedulerProtocolPB.class,\n        ProtobufRpcEngine.class);\n    DistributedSchedulerProtocol dsProxy =\n        (DistributedSchedulerProtocol) rpc.getProxy(DistributedSchedulerProtocol\n            .class, NetUtils.getConnectAddress(server), conf);\n\n    DistSchedRegisterResponse dsRegResp =\n        dsProxy.registerApplicationMasterForDistributedScheduling(\n        factory.newRecordInstance(RegisterApplicationMasterRequest.class));\n    Assert.assertEquals(54321l, dsRegResp.getContainerIdStart());\n    DistSchedAllocateResponse dsAllocResp =\n        dsProxy.allocateForDistributedScheduling(\n            factory.newRecordInstance(AllocateRequest.class));\n    Assert.assertEquals(\n        \"h1\", dsAllocResp.getNodesForScheduling().get(0).getHost());\n  }","id":69911,"modified_method":"@Test\n  public void testRPCWrapping() throws Exception {\n    Configuration conf = new Configuration();\n    conf.set(YarnConfiguration.IPC_RPC_IMPL, HadoopYarnProtoRPC.class\n        .getName());\n    YarnRPC rpc = YarnRPC.create(conf);\n    String bindAddr = \"localhost:0\";\n    InetSocketAddress addr = NetUtils.createSocketAddr(bindAddr);\n    conf.setSocketAddr(YarnConfiguration.RM_SCHEDULER_ADDRESS, addr);\n    final RecordFactory factory = RecordFactoryProvider.getRecordFactory(null);\n    final RMContext rmContext = new RMContextImpl() {\n      @Override\n      public AMLivelinessMonitor getAMLivelinessMonitor() {\n        return null;\n      }\n\n      @Override\n      public Configuration getYarnConfiguration() {\n        return new YarnConfiguration();\n      }\n    };\n    DistributedSchedulingService service =\n        new DistributedSchedulingService(rmContext, null) {\n          @Override\n          public RegisterApplicationMasterResponse registerApplicationMaster\n              (RegisterApplicationMasterRequest request) throws\n              YarnException, IOException {\n            RegisterApplicationMasterResponse resp = factory.newRecordInstance(\n                RegisterApplicationMasterResponse.class);\n            // Dummy Entry to Assert that we get this object back\n            resp.setQueue(\"dummyQueue\");\n            return resp;\n          }\n\n          @Override\n          public FinishApplicationMasterResponse finishApplicationMaster\n              (FinishApplicationMasterRequest request) throws YarnException,\n              IOException {\n            FinishApplicationMasterResponse resp = factory.newRecordInstance(\n                FinishApplicationMasterResponse.class);\n            // Dummy Entry to Assert that we get this object back\n            resp.setIsUnregistered(false);\n            return resp;\n          }\n\n          @Override\n          public AllocateResponse allocate(AllocateRequest request) throws\n              YarnException, IOException {\n            AllocateResponse response = factory.newRecordInstance\n                (AllocateResponse.class);\n            response.setNumClusterNodes(12345);\n            return response;\n          }\n\n          @Override\n          public DistSchedRegisterResponse\n          registerApplicationMasterForDistributedScheduling\n              (RegisterApplicationMasterRequest request) throws\n              YarnException, IOException {\n            DistSchedRegisterResponse resp = factory.newRecordInstance(\n                DistSchedRegisterResponse.class);\n            resp.setContainerIdStart(54321l);\n            return resp;\n          }\n\n          @Override\n          public DistSchedAllocateResponse allocateForDistributedScheduling\n              (AllocateRequest request) throws YarnException, IOException {\n            DistSchedAllocateResponse resp =\n                factory.newRecordInstance(DistSchedAllocateResponse.class);\n            resp.setNodesForScheduling(\n                Arrays.asList(NodeId.newInstance(\"h1\", 1234)));\n            return resp;\n          }\n        };\n    Server server = service.getServer(rpc, conf, addr, null);\n    server.start();\n\n    // Verify that the DistrubutedSchedulingService can handle vanilla\n    // ApplicationMasterProtocol clients\n    RPC.setProtocolEngine(conf, ApplicationMasterProtocolPB.class,\n        ProtobufRpcEngine.class);\n    ApplicationMasterProtocolPB ampProxy =\n        RPC.getProxy(ApplicationMasterProtocolPB\n        .class, 1, NetUtils.getConnectAddress(server), conf);\n    RegisterApplicationMasterResponse regResp =\n        new RegisterApplicationMasterResponsePBImpl(\n            ampProxy.registerApplicationMaster(null,\n                ((RegisterApplicationMasterRequestPBImpl)factory\n                    .newRecordInstance(\n                        RegisterApplicationMasterRequest.class)).getProto()));\n    Assert.assertEquals(\"dummyQueue\", regResp.getQueue());\n    FinishApplicationMasterResponse finishResp =\n        new FinishApplicationMasterResponsePBImpl(\n            ampProxy.finishApplicationMaster(null,\n                ((FinishApplicationMasterRequestPBImpl)factory\n                    .newRecordInstance(\n                        FinishApplicationMasterRequest.class)).getProto()\n            ));\n    Assert.assertEquals(false, finishResp.getIsUnregistered());\n    AllocateResponse allocResp =\n        new AllocateResponsePBImpl(\n            ampProxy.allocate(null,\n                ((AllocateRequestPBImpl)factory\n                    .newRecordInstance(AllocateRequest.class)).getProto())\n        );\n    Assert.assertEquals(12345, allocResp.getNumClusterNodes());\n\n\n    // Verify that the DistrubutedSchedulingService can handle the\n    // DistributedSchedulerProtocol clients as well\n    RPC.setProtocolEngine(conf, DistributedSchedulerProtocolPB.class,\n        ProtobufRpcEngine.class);\n    DistributedSchedulerProtocolPB dsProxy =\n        RPC.getProxy(DistributedSchedulerProtocolPB\n            .class, 1, NetUtils.getConnectAddress(server), conf);\n\n    DistSchedRegisterResponse dsRegResp =\n        new DistSchedRegisterResponsePBImpl(\n            dsProxy.registerApplicationMasterForDistributedScheduling(null,\n                ((RegisterApplicationMasterRequestPBImpl)factory\n                    .newRecordInstance(RegisterApplicationMasterRequest.class))\n                    .getProto()));\n    Assert.assertEquals(54321l, dsRegResp.getContainerIdStart());\n    DistSchedAllocateResponse dsAllocResp =\n        new DistSchedAllocateResponsePBImpl(\n            dsProxy.allocateForDistributedScheduling(null,\n                ((AllocateRequestPBImpl)factory\n                    .newRecordInstance(AllocateRequest.class)).getProto()));\n    Assert.assertEquals(\n        \"h1\", dsAllocResp.getNodesForScheduling().get(0).getHost());\n  }","commit_id":"8a9ecb7584b529be1de3a6e8850041e211c88ebc","url":"https://github.com/apache/hadoop"},{"original_method":"private void verifyTamperedToken(final Configuration conf, final CustomAM am,\n      Token<ClientToAMTokenIdentifier> token, UserGroupInformation ugi,\n      ClientToAMTokenIdentifier maliciousID) {\n    Token<ClientToAMTokenIdentifier> maliciousToken =\n        new Token<ClientToAMTokenIdentifier>(maliciousID.getBytes(),\n          token.getPassword(), token.getKind(),\n          token.getService());\n    ugi.addToken(maliciousToken);\n\n    try {\n      ugi.doAs(new PrivilegedExceptionAction<Void>()  {\n        @Override\n        public Void run() throws Exception {\n          try {\n            CustomProtocol client =\n                (CustomProtocol) RPC.getProxy(CustomProtocol.class, 1L,\n                  am.address, conf);\n            client.ping();\n            fail(\"Connection initiation with illegally modified \"\n                + \"tokens is expected to fail.\");\n            return null;\n          } catch (YarnException ex) {\n            fail(\"Cannot get a YARN remote exception as \"\n                + \"it will indicate RPC success\");\n            throw ex;\n          }\n        }\n      });\n    } catch (Exception e) {\n      Assert.assertEquals(RemoteException.class.getName(), e.getClass()\n          .getName());\n      e = ((RemoteException)e).unwrapRemoteException();\n      Assert\n        .assertEquals(SaslException.class\n          .getCanonicalName(), e.getClass().getCanonicalName());\n      Assert.assertTrue(e\n        .getMessage()\n        .contains(\n          \"DIGEST-MD5: digest response format violation. \"\n              + \"Mismatched response.\"));\n      Assert.assertFalse(am.pinged);\n    }\n  }","id":69912,"modified_method":"private void verifyTamperedToken(final Configuration conf, final CustomAM am,\n      Token<ClientToAMTokenIdentifier> token, UserGroupInformation ugi,\n      ClientToAMTokenIdentifier maliciousID) {\n    Token<ClientToAMTokenIdentifier> maliciousToken =\n        new Token<ClientToAMTokenIdentifier>(maliciousID.getBytes(),\n          token.getPassword(), token.getKind(),\n          token.getService());\n    ugi.addToken(maliciousToken);\n\n    try {\n      ugi.doAs(new PrivilegedExceptionAction<Void>()  {\n        @Override\n        public Void run() throws Exception {\n          try {\n            CustomProtocol client = RPC.getProxy(CustomProtocol.class, 1L,\n                  am.address, conf);\n            client.ping(null, TestRpcBase.newEmptyRequest());\n            fail(\"Connection initiation with illegally modified \"\n                + \"tokens is expected to fail.\");\n            return null;\n          } catch (ServiceException ex) {\n            //fail(\"Cannot get a YARN remote exception as \"\n            //    + \"it indicates RPC success\");\n            throw (Exception) ex.getCause();\n          }\n        }\n      });\n    } catch (Exception e) {\n      Assert.assertEquals(RemoteException.class.getName(), e.getClass()\n          .getName());\n      e = ((RemoteException)e).unwrapRemoteException();\n      Assert\n        .assertEquals(SaslException.class\n          .getCanonicalName(), e.getClass().getCanonicalName());\n      Assert.assertTrue(e\n        .getMessage()\n        .contains(\n          \"DIGEST-MD5: digest response format violation. \"\n              + \"Mismatched response.\"));\n      Assert.assertFalse(am.pinged);\n    }\n  }","commit_id":"58bae3544747ad47373925add35b39bda8be8c5a","url":"https://github.com/apache/hadoop"},{"original_method":"private void verifyValidToken(final Configuration conf, final CustomAM am,\n      Token<ClientToAMTokenIdentifier> token) throws IOException,\n      InterruptedException {\n    UserGroupInformation ugi;\n    ugi = UserGroupInformation.createRemoteUser(\"me\");\n    ugi.addToken(token);\n\n    ugi.doAs(new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        CustomProtocol client =\n            (CustomProtocol) RPC.getProxy(CustomProtocol.class, 1L, am.address,\n              conf);\n        client.ping();\n        Assert.assertTrue(am.pinged);\n        return null;\n      }\n    });\n  }","id":69913,"modified_method":"private void verifyValidToken(final Configuration conf, final CustomAM am,\n      Token<ClientToAMTokenIdentifier> token) throws IOException,\n      InterruptedException {\n    UserGroupInformation ugi;\n    ugi = UserGroupInformation.createRemoteUser(\"me\");\n    ugi.addToken(token);\n\n    ugi.doAs(new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        CustomProtocol client = RPC.getProxy(CustomProtocol.class,\n            1L, am.address, conf);\n        client.ping(null, TestRpcBase.newEmptyRequest());\n        Assert.assertTrue(am.pinged);\n        return null;\n      }\n    });\n  }","commit_id":"58bae3544747ad47373925add35b39bda8be8c5a","url":"https://github.com/apache/hadoop"},{"original_method":"@Test\n  public void testClientToAMTokens() throws Exception {\n    conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n      \"kerberos\");\n    UserGroupInformation.setConfiguration(conf);\n\n    ContainerManagementProtocol containerManager =\n        mock(ContainerManagementProtocol.class);\n    StartContainersResponse mockResponse = mock(StartContainersResponse.class);\n    when(containerManager.startContainers((StartContainersRequest) any()))\n      .thenReturn(mockResponse);\n    final DrainDispatcher dispatcher = new DrainDispatcher();\n\n    MockRM rm = new MockRMWithCustomAMLauncher(conf, containerManager) {\n      protected ClientRMService createClientRMService() {\n        return new ClientRMService(this.rmContext, scheduler,\n          this.rmAppManager, this.applicationACLsManager, this.queueACLsManager,\n          getRMContext().getRMDelegationTokenSecretManager());\n      };\n\n      @Override\n      protected Dispatcher createDispatcher() {\n        return dispatcher;\n      }\n\n      @Override\n      protected void doSecureLogin() throws IOException {\n      }\n    };\n    rm.start();\n\n    // Submit an app\n    RMApp app = rm.submitApp(1024);\n\n    // Set up a node.\n    MockNM nm1 = rm.registerNode(\"localhost:1234\", 3072);\n    nm1.nodeHeartbeat(true);\n    dispatcher.await();\n    \n\n    nm1.nodeHeartbeat(true);\n    dispatcher.await();\n\n    ApplicationAttemptId appAttempt = app.getCurrentAppAttempt().getAppAttemptId();\n    final MockAM mockAM =\n        new MockAM(rm.getRMContext(), rm.getApplicationMasterService(),\n            app.getCurrentAppAttempt().getAppAttemptId());\n    UserGroupInformation appUgi =\n        UserGroupInformation.createRemoteUser(appAttempt.toString());\n    RegisterApplicationMasterResponse response =\n        appUgi.doAs(new PrivilegedAction<RegisterApplicationMasterResponse>() {\n\n          @Override\n          public RegisterApplicationMasterResponse run() {\n            RegisterApplicationMasterResponse response = null;\n            try {\n              response = mockAM.registerAppAttempt();\n            } catch (Exception e) {\n              Assert.fail(\"Exception was not expected\");\n            }\n            return response;\n          }\n        });\n\n    // Get the app-report.\n    GetApplicationReportRequest request =\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(app.getApplicationId());\n    GetApplicationReportResponse reportResponse =\n        rm.getClientRMService().getApplicationReport(request);\n    ApplicationReport appReport = reportResponse.getApplicationReport();\n    org.apache.hadoop.yarn.api.records.Token originalClientToAMToken =\n        appReport.getClientToAMToken();\n\n    // ClientToAMToken master key should have been received on register\n    // application master response.\n    Assert.assertNotNull(response.getClientToAMTokenMasterKey());\n    Assert\n        .assertTrue(response.getClientToAMTokenMasterKey().array().length > 0);\n    \n    // Start the AM with the correct shared-secret.\n    ApplicationAttemptId appAttemptId =\n        app.getAppAttempts().keySet().iterator().next();\n    Assert.assertNotNull(appAttemptId);\n    final CustomAM am =\n        new CustomAM(appAttemptId, response.getClientToAMTokenMasterKey()\n            .array());\n    am.init(conf);\n    am.start();\n\n    // Now the real test!\n    // Set up clients to be able to pick up correct tokens.\n    SecurityUtil.setSecurityInfoProviders(new CustomSecurityInfo());\n\n    // Verify denial for unauthenticated user\n    try {\n      CustomProtocol client =\n          (CustomProtocol) RPC.getProxy(CustomProtocol.class, 1L, am.address,\n            conf);\n      client.ping();\n      fail(\"Access by unauthenticated user should fail!!\");\n    } catch (Exception e) {\n      Assert.assertFalse(am.pinged);\n    }\n\n    Token<ClientToAMTokenIdentifier> token =\n        ConverterUtils.convertFromYarn(originalClientToAMToken, am.address);\n\n    // Verify denial for a malicious user with tampered ID\n    verifyTokenWithTamperedID(conf, am, token);\n\n    // Verify denial for a malicious user with tampered user-name\n    verifyTokenWithTamperedUserName(conf, am, token);\n\n    // Now for an authenticated user\n    verifyValidToken(conf, am, token);\n    \n    // Verify for a new version token\n    verifyNewVersionToken(conf, am, token, rm);\n\n    am.stop();\n    rm.stop();\n  }","id":69914,"modified_method":"@Test\n  public void testClientToAMTokens() throws Exception {\n    conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION,\n      \"kerberos\");\n    // Set RPC engine to protobuf RPC engine\n    RPC.setProtocolEngine(conf, CustomProtocol.class, ProtobufRpcEngine.class);\n    UserGroupInformation.setConfiguration(conf);\n\n    ContainerManagementProtocol containerManager =\n        mock(ContainerManagementProtocol.class);\n    StartContainersResponse mockResponse = mock(StartContainersResponse.class);\n    when(containerManager.startContainers((StartContainersRequest) any()))\n      .thenReturn(mockResponse);\n    final DrainDispatcher dispatcher = new DrainDispatcher();\n\n    MockRM rm = new MockRMWithCustomAMLauncher(conf, containerManager) {\n      protected ClientRMService createClientRMService() {\n        return new ClientRMService(this.rmContext, scheduler,\n          this.rmAppManager, this.applicationACLsManager, this.queueACLsManager,\n          getRMContext().getRMDelegationTokenSecretManager());\n      };\n\n      @Override\n      protected Dispatcher createDispatcher() {\n        return dispatcher;\n      }\n\n      @Override\n      protected void doSecureLogin() throws IOException {\n      }\n    };\n    rm.start();\n\n    // Submit an app\n    RMApp app = rm.submitApp(1024);\n\n    // Set up a node.\n    MockNM nm1 = rm.registerNode(\"localhost:1234\", 3072);\n    nm1.nodeHeartbeat(true);\n    dispatcher.await();\n    \n\n    nm1.nodeHeartbeat(true);\n    dispatcher.await();\n\n    ApplicationAttemptId appAttempt = app.getCurrentAppAttempt().getAppAttemptId();\n    final MockAM mockAM =\n        new MockAM(rm.getRMContext(), rm.getApplicationMasterService(),\n            app.getCurrentAppAttempt().getAppAttemptId());\n    UserGroupInformation appUgi =\n        UserGroupInformation.createRemoteUser(appAttempt.toString());\n    RegisterApplicationMasterResponse response =\n        appUgi.doAs(new PrivilegedAction<RegisterApplicationMasterResponse>() {\n\n          @Override\n          public RegisterApplicationMasterResponse run() {\n            RegisterApplicationMasterResponse response = null;\n            try {\n              response = mockAM.registerAppAttempt();\n            } catch (Exception e) {\n              Assert.fail(\"Exception was not expected\");\n            }\n            return response;\n          }\n        });\n\n    // Get the app-report.\n    GetApplicationReportRequest request =\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(app.getApplicationId());\n    GetApplicationReportResponse reportResponse =\n        rm.getClientRMService().getApplicationReport(request);\n    ApplicationReport appReport = reportResponse.getApplicationReport();\n    org.apache.hadoop.yarn.api.records.Token originalClientToAMToken =\n        appReport.getClientToAMToken();\n\n    // ClientToAMToken master key should have been received on register\n    // application master response.\n    Assert.assertNotNull(response.getClientToAMTokenMasterKey());\n    Assert\n        .assertTrue(response.getClientToAMTokenMasterKey().array().length > 0);\n    \n    // Start the AM with the correct shared-secret.\n    ApplicationAttemptId appAttemptId =\n        app.getAppAttempts().keySet().iterator().next();\n    Assert.assertNotNull(appAttemptId);\n    final CustomAM am =\n        new CustomAM(appAttemptId, response.getClientToAMTokenMasterKey()\n            .array());\n    am.init(conf);\n    am.start();\n\n    // Now the real test!\n    // Set up clients to be able to pick up correct tokens.\n    SecurityUtil.setSecurityInfoProviders(new CustomSecurityInfo());\n\n    // Verify denial for unauthenticated user\n    try {\n      CustomProtocol client = RPC.getProxy(CustomProtocol.class,\n          1L, am.address, conf);\n      client.ping(null, TestRpcBase.newEmptyRequest());\n      fail(\"Access by unauthenticated user should fail!!\");\n    } catch (Exception e) {\n      Assert.assertFalse(am.pinged);\n    }\n\n    Token<ClientToAMTokenIdentifier> token =\n        ConverterUtils.convertFromYarn(originalClientToAMToken, am.address);\n\n    // Verify denial for a malicious user with tampered ID\n    verifyTokenWithTamperedID(conf, am, token);\n\n    // Verify denial for a malicious user with tampered user-name\n    verifyTokenWithTamperedUserName(conf, am, token);\n\n    // Now for an authenticated user\n    verifyValidToken(conf, am, token);\n    \n    // Verify for a new version token\n    verifyNewVersionToken(conf, am, token, rm);\n\n    am.stop();\n    rm.stop();\n  }","commit_id":"58bae3544747ad47373925add35b39bda8be8c5a","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n    protected void serviceStart() throws Exception {\n      Configuration conf = getConfig();\n\n      Server server;\n      try {\n        secretMgr = new ClientToAMTokenSecretManager(\n            this.appAttemptId, secretKey);\n        server =\n            new RPC.Builder(conf)\n              .setProtocol(CustomProtocol.class)\n              .setNumHandlers(1)\n              .setSecretManager(secretMgr)\n              .setInstance(this).build();\n      } catch (Exception e) {\n        throw new YarnRuntimeException(e);\n      }\n      server.start();\n      this.address = NetUtils.getConnectAddress(server);\n      super.serviceStart();\n    }","id":69915,"modified_method":"@Override\n    protected void serviceStart() throws Exception {\n      Configuration conf = getConfig();\n      // Set RPC engine to protobuf RPC engine\n      RPC.setProtocolEngine(conf, CustomProtocol.class,\n          ProtobufRpcEngine.class);\n      UserGroupInformation.setConfiguration(conf);\n\n      BlockingService service = TestRpcServiceProtos.CustomProto\n          .newReflectiveBlockingService(this);\n\n      Server server;\n      try {\n        secretMgr = new ClientToAMTokenSecretManager(\n            this.appAttemptId, secretKey);\n        server =\n            new RPC.Builder(conf)\n              .setProtocol(CustomProtocol.class)\n              .setNumHandlers(1)\n              .setSecretManager(secretMgr)\n              .setInstance(service).build();\n      } catch (Exception e) {\n        throw new YarnRuntimeException(e);\n      }\n      server.start();\n      this.address = NetUtils.getConnectAddress(server);\n      super.serviceStart();\n    }","commit_id":"58bae3544747ad47373925add35b39bda8be8c5a","url":"https://github.com/apache/hadoop"},{"original_method":"private void verifyNewVersionToken(final Configuration conf, final CustomAM am,\n      Token<ClientToAMTokenIdentifier> token, MockRM rm) throws IOException,\n      InterruptedException {\n    UserGroupInformation ugi;\n    ugi = UserGroupInformation.createRemoteUser(\"me\");\n    \n    Token<ClientToAMTokenIdentifier> newToken = \n        new Token<ClientToAMTokenIdentifier>(\n            new ClientToAMTokenIdentifierForTest(token.decodeIdentifier(), \"message\"),\n            am.getClientToAMTokenSecretManager());\n    newToken.setService(token.getService());\n    \n    ugi.addToken(newToken);\n\n    ugi.doAs(new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        CustomProtocol client =\n            (CustomProtocol) RPC.getProxy(CustomProtocol.class, 1L, am.address,\n              conf);\n        client.ping();\n        Assert.assertTrue(am.pinged);\n        return null;\n      }\n    });\n  }","id":69916,"modified_method":"private void verifyNewVersionToken(final Configuration conf, final CustomAM am,\n      Token<ClientToAMTokenIdentifier> token, MockRM rm) throws IOException,\n      InterruptedException {\n    UserGroupInformation ugi;\n    ugi = UserGroupInformation.createRemoteUser(\"me\");\n    \n    Token<ClientToAMTokenIdentifier> newToken = \n        new Token<ClientToAMTokenIdentifier>(\n            new ClientToAMTokenIdentifierForTest(token.decodeIdentifier(), \"message\"),\n            am.getClientToAMTokenSecretManager());\n    newToken.setService(token.getService());\n    \n    ugi.addToken(newToken);\n\n    ugi.doAs(new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        CustomProtocol client =\n            RPC.getProxy(CustomProtocol.class, 1L, am.address, conf);\n        client.ping(null, TestRpcBase.newEmptyRequest());\n        Assert.assertTrue(am.pinged);\n        return null;\n      }\n    });\n  }","commit_id":"58bae3544747ad47373925add35b39bda8be8c5a","url":"https://github.com/apache/hadoop"},{"original_method":"protected static TestProtos.EmptyRequestProto newEmptyRequest() {\n    return TestProtos.EmptyRequestProto.newBuilder().build();\n  }","id":69917,"modified_method":"public static TestProtos.EmptyRequestProto newEmptyRequest() {\n    return TestProtos.EmptyRequestProto.newBuilder().build();\n  }","commit_id":"58bae3544747ad47373925add35b39bda8be8c5a","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n    * Reduce code duplication and ensure custom templates are used\n    */\n   public EntityView makeEntityView(EntityReference ref, String viewKey, String extension) {\n      if (ref == null) {\n         throw new IllegalArgumentException(\"ref cannot be null\");\n      }\n      EntityView view = new EntityView();\n      EntityViewUrlCustomizable custom = (EntityViewUrlCustomizable) entityProviderManager\n            .getProviderByPrefixAndCapability(ref.getPrefix(), EntityViewUrlCustomizable.class);\n      if (custom == null) {\n         view.setEntityReference(ref);\n      } else {\n         // use the custom parsing templates\n         view.loadParseTemplates( custom.getParseTemplates() );\n      }\n      view.setEntityReference(ref);\n      if (viewKey != null) {\n         view.setViewKey(viewKey);\n      }\n      if (extension != null) {\n         view.setExtension(extension);\n      }\n      return view;\n   }","id":69918,"modified_method":"/**\n    * Reduce code duplication and ensure custom templates are used\n    */\n   public EntityView makeEntityView(EntityReference ref, String viewKey, String extension) {\n      if (ref == null) {\n         throw new IllegalArgumentException(\"ref cannot be null\");\n      }\n      EntityView view = new EntityView();\n      EntityViewUrlCustomizable custom = (EntityViewUrlCustomizable) entityProviderManager\n            .getProviderByPrefixAndCapability(ref.getPrefix(), EntityViewUrlCustomizable.class);\n      if (custom != null) {\n         // use the custom parsing templates\n         view.loadParseTemplates( custom.getParseTemplates() );\n      }\n      view.setEntityReference(ref);\n      if (viewKey != null) {\n         view.setViewKey(viewKey);\n      }\n      if (extension != null) {\n         view.setExtension(extension);\n      }\n      return view;\n   }","commit_id":"61b72578c15111480030734222e43ce2211a9a1f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n    * Translates the input data stream in the supplied format into an entity object for this reference\n    * \n    * @param ref a globally unique reference to an entity, \n    * consists of the entity prefix and optional segments\n    * @param format a string constant indicating the format (from {@link Formats}) \n    * of the input, (example: {@link #XML})\n    * @param input a stream which contains the data to make up this entity,\n    * you may assume this is UTF-8 encoded if you don't know anything else about it\n    * @return an entity object of the type used for the given reference\n    * @throws IllegalArgumentException if the entity does not support input translation or any arguments are invalid\n    * @throws EncodingException is there is failure encoding the input\n    */\n   public Object translateInputToEntity(EntityReference ref, String format, InputStream input, Map<String, Object> params) {\n      if (ref == null || format == null || input == null) {\n         throw new IllegalArgumentException(\"ref, format, and input cannot be null\");\n      }\n      Object entity = null;\n      String prefix = ref.getPrefix();\n      Inputable inputable = entityProviderManager.getProviderByPrefixAndCapability(prefix, Inputable.class);\n      if (inputable != null) {\n         String[] formats = inputable.getHandledInputFormats();\n         if ( ReflectUtil.contains(formats, format) ) {\n            InputTranslatable translatable = entityProviderManager.getProviderByPrefixAndCapability(prefix, InputTranslatable.class);\n            if (translatable == null) {\n               // handle internally or fail\n               entity = internalInputTranslator(ref, format, input, null);\n            } else {\n               // use provider's formatter\n               entity = translatable.translateFormattedData(ref, format, input, params);\n            }\n         } else {\n            throw new IllegalArgumentException(\"This entity (\"+ref+\") is not inputable in this format (\"+format+\"),\" +\n                  \" only the following formats are supported: \" + ReflectUtil.arrayToString(formats));\n         }\n      } else {\n         throw new IllegalArgumentException(\"This entity (\"+ref+\") is not inputable\");\n      }\n      return entity;\n   }","id":69919,"modified_method":"/**\n    * Translates the input data stream in the supplied format into an entity object for this reference\n    * (This is basically a copy of the code in EntityHandlerImpl with stuff removed)\n    * \n    * @param ref a globally unique reference to an entity, \n    * consists of the entity prefix and optional segments\n    * @param format a string constant indicating the format (from {@link Formats}) \n    * of the input, (example: {@link #XML})\n    * @param input a stream which contains the data to make up this entity,\n    * you may assume this is UTF-8 encoded if you don't know anything else about it\n    * @return an entity object of the type used for the given reference\n    * @throws FormatUnsupportedException if you do not handle this format type (passes control to the internal handlers)\n    * @throws EntityEncodingException if you cannot encode the received data into an entity\n    * @throws IllegalArgumentException if any of the arguments are invalid\n    * @throws IllegalStateException for all other failures\n    */\n   public Object translateInputToEntity(EntityReference ref, String format, InputStream inputStream, Map<String, Object> params) {\n      if (ref == null || format == null || inputStream == null) {\n         throw new IllegalArgumentException(\"ref, format, and inputStream cannot be null\");\n      }\n      Object entity = null;\n      String prefix = ref.getPrefix();\n      Inputable inputable = (Inputable) entityProviderManager.getProviderByPrefixAndCapability(prefix, Inputable.class);\n      if (inputable != null) {\n         String[] inputFormats = inputable.getHandledInputFormats();\n         if (inputFormats == null || ReflectUtil.contains(inputFormats, format) ) {\n            boolean handled = false;\n            /* try to use the provider translator if one available,\n             * if it decided not to handle it or none is available then control passes to internal\n             */\n            try {\n               InputTranslatable translatable = (InputTranslatable) entityProviderManager.getProviderByPrefixAndCapability(prefix, InputTranslatable.class);\n               if (translatable != null) {\n                  // use provider's translator\n                  entity = translatable.translateFormattedData(ref, format, inputStream, params);\n                  handled = true;\n               }\n            } catch (FormatUnsupportedException e) {\n               // provider decided not to handle this format\n               handled = false;\n            }\n            if (!handled) {\n               // use internal translators or fail\n               entity = internalInputTranslator(ref, format, inputStream, null);\n            }\n\n            if (entity == null) {\n               // FAILURE input could not be translated into an entity object\n               throw new EntityEncodingException(\"Unable to translate entity (\"+ref+\") with format (\"\n                     +format+\"), translated entity object was null\", ref+\"\");\n            }\n         } else {\n            // format type not handled\n            throw new FormatUnsupportedException(\"Inputable restriction for \" \n                  + prefix + \" blocked handling this format (\"+format+\")\",\n                  ref+\"\", format);\n         }\n      }\n      return entity;\n   }","commit_id":"61b72578c15111480030734222e43ce2211a9a1f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n    * Format entities for output based on the reference into a format,\n    * use the provided list or get the entities\n    * \n    * @param ref the entity reference for this, \n    * if this is a reference to a collection then this will be rendered as a collection of entities,\n    * if a reference to a single entity then only the matching one from the collection will be used\n    * @param format the format to use for the output data\n    * @param entities (optional) if this is null then the entities will be fetched\n    * @param output the outputstream to place the encoded data into\n    * @param view (optional) \n    */\n   public void internalOutputFormatter(EntityReference ref, String format, List<EntityData> entities, OutputStream output, EntityView view, Map<String, Object> params) {\n      if (format == null) { format = Outputable.HTML; }\n      if (view == null) {\n         view = entityBrokerManager.makeEntityView(ref, null, null);\n      }\n      // create a scrap view from the current view, this should be more efficient\n      EntityView workingView = view.copy();\n\n      // get the entities if not supplied\n      if (entities == null) {\n         // these will be EntityData\n         entities = entityBrokerManager.getEntitiesData(ref, new Search(), params);\n      }\n      if (entities.isEmpty()) {\n         // just log this for now\n         log.info(\"No entities to format (\"+format+\") and output for ref (\" + ref + \")\");\n      }\n\n      // get the encoder to use\n      EntityXStream encoder = getEncoderForFormat(format, true);\n\n      String encoded = null;\n      if (EntityView.VIEW_LIST.equals(view.getViewKey()) \n            || ref.getId() == null) {\n         // encoding a collection of entities\n         if (encoder != null) {\n            setEncoderDataAlias(ref.getPrefix(), entities, encoder);\n\n            StringBuilder sb = new StringBuilder();\n            // make header\n            if (Formats.JSON.equals(format)) {\n               sb.append(\"{\\\"\"+ENTITY_PREFIX+\"\\\": \\\"\"+ref.getPrefix() + \"\\\", \\\"\" + ref.getPrefix() + COLLECTION + \"\\\": [\\n\");\n            } else { // assume XML\n               sb.append(\"<\" + ref.getPrefix() + COLLECTION + \" \" + ENTITY_PREFIX + \"=\\\"\" + ref.getPrefix() + \"\\\">\\n\");\n            }\n            // loop through and encode items\n            int encodedEntities = 0;\n            for (EntityData entity : entities) {\n               String encode = encodeEntity(ref, workingView, entity, encoder);\n               if (encode.length() > 3) {\n                  if (Formats.JSON.equals(format)) {\n                     if (encodedEntities > 0) {\n                        sb.append(\",\\n\");\n                     }\n                     // special JSON cleanup (strips off the {\"stuff\": ... })\n                     encode = encode.substring(encode.indexOf(':')+1, encode.length()-1);\n                  } else {\n                     if (encodedEntities > 0) {\n                        sb.append(\"\\n\");\n                     }\n                  }\n                  sb.append(encode);                     \n                  encodedEntities++;\n               }\n            }\n            // make footer\n            if (Formats.JSON.equals(format)) {\n               sb.append(\"\\n]}\");\n            } else { // assume XML\n               sb.append(\"\\n<\/\" + ref.getPrefix() + COLLECTION + \">\");\n            }\n            encoded = sb.toString();\n         } else {\n            // just dump the whole thing to a string if there is no encoder\n            EntityData ed = new EntityData(ref, null, entities);\n            ed.setEntityURL( entityBrokerManager.makeFullURL(workingView.getEntityURL()) );\n            encoded = encodeEntity(ref, workingView, ed, null);\n         }\n      } else {\n         // encoding a single entity\n         EntityData toEncode = entities.get(0);\n         if (toEncode == null) {\n            throw new EncodingException(\"Failed to encode data for entity (\" + ref \n                  + \"), entity object to encode could not be found (null object in list)\", ref.toString());\n         } else {\n            if (encoder != null) {\n               setEncoderDataAlias(ref.getPrefix(), entities, encoder);\n            }\n            try {\n               encoded = encodeEntity(ref, workingView, toEncode, encoder);\n            } catch (RuntimeException e) {\n               throw new EncodingException(\"Failure during internal output encoding of entity: \" + ref, ref.toString(), e);\n            }\n         }\n      }\n      // put the encoded data into the OS\n      try {\n         byte[] b = encoded.getBytes(Formats.UTF_8);\n         output.write(b);\n      } catch (UnsupportedEncodingException e) {\n         throw new EncodingException(\"Failed to encode UTF-8: \" + ref, ref.toString(), e);\n      } catch (IOException e) {\n         throw new EncodingException(\"Failed to encode into output stream: \" + ref, ref.toString(), e);\n      }\n   }","id":69920,"modified_method":"/**\n    * Format entities for output based on the reference into a format,\n    * use the provided list or get the entities\n    * \n    * @param ref the entity reference for this, \n    * if this is a reference to a collection then this will be rendered as a collection of entities,\n    * if a reference to a single entity then only the matching one from the collection will be used\n    * @param format the format to use for the output data\n    * @param entities (optional) if this is null then the entities will be fetched\n    * @param output the outputstream to place the encoded data into\n    * @param view (optional) \n    * @throws FormatUnsupportedException if you do not handle this format type (passes control to the internal handlers)\n    * @throws EntityEncodingException if you cannot encode the received data into an entity\n    * @throws IllegalArgumentException if any of the arguments are invalid\n    * @throws IllegalStateException for all other failures\n    */\n   public void internalOutputFormatter(EntityReference ref, String format, List<EntityData> entities, Map<String, Object> params, OutputStream output, EntityView view) {\n      if (format == null) { format = Outputable.HTML; }\n\n      // check the format to see if we can handle it\n      if (! ReflectUtil.contains(HANDLED_OUTPUT_FORMATS, format)) {\n         throw new FormatUnsupportedException(\"Internal output formatter cannot handle format (\"+format+\") for ref (\"+ref+\")\", ref+\"\", format);\n      }\n\n      if (view == null) {\n         view = entityBrokerManager.makeEntityView(ref, null, null);\n      }\n      // create a scrap view from the current view, this should be more efficient\n      EntityView workingView = view.copy();\n\n      // get the entities if not supplied\n      if (entities == null) {\n         // these will be EntityData\n         entities = entityBrokerManager.getEntitiesData(ref, new Search(), params);\n      }\n      if (entities.isEmpty()) {\n         // just log this for now\n         log.info(\"No entities to format (\"+format+\") and output for ref (\" + ref + \")\");\n      }\n\n      // get the encoder to use\n      EntityXStream encoder = getEncoderForFormat(format, true);\n\n      String encoded = null;\n      if (EntityView.VIEW_LIST.equals(view.getViewKey()) \n            || ref.getId() == null) {\n         // encoding a collection of entities\n         if (encoder != null) {\n            setEncoderDataAlias(ref.getPrefix(), entities, encoder);\n\n            StringBuilder sb = new StringBuilder();\n            // make header\n            if (Formats.JSON.equals(format)) {\n               sb.append(\"{\\\"\"+ENTITY_PREFIX+\"\\\": \\\"\"+ref.getPrefix() + \"\\\", \\\"\" + ref.getPrefix() + COLLECTION + \"\\\": [\\n\");\n            } else { // assume XML\n               sb.append(\"<\" + ref.getPrefix() + COLLECTION + \" \" + ENTITY_PREFIX + \"=\\\"\" + ref.getPrefix() + \"\\\">\\n\");\n            }\n            // loop through and encode items\n            int encodedEntities = 0;\n            for (EntityData entity : entities) {\n               String encode = encodeEntity(ref, workingView, entity, encoder);\n               if (encode.length() > 3) {\n                  if (Formats.JSON.equals(format)) {\n                     if (encodedEntities > 0) {\n                        sb.append(\",\\n\");\n                     }\n                     // special JSON cleanup (strips off the {\"stuff\": ... })\n                     encode = encode.substring(encode.indexOf(':')+1, encode.length()-1);\n                  } else {\n                     if (encodedEntities > 0) {\n                        sb.append(\"\\n\");\n                     }\n                  }\n                  sb.append(encode);                     \n                  encodedEntities++;\n               }\n            }\n            // make footer\n            if (Formats.JSON.equals(format)) {\n               sb.append(\"\\n]}\");\n            } else { // assume XML\n               sb.append(\"\\n<\/\" + ref.getPrefix() + COLLECTION + \">\");\n            }\n            encoded = sb.toString();\n         } else {\n            // just dump the whole thing to a string if there is no encoder\n            EntityData ed = new EntityData(ref, null, entities);\n            ed.setEntityURL( entityBrokerManager.makeFullURL(workingView.getEntityURL()) );\n            encoded = encodeEntity(ref, workingView, ed, null);\n         }\n      } else {\n         // encoding a single entity\n         EntityData toEncode = entities.get(0);\n         if (toEncode == null) {\n            throw new EntityEncodingException(\"Failed to encode data for entity (\" + ref \n                  + \"), entity object to encode could not be found (null object in list)\", ref.toString());\n         } else {\n            if (encoder != null) {\n               setEncoderDataAlias(ref.getPrefix(), entities, encoder);\n            }\n            try {\n               encoded = encodeEntity(ref, workingView, toEncode, encoder);\n            } catch (RuntimeException e) {\n               throw new EntityEncodingException(\"Failure during internal output encoding of entity: \" + ref, ref.toString(), e);\n            }\n         }\n      }\n      // put the encoded data into the OS\n      try {\n         byte[] b = encoded.getBytes(Formats.UTF_8);\n         output.write(b);\n      } catch (UnsupportedEncodingException e) {\n         throw new EntityEncodingException(\"Failed to encode UTF-8: \" + ref, ref.toString(), e);\n      } catch (IOException e) {\n         throw new EntityEncodingException(\"Failed to encode into output stream: \" + ref, ref.toString(), e);\n      }\n   }","commit_id":"61b72578c15111480030734222e43ce2211a9a1f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n    * Handled the internal encoding of data into an entity object\n    * \n    * @param ref the entity reference\n    * @param format the format which the input is encoded in\n    * @param input the data being input\n    * @return the entity object based on the data\n    * @throws EntityException if there is a failure in translation\n    */\n   @SuppressWarnings(\"unchecked\")\n   public Object internalInputTranslator(EntityReference ref, String format, InputStream input, HttpServletRequest req) {\n      Object entity = null;\n\n      // get the encoder to use\n      EntityXStream encoder = getEncoderForFormat(format, false);\n\n      Inputable inputable = (Inputable) entityProviderManager.getProviderByPrefixAndCapability(ref.getPrefix(), Inputable.class);\n      if (inputable != null) {\n         // get a the current entity object or a sample\n         Object current = null;\n         if (ref.getId() == null) {\n            // get a sample\n            current = inputable.getSampleEntity();\n         } else {\n            // get the current entity\n            current = inputable.getEntity(ref);\n         }\n\n         if (current != null) {\n            if (Formats.HTML.equals(format) || format == null || \"\".equals(format)) {\n               // html req handled specially\n               if (req != null) {\n                  Map<String, String[]> params = req.getParameterMap();\n                  if (params != null && params.size() > 0) {\n                     entity = current;\n                     try {\n                        entityBrokerManager.getReflectUtil().populateFromParams(entity, params);\n                     } catch (Exception e) {\n                        throw new IllegalArgumentException(\"Unable to populate bean for ref (\"+ref+\") from request: \" + e.getMessage(), e);\n                     }\n                  } else {\n                     // no request params, bad request\n                     throw new EntityException(\"No request params for html input request (there must be at least one) for reference: \" + ref, \n                           ref.toString(), HttpServletResponse.SC_BAD_REQUEST);\n                  }\n               }\n            } else if (encoder != null) {\n               if (input == null) {\n                  // no request params, bad request\n                  throw new EntityException(\"No input for input translation (input cannot be null) for reference: \" + ref, \n                        ref.toString(), HttpServletResponse.SC_BAD_REQUEST);\n               } else {\n                  encoder.alias(ref.getPrefix(), current.getClass());\n                  // START classloader protection\n                  ClassLoader currentClassLoader = Thread.currentThread().getContextClassLoader();\n                  try {\n                     Object classloaderIndicator = current;\n                     ClassLoader newClassLoader = classloaderIndicator.getClass().getClassLoader();\n                     encoder.setClassLoader(newClassLoader);\n                     // translate using the encoder\n                     entity = encoder.fromXML(input, current);\n                     // END run in classloader\n                  } catch (RuntimeException e) {\n                     throw new EncodingException(\"Failure during internal input encoding of entity: \" + ref, ref.toString(), e);\n                  } finally {\n                     encoder.setClassLoader(currentClassLoader);\n                  }\n                  // END classloader protection\n               }\n            }\n         }\n      } else {\n         throw new IllegalArgumentException(\"This entity (\"+ref+\") does not allow input translation\");\n      }\n\n      if (entity == null) {\n         throw new EntityException(\"Unable to encode entity from input for reference: \" + ref, ref.toString(), HttpServletResponse.SC_BAD_REQUEST);\n      }\n      return entity;\n   }","id":69921,"modified_method":"/**\n    * Handled the internal encoding of data into an entity object\n    * \n    * @param ref the entity reference\n    * @param format the format which the input is encoded in\n    * @param input the data being input\n    * @return the entity object based on the data\n    * @throws FormatUnsupportedException if you do not handle this format type (passes control to the internal handlers)\n    * @throws EntityEncodingException if you cannot encode the received data into an entity\n    * @throws IllegalArgumentException if any of the arguments are invalid\n    * @throws IllegalStateException for all other failures\n    */\n   @SuppressWarnings(\"unchecked\")\n   public Object internalInputTranslator(EntityReference ref, String format, InputStream input, HttpServletRequest req) {\n      Object entity = null;\n\n      // get the encoder to use\n      EntityXStream encoder = getEncoderForFormat(format, false);\n\n      Inputable inputable = (Inputable) entityProviderManager.getProviderByPrefixAndCapability(ref.getPrefix(), Inputable.class);\n      if (inputable != null) {\n         // get a the current entity object or a sample\n         Object current = null;\n         if (ref.getId() == null) {\n            // get a sample\n            current = inputable.getSampleEntity();\n         } else {\n            // get the current entity\n            current = inputable.getEntity(ref);\n         }\n\n         if (current != null) {\n            if (Formats.HTML.equals(format) || format == null || \"\".equals(format)) {\n               // html req handled specially\n               if (req != null) {\n                  Map<String, String[]> params = req.getParameterMap();\n                  if (params != null && params.size() > 0) {\n                     entity = current;\n                     try {\n                        entityBrokerManager.getReflectUtil().populateFromParams(entity, params);\n                     } catch (Exception e) {\n                        throw new IllegalArgumentException(\"Unable to populate bean for ref (\"+ref+\") from request: \" + e.getMessage(), e);\n                     }\n                  } else {\n                     // no request params, bad request\n                     throw new EntityException(\"No request params for html input request (there must be at least one) for reference: \" + ref, \n                           ref.toString(), HttpServletResponse.SC_BAD_REQUEST);\n                  }\n               }\n            } else if (encoder != null) {\n               if (input == null) {\n                  // no request params, bad request\n                  throw new EntityException(\"No input for input translation (input cannot be null) for reference: \" + ref, \n                        ref.toString(), HttpServletResponse.SC_BAD_REQUEST);\n               } else {\n                  encoder.alias(ref.getPrefix(), current.getClass());\n                  // START classloader protection\n                  ClassLoader currentClassLoader = Thread.currentThread().getContextClassLoader();\n                  try {\n                     Object classloaderIndicator = current;\n                     ClassLoader newClassLoader = classloaderIndicator.getClass().getClassLoader();\n                     encoder.setClassLoader(newClassLoader);\n                     // translate using the encoder\n                     entity = encoder.fromXML(input, current);\n                     // END run in classloader\n                  } catch (RuntimeException e) {\n                     throw new EntityEncodingException(\"Failure during internal input encoding of entity: \" + ref, ref.toString(), e);\n                  } finally {\n                     encoder.setClassLoader(currentClassLoader);\n                  }\n                  // END classloader protection\n               }\n            }\n         }\n      } else {\n         throw new IllegalArgumentException(\"This entity (\"+ref+\") does not allow input translation\");\n      }\n\n      if (entity == null) {\n         throw new EntityException(\"Unable to encode entity from input for reference: \" + ref, ref.toString(), HttpServletResponse.SC_BAD_REQUEST);\n      }\n      return entity;\n   }","commit_id":"61b72578c15111480030734222e43ce2211a9a1f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n    * Format and output an entity or collection included or referred to by this entity ref object\n    * into output according to the format string provided,\n    * Should take into account the reference when determining what the entities are\n    * and how to encode them\n    * \n    * @param ref a globally unique reference to an entity, \n    * consists of the entity prefix and optional segments\n    * @param format a string constant indicating the format (from {@link Formats}) \n    * for output, (example: {@link #XML})\n    * @param entities (optional) a list of entities to create formatted output for,\n    * if this is null then the entities should be retrieved based on the reference,\n    * if this contains only a single item AND the ref refers to a single entity\n    * then the entity should be extracted from the list and encoded without the indication\n    * that it is a collection, for all other cases the encoding should include an indication that\n    * this is a list of entities\n    * @param output the output stream to place the formatted data in,\n    * should be UTF-8 encoded if there is char data\n    * @throws IllegalArgumentException if the entity does not support output formatting or any arguments are invalid\n    * @throws EncodingException is there is failure encoding the output\n    */\n   public void formatAndOutputEntity(EntityReference ref, String format, List<EntityData> entities, OutputStream output, Map<String, Object> params) {\n      if (ref == null || format == null || output == null) {\n         throw new IllegalArgumentException(\"ref, format, and output cannot be null\");\n      }\n      String prefix = ref.getPrefix();\n      Outputable outputable = entityProviderManager.getProviderByPrefixAndCapability(prefix, Outputable.class);\n      if (outputable != null) {\n         String[] formats = outputable.getHandledOutputFormats();\n         if ( ReflectUtil.contains(formats, format) ) {\n            OutputFormattable formattable = entityProviderManager.getProviderByPrefixAndCapability(prefix, OutputFormattable.class);\n            if (formattable == null) {\n               // handle internally or fail\n               internalOutputFormatter(ref, format, entities, output, null, params);\n            } else {\n               // use provider's formatter\n               formattable.formatOutput(ref, format, entities, params, output);\n            }\n         } else {\n            throw new IllegalArgumentException(\"This entity (\"+ref+\") is not outputable in this format (\"+format+\"),\" +\n                  \" only the following formats are supported: \" + ReflectUtil.arrayToString(formats));\n         }\n      } else {\n         throw new IllegalArgumentException(\"This entity (\"+ref+\") is not outputable\");\n      }\n   }","id":69922,"modified_method":"/**\n    * Format and output an entity or collection included or referred to by this entity ref object\n    * into output according to the format string provided,\n    * Should take into account the reference when determining what the entities are\n    * and how to encode them\n    * (This is basically a copy of the code in EntityHandlerImpl with stuff removed)\n    * \n    * @param ref a globally unique reference to an entity, \n    * consists of the entity prefix and optional segments\n    * @param format a string constant indicating the format (from {@link Formats}) \n    * for output, (example: {@link #XML})\n    * @param entities (optional) a list of entities to create formatted output for,\n    * if this is null then the entities should be retrieved based on the reference,\n    * if this contains only a single item AND the ref refers to a single entity\n    * then the entity should be extracted from the list and encoded without the indication\n    * that it is a collection, for all other cases the encoding should include an indication that\n    * this is a list of entities\n    * @param outputStream the output stream to place the formatted data in,\n    * should be UTF-8 encoded if there is char data\n    * @throws FormatUnsupportedException if you do not handle this format type (passes control to the internal handlers)\n    * @throws EntityEncodingException if you cannot encode the received data into an entity\n    * @throws IllegalArgumentException if any of the arguments are invalid\n    * @throws IllegalStateException for all other failures\n    */\n   public void formatAndOutputEntity(EntityReference ref, String format, List<EntityData> entities, OutputStream outputStream, Map<String, Object> params) {\n      if (ref == null || format == null || outputStream == null) {\n         throw new IllegalArgumentException(\"ref, format, and output cannot be null\");\n      }\n      String prefix = ref.getPrefix();\n      Outputable outputable = (Outputable) entityProviderManager.getProviderByPrefixAndCapability(prefix, Outputable.class);\n      if (outputable != null) {\n         String[] outputFormats = outputable.getHandledOutputFormats();\n         if (outputFormats == null || ReflectUtil.contains(outputFormats, format) ) {\n            boolean handled = false;\n            /* try to use the provider formatter if one available,\n             * if it decided not to handle it or none is available then control passes to internal\n             */\n            try {\n               OutputFormattable formattable = (OutputFormattable) entityProviderManager.getProviderByPrefixAndCapability(prefix, OutputFormattable.class);\n               if (formattable != null) {\n                  // use provider's formatter\n                  formattable.formatOutput(ref, format, entities, params, outputStream);\n                  handled = true;\n               }\n            } catch (FormatUnsupportedException e) {\n               // provider decided not to handle this format\n               handled = false;\n            }\n            if (!handled) {\n               // handle internally or fail\n               internalOutputFormatter(ref, format, entities, params, outputStream, null);\n            }\n         } else {\n            // format type not handled\n            throw new FormatUnsupportedException(\"Outputable restriction for \" \n                  + prefix + \" blocked handling this format (\"+format+\")\",\n                  ref+\"\", format);\n         }\n      }\n   }","commit_id":"61b72578c15111480030734222e43ce2211a9a1f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n    * Test method for {@link EntityHandlerImpl#internalOutputFormatter(EntityView, javax.servlet.http.HttpServletRequest, HttpServletResponse)}\n    **/\n   public void testInternalOutputFormatter() {\n\n      String fo = null;\n      EntityView view = null;\n      OutputStream output = null;\n\n      // XML test valid resolveable entity\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.REF4 + \".\" + Formats.XML);\n      assertNotNull(view);\n      entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, output, view, null);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(\"<id>4-one<\/id>\"));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n\n      // test null view\n      output = new ByteArrayOutputStream();\n      entityEncodingManager.internalOutputFormatter(new EntityReference(TestData.REF4), Formats.XML, null, output, null, null);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(\"<id>4-one<\/id>\"));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n      \n      // test list of entities\n      ArrayList<EntityData> testEntities = new ArrayList<EntityData>();\n      testEntities.add( new EntityData(TestData.REF4, null, TestData.entity4) );\n      testEntities.add( new EntityData(TestData.REF4_two, null, TestData.entity4_two) );\n      output = new ByteArrayOutputStream();\n      entityEncodingManager.internalOutputFormatter(new EntityReference(TestData.PREFIX4, \"\"), Formats.XML, testEntities, output, null, null);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(\"<id>4-one<\/id>\"));\n      assertTrue(fo.contains(\"<id>4-two<\/id>\"));\n      assertFalse(fo.contains(\"<id>4-three<\/id>\"));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n\n      // test single entity\n      testEntities.clear();\n      testEntities.add( new EntityData(TestData.REF4_3, null, TestData.entity4_3) );\n      output = new ByteArrayOutputStream();\n      entityEncodingManager.internalOutputFormatter(new EntityReference(TestData.REF4_3), Formats.XML, testEntities, output, null, null);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(\"<id>4-three<\/id>\"));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n\n\n      // JSON test valid resolveable entity\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.REF4 + \".\" + Formats.JSON);\n      assertNotNull(view);\n      entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, output, view, null);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(\"\\\"id\\\":\\\"4-one\\\",\"));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n\n      // HTML test valid resolveable entity\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.REF4 + \".\" + Formats.HTML);\n      assertNotNull(view);\n      entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, output, view, null);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n\n      // test for unresolvable entities\n\n      // JSON test valid unresolvable entity\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.REF1 + \".\" + Formats.JSON);\n      assertNotNull(view);\n      try {\n         entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, output, view, null);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(HttpServletResponse.SC_METHOD_NOT_ALLOWED, e.responseCode);\n      }\n\n      // HTML test valid unresolvable entity\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.REF1); // blank\n      assertNotNull(view);\n      try {\n         entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, output, view, null);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(HttpServletResponse.SC_METHOD_NOT_ALLOWED, e.responseCode);\n      }\n\n      // test resolveable collections\n      // XML\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.SPACE4 + \".\" + Formats.XML);\n      assertNotNull(view);\n      entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, output, view, null);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(TestData.IDS4[0]));\n      assertTrue(fo.contains(TestData.IDS4[1]));\n      assertTrue(fo.contains(TestData.IDS4[2]));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n\n      // JSON\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.SPACE4 + \".\" + Formats.JSON);\n      assertNotNull(view);\n      entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, output, view, null);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(TestData.IDS4[0]));\n      assertTrue(fo.contains(TestData.IDS4[1]));\n      assertTrue(fo.contains(TestData.IDS4[2]));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n\n      // test for invalid refs\n      try {\n         entityEncodingManager.internalOutputFormatter( new EntityReference(\"/fakey/fake\"), null, null, output, null, null);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(HttpServletResponse.SC_METHOD_NOT_ALLOWED, e.responseCode);\n      }\n\n   }","id":69923,"modified_method":"/**\n    * Test method for {@link EntityHandlerImpl#internalOutputFormatter(EntityView, javax.servlet.http.HttpServletRequest, HttpServletResponse)}\n    **/\n   public void testInternalOutputFormatter() {\n\n      String fo = null;\n      EntityView view = null;\n      OutputStream output = null;\n\n      // XML test valid resolveable entity\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.REF4 + \".\" + Formats.XML);\n      assertNotNull(view);\n      entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, null, output, view);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(\"<id>4-one<\/id>\"));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n\n      // test null view\n      output = new ByteArrayOutputStream();\n      entityEncodingManager.internalOutputFormatter(new EntityReference(TestData.REF4), Formats.XML, null, null, output, null);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(\"<id>4-one<\/id>\"));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n      \n      // test list of entities\n      ArrayList<EntityData> testEntities = new ArrayList<EntityData>();\n      testEntities.add( new EntityData(TestData.REF4, null, TestData.entity4) );\n      testEntities.add( new EntityData(TestData.REF4_two, null, TestData.entity4_two) );\n      output = new ByteArrayOutputStream();\n      entityEncodingManager.internalOutputFormatter(new EntityReference(TestData.PREFIX4, \"\"), Formats.XML, testEntities, null, output, null);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(\"<id>4-one<\/id>\"));\n      assertTrue(fo.contains(\"<id>4-two<\/id>\"));\n      assertFalse(fo.contains(\"<id>4-three<\/id>\"));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n\n      // test single entity\n      testEntities.clear();\n      testEntities.add( new EntityData(TestData.REF4_3, null, TestData.entity4_3) );\n      output = new ByteArrayOutputStream();\n      entityEncodingManager.internalOutputFormatter(new EntityReference(TestData.REF4_3), Formats.XML, testEntities, null, output, null);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(\"<id>4-three<\/id>\"));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n\n\n      // JSON test valid resolveable entity\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.REF4 + \".\" + Formats.JSON);\n      assertNotNull(view);\n      entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, null, output, view);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(\"\\\"id\\\":\\\"4-one\\\",\"));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n\n      // HTML test valid resolveable entity\n/** TODO need HTML handling first\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.REF4 + \".\" + Formats.HTML);\n      assertNotNull(view);\n      entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, null, output, view);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n**/\n\n      // test invalid format request\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.REF4 + \".\" + Formats.RSS);\n      assertNotNull(view);\n      try {\n         entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, null, output, view);\n         fail(\"Should have thrown exception\");\n      } catch (FormatUnsupportedException e) {\n         assertNotNull(e.getMessage());\n      }\n\n      // test for unresolvable entities\n\n      // JSON test valid unresolvable entity\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.REF1 + \".\" + Formats.JSON);\n      assertNotNull(view);\n      try {\n         entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, null, output, view);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(HttpServletResponse.SC_METHOD_NOT_ALLOWED, e.responseCode);\n      }\n\n      // HTML test valid unresolvable entity\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.REF1); // blank\n      assertNotNull(view);\n      try {\n         entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, null, output, view);\n         fail(\"Should have thrown exception\");\n      } catch (FormatUnsupportedException e) {\n         assertNotNull(e.getMessage());\n      }\n\n      // test resolveable collections\n      // XML\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.SPACE4 + \".\" + Formats.XML);\n      assertNotNull(view);\n      entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, null, output, view);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(TestData.IDS4[0]));\n      assertTrue(fo.contains(TestData.IDS4[1]));\n      assertTrue(fo.contains(TestData.IDS4[2]));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n\n      // JSON\n      output = new ByteArrayOutputStream();\n      view = entityBrokerManager.parseEntityURL(TestData.SPACE4 + \".\" + Formats.JSON);\n      assertNotNull(view);\n      entityEncodingManager.internalOutputFormatter(view.getEntityReference(), view.getExtension(), null, null, output, view);\n      fo = output.toString();\n      assertNotNull(fo);\n      assertTrue(fo.length() > 20);\n      assertTrue(fo.contains(TestData.PREFIX4));\n      assertTrue(fo.contains(TestData.IDS4[0]));\n      assertTrue(fo.contains(TestData.IDS4[1]));\n      assertTrue(fo.contains(TestData.IDS4[2]));\n      assertTrue(fo.contains(EntityXStream.SAKAI_ENTITY));\n\n      // test for invalid refs\n      try {\n         entityEncodingManager.internalOutputFormatter( new EntityReference(\"/fakey/fake\"), Formats.JSON, null, null, output, null);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(HttpServletResponse.SC_METHOD_NOT_ALLOWED, e.responseCode);\n      }\n\n   }","commit_id":"61b72578c15111480030734222e43ce2211a9a1f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public String handleEntityAccess(HttpServletRequest req, HttpServletResponse res, String path) {\n      // get the path info if not set\n      if (path == null) {\n         path = req.getPathInfo();\n      }\n\n      String handledReference = null;\n\n      if (path == null || \"\".equals(path) || \"/\".equals(path)) {\n         // SPECIAL handling for empty path\n         res.setStatus(HttpServletResponse.SC_MOVED_PERMANENTLY);\n         try {\n            res.sendRedirect( res.encodeRedirectURL(DIRECT + SLASH_DESCRIBE) );\n         } catch (IOException e) {\n            // should never happen\n            throw new RuntimeException(\"Could not encode the redirect URL\");\n         }\n         // immediate exit from redirect\n         return \"/\";\n      } else {\n         // regular handling for direct URLs\n         if ( (SLASH_DESCRIBE).equals(path) \n               || path.startsWith(SLASH_DESCRIBE + EntityReference.PERIOD)) {\n            // SPECIAL handling for the describe all URL\n            String format = TemplateParseUtil.findExtension(path)[2];\n            if (format == null) {\n               format = Formats.HTML;\n            }\n            RequestUtils.setResponseEncoding(format, res);\n            String output = entityDescriptionManager.makeDescribeAll(format);\n            res.setContentLength(output.getBytes().length);\n            try {\n               res.getWriter().write(output);\n            } catch (IOException e) {\n               // should never happen\n               throw new RuntimeException(\"Failed to put output into the response writer: \" + e.getMessage(), e);\n            }\n            res.setStatus(HttpServletResponse.SC_OK);\n            handledReference = EntityView.SEPARATOR+\"\";\n         } else {\n            // STANDARD processing for the incoming view\n            EntityView view;\n            try {\n               view = entityBrokerManager.parseEntityURL(path);\n            } catch (IllegalArgumentException e) {\n               // FAILURE indicates we could not parse the reference\n               throw new EntityException(\"Could not parse entity path (\"+path+\"): \" + e.getMessage(), path, HttpServletResponse.SC_BAD_REQUEST);\n            }\n\n            if (view == null) {\n               // FAILURE no provider for this entity prefix\n               throw new EntityException( \"Could not parse the incoming path (\"+path+\") and no entity provider could be found to handle the prefix\", \n                     path, HttpServletResponse.SC_NOT_IMPLEMENTED );\n            } else if ( DESCRIBE.equals(view.getEntityReference().getId()) ) {\n               // SPECIAL handling for entity describe URLs\n               String format = TemplateParseUtil.findExtension(path)[2];\n               if (format == null) {\n                  format = Formats.HTML;\n               }\n               RequestUtils.setResponseEncoding(format, res);\n               String entityId = req.getParameter(\"_id\");\n               if (entityId == null || \"\".equals(entityId)) {\n                  entityId = FAKE_ID;\n               }\n               String output = entityDescriptionManager.makeDescribeEntity(view.getEntityReference().getPrefix(), entityId, format);\n               res.setContentLength(output.getBytes().length);\n               try {\n                  res.getWriter().write(output);\n               } catch (IOException e) {\n                  throw new RuntimeException(\"Failed to put output into the response writer: \" + e.getMessage(), e);\n               }\n               res.setStatus(HttpServletResponse.SC_OK);\n               handledReference = view.getEntityReference().getSpaceReference() + SLASH_DESCRIBE;\n\n            } else {\n               // STANDARD reference successfully parsed\n               String prefix = view.getEntityReference().getPrefix();\n\n               // check for redirect\n               Redirectable urlConfigurable = entityProviderManager.getProviderByPrefixAndCapability(prefix, Redirectable.class);\n               if (urlConfigurable != null) {\n                  // SPECIAL check for redirect\n                  String redirectURL = entityRedirectsManager.checkForTemplateMatch(urlConfigurable, path, req.getQueryString());\n                  if (redirectURL != null) {\n                     // SPECIAL handling for redirect\n                     if (\"\".equals(redirectURL)) {\n                        // do nothing but return an empty response\n                        res.setStatus(HttpServletResponse.SC_OK);\n                     } else {\n                        // do the redirect\n                        log.info(\"Entity Redirect: redirecting from (\"+path+\") to (\"+redirectURL+\")\");\n                        RequestUtils.handleURLRedirect(redirectURL, true, req, res);\n                     }\n                     return EntityView.SEPARATOR + prefix; // exit here for redirects\n                  }\n               }\n\n               // check for custom action\n               CustomAction customAction = entityActionsManager.getCustomAction(prefix, view.getPathSegment(1));\n               if (customAction == null) {\n                  customAction = entityActionsManager.getCustomAction(prefix, view.getPathSegment(2));\n               }\n               if (customAction == null) {\n                  // check to see if the entity exists\n                  if (! entityBrokerManager.entityExists(view.getEntityReference()) ) {\n                     // FAILURE invalid entity reference (entity does not exist)\n                     throw new EntityException( \"Attempted to access an entity URL path (\" + path + \") for an entity (\"\n                           + view.getEntityReference() + \") that does not exist\", \n                           view.getEntityReference()+\"\", HttpServletResponse.SC_NOT_FOUND );\n                  }\n               } else {\n                  // cleanup the entity reference, this has to be done because otherwise the custom action\n                  // on collections appears to be the id of an entity in the collection\n                  EntityReference cRef = view.getEntityReference();\n                  if (cRef.getId().equals(customAction.action)) {\n                     view.setEntityReference( new EntityReference(prefix, \"\") );\n                  }\n               }\n               res.setStatus(HttpServletResponse.SC_OK); // default - other things can switch this later on\n\n               // store format in attribute\n               req.setAttribute(\"entity-format\", view.getFormat());\n\n               // STANDARD initial processing complete\n               // wrap in try block so that request storage is always cleaned up\n               try {\n                  // store the current request and response\n                  ((RequestGetterImpl) requestGetter).setRequest(req);\n                  ((RequestGetterImpl) requestGetter).setResponse(res);\n                  // set the request variables\n                  requestStorage.setRequestValue(RequestStorage.ReservedKeys._requestEntityReference.name(), view.getEntityReference().toString());\n                  requestStorage.setRequestValue(RequestStorage.ReservedKeys._requestOrigin.name(), RequestStorage.RequestOrigin.REST.name());\n                  requestStorage.setRequestValue(RequestStorage.ReservedKeys._requestActive.name(), true);\n\n                  // handle the before interceptor\n                  RequestInterceptor interceptor = (RequestInterceptor) entityProviderManager.getProviderByPrefixAndCapability(prefix, RequestInterceptor.class);\n                  if (interceptor != null) {\n                     interceptor.before(view, req, res);\n                  }\n\n                  // check for provider handling of this request\n                  RequestHandler handler = (RequestHandler) entityProviderManager.getProviderByPrefixAndCapability(prefix, RequestHandler.class);\n                  if (handler != null) {\n                     // SPECIAL provider is handling this request\n                     handleClassLoaderAccess(handler, req, res, view);\n                  } else {\n                     // STANDARD processing of the entity request internally start here\n                     // try to handle the request internally if possible\n\n                     // identify the type of request (input or output) and the action (will be encoded in the viewKey)\n                     boolean output = RequestUtils.isRequestOutput(req, view);\n                     setResponseHeaders(view, res, null);\n\n                     boolean handled = false;\n                     // PROCESS CUSTOM ACTIONS\n                     ActionReturn actionReturn = null;\n                     if (customAction != null) {\n                        // SPECIAL handle the custom action\n                        ActionsExecutable actionProvider = entityProviderManager.getProviderByPrefixAndCapability(prefix, ActionsExecutable.class);\n                        if (actionProvider == null) {\n                           throw new EntityException( \"The provider for prefix (\"+prefix+\") cannot handle custom actions\", \n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_BAD_REQUEST );\n                        }\n                        // make sure this request is a valid type for this action\n                        if (customAction.viewKey != null \n                              && ! view.getViewKey().equals(customAction.viewKey)) {\n                           throw new EntityException( \"Cannot execute custom action (\"+customAction.action+\") for request method \" + req.getMethod()\n                                 + \", The custom action view key (\"+customAction.viewKey+\") must match the request view key (\"+view.getViewKey()+\")\", \n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_BAD_REQUEST );\n                        }\n                        try {\n                           actionReturn = entityActionsManager.handleCustomActionRequest(actionProvider, view, customAction.action, req, res);\n                        } catch (IllegalArgumentException e) {\n                           throw new EntityException( \"Cannot execute custom action (\"+customAction.action+\"): Illegal arguments: \" + e.getMessage(), \n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_BAD_REQUEST );\n                        } catch (UnsupportedOperationException e) {\n                           throw new EntityException( \"Cannot execute custom action (\"+customAction.action+\"): Invalid action: \" + e.getMessage(), \n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_METHOD_NOT_ALLOWED );\n                        }\n                        if (actionReturn == null \n                              || actionReturn.output != null) {\n                           // custom action processing complete\n                           res.setStatus(HttpServletResponse.SC_OK);\n                           handled = true;\n                        } else {\n                           // if the custom action returned entity data then we will encode it for output\n                           if (actionReturn.entitiesList == null\n                                 && actionReturn.entityData == null) {\n                              handled = true;\n                           } else {\n                              // there is entity data to return\n                              output = true;\n                              handled = false;\n                              // populate the entity data\n                              if (actionReturn.entitiesList != null) {\n                                 entityBrokerManager.populateEntityData(actionReturn.entitiesList);\n                              } else if (actionReturn.entityData != null) {\n                                 entityBrokerManager.populateEntityData( new EntityData[] {actionReturn.entityData} );\n                              }\n                           }\n                        }\n                     }\n\n                     if (!handled) {\n                        // INTERNAL PROCESSING OF REQUEST\n                        try {\n                           String format = view.getFormat();\n                           if (output) {\n                              // output request\n                              Outputable outputable = (Outputable) entityProviderManager.getProviderByPrefixAndCapability(prefix, Outputable.class);\n                              if (outputable != null) {\n                                 if (customAction != null) {\n                                    // override format from the custom action\n                                    if (actionReturn.format != null) {\n                                       format = actionReturn.format;\n                                    }\n                                 }\n                                 String[] outputFormats = outputable.getHandledOutputFormats();\n                                 if (outputFormats == null || ReflectUtil.contains(outputFormats, format) ) {\n                                    // we are handling this type of format for this entity\n                                    RequestUtils.setResponseEncoding(format, res);\n\n                                    // get the entities to output\n                                    List<EntityData> entities = null;\n                                    if (customAction != null) {\n                                       // get entities from a custom action\n                                       entities = actionReturn.entitiesList;\n                                       if (entities == null \n                                             && actionReturn.entityData != null) {\n                                          ArrayList<EntityData> eList = new ArrayList<EntityData>();\n                                          EntityData ed = actionReturn.entityData;\n                                          eList.add( ed );\n                                          entities = eList;\n                                          // this was a single object return so it should be encoded as such, thus we will recode the correct reference into the view\n                                          EntityReference edRef = ed.getEntityReference();\n                                          if (edRef.getId() == null) {\n                                             edRef = new EntityReference(edRef.getPrefix(), customAction.action);\n                                          }\n                                          view.setEntityReference( edRef );\n                                          view.setViewKey(EntityView.VIEW_SHOW);\n                                       }\n                                    } else {\n                                       // get from a search\n                                       Search search = RequestUtils.makeSearchFromRequest(req);\n                                       entities = entityBrokerManager.getEntitiesData(view.getEntityReference(), search, null);\n                                    }\n                                    // set the modifed header (use the sole entity in the list if there is one only)\n                                    setLastModifiedHeaders(res, (entities != null && entities.size()==1 ? entities.get(0) : null), System.currentTimeMillis());\n\n                                    if (EntityView.Method.HEAD.name().equals(view.getMethod())) {\n                                       // HEADER only\n                                       res.setStatus(HttpServletResponse.SC_NO_CONTENT);\n                                    } else {\n                                       // GET\n                                       OutputStream outputStream = null;\n                                       try {\n                                          outputStream = res.getOutputStream();\n                                       } catch (IOException e) {\n                                          throw new RuntimeException(\"Failed to get output stream from response: \" + view.getEntityReference(), e);\n                                       }\n\n                                       /* try to use the provider formatter if one available,\n                                        * if it decided not to handle it or none is available then control passes to internal\n                                        */\n                                       try {\n                                          OutputFormattable formattable = (OutputFormattable) entityProviderManager.getProviderByPrefixAndCapability(prefix, OutputFormattable.class);\n                                          if (formattable != null) {\n                                             // use provider's formatter\n                                             formattable.formatOutput(view.getEntityReference(), format, entities, null, outputStream);\n                                             handled = true;\n                                          }\n                                       } catch (FormatUnsupportedException e) {\n                                          // provider decided not to handle this format\n                                          handled = false;\n                                       }\n                                       if (!handled) {\n                                          // handle internally or fail\n                                          entityEncodingManager.internalOutputFormatter(view.getEntityReference(), format, entities, outputStream, view, null);\n                                       }\n                                       handled = true;\n                                       res.setStatus(HttpServletResponse.SC_OK);\n                                    }\n                                 } else {\n                                    // format type not handled\n                                    throw new FormatUnsupportedException(\"Outputable restriction for \" \n                                          + prefix + \" blocked handling this format (\"+format+\")\",\n                                          view.getEntityReference()+\"\", format);\n                                 }\n                              }\n                           } else {\n                              // input request\n                              if (EntityView.VIEW_DELETE.equals(view.getViewKey())) {\n                                 // delete request\n                                 Deleteable deleteable = (Deleteable) entityProviderManager.getProviderByPrefixAndCapability(prefix, Deleteable.class);\n                                 if (deleteable != null) {\n                                    deleteable.deleteEntity(view.getEntityReference(), null);\n                                    res.setStatus(HttpServletResponse.SC_NO_CONTENT);\n                                    handled = true;\n                                 }\n                              } else {\n                                 // save request\n                                 Inputable inputable = (Inputable) entityProviderManager.getProviderByPrefixAndCapability(prefix, Inputable.class);\n                                 if (inputable != null) {\n                                    String[] inputFormats = inputable.getHandledInputFormats();\n                                    if (inputFormats == null || ReflectUtil.contains(inputFormats, format) ) {\n                                       // we are handling this type of format for this entity\n                                       Object entity = null;\n                                       InputStream inputStream = null;\n                                       try {\n                                          inputStream = req.getInputStream();\n                                       } catch (IOException e) {\n                                          throw new RuntimeException(\"Failed to get output stream from response: \" + view.getEntityReference(), e);\n                                       }\n\n                                       /* try to use the provider translator if one available,\n                                        * if it decided not to handle it or none is available then control passes to internal\n                                        */\n                                       try {\n                                          InputTranslatable translatable = (InputTranslatable) entityProviderManager.getProviderByPrefixAndCapability(prefix, InputTranslatable.class);\n                                          if (translatable != null) {\n                                             // use provider's translator\n                                             entity = translatable.translateFormattedData(view.getEntityReference(), \n                                                   format, inputStream, null);\n                                             handled = true;\n                                          }\n                                       } catch (FormatUnsupportedException e) {\n                                          // provider decided not to handle this format\n                                          handled = false;\n                                       }\n                                       if (!handled) {\n                                          // use internal translators or fail\n                                          entity = entityEncodingManager.internalInputTranslator(view.getEntityReference(), \n                                                format, inputStream, req);\n                                       }\n\n                                       if (entity == null) {\n                                          // FAILURE input could not be translated into an entity object\n                                          handled = false;\n                                          throw new EntityException(\"Unable to save entity (\"+view.getEntityReference()+\") with format (\"\n                                                +format+\"), translated entity object was null\", \n                                                view.toString(), HttpServletResponse.SC_BAD_REQUEST);\n                                       } else {\n                                          // setup all the headers for the response\n                                          if (EntityView.VIEW_NEW.equals(view.getViewKey())) {\n                                             String createdId = inputable.createEntity(view.getEntityReference(), entity, null);\n                                             view.setEntityReference( new EntityReference(prefix, createdId) ); // update the entity view\n                                             res.setHeader(EntityRequestHandler.HEADER_ENTITY_ID, createdId);\n                                             res.setStatus(HttpServletResponse.SC_CREATED);\n                                          } else if (EntityView.VIEW_EDIT.equals(view.getViewKey())) {\n                                             inputable.updateEntity(view.getEntityReference(), entity, null);\n                                             res.setStatus(HttpServletResponse.SC_NO_CONTENT);\n                                          } else {\n                                             // FAILURE not delete, edit, or new\n                                             throw new EntityException(\"Unable to handle entity input (\"+view.getEntityReference()+\"), \" +\n                                                   \"action was not understood: \" + view.getViewKey(), \n                                                   view.getEntityReference()+\"\", HttpServletResponse.SC_BAD_REQUEST);\n                                          }\n                                          // return the location of this updated or created entity (without any extension)\n                                          res.setHeader(EntityRequestHandler.HEADER_ENTITY_URL, view.getEntityURL() );\n                                          res.setHeader(EntityRequestHandler.HEADER_ENTITY_REFERENCE, view.getEntityReference().toString() );\n                                          handled = true;\n                                       }\n                                    } else {\n                                       // format type not handled\n                                       throw new FormatUnsupportedException(\"Inputable restriction for \" \n                                             + prefix + \" blocked handling this format (\"+format+\")\",\n                                             view.getEntityReference()+\"\", format);\n                                    }\n                                 }\n                              }\n                           }\n                        } catch (FormatUnsupportedException e) {\n                           // this format could not be handled internally so we will pass it to the access provider, nothing else to do here\n                           handled = false;\n                        } catch (IllegalArgumentException e) {\n                           // translate IAE into EE - bad request\n                           throw new EntityException(\"Internal Handler: IllegalArgumentException: Unable to handle \" + (output ? \"output\" : \"input\") + \" request for format  \"+view.getFormat()+\" for this path (\" \n                                 + path + \") for prefix (\" + prefix + \") for entity (\" + view.getEntityReference() + \"), request url (\" + view.getOriginalEntityUrl() + \"): \" + e.getMessage(),\n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_BAD_REQUEST);        \n                        } catch (IllegalStateException e) {\n                           // translate ISE into EE - internal server error\n                           throw new EntityException(\"Internal Handler: IllegalStateException: Unable to handle \" + (output ? \"output\" : \"input\") + \" request for format  \"+view.getFormat()+\" for this path (\" \n                                 + path + \") for prefix (\" + prefix + \") for entity (\" + view.getEntityReference() + \"), request url (\" + view.getOriginalEntityUrl() + \"): \" + e.getMessage(),\n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n                        }\n                     }\n\n                     if (! handled) {\n                        // default handling, send to the access provider if there is one (if none this will throw EntityException)\n                        try {\n                           handleAccessProvider(view, req, res);\n                        } catch (FormatUnsupportedException e) {\n                           throw new EntityException( \"AccessProvider: Format unsupported: Will not handle \" + (output ? \"output\" : \"input\") + \" request for format  \"+view.getFormat()+\" for this path (\" \n                                 + path + \") for prefix (\" + prefix + \") for entity (\" + view.getEntityReference() + \"), request url (\" + view.getOriginalEntityUrl() + \")\",\n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_METHOD_NOT_ALLOWED );\n                        }\n                     }\n                  }\n                  handledReference = view.getEntityReference().toString();\n                  requestStorage.setRequestValue(RequestStorage.ReservedKeys._requestEntityReference.name(), handledReference);\n\n                  // handle the after interceptor\n                  if (interceptor != null) {\n                     interceptor.after(view, req, res);\n                  }\n               } finally {\n                  // clear the request data no matter what happens\n                  requestStorage.reset();\n                  ((RequestGetterImpl) requestGetter).setRequest(null);\n                  ((RequestGetterImpl) requestGetter).setResponse(null);\n               }\n            }\n         }\n      }\n      return handledReference;\n   }","id":69924,"modified_method":"public String handleEntityAccess(HttpServletRequest req, HttpServletResponse res, String path) {\n      // get the path info if not set\n      if (path == null) {\n         path = req.getPathInfo();\n      }\n\n      String handledReference = null;\n\n      if (path == null || \"\".equals(path) || \"/\".equals(path)) {\n         // SPECIAL handling for empty path\n         res.setStatus(HttpServletResponse.SC_MOVED_PERMANENTLY);\n         try {\n            res.sendRedirect( res.encodeRedirectURL(DIRECT + SLASH_DESCRIBE) );\n         } catch (IOException e) {\n            // should never happen\n            throw new RuntimeException(\"Could not encode the redirect URL\");\n         }\n         // immediate exit from redirect\n         return \"/\";\n      } else {\n         // regular handling for direct URLs\n         if ( (SLASH_DESCRIBE).equals(path) \n               || path.startsWith(SLASH_DESCRIBE + EntityReference.PERIOD)) {\n            // SPECIAL handling for the describe all URL\n            String format = TemplateParseUtil.findExtension(path)[2];\n            if (format == null) {\n               format = Formats.HTML;\n            }\n            RequestUtils.setResponseEncoding(format, res);\n            String output = entityDescriptionManager.makeDescribeAll(format);\n            res.setContentLength(output.getBytes().length);\n            try {\n               res.getWriter().write(output);\n            } catch (IOException e) {\n               // should never happen\n               throw new RuntimeException(\"Failed to put output into the response writer: \" + e.getMessage(), e);\n            }\n            res.setStatus(HttpServletResponse.SC_OK);\n            handledReference = EntityView.SEPARATOR+\"\";\n         } else {\n            // STANDARD processing for the incoming view\n            EntityView view;\n            try {\n               view = entityBrokerManager.parseEntityURL(path);\n            } catch (IllegalArgumentException e) {\n               // FAILURE indicates we could not parse the reference\n               throw new EntityException(\"Could not parse entity path (\"+path+\"): \" + e.getMessage(), path, HttpServletResponse.SC_BAD_REQUEST);\n            }\n\n            if (view == null) {\n               // FAILURE no provider for this entity prefix\n               throw new EntityException( \"Could not parse the incoming path (\"+path+\") and no entity provider could be found to handle the prefix\", \n                     path, HttpServletResponse.SC_NOT_IMPLEMENTED );\n            } else if ( DESCRIBE.equals(view.getEntityReference().getId()) ) {\n               // SPECIAL handling for entity describe URLs\n               String format = TemplateParseUtil.findExtension(path)[2];\n               if (format == null) {\n                  format = Formats.HTML;\n               }\n               RequestUtils.setResponseEncoding(format, res);\n               String entityId = req.getParameter(\"_id\");\n               if (entityId == null || \"\".equals(entityId)) {\n                  entityId = FAKE_ID;\n               }\n               String output = entityDescriptionManager.makeDescribeEntity(view.getEntityReference().getPrefix(), entityId, format);\n               res.setContentLength(output.getBytes().length);\n               try {\n                  res.getWriter().write(output);\n               } catch (IOException e) {\n                  throw new RuntimeException(\"Failed to put output into the response writer: \" + e.getMessage(), e);\n               }\n               res.setStatus(HttpServletResponse.SC_OK);\n               handledReference = view.getEntityReference().getSpaceReference() + SLASH_DESCRIBE;\n\n            } else {\n               // STANDARD reference successfully parsed\n               String prefix = view.getEntityReference().getPrefix();\n\n               // check for redirect\n               Redirectable urlConfigurable = entityProviderManager.getProviderByPrefixAndCapability(prefix, Redirectable.class);\n               if (urlConfigurable != null) {\n                  // SPECIAL check for redirect\n                  String redirectURL = entityRedirectsManager.checkForTemplateMatch(urlConfigurable, path, req.getQueryString());\n                  if (redirectURL != null) {\n                     // SPECIAL handling for redirect\n                     if (\"\".equals(redirectURL)) {\n                        // do nothing but return an empty response\n                        res.setStatus(HttpServletResponse.SC_OK);\n                     } else {\n                        // do the redirect\n                        log.info(\"Entity Redirect: redirecting from (\"+path+\") to (\"+redirectURL+\")\");\n                        RequestUtils.handleURLRedirect(redirectURL, true, req, res);\n                     }\n                     return EntityView.SEPARATOR + prefix; // exit here for redirects\n                  }\n               }\n\n               // check for custom action\n               CustomAction customAction = entityActionsManager.getCustomAction(prefix, view.getPathSegment(1));\n               if (customAction == null) {\n                  customAction = entityActionsManager.getCustomAction(prefix, view.getPathSegment(2));\n               }\n               if (customAction == null) {\n                  // check to see if the entity exists\n                  if (! entityBrokerManager.entityExists(view.getEntityReference()) ) {\n                     // FAILURE invalid entity reference (entity does not exist)\n                     throw new EntityException( \"Attempted to access an entity URL path (\" + path + \") for an entity (\"\n                           + view.getEntityReference() + \") that does not exist\", \n                           view.getEntityReference()+\"\", HttpServletResponse.SC_NOT_FOUND );\n                  }\n               } else {\n                  // cleanup the entity reference, this has to be done because otherwise the custom action\n                  // on collections appears to be the id of an entity in the collection\n                  EntityReference cRef = view.getEntityReference();\n                  if (cRef.getId().equals(customAction.action)) {\n                     view.setEntityReference( new EntityReference(prefix, \"\") );\n                  }\n               }\n               res.setStatus(HttpServletResponse.SC_OK); // default - other things can switch this later on\n\n               // store format in attribute\n               req.setAttribute(\"entity-format\", view.getFormat());\n\n               // STANDARD initial processing complete\n               // wrap in try block so that request storage is always cleaned up\n               try {\n                  // store the current request and response\n                  ((RequestGetterImpl) requestGetter).setRequest(req);\n                  ((RequestGetterImpl) requestGetter).setResponse(res);\n                  // set the request variables\n                  requestStorage.setRequestValue(RequestStorage.ReservedKeys._requestEntityReference.name(), view.getEntityReference().toString());\n                  requestStorage.setRequestValue(RequestStorage.ReservedKeys._requestOrigin.name(), RequestStorage.RequestOrigin.REST.name());\n                  requestStorage.setRequestValue(RequestStorage.ReservedKeys._requestActive.name(), true);\n\n                  // handle the before interceptor\n                  RequestInterceptor interceptor = (RequestInterceptor) entityProviderManager.getProviderByPrefixAndCapability(prefix, RequestInterceptor.class);\n                  if (interceptor != null) {\n                     interceptor.before(view, req, res);\n                  }\n\n                  // check for provider handling of this request\n                  RequestHandler handler = (RequestHandler) entityProviderManager.getProviderByPrefixAndCapability(prefix, RequestHandler.class);\n                  if (handler != null) {\n                     // SPECIAL provider is handling this request\n                     handleClassLoaderAccess(handler, req, res, view);\n                  } else {\n                     // STANDARD processing of the entity request internally start here\n                     // try to handle the request internally if possible\n\n                     // identify the type of request (input or output) and the action (will be encoded in the viewKey)\n                     boolean output = RequestUtils.isRequestOutput(req, view);\n                     setResponseHeaders(view, res, null);\n\n                     boolean handled = false;\n                     // PROCESS CUSTOM ACTIONS\n                     ActionReturn actionReturn = null;\n                     if (customAction != null) {\n                        // SPECIAL handle the custom action\n                        ActionsExecutable actionProvider = entityProviderManager.getProviderByPrefixAndCapability(prefix, ActionsExecutable.class);\n                        if (actionProvider == null) {\n                           throw new EntityException( \"The provider for prefix (\"+prefix+\") cannot handle custom actions\", \n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_BAD_REQUEST );\n                        }\n                        // make sure this request is a valid type for this action\n                        if (customAction.viewKey != null \n                              && ! view.getViewKey().equals(customAction.viewKey)) {\n                           throw new EntityException( \"Cannot execute custom action (\"+customAction.action+\") for request method \" + req.getMethod()\n                                 + \", The custom action view key (\"+customAction.viewKey+\") must match the request view key (\"+view.getViewKey()+\")\", \n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_BAD_REQUEST );\n                        }\n                        try {\n                           actionReturn = entityActionsManager.handleCustomActionRequest(actionProvider, view, customAction.action, req, res);\n                        } catch (IllegalArgumentException e) {\n                           throw new EntityException( \"Cannot execute custom action (\"+customAction.action+\"): Illegal arguments: \" + e.getMessage(), \n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_BAD_REQUEST );\n                        } catch (UnsupportedOperationException e) {\n                           throw new EntityException( \"Cannot execute custom action (\"+customAction.action+\"): Invalid action: \" + e.getMessage(), \n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_METHOD_NOT_ALLOWED );\n                        }\n                        if (actionReturn == null \n                              || actionReturn.output != null) {\n                           // custom action processing complete\n                           res.setStatus(HttpServletResponse.SC_OK);\n                           handled = true;\n                        } else {\n                           // if the custom action returned entity data then we will encode it for output\n                           if (actionReturn.entitiesList == null\n                                 && actionReturn.entityData == null) {\n                              handled = true;\n                           } else {\n                              // there is entity data to return\n                              output = true;\n                              handled = false;\n                              // populate the entity data\n                              if (actionReturn.entitiesList != null) {\n                                 entityBrokerManager.populateEntityData(actionReturn.entitiesList);\n                              } else if (actionReturn.entityData != null) {\n                                 entityBrokerManager.populateEntityData( new EntityData[] {actionReturn.entityData} );\n                              }\n                           }\n                        }\n                     }\n\n                     if (!handled) {\n                        // INTERNAL PROCESSING OF REQUEST\n                        try {\n                           String format = view.getFormat();\n                           if (output) {\n                              // output request\n                              Outputable outputable = (Outputable) entityProviderManager.getProviderByPrefixAndCapability(prefix, Outputable.class);\n                              if (outputable != null) {\n                                 if (customAction != null) {\n                                    // override format from the custom action\n                                    if (actionReturn.format != null) {\n                                       format = actionReturn.format;\n                                    }\n                                 }\n                                 String[] outputFormats = outputable.getHandledOutputFormats();\n                                 if (outputFormats == null || ReflectUtil.contains(outputFormats, format) ) {\n                                    // we are handling this type of format for this entity\n                                    RequestUtils.setResponseEncoding(format, res);\n\n                                    // get the entities to output\n                                    List<EntityData> entities = null;\n                                    if (customAction != null) {\n                                       // get entities from a custom action\n                                       entities = actionReturn.entitiesList;\n                                       if (entities == null \n                                             && actionReturn.entityData != null) {\n                                          ArrayList<EntityData> eList = new ArrayList<EntityData>();\n                                          EntityData ed = actionReturn.entityData;\n                                          eList.add( ed );\n                                          entities = eList;\n                                          // this was a single object return so it should be encoded as such, thus we will recode the correct reference into the view\n                                          EntityReference edRef = ed.getEntityReference();\n                                          if (edRef.getId() == null) {\n                                             edRef = new EntityReference(edRef.getPrefix(), customAction.action);\n                                          }\n                                          view.setEntityReference( edRef );\n                                          view.setViewKey(EntityView.VIEW_SHOW);\n                                       }\n                                    } else {\n                                       // get from a search\n                                       Search search = RequestUtils.makeSearchFromRequest(req);\n                                       entities = entityBrokerManager.getEntitiesData(view.getEntityReference(), search, null);\n                                    }\n                                    // set the modifed header (use the sole entity in the list if there is one only)\n                                    setLastModifiedHeaders(res, (entities != null && entities.size()==1 ? entities.get(0) : null), System.currentTimeMillis());\n\n                                    if (EntityView.Method.HEAD.name().equals(view.getMethod())) {\n                                       // HEADER only\n                                       res.setStatus(HttpServletResponse.SC_NO_CONTENT);\n                                    } else {\n                                       // GET\n                                       OutputStream outputStream = null;\n                                       try {\n                                          outputStream = res.getOutputStream();\n                                       } catch (IOException e) {\n                                          throw new RuntimeException(\"Failed to get output stream from response: \" + view.getEntityReference(), e);\n                                       }\n\n                                       /* try to use the provider formatter if one available,\n                                        * if it decided not to handle it or none is available then control passes to internal\n                                        */\n                                       try {\n                                          OutputFormattable formattable = (OutputFormattable) entityProviderManager.getProviderByPrefixAndCapability(prefix, OutputFormattable.class);\n                                          if (formattable != null) {\n                                             // use provider's formatter\n                                             formattable.formatOutput(view.getEntityReference(), format, entities, null, outputStream);\n                                             handled = true;\n                                          }\n                                       } catch (FormatUnsupportedException e) {\n                                          // provider decided not to handle this format\n                                          handled = false;\n                                       }\n                                       if (!handled) {\n                                          // handle internally or fail\n                                          entityEncodingManager.internalOutputFormatter(view.getEntityReference(), format, entities, null, outputStream, view);\n                                       }\n                                       handled = true;\n                                       res.setStatus(HttpServletResponse.SC_OK);\n                                    }\n                                 } else {\n                                    // format type not handled\n                                    throw new FormatUnsupportedException(\"Outputable restriction for \" \n                                          + prefix + \" blocked handling this format (\"+format+\")\",\n                                          view.getEntityReference()+\"\", format);\n                                 }\n                              }\n                           } else {\n                              // input request\n                              if (EntityView.VIEW_DELETE.equals(view.getViewKey())) {\n                                 // delete request\n                                 Deleteable deleteable = (Deleteable) entityProviderManager.getProviderByPrefixAndCapability(prefix, Deleteable.class);\n                                 if (deleteable != null) {\n                                    deleteable.deleteEntity(view.getEntityReference(), null);\n                                    res.setStatus(HttpServletResponse.SC_NO_CONTENT);\n                                    handled = true;\n                                 }\n                              } else {\n                                 // save request\n                                 Inputable inputable = (Inputable) entityProviderManager.getProviderByPrefixAndCapability(prefix, Inputable.class);\n                                 if (inputable != null) {\n                                    String[] inputFormats = inputable.getHandledInputFormats();\n                                    if (inputFormats == null || ReflectUtil.contains(inputFormats, format) ) {\n                                       // we are handling this type of format for this entity\n                                       Object entity = null;\n                                       InputStream inputStream = null;\n                                       try {\n                                          inputStream = req.getInputStream();\n                                       } catch (IOException e) {\n                                          throw new RuntimeException(\"Failed to get output stream from response: \" + view.getEntityReference(), e);\n                                       }\n\n                                       /* try to use the provider translator if one available,\n                                        * if it decided not to handle it or none is available then control passes to internal\n                                        */\n                                       try {\n                                          InputTranslatable translatable = (InputTranslatable) entityProviderManager.getProviderByPrefixAndCapability(prefix, InputTranslatable.class);\n                                          if (translatable != null) {\n                                             // use provider's translator\n                                             entity = translatable.translateFormattedData(view.getEntityReference(), \n                                                   format, inputStream, null);\n                                             handled = true;\n                                          }\n                                       } catch (FormatUnsupportedException e) {\n                                          // provider decided not to handle this format\n                                          handled = false;\n                                       }\n                                       if (!handled) {\n                                          // use internal translators or fail\n                                          entity = entityEncodingManager.internalInputTranslator(view.getEntityReference(), \n                                                format, inputStream, req);\n                                       }\n\n                                       if (entity == null) {\n                                          // FAILURE input could not be translated into an entity object\n                                          handled = false;\n                                          throw new EntityException(\"Unable to save entity (\"+view.getEntityReference()+\") with format (\"\n                                                +format+\"), translated entity object was null\", \n                                                view.toString(), HttpServletResponse.SC_BAD_REQUEST);\n                                       } else {\n                                          // setup all the headers for the response\n                                          if (EntityView.VIEW_NEW.equals(view.getViewKey())) {\n                                             String createdId = inputable.createEntity(view.getEntityReference(), entity, null);\n                                             view.setEntityReference( new EntityReference(prefix, createdId) ); // update the entity view\n                                             res.setHeader(EntityRequestHandler.HEADER_ENTITY_ID, createdId);\n                                             res.setStatus(HttpServletResponse.SC_CREATED);\n                                          } else if (EntityView.VIEW_EDIT.equals(view.getViewKey())) {\n                                             inputable.updateEntity(view.getEntityReference(), entity, null);\n                                             res.setStatus(HttpServletResponse.SC_NO_CONTENT);\n                                          } else {\n                                             // FAILURE not delete, edit, or new\n                                             throw new EntityException(\"Unable to handle entity input (\"+view.getEntityReference()+\"), \" +\n                                                   \"action was not understood: \" + view.getViewKey(), \n                                                   view.getEntityReference()+\"\", HttpServletResponse.SC_BAD_REQUEST);\n                                          }\n                                          // return the location of this updated or created entity (without any extension)\n                                          res.setHeader(EntityRequestHandler.HEADER_ENTITY_URL, view.getEntityURL() );\n                                          res.setHeader(EntityRequestHandler.HEADER_ENTITY_REFERENCE, view.getEntityReference().toString() );\n                                          handled = true;\n                                       }\n                                    } else {\n                                       // format type not handled\n                                       throw new FormatUnsupportedException(\"Inputable restriction for \" \n                                             + prefix + \" blocked handling this format (\"+format+\")\",\n                                             view.getEntityReference()+\"\", format);\n                                    }\n                                 }\n                              }\n                           }\n                        } catch (FormatUnsupportedException e) {\n                           // this format could not be handled internally so we will pass it to the access provider, nothing else to do here\n                           handled = false;\n                        } catch (EntityEncodingException e) {\n                           // translate EEE into EE - internal server error\n                           throw new EntityException(\"EntityEncodingException: Unable to handle \" + (output ? \"output\" : \"input\") + \" request for format  \"+view.getFormat()+\" for this path (\" \n                                 + path + \") for prefix (\" + prefix + \") for entity (\" + view.getEntityReference() + \"), request url (\" + view.getOriginalEntityUrl() + \"): \" + e.getMessage(),\n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_INTERNAL_SERVER_ERROR);        \n                        } catch (IllegalArgumentException e) {\n                           // translate IAE into EE - bad request\n                           throw new EntityException(\"IllegalArgumentException: Unable to handle \" + (output ? \"output\" : \"input\") + \" request for format  \"+view.getFormat()+\" for this path (\" \n                                 + path + \") for prefix (\" + prefix + \") for entity (\" + view.getEntityReference() + \"), request url (\" + view.getOriginalEntityUrl() + \"): \" + e.getMessage(),\n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_BAD_REQUEST);        \n                        } catch (IllegalStateException e) {\n                           // translate ISE into EE - internal server error\n                           throw new EntityException(\"IllegalStateException: Unable to handle \" + (output ? \"output\" : \"input\") + \" request for format  \"+view.getFormat()+\" for this path (\" \n                                 + path + \") for prefix (\" + prefix + \") for entity (\" + view.getEntityReference() + \"), request url (\" + view.getOriginalEntityUrl() + \"): \" + e.getMessage(),\n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n                        }\n                     }\n\n                     if (! handled) {\n                        // default handling, send to the access provider if there is one (if none this will throw EntityException)\n                        try {\n                           handleAccessProvider(view, req, res);\n                        } catch (FormatUnsupportedException e) {\n                           throw new EntityException( \"AccessProvider: Format unsupported: Will not handle \" + (output ? \"output\" : \"input\") + \" request for format  \"+view.getFormat()+\" for this path (\" \n                                 + path + \") for prefix (\" + prefix + \") for entity (\" + view.getEntityReference() + \"), request url (\" + view.getOriginalEntityUrl() + \")\",\n                                 view.getEntityReference()+\"\", HttpServletResponse.SC_METHOD_NOT_ALLOWED );\n                        }\n                     }\n                  }\n                  handledReference = view.getEntityReference().toString();\n                  requestStorage.setRequestValue(RequestStorage.ReservedKeys._requestEntityReference.name(), handledReference);\n\n                  // handle the after interceptor\n                  if (interceptor != null) {\n                     interceptor.after(view, req, res);\n                  }\n               } finally {\n                  // clear the request data no matter what happens\n                  requestStorage.reset();\n                  ((RequestGetterImpl) requestGetter).setRequest(null);\n                  ((RequestGetterImpl) requestGetter).setResponse(null);\n               }\n            }\n         }\n      }\n      return handledReference;\n   }","commit_id":"61b72578c15111480030734222e43ce2211a9a1f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n    * Test method for {@link org.sakaiproject.entitybroker.impl.EntityHandlerImpl#handleEntityAccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)}.\n    */\n   public void testHandleEntityAccess() {\n      MockEBHttpServletRequest req = null;\n      MockHttpServletResponse res = null;\n\n      // test valid entity\n      req = new MockEBHttpServletRequest(\"GET\", TestData.REF1);\n      res = new MockHttpServletResponse();\n\n      entityHandler.handleEntityAccess(req, res, null);\n      assertEquals(HttpServletResponse.SC_OK, res.getStatus());\n\n      // test invalid prefix\n      req = new MockEBHttpServletRequest(\"GET\", \"/fake/thing\");\n      res = new MockHttpServletResponse();\n\n      try {\n         entityHandler.handleEntityAccess(req, res, null);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(HttpServletResponse.SC_NOT_IMPLEMENTED, e.responseCode);\n      }\n\n      // test invalid id\n      req = new MockEBHttpServletRequest(\"GET\", TestData.REF1_INVALID);\n      res = new MockHttpServletResponse();\n\n      try {\n         entityHandler.handleEntityAccess(req, res, null);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(TestData.REF1_INVALID, e.entityReference);\n         assertEquals(HttpServletResponse.SC_NOT_FOUND, e.responseCode);\n      }\n\n      // test invalid path format\n      req = new MockEBHttpServletRequest(\"GET\", \"xxxxxxxxxxxxxxxx\");\n      res = new MockHttpServletResponse();\n\n      try {\n         entityHandler.handleEntityAccess(req, res, null);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(HttpServletResponse.SC_BAD_REQUEST, e.responseCode);\n      }\n\n      // XML test valid resolveable entity\n      req = new MockEBHttpServletRequest(\"GET\", TestData.REF4 + \".\" + Formats.XML);\n      res = new MockHttpServletResponse();\n      entityHandler.handleEntityAccess(req, res, null);\n      assertEquals(HttpServletResponse.SC_OK, res.getStatus());\n      assertNotNull(res.getOutputStream());\n      try {\n         String xml = res.getContentAsString();\n         assertNotNull(xml);\n         assertTrue(xml.length() > 20);\n         assertTrue(xml.contains(TestData.PREFIX4));\n         assertTrue(xml.contains(\"<id>4-one<\/id>\"));\n         assertTrue(xml.contains(EntityXStream.SAKAI_ENTITY));\n      } catch (UnsupportedEncodingException e) {\n         fail(\"failure trying to get string content\");\n      }\n\n      // JSON test valid resolveable entity\n      req = new MockEBHttpServletRequest(\"GET\", TestData.REF4 + \".\" + Formats.JSON);\n      res = new MockHttpServletResponse();\n      entityHandler.handleEntityAccess(req, res, null);\n      assertEquals(HttpServletResponse.SC_OK, res.getStatus());\n      assertNotNull(res.getOutputStream());\n      try {\n         String json = res.getContentAsString();\n         assertNotNull(json);\n         assertTrue(json.length() > 20);\n         assertTrue(json.contains(TestData.PREFIX4));\n         assertTrue(json.contains(\"\\\"id\\\":\\\"4-one\\\",\"));\n         assertTrue(json.contains(EntityXStream.SAKAI_ENTITY));\n      } catch (UnsupportedEncodingException e) {\n         fail(\"failure trying to get string content\");\n      }\n\n      // HTML test valid resolveable entity\n      req = new MockEBHttpServletRequest(\"GET\", TestData.REF4 + \".\" + Formats.HTML);\n      res = new MockHttpServletResponse();\n      entityHandler.handleEntityAccess(req, res, null);\n      assertEquals(HttpServletResponse.SC_OK, res.getStatus());\n      assertNotNull(res.getOutputStream());\n      try {\n         String html = res.getContentAsString();\n         assertNotNull(html);\n         assertTrue(html.length() > 20);\n         assertTrue(html.contains(TestData.PREFIX4));\n      } catch (UnsupportedEncodingException e) {\n         fail(\"failure trying to get string content\");\n      }\n\n      // types that cannot handle the return requested\n      req = new MockEBHttpServletRequest(\"GET\", TestData.REF4 + \".xxxx\");\n      res = new MockHttpServletResponse();\n      try {\n         entityHandler.handleEntityAccess(req, res, null);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(HttpServletResponse.SC_METHOD_NOT_ALLOWED, e.responseCode);\n      }\n   }","id":69925,"modified_method":"/**\n    * Test method for {@link org.sakaiproject.entitybroker.impl.EntityHandlerImpl#handleEntityAccess(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, java.lang.String)}.\n    */\n   public void testHandleEntityAccess() {\n      MockEBHttpServletRequest req = null;\n      MockHttpServletResponse res = null;\n\n      // test valid entity (with access provider)\n      req = new MockEBHttpServletRequest(\"GET\", TestData.REF8);\n      res = new MockHttpServletResponse();\n\n      entityHandler.handleEntityAccess(req, res, null);\n      assertEquals(HttpServletResponse.SC_OK, res.getStatus());\n\n      // test invalid prefix\n      req = new MockEBHttpServletRequest(\"GET\", \"/fake/thing\");\n      res = new MockHttpServletResponse();\n\n      try {\n         entityHandler.handleEntityAccess(req, res, null);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(HttpServletResponse.SC_NOT_IMPLEMENTED, e.responseCode);\n      }\n\n      // test invalid id\n      req = new MockEBHttpServletRequest(\"GET\", TestData.REF1_INVALID);\n      res = new MockHttpServletResponse();\n\n      try {\n         entityHandler.handleEntityAccess(req, res, null);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(TestData.REF1_INVALID, e.entityReference);\n         assertEquals(HttpServletResponse.SC_NOT_FOUND, e.responseCode);\n      }\n\n      // test invalid path format\n      req = new MockEBHttpServletRequest(\"GET\", \"xxxxxxxxxxxxxxxx\");\n      res = new MockHttpServletResponse();\n\n      try {\n         entityHandler.handleEntityAccess(req, res, null);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(HttpServletResponse.SC_BAD_REQUEST, e.responseCode);\n      }\n\n      // XML test valid resolveable entity\n      req = new MockEBHttpServletRequest(\"GET\", TestData.REF4 + \".\" + Formats.XML);\n      res = new MockHttpServletResponse();\n      entityHandler.handleEntityAccess(req, res, null);\n      assertEquals(HttpServletResponse.SC_OK, res.getStatus());\n      assertNotNull(res.getOutputStream());\n      try {\n         String xml = res.getContentAsString();\n         assertNotNull(xml);\n         assertTrue(xml.length() > 20);\n         assertTrue(xml.contains(TestData.PREFIX4));\n         assertTrue(xml.contains(\"<id>4-one<\/id>\"));\n         assertTrue(xml.contains(EntityXStream.SAKAI_ENTITY));\n      } catch (UnsupportedEncodingException e) {\n         fail(\"failure trying to get string content\");\n      }\n\n      // JSON test valid resolveable entity\n      req = new MockEBHttpServletRequest(\"GET\", TestData.REF4 + \".\" + Formats.JSON);\n      res = new MockHttpServletResponse();\n      entityHandler.handleEntityAccess(req, res, null);\n      assertEquals(HttpServletResponse.SC_OK, res.getStatus());\n      assertNotNull(res.getOutputStream());\n      try {\n         String json = res.getContentAsString();\n         assertNotNull(json);\n         assertTrue(json.length() > 20);\n         assertTrue(json.contains(TestData.PREFIX4));\n         assertTrue(json.contains(\"\\\"id\\\":\\\"4-one\\\",\"));\n         assertTrue(json.contains(EntityXStream.SAKAI_ENTITY));\n      } catch (UnsupportedEncodingException e) {\n         fail(\"failure trying to get string content\");\n      }\n\n      // HTML test valid resolveable entity\n/** TODO Need internal HTML first\n      req = new MockEBHttpServletRequest(\"GET\", TestData.REF4 + \".\" + Formats.HTML);\n      res = new MockHttpServletResponse();\n      entityHandler.handleEntityAccess(req, res, null);\n      assertEquals(HttpServletResponse.SC_OK, res.getStatus());\n      assertNotNull(res.getOutputStream());\n      try {\n         String html = res.getContentAsString();\n         assertNotNull(html);\n         assertTrue(html.length() > 20);\n         assertTrue(html.contains(TestData.PREFIX4));\n      } catch (UnsupportedEncodingException e) {\n         fail(\"failure trying to get string content\");\n      }\n**/\n\n      // types that cannot handle the return requested\n      req = new MockEBHttpServletRequest(\"GET\", TestData.REF4 + \".xxxx\");\n      res = new MockHttpServletResponse();\n      try {\n         entityHandler.handleEntityAccess(req, res, null);\n         fail(\"Should have thrown exception\");\n      } catch (EntityException e) {\n         assertNotNull(e.getMessage());\n         assertEquals(HttpServletResponse.SC_METHOD_NOT_ALLOWED, e.responseCode);\n      }\n   }","commit_id":"61b72578c15111480030734222e43ce2211a9a1f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public EntityViewAccessProvider getProvider(String prefix) {\n      if (invalidPrefixes.contains(prefix)) {         \n         return null;\n      }\n      return new EntityViewAccessProviderMock();\n   }","id":69926,"modified_method":"public EntityViewAccessProvider getProvider(String prefix) {\n      if (validPrefixes.contains(prefix)) {         \n         return new EntityViewAccessProviderMock(prefix);\n      }\n      return null;\n   }","commit_id":"61b72578c15111480030734222e43ce2211a9a1f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void handleAccess(EntityView view, HttpServletRequest req, HttpServletResponse res) {\n      String format = view.getFormat();\n      if (format.equals(Formats.HTML) || format.equals(Formats.RSS)) {\n         // Okey dokey, do nothing but say all is well\n         try {\n            res.getWriter().print(\"EntityViewAccessProviderMock\");\n         } catch (IOException e) {\n            // nothing to do here\n         }\n         ((MockHttpServletResponse) res).setStatus(HttpServletResponse.SC_OK);\n      } else {\n         throw new FormatUnsupportedException(\"No support for format: \" + format, view.getEntityReference()+\"\", format);\n      }\n   }","id":69927,"modified_method":"public void handleAccess(EntityView view, HttpServletRequest req, HttpServletResponse res) {\n      String format = view.getFormat();\n      if (format.equals(Formats.HTML) || format.equals(Formats.RSS)) {\n         // Okey dokey, do nothing but say all is well\n         try {\n            res.getWriter().print(prefix + \": EntityViewAccessProviderMock\");\n         } catch (IOException e) {\n            // nothing to do here\n         }\n         ((MockHttpServletResponse) res).setStatus(HttpServletResponse.SC_OK);\n      } else {\n         throw new FormatUnsupportedException(\"No support for format: \" + format, view.getEntityReference()+\"\", format);\n      }\n   }","commit_id":"61b72578c15111480030734222e43ce2211a9a1f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public HttpServletAccessProvider getProvider(String prefix) {\n      if (invalidPrefixes.contains(prefix)) {         \n         return null;\n      }\n      return new HttpServletAccessProviderMock();\n   }","id":69928,"modified_method":"public HttpServletAccessProvider getProvider(String prefix) {\n      if (validPrefixes.contains(prefix)) {         \n         return new HttpServletAccessProviderMock(prefix);\n      }\n      return null;\n   }","commit_id":"61b72578c15111480030734222e43ce2211a9a1f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void handleAccess(HttpServletRequest req, HttpServletResponse res, EntityReference ref) {\n      // Okey dokey, do nothing but say all is well\n      try {\n         res.getWriter().print(\"HttpServletAccessProviderMock\");\n      } catch (IOException e) {\n         // nothing to do here\n      }\n      ((MockHttpServletResponse) res).setStatus(HttpServletResponse.SC_OK);\n   }","id":69929,"modified_method":"public void handleAccess(HttpServletRequest req, HttpServletResponse res, EntityReference ref) {\n      // Okey dokey, do nothing but say all is well\n      try {\n         res.getWriter().print(prefix + \": HttpServletAccessProviderMock\");\n      } catch (IOException e) {\n         // nothing to do here\n      }\n      ((MockHttpServletResponse) res).setStatus(HttpServletResponse.SC_OK);\n   }","commit_id":"61b72578c15111480030734222e43ce2211a9a1f","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void marshal(Exchange exchange, Object graph, OutputStream stream) throws IOException {\n        try {            \n            // must create a new instance of marshaller as its not thread safe\n            Marshaller marshaller = getContext().createMarshaller();\n            if (isPrettyPrint()) {\n                marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);\n            } \n            // exchange take precedence over encoding option\n            String charset = exchange.getProperty(Exchange.CHARSET_NAME, String.class);\n            if (charset == null) {\n                charset = encoding;\n            }\n            if (charset != null) {\n                marshaller.setProperty(Marshaller.JAXB_ENCODING, charset);\n            }\n            if (isFragment()) {\n                marshaller.setProperty(Marshaller.JAXB_FRAGMENT, Boolean.TRUE);\n            }\n            if (namespacePrefixMapper != null) {\n                marshaller.setProperty(namespacePrefixMapper.getRegistrationKey(), namespacePrefixMapper);\n            }\n\n            marshal(exchange, graph, stream, marshaller);\n\n        } catch (JAXBException e) {\n            throw new IOException(e);\n        } catch (XMLStreamException e) {\n            throw new IOException(e);\n        }\n    }","id":69930,"modified_method":"public void marshal(Exchange exchange, Object graph, OutputStream stream) throws IOException, SAXException {\n        try {            \n            // must create a new instance of marshaller as its not thread safe\n            Marshaller marshaller = createMarshaller();\n            \n            if (isPrettyPrint()) {\n                marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);\n            } \n            // exchange take precedence over encoding option\n            String charset = exchange.getProperty(Exchange.CHARSET_NAME, String.class);\n            if (charset == null) {\n                charset = encoding;\n            }\n            if (charset != null) {\n                marshaller.setProperty(Marshaller.JAXB_ENCODING, charset);\n            }\n            if (isFragment()) {\n                marshaller.setProperty(Marshaller.JAXB_FRAGMENT, Boolean.TRUE);\n            }\n            if (namespacePrefixMapper != null) {\n                marshaller.setProperty(namespacePrefixMapper.getRegistrationKey(), namespacePrefixMapper);\n            }\n\n            marshal(exchange, graph, stream, marshaller);\n\n        } catch (JAXBException e) {\n            throw new IOException(e);\n        } catch (XMLStreamException e) {\n            throw new IOException(e);\n        }\n    }","commit_id":"75c4acae60a99477aeef9298c4638c6e58d77c79","url":"https://github.com/apache/camel"},{"original_method":"protected Unmarshaller createUnmarshaller() throws JAXBException {\n        return getContext().createUnmarshaller();\n    }","id":69931,"modified_method":"protected Unmarshaller createUnmarshaller() throws JAXBException, SAXException, FileNotFoundException, MalformedURLException {\n        Unmarshaller unmarshaller = getContext().createUnmarshaller();\n        if (schema != null) {\n            Schema newSchema = SCHEMA_FACTORY.newSchema(getSources());\n            unmarshaller.setSchema(newSchema);\n            unmarshaller.setEventHandler(new ValidationEventHandler() {\n                public boolean handleEvent(ValidationEvent event) {\n                    // stop unmarshalling if the event is an ERROR or FATAL ERROR\n                    return event.getSeverity() == 0;\n                }\n            });\n        }\n        return unmarshaller;\n    }","commit_id":"75c4acae60a99477aeef9298c4638c6e58d77c79","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected void configureDataFormat(DataFormat dataFormat) {\n        Boolean answer = ObjectHelper.toBoolean(getPrettyPrint());\n        if (answer != null && !answer) {\n            setProperty(dataFormat, \"prettyPrint\", Boolean.FALSE);\n        } else { // the default value is true\n            setProperty(dataFormat, \"prettyPrint\", Boolean.TRUE);\n        }\n        answer = ObjectHelper.toBoolean(getIgnoreJAXBElement());\n        if (answer != null && !answer) {\n            setProperty(dataFormat, \"ignoreJAXBElement\", Boolean.FALSE);\n        } else { // the default value is true\n            setProperty(dataFormat, \"ignoreJAXBElement\", Boolean.TRUE);\n        }\n        answer = ObjectHelper.toBoolean(getFilterNonXmlChars());\n        if (answer != null && answer) {\n            setProperty(dataFormat, \"filterNonXmlChars\", Boolean.TRUE);\n        } else { // the default value is false\n            setProperty(dataFormat, \"filterNonXmlChars\", Boolean.FALSE);\n        }\n        answer = ObjectHelper.toBoolean(getFragment());\n        if (answer != null && answer) {\n            setProperty(dataFormat, \"fragment\", Boolean.TRUE);\n        } else { // the default value is false\n            setProperty(dataFormat, \"fragment\", Boolean.FALSE);\n        }\n        if (partClass != null) {\n            setProperty(dataFormat, \"partClass\", partClass);\n        }\n        if (partNamespace != null) {\n            setProperty(dataFormat, \"partNamespace\", QName.valueOf(partNamespace));\n        }\n        if (encoding != null) {\n            setProperty(dataFormat, \"encoding\", encoding);\n        }\n        if (namespacePrefixRef != null) {\n            setProperty(dataFormat, \"namespacePrefixRef\", namespacePrefixRef);\n        }\n        setProperty(dataFormat, \"contextPath\", contextPath);\n    }","id":69932,"modified_method":"@Override\n    protected void configureDataFormat(DataFormat dataFormat) {\n        Boolean answer = ObjectHelper.toBoolean(getPrettyPrint());\n        if (answer != null && !answer) {\n            setProperty(dataFormat, \"prettyPrint\", Boolean.FALSE);\n        } else { // the default value is true\n            setProperty(dataFormat, \"prettyPrint\", Boolean.TRUE);\n        }\n        answer = ObjectHelper.toBoolean(getIgnoreJAXBElement());\n        if (answer != null && !answer) {\n            setProperty(dataFormat, \"ignoreJAXBElement\", Boolean.FALSE);\n        } else { // the default value is true\n            setProperty(dataFormat, \"ignoreJAXBElement\", Boolean.TRUE);\n        }\n        answer = ObjectHelper.toBoolean(getFilterNonXmlChars());\n        if (answer != null && answer) {\n            setProperty(dataFormat, \"filterNonXmlChars\", Boolean.TRUE);\n        } else { // the default value is false\n            setProperty(dataFormat, \"filterNonXmlChars\", Boolean.FALSE);\n        }\n        answer = ObjectHelper.toBoolean(getFragment());\n        if (answer != null && answer) {\n            setProperty(dataFormat, \"fragment\", Boolean.TRUE);\n        } else { // the default value is false\n            setProperty(dataFormat, \"fragment\", Boolean.FALSE);\n        }\n        if (partClass != null) {\n            setProperty(dataFormat, \"partClass\", partClass);\n        }\n        if (partNamespace != null) {\n            setProperty(dataFormat, \"partNamespace\", QName.valueOf(partNamespace));\n        }\n        if (encoding != null) {\n            setProperty(dataFormat, \"encoding\", encoding);\n        }\n        if (namespacePrefixRef != null) {\n            setProperty(dataFormat, \"namespacePrefixRef\", namespacePrefixRef);\n        }\n        setProperty(dataFormat, \"contextPath\", contextPath);\n        if (schema != null) {\n            setProperty(dataFormat, \"schema\", schema);\n        }\n    }","commit_id":"75c4acae60a99477aeef9298c4638c6e58d77c79","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testUnmarshallConcurrent() throws Exception {\n        int counter = 10000;\n        final String payload = \"<purchaseOrder name='Wine' amount='123.45' price='2.22'/>\";\n        final CountDownLatch latch = new CountDownLatch(counter);\n        template.setDefaultEndpointUri(\"direct:unmarshal\");\n\n        ExecutorService pool = Executors.newFixedThreadPool(20);\n        //long start = System.currentTimeMillis();\n        for (int i = 0; i < counter; i++) {\n            pool.execute(new Runnable() {\n                public void run() {\n                    template.sendBody(payload);\n                    latch.countDown();\n                }\n            });\n        }\n\n        // should finish on fast machines in less than 3 seconds\n        assertTrue(latch.await(10, TimeUnit.SECONDS));\n        //long end = System.currentTimeMillis();\n        //System.out.println(\"took \" + (end - start) + \"ms\");\n    }","id":69933,"modified_method":"@Test\n    public void testUnmarshallConcurrent() throws Exception {\n        int counter = 10000;\n        //final String payload = \"<purchaseOrder name='Wine' amount='123.45' price='2.22'/>\";\n        final String payload = createPayload();\n        //System.out.println(\"Length: \" + payload.length());\n        final CountDownLatch latch = new CountDownLatch(counter);\n        template.setDefaultEndpointUri(\"direct:unmarshal\");\n\n        ExecutorService pool = Executors.newFixedThreadPool(20);\n        //long start = System.currentTimeMillis();\n        for (int i = 0; i < counter; i++) {\n            pool.execute(new Runnable() {\n                public void run() {\n                    template.sendBody(payload);\n                    latch.countDown();\n                }\n            });\n        }\n\n        // should finish on fast machines in less than 3 seconds\n        assertTrue(latch.await(15, TimeUnit.SECONDS));\n        //long end = System.currentTimeMillis();\n        //System.out.println(\"took \" + (end - start) + \"ms\");\n    }","commit_id":"6bd3301ba1a5a63c244d33449bdccf6115f1755e","url":"https://github.com/apache/camel"},{"original_method":"protected Object unmarshal(Unmarshaller unmarshaller, Exchange exchange, Object value) throws JAXBException, UnsupportedEncodingException, XMLStreamException {\n        unmarshallerLock.lock();\n        try {\n            if (value instanceof XMLStreamReader) {\n                XMLStreamReader xmlReader = (XMLStreamReader) value;\n                return unmarshaller.unmarshal(xmlReader);\n            } else if (value instanceof InputStream) {\n                if (needFiltering(exchange)) {\n                    return unmarshaller.unmarshal(new NonXmlFilterReader(new InputStreamReader((InputStream)value, IOHelper.getCharsetName(exchange))));\n                }\n                return unmarshaller.unmarshal((InputStream)value);\n            } else if (value instanceof Reader) {\n                Reader reader = (Reader)value;\n                if (needFiltering(exchange)) {\n                    if (!(value instanceof NonXmlFilterReader)) {\n                        reader = new NonXmlFilterReader((Reader)value);\n                    }\n                }\n                return unmarshaller.unmarshal(reader);\n            } else if (value instanceof Source) {\n                return unmarshaller.unmarshal((Source)value);\n            }\n        } finally {\n            unmarshallerLock.unlock();\n            if (value instanceof Closeable) {\n                IOHelper.close((Closeable)value, \"Unmarshalling\", LOG);\n            }\n        }\n        return null;\n    }","id":69934,"modified_method":"protected Object unmarshal(Unmarshaller unmarshaller, Exchange exchange, Object value) throws JAXBException, UnsupportedEncodingException, XMLStreamException {\n        try {\n            XMLStreamReader xmlReader = null;\n            if (value instanceof XMLStreamReader) {\n                xmlReader = (XMLStreamReader) value;\n            } else if (value instanceof InputStream) {\n                if (needFiltering(exchange)) {\n                    xmlReader = staxConverter.createXMLStreamReader(new NonXmlFilterReader(new InputStreamReader((InputStream)value, IOHelper.getCharsetName(exchange))));\n                } else {\n                    xmlReader = staxConverter.createXMLStreamReader((InputStream)value, exchange);\n                }\n            } else if (value instanceof Reader) {\n                Reader reader = (Reader)value;\n                if (needFiltering(exchange)) {\n                    if (!(value instanceof NonXmlFilterReader)) {\n                        reader = new NonXmlFilterReader((Reader)value);\n                    }\n                }\n                xmlReader = staxConverter.createXMLStreamReader(reader);\n            } else if (value instanceof Source) {\n                xmlReader = staxConverter.createXMLStreamReader((Source)value);\n            } else {\n                throw new IllegalArgumentException(\"Cannot convert from \" + value.getClass());\n            }\n            return unmarshaller.unmarshal(xmlReader);\n        } finally {\n            if (value instanceof Closeable) {\n                IOHelper.close((Closeable)value, \"Unmarshalling\", LOG);\n            }\n        }\n    }","commit_id":"6bd3301ba1a5a63c244d33449bdccf6115f1755e","url":"https://github.com/apache/camel"},{"original_method":"protected <T> T marshall(Class<T> type, Exchange exchange, Object value) throws JAXBException, XMLStreamException, FactoryConfigurationError {\n        LOG.trace(\"Marshal from value {} to type {}\", value, type);\n\n        T answer = null;\n        if (parentTypeConverter != null) {\n            // lets convert the object to a JAXB source and try convert that to\n            // the required source\n            JAXBContext context = createContext(value.getClass());\n            // must create a new instance of marshaller as its not thread safe\n            Marshaller marshaller = context.createMarshaller();\n            Writer buffer = new StringWriter();\n            if (isPrettyPrint()) {\n                marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);\n            }\n            if (exchange != null && exchange.getProperty(Exchange.CHARSET_NAME, String.class) != null) {\n                marshaller.setProperty(Marshaller.JAXB_ENCODING, exchange.getProperty(Exchange.CHARSET_NAME, String.class));\n            }\n            if (needFiltering(exchange)) {\n                XMLStreamWriter writer = getOutputFactory().createXMLStreamWriter(buffer);\n                FilteringXmlStreamWriter filteringWriter = new FilteringXmlStreamWriter(writer);\n                marshaller.marshal(value, filteringWriter);\n            } else {\n                marshaller.marshal(value, buffer);\n            }\n            answer = parentTypeConverter.convertTo(type, buffer.toString());\n        }\n\n        return answer;\n    }","id":69935,"modified_method":"protected <T> T marshall(Class<T> type, Exchange exchange, Object value) throws JAXBException, XMLStreamException, FactoryConfigurationError {\n        LOG.trace(\"Marshal from value {} to type {}\", value, type);\n\n        T answer = null;\n        if (parentTypeConverter != null) {\n            // lets convert the object to a JAXB source and try convert that to\n            // the required source\n            JAXBContext context = createContext(value.getClass());\n            // must create a new instance of marshaller as its not thread safe\n            Marshaller marshaller = context.createMarshaller();\n            Writer buffer = new StringWriter();\n            if (isPrettyPrint()) {\n                marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);\n            }\n            if (exchange != null && exchange.getProperty(Exchange.CHARSET_NAME, String.class) != null) {\n                marshaller.setProperty(Marshaller.JAXB_ENCODING, exchange.getProperty(Exchange.CHARSET_NAME, String.class));\n            }\n            if (needFiltering(exchange)) {\n                XMLStreamWriter writer = exchange.getContext().getTypeConverter().convertTo(XMLStreamWriter.class, buffer);\n                FilteringXmlStreamWriter filteringWriter = new FilteringXmlStreamWriter(writer);\n                marshaller.marshal(value, filteringWriter);\n            } else {\n                marshaller.marshal(value, buffer);\n            }\n            answer = parentTypeConverter.convertTo(type, buffer.toString());\n        }\n\n        return answer;\n    }","commit_id":"6bd3301ba1a5a63c244d33449bdccf6115f1755e","url":"https://github.com/apache/camel"},{"original_method":"protected synchronized <T> Unmarshaller getOrCreateUnmarshaller(Class<T> type) throws JAXBException {\n        Unmarshaller unmarshaller = unmarshallers.get(type);\n        if (unmarshaller == null) {\n            JAXBContext context = createContext(type);\n            unmarshaller = context.createUnmarshaller();\n            unmarshallers.put(type, unmarshaller);\n        }\n        return unmarshaller;\n    }","id":69936,"modified_method":"protected synchronized <T> Unmarshaller getOrCreateUnmarshaller(Class<T> type) throws JAXBException {\n        JAXBContext context = createContext(type);\n        return context.createUnmarshaller();\n    }","commit_id":"6bd3301ba1a5a63c244d33449bdccf6115f1755e","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected void doStart() throws Exception {\n        ObjectHelper.notNull(camelContext, \"CamelContext\");\n\n        if (context == null) {\n            // if context not injected, create one and resolve partial class up front so they are ready to be used\n            context = createContext();\n        }\n        if (partClass != null) {\n            partialClass = camelContext.getClassResolver().resolveMandatoryClass(partClass, Object.class);\n        }\n        unmarshaller = getContext().createUnmarshaller();\n        typeConverter = camelContext.getTypeConverter();\n    }","id":69937,"modified_method":"@Override\n    protected void doStart() throws Exception {\n        ObjectHelper.notNull(camelContext, \"CamelContext\");\n\n        if (context == null) {\n            // if context not injected, create one and resolve partial class up front so they are ready to be used\n            context = createContext();\n        }\n        if (partClass != null) {\n            partialClass = camelContext.getClassResolver().resolveMandatoryClass(partClass, Object.class);\n        }\n        typeConverter = camelContext.getTypeConverter();\n    }","commit_id":"6bd3301ba1a5a63c244d33449bdccf6115f1755e","url":"https://github.com/apache/camel"},{"original_method":"public Object unmarshal(Exchange exchange, InputStream stream) throws IOException {\n        try {\n            Object answer;\n\n            lock.lock();\n            try {\n                if (partialClass != null) {\n                    // partial unmarshalling\n                    if (needFiltering(exchange)) {\n                        Source source = new StreamSource(createNonXmlFilterReader(exchange, stream));\n                        answer = getUnmarshaller().unmarshal(source, partialClass);\n                    } else {\n                        XMLStreamReader xmlReader = typeConverter.convertTo(XMLStreamReader.class, stream);\n                        answer = getUnmarshaller().unmarshal(xmlReader, partialClass);\n                    }\n\n                } else {\n                    if (needFiltering(exchange)) {\n                        NonXmlFilterReader reader = createNonXmlFilterReader(exchange, stream);\n                        answer = getUnmarshaller().unmarshal(reader);\n                    } else  {\n                        XMLStreamReader xmlReader = typeConverter.convertTo(XMLStreamReader.class, stream);\n                        answer = getUnmarshaller().unmarshal(xmlReader);\n                    }\n                }\n            }  finally {\n                lock.unlock();\n            }\n\n            if (answer instanceof JAXBElement && isIgnoreJAXBElement()) {\n                answer = ((JAXBElement<?>)answer).getValue();\n            }\n            return answer;\n        } catch (JAXBException e) {\n            throw new IOException(e);\n        }\n    }","id":69938,"modified_method":"public Object unmarshal(Exchange exchange, InputStream stream) throws IOException {\n        try {\n            Object answer;\n\n            XMLStreamReader xmlReader;\n            if (needFiltering(exchange)) {\n                xmlReader = typeConverter.convertTo(XMLStreamReader.class, createNonXmlFilterReader(exchange, stream));\n            } else {\n                xmlReader = typeConverter.convertTo(XMLStreamReader.class, stream);\n            }\n            if (partialClass != null) {\n                // partial unmarshalling\n                answer = createUnmarshaller().unmarshal(xmlReader, partialClass);\n            } else {\n                answer = createUnmarshaller().unmarshal(xmlReader);\n            }\n\n            if (answer instanceof JAXBElement && isIgnoreJAXBElement()) {\n                answer = ((JAXBElement<?>)answer).getValue();\n            }\n            return answer;\n        } catch (JAXBException e) {\n            throw new IOException(e);\n        }\n    }","commit_id":"6bd3301ba1a5a63c244d33449bdccf6115f1755e","url":"https://github.com/apache/camel"},{"original_method":"private FilteringXmlStreamWriter createFilteringWriter(OutputStream stream)\n        throws XMLStreamException, FactoryConfigurationError {\n        XMLStreamWriter writer = XMLOutputFactory.newInstance().createXMLStreamWriter(stream);\n        FilteringXmlStreamWriter filteringWriter = new FilteringXmlStreamWriter(writer);\n        return filteringWriter;\n    }","id":69939,"modified_method":"private FilteringXmlStreamWriter createFilteringWriter(OutputStream stream)\n        throws XMLStreamException, FactoryConfigurationError {\n        XMLStreamWriter writer = typeConverter.convertTo(XMLStreamWriter.class, stream);\n        FilteringXmlStreamWriter filteringWriter = new FilteringXmlStreamWriter(writer);\n        return filteringWriter;\n    }","commit_id":"6bd3301ba1a5a63c244d33449bdccf6115f1755e","url":"https://github.com/apache/camel"},{"original_method":"public Unmarshaller getUnmarshaller() {\n        return unmarshaller;\n    }","id":69940,"modified_method":"protected Unmarshaller createUnmarshaller() throws JAXBException {\n        return getContext().createUnmarshaller();\n    }","commit_id":"6bd3301ba1a5a63c244d33449bdccf6115f1755e","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testUnmarshalFilteringEnabled() throws IOException, JAXBException {\n        jaxbDataFormat.setFilterNonXmlChars(true);\n\n        jaxbDataFormatMock = spy(jaxbDataFormat);\n        unmarshallerMock = mock(Unmarshaller.class);\n        doReturn(unmarshallerMock).when(jaxbDataFormatMock).getUnmarshaller();\n\n        jaxbDataFormatMock.unmarshal(new DefaultExchange(camelContext), new ByteArrayInputStream(new byte[] {}));\n\n        verify(unmarshallerMock).unmarshal(any(NonXmlFilterReader.class));\n    }","id":69941,"modified_method":"@Test\n    public void testUnmarshalFilteringEnabled() throws IOException, JAXBException {\n        jaxbDataFormat.setFilterNonXmlChars(true);\n        jaxbDataFormatMock = spy(jaxbDataFormat);\n        \n        unmarshallerMock = mock(Unmarshaller.class);\n        doReturn(unmarshallerMock).when(jaxbDataFormatMock).createUnmarshaller();\n\n        jaxbDataFormatMock.unmarshal(new DefaultExchange(camelContext), new ByteArrayInputStream(new byte[] {}));\n\n        verify(unmarshallerMock).unmarshal((XMLStreamReader) argThat(instanceOf(XMLStreamReader.class)));\n    }","commit_id":"6bd3301ba1a5a63c244d33449bdccf6115f1755e","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testUnmarshalFilteringDisabled() throws IOException, JAXBException {\n        jaxbDataFormat.setFilterNonXmlChars(false);\n\n        jaxbDataFormatMock = spy(jaxbDataFormat);\n        unmarshallerMock = mock(Unmarshaller.class);\n        doReturn(unmarshallerMock).when(jaxbDataFormatMock).getUnmarshaller();\n\n        jaxbDataFormatMock.unmarshal(new DefaultExchange(camelContext), new ByteArrayInputStream(new byte[] {}));\n\n        verify(unmarshallerMock).unmarshal((XMLStreamReader) argThat(instanceOf(XMLStreamReader.class)));\n    }","id":69942,"modified_method":"@Test\n    public void testUnmarshalFilteringDisabled() throws IOException, JAXBException {\n        jaxbDataFormat.setFilterNonXmlChars(false);\n\n        jaxbDataFormatMock = spy(jaxbDataFormat);\n\n        unmarshallerMock = mock(Unmarshaller.class);\n        doReturn(unmarshallerMock).when(jaxbDataFormatMock).createUnmarshaller();\n\n        jaxbDataFormatMock.unmarshal(new DefaultExchange(camelContext), new ByteArrayInputStream(new byte[] {}));\n\n        verify(unmarshallerMock).unmarshal((XMLStreamReader) argThat(instanceOf(XMLStreamReader.class)));\n    }","commit_id":"6bd3301ba1a5a63c244d33449bdccf6115f1755e","url":"https://github.com/apache/camel"},{"original_method":"/**\n\t * Create a new {@link Unmarshaller} for the given class.\n\t * @param clazz the class to create the unmarshaller for\n\t * @return the {@code Unmarshaller}\n\t * @throws HttpMessageConversionException in case of JAXB errors\n\t */\n\tprotected final Unmarshaller createUnmarshaller(Class<?> clazz) throws JAXBException {\n\t\ttry {\n\t\t\tJAXBContext jaxbContext = getJaxbContext(clazz);\n\t\t\treturn jaxbContext.createUnmarshaller();\n\t\t}\n\t\tcatch (JAXBException ex) {\n\t\t\tthrow new HttpMessageConversionException(\n\t\t\t\t\t\"Could not create Unmarshaller for class [\" + clazz + \"]: \" + ex.getMessage(), ex);\n\t\t}\n\t}","id":69943,"modified_method":"/**\n\t * Create a new {@link Unmarshaller} for the given class.\n\t * @param clazz the class to create the unmarshaller for\n\t * @return the {@code Unmarshaller}\n\t * @throws HttpMessageConversionException in case of JAXB errors\n\t */\n\tprotected final Unmarshaller createUnmarshaller(Class<?> clazz) throws JAXBException {\n\t\ttry {\n\t\t\tJAXBContext jaxbContext = getJaxbContext(clazz);\n\t\t\tUnmarshaller unmarshaller = jaxbContext.createUnmarshaller();\n\t\t\tcustomizeUnmarshaller(unmarshaller);\n\t\t\treturn unmarshaller;\n\t\t}\n\t\tcatch (JAXBException ex) {\n\t\t\tthrow new HttpMessageConversionException(\n\t\t\t\t\t\"Could not create Unmarshaller for class [\" + clazz + \"]: \" + ex.getMessage(), ex);\n\t\t}\n\t}","commit_id":"c4000727eff5d5af4ac47797121a686f07f278bd","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Create a new {@link Marshaller} for the given class.\n\t * @param clazz the class to create the marshaller for\n\t * @return the {@code Marshaller}\n\t * @throws HttpMessageConversionException in case of JAXB errors\n\t */\n\tprotected final Marshaller createMarshaller(Class<?> clazz) {\n\t\ttry {\n\t\t\tJAXBContext jaxbContext = getJaxbContext(clazz);\n\t\t\treturn jaxbContext.createMarshaller();\n\t\t}\n\t\tcatch (JAXBException ex) {\n\t\t\tthrow new HttpMessageConversionException(\n\t\t\t\t\t\"Could not create Marshaller for class [\" + clazz + \"]: \" + ex.getMessage(), ex);\n\t\t}\n\t}","id":69944,"modified_method":"/**\n\t * Create a new {@link Marshaller} for the given class.\n\t * @param clazz the class to create the marshaller for\n\t * @return the {@code Marshaller}\n\t * @throws HttpMessageConversionException in case of JAXB errors\n\t */\n\tprotected final Marshaller createMarshaller(Class<?> clazz) {\n\t\ttry {\n\t\t\tJAXBContext jaxbContext = getJaxbContext(clazz);\n\t\t\tMarshaller marshaller = jaxbContext.createMarshaller();\n\t\t\tcustomizeMarshaller(marshaller);\n\t\t\treturn marshaller;\n\t\t}\n\t\tcatch (JAXBException ex) {\n\t\t\tthrow new HttpMessageConversionException(\n\t\t\t\t\t\"Could not create Marshaller for class [\" + clazz + \"]: \" + ex.getMessage(), ex);\n\t\t}\n\t}","commit_id":"c4000727eff5d5af4ac47797121a686f07f278bd","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tprotected Object readFromSource(Class<?> clazz, HttpHeaders headers, Source source) throws IOException {\n\t\ttry {\n\t\t\tsource = processSource(source);\n\t\t\tUnmarshaller unmarshaller = createUnmarshaller(clazz);\n\t\t\tthis.customizeUnmarshaller(unmarshaller);\n\t\t\tif (clazz.isAnnotationPresent(XmlRootElement.class)) {\n\t\t\t\treturn unmarshaller.unmarshal(source);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tJAXBElement<?> jaxbElement = unmarshaller.unmarshal(source, clazz);\n\t\t\t\treturn jaxbElement.getValue();\n\t\t\t}\n\t\t}\n\t\tcatch (UnmarshalException ex) {\n\t\t\tthrow new HttpMessageNotReadableException(\"Could not unmarshal to [\" + clazz + \"]: \" + ex.getMessage(), ex);\n\n\t\t}\n\t\tcatch (JAXBException ex) {\n\t\t\tthrow new HttpMessageConversionException(\"Could not instantiate JAXBContext: \" + ex.getMessage(), ex);\n\t\t}\n\t}","id":69945,"modified_method":"@Override\n\tprotected Object readFromSource(Class<?> clazz, HttpHeaders headers, Source source) throws IOException {\n\t\ttry {\n\t\t\tsource = processSource(source);\n\t\t\tUnmarshaller unmarshaller = createUnmarshaller(clazz);\n\t\t\tif (clazz.isAnnotationPresent(XmlRootElement.class)) {\n\t\t\t\treturn unmarshaller.unmarshal(source);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tJAXBElement<?> jaxbElement = unmarshaller.unmarshal(source, clazz);\n\t\t\t\treturn jaxbElement.getValue();\n\t\t\t}\n\t\t}\n\t\tcatch (UnmarshalException ex) {\n\t\t\tthrow new HttpMessageNotReadableException(\"Could not unmarshal to [\" + clazz + \"]: \" + ex.getMessage(), ex);\n\n\t\t}\n\t\tcatch (JAXBException ex) {\n\t\t\tthrow new HttpMessageConversionException(\"Could not instantiate JAXBContext: \" + ex.getMessage(), ex);\n\t\t}\n\t}","commit_id":"c4000727eff5d5af4ac47797121a686f07f278bd","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tprotected void writeToResult(Object o, HttpHeaders headers, Result result) throws IOException {\n\t\ttry {\n\t\t\tClass<?> clazz = ClassUtils.getUserClass(o);\n\t\t\tMarshaller marshaller = createMarshaller(clazz);\n\t\t\tthis.customizeMarshaller(marshaller);\n\t\t\tsetCharset(headers.getContentType(), marshaller);\n\t\t\tmarshaller.marshal(o, result);\n\t\t}\n\t\tcatch (MarshalException ex) {\n\t\t\tthrow new HttpMessageNotWritableException(\"Could not marshal [\" + o + \"]: \" + ex.getMessage(), ex);\n\t\t}\n\t\tcatch (JAXBException ex) {\n\t\t\tthrow new HttpMessageConversionException(\"Could not instantiate JAXBContext: \" + ex.getMessage(), ex);\n\t\t}\n\t}","id":69946,"modified_method":"@Override\n\tprotected void writeToResult(Object o, HttpHeaders headers, Result result) throws IOException {\n\t\ttry {\n\t\t\tClass<?> clazz = ClassUtils.getUserClass(o);\n\t\t\tMarshaller marshaller = createMarshaller(clazz);\n\t\t\tsetCharset(headers.getContentType(), marshaller);\n\t\t\tmarshaller.marshal(o, result);\n\t\t}\n\t\tcatch (MarshalException ex) {\n\t\t\tthrow new HttpMessageNotWritableException(\"Could not marshal [\" + o + \"]: \" + ex.getMessage(), ex);\n\t\t}\n\t\tcatch (JAXBException ex) {\n\t\t\tthrow new HttpMessageConversionException(\"Could not instantiate JAXBContext: \" + ex.getMessage(), ex);\n\t\t}\n\t}","commit_id":"c4000727eff5d5af4ac47797121a686f07f278bd","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"private void createOutputs(final String bundleId, final Set<Output> outputs, final String userName)\n            throws ValidationException {\n        for (final Output outputDescription : outputs) {\n            final OutputImpl output = createOutput(bundleId, outputDescription, userName);\n            createdOutputs.put(output.getId(), output);\n        }\n    }","id":69947,"modified_method":"private void createOutputs(final String bundleId, final Set<Output> outputs, final String userName)\n            throws ValidationException {\n        for (final Output outputDescription : outputs) {\n            final org.graylog2.plugin.streams.Output output = createOutput(bundleId, outputDescription, userName);\n            createdOutputs.put(output.getId(), output);\n        }\n    }","commit_id":"ba2d44ed37728f692a3604dbbeb3761b2507f27d","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"private OutputImpl createOutput(final String bundleId, final Output outputDescription, final String userName)\n            throws ValidationException {\n        final String referenceId = outputDescription.getId();\n        final OutputImpl output = (OutputImpl) outputService.create(new OutputImpl(\n                outputDescription.getTitle(),\n                outputDescription.getType(),\n                outputDescription.getConfiguration(),\n                Tools.iso8601().toDate(),\n                userName,\n                bundleId));\n\n        if (!isNullOrEmpty(referenceId)) {\n            outputsByReferenceId.put(referenceId, output);\n        }\n\n        return output;\n    }","id":69948,"modified_method":"private org.graylog2.plugin.streams.Output createOutput(final String bundleId, final Output outputDescription, final String userName)\n            throws ValidationException {\n        final String referenceId = outputDescription.getId();\n        final org.graylog2.plugin.streams.Output output = outputService.create(OutputAVImpl.create(\n                outputDescription.getId(),\n                outputDescription.getTitle(),\n                outputDescription.getType(),\n                userName,\n                outputDescription.getConfiguration(),\n                Tools.iso8601().toDate(),\n                bundleId));\n\n        if (!isNullOrEmpty(referenceId)) {\n            outputsByReferenceId.put(referenceId, output);\n        }\n\n        return output;\n    }","commit_id":"ba2d44ed37728f692a3604dbbeb3761b2507f27d","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"private void createGrid( ArrayList<SearchResultFieldDesc> descs, ArrayList<String> vals ) {\n    if ( descs == null || descs.size( ) < 1 || vals == null || vals.size( ) < 1 ) {\n      LOG.log( Level.WARNING, \"Empty or partial input\" );\n      return;\n    }\n    int size = getGridSize( descs );\n    this.currentGrid = new Grid( size, 2 );\n    this.currentGrid.addStyleName( gridStyle.grid( ) );\n    this.currentGrid.getColumnFormatter( ).setWidth( 0, LABEL_WIDTH );\n    int row = 0;\n    for ( int i = 0; i < descs.size( ); i++ ) {\n      SearchResultFieldDesc desc = descs.get( i );\n      String val = vals.get( i );\n      if ( desc != null && !desc.getHidden( ) ) {\n        if ( desc.getType( ).equals( Type.NEWKEYVAL ) ) {\n          // Add the new value input row at the end\n          addNewKeyValRow( row );\n          // This should be the last row\n          break;\n        } else {\n          HasValueWidget widget = getContentWidget( desc.getType( ), desc.getName( ), val, desc.getEditable( ) );\n          if ( widget != null ) {\n            addRow( desc.getName( ), new Label( desc.getTitle( ) ), widget, row++ );\n            continue;\n          }\n        }\n      }\n      // Hidden fields\n      addRow( desc != null ? desc.getName( ) : \"\", null/*keyWidget*/, new HiddenValue( val ), null/*rowIndex*/ );\n    }\n  }","id":69949,"modified_method":"private void createGrid( ArrayList<SearchResultFieldDesc> descs, ArrayList<String> vals ) {\n    if ( descs == null || descs.size( ) < 1 || vals == null || vals.size( ) < 1 ) {\n      LOG.log( Level.WARNING, \"Empty or partial input\" );\n      return;\n    }\n    int size = getGridSize( descs );\n    this.currentGrid = new Grid( size, 2 );\n    this.currentGrid.addStyleName( gridStyle.grid( ) );\n    this.currentGrid.getColumnFormatter( ).setWidth( 0, LABEL_WIDTH );\n    int row = 0;\n    for ( int i = 0; i < descs.size( ); i++ ) {\n      SearchResultFieldDesc desc = descs.get( i );\n      String val = vals.get( i );\n      if ( desc != null && !desc.getHidden( ) ) {\n        if ( desc.getType( ).equals( Type.NEWKEYVAL ) ) {\n          // Add the new value input row at the end\n          addNewKeyValRow( row );\n          // This should be the last row\n          break;\n        } else {\n          HasValueWidget widget = getContentWidget( desc.getType( ), desc.getName( ), val, desc.getEditable( ) );\n          Widget label = getLabelWidget( desc.getType( ), desc.getTitle( ), val );\n          if ( label != null && widget != null ) {\n            addRow( desc.getName( ), label , widget, row++ );\n            continue;\n          }\n        }\n      }\n      // Hidden fields\n      addRow( desc != null ? desc.getName( ) : \"\", null/*keyWidget*/, new HiddenValue( val ), null/*rowIndex*/ );\n    }\n  }","commit_id":"79b515dda5e37da8cba9ce8e81129dff8c72f685","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n     * Creates a column gadget which is a copy of the passed gadget.\n     * \n     * @param gadget the gadget to copy into a column gadget.\n     */\n    public ColumnGadget(Gadget gadget)\n    {\n        this(gadget.getId(), gadget.getTitle(), gadget.getContent(), gadget.getPosition());\n    }","id":69950,"modified_method":"/**\n     * Creates a column gadget which is a copy of the passed gadget.\n     * \n     * @param gadget the gadget to copy into a column gadget.\n     */\n    public ColumnGadget(Gadget gadget)\n    {\n        super(gadget.getId(), gadget.getTitle(), gadget.getContent(), gadget.getPosition());\n        this.setTitleSource(gadget.getTitleSource());\n    }","commit_id":"910ab08cace78fb0baaf05bfa5919bef2d301fb8","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.rendering.macro.dashboard.DashboardRenderer#renderGadgets(java.util.List,\n     *      MacroTransformationContext)\n     */\n    public List<Block> renderGadgets(List<Gadget> gadgets, MacroTransformationContext context)\n        throws MacroExecutionException\n    {\n        // transform the passed gagdets in a list of column gadgets\n        List<ColumnGadget> columnGadgets = new ArrayList<ColumnGadget>();\n        List<Gadget> invalidGadgets = new ArrayList<Gadget>();\n        for (Gadget gadget : gadgets) {\n            ColumnGadget cGadget = new ColumnGadget(gadget);\n            if (cGadget.getColumn() != null && cGadget.getIndex() != null) {\n                columnGadgets.add(cGadget);\n            } else {\n                invalidGadgets.add(gadget);\n            }\n        }\n\n        // sort the column gadgets by first the column number then by index in column, for all those which have a valid\n        // position\n        Collections.sort(columnGadgets, new Comparator<ColumnGadget>()\n        {\n            public int compare(ColumnGadget g1, ColumnGadget g2)\n            {\n                return g1.getColumn().equals(g2.getColumn()) ? g1.getIndex() - g2.getIndex() : g1.getColumn()\n                    - g2.getColumn();\n            }\n        });\n\n        // get the maximmum column number in the gadgets list and create that number of columns. This is the column\n        // number of the last gadget in the ordered list. Default is 1 column, the empty dashboard is made of one empty\n        // column\n        int columns = 1;\n        if (!columnGadgets.isEmpty()) {\n            // prevent bad configurations to mess up the dashboard layout\n            int lastGadgetsColumn = columnGadgets.get(columnGadgets.size() - 1).getColumn();\n            if (lastGadgetsColumn > 1) {\n                columns = lastGadgetsColumn;\n            }\n        }\n\n        // create the list of gadget containers\n        List<Block> gadgetContainers = new ArrayList<Block>();\n        for (int i = 0; i < columns; i++) {\n            GroupBlock gContainer = new GroupBlock();\n            gContainer.setParameter(CLASS, DashboardMacro.GADGET_CONTAINER);\n            // and generate the ids of the gadget containers, which are column numbers, 1 based\n            gContainer.setParameter(ID, DashboardMacro.GADGET_CONTAINER_PREFIX + (i + 1));\n            gadgetContainers.add(gContainer);\n        }\n\n        // render them as columns using the container macro and appropriate parameters\n        ContainerMacroParameters containerParams = new ContainerMacroParameters();\n        containerParams.setLayoutStyle(\"columns\");\n        containerParams.setJustify(true);\n        BlocksContainerMacro containerMacro = new BlocksContainerMacro();\n        containerMacro.setComponentManager(componentManager);\n        containerMacro.setContent(gadgetContainers);\n        List<Block> layoutedResult = containerMacro.execute(containerParams, null, context);\n\n        for (ColumnGadget gadget : columnGadgets) {\n            int columnIndex = gadget.getColumn() - 1;\n            gadgetContainers.get(columnIndex).addChildren(decorateGadget(gadget));\n        }\n\n        // and return the result\n        return layoutedResult;\n    }","id":69951,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.rendering.macro.dashboard.DashboardRenderer#renderGadgets(java.util.List, GadgetRenderer,\n     *      MacroTransformationContext)\n     */\n    public List<Block> renderGadgets(List<Gadget> gadgets, GadgetRenderer gadgetsRenderer,\n        MacroTransformationContext context) throws MacroExecutionException\n    {\n        // transform the passed gagdets in a list of column gadgets\n        List<ColumnGadget> columnGadgets = new ArrayList<ColumnGadget>();\n        List<Gadget> invalidGadgets = new ArrayList<Gadget>();\n        for (Gadget gadget : gadgets) {\n            ColumnGadget cGadget = new ColumnGadget(gadget);\n            if (cGadget.getColumn() != null && cGadget.getIndex() != null) {\n                columnGadgets.add(cGadget);\n            } else {\n                invalidGadgets.add(gadget);\n            }\n        }\n\n        // sort the column gadgets by first the column number then by index in column, for all those which have a valid\n        // position\n        Collections.sort(columnGadgets, new Comparator<ColumnGadget>()\n        {\n            public int compare(ColumnGadget g1, ColumnGadget g2)\n            {\n                return g1.getColumn().equals(g2.getColumn()) ? g1.getIndex() - g2.getIndex() : g1.getColumn()\n                    - g2.getColumn();\n            }\n        });\n\n        // get the maximmum column number in the gadgets list and create that number of columns. This is the column\n        // number of the last gadget in the ordered list. Default is 1 column, the empty dashboard is made of one empty\n        // column\n        int columns = 1;\n        if (!columnGadgets.isEmpty()) {\n            // prevent bad configurations to mess up the dashboard layout\n            int lastGadgetsColumn = columnGadgets.get(columnGadgets.size() - 1).getColumn();\n            if (lastGadgetsColumn > 1) {\n                columns = lastGadgetsColumn;\n            }\n        }\n\n        // create the list of gadget containers\n        List<Block> gadgetContainers = new ArrayList<Block>();\n        for (int i = 0; i < columns; i++) {\n            GroupBlock gContainer = new GroupBlock();\n            gContainer.setParameter(CLASS, DashboardMacro.GADGET_CONTAINER);\n            // and generate the ids of the gadget containers, which are column numbers, 1 based\n            gContainer.setParameter(ID, DashboardMacro.GADGET_CONTAINER_PREFIX + (i + 1));\n            gadgetContainers.add(gContainer);\n        }\n\n        // render them as columns using the container macro and appropriate parameters\n        ContainerMacroParameters containerParams = new ContainerMacroParameters();\n        containerParams.setLayoutStyle(\"columns\");\n        containerParams.setJustify(true);\n        BlocksContainerMacro containerMacro = new BlocksContainerMacro();\n        containerMacro.setComponentManager(componentManager);\n        containerMacro.setContent(gadgetContainers);\n        List<Block> layoutedResult = containerMacro.execute(containerParams, null, context);\n\n        for (ColumnGadget gadget : columnGadgets) {\n            int columnIndex = gadget.getColumn() - 1;\n            gadgetContainers.get(columnIndex).addChildren(gadgetsRenderer.decorateGadget(gadget));\n        }\n\n        // and return the result\n        return layoutedResult;\n    }","commit_id":"910ab08cace78fb0baaf05bfa5919bef2d301fb8","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.rendering.macro.Macro#execute(java.lang.Object, java.lang.String,\n     *      org.xwiki.rendering.transformation.MacroTransformationContext)\n     */\n    public List<Block> execute(DashboardMacroParameters parameters, String content, MacroTransformationContext context)\n        throws MacroExecutionException\n    {\n        // get the gadgets from the objects\n        List<Gadget> gadgets;\n        try {\n            gadgets = gadgetSource.getGadgets(parameters.getSource(), context);\n        } catch (Exception e) {\n            String message = \"Could not get the gadgets.\";\n            // log and throw further\n            getLogger().error(message, e);\n            throw new MacroExecutionException(message, e);\n        }\n        DashboardRenderer renderer =\n            getDashboardRenderer(StringUtils.isEmpty(parameters.getLayout()) ? \"columns\" : parameters.getLayout());\n        if (renderer == null) {\n            String message = \"Could not find dashboard renderer \" + parameters.getLayout();\n            // log and throw further\n            getLogger().error(message);\n            throw new MacroExecutionException(message);\n        }\n        // else, layout\n        List<Block> layoutedResult;\n        try {\n            layoutedResult = renderer.renderGadgets(gadgets, context);\n        } catch (Exception e) {\n            String message = \"Could not render the gadgets for layout \" + parameters.getLayout();\n            // log and throw further\n            getLogger().error(message, e);\n            throw new MacroExecutionException(message, e);\n        }\n\n        boolean isInEditMode = gadgetSource.isEditing();\n\n        // include the css and js for this macro. here so that it's included after any dependencies have included their\n        // css, so that it cascades properly\n        this.includeResources(isInEditMode);\n\n        // put everything in a nice toplevel group for this dashboard, to be able to add classes to it\n        GroupBlock topLevel = new GroupBlock();\n        // just under the toplevel, above the content, slip in the metadata, for the client code, only if we're in edit\n        // mode\n        if (isInEditMode) {\n            topLevel.addChildren(gadgetSource.getDashboardSourceMetadata(parameters.getSource(), context));\n        }\n        topLevel.addChildren(layoutedResult);\n        // add the style attribute of the dashboard macro as a class to the toplevel container\n        topLevel.setParameter(\"class\", MACRO_NAME\n            + (StringUtils.isEmpty(parameters.getStyle()) ? \"\" : \" \" + parameters.getStyle()));\n\n        return Collections.<Block> singletonList(topLevel);\n    }","id":69952,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.rendering.macro.Macro#execute(java.lang.Object, java.lang.String,\n     *      org.xwiki.rendering.transformation.MacroTransformationContext)\n     */\n    public List<Block> execute(DashboardMacroParameters parameters, String content, MacroTransformationContext context)\n        throws MacroExecutionException\n    {\n        // get the gadgets from the objects\n        List<Gadget> gadgets;\n        try {\n            gadgets = gadgetSource.getGadgets(parameters.getSource(), context);\n        } catch (Exception e) {\n            String message = \"Could not get the gadgets.\";\n            // log and throw further\n            getLogger().error(message, e);\n            throw new MacroExecutionException(message, e);\n        }\n\n        boolean isInEditMode = gadgetSource.isEditing();\n\n        DashboardRenderer renderer =\n            getDashboardRenderer(StringUtils.isEmpty(parameters.getLayout()) ? \"columns\" : parameters.getLayout());\n        if (renderer == null) {\n            String message = \"Could not find dashboard renderer \" + parameters.getLayout();\n            // log and throw further\n            getLogger().error(message);\n            throw new MacroExecutionException(message);\n        }\n\n        GadgetRenderer gadgetRenderer = getGadgetRenderer(isInEditMode);\n        if (gadgetRenderer == null) {\n            String message = \"Could not find gadgets renderer.\";\n            // log and throw further\n            getLogger().error(message);\n            throw new MacroExecutionException(message);\n        }\n\n        // else, layout\n        List<Block> layoutedResult;\n        try {\n            layoutedResult = renderer.renderGadgets(gadgets, gadgetRenderer, context);\n        } catch (Exception e) {\n            String message = \"Could not render the gadgets for layout \" + parameters.getLayout();\n            // log and throw further\n            getLogger().error(message, e);\n            throw new MacroExecutionException(message, e);\n        }\n\n        // include the css and js for this macro. here so that it's included after any dependencies have included their\n        // css, so that it cascades properly\n        this.includeResources(isInEditMode);\n\n        // put everything in a nice toplevel group for this dashboard, to be able to add classes to it\n        GroupBlock topLevel = new GroupBlock();\n        // just under the toplevel, above the content, slip in the metadata, for the client code, only if we're in edit\n        // mode\n        if (isInEditMode) {\n            topLevel.addChildren(gadgetSource.getDashboardSourceMetadata(parameters.getSource(), context));\n        }\n        topLevel.addChildren(layoutedResult);\n        // add the style attribute of the dashboard macro as a class to the toplevel container\n        topLevel.setParameter(\"class\", MACRO_NAME\n            + (StringUtils.isEmpty(parameters.getStyle()) ? \"\" : \" \" + parameters.getStyle()));\n\n        return Collections.<Block> singletonList(topLevel);\n    }","commit_id":"910ab08cace78fb0baaf05bfa5919bef2d301fb8","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Prepares a list of gadgets from a list of XWiki objects.\n     * \n     * @param objects the objects to read the gadgets from\n     * @param sourceSyntax the syntax of the source of the gadget objects\n     * @param context the macro transformation context, where the dashboard macro is being executed\n     * @return the list of gadgets, as read from the xwiki objects\n     * @throws Exception in case something happens while rendering the content in the objects\n     */\n    private List<Gadget> prepareGadgets(List<BaseObject> objects, Syntax sourceSyntax,\n        MacroTransformationContext context) throws Exception\n    {\n        List<Gadget> gadgets = new ArrayList<Gadget>();\n\n        // prepare velocity tools to render title\n        VelocityContext velocityContext = velocityManager.getVelocityContext();\n        // Use the Transformation id as the name passed to the Velocity Engine. This name is used internally\n        // by Velocity as a cache index key for caching macros.\n        String key = context.getTransformationContext().getId();\n        if (key == null) {\n            key = \"unknown namespace\";\n        }\n        VelocityEngine velocityEngine = velocityManager.getVelocityEngine();\n        // prepare the parser to parse the title and content of the gadget into blocks\n        Parser contentParser = (Parser) componentManager.lookup(Parser.class, sourceSyntax.toIdString());\n        ParserUtils parserUtils = new ParserUtils();\n\n        for (BaseObject xObject : objects) {\n            if (xObject == null) {\n                continue;\n            }\n            // get the data about the gadget from the object\n            // TODO: filter for dashboard name when that field will be in\n            String title = xObject.getStringValue(\"title\");\n            String content = xObject.getLargeStringValue(\"content\");\n            String position = xObject.getStringValue(\"position\");\n            String id = xObject.getNumber() + \"\";\n\n            // render title with velocity\n            StringWriter writer = new StringWriter();\n            // FIXME: the engine has an issue with $ and # as last character. To test and fix if it happens\n            velocityEngine.evaluate(velocityContext, writer, key, title);\n            String gadgetTitle = writer.toString();\n\n            // parse both the title and content in the syntax of the transformation context\n            XDOM titleXDom = contentParser.parse(new StringReader(gadgetTitle));\n            List<Block> titleBlocks = titleXDom.getChildren();\n            parserUtils.removeTopLevelParagraph(titleBlocks);\n            XDOM contentXDom = contentParser.parse(new StringReader(content));\n            List<Block> contentBlocks = contentXDom.getChildren();\n            parserUtils.removeTopLevelParagraph(contentBlocks);\n\n            // create a gadget will all these and add the gadget to the container of gadgets\n            gadgets.add(new Gadget(id, titleBlocks, contentBlocks, position));\n        }\n        return gadgets;\n    }","id":69953,"modified_method":"/**\n     * Prepares a list of gadgets from a list of XWiki objects.\n     * \n     * @param objects the objects to read the gadgets from\n     * @param sourceSyntax the syntax of the source of the gadget objects\n     * @param context the macro transformation context, where the dashboard macro is being executed\n     * @return the list of gadgets, as read from the xwiki objects\n     * @throws Exception in case something happens while rendering the content in the objects\n     */\n    private List<Gadget> prepareGadgets(List<BaseObject> objects, Syntax sourceSyntax,\n        MacroTransformationContext context) throws Exception\n    {\n        List<Gadget> gadgets = new ArrayList<Gadget>();\n\n        // prepare velocity tools to render title\n        VelocityContext velocityContext = velocityManager.getVelocityContext();\n        // Use the Transformation id as the name passed to the Velocity Engine. This name is used internally\n        // by Velocity as a cache index key for caching macros.\n        String key = context.getTransformationContext().getId();\n        if (key == null) {\n            key = \"unknown namespace\";\n        }\n        VelocityEngine velocityEngine = velocityManager.getVelocityEngine();\n        // prepare the parser to parse the title and content of the gadget into blocks\n        Parser contentParser = (Parser) componentManager.lookup(Parser.class, sourceSyntax.toIdString());\n        ParserUtils parserUtils = new ParserUtils();\n\n        for (BaseObject xObject : objects) {\n            if (xObject == null) {\n                continue;\n            }\n            // get the data about the gadget from the object\n            // TODO: filter for dashboard name when that field will be in\n            String title = xObject.getStringValue(\"title\");\n            String content = xObject.getLargeStringValue(\"content\");\n            String position = xObject.getStringValue(\"position\");\n            String id = xObject.getNumber() + \"\";\n\n            // render title with velocity\n            StringWriter writer = new StringWriter();\n            // FIXME: the engine has an issue with $ and # as last character. To test and fix if it happens\n            velocityEngine.evaluate(velocityContext, writer, key, title);\n            String gadgetTitle = writer.toString();\n\n            // parse both the title and content in the syntax of the transformation context\n            XDOM titleXDom = contentParser.parse(new StringReader(gadgetTitle));\n            List<Block> titleBlocks = titleXDom.getChildren();\n            parserUtils.removeTopLevelParagraph(titleBlocks);\n            XDOM contentXDom = contentParser.parse(new StringReader(content));\n            List<Block> contentBlocks = contentXDom.getChildren();\n            parserUtils.removeTopLevelParagraph(contentBlocks);\n\n            // create a gadget will all these and add the gadget to the container of gadgets\n            Gadget gadget = new Gadget(id, titleBlocks, contentBlocks, position);\n            gadget.setTitleSource(title);\n            gadgets.add(gadget);\n        }\n        return gadgets;\n    }","commit_id":"910ab08cace78fb0baaf05bfa5919bef2d301fb8","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public Class[] getInspectionClasses() {\n    return new Class[] {\n      PyArgumentListInspection.class,\n      PyRedeclarationInspection.class,\n      PyUnresolvedReferencesInspection.class,\n      PyMethodParametersInspection.class,\n      PyUnreachableCodeInspection.class,\n      PyMethodFirstArgAssignmentInspection.class,\n      PyStringFormatInspection.class,\n      PyMethodOverridingInspection.class,\n      PyInitNewSignatureInspection.class,\n      PyTrailingSemicolonInspection.class,\n      PyReturnFromInitInspection.class,\n      PyUnusedLocalInspection.class,\n      PyDeprecatedModulesInspection.class,\n      PyDictCreationInspection.class,\n      PyDictDuplicateKeysInspection.class,\n      PyExceptClausesOrderInspection.class,\n      PyTupleAssignmentBalanceInspection.class,\n      PyClassicStyleClassInspection.class,\n      PyExceptionInheritInspection.class,\n      PyDefaultArgumentInspection.class,\n      PyRaisingNewStyleClassInspection.class,\n      PyDocstringInspection.class,\n      PyUnboundLocalVariableInspection.class,\n      PyStatementEffectInspection.class,\n      PySimplifyBooleanCheckInspection.class,\n      PyFromFutureImportInspection.class,\n      PyComparisonWithNoneInspection.class,\n      PyStringExceptionInspection.class,\n      PySuperArgumentsInspection.class,\n      PyByteLiteralInspection.class,\n      PyTupleItemAssignmentInspection.class,\n      PyCallingNonCallableInspection.class,\n      PyPropertyAccessInspection.class,\n      PyPropertyDefinitionInspection.class,\n      PyInconsistentIndentationInspection.class,\n      PyNestedDecoratorsInspection.class,\n      PyCallByClassInspection.class,\n      PyBroadExceptionInspection.class,\n      PyRedundantParenthesesInspection.class,\n      PyAugmentAssignmentInspection.class,\n      PyChainedComparisonsInspection.class,\n      PyOldStyleClassesInspection.class,\n    };\n  }","id":69954,"modified_method":"public Class[] getInspectionClasses() {\n    return new Class[] {\n      PyArgumentListInspection.class,\n      PyRedeclarationInspection.class,\n      PyUnresolvedReferencesInspection.class,\n      PyMethodParametersInspection.class,\n      PyUnreachableCodeInspection.class,\n      PyMethodFirstArgAssignmentInspection.class,\n      PyStringFormatInspection.class,\n      PyMethodOverridingInspection.class,\n      PyInitNewSignatureInspection.class,\n      PyTrailingSemicolonInspection.class,\n      PyReturnFromInitInspection.class,\n      PyUnusedLocalInspection.class,\n      PyDeprecatedModulesInspection.class,\n      PyDictCreationInspection.class,\n      PyDictDuplicateKeysInspection.class,\n      PyExceptClausesOrderInspection.class,\n      PyTupleAssignmentBalanceInspection.class,\n      PyClassicStyleClassInspection.class,\n      PyExceptionInheritInspection.class,\n      PyDefaultArgumentInspection.class,\n      PyRaisingNewStyleClassInspection.class,\n      PyDocstringInspection.class,\n      PyUnboundLocalVariableInspection.class,\n      PyStatementEffectInspection.class,\n      PySimplifyBooleanCheckInspection.class,\n      PyFromFutureImportInspection.class,\n      PyComparisonWithNoneInspection.class,\n      PyStringExceptionInspection.class,\n      PySuperArgumentsInspection.class,\n      PyByteLiteralInspection.class,\n      PyTupleItemAssignmentInspection.class,\n      PyCallingNonCallableInspection.class,\n      PyPropertyAccessInspection.class,\n      PyPropertyDefinitionInspection.class,\n      PyInconsistentIndentationInspection.class,\n      PyNestedDecoratorsInspection.class,\n      PyCallByClassInspection.class,\n      PyBroadExceptionInspection.class,\n      PyRedundantParenthesesInspection.class,\n      PyAugmentAssignmentInspection.class,\n      PyChainedComparisonsInspection.class,\n      PyOldStyleClassesInspection.class,\n      PyCompatibilityInspection.class,\n    };\n  }","commit_id":"7670b4f85f4e6633e55ff03eb705795ed0c1984d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void visitPyImportStatement(PyImportStatement node) {\n    super.visitPyImportStatement(node);\n    PyImportElement[] importElements = node.getImportElements();\n    for (PyImportElement importElement : importElements) {\n      final PyQualifiedName qName = importElement.getImportedQName();\n      if (qName != null) {\n        if (isPy2(node)) {\n          if (qName.matches(\"builtins\")) {\n            getHolder().createWarningAnnotation(node, \"There is no module builtins in Python 2\")\n              .registerFix(new ReplaceBuiltinsIntention());\n          }\n        }\n        else {\n          if (qName.matches(\"__builtin__\")) {\n            getHolder().createWarningAnnotation(node, \"Module __builtin__ renamed to builtins\").registerFix(new ReplaceBuiltinsIntention());\n          }\n        }\n      }\n    }\n  }","id":69955,"modified_method":"@Override\n  public void visitPyImportStatement(PyImportStatement node) {\n    super.visitPyImportStatement(node);\n    PyImportElement[] importElements = node.getImportElements();\n    for (PyImportElement importElement : importElements) {\n      final PyQualifiedName qName = importElement.getImportedQName();\n      if (qName != null) {\n        if (isPy2(node)) {\n          if (qName.matches(\"builtins\")) {\n            String message = \"There is no module builtins in Python 2\";\n            getHolder().createWarningAnnotation(node, message)\n              .registerFix(createIntention(node, message, new ReplaceBuiltinsQuickFix()));\n          }\n        }\n        else {\n          if (qName.matches(\"__builtin__\")) {\n            String message =  \"Module __builtin__ renamed to builtins\";\n            getHolder().createWarningAnnotation(node, \"Module __builtin__ renamed to builtins\")\n              .registerFix(createIntention(node, message, new ReplaceBuiltinsQuickFix()));\n          }\n        }\n      }\n    }\n  }","commit_id":"7670b4f85f4e6633e55ff03eb705795ed0c1984d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void visitPySetLiteralExpression(PySetLiteralExpression node) {\n    super.visitPySetLiteralExpression(node);\n    LanguageLevel languageLevel = getLanguageLevel(node);\n    if (!languageLevel.supportsSetLiterals()) {\n      getHolder()\n        .createWarningAnnotation(node, \"Python version \" + languageLevel + \" does not support set literal expressions\")\n        .registerFix(new ConvertSetLiteralIntention());\n    }\n  }","id":69956,"modified_method":"@Override\n  public void visitPySetLiteralExpression(PySetLiteralExpression node) {\n    super.visitPySetLiteralExpression(node);\n    LanguageLevel languageLevel = getLanguageLevel(node);\n    if (!languageLevel.supportsSetLiterals()) {\n      String message = \"Python version \" + languageLevel + \" does not support set literal expressions\";\n      getHolder()\n        .createWarningAnnotation(node, message)\n        .registerFix(createIntention(node, message, new ConvertSetLiteralQuickFix()));\n    }\n  }","commit_id":"7670b4f85f4e6633e55ff03eb705795ed0c1984d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void visitPyRaiseStatement(PyRaiseStatement node) {\n    super.visitPyRaiseStatement(node);\n    final PyExpression[] expressions = node.getExpressions();\n    if (expressions.length > 0) {\n      if (expressions.length < 2) {\n        return;\n      }\n\n      if (isPy3K(node)) {\n        if (expressions.length == 3) {\n          getHolder().createWarningAnnotation(node, \"Python 3 does not support this syntax\")\n            .registerFix(new ReplaceRaiseStatementIntention());\n          return;\n        }\n        PsiElement element = expressions[0].getNextSibling();\n        while (element instanceof PsiWhiteSpace) {\n          element = element.getNextSibling();\n        }\n        if (element != null && \",\".equals(element.getText())) {\n          getHolder().createWarningAnnotation(node, \"Python 3 does not support this syntax\")\n            .registerFix(new ReplaceRaiseStatementIntention());\n        }\n      }\n    }\n    else if (isPy3K(node)) {\n      final PyExceptPart exceptPart = PsiTreeUtil.getParentOfType(node, PyExceptPart.class);\n      if (exceptPart == null) {\n        getHolder().createErrorAnnotation(node, \"raise with no arguments can only be used in an except block\");\n      }\n    }\n  }","id":69957,"modified_method":"@Override\n  public void visitPyRaiseStatement(PyRaiseStatement node) {\n    super.visitPyRaiseStatement(node);\n    boolean hasProblem = UnsupportedFeaturesUtil.raiseHasNoArgs(node, LanguageLevel.forElement(node));\n    if (hasProblem) {\n      getHolder().createErrorAnnotation(node, \"raise with no arguments can only be used in an except block\");\n    }\n    hasProblem = UnsupportedFeaturesUtil.raiseHasMoreThenOneArg(node, LanguageLevel.forElement(node));\n    if (hasProblem) {\n      final String message = \"Python 3 does not support this syntax\";\n      getHolder().createWarningAnnotation(node, message).registerFix(createIntention(node, message, new ReplaceRaiseStatementQuickFix()));\n    }\n  }","commit_id":"7670b4f85f4e6633e55ff03eb705795ed0c1984d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void visitPyBinaryExpression(PyBinaryExpression node) {\n    super.visitPyBinaryExpression(node);\n    if (node.isOperator(\"<>\")) {\n      final String message = isPy3K(node) ? \"<> is not supported in Python 3, use != instead\" : \"<> is deprecated, use != instead\";\n      getHolder().createWarningAnnotation(node, message).registerFix(new ReplaceNotEqOperatorIntention());\n    }\n  }","id":69958,"modified_method":"@Override\n  public void visitPyBinaryExpression(PyBinaryExpression node) {\n    super.visitPyBinaryExpression(node);\n    if (isPy3K(node) && node.isOperator(\"<>\")) {\n      final String message = isPy3K(node) ? \"<> is not supported in Python 3, use != instead\" : \"<> is deprecated, use != instead\";\n      getHolder().createWarningAnnotation(node, message).registerFix(createIntention(node, message, new ReplaceNotEqOperatorQuickFix()));\n    }\n  }","commit_id":"7670b4f85f4e6633e55ff03eb705795ed0c1984d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void visitPyStringLiteralExpression(final PyStringLiteralExpression node) {\n    super.visitPyStringLiteralExpression(node);\n    if (isPy3K(node)) {\n      final String text = node.getText();\n      if (text.startsWith(\"u\") || text.startsWith(\"U\")) {\n        getHolder().createWarningAnnotation(node,\n                                            \"String literals do not support a leading \\'u\\' or \\'U\\' in Python 3\")\n          .registerFix(new RemoveLeadingUIntention());\n      }\n    }\n  }","id":69959,"modified_method":"@Override\n  public void visitPyStringLiteralExpression(final PyStringLiteralExpression node) {\n    super.visitPyStringLiteralExpression(node);\n    if (isPy3K(node)) {\n      final String text = node.getText();\n      if (text.startsWith(\"u\") || text.startsWith(\"U\")) {\n        final String message = \"String literals do not support a leading \\'u\\' or \\'U\\' in Python 3\";\n        getHolder().createWarningAnnotation(node, message).registerFix(createIntention(node, message, new RemoveLeadingUQuickFix()));\n      }\n    }\n  }","commit_id":"7670b4f85f4e6633e55ff03eb705795ed0c1984d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void visitPyReprExpression(PyReprExpression node) {\n    super.visitPyReprExpression(node);\n    if (isPy3K(node)) {\n      getHolder().createWarningAnnotation(node, \"Backquote is not supported in Python 3, use repr() instead\").registerFix(new ReplaceBackquoteExpressionIntention());\n    }\n  }","id":69960,"modified_method":"@Override\n  public void visitPyReprExpression(PyReprExpression node) {\n    super.visitPyReprExpression(node);\n    if (isPy3K(node)) {\n      final String message = \"Backquote is not supported in Python 3, use repr() instead\";\n      getHolder().createWarningAnnotation(node, message).registerFix(createIntention(node, message, new ReplaceBackquoteExpressionQuickFix()));\n    }\n  }","commit_id":"7670b4f85f4e6633e55ff03eb705795ed0c1984d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void visitPyDictCompExpression(PyDictCompExpression node) {\n    super.visitPyDictCompExpression(node);\n    LanguageLevel languageLevel = getLanguageLevel(node);\n    if (!languageLevel.supportsSetLiterals()) {\n      getHolder()\n        .createWarningAnnotation(node, \"Python version \" + languageLevel + \" does not support dictionary comprehensions\")\n        .registerFix(new ConvertDictCompIntention());\n    }\n  }","id":69961,"modified_method":"@Override\n  public void visitPyDictCompExpression(PyDictCompExpression node) {\n    super.visitPyDictCompExpression(node);\n    LanguageLevel languageLevel = getLanguageLevel(node);\n    if (!languageLevel.supportsSetLiterals()) {\n      String message = \"Python version \" + languageLevel + \" does not support dictionary comprehensions\";\n      getHolder()\n        .createWarningAnnotation(node, message)\n        .registerFix(createIntention(node, message, new ConvertDictCompQuickFix()));\n    }\n  }","commit_id":"7670b4f85f4e6633e55ff03eb705795ed0c1984d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void visitPyExceptBlock(PyExceptPart node) {\n    super.visitPyExceptBlock(node);\n    PyExpression exceptClass = node.getExceptClass();\n    if (exceptClass != null) {\n      LanguageLevel languageLevel = getLanguageLevel(node);\n      if (languageLevel == LanguageLevel.PYTHON24 || languageLevel == LanguageLevel.PYTHON25) {\n        PsiElement element = exceptClass.getNextSibling();\n        while (element instanceof PsiWhiteSpace) {\n          element = element.getNextSibling();\n        }\n        if (element != null && \"as\".equals(element.getText())) {\n          getHolder().createWarningAnnotation(node, \"This Python version does not support this syntax\");\n        }\n      }\n      else if (isPy3K(node)) {\n        PsiElement element = exceptClass.getNextSibling();\n        while (element instanceof PsiWhiteSpace) {\n          element = element.getNextSibling();\n        }\n        if (element != null && \",\".equals(element.getText())) {\n          getHolder().createWarningAnnotation(node, \"Python 3 does not support this syntax\").registerFix(new ReplaceExceptPartIntention());\n        }\n      }\n    }\n  }","id":69962,"modified_method":"@Override\n  public void visitPyExceptBlock(PyExceptPart node) {\n    super.visitPyExceptBlock(node);\n    PyExpression exceptClass = node.getExceptClass();\n    if (exceptClass != null) {\n      LanguageLevel languageLevel = getLanguageLevel(node);\n      if (languageLevel == LanguageLevel.PYTHON24 || languageLevel == LanguageLevel.PYTHON25) {\n        PsiElement element = exceptClass.getNextSibling();\n        while (element instanceof PsiWhiteSpace) {\n          element = element.getNextSibling();\n        }\n        if (element != null && \"as\".equals(element.getText())) {\n          getHolder().createWarningAnnotation(node, \"This Python version does not support this syntax\");\n        }\n      }\n      else if (isPy3K(node)) {\n        PsiElement element = exceptClass.getNextSibling();\n        while (element instanceof PsiWhiteSpace) {\n          element = element.getNextSibling();\n        }\n        if (element != null && \",\".equals(element.getText())) {\n          String message = \"Python 3 does not support this syntax\";\n          getHolder().createWarningAnnotation(node, message).registerFix(createIntention(node, message, new ReplaceExceptPartQuickFix()));\n        }\n      }\n    }\n  }","commit_id":"7670b4f85f4e6633e55ff03eb705795ed0c1984d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void visitPyCallExpression(PyCallExpression node) {\n    super.visitPyCallExpression(node);\n    if (isPy2(node)) {\n      final PsiElement firstChild = node.getFirstChild();\n      if (firstChild != null) {\n        final String name = firstChild.getText();\n        if (PyNames.SUPER.equals(name)) {\n          final PyArgumentList argumentList = node.getArgumentList();\n          if (argumentList != null && argumentList.getArguments().length == 0) {\n            getHolder().createWarningAnnotation(node, \"super() should have arguments in Python 2\");\n          }\n        }\n      }\n    }\n    /* incorrectly working functionality temporarily removed (PY-1424, PY-1820)\n    else {\n      final String name = node.getCallee().getName();\n      if (\"raw_input\".equals(name)) {\n        getHolder().createWarningAnnotation(node.getCallee(), PyBundle.message(\"ANN.method.$0.removed.use.$1\", name, \"input\")).\n                        registerFix(new ReplaceMethodIntention(\"input\"));\n      }\n      else if (REMOVED_METHODS.contains(name)) {\n        getHolder().createWarningAnnotation(node.getCallee(), PyBundle.message(\"ANN.method.$0.removed\", name));\n      }\n    }\n    */\n  }","id":69963,"modified_method":"@Override\n  public void visitPyCallExpression(PyCallExpression node) {\n    super.visitPyCallExpression(node);\n    if (isPy2(node)) {\n      final PsiElement firstChild = node.getFirstChild();\n      if (firstChild != null) {\n        final String name = firstChild.getText();\n        if (PyNames.SUPER.equals(name)) {\n          final PyArgumentList argumentList = node.getArgumentList();\n          if (argumentList != null && argumentList.getArguments().length == 0) {\n            getHolder().createWarningAnnotation(node, \"super() should have arguments in Python 2\");\n          }\n        }\n      }\n    }\n    else {\n      PyExpression callee = node.getCallee();\n      assert callee != null;\n      PsiReference reference = callee.getReference();\n      if (reference != null) {\n        PsiElement resolved = reference.resolve();\n        if (resolved == null) {\n          final String name = callee.getText();\n          if (UnsupportedFeaturesUtil.BUILTINS.get(getLanguageLevel(callee)).contains(name)) {\n            getHolder().createWarningAnnotation(callee, PyBundle.message(\"ANN.method.$0.removed\", name));\n          }\n        }\n      }\n    }\n  }","commit_id":"7670b4f85f4e6633e55ff03eb705795ed0c1984d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void visitPyNumericLiteralExpression(final PyNumericLiteralExpression node) {\n    super.visitPyNumericLiteralExpression(node);\n    if (isPy3K(node)) {\n      if (!node.isIntegerLiteral()) {\n        return;\n      }\n      final String text = node.getText();\n      if (text.endsWith(\"l\") || text.endsWith(\"L\")) {\n        getHolder().createWarningAnnotation(node,\n                                            \"Integer literals do not support a trailing \\'l\\' or \\'L\\' in Python 3\")\n          .registerFix(new RemoveTrailingLIntention());\n      }\n      if (text.length() > 1 && text.charAt(0) == '0') {\n        final char c = Character.toLowerCase(text.charAt(1));\n        if (c != 'o' && c != 'b' && c != 'x') {\n          boolean isNull = true;\n          for (char a : text.toCharArray()) {\n            if ( a != '0') {\n              isNull = false;\n              break;\n            }\n          }\n          if (!isNull) {\n            getHolder().createWarningAnnotation(node,\n                                              \"Python 3 requires '0o' prefix for octal literals\")\n              .registerFix(new ReplaceOctalNumericLiteralIntention());\n          }\n        }\n      }\n    }\n  }","id":69964,"modified_method":"@Override\n  public void visitPyNumericLiteralExpression(final PyNumericLiteralExpression node) {\n    super.visitPyNumericLiteralExpression(node);\n    if (isPy3K(node)) {\n      if (!node.isIntegerLiteral()) {\n        return;\n      }\n      final String text = node.getText();\n      if (text.endsWith(\"l\") || text.endsWith(\"L\")) {\n        getHolder().createWarningAnnotation(node,\n                                            \"Integer literals do not support a trailing \\'l\\' or \\'L\\' in Python 3\")\n          .registerFix(new RemoveTrailingLIntention());\n      }\n      if (text.length() > 1 && text.charAt(0) == '0') {\n        final char c = Character.toLowerCase(text.charAt(1));\n        if (c != 'o' && c != 'b' && c != 'x') {\n          boolean isNull = true;\n          for (char a : text.toCharArray()) {\n            if ( a != '0') {\n              isNull = false;\n              break;\n            }\n          }\n          if (!isNull) {\n            final String message = \"Python 3 requires '0o' prefix for octal literals\";\n            getHolder().createWarningAnnotation(node, message).registerFix(createIntention(node, message, new ReplaceOctalNumericLiteralQuickFix()));\n          }\n        }\n      }\n    }\n  }","commit_id":"7670b4f85f4e6633e55ff03eb705795ed0c1984d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void visitPyListCompExpression(final PyListCompExpression node) {\n    super.visitPyListCompExpression(node);\n    final List<ComprhForComponent> forComponents = node.getForComponents();\n    for (ComprhForComponent forComponent : forComponents) {\n      final PyExpression iteratedList = forComponent.getIteratedList();\n      if (iteratedList instanceof PyTupleExpression) {\n        getHolder().createWarningAnnotation(iteratedList,\n                                            \"List comprehensions do not support this syntax in Python 3\").registerFix(new ReplaceListComprehensionsIntention());\n      }\n    }\n  }","id":69965,"modified_method":"@Override\n  public void visitPyListCompExpression(final PyListCompExpression node) {\n    super.visitPyListCompExpression(node);\n    if (isPy3K(node)) {\n      final List<ComprhForComponent> forComponents = node.getForComponents();\n      for (ComprhForComponent forComponent : forComponents) {\n        final PyExpression iteratedList = forComponent.getIteratedList();\n        if (iteratedList instanceof PyTupleExpression) {\n          final String message = \"List comprehensions do not support this syntax in Python 3\";\n          getHolder().createWarningAnnotation(iteratedList, message).registerFix(createIntention(iteratedList, message, new ReplaceListComprehensionsQuickFix()));\n        }\n      }\n    }\n  }","commit_id":"7670b4f85f4e6633e55ff03eb705795ed0c1984d","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void checkNewExpression(AnnotationHolder holder, GrNewExpression newExpression, GroovyResolveResult resolveResult) {\n    GrCodeReferenceElement refElement = newExpression.getReferenceElement();\n    LOG.assertTrue(refElement != null);\n    final PsiElement resolved = resolveResult.getElement();\n    if (resolved instanceof PsiMethod) {\n      checkMethodApplicability((PsiMethod) resolved, refElement, holder);\n    } else if (resolved instanceof PsiClass) {\n      //default constructor invocation\n      PsiType[] argumentTypes = PsiUtil.getArgumentTypes(refElement, true);\n      if (argumentTypes != null && argumentTypes.length > 0) {\n        String message = GroovyBundle.message(\"cannot.find.default.constructor\", ((PsiClass) resolved).getName());\n        holder.createWarningAnnotation(refElement.getReferenceNameElement(), message);\n      }\n    } else if (resolved == null && refElement.multiResolve(false).length > 0) {\n      final GrArgumentList argList = newExpression.getArgumentList();\n      PsiElement toHighlight = argList != null ? argList : refElement.getReferenceNameElement();\n      String message = GroovyBundle.message(\"ambiguous.constructor.call\");\n      holder.createWarningAnnotation(toHighlight, message);\n    } else {\n      checkSingleResolvedElement(holder, refElement, resolveResult);\n    }\n  }","id":69966,"modified_method":"private void checkNewExpression(AnnotationHolder holder, GrNewExpression newExpression) {\n    GrCodeReferenceElement refElement = newExpression.getReferenceElement();\n    LOG.assertTrue(refElement != null);\n    final PsiMethod resolved = newExpression.resolveConstructor();\n    if (resolved != null) {\n      checkMethodApplicability(resolved, refElement, holder);\n    } else {\n      final GroovyResolveResult[] results = newExpression.multiResolveConstructor();\n      final GrArgumentList argList = newExpression.getArgumentList();\n      PsiElement toHighlight = argList != null ? argList : refElement.getReferenceNameElement();\n      if (results.length > 0) {\n        String message = GroovyBundle.message(\"ambiguous.constructor.call\");\n        holder.createWarningAnnotation(toHighlight, message);\n      } else {\n        final PsiElement element = refElement.resolve();\n        if (element instanceof PsiClass) {\n          //default constructor invocation\n          PsiType[] argumentTypes = PsiUtil.getArgumentTypes(refElement, true);\n          if (argumentTypes != null && argumentTypes.length > 0) {\n            String message = GroovyBundle.message(\"cannot.find.default.constructor\", ((PsiClass) element).getName());\n            holder.createWarningAnnotation(toHighlight, message);\n          }\n        }\n      }\n    }\n  }","commit_id":"372341dd8e2b4013ef6568de618cb503fa8e0364","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void checkReferenceElement(AnnotationHolder holder, final GrCodeReferenceElement refElement) {\n    final PsiElement parent = refElement.getParent();\n    GroovyResolveResult resolveResult = refElement.advancedResolve();\n    registerUsedImport(refElement, resolveResult);\n    if (refElement.getReferenceName() != null) {\n\n      if (parent instanceof GrNewExpression) {\n        checkNewExpression(holder, (GrNewExpression) parent, resolveResult);\n        return;\n      }\n\n      if (parent instanceof GrImportStatement &&\n          ((GrImportStatement) parent).isStatic() &&\n          refElement.multiResolve(false).length > 0) {\n        return;\n      }\n\n      checkSingleResolvedElement(holder, refElement, resolveResult);\n    }\n\n  }","id":69967,"modified_method":"private void checkReferenceElement(AnnotationHolder holder, final GrCodeReferenceElement refElement) {\n    final PsiElement parent = refElement.getParent();\n    GroovyResolveResult resolveResult = refElement.advancedResolve();\n    registerUsedImport(refElement, resolveResult);\n    if (refElement.getReferenceName() != null) {\n\n      if (parent instanceof GrNewExpression) return;\n\n      if (parent instanceof GrImportStatement &&\n          ((GrImportStatement) parent).isStatic() &&\n          refElement.multiResolve(false).length > 0) {\n        return;\n      }\n\n      checkSingleResolvedElement(holder, refElement, resolveResult);\n    }\n\n  }","commit_id":"372341dd8e2b4013ef6568de618cb503fa8e0364","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void annotate(PsiElement element, AnnotationHolder holder) {\n    if (element instanceof GrCodeReferenceElement) {\n      checkReferenceElement(holder, (GrCodeReferenceElement) element);\n    } else if (element instanceof GrReferenceExpression) {\n      checkReferenceExpression(holder, (GrReferenceExpression) element);\n    } else if (element instanceof GrTypeDefinition) {\n      checkTypeDefinition(holder, (GrTypeDefinition) element);\n      checkTypeDefinitionModifiers(holder, (GrTypeDefinition) element);\n      checkDuplicateMethod(((GrTypeDefinition) element).getBody().getMethods(), holder);\n    } else if (element instanceof GrMethod) {\n      checkMethodDefinitionModifiers(holder, (GrMethod) element);\n      checkInnerMethod(holder, (GrMethod) element);\n    } else if (element instanceof GrVariableDeclaration) {\n      checkVariableDeclaration(holder, (GrVariableDeclaration) element);\n    } else if (element instanceof GrVariable) {\n      checkVariable(holder, (GrVariable) element);\n    } else if (element instanceof GrAssignmentExpression) {\n      checkAssignmentExpression((GrAssignmentExpression) element, holder);\n    } else if (element instanceof GrNamedArgument) {\n      checkCommandArgument((GrNamedArgument) element, holder);\n    } else if (element instanceof GrReturnStatement) {\n      checkReturnStatement((GrReturnStatement) element, holder);\n    } else if (element instanceof GrListOrMap) {\n      checkMap(((GrListOrMap) element).getNamedArguments(), holder);\n    } else if (element instanceof GroovyFile) {\n      final GroovyFile file = (GroovyFile) element;\n      if (file.isScript()) {\n        checkScriptDuplicateMethod(file.getTopLevelDefinitions(), holder);\n      }\n      if (DomainClassUtils.isDomainClass(element.getContainingFile().getVirtualFile())) {\n        checkDomainClass((GroovyFile) element, holder);\n      }\n    } else if (!(element instanceof PsiWhiteSpace) && element.getContainingFile() instanceof GroovyFile) {\n      GroovyImportsTracker.getInstance(element.getProject()).markFileAnnotated((GroovyFile) element.getContainingFile());\n    }\n  }","id":69968,"modified_method":"public void annotate(PsiElement element, AnnotationHolder holder) {\n    if (element instanceof GrCodeReferenceElement) {\n      checkReferenceElement(holder, (GrCodeReferenceElement) element);\n    } else if (element instanceof GrReferenceExpression) {\n      checkReferenceExpression(holder, (GrReferenceExpression) element);\n    } else if (element instanceof GrTypeDefinition) {\n      checkTypeDefinition(holder, (GrTypeDefinition) element);\n      checkTypeDefinitionModifiers(holder, (GrTypeDefinition) element);\n      checkDuplicateMethod(((GrTypeDefinition) element).getBody().getMethods(), holder);\n    } else if (element instanceof GrMethod) {\n      checkMethodDefinitionModifiers(holder, (GrMethod) element);\n      checkInnerMethod(holder, (GrMethod) element);\n    } else if (element instanceof GrVariableDeclaration) {\n      checkVariableDeclaration(holder, (GrVariableDeclaration) element);\n    } else if (element instanceof GrVariable) {\n      checkVariable(holder, (GrVariable) element);\n    } else if (element instanceof GrAssignmentExpression) {\n      checkAssignmentExpression((GrAssignmentExpression) element, holder);\n    } else if (element instanceof GrNamedArgument) {\n      checkCommandArgument((GrNamedArgument) element, holder);\n    } else if (element instanceof GrReturnStatement) {\n      checkReturnStatement((GrReturnStatement) element, holder);\n    } else if (element instanceof GrListOrMap) {\n      checkMap(((GrListOrMap) element).getNamedArguments(), holder);\n    } else if (element instanceof GrNewExpression) {\n      checkNewExpression(holder, (GrNewExpression) element);\n    } else if (element instanceof GroovyFile) {\n      final GroovyFile file = (GroovyFile) element;\n      if (file.isScript()) {\n        checkScriptDuplicateMethod(file.getTopLevelDefinitions(), holder);\n      }\n      if (DomainClassUtils.isDomainClass(element.getContainingFile().getVirtualFile())) {\n        checkDomainClass((GroovyFile) element, holder);\n      }\n    } else if (!(element instanceof PsiWhiteSpace) && element.getContainingFile() instanceof GroovyFile) {\n      GroovyImportsTracker.getInstance(element.getProject()).markFileAnnotated((GroovyFile) element.getContainingFile());\n    }\n  }","commit_id":"372341dd8e2b4013ef6568de618cb503fa8e0364","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void onSetUp() throws Exception {\n\t\tThread.currentThread().setContextClassLoader(cl);\n\t\tcl.loadClass(\"org.codehaus.groovy.grails.domain.CircularRelationship\");\n\t\tClass[] loadedClasses = cl.getLoadedClasses();\n\t\tgrailsApplication = new DefaultGrailsApplication(loadedClasses,cl);\n\t\t\n\n\t\tDefaultGrailsDomainConfiguration config = new DefaultGrailsDomainConfiguration();\n\t\tconfig.setGrailsApplication(this.grailsApplication);\n\t\tProperties props = new Properties();\n\t\tprops.put(\"hibernate.connection.username\",\"sa\");\n\t\tprops.put(\"hibernate.connection.password\",\"\");\n\t\tprops.put(\"hibernate.connection.url\",\"jdbc:hsqldb:mem:grailsDB\");\n\t\tprops.put(\"hibernate.connection.driver_class\",\"org.hsqldb.jdbcDriver\");\n\t\tprops.put(\"hibernate.dialect\",\"org.hibernate.dialect.HSQLDialect\");\n\t\tprops.put(\"hibernate.hbm2ddl.auto\",\"create-drop\");\n\t\t\n\t\t//props.put(\"hibernate.hbm2ddl.auto\",\"update\");\t\t\n\t\tconfig.setProperties(props);\n\t\t//originalClassLoader = Thread.currentThread().getContextClassLoader();\n\t\tThread.currentThread().setContextClassLoader(this.cl);\t\t\n\t\tthis.sessionFactory = config.buildSessionFactory();\n\t\t\n\t\t\n\t\t\t\n\t\tif(!TransactionSynchronizationManager.hasResource(this.sessionFactory)) {\n\t\t\tSession hibSession = this.sessionFactory.openSession();\n\t\t    TransactionSynchronizationManager.bindResource(this.sessionFactory, new SessionHolder(hibSession));\n\t\t}\t\t\n\t\t\n\t}","id":69969,"modified_method":"protected void onSetUp() throws Exception {\n\t\tThread.currentThread().setContextClassLoader(cl);\n\t\tcl.loadClass(\"org.codehaus.groovy.grails.domain.CircularRelationship\",true,false);\n\t\tClass[] loadedClasses = cl.getLoadedClasses();\n\t\tgrailsApplication = new DefaultGrailsApplication(loadedClasses,cl);\n\t\t\n\n\t\tDefaultGrailsDomainConfiguration config = new DefaultGrailsDomainConfiguration();\n\t\tconfig.setGrailsApplication(this.grailsApplication);\n\t\tProperties props = new Properties();\n\t\tprops.put(\"hibernate.connection.username\",\"sa\");\n\t\tprops.put(\"hibernate.connection.password\",\"\");\n\t\tprops.put(\"hibernate.connection.url\",\"jdbc:hsqldb:mem:grailsDB\");\n\t\tprops.put(\"hibernate.connection.driver_class\",\"org.hsqldb.jdbcDriver\");\n\t\tprops.put(\"hibernate.dialect\",\"org.hibernate.dialect.HSQLDialect\");\n\t\tprops.put(\"hibernate.hbm2ddl.auto\",\"create-drop\");\n\t\t\n\t\t//props.put(\"hibernate.hbm2ddl.auto\",\"update\");\t\t\n\t\tconfig.setProperties(props);\n\t\t//originalClassLoader = Thread.currentThread().getContextClassLoader();\n\t\tThread.currentThread().setContextClassLoader(this.cl);\t\t\n\t\tthis.sessionFactory = config.buildSessionFactory();\n\t\t\n\t\t\n\t\t\t\n\t\tif(!TransactionSynchronizationManager.hasResource(this.sessionFactory)) {\n\t\t\tSession hibSession = this.sessionFactory.openSession();\n\t\t    TransactionSynchronizationManager.bindResource(this.sessionFactory, new SessionHolder(hibSession));\n\t\t}\t\t\n\t\t\n\t}","commit_id":"010221f8cf00b39fcb0f475cdd08f8d71301edb9","url":"https://github.com/grails/grails-core"},{"original_method":"public void testReloadingClasses() throws Exception {\n\t\tfinal GroovyClassLoader cl = new GroovyClassLoader(Thread.currentThread().getContextClassLoader());\n\t\tcl.setResourceLoader( new GroovyResourceLoader() {\n\t\t\tpublic URL loadGroovySource(String filename) throws MalformedURLException {\n\t\t\t\tfilename = filename.replace('.', '/') + \".groovy\";\n\t\t\t\treturn cl.getResource(filename);\n\t\t\t}\t\t\t\t\n\t\t}\n\t);\t\t\n\t\t\n\t\tFile file = new File(cl.getResource(\"org/codehaus/groovy/grails/commons/TestReload.groovy\").getFile());\n\t\t\n\t\tFileWriter fw = new FileWriter(file);\n\t\ttry {\n\t\t\tfw.write(  \"package org.codehaus.groovy.grails.commons;\\n\" +\n\t\t\t\t\t\t\"class TestReload { \\n\" +\n\t\t\t\t\t\t\t\"@Property hello = \\\"hello\\\"\\n\" +\n\t\t\t\t\t\t\"}\");\t\t\n\t\t\tfw.close();\n\t\t\t\n\t\t\tClass groovyClass = cl.loadClass(\"org.codehaus.groovy.grails.commons.TestReload\",true,false);\n\n\t\t\t\n\t\t\t\n\t\t\tGroovyObject go = (GroovyObject)groovyClass.newInstance();\n\t\t\t\n\t\t\tassertEquals(\"hello\", go.getProperty(\"hello\"));\n\t\t\t\n\t\t\t// change class\n\t\t\tfw = new FileWriter(file);\n\t\t\tfw.write(  \"package org.codehaus.groovy.grails.commons;\\n\" +\n\t\t\t\t\t\"class TestReload { \\n\" +\n\t\t\t\t\t\t\"@Property hello = \\\"goodbye\\\"\\n\" +\n\t\t\t\t\t\"}\");\n            fw.close();\n\n            // reload\n\t\t\tgroovyClass = cl.loadClass(\"org.codehaus.groovy.grails.commons.TestReload\",true,false);\t\t\t\n\t\t\tgo = (GroovyObject)groovyClass.newInstance();\t\t\t\n\t\t\tassertEquals(\"goodbye\", go.getProperty(\"hello\"));\t\t\t\n\t\t}\n\t\tfinally {\n\t\t\tfw.close();\n\t\t}\n\t}","id":69970,"modified_method":"public void testReloadingClasses() throws Exception {\n\t\tfinal GroovyClassLoader cl = new GroovyClassLoader(getClass().getClassLoader());\n\t\tcl.setShouldRecompile(Boolean.TRUE);\n\t\tcl.setResourceLoader( new GroovyResourceLoader() {\n\t\t\tpublic URL loadGroovySource(String filename) throws MalformedURLException {\n\t\t\t\tfilename = filename.replace('.', '/') + \".groovy\";\n\t\t\t\treturn cl.getResource(filename);\n\t\t\t}\t\t\t\t\n\t\t}\n\t);\t\t\n\t\t\n\t\tFile file = new File(cl.getResource(\"org/codehaus/groovy/grails/commons/TestReload.groovy\").getFile());\n\t\t\n\t\tFileWriter fw = new FileWriter(file);\n\t\ttry {\n\t\t\tfw.write(  \"package org.codehaus.groovy.grails.commons;\\n\" +\n\t\t\t\t\t\t\"class TestReload { \\n\" +\n\t\t\t\t\t\t\t\"@Property hello = \\\"hello\\\"\\n\" +\n\t\t\t\t\t\t\"}\");\t\t\n\t\t\tfw.close();\n\t\t\t\n\t\t\tClass groovyClass = cl.loadClass(\"org.codehaus.groovy.grails.commons.TestReload\",true,false);\n\n\t\t\t\n\t\t\t\n\t\t\tGroovyObject go = (GroovyObject)groovyClass.newInstance();\n\t\t\t\n\t\t\tassertEquals(\"hello\", go.getProperty(\"hello\"));\n\t\t\t\n\t\t\t// change class\n\t\t\tfw = new FileWriter(file);\n\t\t\tfw.write(  \"package org.codehaus.groovy.grails.commons;\\n\" +\n\t\t\t\t\t\"class TestReload { \\n\" +\n\t\t\t\t\t\t\"@Property hello = \\\"goodbye\\\"\\n\" +\n\t\t\t\t\t\"}\");\n            fw.close();\n\n            // reload\n\t\t\tgroovyClass = cl.loadClass(\"org.codehaus.groovy.grails.commons.TestReload\",true,false);\t\t\t\n\t\t\tgo = (GroovyObject)groovyClass.newInstance();\t\t\t\n\t\t\tassertEquals(\"goodbye\", go.getProperty(\"hello\"));\t\t\t\n\t\t}\n\t\tfinally {\n\t\t\tfw.close();\n\t\t}\n\t}","commit_id":"010221f8cf00b39fcb0f475cdd08f8d71301edb9","url":"https://github.com/grails/grails-core"},{"original_method":"public DefaultGrailsApplication(final Resource[] resources) throws IOException {\n        super();\n\n        log.debug(\"Loading Grails application.\");\n\n        GrailsResourceLoader resourceLoader = new GrailsResourceLoader(resources);\n        GrailsResourceHolder resourceHolder = new GrailsResourceHolder();\n\n        this.cl = new GroovyClassLoader();\n        this.cl.setResourceLoader(resourceLoader);\n           Collection loadedResources = new ArrayList();\n\n            for (int i = 0; resources != null && i < resources.length; i++) {\n                log.debug(\"Loading groovy file :[\" + resources[i].getFile().getAbsolutePath() + \"]\");\n                if (!loadedResources.contains(resources[i])) {\n                    try {\n                        String className = resourceHolder.getClassName(resources[i]);\n                        if(!StringUtils.isBlank(className)) {\n                            cl.loadClass(className,true,false);\n                            loadedResources = resourceLoader.getLoadedResources();\n                        }\n                    } catch (ClassNotFoundException e) {\n                        throw new org.codehaus.groovy.grails.exceptions.CompilationFailedException(\"Compilation error parsing file [\"+resources[i].getFilename()+\"]: \" + e.getMessage(), e);\n                    }\n                }\n            }\n\n        // get all the classes that were loaded\n        if(log.isDebugEnabled())\n            log.debug( \"loaded classes: [\"+ArrayUtils.toString(this.cl.getLoadedClasses())+\"]\" );\n\n        Class[] classes = this.cl.getLoadedClasses();\n        this.allClasses = classes;\n        configureLoadedClasses(classes);\n    }","id":69971,"modified_method":"public DefaultGrailsApplication(final Resource[] resources) throws IOException {\n        super();\n\n        log.debug(\"Loading Grails application.\");\n\n        GrailsResourceLoader resourceLoader = new GrailsResourceLoader(resources);\n        GrailsResourceHolder resourceHolder = new GrailsResourceHolder();\n\n        this.cl = new GroovyClassLoader();\n        this.cl.setShouldRecompile(Boolean.TRUE);\n        this.cl.setResourceLoader(resourceLoader);\n           Collection loadedResources = new ArrayList();\n\n            for (int i = 0; resources != null && i < resources.length; i++) {\n                log.debug(\"Loading groovy file :[\" + resources[i].getFile().getAbsolutePath() + \"]\");\n                if (!loadedResources.contains(resources[i])) {\n                    try {\n                        String className = resourceHolder.getClassName(resources[i]);\n                        if(!StringUtils.isBlank(className)) {\n                            cl.loadClass(className,true,false);\n                            loadedResources = resourceLoader.getLoadedResources();\n                        }\n                    } catch (ClassNotFoundException e) {\n                        throw new org.codehaus.groovy.grails.exceptions.CompilationFailedException(\"Compilation error parsing file [\"+resources[i].getFilename()+\"]: \" + e.getMessage(), e);\n                    }\n                }\n            }\n\n        // get all the classes that were loaded\n        if(log.isDebugEnabled())\n            log.debug( \"loaded classes: [\"+ArrayUtils.toString(this.cl.getLoadedClasses())+\"]\" );\n\n        Class[] classes = this.cl.getLoadedClasses();\n        this.allClasses = classes;\n        configureLoadedClasses(classes);\n    }","commit_id":"010221f8cf00b39fcb0f475cdd08f8d71301edb9","url":"https://github.com/grails/grails-core"},{"original_method":"public void testScaffoldedController() throws Exception {\n\t\t\n\t\tGroovyClassLoader cl = new GroovyClassLoader();\n\t\tcl.parseClass(\"class Test { @Property Long id\\n@Property Long version\\n}\");\n\t\tClass clazz = cl.parseClass(\"class TestController { @Property scaffold = Test.class } \");\n\t\tGrailsControllerClass grailsClass = new DefaultGrailsControllerClass(clazz);\n\n        assertEquals(\"Test\", grailsClass.getName());\n\t\tassertEquals(\"TestController\", grailsClass.getFullName());\n\t\tassertEquals(\"/test/list\", grailsClass.getViewByURI(\"/test/list\"));\n        assertEquals(\"index\",grailsClass.getClosurePropertyName(\"/test\"));\n        assertEquals(\"create\",grailsClass.getClosurePropertyName(\"/test/create\"));\n        assertTrue(grailsClass.mapsToURI(\"/test\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/show\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/show/**\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/list\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/list/**\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/create\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/create/**\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/save\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/save/**\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/edit\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/edit/**\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/delete\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/delete/**\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/update\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/update/**\"));        \n        assertEquals(18, grailsClass.getURIs().length);\n\n\t}","id":69972,"modified_method":"public void testScaffoldedController() throws Exception {\n\t\t\n\t\tGroovyClassLoader cl = new GroovyClassLoader();\n\t\tClass clazz = cl.parseClass(\"class TestController { @Property scaffold = Test.class } \\nclass Test { @Property Long id\\n@Property Long version\\n}\");\n\t\tGrailsControllerClass grailsClass = new DefaultGrailsControllerClass(clazz);\n\n        assertEquals(\"Test\", grailsClass.getName());\n\t\tassertEquals(\"TestController\", grailsClass.getFullName());\n\t\tassertEquals(\"/test/list\", grailsClass.getViewByURI(\"/test/list\"));\n        assertEquals(\"index\",grailsClass.getClosurePropertyName(\"/test\"));\n        assertEquals(\"create\",grailsClass.getClosurePropertyName(\"/test/create\"));\n        assertTrue(grailsClass.mapsToURI(\"/test\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/show\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/show/**\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/list\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/list/**\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/create\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/create/**\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/save\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/save/**\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/edit\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/edit/**\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/delete\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/delete/**\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/update\"));\n        assertTrue(grailsClass.mapsToURI(\"/test/update/**\"));        \n        assertEquals(18, grailsClass.getURIs().length);\n\n\t}","commit_id":"010221f8cf00b39fcb0f475cdd08f8d71301edb9","url":"https://github.com/grails/grails-core"},{"original_method":"public void testGetTagLibForTag() throws Exception {\n\t\tGroovyClassLoader gcl = new GroovyClassLoader();\n        Class controllerClass = gcl.parseClass( \"class TestController {\\n\" +\n\t\t\t\t\t\t\t\t\t                \"@Property list = {\\n\" +\n\t\t\t\t\t\t\t\t\t                \"}\\n\" +\n\t\t\t\t\t\t\t\t\t                \"}\" );\n        Class tagLibClass1 = gcl.parseClass( \"class FirstTagLib {\\n\" +\n\t\t\t\t\t\t\t\t                \"@Property firstTag = {\\n\" +\n\t\t\t\t\t\t\t\t                \"}\\n\" +\n\t\t\t\t\t\t\t\t                \"}\" ); \n        Class tagLibClass2 = gcl.parseClass( \"class SecondTagLib {\\n\" +\n                \"@Property secondTag = {\\n\" +\n                \"}\\n\" +\n                \"}\" );        \n        \n\t\tGrailsApplicationAttributes attrs = getAttributesForClasses(new Class[]{controllerClass,tagLibClass1,tagLibClass2},gcl);\n\t\tassertNotNull(attrs);\n\t\tassertNotNull(attrs.getApplicationContext());\n\t\tassertNotNull(attrs.getGrailsApplication());\n\t\t\n\t\tMockHttpServletRequest request = new MockHttpServletRequest();\n\t\tGroovyObject controller = (GroovyObject)attrs.getApplicationContext().getBean(\"TestController\");\n\t\tSimpleGrailsControllerHelper helper = new SimpleGrailsControllerHelper(attrs.getGrailsApplication(),attrs.getApplicationContext(),attrs.getServletContext());\n\t\tnew ControllerDynamicMethods(controller,helper,request,null);\n\t\t\n\t\trequest.setAttribute(GrailsApplicationAttributes.CONTROLLER,controller );\n\t\tGroovyObject tagLib1 = attrs.getTagLibraryForTag(request,\"firstTag\");\n\t\tassertNotNull(tagLib1);\n\t\tassertNotNull(request.getAttribute(GrailsApplicationAttributes.TAG_CACHE));\n\t\tMap tagCache = (Map)request.getAttribute(GrailsApplicationAttributes.TAG_CACHE);\n\t\t\n\t\tassertNotNull(tagCache.get(\"firstTag\"));\n\t\t\n\t\t\n\t}","id":69973,"modified_method":"public void testGetTagLibForTag() throws Exception {\n\t\tGroovyClassLoader gcl = new GroovyClassLoader();\n        gcl.parseClass( \"class TestController {\\n\" +\n\t\t\t\t\t\t\t\t\t                \"@Property list = {\\n\" +\n\t\t\t\t\t\t\t\t\t                \"}\\n\" +\n\t\t\t\t\t\t\t\t\t                \"}\\n\" +\n\t\t\t             \"class FirstTagLib {\\n\" +\n\t\t\t\t\t\t              \"@Property firstTag = {\\n\" +\n\t\t\t\t\t\t              \"}\\n\" +\n\t\t\t\t\t\t \"}\\n\" +\n\t\t\t\t\t\t \"class SecondTagLib {\\n\" +\n\t\t\t\t\t\t \t\"@Property secondTag = {\\n\" +\n\t\t\t\t\t\t \"}\\n\" +\n                \"}\" );        \n        \n\t\tGrailsApplicationAttributes attrs = getAttributesForClasses(gcl.getLoadedClasses(),gcl);\n\t\tassertNotNull(attrs);\n\t\tassertNotNull(attrs.getApplicationContext());\n\t\tassertNotNull(attrs.getGrailsApplication());\n\t\t\n\t\tMockHttpServletRequest request = new MockHttpServletRequest();\n\t\tGroovyObject controller = (GroovyObject)attrs.getApplicationContext().getBean(\"TestController\");\n\t\tSimpleGrailsControllerHelper helper = new SimpleGrailsControllerHelper(attrs.getGrailsApplication(),attrs.getApplicationContext(),attrs.getServletContext());\n\t\tnew ControllerDynamicMethods(controller,helper,request,null);\n\t\t\n\t\trequest.setAttribute(GrailsApplicationAttributes.CONTROLLER,controller );\n\t\tGroovyObject tagLib1 = attrs.getTagLibraryForTag(request,\"firstTag\");\n\t\tassertNotNull(tagLib1);\n\t\tassertNotNull(request.getAttribute(GrailsApplicationAttributes.TAG_CACHE));\n\t\tMap tagCache = (Map)request.getAttribute(GrailsApplicationAttributes.TAG_CACHE);\n\t\t\n\t\tassertNotNull(tagCache.get(\"firstTag\"));\n\t\t\n\t\t\n\t}","commit_id":"010221f8cf00b39fcb0f475cdd08f8d71301edb9","url":"https://github.com/grails/grails-core"},{"original_method":"protected void doFilterInternal(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, FilterChain filterChain) throws ServletException, IOException {\n      context = (ApplicationContext)getServletContext().getAttribute(GrailsApplicationAttributes.APPLICATION_CONTEXT);\n\n      if(context == null) {\n          filterChain.doFilter(httpServletRequest,httpServletResponse);\n          return;\n      }\n      application = (GrailsApplication)context.getBean(GrailsApplication.APPLICATION_ID);\n      if(application == null) {\n          filterChain.doFilter(httpServletRequest,httpServletResponse);\n          return;\n      }\n\n      if(copyScript == null) {\n          GroovyClassLoader gcl = new GroovyClassLoader(Thread.currentThread().getContextClassLoader());\n\n          Class groovyClass;\n          try {\n              groovyClass = gcl.parseClass(gcl.getResource(\"org/codehaus/groovy/grails/web/servlet/filter/GrailsResourceCopier.groovy\").openStream());\n              copyScript = (ResourceCopier)groovyClass.newInstance();\n              groovyClass = gcl.parseClass(gcl.getResource(\"org/codehaus/groovy/grails/scaffolding/DefaultGrailsTemplateGenerator.groovy\").openStream());\n              templateGenerator = (GrailsTemplateGenerator)groovyClass.newInstance();\n              templateGenerator.setOverwrite(true);\n              // perform initial generation of views\n              GrailsControllerClass[] controllers = application.getControllers();\n              for (int i = 0; i < controllers.length; i++) {\n                  GrailsControllerClass controller = controllers[i];\n                  if(controller.isScaffolding()) {\n                    Class clazz = controller.getScaffoldedClass();\n                    GrailsDomainClass domainClass;\n                    if(clazz != null) {\n                       domainClass = application.getGrailsDomainClass(clazz.getName());\n                    }\n                    else {\n                       domainClass = application.getGrailsDomainClass(controller.getName());\n                    }\n                    if(domainClass != null) {\n                        // generate new views\n                        templateGenerator.generateViews(domainClass,getServletContext().getRealPath(\"/WEB-INF\"));\n                    }\n                  }\n              }\n            // overwrite with user defined views\n            copyScript.copyViews(true);\n          } catch (IllegalAccessException e) {\n              LOG.error(\"Illegal access creating resource copier. Save/reload disabled: \" + e.getMessage(), e);\n          } catch (InstantiationException e) {\n              LOG.error(\"Error instantiating resource copier. Save/reload disabled: \" + e.getMessage(), e);\n          } catch (CompilationFailedException e) {\n               LOG.error(\"Error compiling resource copier. Save/reload disabled: \" + e.getMessage(), e);\n          } catch(Exception e) {\n             LOG.error(\"Error loading resource copier. Save/reload disabled: \" + e.getMessage(), e);\n          }\n        }\n        if(copyScript != null) {\n            copyScript.copyGrailsApp();\n        }\n\n        GrailsResourceHolder resourceHolder = (GrailsResourceHolder)context.getBean(GrailsResourceHolder.APPLICATION_CONTEXT_ID);\n        Resource[] resources = resourceHolder.getResources();\n\n        if(!initialised) {\n            for (int i = 0; i < resources.length; i++) {\n                Resource resource = resources[i];\n                String className = resourceHolder.getClassName(resources[i]);\n                URL url = resource.getURL();\n                URLConnection c = url.openConnection();\n                c.setDoInput(false);\n                c.setDoOutput(false);\n                long lastModified = c.getLastModified();\n\n                ResourceMeta rm = new ResourceMeta();\n                rm.className = className;\n                rm.lastModified = lastModified;\n                rm.url = url;\n                resourceMetas.put(className, rm);\n            }\n\n            initialised = true;\n        }\n        else {\n\n            for (int i = 0; i < resources.length; i++) {\n                Resource resource = resources[i];\n                String className = resourceHolder.getClassName(resources[i]);\n\n                Class loadedClass = null;\n                boolean isNew = false;\n                // if its not in the resource metas its new.. so load it\n                try {\n                    if(!resourceMetas.containsKey(className)) {\n                        // add to resource metas\n                        URL url = resource.getURL();\n                        URLConnection c = url.openConnection();\n                        c.setDoInput(false);\n                        c.setDoOutput(false);\n                        long lastModified = c.getLastModified();\n\n                        ResourceMeta rm = new ResourceMeta();\n                        rm.className = className;\n                        rm.lastModified = lastModified;\n                        rm.url = url;\n                        resourceMetas.put(className, rm);\n                        // load class\n                        GroovyClassLoader gcl = application.getClassLoader();\n                        ((GrailsResourceLoader)gcl.getResourceLoader()).setResources(resources);\n                        loadedClass = gcl.loadClass(className,true,false);\n                        // set as new\n                        isNew = true;\n                    }\n                    // otherwise check the last modified date\n                    else {\n                        ResourceMeta rm = (ResourceMeta)resourceMetas.get(className);\n                        URL url = resource.getURL();\n                        URLConnection c = url.openConnection();\n                        // if its been modified reload it\n                        if(rm.lastModified < c.getLastModified()) {\n                            loadedClass = application\n                                        .getClassLoader()\n                                        .loadClass(className,true,false);\n                            rm.lastModified = c.getLastModified();\n                        }\n                    }\n                    // if the loaded class is not null then we have a change\n                    if(loadedClass != null) {\n                          loadGrailsClass(loadedClass,isNew);\n                    }\n                }\n                catch(ClassNotFoundException cnfex) {\n                     LOG.error(\"Unabled to reload class [\"+className+\"], class not found: \" + cnfex.getMessage(),cnfex);\n                }\n            }\n        }\n\n        filterChain.doFilter(httpServletRequest,httpServletResponse);\n    }","id":69974,"modified_method":"protected void doFilterInternal(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, FilterChain filterChain) throws ServletException, IOException {\n      context = (ApplicationContext)getServletContext().getAttribute(GrailsApplicationAttributes.APPLICATION_CONTEXT);\n\n      if(context == null) {\n          filterChain.doFilter(httpServletRequest,httpServletResponse);\n          return;\n      }\n      application = (GrailsApplication)context.getBean(GrailsApplication.APPLICATION_ID);\n      if(application == null) {\n          filterChain.doFilter(httpServletRequest,httpServletResponse);\n          return;\n      }\n\n      if(copyScript == null) {\n          GroovyClassLoader gcl = new GroovyClassLoader(getClass().getClassLoader());\n\n          Class groovyClass;\n          try {\n              groovyClass = gcl.parseClass(gcl.getResource(\"org/codehaus/groovy/grails/web/servlet/filter/GrailsResourceCopier.groovy\").openStream());\n              copyScript = (ResourceCopier)groovyClass.newInstance();\n              groovyClass = gcl.loadClass(\"org.codehaus.groovy.grails.scaffolding.DefaultGrailsTemplateGenerator\");\n              templateGenerator = (GrailsTemplateGenerator)groovyClass.newInstance();\n              templateGenerator.setOverwrite(true);\n              // perform initial generation of views\n              GrailsControllerClass[] controllers = application.getControllers();\n              for (int i = 0; i < controllers.length; i++) {\n                  GrailsControllerClass controller = controllers[i];\n                  if(controller.isScaffolding()) {\n                    Class clazz = controller.getScaffoldedClass();\n                    GrailsDomainClass domainClass;\n                    if(clazz != null) {\n                       domainClass = application.getGrailsDomainClass(clazz.getName());\n                    }\n                    else {\n                       domainClass = application.getGrailsDomainClass(controller.getName());\n                    }\n                    if(domainClass != null) {\n                        // generate new views\n                        templateGenerator.generateViews(domainClass,getServletContext().getRealPath(\"/WEB-INF\"));\n                    }\n                  }\n              }\n            // overwrite with user defined views\n            copyScript.copyViews(true);\n          } catch (IllegalAccessException e) {\n              LOG.error(\"Illegal access creating resource copier. Save/reload disabled: \" + e.getMessage(), e);\n          } catch (InstantiationException e) {\n              LOG.error(\"Error instantiating resource copier. Save/reload disabled: \" + e.getMessage(), e);\n          } catch (CompilationFailedException e) {\n               LOG.error(\"Error compiling resource copier. Save/reload disabled: \" + e.getMessage(), e);\n          } catch(Exception e) {\n             LOG.error(\"Error loading resource copier. Save/reload disabled: \" + e.getMessage(), e);\n          }\n        }\n        if(copyScript != null) {\n            copyScript.copyGrailsApp();\n        }\n\n        GrailsResourceHolder resourceHolder = (GrailsResourceHolder)context.getBean(GrailsResourceHolder.APPLICATION_CONTEXT_ID);\n        Resource[] resources = resourceHolder.getResources();\n\n        if(!initialised) {\n            for (int i = 0; i < resources.length; i++) {\n                Resource resource = resources[i];\n                String className = resourceHolder.getClassName(resources[i]);\n                URL url = resource.getURL();\n                URLConnection c = url.openConnection();\n                c.setDoInput(false);\n                c.setDoOutput(false);\n                long lastModified = c.getLastModified();\n\n                ResourceMeta rm = new ResourceMeta();\n                rm.className = className;\n                rm.lastModified = lastModified;\n                rm.url = url;\n                resourceMetas.put(className, rm);\n            }\n\n            initialised = true;\n        }\n        else {\n\n            for (int i = 0; i < resources.length; i++) {\n                Resource resource = resources[i];\n                String className = resourceHolder.getClassName(resources[i]);\n\n                Class loadedClass = null;\n                boolean isNew = false;\n                // if its not in the resource metas its new.. so load it\n                try {\n                    if(!resourceMetas.containsKey(className)) {\n                        // add to resource metas\n                        URL url = resource.getURL();\n                        URLConnection c = url.openConnection();\n                        c.setDoInput(false);\n                        c.setDoOutput(false);\n                        long lastModified = c.getLastModified();\n\n                        ResourceMeta rm = new ResourceMeta();\n                        rm.className = className;\n                        rm.lastModified = lastModified;\n                        rm.url = url;\n                        resourceMetas.put(className, rm);\n                        // load class\n                        GroovyClassLoader gcl = application.getClassLoader();\n                        ((GrailsResourceLoader)gcl.getResourceLoader()).setResources(resources);\n                        loadedClass = gcl.loadClass(className,true,false);\n                        // set as new\n                        isNew = true;\n                    }\n                    // otherwise check the last modified date\n                    else {\n                        ResourceMeta rm = (ResourceMeta)resourceMetas.get(className);\n                        URL url = resource.getURL();\n                        URLConnection c = url.openConnection();\n                        // if its been modified reload it\n                        if(rm.lastModified < c.getLastModified()) {\n                            loadedClass = application\n                                        .getClassLoader()\n                                        .loadClass(className,true,false);\n                            rm.lastModified = c.getLastModified();\n                        }\n                    }\n                    // if the loaded class is not null then we have a change\n                    if(loadedClass != null) {\n                          loadGrailsClass(loadedClass,isNew);\n                    }\n                }\n                catch(ClassNotFoundException cnfex) {\n                     LOG.error(\"Unabled to reload class [\"+className+\"], class not found: \" + cnfex.getMessage(),cnfex);\n                }\n            }\n        }\n\n        filterChain.doFilter(httpServletRequest,httpServletResponse);\n    }","commit_id":"010221f8cf00b39fcb0f475cdd08f8d71301edb9","url":"https://github.com/grails/grails-core"},{"original_method":"public void testInvokeOneTagLibFromOther() throws Exception {\n\t\tGroovyClassLoader gcl = new GroovyClassLoader();\n        Class controllerClass = gcl.parseClass( \"class TestController {\\n\" +\n\t\t\t\t\t\t\t\t\t                \"@Property list = {\\n\" +\n\t\t\t\t\t\t\t\t\t                \"}\\n\" +\n\t\t\t\t\t\t\t\t\t                \"}\" );\n        Class tagLibClass1 = gcl.parseClass( \"class FirstTagLib {\\n\" +\n\t\t\t\t\t\t\t\t                \"@Property firstTag = { attrs ->\\n\" +\n\t\t\t\t\t\t\t\t                \"attrs.remove('test')\" +\n\t\t\t\t\t\t\t\t                \"}\\n\" +\n\t\t\t\t\t\t\t\t                \"}\" ); \n        Class tagLibClass2 = gcl.parseClass( \"class SecondTagLib {\\n\" +\n                \"@Property secondTag = { attrs ->\\n\" +\n                \t\"firstTag(attrs)\\n\" +                \t\n                \"}\\n\" +\n                \"}\" );        \n        \n\t\tGrailsApplicationAttributes attrs = getAttributesForClasses(new Class[]{controllerClass,tagLibClass1,tagLibClass2},gcl);\n\t\tassertNotNull(attrs);\n\t\tassertNotNull(attrs.getApplicationContext());\n\t\tassertNotNull(attrs.getGrailsApplication());\n\t\t\n\t\tMockHttpServletRequest request = new MockHttpServletRequest();\n\t\tGroovyObject controller = (GroovyObject)attrs.getApplicationContext().getBean(\"TestController\");\n\t\tSimpleGrailsControllerHelper helper = new SimpleGrailsControllerHelper(attrs.getGrailsApplication(),attrs.getApplicationContext(),attrs.getServletContext());\n\t\tnew ControllerDynamicMethods(controller,helper,request,null);\n\t\t\n\t\trequest.setAttribute(GrailsApplicationAttributes.CONTROLLER,controller );\n\t\tGroovyObject tagLib2 = attrs.getTagLibraryForTag(request,\"secondTag\");\n\t\tassertNotNull(tagLib2);\n\n\t\tClosure secondTag = (Closure)tagLib2.getProperty(\"secondTag\");\n\t\tMap tagAttrs = new HashMap();\n\t\ttagAttrs.put(\"test\",\"test\");\n\t\tsecondTag.call(new Object[]{tagAttrs});\n\t\tassertFalse(tagAttrs.containsKey(\"test\"));\n\t\t\n\t}","id":69975,"modified_method":"public void testInvokeOneTagLibFromOther() throws Exception {\n\t\tGroovyClassLoader gcl = new GroovyClassLoader();\n        gcl.parseClass( \"class TestController {\\n\" +\n\t\t\t\t\t\t\t\t\t                \"@Property list = {\\n\" +\n\t\t\t\t\t\t\t\t\t                \"}\\n\" +\n\t\t\t\t\t\t\t\t\t                \"}\\n\" +\n\t\t\t\t\t\t\"class FirstTagLib {\\n\" +\n\t\t\t\t\t\t       \"@Property firstTag = { attrs ->\\n\" +\n\t\t\t\t\t\t               \"attrs.remove('test')\" +\n\t\t\t\t\t\t        \"}\\n\" +\n\t\t\t\t\t\t\"}\\n\" +\n\t\t\t\t\"class SecondTagLib {\\n\" +\n                \t\"@Property secondTag = { attrs ->\\n\" +\n                \t\t\t\"firstTag(attrs)\\n\" +                \t\n                \t\"}\\n\" +\n                \"}\" );        \n        \n\t\tGrailsApplicationAttributes attrs = getAttributesForClasses(gcl.getLoadedClasses(),gcl);\n\t\tassertNotNull(attrs);\n\t\tassertNotNull(attrs.getApplicationContext());\n\t\tassertNotNull(attrs.getGrailsApplication());\n\t\t\n\t\tMockHttpServletRequest request = new MockHttpServletRequest();\n\t\tGroovyObject controller = (GroovyObject)attrs.getApplicationContext().getBean(\"TestController\");\n\t\tSimpleGrailsControllerHelper helper = new SimpleGrailsControllerHelper(attrs.getGrailsApplication(),attrs.getApplicationContext(),attrs.getServletContext());\n\t\tnew ControllerDynamicMethods(controller,helper,request,null);\n\t\t\n\t\trequest.setAttribute(GrailsApplicationAttributes.CONTROLLER,controller );\n\t\tGroovyObject tagLib2 = attrs.getTagLibraryForTag(request,\"secondTag\");\n\t\tassertNotNull(tagLib2);\n\n\t\tClosure secondTag = (Closure)tagLib2.getProperty(\"secondTag\");\n\t\tMap tagAttrs = new HashMap();\n\t\ttagAttrs.put(\"test\",\"test\");\n\t\tsecondTag.call(new Object[]{tagAttrs});\n\t\tassertFalse(tagAttrs.containsKey(\"test\"));\n\t\t\n\t}","commit_id":"010221f8cf00b39fcb0f475cdd08f8d71301edb9","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n         * Turn the template into a writable Closure\n         * When executed the closure evaluates all the code embedded in the\n         * template and then writes a GString containing the fixed and variable items\n         * to the writer passed as a parameter\n         * <p/>\n         * For example:\n         * <p/>\n         * '<%= \"test\" %> of expr and <% test = 1 %>${test} script.'\n         * <p/>\n         * would compile into:\n         * <p/>\n         * { out -> out << \"${\"test\"} of expr and \"; test = 1 ; out << \"${test} script.\"}.asWritable()\n         *\n         * @param reader\n         * @param parentLoader\n         * @throws CompilationFailedException\n         * @throws ClassNotFoundException\n         * @throws IOException\n         */\n        GStringTemplate(final Reader reader, final ClassLoader parentLoader) throws CompilationFailedException, ClassNotFoundException, IOException {\n            final StringBuffer templateExpressions = new StringBuffer(\"package groovy.tmp.templates\\n def getTemplate() { return { out -> delegate = new Binding(delegate); out << \\\"\\\"\\\"\");\n            boolean writingString = true;\n\n            while (true) {\n                int c = reader.read();\n                if (c == -1) break;\n                if (c == '<') {\n                    c = reader.read();\n                    if (c == '%') {\n                        c = reader.read();\n                        if (c == '=') {\n                            parseExpression(reader, writingString, templateExpressions);\n                            writingString = true;\n                            continue;\n                        } else {\n                            parseSection(c, reader, writingString, templateExpressions);\n                            writingString = false;\n                            continue;\n                        }\n                    } else {\n                        appendCharacter('<', templateExpressions, writingString);\n                        writingString = true;\n                    }\n                } else if (c == '\"') {\n                    appendCharacter('\\\\', templateExpressions, writingString);\n                    writingString = true;\n                } else if (c == '$') {\n                    appendCharacter('$', templateExpressions, writingString);\n                    writingString = true;\n                    c = reader.read();\n                    if (c == '{') {\n                        appendCharacter('{', templateExpressions, writingString);\n                        writingString = true;\n                        parseGSstring(reader, writingString, templateExpressions);\n                        writingString = true;\n                        continue;\n                    }\n                }\n                appendCharacter((char) c, templateExpressions, writingString);\n                writingString = true;\n            }\n\n            if (writingString) {\n                templateExpressions.append(\"\\\"\\\"\\\"\");\n            }\n\n            templateExpressions.append(\"}.asWritable()}\");\n\n            final GroovyClassLoader loader =\n                    (GroovyClassLoader) AccessController.doPrivileged(new PrivilegedAction() {\n                        public Object run() {\n                            return new GroovyClassLoader(parentLoader);\n                        }\n                    });\n            final Class groovyClass = loader.parseClass(new GroovyCodeSource(templateExpressions.toString(), \"C\", \"x\"));\n\n            try {\n                final GroovyObject object = (GroovyObject) groovyClass.newInstance();\n\n                this.template = (Closure) object.invokeMethod(\"getTemplate\", null);\n            } catch (InstantiationException e) {\n                throw new ClassNotFoundException(e.getMessage());\n            } catch (IllegalAccessException e) {\n                throw new ClassNotFoundException(e.getMessage());\n            }\n        }","id":69976,"modified_method":"/**\n         * Turn the template into a writable Closure\n         * When executed the closure evaluates all the code embedded in the\n         * template and then writes a GString containing the fixed and variable items\n         * to the writer passed as a parameter\n         * <p/>\n         * For example:\n         * <p/>\n         * '<%= \"test\" %> of expr and <% test = 1 %>${test} script.'\n         * <p/>\n         * would compile into:\n         * <p/>\n         * { out -> out << \"${\"test\"} of expr and \"; test = 1 ; out << \"${test} script.\"}.asWritable()\n         *\n         * @param reader\n         * @param parentLoader\n         * @throws CompilationFailedException\n         * @throws ClassNotFoundException\n         * @throws IOException\n         */\n        GStringTemplate(final Reader reader, final ClassLoader parentLoader) throws CompilationFailedException, ClassNotFoundException, IOException {\n            final StringBuffer templateExpressions = new StringBuffer(\"package groovy.tmp.templates\\n def getTemplate() { return { out -> delegate = new Binding(delegate); out << \\\"\\\"\\\"\");\n            boolean writingString = true;\n\n            while (true) {\n                int c = reader.read();\n                if (c == -1) break;\n                if (c == '<') {\n                    c = reader.read();\n                    if (c == '%') {\n                        c = reader.read();\n                        if (c == '=') {\n                            parseExpression(reader, writingString, templateExpressions);\n                            writingString = true;\n                            continue;\n                        } else {\n                            parseSection(c, reader, writingString, templateExpressions);\n                            writingString = false;\n                            continue;\n                        }\n                    } else {\n                        appendCharacter('<', templateExpressions, writingString);\n                        writingString = true;\n                    }\n                } else if (c == '\"') {\n                    appendCharacter('\\\\', templateExpressions, writingString);\n                    writingString = true;\n                } else if (c == '$') {\n                    appendCharacter('$', templateExpressions, writingString);\n                    writingString = true;\n                    c = reader.read();\n                    if (c == '{') {\n                        appendCharacter('{', templateExpressions, writingString);\n                        writingString = true;\n                        parseGSstring(reader, writingString, templateExpressions);\n                        writingString = true;\n                        continue;\n                    }\n                }\n                appendCharacter((char) c, templateExpressions, writingString);\n                writingString = true;\n            }\n\n            if (writingString) {\n                templateExpressions.append(\"\\\"\\\"\\\"\");\n            }\n\n            templateExpressions.append(\"}.asWritable()}\");\n\n            final GroovyClassLoader loader =\n                    (GroovyClassLoader) AccessController.doPrivileged(new PrivilegedAction() {\n                        public Object run() {\n                            return new GroovyClassLoader(parentLoader);\n                        }\n                    });\n            final Class groovyClass;\n            try {\n                groovyClass = loader.parseClass(new GroovyCodeSource(templateExpressions.toString(), \"GStringTemplateScript\" + counter++ + \".groovy\", \"x\"));\n            } catch (Exception e) {\n                throw new GroovyRuntimeException(\"Failed to parse template script (your template may contain an error or be trying to use expressions not currently supported): \" + e.getMessage());\n            }\n\n            try {\n                final GroovyObject object = (GroovyObject) groovyClass.newInstance();\n\n                this.template = (Closure) object.invokeMethod(\"getTemplate\", null);\n            } catch (InstantiationException e) {\n                throw new ClassNotFoundException(e.getMessage());\n            } catch (IllegalAccessException e) {\n                throw new ClassNotFoundException(e.getMessage());\n            }\n        }","commit_id":"15fcd5ff8c68877fb374dbd31f44e43b5e1d7ed0","url":"https://github.com/apache/groovy"},{"original_method":"public Template createTemplate(Reader reader) throws CompilationFailedException, IOException {\n        SimpleTemplate template = new SimpleTemplate();\n        String script = template.parse(reader);\n        if (verbose) {\n            System.out.println(\"\\n-- script source --\");\n            System.out.print(script);\n            System.out.println(\"\\n-- script end --\\n\");\n        }\n        template.script = groovyShell.parse(script);\n        return template;\n    }","id":69977,"modified_method":"public Template createTemplate(Reader reader) throws CompilationFailedException, IOException {\n        SimpleTemplate template = new SimpleTemplate();\n        String script = template.parse(reader);\n        if (verbose) {\n            System.out.println(\"\\n-- script source --\");\n            System.out.print(script);\n            System.out.println(\"\\n-- script end --\\n\");\n        }\n        try {\n            template.script = groovyShell.parse(script, \"SimpleTemplateScript\" + counter++ + \".groovy\");\n        } catch (Exception e) {\n            throw new GroovyRuntimeException(\"Failed to parse template script (your template may contain an error or be trying to use expressions not currently supported): \" + e.getMessage());\n        }\n        return template;\n    }","commit_id":"15fcd5ff8c68877fb374dbd31f44e43b5e1d7ed0","url":"https://github.com/apache/groovy"},{"original_method":"public Template createTemplate(Reader reader) throws CompilationFailedException, ClassNotFoundException, IOException {\n        Node root = null;\n        try {\n            root = xmlParser.parse(reader);\n        } catch (SAXException e) {\n            throw new RuntimeException(\"Parsing XML source failed.\", e);\n        }\n\n        if (root == null) {\n            throw new IOException(\"Parsing XML source failed: root node is null.\");\n        }\n\n        StringWriter writer = new StringWriter(1024);\n        writer.write(\"/* Generated by XmlTemplateEngine */\\n\");\n        new GspPrinter(new PrintWriter(writer), indentation).print(root);\n\n        Script script = groovyShell.parse(writer.toString());\n        return new XmlTemplate(script);\n    }","id":69978,"modified_method":"public Template createTemplate(Reader reader) throws CompilationFailedException, ClassNotFoundException, IOException {\n        Node root = null;\n        try {\n            root = xmlParser.parse(reader);\n        } catch (SAXException e) {\n            throw new RuntimeException(\"Parsing XML source failed.\", e);\n        }\n\n        if (root == null) {\n            throw new IOException(\"Parsing XML source failed: root node is null.\");\n        }\n\n        StringWriter writer = new StringWriter(1024);\n        writer.write(\"/* Generated by XmlTemplateEngine */\\n\");\n        new GspPrinter(new PrintWriter(writer), indentation).print(root);\n\n        Script script;\n        try {\n            script = groovyShell.parse(writer.toString(), \"XmlTemplateScript\" + counter++ + \".groovy\");\n        } catch (Exception e) {\n            throw new GroovyRuntimeException(\"Failed to parse template script (your template may contain an error or be trying to use expressions not currently supported): \" + e.getMessage());\n        }\n        return new XmlTemplate(script);\n    }","commit_id":"15fcd5ff8c68877fb374dbd31f44e43b5e1d7ed0","url":"https://github.com/apache/groovy"},{"original_method":"protected String getUserName(long userId, ThemeDisplay themeDisplay) {\n\t\ttry {\n\t\t\tif (userId <= 0) {\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tUser user = UserLocalServiceUtil.getUserById(userId);\n\n\t\t\tif (user.getUserId() == themeDisplay.getUserId()) {\n\t\t\t\treturn user.getFirstName();\n\t\t\t}\n\n\t\t\tString userName = user.getFullName();\n\n\t\t\tGroup group = user.getGroup();\n\n\t\t\tif (group.getGroupId() == themeDisplay.getScopeGroupId()) {\n\t\t\t\treturn userName;\n\t\t\t}\n\n\t\t\tString userDisplayURL = user.getDisplayURL(themeDisplay);\n\n\t\t\tuserName =\n\t\t\t\t\"<a class=\\\"user\\\" href=\\\"\" + userDisplayURL + \"\\\">\" +\n\t\t\t\t\tuserName + \"<\/a>\";\n\n\t\t\treturn userName;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\t}","id":69979,"modified_method":"protected String getUserName(long userId, ThemeDisplay themeDisplay) {\n\t\ttry {\n\t\t\tif (userId <= 0) {\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tUser user = UserLocalServiceUtil.getUserById(userId);\n\n\t\t\tif (user.getUserId() == themeDisplay.getUserId()) {\n\t\t\t\treturn HtmlUtil.escape(user.getFirstName());\n\t\t\t}\n\n\t\t\tString userName = user.getFullName();\n\n\t\t\tGroup group = user.getGroup();\n\n\t\t\tif (group.getGroupId() == themeDisplay.getScopeGroupId()) {\n\t\t\t\treturn HtmlUtil.escape(userName);\n\t\t\t}\n\n\t\t\tString userDisplayURL = user.getDisplayURL(themeDisplay);\n\n\t\t\tuserName =\n\t\t\t\t\"<a class=\\\"user\\\" href=\\\"\" + userDisplayURL + \"\\\">\" +\n\t\t\t\t\tHtmlUtil.escape(userName) + \"<\/a>\";\n\n\t\t\treturn userName;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\t}","commit_id":"c99f1298b95056feb749d8930866fc3c047670b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getGroupName(long groupId, ThemeDisplay themeDisplay) {\n\t\ttry {\n\t\t\tif (groupId <= 0) {\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\t\tString groupName = group.getDescriptiveName();\n\n\t\t\tif (group.getGroupId() == themeDisplay.getScopeGroupId()) {\n\t\t\t\treturn groupName;\n\t\t\t}\n\n\t\t\tString groupDisplayURL =\n\t\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\t\"/my_places/view?groupId=\" +  group.getGroupId();\n\n\t\t\tif (group.hasPublicLayouts()) {\n\t\t\t\tgroupDisplayURL = groupDisplayURL + \"&privateLayout=0\";\n\t\t\t}\n\t\t\telse if (group.hasPrivateLayouts()) {\n\t\t\t\tgroupDisplayURL = groupDisplayURL + \"&privateLayout=1\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn groupName;\n\t\t\t}\n\n\t\t\tgroupName =\n\t\t\t\t\"<a class=\\\"group\\\" href=\\\"\" + groupDisplayURL + \"\\\">\" +\n\t\t\t\t\tgroupName + \"<\/a>\";\n\n\t\t\treturn groupName;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\t}","id":69980,"modified_method":"protected String getGroupName(long groupId, ThemeDisplay themeDisplay) {\n\t\ttry {\n\t\t\tif (groupId <= 0) {\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\t\tString groupName = group.getDescriptiveName();\n\n\t\t\tif (group.getGroupId() == themeDisplay.getScopeGroupId()) {\n\t\t\t\treturn HtmlUtil.escape(groupName);\n\t\t\t}\n\n\t\t\tString groupDisplayURL =\n\t\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\t\"/my_places/view?groupId=\" +  group.getGroupId();\n\n\t\t\tif (group.hasPublicLayouts()) {\n\t\t\t\tgroupDisplayURL = groupDisplayURL + \"&privateLayout=0\";\n\t\t\t}\n\t\t\telse if (group.hasPrivateLayouts()) {\n\t\t\t\tgroupDisplayURL = groupDisplayURL + \"&privateLayout=1\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn HtmlUtil.escape(groupName);\n\t\t\t}\n\n\t\t\tgroupName =\n\t\t\t\t\"<a class=\\\"group\\\" href=\\\"\" + groupDisplayURL + \"\\\">\" +\n\t\t\t\t\tHtmlUtil.escape(groupName) + \"<\/a>\";\n\n\t\t\treturn groupName;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\t}","commit_id":"c99f1298b95056feb749d8930866fc3c047670b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tif (!BlogsEntryPermission.contains(\n\t\t\t\tpermissionChecker, activity.getClassPK(), ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\t\tString receiverUserName = getUserName(\n\t\t\tactivity.getReceiverUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tBlogsEntry entry = BlogsEntryLocalServiceUtil.getEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/blogs/find_entry?entryId=\" + activity.getClassPK();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == BlogsActivityKeys.ADD_COMMENT) {\n\t\t\ttitlePattern = \"activity-blogs-add-comment\";\n\t\t}\n\t\telse if (activityType == BlogsActivityKeys.ADD_ENTRY) {\n\t\t\ttitlePattern = \"activity-blogs-add-entry\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString entryTitle = wrapLink(link, cleanContent(entry.getTitle()));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, receiverUserName, entryTitle\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tString body = StringPool.BLANK;\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":69981,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tif (!BlogsEntryPermission.contains(\n\t\t\t\tpermissionChecker, activity.getClassPK(), ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\t\tString receiverUserName = getUserName(\n\t\t\tactivity.getReceiverUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tBlogsEntry entry = BlogsEntryLocalServiceUtil.getEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/blogs/find_entry?entryId=\" + activity.getClassPK();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == BlogsActivityKeys.ADD_COMMENT) {\n\t\t\ttitlePattern = \"activity-blogs-add-comment\";\n\t\t}\n\t\telse if (activityType == BlogsActivityKeys.ADD_ENTRY) {\n\t\t\ttitlePattern = \"activity-blogs-add-entry\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString entryTitle = wrapLink(\n\t\t\tlink, HtmlUtil.escape(cleanContent(entry.getTitle())));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, receiverUserName, entryTitle\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tString body = StringPool.BLANK;\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"c99f1298b95056feb749d8930866fc3c047670b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tif (!CalEventPermission.contains(\n\t\t\t\tpermissionChecker, activity.getClassPK(), ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tCalEvent event = CalEventLocalServiceUtil.getEvent(\n\t\t\tactivity.getClassPK());\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/calendar/find_event?redirect=\" +\n\t\t\t\t\tthemeDisplay.getURLCurrent() + \"&eventId=\" +\n\t\t\t\t\t\tactivity.getClassPK();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == CalendarActivityKeys.ADD_EVENT) {\n\t\t\ttitlePattern = \"activity-calendar-add-event\";\n\t\t}\n\t\telse if (activityType == CalendarActivityKeys.UPDATE_EVENT) {\n\t\t\ttitlePattern = \"activity-calendar-update-event\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString eventTitle = wrapLink(link, cleanContent(event.getTitle()));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, eventTitle\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tString body = StringPool.BLANK;\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":69982,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tif (!CalEventPermission.contains(\n\t\t\t\tpermissionChecker, activity.getClassPK(), ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tCalEvent event = CalEventLocalServiceUtil.getEvent(\n\t\t\tactivity.getClassPK());\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/calendar/find_event?redirect=\" +\n\t\t\t\t\tthemeDisplay.getURLCurrent() + \"&eventId=\" +\n\t\t\t\t\t\tactivity.getClassPK();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == CalendarActivityKeys.ADD_EVENT) {\n\t\t\ttitlePattern = \"activity-calendar-add-event\";\n\t\t}\n\t\telse if (activityType == CalendarActivityKeys.UPDATE_EVENT) {\n\t\t\ttitlePattern = \"activity-calendar-update-event\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString eventTitle = wrapLink(\n\t\t\tlink, HtmlUtil.escape(cleanContent(event.getTitle())));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, eventTitle\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tString body = StringPool.BLANK;\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"c99f1298b95056feb749d8930866fc3c047670b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tDLFileEntry fileEntry = DLFileEntryLocalServiceUtil.getDLFileEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tif (!DLFileEntryPermission.contains(\n\t\t\t\tpermissionChecker, fileEntry, ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/document_library/get_file?folderId=\" +\n\t\t\t\t\tfileEntry.getFolderId() + \"&name=\" + fileEntry.getName();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == DLActivityKeys.ADD_FILE_ENTRY) {\n\t\t\ttitlePattern = \"activity-document-library-add-file\";\n\t\t}\n\t\telse if (activityType == DLActivityKeys.UPDATE_FILE_ENTRY) {\n\t\t\ttitlePattern = \"activity-document-library-update-file\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString fileTitle = wrapLink(link, cleanContent(fileEntry.getTitle()));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, fileTitle\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tString fileEntryLink =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/document_library/find_file_entry?fileEntryId=\" +\n\t\t\t\t\tfileEntry.getFileEntryId();\n\n\t\tsb.append(wrapLink(fileEntryLink, \"view-document\", themeDisplay));\n\t\tsb.append(StringPool.SPACE);\n\n\t\tString folderLink =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/document_library/find_folder?folderId=\" +\n\t\t\t\t\tfileEntry.getFolderId();\n\n\t\tsb.append(wrapLink(folderLink, \"go-to-folder\", themeDisplay));\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":69983,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tDLFileEntry fileEntry = DLFileEntryLocalServiceUtil.getDLFileEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tif (!DLFileEntryPermission.contains(\n\t\t\t\tpermissionChecker, fileEntry, ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/document_library/get_file?folderId=\" +\n\t\t\t\t\tfileEntry.getFolderId() + \"&name=\" + fileEntry.getName();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == DLActivityKeys.ADD_FILE_ENTRY) {\n\t\t\ttitlePattern = \"activity-document-library-add-file\";\n\t\t}\n\t\telse if (activityType == DLActivityKeys.UPDATE_FILE_ENTRY) {\n\t\t\ttitlePattern = \"activity-document-library-update-file\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString fileTitle = wrapLink(\n\t\t\tlink, HtmlUtil.escape(cleanContent(fileEntry.getTitle())));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, fileTitle\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tString fileEntryLink =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/document_library/find_file_entry?fileEntryId=\" +\n\t\t\t\t\tfileEntry.getFileEntryId();\n\n\t\tsb.append(wrapLink(fileEntryLink, \"view-document\", themeDisplay));\n\t\tsb.append(StringPool.SPACE);\n\n\t\tString folderLink =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/document_library/find_folder?folderId=\" +\n\t\t\t\t\tfileEntry.getFolderId();\n\n\t\tsb.append(wrapLink(folderLink, \"go-to-folder\", themeDisplay));\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"c99f1298b95056feb749d8930866fc3c047670b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tIGImage image = IGImageLocalServiceUtil.getIGImage(\n\t\t\tactivity.getClassPK());\n\n\t\tif (!IGImagePermission.contains(\n\t\t\t\tpermissionChecker, image, ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/image_gallery/find_image?imageId=\" + image.getImageId();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == IGActivityKeys.ADD_IMAGE) {\n\t\t\ttitlePattern = \"activity-image-gallery-add-image\";\n\t\t}\n\t\telse if (activityType == IGActivityKeys.UPDATE_IMAGE) {\n\t\t\ttitlePattern = \"activity-image-gallery-update-image\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString imageName = wrapLink(link, cleanContent(image.getName()));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, imageName\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tString folderLink =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/image_gallery/find_folder?folderId=\" + image.getFolderId();\n\n\t\tString body = wrapLink(folderLink, \"go-to-folder\", themeDisplay);\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":69984,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tIGImage image = IGImageLocalServiceUtil.getIGImage(\n\t\t\tactivity.getClassPK());\n\n\t\tif (!IGImagePermission.contains(\n\t\t\t\tpermissionChecker, image, ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/image_gallery/find_image?imageId=\" + image.getImageId();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == IGActivityKeys.ADD_IMAGE) {\n\t\t\ttitlePattern = \"activity-image-gallery-add-image\";\n\t\t}\n\t\telse if (activityType == IGActivityKeys.UPDATE_IMAGE) {\n\t\t\ttitlePattern = \"activity-image-gallery-update-image\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString imageName = wrapLink(\n\t\t\tlink, HtmlUtil.escape(cleanContent(image.getName())));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, imageName\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tString folderLink =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/image_gallery/find_folder?folderId=\" + image.getFolderId();\n\n\t\tString body = wrapLink(folderLink, \"go-to-folder\", themeDisplay);\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"c99f1298b95056feb749d8930866fc3c047670b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tif (!MBMessagePermission.contains(\n\t\t\t\tpermissionChecker, activity.getClassPK(), ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\t\tString receiverUserName = getUserName(\n\t\t\tactivity.getReceiverUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tMBMessage message = MBMessageLocalServiceUtil.getMessage(\n\t\t\tactivity.getClassPK());\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/message_boards/find_message?messageId=\" +\n\t\t\t\t\tmessage.getMessageId();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == MBActivityKeys.ADD_MESSAGE) {\n\t\t\ttitlePattern = \"activity-message-boards-add-message\";\n\t\t}\n\t\telse if (activityType == MBActivityKeys.REPLY_MESSAGE) {\n\t\t\ttitlePattern = \"activity-message-boards-reply-message\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString messageSubject = wrapLink(\n\t\t\tlink, cleanContent(message.getSubject()));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, receiverUserName, messageSubject\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tString categoryLink =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/message_boards/find_category?mbCategoryId=\" +\n\t\t\t\t\tmessage.getCategoryId();\n\n\t\tString body = wrapLink(categoryLink, \"go-to-category\", themeDisplay);\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":69985,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tif (!MBMessagePermission.contains(\n\t\t\t\tpermissionChecker, activity.getClassPK(), ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\t\tString receiverUserName = getUserName(\n\t\t\tactivity.getReceiverUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tMBMessage message = MBMessageLocalServiceUtil.getMessage(\n\t\t\tactivity.getClassPK());\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/message_boards/find_message?messageId=\" +\n\t\t\t\t\tmessage.getMessageId();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == MBActivityKeys.ADD_MESSAGE) {\n\t\t\ttitlePattern = \"activity-message-boards-add-message\";\n\t\t}\n\t\telse if (activityType == MBActivityKeys.REPLY_MESSAGE) {\n\t\t\ttitlePattern = \"activity-message-boards-reply-message\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString messageSubject = wrapLink(\n\t\t\tlink, HtmlUtil.escape(cleanContent(message.getSubject())));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, receiverUserName, messageSubject\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tString categoryLink =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/message_boards/find_category?mbCategoryId=\" +\n\t\t\t\t\tmessage.getCategoryId();\n\n\t\tString body = wrapLink(categoryLink, \"go-to-category\", themeDisplay);\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"c99f1298b95056feb749d8930866fc3c047670b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tif (!TasksProposalPermission.contains(\n\t\t\t\tpermissionChecker, activity.getClassPK(), ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\t\tString receiverUserName = getUserName(\n\t\t\tactivity.getReceiverUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\tJSONObject extraData = null;\n\n\t\tif (Validator.isNotNull(activity.getExtraData())) {\n\t\t\textraData = JSONFactoryUtil.createJSONObject(\n\t\t\t\tactivity.getExtraData());\n\t\t}\n\n\t\t// Title\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tGroup group = GroupLocalServiceUtil.getGroup(activity.getGroupId());\n\n\t\t\tgroupName = group.getDescriptiveName();\n\t\t}\n\n\t\tString titlePattern = null;\n\t\tObject[] titleArguments = null;\n\n\t\tif (activityType == TasksActivityKeys.ADD_PROPOSAL) {\n\t\t\ttitlePattern = \"activity-tasks-add-proposal\";\n\n\t\t\tif (Validator.isNotNull(groupName)) {\n\t\t\t\ttitlePattern += \"-in\";\n\t\t\t}\n\n\t\t\ttitleArguments = new Object[] {creatorUserName, groupName};\n\t\t}\n\t\telse if (activityType == TasksActivityKeys.ASSIGN_PROPOSAL) {\n\t\t\ttitlePattern = \"activity-tasks-assign-proposal\";\n\n\t\t\tif (Validator.isNotNull(groupName)) {\n\t\t\t\ttitlePattern += \"-in\";\n\t\t\t}\n\n\t\t\ttitleArguments = new Object[] {\n\t\t\t\tcreatorUserName, receiverUserName, groupName\n\t\t\t};\n\t\t}\n\t\telse if (activityType == TasksActivityKeys.REVIEW_PROPOSAL) {\n\t\t\ttitlePattern = \"activity-tasks-review-proposal\";\n\n\t\t\tif (Validator.isNotNull(groupName)) {\n\t\t\t\ttitlePattern += \"-in\";\n\t\t\t}\n\n\t\t\ttitleArguments = new Object[] {\n\t\t\t\tcreatorUserName, receiverUserName, groupName\n\t\t\t};\n\t\t}\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tTasksProposal proposal = TasksProposalLocalServiceUtil.getProposal(\n\t\t\tactivity.getClassPK());\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(\"<b>\");\n\t\tsb.append(proposal.getName());\n\t\tsb.append(\"<\/b> (\");\n\t\tsb.append(\n\t\t\tthemeDisplay.translate(\n\t\t\t\t\"model.resource.\" + proposal.getClassName()));\n\t\tsb.append(\")<br />\");\n\t\tsb.append(themeDisplay.translate(\"description\"));\n\t\tsb.append(\": \");\n\t\tsb.append(proposal.getDescription());\n\n\t\tif (activityType != TasksActivityKeys.ADD_PROPOSAL) {\n\t\t\tint stage = extraData.getInt(\"stage\");\n\t\t\tboolean completed = extraData.getBoolean(\"completed\");\n\t\t\tboolean rejected = extraData.getBoolean(\"rejected\");\n\n\t\t\tsb.append(\"<br />\");\n\t\t\tsb.append(themeDisplay.translate(\"stage\"));\n\t\t\tsb.append(\": \");\n\t\t\tsb.append(stage);\n\t\t\tsb.append(\"<br />\");\n\t\t\tsb.append(themeDisplay.translate(\"status\"));\n\t\t\tsb.append(\": \");\n\n\t\t\tif (completed && rejected) {\n\t\t\t\tsb.append(themeDisplay.translate(\"rejected\"));\n\t\t\t}\n\t\t\telse if (completed && !rejected) {\n\t\t\t\tsb.append(themeDisplay.translate(\"approved\"));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsb.append(themeDisplay.translate(\"awaiting-approval\"));\n\t\t\t}\n\t\t}\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(title, body);\n\t}","id":69986,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tif (!TasksProposalPermission.contains(\n\t\t\t\tpermissionChecker, activity.getClassPK(), ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\t\tString receiverUserName = getUserName(\n\t\t\tactivity.getReceiverUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\tJSONObject extraData = null;\n\n\t\tif (Validator.isNotNull(activity.getExtraData())) {\n\t\t\textraData = JSONFactoryUtil.createJSONObject(\n\t\t\t\tactivity.getExtraData());\n\t\t}\n\n\t\t// Title\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tGroup group = GroupLocalServiceUtil.getGroup(activity.getGroupId());\n\n\t\t\tgroupName = group.getDescriptiveName();\n\t\t}\n\n\t\tString titlePattern = null;\n\t\tObject[] titleArguments = null;\n\n\t\tif (activityType == TasksActivityKeys.ADD_PROPOSAL) {\n\t\t\ttitlePattern = \"activity-tasks-add-proposal\";\n\n\t\t\tif (Validator.isNotNull(groupName)) {\n\t\t\t\ttitlePattern += \"-in\";\n\t\t\t}\n\n\t\t\ttitleArguments = new Object[] {\n\t\t\t\tcreatorUserName, HtmlUtil.escape(groupName)\n\t\t\t};\n\t\t}\n\t\telse if (activityType == TasksActivityKeys.ASSIGN_PROPOSAL) {\n\t\t\ttitlePattern = \"activity-tasks-assign-proposal\";\n\n\t\t\tif (Validator.isNotNull(groupName)) {\n\t\t\t\ttitlePattern += \"-in\";\n\t\t\t}\n\n\t\t\ttitleArguments = new Object[] {\n\t\t\t\tcreatorUserName, receiverUserName, HtmlUtil.escape(groupName)\n\t\t\t};\n\t\t}\n\t\telse if (activityType == TasksActivityKeys.REVIEW_PROPOSAL) {\n\t\t\ttitlePattern = \"activity-tasks-review-proposal\";\n\n\t\t\tif (Validator.isNotNull(groupName)) {\n\t\t\t\ttitlePattern += \"-in\";\n\t\t\t}\n\n\t\t\ttitleArguments = new Object[] {\n\t\t\t\tcreatorUserName, receiverUserName, HtmlUtil.escape(groupName)\n\t\t\t};\n\t\t}\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tTasksProposal proposal = TasksProposalLocalServiceUtil.getProposal(\n\t\t\tactivity.getClassPK());\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(\"<b>\");\n\t\tsb.append(HtmlUtil.escape(proposal.getName()));\n\t\tsb.append(\"<\/b> (\");\n\t\tsb.append(\n\t\t\tthemeDisplay.translate(\n\t\t\t\t\"model.resource.\" + proposal.getClassName()));\n\t\tsb.append(\")<br />\");\n\t\tsb.append(themeDisplay.translate(\"description\"));\n\t\tsb.append(\": \");\n\t\tsb.append(HtmlUtil.escape(proposal.getDescription()));\n\n\t\tif (activityType != TasksActivityKeys.ADD_PROPOSAL) {\n\t\t\tint stage = extraData.getInt(\"stage\");\n\t\t\tboolean completed = extraData.getBoolean(\"completed\");\n\t\t\tboolean rejected = extraData.getBoolean(\"rejected\");\n\n\t\t\tsb.append(\"<br />\");\n\t\t\tsb.append(themeDisplay.translate(\"stage\"));\n\t\t\tsb.append(\": \");\n\t\t\tsb.append(stage);\n\t\t\tsb.append(\"<br />\");\n\t\t\tsb.append(themeDisplay.translate(\"status\"));\n\t\t\tsb.append(\": \");\n\n\t\t\tif (completed && rejected) {\n\t\t\t\tsb.append(themeDisplay.translate(\"rejected\"));\n\t\t\t}\n\t\t\telse if (completed && !rejected) {\n\t\t\t\tsb.append(themeDisplay.translate(\"approved\"));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsb.append(themeDisplay.translate(\"awaiting-approval\"));\n\t\t\t}\n\t\t}\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(title, body);\n\t}","commit_id":"c99f1298b95056feb749d8930866fc3c047670b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tif (!WikiPagePermission.contains(\n\t\t\t\tpermissionChecker, activity.getClassPK(), ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tWikiPageResource pageResource =\n\t\t\tWikiPageResourceLocalServiceUtil.getPageResource(\n\t\t\t\tactivity.getClassPK());\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/wiki/find_page?pageResourcePrimKey=\" + activity.getClassPK();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == WikiActivityKeys.ADD_PAGE) {\n\t\t\ttitlePattern = \"activity-wiki-add-page\";\n\t\t}\n\t\telse if (activityType == WikiActivityKeys.UPDATE_PAGE) {\n\t\t\ttitlePattern = \"activity-wiki-update-page\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString pageTitle = wrapLink(\n\t\t\tlink, cleanContent(pageResource.getTitle()));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, pageTitle\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tString body = StringPool.BLANK;\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":69987,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tPermissionChecker permissionChecker =\n\t\t\tthemeDisplay.getPermissionChecker();\n\n\t\tif (!WikiPagePermission.contains(\n\t\t\t\tpermissionChecker, activity.getClassPK(), ActionKeys.VIEW)) {\n\n\t\t\treturn null;\n\t\t}\n\n\t\tString groupName = StringPool.BLANK;\n\n\t\tif (activity.getGroupId() != themeDisplay.getScopeGroupId()) {\n\t\t\tgroupName = getGroupName(activity.getGroupId(), themeDisplay);\n\t\t}\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tWikiPageResource pageResource =\n\t\t\tWikiPageResourceLocalServiceUtil.getPageResource(\n\t\t\t\tactivity.getClassPK());\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\"/wiki/find_page?pageResourcePrimKey=\" + activity.getClassPK();\n\n\t\t// Title\n\n\t\tString titlePattern = null;\n\n\t\tif (activityType == WikiActivityKeys.ADD_PAGE) {\n\t\t\ttitlePattern = \"activity-wiki-add-page\";\n\t\t}\n\t\telse if (activityType == WikiActivityKeys.UPDATE_PAGE) {\n\t\t\ttitlePattern = \"activity-wiki-update-page\";\n\t\t}\n\n\t\tif (Validator.isNotNull(groupName)) {\n\t\t\ttitlePattern += \"-in\";\n\t\t}\n\n\t\tString pageTitle = wrapLink(\n\t\t\tlink, HtmlUtil.escape(cleanContent(pageResource.getTitle())));\n\n\t\tObject[] titleArguments = new Object[] {\n\t\t\tgroupName, creatorUserName, pageTitle\n\t\t};\n\n\t\tString title = themeDisplay.translate(titlePattern, titleArguments);\n\n\t\t// Body\n\n\t\tString body = StringPool.BLANK;\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"c99f1298b95056feb749d8930866fc3c047670b9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\t\tString receiverUserName = getUserName(\n\t\t\tactivity.getReceiverUserId(), themeDisplay);\n\n\t\tUser creatorUser = UserLocalServiceUtil.getUserById(\n\t\t\tactivity.getUserId());\n\t\tUser receiverUser = UserLocalServiceUtil.getUserById(\n\t\t\tactivity.getReceiverUserId());\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(themeDisplay.getPortalURL());\n\t\tsb.append(themeDisplay.getPathFriendlyURLPublic());\n\t\tsb.append(StringPool.SLASH);\n\t\tsb.append(creatorUser.getScreenName());\n\t\tsb.append(\"/friends\");\n\n\t\tString link = sb.toString();\n\n\t\t// Title\n\n\t\tString title = StringPool.BLANK;\n\n\t\tif (activityType == FriendsActivityKeys.ADD_FRIEND) {\n\t\t\tsb = new StringBuilder();\n\n\t\t\tsb.append(\"<a href=\\\"\");\n\t\t\tsb.append(themeDisplay.getPortalURL());\n\t\t\tsb.append(themeDisplay.getPathFriendlyURLPublic());\n\t\t\tsb.append(StringPool.SLASH);\n\t\t\tsb.append(creatorUser.getScreenName());\n\t\t\tsb.append(\"/profile\\\">\");\n\t\t\tsb.append(creatorUserName);\n\t\t\tsb.append(\"<\/a>\");\n\n\t\t\tString creatorUserNameURL = sb.toString();\n\n\t\t\tsb = new StringBuilder();\n\n\t\t\tsb.append(\"<a href=\\\"\");\n\t\t\tsb.append(themeDisplay.getPortalURL());\n\t\t\tsb.append(themeDisplay.getPathFriendlyURLPublic());\n\t\t\tsb.append(StringPool.SLASH);\n\t\t\tsb.append(receiverUser.getScreenName());\n\t\t\tsb.append(\"/profile\\\">\");\n\t\t\tsb.append(receiverUserName);\n\t\t\tsb.append(\"<\/a>\");\n\n\t\t\tString receiverUserNameURL = sb.toString();\n\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-networking-summary-add-friend\",\n\t\t\t\tnew Object[] {creatorUserNameURL, receiverUserNameURL});\n\t\t}\n\n\t\t// Body\n\n\t\tString body = StringPool.BLANK;\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":69988,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\t\tString receiverUserName = getUserName(\n\t\t\tactivity.getReceiverUserId(), themeDisplay);\n\n\t\tUser creatorUser = UserLocalServiceUtil.getUserById(\n\t\t\tactivity.getUserId());\n\t\tUser receiverUser = UserLocalServiceUtil.getUserById(\n\t\t\tactivity.getReceiverUserId());\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(themeDisplay.getPortalURL());\n\t\tsb.append(themeDisplay.getPathFriendlyURLPublic());\n\t\tsb.append(StringPool.SLASH);\n\t\tsb.append(HtmlUtil.escapeURL(creatorUser.getScreenName()));\n\t\tsb.append(\"/friends\");\n\n\t\tString link = sb.toString();\n\n\t\t// Title\n\n\t\tString title = StringPool.BLANK;\n\n\t\tif (activityType == FriendsActivityKeys.ADD_FRIEND) {\n\t\t\tsb = new StringBuilder();\n\n\t\t\tsb.append(\"<a href=\\\"\");\n\t\t\tsb.append(themeDisplay.getPortalURL());\n\t\t\tsb.append(themeDisplay.getPathFriendlyURLPublic());\n\t\t\tsb.append(StringPool.SLASH);\n\t\t\tsb.append(HtmlUtil.escapeURL(creatorUser.getScreenName()));\n\t\t\tsb.append(\"/profile\\\">\");\n\t\t\tsb.append(creatorUserName);\n\t\t\tsb.append(\"<\/a>\");\n\n\t\t\tString creatorUserNameURL = sb.toString();\n\n\t\t\tsb = new StringBuilder();\n\n\t\t\tsb.append(\"<a href=\\\"\");\n\t\t\tsb.append(themeDisplay.getPortalURL());\n\t\t\tsb.append(themeDisplay.getPathFriendlyURLPublic());\n\t\t\tsb.append(StringPool.SLASH);\n\t\t\tsb.append(HtmlUtil.escapeURL(receiverUser.getScreenName()));\n\t\t\tsb.append(\"/profile\\\">\");\n\t\t\tsb.append(receiverUserName);\n\t\t\tsb.append(\"<\/a>\");\n\n\t\t\tString receiverUserNameURL = sb.toString();\n\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-networking-summary-add-friend\",\n\t\t\t\tnew Object[] {creatorUserNameURL, receiverUserNameURL});\n\t\t}\n\n\t\t// Body\n\n\t\tString body = StringPool.BLANK;\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"607488a5b07e7c0ac5acaf52c44ce7d10af3a104","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\tJSONObject extraData = null;\n\n\t\tif (Validator.isNotNull(activity.getExtraData())) {\n\t\t\textraData = JSONFactoryUtil.createJSONObject(\n\t\t\t\tactivity.getExtraData());\n\t\t}\n\n\t\tJIRAAction jiraAction = null;\n\n\t\tif (activityType == JIRAActivityKeys.ADD_COMMENT) {\n\t\t\tlong jiraActionId = extraData.getLong(\"jiraActionId\");\n\n\t\t\tjiraAction = JIRAActionLocalServiceUtil.getJIRAAction(jiraActionId);\n\t\t}\n\n\t\t// Link\n\n\t\tJIRAIssue jiraIssue = JIRAIssueLocalServiceUtil.getJIRAIssue(\n\t\t\tactivity.getClassPK());\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(\"http://support.liferay.com/browse/\");\n\t\tsb.append(jiraIssue.getKey());\n\n\t\tif (activityType == JIRAActivityKeys.ADD_COMMENT) {\n\t\t\tsb.append(\"#action_\");\n\t\t\tsb.append(jiraAction.getJiraActionId());\n\t\t}\n\n\t\tString link = sb.toString();\n\n\t\t// Title\n\n\t\tString title = StringPool.BLANK;\n\n\t\tif (activityType == JIRAActivityKeys.ADD_CHANGE) {\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-coding-jira-add-change\",\n\t\t\t\tnew Object[] {creatorUserName, jiraIssue.getKey()});\n\t\t}\n\t\telse if (activityType == JIRAActivityKeys.ADD_COMMENT) {\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-coding-jira-add-comment\",\n\t\t\t\tnew Object[] {creatorUserName, jiraIssue.getKey()});\n\t\t}\n\t\telse if (activityType == JIRAActivityKeys.ADD_ISSUE) {\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-coding-jira-add-issue\",\n\t\t\t\tnew Object[] {creatorUserName, jiraIssue.getKey()});\n\t\t}\n\n\t\t// Body\n\n\t\tsb = new StringBuilder();\n\n\t\tsb.append(\"<a href=\\\"\");\n\t\tsb.append(link);\n\t\tsb.append(\"\\\" target=\\\"_blank\\\">\");\n\n\t\tif (activityType == JIRAActivityKeys.ADD_CHANGE) {\n\t\t\tsb.append(\n\t\t\t\tinterpretJIRAChangeItems(\n\t\t\t\t\textraData.getJSONArray(\"jiraChangeItems\"), themeDisplay));\n\t\t}\n\t\telse if (activityType == JIRAActivityKeys.ADD_COMMENT) {\n\t\t\tsb.append(cleanContent(jiraAction.getBody()));\n\t\t}\n\t\telse if (activityType == JIRAActivityKeys.ADD_ISSUE) {\n\t\t\tsb.append(cleanContent(jiraIssue.getSummary()));\n\t\t}\n\n\t\tsb.append(\"<\/a>\");\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":69989,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\tJSONObject extraData = null;\n\n\t\tif (Validator.isNotNull(activity.getExtraData())) {\n\t\t\textraData = JSONFactoryUtil.createJSONObject(\n\t\t\t\tactivity.getExtraData());\n\t\t}\n\n\t\tJIRAAction jiraAction = null;\n\n\t\tif (activityType == JIRAActivityKeys.ADD_COMMENT) {\n\t\t\tlong jiraActionId = extraData.getLong(\"jiraActionId\");\n\n\t\t\tjiraAction = JIRAActionLocalServiceUtil.getJIRAAction(jiraActionId);\n\t\t}\n\n\t\t// Link\n\n\t\tJIRAIssue jiraIssue = JIRAIssueLocalServiceUtil.getJIRAIssue(\n\t\t\tactivity.getClassPK());\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(\"http://support.liferay.com/browse/\");\n\t\tsb.append(jiraIssue.getKey());\n\n\t\tif (activityType == JIRAActivityKeys.ADD_COMMENT) {\n\t\t\tsb.append(\"#action_\");\n\t\t\tsb.append(jiraAction.getJiraActionId());\n\t\t}\n\n\t\tString link = sb.toString();\n\n\t\t// Title\n\n\t\tString title = StringPool.BLANK;\n\n\t\tif (activityType == JIRAActivityKeys.ADD_CHANGE) {\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-coding-jira-add-change\",\n\t\t\t\tnew Object[] {creatorUserName, jiraIssue.getKey()});\n\t\t}\n\t\telse if (activityType == JIRAActivityKeys.ADD_COMMENT) {\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-coding-jira-add-comment\",\n\t\t\t\tnew Object[] {creatorUserName, jiraIssue.getKey()});\n\t\t}\n\t\telse if (activityType == JIRAActivityKeys.ADD_ISSUE) {\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-coding-jira-add-issue\",\n\t\t\t\tnew Object[] {creatorUserName, jiraIssue.getKey()});\n\t\t}\n\n\t\t// Body\n\n\t\tsb = new StringBuilder();\n\n\t\tsb.append(\"<a href=\\\"\");\n\t\tsb.append(link);\n\t\tsb.append(\"\\\" target=\\\"_blank\\\">\");\n\n\t\tif (activityType == JIRAActivityKeys.ADD_CHANGE) {\n\t\t\tsb.append(\n\t\t\t\tinterpretJIRAChangeItems(\n\t\t\t\t\textraData.getJSONArray(\"jiraChangeItems\"), themeDisplay));\n\t\t}\n\t\telse if (activityType == JIRAActivityKeys.ADD_COMMENT) {\n\t\t\tsb.append(HtmlUtil.escape(cleanContent(jiraAction.getBody())));\n\t\t}\n\t\telse if (activityType == JIRAActivityKeys.ADD_ISSUE) {\n\t\t\tsb.append(HtmlUtil.escape(cleanContent(jiraIssue.getSummary())));\n\t\t}\n\n\t\tsb.append(\"<\/a>\");\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"607488a5b07e7c0ac5acaf52c44ce7d10af3a104","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected String interpretJIRAChangeItem(\n\t\tJSONObject jiraChangeItem, ThemeDisplay themeDisplay) {\n\n\t\tString field = jiraChangeItem.getString(\"field\");\n\n\t\tfield = StringUtil.replace(\n\t\t\tfield.toLowerCase(), StringPool.SPACE, StringPool.DASH);\n\n\t\tString newString = jiraChangeItem.getString(\"newString\");\n\t\tString newValue = jiraChangeItem.getString(\"newValue\");\n\n\t\tif (Validator.isNull(newString)) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tif (field.equals(\"description\") || field.equals(\"summary\")) {\n\t\t\tsb.append(\n\t\t\t\tthemeDisplay.translate(\n\t\t\t\t\t\"activity-social-coding-jira-add-change-\" + field));\n\t\t\tsb.append(\"<br />\");\n\t\t}\n\t\telse if (field.equals(\"assignee\") || field.equals(\"attachment\") ||\n\t\t\t\t field.equals(\"fix-version\") || field.equals(\"issuetype\") ||\n\t\t\t\t field.equals(\"priority\") || field.equals(\"resolution\") ||\n\t\t\t\t field.equals(\"status\") || field.equals(\"version\")) {\n\n\t\t\tsb.append(\n\t\t\t\tthemeDisplay.translate(\n\t\t\t\t\t\"activity-social-coding-jira-add-change-\" + field,\n\t\t\t\t\tnew Object[] {newString}));\n\t\t\tsb.append(\"<br />\");\n\t\t}\n\t\telse if (field.equals(\"link\") && newValue.startsWith(\"LEP-\")) {\n\t\t\tsb.append(\n\t\t\t\tthemeDisplay.translate(\n\t\t\t\t\t\"activity-social-coding-jira-add-change-\" + field,\n\t\t\t\t\tnew Object[] {newValue}));\n\t\t\tsb.append(\"<br />\");\n\t\t}\n\n\t\treturn sb.toString();\n\t}","id":69990,"modified_method":"protected String interpretJIRAChangeItem(\n\t\tJSONObject jiraChangeItem, ThemeDisplay themeDisplay) {\n\n\t\tString field = jiraChangeItem.getString(\"field\");\n\n\t\tfield = StringUtil.replace(\n\t\t\tfield.toLowerCase(), StringPool.SPACE, StringPool.DASH);\n\n\t\tString newString = jiraChangeItem.getString(\"newString\");\n\t\tString newValue = jiraChangeItem.getString(\"newValue\");\n\n\t\tif (Validator.isNull(newString)) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tif (field.equals(\"description\") || field.equals(\"summary\")) {\n\t\t\tsb.append(\n\t\t\t\tthemeDisplay.translate(\n\t\t\t\t\t\"activity-social-coding-jira-add-change-\" + field));\n\t\t\tsb.append(\"<br />\");\n\t\t}\n\t\telse if (field.equals(\"assignee\") || field.equals(\"attachment\") ||\n\t\t\t\t field.equals(\"fix-version\") || field.equals(\"issuetype\") ||\n\t\t\t\t field.equals(\"priority\") || field.equals(\"resolution\") ||\n\t\t\t\t field.equals(\"status\") || field.equals(\"version\")) {\n\n\t\t\tsb.append(\n\t\t\t\tthemeDisplay.translate(\n\t\t\t\t\t\"activity-social-coding-jira-add-change-\" + field,\n\t\t\t\t\tnew Object[] {HtmlUtil.escape(newString)}));\n\t\t\tsb.append(\"<br />\");\n\t\t}\n\t\telse if (field.equals(\"link\") && newValue.startsWith(\"LEP-\")) {\n\t\t\tsb.append(\n\t\t\t\tthemeDisplay.translate(\n\t\t\t\t\t\"activity-social-coding-jira-add-change-\" + field,\n\t\t\t\t\tnew Object[] {HtmlUtil.escape(newValue)}));\n\t\t\tsb.append(\"<br />\");\n\t\t}\n\n\t\treturn sb.toString();\n\t}","commit_id":"607488a5b07e7c0ac5acaf52c44ce7d10af3a104","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tUser creatorUser = UserLocalServiceUtil.getUserById(\n\t\t\tactivity.getUserId());\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tString link = StringPool.BLANK;\n\n\t\tif (activityType == MembersActivityKeys.ADD_MEMBER) {\n\t\t\tStringBuilder sb = new StringBuilder();\n\n\t\t\tsb.append(themeDisplay.getPortalURL());\n\t\t\tsb.append(themeDisplay.getPathFriendlyURLPublic());\n\t\t\tsb.append(StringPool.SLASH);\n\t\t\tsb.append(creatorUser.getScreenName());\n\t\t\tsb.append(\"/profile\");\n\n\t\t\tlink = sb.toString();\n\t\t}\n\n\t\t// Title\n\n\t\tOrganization organization =\n\t\t\tOrganizationLocalServiceUtil.getOrganization(activity.getClassPK());\n\n\t\tGroup group = organization.getGroup();\n\n\t\tString title = StringPool.BLANK;\n\n\t\tif (activityType == MembersActivityKeys.ADD_MEMBER) {\n\t\t\tStringBuilder sb = new StringBuilder();\n\n\t\t\tsb.append(\"<a href=\\\"\");\n\t\t\tsb.append(link);\n\t\t\tsb.append(\"\\\">\");\n\t\t\tsb.append(creatorUserName);\n\t\t\tsb.append(\"<\/a>\");\n\n\t\t\tString creatorUserNameURL = sb.toString();\n\n\t\t\tsb = new StringBuilder();\n\n\t\t\tsb.append(\"<a href=\\\"\");\n\t\t\tsb.append(themeDisplay.getPortalURL());\n\t\t\tsb.append(themeDisplay.getPathFriendlyURLPublic());\n\t\t\tsb.append(group.getFriendlyURL());\n\t\t\tsb.append(\"/profile\\\">\");\n\t\t\tsb.append(organization.getName());\n\t\t\tsb.append(\"<\/a>\");\n\n\t\t\tString organizationNameURL = sb.toString();\n\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-networking-summary-join-organization\",\n\t\t\t\tnew Object[] {creatorUserNameURL, organizationNameURL});\n\t\t}\n\n\t\t// Body\n\n\t\tString body = StringPool.BLANK;\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":69991,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tUser creatorUser = UserLocalServiceUtil.getUserById(\n\t\t\tactivity.getUserId());\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tString link = StringPool.BLANK;\n\n\t\tif (activityType == MembersActivityKeys.ADD_MEMBER) {\n\t\t\tStringBuilder sb = new StringBuilder();\n\n\t\t\tsb.append(themeDisplay.getPortalURL());\n\t\t\tsb.append(themeDisplay.getPathFriendlyURLPublic());\n\t\t\tsb.append(StringPool.SLASH);\n\t\t\tsb.append(HtmlUtil.escapeURL(creatorUser.getScreenName()));\n\t\t\tsb.append(\"/profile\");\n\n\t\t\tlink = sb.toString();\n\t\t}\n\n\t\t// Title\n\n\t\tOrganization organization =\n\t\t\tOrganizationLocalServiceUtil.getOrganization(activity.getClassPK());\n\n\t\tGroup group = organization.getGroup();\n\n\t\tString title = StringPool.BLANK;\n\n\t\tif (activityType == MembersActivityKeys.ADD_MEMBER) {\n\t\t\tStringBuilder sb = new StringBuilder();\n\n\t\t\tsb.append(\"<a href=\\\"\");\n\t\t\tsb.append(link);\n\t\t\tsb.append(\"\\\">\");\n\t\t\tsb.append(creatorUserName);\n\t\t\tsb.append(\"<\/a>\");\n\n\t\t\tString creatorUserNameURL = sb.toString();\n\n\t\t\tsb = new StringBuilder();\n\n\t\t\tsb.append(\"<a href=\\\"\");\n\t\t\tsb.append(themeDisplay.getPortalURL());\n\t\t\tsb.append(themeDisplay.getPathFriendlyURLPublic());\n\t\t\tsb.append(group.getFriendlyURL());\n\t\t\tsb.append(\"/profile\\\">\");\n\t\t\tsb.append(HtmlUtil.escape(organization.getName()));\n\t\t\tsb.append(\"<\/a>\");\n\n\t\t\tString organizationNameURL = sb.toString();\n\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-networking-summary-join-organization\",\n\t\t\t\tnew Object[] {creatorUserNameURL, organizationNameURL});\n\t\t}\n\n\t\t// Body\n\n\t\tString body = StringPool.BLANK;\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"607488a5b07e7c0ac5acaf52c44ce7d10af3a104","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tSVNRevision svnRevision = SVNRevisionLocalServiceUtil.getSVNRevision(\n\t\t\tactivity.getClassPK());\n\n\t\tString link = svnRevision.getWebRevisionNumberURL();\n\n\t\t// Title\n\n\t\tSVNRepository svnRepository = svnRevision.getSVNRepository();\n\n\t\tString title = StringPool.BLANK;\n\n\t\tif (activityType == SVNActivityKeys.ADD_REVISION) {\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-coding-svn-add-revision\",\n\t\t\t\tnew Object[] {\n\t\t\t\t\tcreatorUserName,\n\t\t\t\t\tString.valueOf(svnRevision.getRevisionNumber()),\n\t\t\t\t\tsvnRepository.getShortURL()\n\t\t\t\t});\n\t\t}\n\n\t\t// Body\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(\"<a href=\\\"\");\n\t\tsb.append(link);\n\t\tsb.append(\"\\\" target=\\\"_blank\\\">\");\n\t\tsb.append(svnRevision.getComments());\n\t\tsb.append(\"<\/a>\");\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":69992,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tSVNRevision svnRevision = SVNRevisionLocalServiceUtil.getSVNRevision(\n\t\t\tactivity.getClassPK());\n\n\t\tString link = svnRevision.getWebRevisionNumberURL();\n\n\t\t// Title\n\n\t\tSVNRepository svnRepository = svnRevision.getSVNRepository();\n\n\t\tString title = StringPool.BLANK;\n\n\t\tif (activityType == SVNActivityKeys.ADD_REVISION) {\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-coding-svn-add-revision\",\n\t\t\t\tnew Object[] {\n\t\t\t\t\tcreatorUserName,\n\t\t\t\t\tString.valueOf(svnRevision.getRevisionNumber()),\n\t\t\t\t\tsvnRepository.getShortURL()\n\t\t\t\t});\n\t\t}\n\n\t\t// Body\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(\"<a href=\\\"\");\n\t\tsb.append(link);\n\t\tsb.append(\"\\\" target=\\\"_blank\\\">\");\n\t\tsb.append(HtmlUtil.escape(svnRevision.getComments()));\n\t\tsb.append(\"<\/a>\");\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"607488a5b07e7c0ac5acaf52c44ce7d10af3a104","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tUser creatorUser = UserLocalServiceUtil.getUserById(\n\t\t\tactivity.getUserId());\n\n\t\tJSONObject extraData = JSONFactoryUtil.createJSONObject(\n\t\t\tactivity.getExtraData());\n\n\t\t// Title\n\n\t\tString title = StringPool.BLANK;\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(\"<a href=\\\"\");\n\t\tsb.append(themeDisplay.getPortalURL());\n\t\tsb.append(themeDisplay.getPathFriendlyURLPublic());\n\t\tsb.append(StringPool.SLASH);\n\t\tsb.append(creatorUser.getScreenName());\n\t\tsb.append(\"/profile\\\">\");\n\t\tsb.append(creatorUserName);\n\t\tsb.append(\"<\/a>\");\n\n\t\tString creatorUserNameURL = sb.toString();\n\n\t\ttitle = themeDisplay.translate(\n\t\t\t\"activity-twitter-add-status\", new Object[] {creatorUserNameURL});\n\n\t\t// Body\n\n\t\tsb = new StringBuilder();\n\n\t\tsb.append(\"<a href=\\\"http://twitter.com/\");\n\t\tsb.append(creatorUser.getContact().getTwitterSn());\n\t\tsb.append(\"/statuses/\");\n\t\tsb.append(activity.getClassPK());\n\t\tsb.append(\"\\\" target=\\\"_blank\\\">\");\n\t\tsb.append(extraData.getString(\"text\"));\n\t\tsb.append(\"<\/a>\");\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(title, body);\n\t}","id":69993,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\n\t\tUser creatorUser = UserLocalServiceUtil.getUserById(\n\t\t\tactivity.getUserId());\n\n\t\tJSONObject extraData = JSONFactoryUtil.createJSONObject(\n\t\t\tactivity.getExtraData());\n\n\t\t// Title\n\n\t\tString title = StringPool.BLANK;\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(\"<a href=\\\"\");\n\t\tsb.append(themeDisplay.getPortalURL());\n\t\tsb.append(themeDisplay.getPathFriendlyURLPublic());\n\t\tsb.append(StringPool.SLASH);\n\t\tsb.append(HtmlUtil.escapeURL(creatorUser.getScreenName()));\n\t\tsb.append(\"/profile\\\">\");\n\t\tsb.append(creatorUserName);\n\t\tsb.append(\"<\/a>\");\n\n\t\tString creatorUserNameURL = sb.toString();\n\n\t\ttitle = themeDisplay.translate(\n\t\t\t\"activity-twitter-add-status\", new Object[] {creatorUserNameURL});\n\n\t\t// Body\n\n\t\tsb = new StringBuilder();\n\n\t\tsb.append(\"<a href=\\\"http://twitter.com/\");\n\t\tsb.append(HtmlUtil.escapeURL(creatorUser.getContact().getTwitterSn()));\n\t\tsb.append(\"/statuses/\");\n\t\tsb.append(activity.getClassPK());\n\t\tsb.append(\"\\\" target=\\\"_blank\\\">\");\n\t\tsb.append(HtmlUtil.escape(extraData.getString(\"text\")));\n\t\tsb.append(\"<\/a>\");\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(title, body);\n\t}","commit_id":"607488a5b07e7c0ac5acaf52c44ce7d10af3a104","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\t\tString receiverUserName = getUserName(\n\t\t\tactivity.getReceiverUserId(), themeDisplay);\n\n\t\tUser receiverUser = UserLocalServiceUtil.getUserById(\n\t\t\tactivity.getReceiverUserId());\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tWallEntry wallEntry = WallEntryLocalServiceUtil.getWallEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() +\n\t\t\t\tthemeDisplay.getPathFriendlyURLPublic() + StringPool.SLASH +\n\t\t\t\t\treceiverUser.getScreenName() + \"/profile/-/wall/\" +\n\t\t\t\t\t\tactivity.getClassPK();\n\n\t\t// Title\n\n\t\tString title = StringPool.BLANK;\n\n\t\tif (activityType == WallActivityKeys.ADD_ENTRY) {\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-networking-wall-add-entry\",\n\t\t\t\tnew Object[] {creatorUserName, receiverUserName});\n\t\t}\n\n\t\t// Body\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(\"<a href=\\\"\");\n\t\tsb.append(link);\n\t\tsb.append(\"\\\">\");\n\t\tsb.append(cleanContent(wallEntry.getComments()));\n\t\tsb.append(\"<\/a>\");\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","id":69994,"modified_method":"protected SocialActivityFeedEntry doInterpret(\n\t\t\tSocialActivity activity, ThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tString creatorUserName = getUserName(\n\t\t\tactivity.getUserId(), themeDisplay);\n\t\tString receiverUserName = getUserName(\n\t\t\tactivity.getReceiverUserId(), themeDisplay);\n\n\t\tUser receiverUser = UserLocalServiceUtil.getUserById(\n\t\t\tactivity.getReceiverUserId());\n\n\t\tint activityType = activity.getType();\n\n\t\t// Link\n\n\t\tWallEntry wallEntry = WallEntryLocalServiceUtil.getWallEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tString link =\n\t\t\tthemeDisplay.getPortalURL() +\n\t\t\t\tthemeDisplay.getPathFriendlyURLPublic() + StringPool.SLASH +\n\t\t\t\t\tHtmlUtil.escapeURL(receiverUser.getScreenName()) +\n\t\t\t\t\t\t\"/profile/-/wall/\" + activity.getClassPK();\n\n\t\t// Title\n\n\t\tString title = StringPool.BLANK;\n\n\t\tif (activityType == WallActivityKeys.ADD_ENTRY) {\n\t\t\ttitle = themeDisplay.translate(\n\t\t\t\t\"activity-social-networking-wall-add-entry\",\n\t\t\t\tnew Object[] {creatorUserName, receiverUserName});\n\t\t}\n\n\t\t// Body\n\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tsb.append(\"<a href=\\\"\");\n\t\tsb.append(link);\n\t\tsb.append(\"\\\">\");\n\t\tsb.append(HtmlUtil.escape(cleanContent(wallEntry.getComments())));\n\t\tsb.append(\"<\/a>\");\n\n\t\tString body = sb.toString();\n\n\t\treturn new SocialActivityFeedEntry(link, title, body);\n\t}","commit_id":"607488a5b07e7c0ac5acaf52c44ce7d10af3a104","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"private void setupDependencies(final ModifiableFlexIdeBuildConfiguration bc, final FlashBuilderProject fbProject) {\n    OUTER:\n    for (final String libraryPathOrig : fbProject.getLibraryPaths()) {\n      for (FlashBuilderProject otherProject : myAllFBProjects) {\n        if (otherProject != fbProject && libraryPathOrig.startsWith(\"/\" + otherProject.getName() + \"/\")) {\n          final ModifiableBuildConfigurationEntry bcEntry =\n            myFlexConfigEditor.createBcEntry(bc.getDependencies(), otherProject.getName(), suggestMainBCName(otherProject));\n          bc.getDependencies().getModifiableEntries().add(0, bcEntry);\n          continue OUTER;\n        }\n      }\n\n      final LibraryTableBase.ModifiableModelEx libraryModel = myFlexConfigEditor.getLibraryModel(bc.getDependencies());\n\n      final Library library = libraryModel.createLibrary(null, FlexLibraryType.getInstance());\n\n      final LibraryEx.ModifiableModelEx libraryModifiableModel = ((LibraryEx.ModifiableModelEx)library.getModifiableModel());\n      final String libraryId = UUID.randomUUID().toString();\n      libraryModifiableModel.setProperties(new FlexLibraryProperties(libraryId));\n\n      final String libraryPath = getAbsolutePathWithLinksHandled(fbProject, libraryPathOrig);\n\n      if (libraryPath.toLowerCase().endsWith(\".swc\")) {\n        libraryModifiableModel.addRoot(VirtualFileManager.constructUrl(JarFileSystem.PROTOCOL, libraryPath) + JarFileSystem.JAR_SEPARATOR,\n                                       OrderRootType.CLASSES);\n      }\n      else {\n        libraryModifiableModel.addJarDirectory(VfsUtil.pathToUrl(libraryPath), false);\n      }\n\n      for (final String librarySourcePath : fbProject.getLibrarySourcePaths(libraryPathOrig)) {\n        libraryModifiableModel.addRoot(VfsUtil.pathToUrl(getAbsolutePathWithLinksHandled(fbProject, librarySourcePath)),\n                                       OrderRootType.SOURCES);\n      }\n\n      ApplicationManager.getApplication().runWriteAction(new Runnable() {\n        public void run() {\n          libraryModifiableModel.commit();\n        }\n      });\n\n      final ModifiableModuleLibraryEntry libraryEntry = myFlexConfigEditor.createModuleLibraryEntry(bc.getDependencies(), libraryId);\n      libraryEntry.getDependencyType().setLinkageType(LinkageType.Merged); // todo set correct linkage!\n      bc.getDependencies().getModifiableEntries().add(libraryEntry);\n    }\n  }","id":69995,"modified_method":"private void setupDependencies(final ModifiableFlexIdeBuildConfiguration bc, final FlashBuilderProject fbProject) {\n    OUTER:\n    for (final String libraryPathOrig : fbProject.getLibraryPaths()) {\n      for (FlashBuilderProject otherProject : myAllFBProjects) {\n        if (otherProject != fbProject && libraryPathOrig.startsWith(\"/\" + otherProject.getName() + \"/\")) {\n          final ModifiableBuildConfigurationEntry bcEntry =\n            myFlexConfigEditor.createBcEntry(bc.getDependencies(), otherProject.getName(), suggestMainBCName(otherProject));\n          bc.getDependencies().getModifiableEntries().add(0, bcEntry);\n          continue OUTER;\n        }\n      }\n\n      final LibraryTableBase.ModifiableModelEx libraryModel = myFlexConfigEditor.getLibraryModel(bc.getDependencies());\n\n      final Library library = libraryModel.createLibrary(null, FlexLibraryType.getInstance());\n\n      final LibraryEx.ModifiableModelEx libraryModifiableModel = ((LibraryEx.ModifiableModelEx)library.getModifiableModel());\n      final String libraryId = UUID.randomUUID().toString();\n      libraryModifiableModel.setProperties(new FlexLibraryProperties(libraryId));\n\n      final String libraryPath = getAbsolutePathWithLinksHandled(fbProject, libraryPathOrig);\n\n      if (libraryPath.toLowerCase().endsWith(\".swc\") || libraryPath.toLowerCase().endsWith(\".ane\")) {\n        libraryModifiableModel.addRoot(VirtualFileManager.constructUrl(JarFileSystem.PROTOCOL, libraryPath) + JarFileSystem.JAR_SEPARATOR,\n                                       OrderRootType.CLASSES);\n      }\n      else {\n        libraryModifiableModel.addJarDirectory(VfsUtil.pathToUrl(libraryPath), false);\n      }\n\n      for (final String librarySourcePath : fbProject.getLibrarySourcePaths(libraryPathOrig)) {\n        libraryModifiableModel.addRoot(VfsUtil.pathToUrl(getAbsolutePathWithLinksHandled(fbProject, librarySourcePath)),\n                                       OrderRootType.SOURCES);\n      }\n\n      ApplicationManager.getApplication().runWriteAction(new Runnable() {\n        public void run() {\n          libraryModifiableModel.commit();\n        }\n      });\n\n      final ModifiableModuleLibraryEntry libraryEntry = myFlexConfigEditor.createModuleLibraryEntry(bc.getDependencies(), libraryId);\n      libraryEntry.getDependencyType().setLinkageType(LinkageType.Merged); // todo set correct linkage!\n      bc.getDependencies().getModifiableEntries().add(libraryEntry);\n    }\n  }","commit_id":"68604040d321e47d763f6cf38b2e1603aae9ec7e","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private static void loadDependenciesAndCheckIfSdkUsed(final FlashBuilderProject project,\n                                                        final Element compilerElement,\n                                                        final Map<String, String> pathReplacementMap) {\n    //noinspection unchecked\n    for (final Element libraryPathElement : ((Iterable<Element>)compilerElement.getChildren(LIBRARY_PATH_TAG))) {\n      //noinspection unchecked\n      for (final Element libraryPathEntryElement : ((Iterable<Element>)libraryPathElement.getChildren(LIBRARY_PATH_ENTRY_TAG))) {\n        final Attribute libraryKindAttr = libraryPathEntryElement.getAttribute(LIBRARY_KIND_ATTR);\n        final String libraryKind = libraryKindAttr != null ? libraryKindAttr.getValue() : SWC_FILE_KIND;\n        if (libraryKind.equals(USE_SDK_KIND)) {\n          project.setSdkUsed(true);\n        }\n        else {\n          final String libraryPath = libraryPathEntryElement.getAttributeValue(PATH_ATTR);\n          if (!StringUtil.isEmptyOrSpaces(libraryPath)) {\n            if (SWC_FILE_KIND.equals(libraryKind) || SWC_FOLDER_KIND.equals(libraryKind)) {\n              // TODO: parse sources\n              final Collection<String> librarySourcePaths = new ArrayList<String>();\n\n              final String replacedPath = pathReplacementMap.get(libraryPath);\n              project.addLibraryPathAndSources(FileUtil.toSystemIndependentName(replacedPath != null ? replacedPath : libraryPath),\n                                               librarySourcePaths);\n            }\n          }\n        }\n      }\n    }\n  }","id":69996,"modified_method":"private static void loadDependenciesAndCheckIfSdkUsed(final FlashBuilderProject project,\n                                                        final Element compilerElement,\n                                                        final Map<String, String> pathReplacementMap) {\n    //noinspection unchecked\n    for (final Element libraryPathElement : ((Iterable<Element>)compilerElement.getChildren(LIBRARY_PATH_TAG))) {\n      //noinspection unchecked\n      for (final Element libraryPathEntryElement : ((Iterable<Element>)libraryPathElement.getChildren(LIBRARY_PATH_ENTRY_TAG))) {\n        final Attribute libraryKindAttr = libraryPathEntryElement.getAttribute(LIBRARY_KIND_ATTR);\n        final String libraryKind = libraryKindAttr != null ? libraryKindAttr.getValue() : SWC_FILE_KIND;\n        if (libraryKind.equals(USE_SDK_KIND)) {\n          project.setSdkUsed(true);\n        }\n        else {\n          final String libraryPath = libraryPathEntryElement.getAttributeValue(PATH_ATTR);\n          if (!StringUtil.isEmptyOrSpaces(libraryPath)) {\n            if (SWC_FILE_KIND.equals(libraryKind) || SWC_FOLDER_KIND.equals(libraryKind) || ANE_KIND.equals(libraryKind)) {\n              // TODO: parse sources\n              final Collection<String> librarySourcePaths = new ArrayList<String>();\n\n              final String replacedPath = pathReplacementMap.get(libraryPath);\n              project.addLibraryPathAndSources(FileUtil.toSystemIndependentName(replacedPath != null ? replacedPath : libraryPath),\n                                               librarySourcePaths);\n            }\n          }\n        }\n      }\n    }\n  }","commit_id":"68604040d321e47d763f6cf38b2e1603aae9ec7e","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public void updateStep() {\n    if (getWizardContext().isProjectFileDirectorySet() && myInitialPathComponent.getComponent().getText().isEmpty()) {\n      myInitialPathComponent.getComponent().setText(getWizardContext().getProjectFileDirectory());\n    }\n  }","id":69997,"modified_method":"public void updateStep() {\n    if (getWizardContext().isProjectFileDirectorySet() && myInitialPathComponent.getComponent().getText().isEmpty()) {\n      myInitialPathComponent.getComponent().setText(FileUtil.toSystemDependentName(getWizardContext().getProjectFileDirectory()));\n    }\n  }","commit_id":"68604040d321e47d763f6cf38b2e1603aae9ec7e","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"public boolean validate() throws ConfigurationException {\n    String name = myNamePathComponent.getNameValue();\n    if (name.length() == 0) {\n      final ApplicationInfo info = ApplicationManager.getApplication().getComponent(ApplicationInfo.class);\n      throw new ConfigurationException(IdeBundle.message(\"prompt.new.project.file.name\", info.getVersionName(), myWizardContext.getPresentationName()));\n    }\n\n    final String projectFileDirectory = getProjectFileDirectory();\n    if (projectFileDirectory.length() == 0) {\n      throw new ConfigurationException(IdeBundle.message(\"prompt.enter.project.file.location\", myWizardContext.getPresentationName()));\n    }\n\n    final boolean shouldPromptCreation = myNamePathComponent.isPathChangedByUser();\n    if (!ProjectWizardUtil.createDirectoryIfNotExists(IdeBundle.message(\"directory.project.file.directory\",myWizardContext.getPresentationName()), projectFileDirectory, shouldPromptCreation)) {\n      return false;\n    }\n\n    boolean shouldContinue = true;\n    final File projectFile = new File(getProjectFilePath());\n    if (projectFile.exists()) {\n      int answer = Messages.showYesNoDialog(\n        IdeBundle.message(\"prompt.overwrite.project.file\", projectFile.getAbsolutePath(), myWizardContext.getPresentationName()),\n        IdeBundle.message(\"title.file.already.exists\"),\n        Messages.getQuestionIcon()\n      );\n      shouldContinue = answer == 0;\n    }\n\n    return shouldContinue;\n  }","id":69998,"modified_method":"public boolean validate() throws ConfigurationException {\n    String name = myNamePathComponent.getNameValue();\n    if (name.length() == 0) {\n      final ApplicationInfo info = ApplicationManager.getApplication().getComponent(ApplicationInfo.class);\n      throw new ConfigurationException(IdeBundle.message(\"prompt.new.project.file.name\", info.getVersionName(), myWizardContext.getPresentationName()));\n    }\n\n    final String projectFileDirectory = getProjectFileDirectory();\n    if (projectFileDirectory.length() == 0) {\n      throw new ConfigurationException(IdeBundle.message(\"prompt.enter.project.file.location\", myWizardContext.getPresentationName()));\n    }\n\n    final boolean shouldPromptCreation = myNamePathComponent.isPathChangedByUser();\n    if (!ProjectWizardUtil.createDirectoryIfNotExists(IdeBundle.message(\"directory.project.file.directory\",myWizardContext.getPresentationName()), projectFileDirectory, shouldPromptCreation)) {\n      return false;\n    }\n\n    boolean shouldContinue = true;\n\n    final String path = myWizardContext.isCreatingNewProject() && myWizardContext.getProjectStorageFormat() == DIRECTORY_BASED\n                        ? getProjectFileDirectory() + \"/\" + ProjectUtil.DIRECTORY_BASED_PROJECT_DIR\n                        : getProjectFilePath();\n    final File projectFile = new File(path);\n    if (projectFile.exists()) {\n      final String title = myWizardContext.isCreatingNewProject()\n                           ? IdeBundle.message(\"title.new.project\")\n                           : IdeBundle.message(\"title.add.module\");\n      final String message = myWizardContext.isCreatingNewProject() && myWizardContext.getProjectStorageFormat() == DIRECTORY_BASED\n                             ? IdeBundle.message(\"prompt.overwrite.project.folder\", ProjectUtil.DIRECTORY_BASED_PROJECT_DIR,\n                                                 projectFile.getParentFile().getAbsolutePath())\n                             : IdeBundle.message(\"prompt.overwrite.project.file\", projectFile.getAbsolutePath(),\n                                                 myWizardContext.getPresentationName());\n      int answer = Messages.showYesNoDialog(message, title, Messages.getQuestionIcon());\n      shouldContinue = answer == 0;\n    }\n\n    return shouldContinue;\n  }","commit_id":"98da9890a7b5e7577da7dc2bcc45194cbdad5a04","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String getProjectFileDirectory() {\n    return myNamePathComponent.getPath();\n  }","id":69999,"modified_method":"public String getProjectFileDirectory() {\n    return FileUtil.toSystemIndependentName(myNamePathComponent.getPath());\n  }","commit_id":"98da9890a7b5e7577da7dc2bcc45194cbdad5a04","url":"https://github.com/JetBrains/intellij-community"}]