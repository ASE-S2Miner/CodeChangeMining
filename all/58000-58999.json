[{"original_method":"@Override\n\tpublic boolean canRead(ResolvableType elementType, MediaType mediaType, Map<String, Object> hints) {\n\t\treturn this.reader.canRead(elementType, mediaType, hints);\n\t}","id":58000,"modified_method":"@Override\n\tpublic boolean canRead(ResolvableType elementType, MediaType mediaType) {\n\t\treturn this.reader.canRead(elementType, mediaType);\n\t}","commit_id":"857e77eec2cc02ffd4b4f1f22808ccbe32351e3f","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic final Map<String, Object> resolveReadHints(ResolvableType streamType,\n\t\t\tResolvableType elementType, MediaType mediaType, ServerHttpRequest request) {\n\n\t\tMap<String, Object> hints = new HashMap<>();\n\t\tif (this.reader instanceof ServerHttpMessageReader) {\n\t\t\thints.putAll(((ServerHttpMessageReader<T>)this.reader).resolveReadHints(streamType, elementType, mediaType, request));\n\t\t}\n\t\thints.putAll(resolveReadHintsInternal(streamType, elementType, mediaType, request));\n\t\treturn hints;\n\t}","id":58001,"modified_method":"/**\n\t * Invoked before reading the request by\n\t * {@link #read(ResolvableType, ResolvableType, ServerHttpRequest, ServerHttpResponse, Map)}\n\t *\n\t * @param streamType the original type used for the method return value. For annotation\n\t * based controllers, the {@link MethodParameter} is available via {@link ResolvableType#getSource()}.\n\t * Can be {@code null}.\n\t * @param elementType the stream element type to process\n\t * @param request the current HTTP request, can be {@code null}\n\t * @param response the current HTTP response, can be {@code null}\n\t * @return Additional information about how to write the body\n\t */\n\tprotected abstract Map<String, Object> beforeRead(ResolvableType streamType,\n\t\t\tResolvableType elementType, ServerHttpRequest request, ServerHttpResponse response);","commit_id":"857e77eec2cc02ffd4b4f1f22808ccbe32351e3f","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic final Map<String, Object> resolveWriteHints(ResolvableType streamType,\n\t\t\tResolvableType elementType, MediaType mediaType, ServerHttpRequest request) {\n\n\t\tMap<String, Object> hints = new HashMap<>();\n\t\tif (this.writer instanceof ServerHttpMessageWriter) {\n\t\t\thints.putAll(((ServerHttpMessageWriter<T>)this.writer).resolveWriteHints(streamType, elementType, mediaType, request));\n\t\t}\n\t\thints.putAll(resolveWriteHintsInternal(streamType, elementType, mediaType, request));\n\t\treturn hints;\n\t}","id":58002,"modified_method":"/**\n\t * Invoked before writing the response by\n\t * {@link #write(Publisher, ResolvableType, ResolvableType, MediaType, ServerHttpRequest, ServerHttpResponse, Map)}.\n\t *\n\t * @param streamType the original type used for the method return value. For annotation\n\t * based controllers, the {@link MethodParameter} is available via {@link ResolvableType#getSource()}.\n\t * Can be {@code null}.\n\t * @param elementType the stream element type to process\n\t * @param mediaType the content type to use when writing. May be {@code null} to\n\t * indicate that the default content type of the converter must be used.\n\t * @param request the current HTTP request, can be {@code null}\n\t * @param response the current HTTP response, can be {@code null}\n\t * @return Additional information about how to write the body\n\t */\n\tprotected abstract Map<String, Object> beforeWrite(ResolvableType streamType, ResolvableType elementType,\n\t\t\tMediaType mediaType, ServerHttpRequest request, ServerHttpResponse response);","commit_id":"857e77eec2cc02ffd4b4f1f22808ccbe32351e3f","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic boolean canWrite(ResolvableType elementType, MediaType mediaType, Map<String, Object> hints) {\n\t\treturn this.writer.canWrite(elementType, mediaType, hints);\n\t}","id":58003,"modified_method":"@Override\n\tpublic boolean canWrite(ResolvableType elementType, MediaType mediaType) {\n\t\treturn this.writer.canWrite(elementType, mediaType);\n\t}","commit_id":"857e77eec2cc02ffd4b4f1f22808ccbe32351e3f","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tprotected Map<String, Object> resolveReadHintsInternal(ResolvableType streamType,\n\t\t\tResolvableType elementType, MediaType mediaType, ServerHttpRequest request) {\n\n\t\tObject source = streamType.getSource();\n\t\tMethodParameter parameter = (source instanceof MethodParameter ? (MethodParameter)source : null);\n\t\tif (parameter != null) {\n\t\t\tJsonView annotation = parameter.getParameterAnnotation(JsonView.class);\n\t\t\tif (annotation != null) {\n\t\t\t\tClass<?>[] classes = annotation.value();\n\t\t\t\tif (classes.length != 1) {\n\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\"@JsonView only supported for read hints with exactly 1 class argument: \" + parameter);\n\t\t\t\t}\n\t\t\t\treturn Collections.singletonMap(AbstractJackson2Codec.JSON_VIEW_HINT, classes[0]);\n\t\t\t}\n\t\t}\n\t\treturn Collections.emptyMap();\n\t}","id":58004,"modified_method":"@Override\n\tprotected Map<String, Object> beforeRead(ResolvableType streamType,\n\t\t\tResolvableType elementType, ServerHttpRequest request, ServerHttpResponse response) {\n\n\t\tObject source = streamType.getSource();\n\t\tMethodParameter parameter = (source instanceof MethodParameter ? (MethodParameter)source : null);\n\t\tif (parameter != null) {\n\t\t\tJsonView annotation = parameter.getParameterAnnotation(JsonView.class);\n\t\t\tif (annotation != null) {\n\t\t\t\tClass<?>[] classes = annotation.value();\n\t\t\t\tif (classes.length != 1) {\n\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\"@JsonView only supported for read hints with exactly 1 class argument: \" + parameter);\n\t\t\t\t}\n\t\t\t\treturn Collections.singletonMap(AbstractJackson2Codec.JSON_VIEW_HINT, classes[0]);\n\t\t\t}\n\t\t}\n\t\treturn Collections.emptyMap();\n\t}","commit_id":"857e77eec2cc02ffd4b4f1f22808ccbe32351e3f","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tprotected Map<String, Object> resolveWriteHintsInternal(ResolvableType streamType,\n\t\t\tResolvableType elementType, MediaType mediaType, ServerHttpRequest request) {\n\n\t\tObject source = streamType.getSource();\n\t\tMethodParameter returnValue = (source instanceof MethodParameter ? (MethodParameter)source : null);\n\t\tif (returnValue != null) {\n\t\t\tJsonView annotation = returnValue.getMethodAnnotation(JsonView.class);\n\t\t\tif (annotation != null) {\n\t\t\t\tClass<?>[] classes = annotation.value();\n\t\t\t\tif (classes.length != 1) {\n\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\"@JsonView only supported for write hints with exactly 1 class argument: \" + returnValue);\n\t\t\t\t}\n\t\t\t\treturn Collections.singletonMap(AbstractJackson2Codec.JSON_VIEW_HINT, classes[0]);\n\t\t\t}\n\t\t}\n\t\treturn Collections.emptyMap();\n\t}","id":58005,"modified_method":"@Override\n\tprotected Map<String, Object> beforeWrite(ResolvableType streamType, ResolvableType elementType,\n\t\t\tMediaType mediaType, ServerHttpRequest request, ServerHttpResponse response) {\n\n\t\tMap<String, Object> hints = new HashMap<>();\n\t\tObject source = streamType.getSource();\n\t\tMethodParameter returnValue = (source instanceof MethodParameter ? (MethodParameter)source : null);\n\t\tif (returnValue != null) {\n\t\t\tJsonView annotation = returnValue.getMethodAnnotation(JsonView.class);\n\t\t\tif (annotation != null) {\n\t\t\t\tClass<?>[] classes = annotation.value();\n\t\t\t\tif (classes.length != 1) {\n\t\t\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\t\t\"@JsonView only supported for write hints with exactly 1 class argument: \" + returnValue);\n\t\t\t\t}\n\t\t\t\thints.put(AbstractJackson2Codec.JSON_VIEW_HINT, classes[0]);\n\t\t\t}\n\t\t}\n\t\treturn hints;\n\t}","commit_id":"857e77eec2cc02ffd4b4f1f22808ccbe32351e3f","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"protected void assertPrepared() throws Exception\n        {\n            Assert.assertTrue(file.exists());\n            Assert.assertTrue(offsetsFile.exists());\n            DataInputStream offsets = new DataInputStream(new ByteArrayInputStream(readFileToByteArray(offsetsFile)));\n            Assert.assertTrue(offsets.readUTF().endsWith(\"LZ4Compressor\"));\n            Assert.assertEquals(0, offsets.readInt());\n            Assert.assertEquals(BUFFER_SIZE, offsets.readInt());\n            Assert.assertEquals(fullContents.length, offsets.readLong());\n            Assert.assertEquals(2, offsets.readInt());\n            Assert.assertEquals(0, offsets.readLong());\n            int offset = (int) offsets.readLong();\n            byte[] compressed = readFileToByteArray(file);\n            byte[] uncompressed = new byte[fullContents.length];\n            LZ4Compressor.instance.uncompress(compressed, 0, offset - 4, uncompressed, 0);\n            LZ4Compressor.instance.uncompress(compressed, offset, compressed.length - (4 + offset), uncompressed, partialContents.length);\n            Assert.assertTrue(Arrays.equals(fullContents, uncompressed));\n        }","id":58006,"modified_method":"protected void assertPrepared() throws Exception\n        {\n            Assert.assertTrue(file.exists());\n            Assert.assertTrue(offsetsFile.exists());\n            DataInputStream offsets = new DataInputStream(new ByteArrayInputStream(readFileToByteArray(offsetsFile)));\n            Assert.assertTrue(offsets.readUTF().endsWith(\"LZ4Compressor\"));\n            Assert.assertEquals(0, offsets.readInt());\n            Assert.assertEquals(BUFFER_SIZE, offsets.readInt());\n            Assert.assertEquals(fullContents.length, offsets.readLong());\n            Assert.assertEquals(2, offsets.readInt());\n            Assert.assertEquals(0, offsets.readLong());\n            int offset = (int) offsets.readLong();\n            byte[] compressed = readFileToByteArray(file);\n            byte[] uncompressed = new byte[fullContents.length];\n            LZ4Compressor.create(Collections.<String, String>emptyMap()).uncompress(compressed, 0, offset - 4, uncompressed, 0);\n            LZ4Compressor.create(Collections.<String, String>emptyMap()).uncompress(compressed, offset, compressed.length - (4 + offset), uncompressed, partialContents.length);\n            Assert.assertTrue(Arrays.equals(fullContents, uncompressed));\n        }","commit_id":"e06d411f6a6a459503f09fe80208d1ee261ed772","url":"https://github.com/apache/cassandra"},{"original_method":"protected void assertInProgress() throws Exception\n        {\n            Assert.assertTrue(file.exists());\n            Assert.assertFalse(offsetsFile.exists());\n            byte[] compressed = readFileToByteArray(file);\n            byte[] uncompressed = new byte[partialContents.length];\n            LZ4Compressor.instance.uncompress(compressed, 0, compressed.length - 4, uncompressed, 0);\n            Assert.assertTrue(Arrays.equals(partialContents, uncompressed));\n        }","id":58007,"modified_method":"protected void assertInProgress() throws Exception\n        {\n            Assert.assertTrue(file.exists());\n            Assert.assertFalse(offsetsFile.exists());\n            byte[] compressed = readFileToByteArray(file);\n            byte[] uncompressed = new byte[partialContents.length];\n            LZ4Compressor.create(Collections.<String, String>emptyMap()).uncompress(compressed, 0, compressed.length - 4, uncompressed, 0);\n            Assert.assertTrue(Arrays.equals(partialContents, uncompressed));\n        }","commit_id":"e06d411f6a6a459503f09fe80208d1ee261ed772","url":"https://github.com/apache/cassandra"},{"original_method":"private static Map<String, String> copyOptions(Map<? extends CharSequence, ? extends CharSequence> co)\n    {\n        if (co == null || co.isEmpty())\n            return Collections.<String, String>emptyMap();\n\n        Map<String, String> compressionOptions = new HashMap<>();\n        for (Map.Entry<? extends CharSequence, ? extends CharSequence> entry : co.entrySet())\n            compressionOptions.put(entry.getKey().toString(), entry.getValue().toString());\n        return compressionOptions;\n    }","id":58008,"modified_method":"private static Map<String, String> copyOptions(Map<? extends CharSequence, ? extends CharSequence> co)\n    {\n        if (co == null || co.isEmpty())\n            return Collections.emptyMap();\n\n        Map<String, String> compressionOptions = new HashMap<>();\n        for (Map.Entry<? extends CharSequence, ? extends CharSequence> entry : co.entrySet())\n            compressionOptions.put(entry.getKey().toString(), entry.getValue().toString());\n        return compressionOptions;\n    }","commit_id":"e06d411f6a6a459503f09fe80208d1ee261ed772","url":"https://github.com/apache/cassandra"},{"original_method":"public static CompressionParams lz4(Integer chunkLength)\n    {\n        return new CompressionParams(LZ4Compressor.instance, chunkLength, Collections.emptyMap());\n    }","id":58009,"modified_method":"public static CompressionParams lz4(Integer chunkLength)\n    {\n        return new CompressionParams(LZ4Compressor.create(Collections.emptyMap()), chunkLength, Collections.emptyMap());\n    }","commit_id":"e06d411f6a6a459503f09fe80208d1ee261ed772","url":"https://github.com/apache/cassandra"},{"original_method":"public static void testPerformances() throws IOException\n    {\n        for (ICompressor compressor: new ICompressor[] {\n                SnappyCompressor.instance,  // warm up\n                DeflateCompressor.instance,\n                LZ4Compressor.instance,\n                SnappyCompressor.instance\n        })\n        {\n            for (BufferType in: BufferType.values())\n            {\n                if (compressor.supports(in))\n                {\n                    for (BufferType out: BufferType.values())\n                    {\n                        if (compressor.supports(out))\n                        {\n                            for (int i=0; i<10; ++i)\n                                testPerformance(compressor, in, out);\n                            System.out.println();\n                        }\n                    }\n                }\n            }\n        }\n    }","id":58010,"modified_method":"public static void testPerformances() throws IOException\n    {\n        for (ICompressor compressor: new ICompressor[] {\n                SnappyCompressor.instance,  // warm up\n                DeflateCompressor.instance,\n                LZ4Compressor.create(Collections.emptyMap()),\n                SnappyCompressor.instance\n        })\n        {\n            for (BufferType in: BufferType.values())\n            {\n                if (compressor.supports(in))\n                {\n                    for (BufferType out: BufferType.values())\n                    {\n                        if (compressor.supports(out))\n                        {\n                            for (int i=0; i<10; ++i)\n                                testPerformance(compressor, in, out);\n                            System.out.println();\n                        }\n                    }\n                }\n            }\n        }\n    }","commit_id":"e06d411f6a6a459503f09fe80208d1ee261ed772","url":"https://github.com/apache/cassandra"},{"original_method":"public Set<String> supportedOptions()\n    {\n        return new HashSet<>();\n    }","id":58011,"modified_method":"public Set<String> supportedOptions()\n    {\n        return new HashSet<>(Arrays.asList(LZ4_HIGH_COMPRESSION_LEVEL, LZ4_COMPRESSOR_TYPE));\n    }","commit_id":"e06d411f6a6a459503f09fe80208d1ee261ed772","url":"https://github.com/apache/cassandra"},{"original_method":"public static LZ4Compressor create(Map<String, String> args)\n    {\n        return instance;\n    }","id":58012,"modified_method":"public static LZ4Compressor create(Map<String, String> args) throws ConfigurationException\n    {\n        String compressorType = validateCompressorType(args.get(LZ4_COMPRESSOR_TYPE));\n        Integer compressionLevel = validateCompressionLevel(args.get(LZ4_HIGH_COMPRESSION_LEVEL));\n\n        Pair<String, Integer> compressorTypeAndLevel = Pair.create(compressorType, compressionLevel);\n        LZ4Compressor instance = instances.get(compressorTypeAndLevel);\n        if (instance == null)\n        {\n            if (compressorType.equals(LZ4_FAST_COMPRESSOR) && args.get(LZ4_HIGH_COMPRESSION_LEVEL) != null)\n                logger.warn(\"'{}' parameter is ignored when '{}' is '{}'\", LZ4_HIGH_COMPRESSION_LEVEL, LZ4_COMPRESSOR_TYPE, LZ4_FAST_COMPRESSOR);\n            instance = new LZ4Compressor(compressorType, compressionLevel);\n            LZ4Compressor instanceFromMap = instances.putIfAbsent(compressorTypeAndLevel, instance);\n            if(instanceFromMap != null)\n                instance = instanceFromMap;\n        }\n        return instance;\n    }","commit_id":"e06d411f6a6a459503f09fe80208d1ee261ed772","url":"https://github.com/apache/cassandra"},{"original_method":"public void uncompress(ByteBuffer input, ByteBuffer output) throws IOException\n    {\n        final int decompressedLength = (input.get() & 0xFF)\n                | ((input.get() & 0xFF) << 8)\n                | ((input.get() & 0xFF) << 16)\n                | ((input.get() & 0xFF) << 24);\n\n        try\n        {\n            int compressedLength = decompressor.decompress(input, input.position(), output, output.position(), decompressedLength);\n            input.position(input.position() + compressedLength);\n            output.position(output.position() + decompressedLength);\n        }\n        catch (LZ4Exception e)\n        {\n            throw new IOException(e);\n        }\n\n        if (input.remaining() > 0)\n        {\n            throw new IOException(\"Compressed lengths mismatch - \"+input.remaining()+\" bytes remain\");\n        }\n    }","id":58013,"modified_method":"private LZ4Compressor(String type, Integer compressionLevel)\n    {\n        this.compressorType = type;\n        this.compressionLevel = compressionLevel;\n        final LZ4Factory lz4Factory = LZ4Factory.fastestInstance();\n        switch (type)\n        {\n            case LZ4_HIGH_COMPRESSOR:\n            {\n                compressor = lz4Factory.highCompressor(compressionLevel);\n                break;\n            }\n            case LZ4_FAST_COMPRESSOR:\n            default:\n            {\n                compressor = lz4Factory.fastCompressor();\n            }\n        }\n\n        decompressor = lz4Factory.fastDecompressor();\n    }","commit_id":"e06d411f6a6a459503f09fe80208d1ee261ed772","url":"https://github.com/apache/cassandra"},{"original_method":"@Test\n    public void compressedSegmenter_LZ4() throws IOException\n    {\n        compressedSegmenter(LZ4Compressor.create(null));\n    }","id":58014,"modified_method":"@Test\n    public void compressedSegmenter_LZ4() throws IOException\n    {\n        compressedSegmenter(LZ4Compressor.create(Collections.emptyMap()));\n    }","commit_id":"e06d411f6a6a459503f09fe80208d1ee261ed772","url":"https://github.com/apache/cassandra"},{"original_method":"public DefaultColorMap() {\n//        addDefault(Header, DEFAULT);\n        addDefault(Info, YELLOW);\n        addDefault(Description, YELLOW);\n        addDefault(ProgressStatus, YELLOW);\n        addDefault(Identifier, GREEN);\n        addDefault(UserInput, GREEN);\n        addDefault(Success, GREEN);\n        addDefault(Failure, RED);\n//        addDefault(Error, RED);\n        defaults.put(STATUSBAR, BOLD);\n    }","id":58015,"modified_method":"public DefaultColorMap() {\n        addDefault(Info, \"yellow\");\n        addDefault(Error, \"default\");\n        addDefault(Header, \"default\");\n        addDefault(Description, \"yellow\");\n        addDefault(ProgressStatus, \"yellow\");\n        addDefault(Identifier, \"green\");\n        addDefault(UserInput, \"bold\");\n        addDefault(Success, \"default\");\n        addDefault(Failure, \"red\");\n        addDefault(STATUSBAR, \"bold\");\n    }","commit_id":"39270166805ef3e212c7a3fe1e26cedf874d2441","url":"https://github.com/gradle/gradle"},{"original_method":"private void addDefault(StyledTextOutput.Style style, Ansi.Color color) {\n        defaults.put(style.name().toLowerCase(), color.name());\n    }","id":58016,"modified_method":"private void addDefault(StyledTextOutput.Style style, String color) {\n        addDefault(style.name().toLowerCase(), color);\n    }","commit_id":"39270166805ef3e212c7a3fe1e26cedf874d2441","url":"https://github.com/gradle/gradle"},{"original_method":"public BusinessRuleProvider getProvider() throws CheckedDroolsException {\n        if (null == provider)\n            provider = loadProvider();\n        return provider;\n    }","id":58017,"modified_method":"public BusinessRuleProvider getProvider() throws CheckedDroolsException {\n        if ( null == provider ) loadProvider();\n        return provider;\n    }","commit_id":"e93b5b5770dcb9873589d76866dba4b8f9f2b6e2","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private BusinessRuleProvider loadProvider() throws CheckedDroolsException {\n        String interfaceName = BusinessRuleProvider.class.getName();\n        try {\n            URL systemResource = null;\n            for (Enumeration<URL> systemResources = ClassLoader\n                    .getSystemResources(\"META-INF/services/\" + interfaceName); systemResources\n                    .hasMoreElements();) {\n                if (null != systemResource)\n                    throwMultipleImplementationsDetected();\n                systemResource = systemResources.nextElement();\n            }\n\n            if (systemResource == null) {\n                throwNoImplementationFound();\n            }\n\n            BufferedReader reader = new BufferedReader(new InputStreamReader(systemResource.openStream()));\n            String className = null;\n            for (String currentName; (currentName = reader.readLine()) != null;) {\n                if (className != null) {\n                    throwMultipleImplementationsDetected();\n                }\n                className = currentName;\n            }\n\n            if (null == className) {\n                throwNoImplementationFound();\n            }\n\n            ServiceRegistryImpl.getInstance().addDefault(BusinessRuleProvider.class, className);\n            return ServiceRegistryImpl.getInstance().get(BusinessRuleProvider.class);\n        } catch (IOException e) {\n            throw new CheckedDroolsException(\"Error obtaining \" + interfaceName, e);\n        }\n    }","id":58018,"modified_method":"private void loadProvider() throws CheckedDroolsException {\n        ServiceRegistryImpl.getInstance().addDefault( BusinessRuleProvider.class,\n                                                      \"org.drools.ide.common.BusinessRuleProviderDefaultImpl\" );\n        setDecisionTableProvider( ServiceRegistryImpl.getInstance().get( BusinessRuleProvider.class ) );\n    }","commit_id":"e93b5b5770dcb9873589d76866dba4b8f9f2b6e2","url":"https://github.com/droolsjbpm/drools"},{"original_method":"/**\n     * Parse the persistence unit definitions based on persistence_2_0.xsd.\n     *\n     * @param reader\n     * @return\n     * @throws XMLStreamException\n     */\n    private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version) throws XMLStreamException {\n        PersistenceUnitMetadata pu = new PersistenceUnitMetadata();\n        List<String> classes = new ArrayList<String>(1);\n        List<String> jarfiles = new ArrayList<String>(1);\n        List<String> mappingFiles = new ArrayList<String>(1);\n        Properties properties = new Properties();\n\n        // set defaults\n        pu.setTransactionType(PersistenceUnitTransactionType.JTA);\n        pu.setValidationMode(ValidationMode.AUTO);\n        pu.setSharedCacheMode(SharedCacheMode.UNSPECIFIED);\n        pu.setPersistenceProviderClassName(\"org.hibernate.ejb.HibernatePersistence\");  // TODO: move to domain.xml?\n        if (version.equals(Version.JPA_1_0)) {\n            pu.setPersistenceXMLSchemaVersion(\"1.0\");\n        } else {\n            pu.setPersistenceXMLSchemaVersion(\"2.0\");\n        }\n\n        final int count = reader.getAttributeCount();\n        for (int i = 0; i < count; i++) {\n            final String value = reader.getAttributeValue(i);\n            if (reader.getAttributeNamespace(i) != null) {\n                continue;\n            }\n            final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i));\n            switch (attribute) {\n                case NAME:\n                    pu.setPersistenceUnitName(value);\n                    break;\n                case TRANSACTIONTYPE:\n                    if (value.equalsIgnoreCase(\"RESOURCE_LOCAL\"))\n                        pu.setTransactionType(PersistenceUnitTransactionType.RESOURCE_LOCAL);\n                    break;\n                default:\n                    throw unexpectedAttribute(reader, i);\n            }\n        }\n\n        // until the ending PERSISTENCEUNIT tag\n        while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {\n            final Element element = Element.forName(reader.getLocalName());\n            switch (element) {\n                case CLASS:\n                    classes.add(reader.getElementText());\n                    break;\n\n                case DESCRIPTION:\n                    final String description = reader.getElementText();\n                    break;\n\n                case EXCLUDEUNLISTEDCLASSES:\n                    pu.setExcludeUnlistedClasses(Boolean.getBoolean(reader.getElementText()));\n                    break;\n\n                case JARFILE:\n                    String file = reader.getElementText();\n                    jarfiles.add(file);\n                    break;\n\n                case JTADATASOURCE:\n                    pu.setJtaDataSourceName(reader.getElementText());\n                    break;\n\n                case NONJTADATASOURCE:\n                    pu.setNonJtaDataSourceName(reader.getElementText());\n                    break;\n\n                case MAPPINGFILE:\n                    mappingFiles.add(reader.getElementText());\n                    break;\n\n                case PROPERTIES:\n                    parseProperties(reader, properties);\n                    break;\n\n                case PROVIDER:\n                    pu.setPersistenceProviderClassName(reader.getElementText());\n                    break;\n\n                case SHAREDCACHEMODE:\n                    String cm = reader.getElementText();\n                    pu.setSharedCacheMode(SharedCacheMode.valueOf(cm));\n                    break;\n\n                case VALIDATIONMODE:\n                    String validationMode = reader.getElementText();\n                    pu.setValidationMode(ValidationMode.valueOf(validationMode));\n                    break;\n\n                default:\n                    throw unexpectedElement(reader);\n            }\n        }\n\n        pu.setManagedClassNames(classes);\n        pu.setJarFiles(jarfiles);\n        pu.setMappingFiles(mappingFiles);\n        pu.setProperties(properties);\n        return pu;\n    }","id":58019,"modified_method":"/**\n     * Parse the persistence unit definitions based on persistence_2_0.xsd.\n     *\n     * @param reader\n     * @return\n     * @throws XMLStreamException\n     */\n    private static PersistenceUnitMetadata parsePU(XMLStreamReader reader, Version version) throws XMLStreamException {\n        PersistenceUnitMetadata pu = new PersistenceUnitMetadata();\n        List<String> classes = new ArrayList<String>(1);\n        List<String> jarfiles = new ArrayList<String>(1);\n        List<String> mappingFiles = new ArrayList<String>(1);\n        Properties properties = new Properties();\n\n        // set defaults\n        pu.setTransactionType(PersistenceUnitTransactionType.JTA);\n        pu.setValidationMode(ValidationMode.AUTO);\n        pu.setSharedCacheMode(SharedCacheMode.UNSPECIFIED);\n        pu.setPersistenceProviderClassName(\"org.hibernate.ejb.HibernatePersistence\");  // TODO: move to domain.xml?\n        if (version.equals(Version.JPA_1_0)) {\n            pu.setPersistenceXMLSchemaVersion(\"1.0\");\n        } else {\n            pu.setPersistenceXMLSchemaVersion(\"2.0\");\n        }\n\n        final int count = reader.getAttributeCount();\n        for (int i = 0; i < count; i++) {\n            final String value = reader.getAttributeValue(i);\n            final String attributeNamespace = reader.getAttributeNamespace(i);\n            if (attributeNamespace != null && !attributeNamespace.isEmpty()) {\n                continue;\n            }\n            final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i));\n            switch (attribute) {\n                case NAME:\n                    pu.setPersistenceUnitName(value);\n                    break;\n                case TRANSACTIONTYPE:\n                    if (value.equalsIgnoreCase(\"RESOURCE_LOCAL\"))\n                        pu.setTransactionType(PersistenceUnitTransactionType.RESOURCE_LOCAL);\n                    break;\n                default:\n                    throw unexpectedAttribute(reader, i);\n            }\n        }\n\n        // until the ending PERSISTENCEUNIT tag\n        while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {\n            final Element element = Element.forName(reader.getLocalName());\n            switch (element) {\n                case CLASS:\n                    classes.add(reader.getElementText());\n                    break;\n\n                case DESCRIPTION:\n                    final String description = reader.getElementText();\n                    break;\n\n                case EXCLUDEUNLISTEDCLASSES:\n                    pu.setExcludeUnlistedClasses(Boolean.getBoolean(reader.getElementText()));\n                    break;\n\n                case JARFILE:\n                    String file = reader.getElementText();\n                    jarfiles.add(file);\n                    break;\n\n                case JTADATASOURCE:\n                    pu.setJtaDataSourceName(reader.getElementText());\n                    break;\n\n                case NONJTADATASOURCE:\n                    pu.setNonJtaDataSourceName(reader.getElementText());\n                    break;\n\n                case MAPPINGFILE:\n                    mappingFiles.add(reader.getElementText());\n                    break;\n\n                case PROPERTIES:\n                    parseProperties(reader, properties);\n                    break;\n\n                case PROVIDER:\n                    pu.setPersistenceProviderClassName(reader.getElementText());\n                    break;\n\n                case SHAREDCACHEMODE:\n                    String cm = reader.getElementText();\n                    pu.setSharedCacheMode(SharedCacheMode.valueOf(cm));\n                    break;\n\n                case VALIDATIONMODE:\n                    String validationMode = reader.getElementText();\n                    pu.setValidationMode(ValidationMode.valueOf(validationMode));\n                    break;\n\n                default:\n                    throw unexpectedElement(reader);\n            }\n        }\n\n        pu.setManagedClassNames(classes);\n        pu.setJarFiles(jarfiles);\n        pu.setMappingFiles(mappingFiles);\n        pu.setProperties(properties);\n        return pu;\n    }","commit_id":"27dd065f2b710c2b3d7073321a030c775ef3cafb","url":"https://github.com/wildfly/wildfly"},{"original_method":"public static PersistenceUnitMetadataHolder parse(final XMLStreamReader reader) throws XMLStreamException {\n\n        reader.require(START_DOCUMENT, null, null);  // check for a bogus document and throw error\n\n        // Read until the first start element\n        Version version = null;\n        while (reader.hasNext() && reader.next() != START_ELEMENT) {\n            if (reader.getEventType() == DTD) {\n                final String dtdLocation = readDTDLocation(reader);\n                if (dtdLocation != null) {\n                    version = Version.forLocation(dtdLocation);\n                }\n            }\n        }\n        final String schemaLocation = readSchemaLocation(reader);\n        if (schemaLocation != null) {\n            version = Version.forLocation(schemaLocation);\n        }\n        if (version == null || Version.UNKNOWN.equals(version)) {\n            // Look at the version attribute\n            String versionString = null;\n            final int count = reader.getAttributeCount();\n            for (int i = 0; i < count; i++) {\n                if (reader.getAttributeNamespace(i) != null) {\n                    continue;\n                }\n                final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i));\n                if (attribute == Attribute.VERSION) {\n                    versionString = reader.getAttributeValue(i);\n                }\n            }\n            if (\"1.0\".equals(versionString)) {\n                version = Version.JPA_1_0;\n            } else if (\"1\".equals(versionString)) {\n                version = Version.JPA_1_0;\n            } else if (\"2.0\".equals(versionString)) {\n                version = Version.JPA_2_0;\n            } else if (\"2\".equals(versionString)) {\n                version = Version.JPA_2_0;\n            }\n        }\n\n        final int count = reader.getAttributeCount();\n        for (int i = 0; i < count; i++) {\n            final String value = reader.getAttributeValue(i);\n            if (reader.getAttributeNamespace(i) != null) {\n                continue;\n            }\n            final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i));\n            switch (attribute) {\n                case VERSION:\n                    // log.info(\"version = \" + value);\n                    // TODO:  handle version\n                    break;\n                default:\n                    throw unexpectedAttribute(reader, i);\n            }\n        }\n        final List<PersistenceUnitMetadata> PUs = new ArrayList<PersistenceUnitMetadata>();\n        // until the ending PERSISTENCE tag\n        while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {\n            final Element element = Element.forName(reader.getLocalName());\n            switch (element) {\n                case PERSISTENCEUNIT:\n                    PersistenceUnitMetadata pu = parsePU(reader, version);\n                    PUs.add(pu);\n                    log.info(\"read persistence.xml for \" + pu.getPersistenceUnitName());\n                    break;\n\n                default:\n                    throw unexpectedElement(reader);\n            }\n        }\n        PersistenceUnitMetadataHolder result = new PersistenceUnitMetadataHolder().setPersistenceUnits(PUs);\n        if (log.isLoggable(Level.FINEST))\n            log.finest(result.toString());\n\n        return result;\n    }","id":58020,"modified_method":"public static PersistenceUnitMetadataHolder parse(final XMLStreamReader reader) throws XMLStreamException {\n\n        reader.require(START_DOCUMENT, null, null);  // check for a bogus document and throw error\n\n        // Read until the first start element\n        Version version = null;\n        while (reader.hasNext() && reader.next() != START_ELEMENT) {\n            if (reader.getEventType() == DTD) {\n                final String dtdLocation = readDTDLocation(reader);\n                if (dtdLocation != null) {\n                    version = Version.forLocation(dtdLocation);\n                }\n            }\n        }\n        final String schemaLocation = readSchemaLocation(reader);\n        if (schemaLocation != null) {\n            version = Version.forLocation(schemaLocation);\n        }\n        if (version == null || Version.UNKNOWN.equals(version)) {\n            // Look at the version attribute\n            String versionString = null;\n            final int count = reader.getAttributeCount();\n            for (int i = 0; i < count; i++) {\n                final String attributeNamespace = reader.getAttributeNamespace(i);\n                if (attributeNamespace != null && !attributeNamespace.isEmpty()) {\n                    continue;\n                }\n                final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i));\n                if (attribute == Attribute.VERSION) {\n                    versionString = reader.getAttributeValue(i);\n                }\n            }\n            if (\"1.0\".equals(versionString)) {\n                version = Version.JPA_1_0;\n            } else if (\"1\".equals(versionString)) {\n                version = Version.JPA_1_0;\n            } else if (\"2.0\".equals(versionString)) {\n                version = Version.JPA_2_0;\n            } else if (\"2\".equals(versionString)) {\n                version = Version.JPA_2_0;\n            }\n        }\n\n        final int count = reader.getAttributeCount();\n        for (int i = 0; i < count; i++) {\n            final String value = reader.getAttributeValue(i);\n            final String attributeNamespace = reader.getAttributeNamespace(i);\n            if (attributeNamespace != null && !attributeNamespace.isEmpty()) {\n                continue;\n            }\n            final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i));\n            switch (attribute) {\n                case VERSION:\n                    // log.info(\"version = \" + value);\n                    // TODO:  handle version\n                    break;\n                default:\n                    throw unexpectedAttribute(reader, i);\n            }\n        }\n        final List<PersistenceUnitMetadata> PUs = new ArrayList<PersistenceUnitMetadata>();\n        // until the ending PERSISTENCE tag\n        while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {\n            final Element element = Element.forName(reader.getLocalName());\n            switch (element) {\n                case PERSISTENCEUNIT:\n                    PersistenceUnitMetadata pu = parsePU(reader, version);\n                    PUs.add(pu);\n                    log.info(\"read persistence.xml for \" + pu.getPersistenceUnitName());\n                    break;\n\n                default:\n                    throw unexpectedElement(reader);\n            }\n        }\n        PersistenceUnitMetadataHolder result = new PersistenceUnitMetadataHolder().setPersistenceUnits(PUs);\n        if (log.isLoggable(Level.FINEST))\n            log.finest(result.toString());\n\n        return result;\n    }","commit_id":"27dd065f2b710c2b3d7073321a030c775ef3cafb","url":"https://github.com/wildfly/wildfly"},{"original_method":"private static void parseProperties(XMLStreamReader reader, Properties properties) throws XMLStreamException {\n\n        while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {\n            final Element element = Element.forName(reader.getLocalName());\n            switch (element) {\n                case PROPERTY:\n                    final int count = reader.getAttributeCount();\n                    String name = null, value = null;\n                    for (int i = 0; i < count; i++) {\n                        final String attributeValue = reader.getAttributeValue(i);\n                        if (reader.getAttributeNamespace(i) != null) {\n                            continue;\n                        }\n                        final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i));\n                        switch (attribute) {\n                            case NAME:\n                                name = attributeValue;\n                                break;\n                            case VALUE:\n                                value = attributeValue;\n                                if (name != null && value != null) {\n                                    properties.put(name, value);\n                                }\n                                name = value = null;\n                                break;\n                            default:\n                                throw unexpectedAttribute(reader, i);\n                        }\n                    }\n                    if (reader.hasNext() && (reader.nextTag() != END_ELEMENT))\n                        throw unexpectedElement(reader);\n\n                    break;\n                default:\n                    throw unexpectedElement(reader);\n            }\n        }\n    }","id":58021,"modified_method":"private static void parseProperties(XMLStreamReader reader, Properties properties) throws XMLStreamException {\n\n        while (reader.hasNext() && reader.nextTag() != END_ELEMENT) {\n            final Element element = Element.forName(reader.getLocalName());\n            switch (element) {\n                case PROPERTY:\n                    final int count = reader.getAttributeCount();\n                    String name = null, value = null;\n                    for (int i = 0; i < count; i++) {\n                        final String attributeValue = reader.getAttributeValue(i);\n                        final String attributeNamespace = reader.getAttributeNamespace(i);\n                        if (attributeNamespace != null && !attributeNamespace.isEmpty()) {\n                            continue;\n                        }\n                        final Attribute attribute = Attribute.forName(reader.getAttributeLocalName(i));\n                        switch (attribute) {\n                            case NAME:\n                                name = attributeValue;\n                                break;\n                            case VALUE:\n                                value = attributeValue;\n                                if (name != null && value != null) {\n                                    properties.put(name, value);\n                                }\n                                name = value = null;\n                                break;\n                            default:\n                                throw unexpectedAttribute(reader, i);\n                        }\n                    }\n                    if (reader.hasNext() && (reader.nextTag() != END_ELEMENT))\n                        throw unexpectedElement(reader);\n\n                    break;\n                default:\n                    throw unexpectedElement(reader);\n            }\n        }\n    }","commit_id":"27dd065f2b710c2b3d7073321a030c775ef3cafb","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n\tpublic void settingsActivityCreate(final SettingsActivity activity, PreferenceScreen screen) {\n\t\tPreference offlineData = screen.findPreference(\"local_indexes\");\n\t\tif (offlineData == null) {\n\t\t\tlog.error(\"OsmandMonitoringPlugin: Index settings preference not found !\");\n\t\t} else {\n\t\t\tofflineData.setSummary(offlineData.getSummary() + \" \" + app.getString(R.string.gpx_index_settings_descr));\n\t\t}\n\t\tPreferenceScreen general = (PreferenceScreen) screen.findPreference(SettingsActivity.SCREEN_ID_GENERAL_SETTINGS);\n\t\t//general.addPreference(activity.createEditTextPreference(settings.LIVE_MONITORING_URL, R.string.live_monitoring_url,\n\t\t//\t\tR.string.live_monitoring_url_descr));\n\t\t\n\n\t\tPreferenceCategory cat = new PreferenceCategory(activity);\n\t\tcat.setTitle(R.string.save_track_to_gpx);\n\t\t((PreferenceScreen) screen.findPreference(SettingsActivity.SCREEN_ID_NAVIGATION_SETTINGS)).addPreference(cat);\n\n\t\tcat.addPreference(activity.createCheckBoxPreference(settings.SAVE_TRACK_TO_GPX, R.string.save_track_to_gpx,\n\t\t\t\tR.string.save_track_to_gpx_descrp));\n\t\tcat.addPreference(activity.createTimeListPreference(settings.SAVE_TRACK_INTERVAL, SECONDS,\n\t\t\t\tMINUTES, 1, R.string.save_track_interval, R.string.save_track_interval_descr));\n\n\t\tcat = new PreferenceCategory(activity);\n\t\tcat.setTitle(R.string.live_monitoring);\n\t\t((PreferenceScreen) screen.findPreference(SettingsActivity.SCREEN_ID_NAVIGATION_SETTINGS)).addPreference(cat);\n\t\t\n\t\tcat.addPreference(activity.createCheckBoxPreference(settings.LIVE_MONITORING, R.string.live_monitoring,\n\t\t\t\tR.string.live_monitoring_descr));\n\t\tcat.addPreference(activity.createTimeListPreference(settings.LIVE_MONITORING_INTERVAL, SECONDS,\n\t\t\t\tMINUTES, 1, R.string.live_monitoring_interval, R.string.live_monitoring_interval_descr));\n\n\t\tcat = new PreferenceCategory(activity);\n\t\tcat.setTitle(R.string.monitor_preferences);\n\t\t((PreferenceScreen) screen.findPreference(SettingsActivity.SCREEN_ID_GENERAL_SETTINGS)).addPreference(cat);\n\t\tcat.addPreference(activity.createEditTextPreference(settings.LIVE_MONITORING_URL, R.string.live_monitoring_url,\n\t\t\t\tR.string.live_monitoring_url_descr));\n\t\tPreference pref = new Preference(activity);\n\t\tpref.setTitle(R.string.save_current_track);\n\t\tpref.setSummary(R.string.save_current_track_descr);\n\t\tpref.setOnPreferenceClickListener(new OnPreferenceClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic boolean onPreferenceClick(Preference preference) {\n\t\t\t\tSavingTrackHelper helper = app.getSavingTrackHelper();\n\t\t\t\tif (helper.hasDataToSave()) {\n\t\t\t\t\tsaveCurrentTracks(helper, activity);\n\t\t\t\t} else {\n\t\t\t\t\thelper.close();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tcat.addPreference(pref);\n\n\n\t}","id":58022,"modified_method":"@Override\n\tpublic void settingsActivityCreate(final SettingsActivity activity, PreferenceScreen screen) {\n\t\tPreference offlineData = screen.findPreference(\"local_indexes\");\n\t\tif (offlineData == null) {\n\t\t\tlog.error(\"OsmandMonitoringPlugin: Index settings preference not found !\");\n\t\t} else {\n\t\t\tofflineData.setSummary(offlineData.getSummary() + \" \" + app.getString(R.string.gpx_index_settings_descr));\n\t\t}\n\n\t\tPreferenceCategory cat = new PreferenceCategory(activity);\n\t\tcat.setTitle(R.string.save_track_to_gpx);\n\t\t((PreferenceScreen) screen.findPreference(SettingsActivity.SCREEN_ID_NAVIGATION_SETTINGS)).addPreference(cat);\n\n\t\tcat.addPreference(activity.createCheckBoxPreference(settings.SAVE_TRACK_TO_GPX, R.string.save_track_to_gpx,\n\t\t\t\tR.string.save_track_to_gpx_descrp));\n\t\tcat.addPreference(activity.createTimeListPreference(settings.SAVE_TRACK_INTERVAL, SECONDS,\n\t\t\t\tMINUTES, 1, R.string.save_track_interval, R.string.save_track_interval_descr));\n\n\t\tcat = new PreferenceCategory(activity);\n\t\tcat.setTitle(R.string.live_monitoring);\n\t\t((PreferenceScreen) screen.findPreference(SettingsActivity.SCREEN_ID_NAVIGATION_SETTINGS)).addPreference(cat);\n\t\t\n\t\tcat.addPreference(activity.createCheckBoxPreference(settings.LIVE_MONITORING, R.string.live_monitoring,\n\t\t\t\tR.string.live_monitoring_descr));\n\t\tcat.addPreference(activity.createTimeListPreference(settings.LIVE_MONITORING_INTERVAL, SECONDS,\n\t\t\t\tMINUTES, 1, R.string.live_monitoring_interval, R.string.live_monitoring_interval_descr));\n\n\t\tcat = new PreferenceCategory(activity);\n\t\tcat.setTitle(R.string.monitor_preferences);\n\t\t((PreferenceScreen) screen.findPreference(SettingsActivity.SCREEN_ID_GENERAL_SETTINGS)).addPreference(cat);\n\t\tcat.addPreference(activity.createEditTextPreference(settings.LIVE_MONITORING_URL, R.string.live_monitoring_url,\n\t\t\t\tR.string.live_monitoring_url_descr));\n\t\tPreference pref = new Preference(activity);\n\t\tpref.setTitle(R.string.save_current_track);\n\t\tpref.setSummary(R.string.save_current_track_descr);\n\t\tpref.setOnPreferenceClickListener(new OnPreferenceClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic boolean onPreferenceClick(Preference preference) {\n\t\t\t\tSavingTrackHelper helper = app.getSavingTrackHelper();\n\t\t\t\tif (helper.hasDataToSave()) {\n\t\t\t\t\tsaveCurrentTracks(helper, activity);\n\t\t\t\t} else {\n\t\t\t\t\thelper.close();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\t\tcat.addPreference(pref);\n\n\n\t}","commit_id":"fc4cd3d762abfc35dde896bfb6e1c80f95b1230b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {\n\t\t// customize the sub-preference title according the selected profile\n\t\tString title = \"\";\n\t\tif (preference.getKey() != null && preference instanceof PreferenceScreen\n\t\t\t\t&& SettingsActivity.SCREEN_ID_NAVIGATION_SETTINGS.equals(preference.getKey())) {\n\t\t\tfinal ApplicationMode appMode = osmandSettings.getApplicationMode();\n\t\t\tPreferenceScreen scr = (PreferenceScreen) preference;\n\t\t\ttitle = scr.getTitle().toString();\n\t\t\tif (title.startsWith(\"-\")) {\n\t\t\t\ttitle = title.substring(1);\n\t\t\t}\n\t\t\tBuilder builder = new AlertDialog.Builder(this);\n\t\t\tView view = getLayoutInflater().inflate(R.layout.calculate_route, null);\n\t\t\tbuilder.setView(view);\n\t\t\tfinal AlertDialog dlg = builder.show();\n\t\t\t\n\t\t\tfinal ToggleButton[] buttons = new ToggleButton[ApplicationMode.values().length];\n\t\t\tbuttons[ApplicationMode.CAR.ordinal()] = (ToggleButton) view.findViewById(R.id.CarButton);\n\t\t\tbuttons[ApplicationMode.BICYCLE.ordinal()] = (ToggleButton) view.findViewById(R.id.BicycleButton);\n\t\t\tbuttons[ApplicationMode.PEDESTRIAN.ordinal()] = (ToggleButton) view.findViewById(R.id.PedestrianButton);\n\t\t\tfor (int i = 0; i < buttons.length; i++) {\n\t\t\t\tif (buttons[i] != null) {\n\t\t\t\t\tfinal int ind = i;\n\t\t\t\t\tToggleButton b = buttons[i];\n\t\t\t\t\tb.setChecked(appMode == ApplicationMode.values()[i]);\n\t\t\t\t\tb.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n\t\t\t\t\t\t\tif (isChecked) {\n\t\t\t\t\t\t\t\tfor (int j = 0; j < buttons.length; j++) {\n\t\t\t\t\t\t\t\t\tif (buttons[j] != null) {\n\t\t\t\t\t\t\t\t\t\tif (buttons[j].isChecked() != (ind == j)) {\n\t\t\t\t\t\t\t\t\t\t\tbuttons[j].setChecked(ind == j);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// revert state\n\t\t\t\t\t\t\t\tboolean revert = true;\n\t\t\t\t\t\t\t\tfor (int j = 0; j < buttons.length; j++) {\n\t\t\t\t\t\t\t\t\tif (buttons[j] != null) {\n\t\t\t\t\t\t\t\t\t\tif (buttons[j].isChecked()) {\n\t\t\t\t\t\t\t\t\t\t\trevert = false;\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (revert) {\n\t\t\t\t\t\t\t\t\tbuttons[ind].setChecked(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdlg.dismiss();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\n\t\t\tscr.getDialog().setTitle(\"   \" + title + \" [\" + osmandSettings.APPLICATION_MODE.get().toHumanString(this) + \"]\");\n\t\t\tscr.getDialog().setOnDismissListener(new OnDismissListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onDismiss(DialogInterface dialog) {\n\t\t\t\t\tosmandSettings.APPLICATION_MODE.set(appMode);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (preference instanceof PreferenceScreen) {\n\t\t\tfinal PreferenceScreen scr = (PreferenceScreen) preference;\n\t\t\ttitle = scr.getTitle().toString();\n\t\t\tscr.getDialog().setTitle(\"   \" + title);\n\t\t}\n\t\tif (preference instanceof PreferenceScreen) {\n\t\t\tfinal PreferenceScreen scr = (PreferenceScreen) preference;\n\t\t\tCustomTitleBarView titleBar = new CustomTitleBarView(title, R.drawable.tab_settings_screen_icon, null) {\n\t\t\t\t@Override\n\t\t\t\tpublic void backPressed() {\n\t\t\t\t\tscr.getDialog().dismiss();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tView titleView = getLayoutInflater().inflate(titleBar.getTitleBarLayout(), null);\n\t\t\ttitleBar.init(titleView);\n\t\t\t// View decorView = scr.getDialog().getWindow().getDecorView();\n\t\t\t// LinearLayout ll = new LinearLayout(titleView.getContext());\n\t\t\t// scr.getDialog().getWindow().setContentView(ll);\n\t\t\tView dv = scr.getDialog().getWindow().getDecorView();\n\t\t\tListView ls = (ListView) dv.findViewById(android.R.id.list);\n\t\t\tif (ls != null) {\n\t\t\t\tls.addFooterView(titleView);\n\t\t\t}\n\n\t\t\t// LayoutParams lp = new ViewGroup.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);\n\t\t\t// scr.getDialog().addContentView(titleView, lp);\n\n\t\t\t// ll.setOrientation(LinearLayout.VERTICAL);\n\t\t\t// ll.addView(titleView);\n\t\t\t// ll.addView(decorView);\n\n\t\t}\n\n\t\tif (preference == applicationDir) {\n\t\t\treturn true;\n\t\t}\n\t\treturn super.onPreferenceTreeClick(preferenceScreen, preference);\n\t}","id":58023,"modified_method":"@Override\n\tpublic boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference) {\n\t\t// customize the sub-preference title according the selected profile\n\t\tString title = \"\";\n\t\tif (preference.getKey() != null && preference instanceof PreferenceScreen\n\t\t\t\t&& SettingsActivity.SCREEN_ID_NAVIGATION_SETTINGS.equals(preference.getKey())) {\n\t\t\tfinal ApplicationMode appMode = osmandSettings.getApplicationMode();\n\t\t\tPreferenceScreen scr = (PreferenceScreen) preference;\n\t\t\ttitle = scr.getTitle().toString();\n\t\t\tif (title.startsWith(\"-\")) {\n\t\t\t\ttitle = title.substring(1);\n\t\t\t}\n\t\t\tBuilder builder = new AlertDialog.Builder(this);\n\t\t\tView view = getLayoutInflater().inflate(R.layout.navigate_mode, null);\n\t\t\tbuilder.setView(view);\n\t\t\tfinal AlertDialog dlg = builder.show();\n\t\t\t\n\t\t\tfinal Button[] buttons = new Button[ApplicationMode.values().length];\n\t\t\tbuttons[ApplicationMode.CAR.ordinal()] = (Button) view.findViewById(R.id.CarButton);\n\t\t\tbuttons[ApplicationMode.BICYCLE.ordinal()] = (Button) view.findViewById(R.id.BicycleButton);\n\t\t\tbuttons[ApplicationMode.PEDESTRIAN.ordinal()] = (Button) view.findViewById(R.id.PedestrianButton);\n\t\t\tfinal Dialog scrDialog = scr.getDialog();\n\t\t\tfinal String tlt = \"   \" + title;\n\t\t\tfor (int i = 0; i < buttons.length; i++) {\n\t\t\t\tif (buttons[i] != null) {\n\t\t\t\t\tfinal int ind = i;\n\t\t\t\t\tfinal Button b = buttons[i];\n\t\t\t\t\tb.setOnClickListener(new View.OnClickListener() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\t\t\tApplicationMode selected = ApplicationMode.values()[ind];\n\t\t\t\t\t\t\tosmandSettings.APPLICATION_MODE.set(selected);\n\t\t\t\t\t\t\tupdateAllSettings();\n\t\t\t\t\t\t\tscrDialog.setTitle(tlt + \" [\" + selected.toHumanString(SettingsActivity.this) + \"]\");\n\t\t\t\t\t\t\tdlg.dismiss();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tscrDialog.setTitle(tlt);\n\t\t\tscr.getDialog().setOnDismissListener(new OnDismissListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void onDismiss(DialogInterface dialog) {\n\t\t\t\t\tosmandSettings.APPLICATION_MODE.set(appMode);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (preference instanceof PreferenceScreen) {\n\t\t\tfinal PreferenceScreen scr = (PreferenceScreen) preference;\n\t\t\ttitle = scr.getTitle().toString();\n\t\t\tscr.getDialog().setTitle(\"   \" + title);\n\t\t}\n\t\tif (preference instanceof PreferenceScreen) {\n\t\t\tfinal PreferenceScreen scr = (PreferenceScreen) preference;\n\t\t\tCustomTitleBarView titleBar = new CustomTitleBarView(title, R.drawable.tab_settings_screen_icon, null) {\n\t\t\t\t@Override\n\t\t\t\tpublic void backPressed() {\n\t\t\t\t\tscr.getDialog().dismiss();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tView titleView = getLayoutInflater().inflate(titleBar.getTitleBarLayout(), null);\n\t\t\ttitleBar.init(titleView);\n\t\t\t// View decorView = scr.getDialog().getWindow().getDecorView();\n\t\t\t// LinearLayout ll = new LinearLayout(titleView.getContext());\n\t\t\t// scr.getDialog().getWindow().setContentView(ll);\n\t\t\tView dv = scr.getDialog().getWindow().getDecorView();\n\t\t\tListView ls = (ListView) dv.findViewById(android.R.id.list);\n\t\t\tif (ls != null) {\n\t\t\t\tls.addFooterView(titleView);\n\t\t\t}\n\n\t\t\t// LayoutParams lp = new ViewGroup.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);\n\t\t\t// scr.getDialog().addContentView(titleView, lp);\n\n\t\t\t// ll.setOrientation(LinearLayout.VERTICAL);\n\t\t\t// ll.addView(titleView);\n\t\t\t// ll.addView(decorView);\n\n\t\t}\n\n\t\tif (preference == applicationDir) {\n\t\t\treturn true;\n\t\t}\n\t\treturn super.onPreferenceTreeClick(preferenceScreen, preference);\n\t}","commit_id":"fc4cd3d762abfc35dde896bfb6e1c80f95b1230b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void onItemSelected(CheckBox ch, int position) {\n\t\tfinal IndexItem e = (IndexItem) getListAdapter().getItem(position);\n\t\tif (ch.isChecked()) {\n\t\t\tch.setChecked(!ch.isChecked());\n\t\t\tgetDownloadActivity().getEntriesToDownload().remove(e);\n\t\t\tgetDownloadActivity().updateDownloadButton(true);\n\t\t\treturn;\n\t\t}\n\n\t\tList<DownloadEntry> download = e.createDownloadEntry(getMyApplication(), e.getType(), new ArrayList<DownloadEntry>());\n\t\tif (download.size() > 0) {\n\t\t\tgetDownloadActivity().getEntriesToDownload().put(e, download);\n\t\t\tgetDownloadActivity().updateDownloadButton(true);\n\t\t\tch.setChecked(!ch.isChecked());\n\t\t}\n\t}","id":58024,"modified_method":"private void onItemSelected(CheckBox ch, int position) {\n\t\tfinal IndexItem e = (IndexItem) getListAdapter().getItem(position);\n\t\tif (ch.isChecked()) {\n\t\t\tch.setChecked(!ch.isChecked());\n\t\t\tgetDownloadActivity().getEntriesToDownload().remove(e);\n\t\t\tgetDownloadActivity().updateDownloadButton(true);\n\t\t} else {\n\t\t\tList<DownloadEntry> download = e.createDownloadEntry(getMyApplication(), e.getType(), new ArrayList<DownloadEntry>());\n\t\t\tif (download.size() > 0) {\n\t\t\t\tgetDownloadActivity().getEntriesToDownload().put(e, download);\n\t\t\t\tgetDownloadActivity().updateDownloadButton(true);\n\t\t\t\tch.setChecked(!ch.isChecked());\n\t\t\t}\n\t\t}\n\t\trefreshSelectAll();\n\t}","commit_id":"e72e6202f0132f1ffa7f2851690f49abf26b7934","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n\t\tupdateHeader();\n\t\tActionBar actionBar = getDownloadActivity().getSupportActionBar();\n\t\tactionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);\n\n\t\tif (getMyApplication().getAppCustomization().showDownloadExtraActions()) {\n\t\t\tMenuItem item = menu.add(0, DownloadIndexFragment.RELOAD_ID, 0, R.string.update_downlod_list);\n\t\t\titem.setIcon(R.drawable.ic_action_refresh_dark);\n\t\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\t\tSubMenu s = menu.addSubMenu(0, DownloadIndexFragment.MORE_ID, 0, \"\");\n\t\t\ts.setIcon(R.drawable.ic_overflow_menu_white);\n\t\t\ts.add(0, DownloadIndexFragment.SELECT_ALL_ID, 0, R.string.select_all);\n\t\t\ts.add(0, DownloadIndexFragment.DESELECT_ALL_ID, 0, R.string.deselect_all);\n\t\t\tMenuItemCompat.setShowAsAction(s.getItem(), MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\t}\n\t}","id":58025,"modified_method":"@Override\n\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {\n\t\tupdateHeader();\n\t\tActionBar actionBar = getDownloadActivity().getSupportActionBar();\n\t\tactionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);\n\n\t\tif (getMyApplication().getAppCustomization().showDownloadExtraActions()) {\n\t\t\tMenuItem item = menu.add(0, DownloadIndexFragment.RELOAD_ID, 0, R.string.update_downlod_list);\n\t\t\titem.setIcon(R.drawable.ic_action_refresh_dark);\n\t\t\tMenuItemCompat.setShowAsAction(item, MenuItemCompat.SHOW_AS_ACTION_ALWAYS);\n\t\t}\n\t}","commit_id":"e72e6202f0132f1ffa7f2851690f49abf26b7934","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n\t\tView view = inflater.inflate(R.layout.update_index, container, false);\n\t\tCheckBox selectAll = (CheckBox) view.findViewById(R.id.select_all);\n\t\tselectAll.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n\t\t\t@Override\n\t\t\tpublic void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n\t\t\t\tfor (IndexItem item : indexItems) {\n\t\t\t\t\tif (isChecked) {\n\t\t\t\t\t\tList<DownloadEntry> download = item.createDownloadEntry(getMyApplication(), item.getType(), new ArrayList<DownloadEntry>());\n\t\t\t\t\t\tif (download.size() > 0) {\n\t\t\t\t\t\t\tgetDownloadActivity().getEntriesToDownload().put(item, download);\n\t\t\t\t\t\t\tgetDownloadActivity().updateDownloadButton(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgetDownloadActivity().getEntriesToDownload().remove(item);\n\t\t\t\t\t\tgetDownloadActivity().updateDownloadButton(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t\treturn view;\n\t}","id":58026,"modified_method":"@Override\n\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n\t\tView view = inflater.inflate(R.layout.update_index, container, false);\n\t\tfinal CheckBox selectAll = (CheckBox) view.findViewById(R.id.select_all);\n\t\tselectAll.setOnClickListener(new View.OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tif (selectAll.isChecked()) {\n\t\t\t\t\tselectAll();\n\t\t\t\t} else {\n\t\t\t\t\tdeselectAll();\n\n\t\t\t\t}\n\t\t\t\tlistAdapter.notifyDataSetInvalidated();\n\t\t\t}\n\t\t});\n\t\treturn view;\n\t}","commit_id":"e72e6202f0132f1ffa7f2851690f49abf26b7934","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public ContextMenuAdapter createMainOptionsMenu() {\n\t\tfinal OsmandMapTileView mapView = mapActivity.getMapView();\n\t\tfinal OsmandApplication app = mapActivity.getMyApplication();\n\t\tContextMenuAdapter optionsMenuHelper = new ContextMenuAdapter(app);\n\n\t\toptionsMenuHelper.item(R.string.home).iconColor(R.drawable.map_dashboard)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tmapActivity.closeDrawer();\n\t\t\t\t\t\tmapActivity.getDashboard().setDashboardVisibility(true, DashboardType.DASHBOARD);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\t\toptionsMenuHelper.item(R.string.waypoints).iconColor(R.drawable.ic_action_waypoint)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tmapActivity.getDashboard().setDashboardVisibility(true, DashboardType.WAYPOINTS);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\t\toptionsMenuHelper.item(R.string.get_directions).iconColor(R.drawable.ic_action_gdirections_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tif (!routingHelper.isFollowingMode() && !routingHelper.isRoutePlanningMode()) {\n\t\t\t\t\t\t\tenterRoutePlanningMode(null, null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmapActivity.getMapViewTrackingUtilities().switchToRoutePlanningMode();\n\t\t\t\t\t\t\tmapActivity.refreshMap();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\t\t// Default actions (Layers, Configure Map screen, Settings, Search, Favorites)\n\t\toptionsMenuHelper.item(R.string.search_button)\n\t\t\t\t.iconColor(R.drawable.ic_action_search_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tIntent newIntent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization()\n\t\t\t\t\t\t\t\t.getSearchActivity());\n\t\t\t\t\t\tLatLon loc = mapActivity.getMapLocation();\n\t\t\t\t\t\tnewIntent.putExtra(SearchActivity.SEARCH_LAT, loc.getLatitude());\n\t\t\t\t\t\tnewIntent.putExtra(SearchActivity.SEARCH_LON, loc.getLongitude());\n\t\t\t\t\t\tif (mapActivity.getMapViewTrackingUtilities().isMapLinkedToLocation()) {\n\t\t\t\t\t\t\tnewIntent.putExtra(SearchActivity.SEARCH_NEARBY, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewIntent.addFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\tmapActivity.startActivity(newIntent);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\toptionsMenuHelper.item(R.string.shared_string_my_places).iconColor(R.drawable.ic_action_fav_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tIntent newIntent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization()\n\t\t\t\t\t\t\t\t.getFavoritesActivity());\n\t\t\t\t\t\tnewIntent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\tmapActivity.startActivity(newIntent);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\n\t\toptionsMenuHelper.item(R.string.show_point_options).iconColor(R.drawable.ic_action_marker_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tmapActivity.getMapLayers().getContextMenuLayer().showContextMenu(mapView.getLatitude(), mapView.getLongitude(), true);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\toptionsMenuHelper.item(R.string.configure_map).iconColor(R.drawable.ic_action_layers_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tmapActivity.getDashboard().setDashboardVisibility(true, DashboardType.CONFIGURE_MAP);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\toptionsMenuHelper.item(R.string.layer_map_appearance).iconColor(R.drawable.ic_configure_screen_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tmapActivity.getDashboard().setDashboardVisibility(true, DashboardType.CONFIGURE_SCREEN);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\tString d = getString(R.string.index_settings);\n\t\tif (app.getDownloadThread().getIndexes().isDownloadedFromInternet) {\n\t\t\tList<IndexItem> updt = app.getDownloadThread().getIndexes().getItemsToUpdate();\n\t\t\tif (updt != null && updt.size() > 0) {\n\t\t\t\td += \" (\" + updt.size() + \")\";\n\t\t\t}\n\t\t}\n\t\toptionsMenuHelper.item(R.string.index_settings).name(d).iconColor(R.drawable.ic_type_archive)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tIntent newIntent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization()\n\t\t\t\t\t\t\t\t.getDownloadActivity());\n\t\t\t\t\t\t// causes wrong position caching: newIntent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\tmapActivity.startActivity(newIntent);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\toptionsMenuHelper.item(R.string.osm_live).iconColor(R.drawable.ic_action_osm_live)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tIntent intent = new Intent(mapActivity, OsmLiveActivity.class);\n\t\t\t\t\t\tmapActivity.startActivity(intent);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\toptionsMenuHelper.item(R.string.prefs_plugins).iconColor(R.drawable.ic_extension_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tIntent newIntent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization()\n\t\t\t\t\t\t\t\t.getPluginsActivity());\n\t\t\t\t\t\t// causes wrong position caching: newIntent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\tmapActivity.startActivity(newIntent);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\n\t\toptionsMenuHelper.item(R.string.shared_string_settings).iconColor(R.drawable.ic_action_settings)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal Intent settings = new Intent(mapActivity, getMyApplication().getAppCustomization()\n\t\t\t\t\t\t\t\t.getSettingsActivity());\n\t\t\t\t\t\tmapActivity.startActivity(settings);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\t\toptionsMenuHelper.item(R.string.shared_string_help).iconColor(R.drawable.ic_action_help)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tmapActivity.startActivity(new Intent(mapActivity, HelpActivity.class));\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\t//////////// Others\n\t\tOsmandPlugin.registerOptionsMenu(mapActivity, optionsMenuHelper);\n\n//\t\toptionsMenuHelper.item(R.string.shared_string_exit).iconColor(R.drawable.ic_action_quit_dark )\n//\t\t\t\t\t.listen(new OnContextMenuClick() {\n//\t\t\t@Override\n//\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n//\t\t\t\t// 1. Work for almost all cases when user open apps from main menu\n////\t\t\t\tIntent newIntent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization().getMapActivity());\n////\t\t\t\tnewIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n////\t\t\t\t// not exit\n////\t\t\t\tnewIntent.putExtra(AppInitializer.APP_EXIT_KEY, AppInitializer.APP_EXIT_CODE);\n////\t\t\t\tmapActivity.startActivity(newIntent);\n//\t\t\t\t// In future when map will be main screen this should change\n//\t\t\t\tapp.closeApplication(mapActivity);\n//\t\t\t\treturn true;\n//\t\t\t}\n//\t\t}).reg();\n\n\t\tgetMyApplication().getAppCustomization().prepareOptionsMenu(mapActivity, optionsMenuHelper);\n\t\treturn optionsMenuHelper;\n\t}","id":58027,"modified_method":"public ContextMenuAdapter createMainOptionsMenu() {\n\t\tfinal OsmandMapTileView mapView = mapActivity.getMapView();\n\t\tfinal OsmandApplication app = mapActivity.getMyApplication();\n\t\tContextMenuAdapter optionsMenuHelper = new ContextMenuAdapter(app);\n\n\t\toptionsMenuHelper.item(R.string.home).iconColor(R.drawable.map_dashboard)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tmapActivity.closeDrawer();\n\t\t\t\t\t\tmapActivity.getDashboard().setDashboardVisibility(true, DashboardType.DASHBOARD);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\t\toptionsMenuHelper.item(R.string.map_markers).iconColor(R.drawable.ic_action_waypoint)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tIntent newIntent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization()\n\t\t\t\t\t\t\t\t.getMapMarkersActivity());\n\t\t\t\t\t\tnewIntent.addFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\tmapActivity.startActivity(newIntent);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\t\toptionsMenuHelper.item(R.string.get_directions).iconColor(R.drawable.ic_action_gdirections_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tif (!routingHelper.isFollowingMode() && !routingHelper.isRoutePlanningMode()) {\n\t\t\t\t\t\t\tenterRoutePlanningMode(null, null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmapActivity.getMapViewTrackingUtilities().switchToRoutePlanningMode();\n\t\t\t\t\t\t\tmapActivity.refreshMap();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\t\t// Default actions (Layers, Configure Map screen, Settings, Search, Favorites)\n\t\toptionsMenuHelper.item(R.string.search_button)\n\t\t\t\t.iconColor(R.drawable.ic_action_search_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tIntent newIntent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization()\n\t\t\t\t\t\t\t\t.getSearchActivity());\n\t\t\t\t\t\tLatLon loc = mapActivity.getMapLocation();\n\t\t\t\t\t\tnewIntent.putExtra(SearchActivity.SEARCH_LAT, loc.getLatitude());\n\t\t\t\t\t\tnewIntent.putExtra(SearchActivity.SEARCH_LON, loc.getLongitude());\n\t\t\t\t\t\tif (mapActivity.getMapViewTrackingUtilities().isMapLinkedToLocation()) {\n\t\t\t\t\t\t\tnewIntent.putExtra(SearchActivity.SEARCH_NEARBY, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewIntent.addFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\tmapActivity.startActivity(newIntent);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\toptionsMenuHelper.item(R.string.shared_string_my_places).iconColor(R.drawable.ic_action_fav_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tIntent newIntent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization()\n\t\t\t\t\t\t\t\t.getFavoritesActivity());\n\t\t\t\t\t\tnewIntent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\tmapActivity.startActivity(newIntent);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\n\t\toptionsMenuHelper.item(R.string.show_point_options).iconColor(R.drawable.ic_action_marker_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tmapActivity.getMapLayers().getContextMenuLayer().showContextMenu(mapView.getLatitude(), mapView.getLongitude(), true);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\toptionsMenuHelper.item(R.string.configure_map).iconColor(R.drawable.ic_action_layers_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tmapActivity.getDashboard().setDashboardVisibility(true, DashboardType.CONFIGURE_MAP);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\toptionsMenuHelper.item(R.string.layer_map_appearance).iconColor(R.drawable.ic_configure_screen_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tmapActivity.getDashboard().setDashboardVisibility(true, DashboardType.CONFIGURE_SCREEN);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\tString d = getString(R.string.index_settings);\n\t\tif (app.getDownloadThread().getIndexes().isDownloadedFromInternet) {\n\t\t\tList<IndexItem> updt = app.getDownloadThread().getIndexes().getItemsToUpdate();\n\t\t\tif (updt != null && updt.size() > 0) {\n\t\t\t\td += \" (\" + updt.size() + \")\";\n\t\t\t}\n\t\t}\n\t\toptionsMenuHelper.item(R.string.index_settings).name(d).iconColor(R.drawable.ic_type_archive)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tIntent newIntent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization()\n\t\t\t\t\t\t\t\t.getDownloadActivity());\n\t\t\t\t\t\t// causes wrong position caching: newIntent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\tmapActivity.startActivity(newIntent);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\toptionsMenuHelper.item(R.string.osm_live).iconColor(R.drawable.ic_action_osm_live)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tIntent intent = new Intent(mapActivity, OsmLiveActivity.class);\n\t\t\t\t\t\tmapActivity.startActivity(intent);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\toptionsMenuHelper.item(R.string.prefs_plugins).iconColor(R.drawable.ic_extension_dark)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tIntent newIntent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization()\n\t\t\t\t\t\t\t\t.getPluginsActivity());\n\t\t\t\t\t\t// causes wrong position caching: newIntent.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\t\t\t\t\tmapActivity.startActivity(newIntent);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\n\t\toptionsMenuHelper.item(R.string.shared_string_settings).iconColor(R.drawable.ic_action_settings)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal Intent settings = new Intent(mapActivity, getMyApplication().getAppCustomization()\n\t\t\t\t\t\t\t\t.getSettingsActivity());\n\t\t\t\t\t\tmapActivity.startActivity(settings);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\t\toptionsMenuHelper.item(R.string.shared_string_help).iconColor(R.drawable.ic_action_help)\n\t\t\t\t.listen(new OnContextMenuClick() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\tmapActivity.startActivity(new Intent(mapActivity, HelpActivity.class));\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}).reg();\n\n\t\t//////////// Others\n\t\tOsmandPlugin.registerOptionsMenu(mapActivity, optionsMenuHelper);\n\n//\t\toptionsMenuHelper.item(R.string.shared_string_exit).iconColor(R.drawable.ic_action_quit_dark )\n//\t\t\t\t\t.listen(new OnContextMenuClick() {\n//\t\t\t@Override\n//\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<?> adapter, int itemId, int pos, boolean isChecked) {\n//\t\t\t\t// 1. Work for almost all cases when user open apps from main menu\n////\t\t\t\tIntent newIntent = new Intent(mapActivity, mapActivity.getMyApplication().getAppCustomization().getMapActivity());\n////\t\t\t\tnewIntent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n////\t\t\t\t// not exit\n////\t\t\t\tnewIntent.putExtra(AppInitializer.APP_EXIT_KEY, AppInitializer.APP_EXIT_CODE);\n////\t\t\t\tmapActivity.startActivity(newIntent);\n//\t\t\t\t// In future when map will be main screen this should change\n//\t\t\t\tapp.closeApplication(mapActivity);\n//\t\t\t\treturn true;\n//\t\t\t}\n//\t\t}).reg();\n\n\t\tgetMyApplication().getAppCustomization().prepareOptionsMenu(mapActivity, optionsMenuHelper);\n\t\treturn optionsMenuHelper;\n\t}","commit_id":"494ae4b4d08db62f758e576104b57c291548c56b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tgetMyApplication().applyTheme(this);\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.map_markers);\n\t\tgetSupportActionBar().setTitle(R.string.map_markers);\n\n\t\tnightMode = getMyApplication().getDaynightHelper().isNightModeForMapControls();\n\t\tsetListAdapter(getMapMarkersListAdapter());\n\t}","id":58028,"modified_method":"@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tgetMyApplication().applyTheme(this);\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.map_markers);\n\t\tgetSupportActionBar().setTitle(R.string.map_markers);\n\n\t\t//nightMode = getMyApplication().getDaynightHelper().isNightModeForMapControls();\n\t\tnightMode = !getMyApplication().getSettings().isLightContent();\n\t\tsetListAdapter(getMapMarkersListAdapter());\n\t}","commit_id":"494ae4b4d08db62f758e576104b57c291548c56b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public StableArrayAdapter getMapMarkersListAdapter() {\n\n\t\tfinal List<Object> objects = getListObjects();\n\t\tList<Object> activeObjects = getActiveObjects(objects);\n\n\t\tfinal StableArrayAdapter listAdapter = new StableArrayAdapter(getMyApplication(),\n\t\t\t\tR.layout.waypoint_reached, R.id.title, objects, activeObjects) {\n\n\t\t\t@Override\n\t\t\tpublic void buildDividers() {\n\t\t\t\tdividers = getCustomDividers(ctx, getObjects(), nightMode);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic View getView(final int position, View convertView, ViewGroup parent) {\n\t\t\t\t// User super class to create the View\n\t\t\t\tView v = convertView;\n\t\t\t\tfinal ArrayAdapter<Object> thisAdapter = this;\n\t\t\t\tObject obj = getItem(position);\n\t\t\t\tboolean labelView = (obj instanceof Integer);\n\t\t\t\tboolean topDividerView = (obj instanceof Boolean) && ((Boolean) obj);\n\t\t\t\tboolean bottomDividerView = (obj instanceof Boolean) && !((Boolean) obj);\n\t\t\t\tif (labelView) {\n\t\t\t\t\tv = createItemForCategory(ctx, (Integer) obj, running, position, thisAdapter, nightMode);\n\t\t\t\t\tAndroidUtils.setListItemBackground(MapMarkersActivity.this, v, nightMode);\n\t\t\t\t} else if (topDividerView) {\n\t\t\t\t\tv = ctx.getLayoutInflater().inflate(R.layout.card_top_divider, null);\n\t\t\t\t} else if (bottomDividerView) {\n\t\t\t\t\tv = ctx.getLayoutInflater().inflate(R.layout.card_bottom_divider, null);\n\t\t\t\t} else if (obj instanceof MapMarker) {\n\t\t\t\t\tMapMarker marker = (MapMarker) obj;\n\t\t\t\t\tv = updateWaypointItemView(edit, deletedPoints, app, ctx, helper, v, marker, this,\n\t\t\t\t\t\t\tnightMode, flat);\n\t\t\t\t\tAndroidUtils.setListItemBackground(MapMarkersActivity.this, v, nightMode);\n\t\t\t\t}\n\t\t\t\treturn v;\n\t\t\t}\n\t\t};\n\n\t\tfor (Object p : objects) {\n\t\t\tif (p instanceof MapMarker) {\n\t\t\t\tfinal MapMarker marker = (MapMarker) p;\n\t\t\t\tif (marker.getOriginalPointDescription() != null\n\t\t\t\t\t\t&& marker.getOriginalPointDescription().isSearchingAddress(this)) {\n\t\t\t\t\tGeocodingLookupService.AddressLookupRequest lookupRequest\n\t\t\t\t\t\t\t= new GeocodingLookupService.AddressLookupRequest(marker.point, new GeocodingLookupService.OnAddressLookupResult() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void geocodingDone(String address) {\n\t\t\t\t\t\t\tif (helperCallbacks != null) {\n\t\t\t\t\t\t\t\thelperCallbacks.reloadAdapter();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treloadListAdapter(listAdapter);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, null);\n\t\t\t\t\tgetMyApplication().getGeocodingLookupService().lookupAddress(lookupRequest);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn listAdapter;\n\t}","id":58029,"modified_method":"public StableArrayAdapter getMapMarkersListAdapter() {\n\n\t\tfinal List<Object> objects = getListObjects();\n\t\tList<Object> activeObjects = getActiveObjects(objects);\n\n\t\tfinal StableArrayAdapter listAdapter = new StableArrayAdapter(getMyApplication(),\n\t\t\t\tR.layout.waypoint_reached, R.id.title, objects, activeObjects) {\n\n\t\t\t@Override\n\t\t\tpublic void buildDividers() {\n\t\t\t\tdividers = getCustomDividers(getObjects());\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic View getView(final int position, View convertView, ViewGroup parent) {\n\t\t\t\t// User super class to create the View\n\t\t\t\tView v = convertView;\n\t\t\t\tObject obj = getItem(position);\n\t\t\t\tboolean labelView = (obj instanceof Integer);\n\t\t\t\tboolean topDividerView = (obj instanceof Boolean) && ((Boolean) obj);\n\t\t\t\tboolean bottomDividerView = (obj instanceof Boolean) && !((Boolean) obj);\n\t\t\t\tif (labelView) {\n\t\t\t\t\tv = createItemForCategory((Integer) obj);\n\t\t\t\t\tAndroidUtils.setListItemBackground(MapMarkersActivity.this, v, nightMode);\n\t\t\t\t} else if (topDividerView) {\n\t\t\t\t\tv = getLayoutInflater().inflate(R.layout.card_top_divider, null);\n\t\t\t\t} else if (bottomDividerView) {\n\t\t\t\t\tv = getLayoutInflater().inflate(R.layout.card_bottom_divider, null);\n\t\t\t\t} else if (obj instanceof MapMarker) {\n\t\t\t\t\tMapMarker marker = (MapMarker) obj;\n\t\t\t\t\tv = updateMapMarkerItemView(v, marker);\n\t\t\t\t\tAndroidUtils.setListItemBackground(MapMarkersActivity.this, v, nightMode);\n\t\t\t\t}\n\t\t\t\treturn v;\n\t\t\t}\n\t\t};\n\n\t\tfor (Object p : objects) {\n\t\t\tif (p instanceof MapMarker) {\n\t\t\t\tfinal MapMarker marker = (MapMarker) p;\n\t\t\t\tif (marker.getOriginalPointDescription() != null\n\t\t\t\t\t\t&& marker.getOriginalPointDescription().isSearchingAddress(this)) {\n\t\t\t\t\tGeocodingLookupService.AddressLookupRequest lookupRequest\n\t\t\t\t\t\t\t= new GeocodingLookupService.AddressLookupRequest(marker.point, new GeocodingLookupService.OnAddressLookupResult() {\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void geocodingDone(String address) {\n\t\t\t\t\t\t\treloadListAdapter();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, null);\n\t\t\t\t\tgetMyApplication().getGeocodingLookupService().lookupAddress(lookupRequest);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn listAdapter;\n\t}","commit_id":"494ae4b4d08db62f758e576104b57c291548c56b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public int getRadiusPoi(RotatedTileBox tb) {\n\t\tint r = 0;\n\t\tfinal double zoom = tb.getZoom();\n\t\tif (zoom <= 15) {\n\t\t\tr = 10;\n\t\t} else if (zoom <= 16) {\n\t\t\tr = 14;\n\t\t} else if (zoom <= 17) {\n\t\t\tr = 16;\n\t\t} else {\n\t\t\tr = 18;\n\t\t}\n\t\treturn (int) (r * tb.getDensity());\n\t}","id":58030,"modified_method":"public int getRadiusPoi(RotatedTileBox tb) {\n\t\tint r;\n\t\tfinal double zoom = tb.getZoom();\n\t\tif (zoom <= 15) {\n\t\t\tr = 10;\n\t\t} else if (zoom <= 16) {\n\t\t\tr = 14;\n\t\t} else if (zoom <= 17) {\n\t\t\tr = 16;\n\t\t} else {\n\t\t\tr = 18;\n\t\t}\n\t\treturn (int) (r * tb.getDensity());\n\t}","commit_id":"494ae4b4d08db62f758e576104b57c291548c56b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void initUI() {\n\t\tbitmapPaint = new Paint();\n\t\tbitmapPaint.setDither(true);\n\t\tbitmapPaint.setAntiAlias(true);\n\t\tbitmapPaint.setFilterBitmap(true);\n\t\tmarkerBitmap = BitmapFactory.decodeResource(view.getResources(), R.drawable.map_intermediate_point);\n\t}","id":58031,"modified_method":"private void initUI() {\n\t\tbitmapPaint = new Paint();\n\t\tbitmapPaint.setDither(true);\n\t\tbitmapPaint.setAntiAlias(true);\n\t\tbitmapPaint.setFilterBitmap(true);\n\t\tmarkerBitmapBlue = BitmapFactory.decodeResource(view.getResources(), R.drawable.map_marker_blue);\n\t\tmarkerBitmapGreen = BitmapFactory.decodeResource(view.getResources(), R.drawable.map_marker_green);\n\t\tmarkerBitmapOrange = BitmapFactory.decodeResource(view.getResources(), R.drawable.map_marker_orange);\n\t\tmarkerBitmapRed = BitmapFactory.decodeResource(view.getResources(), R.drawable.map_marker_red);\n\t\tmarkerBitmapYellow = BitmapFactory.decodeResource(view.getResources(), R.drawable.map_marker_yellow);\n\t}","commit_id":"494ae4b4d08db62f758e576104b57c291548c56b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void onDraw(Canvas canvas, RotatedTileBox tb, DrawSettings nightMode) {\n\t\tif (tb.getZoom() < 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tMapMarkersHelper markersHelper = map.getMyApplication().getMapMarkersHelper();\n\t\tint index = 0;\n\t\tfor (MapMarker marker : markersHelper.getActiveMapMarkers()) {\n\t\t\tindex++;\n\t\t\tif (isLocationVisible(tb, marker)) {\n\t\t\t\tint marginX = markerBitmap.getWidth() / 6;\n\t\t\t\tint marginY = markerBitmap.getHeight();\n\t\t\t\tint locationX = tb.getPixXFromLonNoRot(marker.getLongitude());\n\t\t\t\tint locationY = tb.getPixYFromLatNoRot(marker.getLatitude());\n\t\t\t\tcanvas.rotate(-tb.getRotate(), locationX, locationY);\n\t\t\t\tcanvas.drawBitmap(markerBitmap, locationX - marginX, locationY - marginY, bitmapPaint);\n\t\t\t\tcanvas.rotate(tb.getRotate(), locationX, locationY);\n\t\t\t}\n\t\t}\n\t}","id":58032,"modified_method":"@Override\n\tpublic void onDraw(Canvas canvas, RotatedTileBox tb, DrawSettings nightMode) {\n\t\tif (tb.getZoom() < 3) {\n\t\t\treturn;\n\t\t}\n\n\t\tMapMarkersHelper markersHelper = map.getMyApplication().getMapMarkersHelper();\n\t\tfor (MapMarker marker : markersHelper.getActiveMapMarkers()) {\n\t\t\tif (isLocationVisible(tb, marker)) {\n\t\t\t\tBitmap bmp = getMapMarkerBitmap(marker.colorIndex);\n\t\t\t\tint marginX = bmp.getWidth() / 6;\n\t\t\t\tint marginY = bmp.getHeight();\n\t\t\t\tint locationX = tb.getPixXFromLonNoRot(marker.getLongitude());\n\t\t\t\tint locationY = tb.getPixYFromLatNoRot(marker.getLatitude());\n\t\t\t\tcanvas.rotate(-tb.getRotate(), locationX, locationY);\n\t\t\t\tcanvas.drawBitmap(bmp, locationX - marginX, locationY - marginY, bitmapPaint);\n\t\t\t\tcanvas.rotate(tb.getRotate(), locationX, locationY);\n\t\t\t}\n\t\t}\n\t}","commit_id":"494ae4b4d08db62f758e576104b57c291548c56b","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@NotNull\n    public ProtoBuf.Class.Builder classProto(@NotNull ClassDescriptor classDescriptor) {\n        ProtoBuf.Class.Builder builder = ProtoBuf.Class.newBuilder();\n\n        int flags = Flags.getClassFlags(hasAnnotations(classDescriptor), classDescriptor.getVisibility(),\n                                        classDescriptor.getModality(), classDescriptor.getKind(), classDescriptor.isInner());\n        builder.setFlags(flags);\n\n        // TODO extra visibility\n\n        builder.setFqName(getClassId(classDescriptor));\n\n        for (TypeParameterDescriptor typeParameterDescriptor : classDescriptor.getTypeConstructor().getParameters()) {\n            builder.addTypeParameter(typeParameter(typeParameterDescriptor));\n        }\n\n        if (!KotlinBuiltIns.getInstance().isSpecialClassWithNoSupertypes(classDescriptor)) {\n            // Special classes (Any, Nothing) have no supertypes\n            for (JetType supertype : classDescriptor.getTypeConstructor().getSupertypes()) {\n                builder.addSupertype(type(supertype));\n            }\n        }\n\n        ConstructorDescriptor primaryConstructor = classDescriptor.getUnsubstitutedPrimaryConstructor();\n        if (primaryConstructor != null) {\n            if (DescriptorFactory.isDefaultPrimaryConstructor(primaryConstructor)) {\n                builder.setPrimaryConstructor(ProtoBuf.Class.PrimaryConstructor.getDefaultInstance());\n            }\n            else {\n                ProtoBuf.Class.PrimaryConstructor.Builder constructorBuilder = ProtoBuf.Class.PrimaryConstructor.newBuilder();\n                constructorBuilder.setData(callableProto(primaryConstructor));\n                builder.setPrimaryConstructor(constructorBuilder);\n            }\n        }\n\n        // TODO: other constructors\n\n        for (DeclarationDescriptor descriptor : sort(classDescriptor.getDefaultType().getMemberScope().getAllDescriptors())) {\n            if (descriptor instanceof CallableMemberDescriptor) {\n                CallableMemberDescriptor member = (CallableMemberDescriptor) descriptor;\n                if (member.getKind() == CallableMemberDescriptor.Kind.FAKE_OVERRIDE) continue;\n                builder.addMember(callableProto(member));\n            }\n        }\n\n        Collection<DeclarationDescriptor> nestedClasses = classDescriptor.getUnsubstitutedInnerClassesScope().getAllDescriptors();\n        for (DeclarationDescriptor descriptor : sort(nestedClasses)) {\n            if (!isEnumEntry(descriptor)) {\n                builder.addNestedClassName(nameTable.getSimpleNameIndex(descriptor.getName()));\n            }\n        }\n\n        ClassDescriptor classObject = classDescriptor.getClassObjectDescriptor();\n        if (classObject != null) {\n            builder.setClassObject(classObjectProto(classObject));\n        }\n\n        if (classDescriptor.getKind() == ClassKind.ENUM_CLASS) {\n            // Not calling sort() here, because the order of enum entries matters\n            for (DeclarationDescriptor descriptor : nestedClasses) {\n                if (isEnumEntry(descriptor)) {\n                    builder.addEnumEntry(nameTable.getSimpleNameIndex(descriptor.getName()));\n                }\n            }\n        }\n\n        return builder;\n    }","id":58033,"modified_method":"@NotNull\n    public ProtoBuf.Class.Builder classProto(@NotNull ClassDescriptor classDescriptor) {\n        ProtoBuf.Class.Builder builder = ProtoBuf.Class.newBuilder();\n\n        int flags = Flags.getClassFlags(hasAnnotations(classDescriptor), classDescriptor.getVisibility(),\n                                        classDescriptor.getModality(), classDescriptor.getKind(), classDescriptor.isInner());\n        builder.setFlags(flags);\n\n        // TODO extra visibility\n\n        builder.setFqName(getClassId(classDescriptor));\n\n        for (TypeParameterDescriptor typeParameterDescriptor : classDescriptor.getTypeConstructor().getParameters()) {\n            builder.addTypeParameter(typeParameter(typeParameterDescriptor));\n        }\n\n        if (!KotlinBuiltIns.getInstance().isSpecialClassWithNoSupertypes(classDescriptor)) {\n            // Special classes (Any, Nothing) have no supertypes\n            for (JetType supertype : classDescriptor.getTypeConstructor().getSupertypes()) {\n                builder.addSupertype(type(supertype));\n            }\n        }\n\n        ConstructorDescriptor primaryConstructor = classDescriptor.getUnsubstitutedPrimaryConstructor();\n        if (primaryConstructor != null) {\n            if (DescriptorFactory.isDefaultPrimaryConstructor(primaryConstructor)) {\n                builder.setPrimaryConstructor(ProtoBuf.Class.PrimaryConstructor.getDefaultInstance());\n            }\n            else {\n                ProtoBuf.Class.PrimaryConstructor.Builder constructorBuilder = ProtoBuf.Class.PrimaryConstructor.newBuilder();\n                constructorBuilder.setData(callableProto(primaryConstructor));\n                builder.setPrimaryConstructor(constructorBuilder);\n            }\n        }\n\n        // TODO: other constructors\n\n        for (DeclarationDescriptor descriptor : sort(classDescriptor.getDefaultType().getMemberScope().getAllDescriptors())) {\n            if (descriptor instanceof CallableMemberDescriptor) {\n                CallableMemberDescriptor member = (CallableMemberDescriptor) descriptor;\n                if (member.getKind() == CallableMemberDescriptor.Kind.FAKE_OVERRIDE) continue;\n                builder.addMember(callableProto(member));\n            }\n        }\n\n        for (DeclarationDescriptor descriptor : sort(classDescriptor.getUnsubstitutedInnerClassesScope().getAllDescriptors())) {\n            int name = nameTable.getSimpleNameIndex(descriptor.getName());\n            if (isEnumEntry(descriptor)) {\n                builder.addEnumEntry(name);\n            }\n            else {\n                builder.addNestedClassName(name);\n            }\n        }\n\n        ClassDescriptor classObject = classDescriptor.getClassObjectDescriptor();\n        if (classObject != null) {\n            builder.setClassObject(classObjectProto(classObject));\n        }\n\n        return builder;\n    }","commit_id":"fd2ddff75037665d089d440cd8ffbaa2e62a8b8a","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public static List<RunContentDescriptor> collectConsolesByDisplayName(final Project project,\n                                                                        @NotNull NotNullFunction<String, Boolean> titleMatcher) {\n    List<RunContentDescriptor> result = Lists.newArrayList();\n    final ExecutionManager executionManager = ExecutionManager.getInstance(project);\n    final RunContentDescriptor[] runContentDescriptors = ((RunContentManagerImpl)executionManager.getContentManager()).getAllDescriptors();\n    for (RunContentDescriptor runContentDescriptor : runContentDescriptors) {\n      if (titleMatcher.fun(runContentDescriptor.getDisplayName())) {\n        result.add(runContentDescriptor);\n      }\n    }\n    return result;\n  }","id":58034,"modified_method":"public static List<RunContentDescriptor> collectConsolesByDisplayName(final Project project,\n                                                                        @NotNull NotNullFunction<String, Boolean> titleMatcher) {\n    List<RunContentDescriptor> result = Lists.newArrayList();\n    final ExecutionManager executionManager = ExecutionManager.getInstance(project);\n    for (RunContentDescriptor runContentDescriptor : executionManager.getContentManager().getAllDescriptors()) {\n      if (titleMatcher.fun(runContentDescriptor.getDisplayName())) {\n        result.add(runContentDescriptor);\n      }\n    }\n    return result;\n  }","commit_id":"3bc6eade7f9cb70fd0bfce711996afac043c5dce","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static Collection<RunContentDescriptor> findRunningConsole(final Project project,\n                                                                    @NotNull final NotNullFunction<RunContentDescriptor, Boolean> descriptorMatcher) {\n    final ExecutionManager executionManager = ExecutionManager.getInstance(project);\n\n    final RunContentDescriptor selectedContent = executionManager.getContentManager().getSelectedContent();\n    if (selectedContent != null) {\n      final ToolWindow toolWindow = ExecutionManager.getInstance(project).getContentManager().getToolWindowByDescriptor(selectedContent);\n      if (toolWindow != null && toolWindow.isVisible()) {\n        if (descriptorMatcher.fun(selectedContent)) {\n          return Collections.singletonList(selectedContent);\n        }\n      }\n    }\n\n    final ArrayList<RunContentDescriptor> result = Lists.newArrayList();\n    final RunContentDescriptor[] runContentDescriptors = ((RunContentManagerImpl)executionManager.getContentManager()).getAllDescriptors();\n    for (RunContentDescriptor runContentDescriptor : runContentDescriptors) {\n      if (descriptorMatcher.fun(runContentDescriptor)) {\n        result.add(runContentDescriptor);\n      }\n    }\n    return result;\n  }","id":58035,"modified_method":"public static Collection<RunContentDescriptor> findRunningConsole(final Project project,\n                                                                    @NotNull final NotNullFunction<RunContentDescriptor, Boolean> descriptorMatcher) {\n    final ExecutionManager executionManager = ExecutionManager.getInstance(project);\n\n    final RunContentDescriptor selectedContent = executionManager.getContentManager().getSelectedContent();\n    if (selectedContent != null) {\n      final ToolWindow toolWindow = ExecutionManager.getInstance(project).getContentManager().getToolWindowByDescriptor(selectedContent);\n      if (toolWindow != null && toolWindow.isVisible()) {\n        if (descriptorMatcher.fun(selectedContent)) {\n          return Collections.singletonList(selectedContent);\n        }\n      }\n    }\n\n    final ArrayList<RunContentDescriptor> result = Lists.newArrayList();\n    for (RunContentDescriptor runContentDescriptor : executionManager.getContentManager().getAllDescriptors()) {\n      if (descriptorMatcher.fun(runContentDescriptor)) {\n        result.add(runContentDescriptor);\n      }\n    }\n    return result;\n  }","commit_id":"3bc6eade7f9cb70fd0bfce711996afac043c5dce","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ProcessHandler[] getRunningProcesses() {\n    final List<ProcessHandler> handlers = new ArrayList<ProcessHandler>();\n    RunContentDescriptor[] descriptors = ((RunContentManagerImpl)getContentManager()).getAllDescriptors();\n    for (RunContentDescriptor descriptor : descriptors) {\n      if (descriptor != null) {\n        final ProcessHandler processHandler = descriptor.getProcessHandler();\n        if (processHandler != null) {\n          handlers.add(processHandler);\n        }\n      }\n    }\n    return handlers.toArray(new ProcessHandler[handlers.size()]);\n  }","id":58036,"modified_method":"public ProcessHandler[] getRunningProcesses() {\n    final List<ProcessHandler> handlers = new ArrayList<ProcessHandler>();\n    for (RunContentDescriptor descriptor : getContentManager().getAllDescriptors()) {\n      final ProcessHandler processHandler = descriptor.getProcessHandler();\n      if (processHandler != null) {\n        handlers.add(processHandler);\n      }\n    }\n    return handlers.toArray(new ProcessHandler[handlers.size()]);\n  }","commit_id":"3bc6eade7f9cb70fd0bfce711996afac043c5dce","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public RunContentDescriptor[] getAllDescriptors() {\n    final List<RunContentDescriptor> descriptors = new ArrayList<RunContentDescriptor>();\n    final String[] ids = myToolwindowIdToContentManagerMap.keySet().toArray(new String[myToolwindowIdToContentManagerMap.size()]);\n    for (String id : ids) {\n      final ContentManager contentManager = myToolwindowIdToContentManagerMap.get(id);\n      final Content[] contents = contentManager.getContents();\n      for (final Content content : contents) {\n        final RunContentDescriptor descriptor = getRunContentDescriptorByContent(content);\n        if (descriptor != null) {\n          descriptors.add(descriptor);\n        }\n      }\n    }\n\n    return descriptors.toArray(new RunContentDescriptor[descriptors.size()]);\n  }","id":58037,"modified_method":"@NotNull\n  public List<RunContentDescriptor> getAllDescriptors() {\n    if (myToolwindowIdToContentManagerMap.isEmpty()) {\n      return Collections.emptyList();\n    }\n    final String[] ids = myToolwindowIdToContentManagerMap.keySet().toArray(new String[myToolwindowIdToContentManagerMap.size()]);\n    final List<RunContentDescriptor> descriptors = new ArrayList<RunContentDescriptor>();\n    for (String id : ids) {\n      final ContentManager contentManager = myToolwindowIdToContentManagerMap.get(id);\n      for (final Content content : contentManager.getContents()) {\n        final RunContentDescriptor descriptor = getRunContentDescriptorByContent(content);\n        if (descriptor != null) {\n          descriptors.add(descriptor);\n        }\n      }\n    }\n\n    return descriptors;\n  }","commit_id":"3bc6eade7f9cb70fd0bfce711996afac043c5dce","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void update(final AnActionEvent e) {\n    final ProcessHandler processHandler = getProcessHandler(e);\n    final Presentation presentation = e.getPresentation();\n\n    boolean enable = false;\n    Icon icon = getTemplatePresentation().getIcon();\n    String description = getTemplatePresentation().getDescription();\n    if (processHandler != null && !processHandler.isProcessTerminated()) {\n      if (!processHandler.isProcessTerminating()) {\n        enable = true;\n      }\n      else if (processHandler instanceof KillableProcess && ((KillableProcess)processHandler).canKillProcess()) {\n        enable = true;\n        icon = KILL_PROCESS_ICON;\n        description = \"Kill process\";\n      }\n    }\n    presentation.setEnabled(enable);\n    presentation.setIcon(icon);\n    presentation.setDescription(description);\n  }","id":58038,"modified_method":"public void update(final AnActionEvent e) {\n    boolean enable = false;\n    Icon icon = getTemplatePresentation().getIcon();\n    String description = getTemplatePresentation().getDescription();\n    final Presentation presentation = e.getPresentation();\n\n    if (ActionPlaces.MAIN_MENU.equals(e.getPlace())) {\n      final List<RunContentDescriptor> descriptors = getActiveDescriptors(e.getDataContext());\n      for (RunContentDescriptor descriptor : descriptors) {\n        final ProcessHandler handler = descriptor.getProcessHandler();\n        if (handler != null && !handler.isProcessTerminated()) {\n          enable = true;\n          break;\n        }\n      }\n    }\n    else {\n      final ProcessHandler processHandler = getHandler(e.getDataContext());\n      if (processHandler != null && !processHandler.isProcessTerminated()) {\n        if (!processHandler.isProcessTerminating()) {\n          enable = true;\n        }\n        else if (processHandler instanceof KillableProcess && ((KillableProcess)processHandler).canKillProcess()) {\n          enable = true;\n          icon = KILL_PROCESS_ICON;\n          description = \"Kill process\";\n        }\n      }\n    }\n\n    presentation.setEnabled(enable);\n    presentation.setIcon(icon);\n    presentation.setDescription(description);\n  }","commit_id":"3bc6eade7f9cb70fd0bfce711996afac043c5dce","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static ProcessHandler getProcessHandler(final AnActionEvent e) {\n    final RunContentDescriptor contentDescriptor = RunContentManager.RUN_CONTENT_DESCRIPTOR.getData(e.getDataContext());\n    final ProcessHandler processHandler;\n    if (contentDescriptor != null) {\n      // toolwindow case\n      processHandler = contentDescriptor.getProcessHandler();\n    }\n    else {\n      // main menu toolbar\n      final Project project = PlatformDataKeys.PROJECT.getData(e.getDataContext());\n      final RunContentDescriptor selectedContent = project == null? null : ExecutionManager.getInstance(project).getContentManager().getSelectedContent();\n      processHandler = selectedContent == null? null : selectedContent.getProcessHandler();\n    }\n    return processHandler;\n  }","id":58039,"modified_method":"private static void performAction(ProcessHandler processHandler) {\n    if (processHandler instanceof KillableProcess && processHandler.isProcessTerminating()) {\n      ((KillableProcess)processHandler).killProcess();\n      return;\n    }\n\n    if(processHandler.detachIsDefault()) {\n      processHandler.detachProcess();\n    }\n    else {\n      processHandler.destroyProcess();\n    }\n  }","commit_id":"3bc6eade7f9cb70fd0bfce711996afac043c5dce","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(final AnActionEvent e) {\n    final ProcessHandler processHandler = getProcessHandler(e);\n    if(processHandler == null) return;\n\n    if (processHandler instanceof KillableProcess && processHandler.isProcessTerminating()) {\n      ((KillableProcess)processHandler).killProcess();\n      return;\n    }\n\n    if(processHandler.detachIsDefault()) {\n      processHandler.detachProcess();\n    } else {\n      processHandler.destroyProcess();\n    }\n  }","id":58040,"modified_method":"public void actionPerformed(final AnActionEvent e) {\n    final DataContext dataContext = e.getDataContext();\n    ProcessHandler processHandler = getHandler(dataContext);\n    if ((processHandler == null || processHandler.isProcessTerminated()) && ActionPlaces.MAIN_MENU.equals(e.getPlace())) {\n      final Collection<HandlerItem> handlerItems = getItemsList(getActiveDescriptors(dataContext));\n      if (!handlerItems.isEmpty()) {\n        final JBList list = new JBList(handlerItems);\n        list.installCellRenderer(new NotNullFunction<HandlerItem, JComponent>() {\n          final JLabel label = new JLabel();\n          @NotNull\n          public JComponent fun(HandlerItem item) {\n            label.setIcon(item.icon);\n            label.setIconTextGap(6);\n            label.setText(item.displayName);\n            return label;\n          }\n        });\n        final PopupChooserBuilder builder = JBPopupFactory.getInstance().createListPopupBuilder(list);\n        final String title = handlerItems.size() == 1? \"Confirm process stop\" : \"Select process to stop\";\n\n        final JBPopup popup = builder.setTitle(title).setItemChoosenCallback(new Runnable() {\n          public void run() {\n            final HandlerItem item = (HandlerItem)list.getSelectedValue();\n            if (item != null) {\n              performAction(item.handler);\n            }\n          }\n        }).setRequestFocus(true).createPopup();\n\n        popup.showInBestPositionFor(dataContext);\n      }\n    }\n\n    if(processHandler != null) {\n      performAction(processHandler);\n    }\n  }","commit_id":"3bc6eade7f9cb70fd0bfce711996afac043c5dce","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n    @Override\n    public Collection<DeclarationDescriptor> getAllDescriptors() {\n        if (allDescriptors == null) {\n            allDescriptors = Sets.newHashSet();\n            for (DeclarationDescriptor descriptor : workerScope.getAllDescriptors()) {\n                DeclarationDescriptor substitute = substitute(descriptor);\n//                assert substitute != null : descriptor;\n                if (substitute != null) {\n                    allDescriptors.add(substitute);\n                }\n            }\n        }\n        return allDescriptors;\n    }","id":58041,"modified_method":"@NotNull\n    @Override\n    public Collection<DeclarationDescriptor> getAllDescriptors() {\n        if (allDescriptors == null) {\n            allDescriptors = substitute(workerScope.getAllDescriptors());\n        }\n        return allDescriptors;\n    }","commit_id":"2ec9e10f14993e6829b644744aa4aff26323dd75","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Nullable\n    private <D extends DeclarationDescriptor> D substitute(@Nullable D descriptor) {\n        if (descriptor == null) return null;\n        if (substitutor.isEmpty()) return descriptor;\n\n        if (substitutedDescriptors == null) {\n            substitutedDescriptors = Maps.newHashMap();\n        }\n\n        DeclarationDescriptor substituted = substitutedDescriptors.get(descriptor);\n        if (substituted == null) {\n            substituted = descriptor.substitute(substitutor);\n            substitutedDescriptors.put(descriptor, substituted);\n        }\n        //noinspection unchecked\n        return (D) substituted;\n    }","id":58042,"modified_method":"@Nullable\n    private <D extends DeclarationDescriptor> D substitute(@Nullable D descriptor) {\n        if (descriptor == null) return null;\n        if (substitutor.isEmpty()) return descriptor;\n\n        if (substitutedDescriptors == null) {\n            substitutedDescriptors = Maps.newHashMap();\n        }\n\n        DeclarationDescriptor substituted = substitutedDescriptors.get(descriptor);\n        if (substituted == null && !substitutedDescriptors.containsKey(descriptor)) {\n            substituted = descriptor.substitute(substitutor);\n\n            //noinspection ConstantConditions\n            substitutedDescriptors.put(descriptor, substituted);\n        }\n\n        //noinspection unchecked\n        return (D) substituted;\n    }","commit_id":"2ec9e10f14993e6829b644744aa4aff26323dd75","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void addDelegatedMembers(JetClassOrObject jetClass, MutableClassDescriptor classDescriptor) {\n        for (JetDelegationSpecifier delegationSpecifier : jetClass.getDelegationSpecifiers()) {\n            if (delegationSpecifier instanceof JetDelegatorByExpressionSpecifier) {\n                JetDelegatorByExpressionSpecifier specifier = (JetDelegatorByExpressionSpecifier) delegationSpecifier;\n                JetType type = trace.get(BindingContext.TYPE, specifier.getTypeReference());\n                if (type != null) {\n                    for (DeclarationDescriptor declarationDescriptor : type.getMemberScope().getAllDescriptors()) {\n                        if (declarationDescriptor instanceof PropertyDescriptor) {\n                            PropertyDescriptor propertyDescriptor = (PropertyDescriptor) declarationDescriptor;\n                            if (propertyDescriptor.getModality().isOverridable()) {\n                                Modality modality = DescriptorUtils.convertModality(propertyDescriptor.getModality(), true);\n                                PropertyDescriptor copy = propertyDescriptor.copy(classDescriptor, modality, false, CallableMemberDescriptor.Kind.DELEGATION, true);\n                                classDescriptor.getBuilder().addPropertyDescriptor(copy);\n                                trace.record(DELEGATED, copy);\n                            }\n                        }\n                        else if (declarationDescriptor instanceof SimpleFunctionDescriptor) {\n                            SimpleFunctionDescriptor functionDescriptor = (SimpleFunctionDescriptor) declarationDescriptor;\n                            if (functionDescriptor.getModality().isOverridable()) {\n                                Modality modality = DescriptorUtils.convertModality(functionDescriptor.getModality(), true);\n                                SimpleFunctionDescriptor copy = functionDescriptor.copy(classDescriptor, modality, false, CallableMemberDescriptor.Kind.DELEGATION, true);\n                                classDescriptor.getBuilder().addFunctionDescriptor(copy);\n                                trace.record(DELEGATED, copy);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }","id":58043,"modified_method":"private void addDelegatedMembers(JetClassOrObject jetClass, MutableClassDescriptor classDescriptor) {\n        for (JetDelegationSpecifier delegationSpecifier : jetClass.getDelegationSpecifiers()) {\n            if (delegationSpecifier instanceof JetDelegatorByExpressionSpecifier) {\n                JetDelegatorByExpressionSpecifier specifier = (JetDelegatorByExpressionSpecifier) delegationSpecifier;\n                JetType type = trace.get(BindingContext.TYPE, specifier.getTypeReference());\n                if (type != null) {\n                    @SuppressWarnings(\"unchecked\")\n                    Collection<CallableMemberDescriptor> callableDescriptors = (Collection) Collections2.filter(\n                            type.getMemberScope().getAllDescriptors(),\n                            Predicates.instanceOf(CallableMemberDescriptor.class));\n                    Collection<CallableMemberDescriptor> descriptors = generateDelegatedMembers(classDescriptor, callableDescriptors);\n                    for (CallableMemberDescriptor descriptor : descriptors) {\n                        if (descriptor instanceof PropertyDescriptor) {\n                            PropertyDescriptor propertyDescriptor = (PropertyDescriptor) descriptor;\n                            classDescriptor.getBuilder().addPropertyDescriptor(propertyDescriptor);\n                        }\n                        else if (descriptor instanceof SimpleFunctionDescriptor) {\n                            SimpleFunctionDescriptor functionDescriptor = (SimpleFunctionDescriptor) descriptor;\n                            classDescriptor.getBuilder().addFunctionDescriptor(functionDescriptor);\n                        }\n                    }\n                }\n            }\n        }\n    }","commit_id":"67900e9dfad04678b264d29f5b077d20a91dfe16","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void checkOverloadsWithSameName(@NotNull Name name, Collection<CallableMemberDescriptor> functions, @NotNull String functionContainer) {\n        if (functions.size() == 1) {\n            // microoptimization\n            return;\n        }\n        \n        for (CallableMemberDescriptor member : functions) {\n            for (CallableMemberDescriptor member2 : functions) {\n                if (member == member2) {\n                    continue;\n                }\n\n                OverloadUtil.OverloadCompatibilityInfo overloadable = OverloadUtil.isOverloadable(member, member2);\n                if (!overloadable.isSuccess()) {\n                    JetDeclaration jetDeclaration = (JetDeclaration) BindingContextUtils.descriptorToDeclaration(trace.getBindingContext(), member);\n                    if (jetDeclaration == null) {\n                        assert trace.get(DELEGATED, member);\n                        return;\n                    }\n\n                    if (member instanceof PropertyDescriptor) {\n                        trace.report(Errors.REDECLARATION.on(BindingContextUtils.descriptorToDeclaration(trace.getBindingContext(), member), member.getName().getName()));\n                    }\n                    else {\n                        trace.report(Errors.CONFLICTING_OVERLOADS.on(jetDeclaration, member, functionContainer));\n                    }\n                }\n            }\n        }\n    }","id":58044,"modified_method":"private void checkOverloadsWithSameName(@NotNull Name name, Collection<CallableMemberDescriptor> functions, @NotNull String functionContainer) {\n        if (functions.size() == 1) {\n            // microoptimization\n            return;\n        }\n        \n        for (CallableMemberDescriptor member : functions) {\n            for (CallableMemberDescriptor member2 : functions) {\n                if (member == member2) {\n                    continue;\n                }\n\n                OverloadUtil.OverloadCompatibilityInfo overloadable = OverloadUtil.isOverloadable(member, member2);\n                if (!overloadable.isSuccess()) {\n                    JetDeclaration jetDeclaration = (JetDeclaration) BindingContextUtils.descriptorToDeclaration(trace.getBindingContext(), member);\n                    if (jetDeclaration == null) {\n                        assert member.getKind() == CallableMemberDescriptor.Kind.DELEGATION;\n                        return;\n                    }\n\n                    if (member instanceof PropertyDescriptor) {\n                        trace.report(Errors.REDECLARATION.on(BindingContextUtils.descriptorToDeclaration(trace.getBindingContext(), member), member.getName().getName()));\n                    }\n                    else {\n                        trace.report(Errors.CONFLICTING_OVERLOADS.on(jetDeclaration, member, functionContainer));\n                    }\n                }\n            }\n        }\n    }","commit_id":"67900e9dfad04678b264d29f5b077d20a91dfe16","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private void checkOverrideForMember(@NotNull CallableMemberDescriptor declared) {\n        JetNamedDeclaration member = (JetNamedDeclaration) BindingContextUtils.descriptorToDeclaration(trace.getBindingContext(), declared);\n        if (member == null) {\n            Boolean delegated = trace.get(DELEGATED, declared);\n            if (delegated == null || !delegated)\n                throw new IllegalStateException(\n                        \"decriptor is not resolved to declaration\" +\n                        \" and it is not delegate: \" + declared + \", DELEGATED: \" + delegated);\n            return;\n        }\n\n        if (declared.getKind() != CallableMemberDescriptor.Kind.DECLARATION) {\n            return;\n        }\n\n        JetModifierList modifierList = member.getModifierList();\n        ASTNode overrideNode = modifierList != null ? modifierList.getModifierNode(JetTokens.OVERRIDE_KEYWORD) : null;\n        boolean hasOverrideModifier = overrideNode != null;\n\n        boolean finalOverriddenError = false;\n        boolean typeMismatchError = false;\n        boolean kindMismatchError = false;\n        for (CallableMemberDescriptor overridden : declared.getOverriddenDescriptors()) {\n            if (overridden != null) {\n                if (hasOverrideModifier) {\n                    if (!overridden.getModality().isOverridable() && !finalOverriddenError) {\n                        trace.report(OVERRIDING_FINAL_MEMBER.on(overrideNode.getPsi(), overridden, overridden.getContainingDeclaration()));\n                        finalOverriddenError = true;\n                    }\n\n                    if (!OverridingUtil.isReturnTypeOkForOverride(JetTypeChecker.INSTANCE, overridden, declared) && !typeMismatchError) {\n                        trace.report(RETURN_TYPE_MISMATCH_ON_OVERRIDE.on(member, declared, overridden));\n                        typeMismatchError = true;\n                    }\n\n                    if (checkPropertyKind(overridden, true) && checkPropertyKind(declared, false) && !kindMismatchError) {\n                        trace.report(VAR_OVERRIDDEN_BY_VAL.on((JetProperty) member, (PropertyDescriptor) declared, (PropertyDescriptor) overridden));\n                        kindMismatchError = true;\n                    }\n                }\n            }\n        }\n\n        if (hasOverrideModifier && declared.getOverriddenDescriptors().size() == 0) {\n            DeclarationDescriptor containingDeclaration = declared.getContainingDeclaration();\n            assert containingDeclaration instanceof ClassDescriptor : \"Overrides may only be resolved in a class, but \" + declared + \" comes from \" + containingDeclaration;\n            ClassDescriptor declaringClass = (ClassDescriptor) containingDeclaration;\n\n            CallableMemberDescriptor invisibleOverriddenDescriptor = findInvisibleOverriddenDescriptor(declared, declaringClass);\n            if (invisibleOverriddenDescriptor != null) {\n                trace.report(CANNOT_OVERRIDE_INVISIBLE_MEMBER.on(member, declared, invisibleOverriddenDescriptor,\n                                                                 invisibleOverriddenDescriptor.getContainingDeclaration()));\n            }\n            else {\n                trace.report(NOTHING_TO_OVERRIDE.on(member, declared));\n            }\n        }\n        PsiElement nameIdentifier = member.getNameIdentifier();\n        if (!hasOverrideModifier && declared.getOverriddenDescriptors().size() > 0 && nameIdentifier != null) {\n            CallableMemberDescriptor overridden = declared.getOverriddenDescriptors().iterator().next();\n            trace.report(VIRTUAL_MEMBER_HIDDEN.on(member, declared, overridden, overridden.getContainingDeclaration()));\n        }\n    }","id":58045,"modified_method":"private void checkOverrideForMember(@NotNull CallableMemberDescriptor declared) {\n        JetNamedDeclaration member = (JetNamedDeclaration) BindingContextUtils.descriptorToDeclaration(trace.getBindingContext(), declared);\n        if (member == null) {\n            if (declared.getKind() != CallableMemberDescriptor.Kind.DELEGATION)\n                throw new IllegalStateException(\n                        \"decriptor is not resolved to declaration\" +\n                        \" and it is not delegate: \" + declared + \", DELEGATED: \" +\n                        (declared.getKind() == CallableMemberDescriptor.Kind.DELEGATION));\n            return;\n        }\n\n        if (declared.getKind() != CallableMemberDescriptor.Kind.DECLARATION) {\n            return;\n        }\n\n        JetModifierList modifierList = member.getModifierList();\n        ASTNode overrideNode = modifierList != null ? modifierList.getModifierNode(JetTokens.OVERRIDE_KEYWORD) : null;\n        boolean hasOverrideModifier = overrideNode != null;\n\n        boolean finalOverriddenError = false;\n        boolean typeMismatchError = false;\n        boolean kindMismatchError = false;\n        for (CallableMemberDescriptor overridden : declared.getOverriddenDescriptors()) {\n            if (overridden != null) {\n                if (hasOverrideModifier) {\n                    if (!overridden.getModality().isOverridable() && !finalOverriddenError) {\n                        trace.report(OVERRIDING_FINAL_MEMBER.on(overrideNode.getPsi(), overridden, overridden.getContainingDeclaration()));\n                        finalOverriddenError = true;\n                    }\n\n                    if (!OverridingUtil.isReturnTypeOkForOverride(JetTypeChecker.INSTANCE, overridden, declared) && !typeMismatchError) {\n                        trace.report(RETURN_TYPE_MISMATCH_ON_OVERRIDE.on(member, declared, overridden));\n                        typeMismatchError = true;\n                    }\n\n                    if (checkPropertyKind(overridden, true) && checkPropertyKind(declared, false) && !kindMismatchError) {\n                        trace.report(VAR_OVERRIDDEN_BY_VAL.on((JetProperty) member, (PropertyDescriptor) declared, (PropertyDescriptor) overridden));\n                        kindMismatchError = true;\n                    }\n                }\n            }\n        }\n\n        if (hasOverrideModifier && declared.getOverriddenDescriptors().size() == 0) {\n            DeclarationDescriptor containingDeclaration = declared.getContainingDeclaration();\n            assert containingDeclaration instanceof ClassDescriptor : \"Overrides may only be resolved in a class, but \" + declared + \" comes from \" + containingDeclaration;\n            ClassDescriptor declaringClass = (ClassDescriptor) containingDeclaration;\n\n            CallableMemberDescriptor invisibleOverriddenDescriptor = findInvisibleOverriddenDescriptor(declared, declaringClass);\n            if (invisibleOverriddenDescriptor != null) {\n                trace.report(CANNOT_OVERRIDE_INVISIBLE_MEMBER.on(member, declared, invisibleOverriddenDescriptor,\n                                                                 invisibleOverriddenDescriptor.getContainingDeclaration()));\n            }\n            else {\n                trace.report(NOTHING_TO_OVERRIDE.on(member, declared));\n            }\n        }\n        PsiElement nameIdentifier = member.getNameIdentifier();\n        if (!hasOverrideModifier && declared.getOverriddenDescriptors().size() > 0 && nameIdentifier != null) {\n            CallableMemberDescriptor overridden = declared.getOverriddenDescriptors().iterator().next();\n            trace.report(VIRTUAL_MEMBER_HIDDEN.on(member, declared, overridden, overridden.getContainingDeclaration()));\n        }\n    }","commit_id":"67900e9dfad04678b264d29f5b077d20a91dfe16","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public ILayoutNode addNode(INode node, INodeId parentId, INodeId nextId) throws PortalException {\n        // the operation can only be performed if the central modification on the fragment of the\n        // parent node is allowed\n        if(isCentralModification(parentId)) {\n            IALNode parentNode = (IALNode) getNode(parentId);\n            IFragment fragment=fragmentRegistry.getFragment(parentNode.getFragmentId());\n            IFragmentLocalNodeId localNextNodeId=null;\n            if(nextId!=null) {\n                IALNode nextNode=(IALNode)getNode(nextId);\n                localNextNodeId=nextNode.getFragmentNodeId();\n            }\n            fragment.addNode(node,parentNode.getFragmentNodeId(),localNextNodeId);\n            return currentLayout.addNode(node,parentId,nextId);\n        }\n        return null;\n    }","id":58046,"modified_method":"public ILayoutNode addNode(INode node, INodeId parentId, INodeId nextId) throws PortalException {\n        // the operation can only be performed if the central modification on the fragment of the\n        // parent node is allowed\n        if(isCentralModification(parentId)) {\n        \t\n        \tINodeId correctNextId = getCentralModificationNextId(nextId); \n        \t\n            IALNode parentNode = (IALNode) getNode(parentId);\n            IFragment fragment=fragmentRegistry.getFragment(parentNode.getFragmentId());\n          \n            IFragmentLocalNodeId localNextNodeId = (correctNextId!=null) ? ((IALNode)getNode(correctNextId)).getFragmentNodeId() : null;\n            IFragmentLocalNodeId localNodeId = (IFragmentLocalNodeId)fragment.addNode(node,parentNode.getFragmentNodeId(),localNextNodeId).getId();\n            correctNextIdInLayoutCommands(nextId,getLayoutNodeId(localNodeId));\n            // TODO reassemble the layout\n            return currentLayout.addNode(node,parentId,nextId);\n        }\n        return null;\n    }","commit_id":"c6eb074ae64878284b58d9054009e6a45d7b4d75","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * Uses the file(s) in the request parameter for creation of new nodes.\n     * if the parent node is a nt:folder a new nt:file is created. otherwise\n     * just a nt:resource. if the <code>name<\/code> is '*', the filename of\n     * the uploaded file is used.\n     *\n     * @param parent the parent node\n     * @param prop the assembled property info\n     * @throws RepositoryException if an error occurs\n     */\n    public void setFile(Node parent, RequestProperty prop, List<Modification> changes)\n            throws RepositoryException {\n        RequestParameter value = prop.getValues()[0];\n        assert !value.isFormField();\n\n        // ignore if empty\n        if (value.getSize() <= 0) {\n            return;\n        }\n\n        // get node name\n        String name = prop.getName();\n        if (name.equals(\"*\")) {\n            name = value.getFileName();\n            // strip of possible path (some browsers include the entire path)\n            name = name.substring(name.lastIndexOf('/') + 1);\n            name = name.substring(name.lastIndexOf('\\\\') + 1);\n        }\n        name = Text.escapeIllegalJcrChars(name);\n\n        // check type hint. if the type is ok and extends from nt:file,\n        // create an nt:file with that type. if it's invalid, drop it and let\n        // the parent node type decide.\n        boolean createNtFile = parent.isNodeType(NT_FOLDER);\n        String typeHint = prop.getTypeHint();\n        if (typeHint != null) {\n            try {\n                NodeTypeManager ntMgr = parent.getSession().getWorkspace().getNodeTypeManager();\n                NodeType nt = ntMgr.getNodeType(typeHint);\n                createNtFile = nt.isNodeType(NT_FILE);\n            } catch (RepositoryException e) {\n                // assuming type not valid.\n                typeHint = null;\n            }\n        }\n\n        // also create an nt:file if the name contains an extension\n        // the rationale is that if the file name is \"important\" we want\n        // an nt:file, and an image name with an extension is probably \"important\"\n        if(!createNtFile && name.indexOf('.') > 0) {\n            createNtFile = true;\n        }\n\n        // set empty type\n        if (typeHint == null) {\n            typeHint = createNtFile ? NT_FILE : NT_RESOURCE;\n        }\n\n        // remove node\n        if (parent.hasNode(name)) {\n            parent.getNode(name).remove();\n        }\n\n        // create nt:file node if needed\n        if (createNtFile) {\n            // create nt:file\n            parent = parent.addNode(name, typeHint);\n            changes.add(Modification.onCreated(parent.getPath()));\n            name = JCR_CONTENT;\n            typeHint = NT_RESOURCE;\n        }\n\n        // create resource node\n        Node res = parent.addNode(name, typeHint);\n        changes.add(Modification.onCreated(res.getPath()));\n\n        // get content type\n        String contentType = value.getContentType();\n        if (contentType != null) {\n            int idx = contentType.indexOf(';');\n            if (idx > 0) {\n                contentType = contentType.substring(0, idx);\n            }\n        }\n        if (contentType == null || contentType.equals(\"application/octet-stream\")) {\n            // try to find a better content type\n            contentType = this.servletContext.getMimeType(value.getFileName());\n            if (contentType == null || contentType.equals(\"application/octet-stream\")) {\n                contentType = \"application/octet-stream\";\n            }\n        }\n\n        // set properties\n        changes.add(Modification.onModified(\n            res.setProperty(JCR_LASTMODIFIED, Calendar.getInstance()).getPath()\n        ));\n        changes.add(Modification.onModified(\n            res.setProperty(JCR_MIMETYPE, contentType).getPath()\n        ));\n        try {\n            changes.add(Modification.onModified(\n                res.setProperty(JCR_DATA, value.getInputStream()).getPath()\n            ));\n        } catch (IOException e) {\n            throw new RepositoryException(\"Error while retrieving inputstream from parameter value.\", e);\n        }\n    }","id":58047,"modified_method":"/**\n     * Uses the file(s) in the request parameter for creation of new nodes.\n     * if the parent node is a nt:folder a new nt:file is created. otherwise\n     * just a nt:resource. if the <code>name<\/code> is '*', the filename of\n     * the uploaded file is used.\n     *\n     * @param parent the parent node\n     * @param prop the assembled property info\n     * @throws RepositoryException if an error occurs\n     */\n    public void setFile(Node parent, RequestProperty prop, List<Modification> changes)\n            throws RepositoryException {\n    \tRequestParameter[] values = prop.getValues();\n    \tfor (RequestParameter requestParameter : values) {\n        \tRequestParameter value = requestParameter;\n\n        \t// ignore if a plain form field or empty\n            if (value.isFormField() || value.getSize() <= 0) {\n                continue;\n            }\n\n            // get node name\n            String name = prop.getName();\n            if (name.equals(\"*\")) {\n                name = value.getFileName();\n                // strip of possible path (some browsers include the entire path)\n                name = name.substring(name.lastIndexOf('/') + 1);\n                name = name.substring(name.lastIndexOf('\\\\') + 1);\n            }\n            name = Text.escapeIllegalJcrChars(name);\n\n            // check type hint. if the type is ok and extends from nt:file,\n            // create an nt:file with that type. if it's invalid, drop it and let\n            // the parent node type decide.\n            boolean createNtFile = parent.isNodeType(NT_FOLDER);\n            String typeHint = prop.getTypeHint();\n            if (typeHint != null) {\n                try {\n                    NodeTypeManager ntMgr = parent.getSession().getWorkspace().getNodeTypeManager();\n                    NodeType nt = ntMgr.getNodeType(typeHint);\n                    createNtFile = nt.isNodeType(NT_FILE);\n                } catch (RepositoryException e) {\n                    // assuming type not valid.\n                    typeHint = null;\n                }\n            }\n\n            // also create an nt:file if the name contains an extension\n            // the rationale is that if the file name is \"important\" we want\n            // an nt:file, and an image name with an extension is probably \"important\"\n            if(!createNtFile && name.indexOf('.') > 0) {\n                createNtFile = true;\n            }\n\n            // set empty type\n            if (typeHint == null) {\n                typeHint = createNtFile ? NT_FILE : NT_RESOURCE;\n            }\n\n            // remove node\n            if (parent.hasNode(name)) {\n                parent.getNode(name).remove();\n            }\n\n            // create nt:file node if needed\n            Node resParent;\n            if (createNtFile) {\n                // create nt:file\n                resParent = parent.addNode(name, typeHint);\n                changes.add(Modification.onCreated(resParent.getPath()));\n                name = JCR_CONTENT;\n                typeHint = NT_RESOURCE;\n            } else {\n            \tresParent = parent;\n            }\n\n            // create resource node\n            Node res = resParent.addNode(name, typeHint);\n            changes.add(Modification.onCreated(res.getPath()));\n\n            // get content type\n            String contentType = value.getContentType();\n            if (contentType != null) {\n                int idx = contentType.indexOf(';');\n                if (idx > 0) {\n                    contentType = contentType.substring(0, idx);\n                }\n            }\n            if (contentType == null || contentType.equals(\"application/octet-stream\")) {\n                // try to find a better content type\n                contentType = this.servletContext.getMimeType(value.getFileName());\n                if (contentType == null || contentType.equals(\"application/octet-stream\")) {\n                    contentType = \"application/octet-stream\";\n                }\n            }\n\n            // set properties\n            changes.add(Modification.onModified(\n                res.setProperty(JCR_LASTMODIFIED, Calendar.getInstance()).getPath()\n            ));\n            changes.add(Modification.onModified(\n                res.setProperty(JCR_MIMETYPE, contentType).getPath()\n            ));\n            try {\n                changes.add(Modification.onModified(\n                    res.setProperty(JCR_DATA, value.getInputStream()).getPath()\n                ));\n            } catch (IOException e) {\n                throw new RepositoryException(\"Error while retrieving inputstream from parameter value.\", e);\n            }\n\t\t}\n    }","commit_id":"8769a21467d5a658cefe0598b319c1035e6ffb9f","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Creates or gets the {@link javax.jcr.Node Node} at the given Path.\n     * In case it has to create the Node all non-existent intermediate path-elements\n     * will be create with the given intermediate node type and the returned node\n     * will be created with the given nodeType\n     *\n     * @param path to create\n     * @param intermediateNodeType to use for creation of intermediate nodes\n     * @param nodeType to use for creation of the final node\n     * @param session to use\n     * @param autoSave Should save be called when a new node is created?\n     * @return the Node at path\n     * @throws RepositoryException in case of exception accessing the Repository\n     */\n    public static Node createPath(String path,\n                                  String intermediateNodeType,\n                                  String nodeType,\n                                  Session session,\n                                  boolean autoSave)\n    throws RepositoryException {\n        if (path == null || path.length() == 0 || \"/\".equals(path)) {\n            return session.getRootNode();\n        } else if (!session.itemExists(path)) {\n            Node node = session.getRootNode();\n            path = path.substring(1);\n            int pos = path.lastIndexOf('/');\n            if ( pos != -1 ) {\n                final StringTokenizer st = new StringTokenizer(path.substring(0, pos), \"/\");\n                while ( st.hasMoreTokens() ) {\n                    final String token = st.nextToken();\n                    if ( !node.hasNode(token) ) {\n                        try {\n                            node.addNode(token, intermediateNodeType);\n                            if ( autoSave ) node.save();\n                        } catch (RepositoryException re) {\n                            // we ignore this as this folder might be created from a different task\n                            node.refresh(false);\n                        }\n                    }\n                    node = node.getNode(token);\n                }\n                path = path.substring(pos + 1);\n            }\n            if ( !node.hasNode(path) ) {\n                node.addNode(path, nodeType);\n                if ( autoSave ) node.save();\n            }\n            return node.getNode(path);\n        } else {\n            return (Node) session.getItem(path);\n        }\n    }","id":58048,"modified_method":"/**\n     * Creates or gets the {@link javax.jcr.Node Node} at the given Path.\n     * In case it has to create the Node all non-existent intermediate path-elements\n     * will be create with the given intermediate node type and the returned node\n     * will be created with the given nodeType\n     *\n     * @param path to create\n     * @param intermediateNodeType to use for creation of intermediate nodes (or null)\n     * @param nodeType to use for creation of the final node (or null)\n     * @param session to use\n     * @param autoSave Should save be called when a new node is created?\n     * @return the Node at path\n     * @throws RepositoryException in case of exception accessing the Repository\n     */\n    public static Node createPath(String path,\n                                  String intermediateNodeType,\n                                  String nodeType,\n                                  Session session,\n                                  boolean autoSave)\n    throws RepositoryException {\n        if (path == null || path.length() == 0 || \"/\".equals(path)) {\n            return session.getRootNode();\n        } else if (!session.itemExists(path)) {\n            Node node = session.getRootNode();\n            path = path.substring(1);\n            int pos = path.lastIndexOf('/');\n            if ( pos != -1 ) {\n                final StringTokenizer st = new StringTokenizer(path.substring(0, pos), \"/\");\n                while ( st.hasMoreTokens() ) {\n                    final String token = st.nextToken();\n                    if ( !node.hasNode(token) ) {\n                        try {\n                            if ( intermediateNodeType != null ) {\n                                node.addNode(token, intermediateNodeType);\n                            } else {\n                                node.addNode(token);\n                            }\n                            if ( autoSave ) node.save();\n                        } catch (RepositoryException re) {\n                            // we ignore this as this folder might be created from a different task\n                            node.refresh(false);\n                        }\n                    }\n                    node = node.getNode(token);\n                }\n                path = path.substring(pos + 1);\n            }\n            if ( !node.hasNode(path) ) {\n                if ( nodeType != null ) {\n                    node.addNode(path, nodeType);\n                } else {\n                    node.addNode(path);\n                }\n                if ( autoSave ) node.save();\n            }\n            return node.getNode(path);\n        } else {\n            return (Node) session.getItem(path);\n        }\n    }","commit_id":"c31811cc3fdfb6a1ec9f9249abd4f975bce8b034","url":"https://github.com/apache/sling"},{"original_method":"protected void addPublicSite(\n\t\t\tlong companyId, long defaultUserId,\n\t\t\tList<LayoutSetPrototype> layoutSetPrototypes)\n\t\tthrows Exception {\n\n\t\tLayoutSet layoutSet =\n\t\t\tDefaultLayoutSetPrototypesUtil.addLayoutSetPrototype(\n\t\t\t\tcompanyId, defaultUserId,\n\t\t\t\t\"layout-set-prototype-community-site-title\",\n\t\t\t\t\"layout-set-prototype-community-site-description\",\n\t\t\t\tlayoutSetPrototypes,\n\t\t\t\tAddLayoutSetPrototypeAction.class.getClassLoader());\n\n\t\tif (layoutSet == null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Home layout\n\n\t\tLayout layout = DefaultLayoutPrototypesUtil.addLayout(\n\t\t\tlayoutSet, \"home\", \"/home\", \"2_columns_iii\");\n\t\tString portletId = PortletProviderUtil.getPortletId(\n\t\t\tMBMessage.class.getName(), PortletProvider.Action.EDIT);\n\n\t\tDefaultLayoutPrototypesUtil.addPortletId(layout, portletId, \"column-1\");\n\n\t\ttry {\n\t\t\tDefaultLayoutPrototypesUtil.addPortletId(\n\t\t\t\tlayout, PollsPortletKeys.POLLS_DISPLAY, \"column-2\");\n\n\t\t\tDefaultLayoutPrototypesUtil.addPortletId(\n\t\t\t\tlayout, SocialUserStatisticsPortletKeys.SOCIAL_USER_STATISTICS,\n\t\t\t\t\"column-2\");\n\n\t\t\t// Wiki layout\n\n\t\t\tDefaultLayoutPrototypesUtil.addLayout(\n\t\t\t\tlayoutSet, \"wiki\", \"/wiki\", \"2_columns_iii\");\n\t\t}\n\t\tcatch (NoSuchResourceActionException e) {\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\t_layoutSetPrototypeLocalService.\n\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\tlayoutSet.getLayoutSetPrototypeUuid(), companyId);\n\n\t\t\t_layoutSetLocalService.deleteLayoutSet(layoutSet);\n\t\t\t_layoutSetPrototypeLocalService.deleteLayoutSetPrototype(\n\t\t\t\tlayoutSetPrototype);\n\t\t}\n\t}","id":58049,"modified_method":"protected void addPublicSite(\n\t\t\tlong companyId, long defaultUserId,\n\t\t\tList<LayoutSetPrototype> layoutSetPrototypes)\n\t\tthrows Exception {\n\n\t\tLayoutSet layoutSet =\n\t\t\tDefaultLayoutSetPrototypesUtil.addLayoutSetPrototype(\n\t\t\t\tcompanyId, defaultUserId,\n\t\t\t\t\"layout-set-prototype-community-site-title\",\n\t\t\t\t\"layout-set-prototype-community-site-description\",\n\t\t\t\tlayoutSetPrototypes,\n\t\t\t\tAddLayoutSetPrototypeAction.class.getClassLoader());\n\n\t\tif (layoutSet == null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Home layout\n\n\t\tLayout layout = DefaultLayoutPrototypesUtil.addLayout(\n\t\t\tlayoutSet, \"home\", \"/home\", \"2_columns_iii\");\n\t\tString portletId = PortletProviderUtil.getPortletId(\n\t\t\tMBMessage.class.getName(), PortletProvider.Action.EDIT);\n\n\t\tDefaultLayoutPrototypesUtil.addPortletId(layout, portletId, \"column-1\");\n\n\t\tDefaultLayoutPrototypesUtil.addPortletId(\n\t\t\tlayout, PollsPortletKeys.POLLS_DISPLAY, \"column-2\");\n\n\t\tDefaultLayoutPrototypesUtil.addPortletId(\n\t\t\tlayout, SocialUserStatisticsPortletKeys.SOCIAL_USER_STATISTICS,\n\t\t\t\"column-2\");\n\n\t\t// Wiki layout\n\n\t\tDefaultLayoutPrototypesUtil.addLayout(\n\t\t\tlayoutSet, \"wiki\", \"/wiki\", \"2_columns_iii\");\n\t}","commit_id":"de7a0af05f5fe5fd8a107740ea6c4e4bee52d62a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static LayoutSet addLayoutSetPrototype(\n\t\t\tlong companyId, long defaultUserId, String nameKey,\n\t\t\tString descriptionKey, List<LayoutSetPrototype> layoutSetPrototypes,\n\t\t\tClassLoader classLoader)\n\t\tthrows Exception {\n\n\t\tResourceBundle resourceBundle = ResourceBundleUtil.getBundle(\n\t\t\t\"content.Language\", LocaleUtil.getDefault(), classLoader);\n\n\t\tString name = LanguageUtil.get(resourceBundle, nameKey);\n\t\tString description = LanguageUtil.get(resourceBundle, descriptionKey);\n\n\t\tfor (LayoutSetPrototype layoutSetPrototype : layoutSetPrototypes) {\n\t\t\tString curName = layoutSetPrototype.getName(\n\t\t\t\tLocaleUtil.getDefault());\n\t\t\tString curDescription = layoutSetPrototype.getDescription(\n\t\t\t\tLocaleUtil.getDefault());\n\n\t\t\tif (name.equals(curName) && description.equals(curDescription)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tMap<Locale, String> nameMap = new HashMap<>();\n\t\tMap<Locale, String> descriptionMap = new HashMap<>();\n\n\t\tfor (Locale locale : LanguageUtil.getAvailableLocales()) {\n\t\t\tresourceBundle = ResourceBundleUtil.getBundle(\n\t\t\t\t\"content.Language\", locale, classLoader);\n\n\t\t\tnameMap.put(locale, LanguageUtil.get(resourceBundle, nameKey));\n\t\t\tdescriptionMap.put(\n\t\t\t\tlocale, LanguageUtil.get(resourceBundle, descriptionKey));\n\t\t}\n\n\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\tLayoutSetPrototypeLocalServiceUtil.addLayoutSetPrototype(\n\t\t\t\tdefaultUserId, companyId, nameMap, descriptionMap, true, true,\n\t\t\t\tnew ServiceContext());\n\n\t\tLayoutSet layoutSet = layoutSetPrototype.getLayoutSet();\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tLayoutLocalServiceUtil.deleteLayouts(\n\t\t\tlayoutSet.getGroupId(), layoutSet.isPrivateLayout(),\n\t\t\tserviceContext);\n\n\t\tlayoutSet = layoutSetPrototype.getLayoutSet();\n\t\tlayoutSet.setLayoutSetPrototypeUuid(layoutSetPrototype.getUuid());\n\n\t\treturn layoutSet;\n\t}","id":58050,"modified_method":"public static LayoutSet addLayoutSetPrototype(\n\t\t\tlong companyId, long defaultUserId, String nameKey,\n\t\t\tString descriptionKey, List<LayoutSetPrototype> layoutSetPrototypes,\n\t\t\tClassLoader classLoader)\n\t\tthrows Exception {\n\n\t\tResourceBundle resourceBundle = ResourceBundleUtil.getBundle(\n\t\t\t\"content.Language\", LocaleUtil.getDefault(), classLoader);\n\n\t\tString name = LanguageUtil.get(resourceBundle, nameKey);\n\t\tString description = LanguageUtil.get(resourceBundle, descriptionKey);\n\n\t\tfor (LayoutSetPrototype layoutSetPrototype : layoutSetPrototypes) {\n\t\t\tString curName = layoutSetPrototype.getName(\n\t\t\t\tLocaleUtil.getDefault());\n\t\t\tString curDescription = layoutSetPrototype.getDescription(\n\t\t\t\tLocaleUtil.getDefault());\n\n\t\t\tif (name.equals(curName) && description.equals(curDescription)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tMap<Locale, String> nameMap = new HashMap<>();\n\t\tMap<Locale, String> descriptionMap = new HashMap<>();\n\n\t\tfor (Locale locale : LanguageUtil.getAvailableLocales()) {\n\t\t\tresourceBundle = ResourceBundleUtil.getBundle(\n\t\t\t\t\"content.Language\", locale, classLoader);\n\n\t\t\tnameMap.put(locale, LanguageUtil.get(resourceBundle, nameKey));\n\t\t\tdescriptionMap.put(\n\t\t\t\tlocale, LanguageUtil.get(resourceBundle, descriptionKey));\n\t\t}\n\n\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\tLayoutSetPrototypeLocalServiceUtil.addLayoutSetPrototype(\n\t\t\t\tdefaultUserId, companyId, nameMap, descriptionMap, true, true,\n\t\t\t\tnew ServiceContext());\n\n\t\tLayoutSet layoutSet = layoutSetPrototype.getLayoutSet();\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tLayoutLocalServiceUtil.deleteLayouts(\n\t\t\tlayoutSet.getGroupId(), layoutSet.isPrivateLayout(),\n\t\t\tserviceContext);\n\n\t\treturn layoutSetPrototype.getLayoutSet();\n\t}","commit_id":"de7a0af05f5fe5fd8a107740ea6c4e4bee52d62a","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic boolean isTypeEmbedded() {\n\t\tif (getType().equals(LayoutConstants.TYPE_EMBEDDED) ||\n\t\t\t_getBaseTypePortlet().equals(LayoutConstants.TYPE_EMBEDDED)) {\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","id":58051,"modified_method":"@Override\n\tpublic boolean isTypeEmbedded() {\n\t\tif (Validator.equals(getType(), LayoutConstants.TYPE_EMBEDDED) ||\n\t\t\tValidator.equals(\n\t\t\t\t_getBaseLayoutType(), LayoutConstants.TYPE_EMBEDDED)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"3d01dcf6a317e0dbded7069b7af74fe9bad92ee6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Returns the current layout's theme, or the layout set's theme if no\n\t * layout theme is configured.\n\t *\n\t * @return the current layout's theme, or the layout set's theme if no\n\t *         layout theme is configured\n\t * @throws PortalException if a portal exception occurred\n\t */\n\t@Override\n\tpublic Theme getTheme() throws PortalException {\n\t\tif (isInheritLookAndFeel()) {\n\t\t\treturn getLayoutSet().getTheme();\n\t\t}\n\t\telse {\n\t\t\treturn ThemeLocalServiceUtil.getTheme(\n\t\t\t\tgetCompanyId(), getThemeId(), false);\n\t\t}\n\t}","id":58052,"modified_method":"/**\n\t * Returns the current layout's theme, or the layout set's theme if no\n\t * layout theme is configured.\n\t *\n\t * @return the current layout's theme, or the layout set's theme if no\n\t *         layout theme is configured\n\t * @throws PortalException if a portal exception occurred\n\t */\n\t@Override\n\tpublic Theme getTheme() throws PortalException {\n\t\tif (isInheritLookAndFeel()) {\n\t\t\tLayoutSet layoutSet = getLayoutSet();\n\n\t\t\treturn layoutSet.getTheme();\n\t\t}\n\t\telse {\n\t\t\treturn ThemeLocalServiceUtil.getTheme(\n\t\t\t\tgetCompanyId(), getThemeId(), false);\n\t\t}\n\t}","commit_id":"3d01dcf6a317e0dbded7069b7af74fe9bad92ee6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Returns the CSS text for the current layout, or for the layout set if no\n\t * CSS text is configured in the current layout.\n\t *\n\t * <p>\n\t * Layouts and layout sets can configure CSS that is applied in addition to\n\t * the theme's CSS.\n\t * <\/p>\n\t *\n\t * @return the CSS text for the current layout, or for the layout set if no\n\t *         CSS text is configured in the current layout\n\t * @throws PortalException if a portal exception occurred\n\t */\n\t@Override\n\tpublic String getCssText() throws PortalException {\n\t\tif (isInheritLookAndFeel()) {\n\t\t\treturn getLayoutSet().getCss();\n\t\t}\n\t\telse {\n\t\t\treturn getCss();\n\t\t}\n\t}","id":58053,"modified_method":"/**\n\t * Returns the CSS text for the current layout, or for the layout set if no\n\t * CSS text is configured in the current layout.\n\t *\n\t * <p>\n\t * Layouts and layout sets can configure CSS that is applied in addition to\n\t * the theme's CSS.\n\t * <\/p>\n\t *\n\t * @return the CSS text for the current layout, or for the layout set if no\n\t *         CSS text is configured in the current layout\n\t * @throws PortalException if a portal exception occurred\n\t */\n\t@Override\n\tpublic String getCssText() throws PortalException {\n\t\tif (isInheritLookAndFeel()) {\n\t\t\tLayoutSet layoutSet = getLayoutSet();\n\n\t\t\treturn layoutSet.getCss();\n\t\t}\n\t\telse {\n\t\t\treturn getCss();\n\t\t}\n\t}","commit_id":"3d01dcf6a317e0dbded7069b7af74fe9bad92ee6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic boolean isTypeControlPanel() {\n\t\tif (getType().equals(LayoutConstants.TYPE_CONTROL_PANEL) ||\n\t\t\t_getBaseTypePortlet().equals(LayoutConstants.TYPE_CONTROL_PANEL)) {\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","id":58054,"modified_method":"@Override\n\tpublic boolean isTypeControlPanel() {\n\t\tif (Validator.equals(getType(), LayoutConstants.TYPE_CONTROL_PANEL) ||\n\t\t\tValidator.equals(\n\t\t\t\t_getBaseLayoutType(), LayoutConstants.TYPE_CONTROL_PANEL)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"3d01dcf6a317e0dbded7069b7af74fe9bad92ee6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic boolean isTypePortlet() {\n\t\tif (getType().equals(LayoutConstants.TYPE_PORTLET) ||\n\t\t\t_getBaseTypePortlet().equals(LayoutConstants.TYPE_PORTLET)) {\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","id":58055,"modified_method":"@Override\n\tpublic boolean isTypePortlet() {\n\t\tif (Validator.equals(getType(), LayoutConstants.TYPE_PORTLET) ||\n\t\t\tValidator.equals(\n\t\t\t\t_getBaseLayoutType(), LayoutConstants.TYPE_PORTLET)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"3d01dcf6a317e0dbded7069b7af74fe9bad92ee6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Returns the color scheme that is configured for the current layout, or\n\t * the color scheme of the layout set that contains the current layout if no\n\t * color scheme is configured.\n\t *\n\t * @return the color scheme that is configured for the current layout, or\n\t *         the color scheme  of the layout set that contains the current\n\t *         layout if no color scheme is configured\n\t * @throws PortalException if a portal exception occurred\n\t */\n\t@Override\n\tpublic ColorScheme getColorScheme() throws PortalException {\n\t\tif (isInheritLookAndFeel()) {\n\t\t\treturn getLayoutSet().getColorScheme();\n\t\t}\n\t\telse {\n\t\t\treturn ThemeLocalServiceUtil.getColorScheme(\n\t\t\t\tgetCompanyId(), getTheme().getThemeId(), getColorSchemeId(),\n\t\t\t\tfalse);\n\t\t}\n\t}","id":58056,"modified_method":"/**\n\t * Returns the color scheme that is configured for the current layout, or\n\t * the color scheme of the layout set that contains the current layout if no\n\t * color scheme is configured.\n\t *\n\t * @return the color scheme that is configured for the current layout, or\n\t *         the color scheme  of the layout set that contains the current\n\t *         layout if no color scheme is configured\n\t * @throws PortalException if a portal exception occurred\n\t */\n\t@Override\n\tpublic ColorScheme getColorScheme() throws PortalException {\n\t\tif (isInheritLookAndFeel()) {\n\t\t\tLayoutSet layoutSet = getLayoutSet();\n\n\t\t\treturn layoutSet.getColorScheme();\n\t\t}\n\t\telse {\n\t\t\tTheme theme = getTheme();\n\n\t\t\treturn ThemeLocalServiceUtil.getColorScheme(\n\t\t\t\tgetCompanyId(), theme.getThemeId(), getColorSchemeId(), false);\n\t\t}\n\t}","commit_id":"3d01dcf6a317e0dbded7069b7af74fe9bad92ee6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic boolean isTypeURL() {\n\t\tif (getType().equals(LayoutConstants.TYPE_URL)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","id":58057,"modified_method":"@Override\n\tpublic boolean isTypeURL() {\n\t\tif (Validator.equals(getType(), LayoutConstants.TYPE_URL)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"3d01dcf6a317e0dbded7069b7af74fe9bad92ee6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic Theme getWapTheme() throws PortalException {\n\t\tif (isInheritWapLookAndFeel()) {\n\t\t\treturn getLayoutSet().getWapTheme();\n\t\t}\n\t\telse {\n\t\t\treturn ThemeLocalServiceUtil.getTheme(\n\t\t\t\tgetCompanyId(), getWapThemeId(), true);\n\t\t}\n\t}","id":58058,"modified_method":"@Override\n\tpublic Theme getWapTheme() throws PortalException {\n\t\tif (isInheritWapLookAndFeel()) {\n\t\t\tLayoutSet layoutSet = getLayoutSet();\n\n\t\t\treturn layoutSet.getWapTheme();\n\t\t}\n\t\telse {\n\t\t\treturn ThemeLocalServiceUtil.getTheme(\n\t\t\t\tgetCompanyId(), getWapThemeId(), true);\n\t\t}\n\t}","commit_id":"3d01dcf6a317e0dbded7069b7af74fe9bad92ee6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private String _getURL(\n\t\t\tHttpServletRequest request, boolean resetMaxState,\n\t\t\tboolean resetRenderParameters)\n\t\tthrows PortalException {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tif (resetMaxState) {\n\t\t\tLayout layout = themeDisplay.getLayout();\n\n\t\t\tLayoutTypePortlet layoutTypePortlet = null;\n\n\t\t\tif (layout.equals(this)) {\n\t\t\t\tlayoutTypePortlet = themeDisplay.getLayoutTypePortlet();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttry {\n\t\t\t\t\tlayoutTypePortlet = _getLayoutTypePortletClone(request);\n\t\t\t\t}\n\t\t\t\tcatch (IOException ioe) {\n\t\t\t\t\t_log.error(\"Unable to clone layout settings\", ioe);\n\n\t\t\t\t\tlayoutTypePortlet = (LayoutTypePortlet)getLayoutType();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (layoutTypePortlet.hasStateMax()) {\n\t\t\t\tString portletId = StringUtil.split(\n\t\t\t\t\tlayoutTypePortlet.getStateMax())[0];\n\n\t\t\t\tPortletURLImpl portletURLImpl = new PortletURLImpl(\n\t\t\t\t\trequest, portletId, getPlid(), PortletRequest.ACTION_PHASE);\n\n\t\t\t\ttry {\n\t\t\t\t\tportletURLImpl.setWindowState(WindowState.NORMAL);\n\t\t\t\t\tportletURLImpl.setPortletMode(PortletMode.VIEW);\n\t\t\t\t}\n\t\t\t\tcatch (PortletException pe) {\n\t\t\t\t\tthrow new SystemException(pe);\n\t\t\t\t}\n\n\t\t\t\tportletURLImpl.setAnchor(false);\n\n\t\t\t\tif (PropsValues.LAYOUT_DEFAULT_P_L_RESET &&\n\t\t\t\t\t!resetRenderParameters) {\n\n\t\t\t\t\tportletURLImpl.setParameter(\"p_l_reset\", \"0\");\n\t\t\t\t}\n\t\t\t\telse if (!PropsValues.LAYOUT_DEFAULT_P_L_RESET &&\n\t\t\t\t\t\t resetRenderParameters) {\n\n\t\t\t\t\tportletURLImpl.setParameter(\"p_l_reset\", \"1\");\n\t\t\t\t}\n\n\t\t\t\treturn portletURLImpl.toString();\n\t\t\t}\n\t\t}\n\n\t\tString portalURL = PortalUtil.getPortalURL(request);\n\n\t\tString url = PortalUtil.getLayoutURL(this, themeDisplay);\n\n\t\tif (!CookieKeys.hasSessionId(request) &&\n\t\t\t(url.startsWith(portalURL) || url.startsWith(StringPool.SLASH))) {\n\n\t\t\turl = PortalUtil.getURLWithSessionId(\n\t\t\t\turl, request.getSession().getId());\n\t\t}\n\n\t\tif (!resetMaxState) {\n\t\t\treturn url;\n\t\t}\n\n\t\tif (PropsValues.LAYOUT_DEFAULT_P_L_RESET && !resetRenderParameters) {\n\t\t\turl = HttpUtil.addParameter(url, \"p_l_reset\", 0);\n\t\t}\n\t\telse if (!PropsValues.LAYOUT_DEFAULT_P_L_RESET &&\n\t\t\t\t resetRenderParameters) {\n\n\t\t\turl = HttpUtil.addParameter(url, \"p_l_reset\", 1);\n\t\t}\n\n\t\treturn url;\n\t}","id":58059,"modified_method":"private String _getURL(\n\t\t\tHttpServletRequest request, boolean resetMaxState,\n\t\t\tboolean resetRenderParameters)\n\t\tthrows PortalException {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tif (resetMaxState) {\n\t\t\tLayout layout = themeDisplay.getLayout();\n\n\t\t\tLayoutTypePortlet layoutTypePortlet = null;\n\n\t\t\tif (layout.equals(this)) {\n\t\t\t\tlayoutTypePortlet = themeDisplay.getLayoutTypePortlet();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttry {\n\t\t\t\t\tlayoutTypePortlet = _getLayoutTypePortletClone(request);\n\t\t\t\t}\n\t\t\t\tcatch (IOException ioe) {\n\t\t\t\t\t_log.error(\"Unable to clone layout settings\", ioe);\n\n\t\t\t\t\tlayoutTypePortlet = (LayoutTypePortlet)getLayoutType();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (layoutTypePortlet.hasStateMax()) {\n\t\t\t\tString portletId = StringUtil.split(\n\t\t\t\t\tlayoutTypePortlet.getStateMax())[0];\n\n\t\t\t\tPortletURLImpl portletURLImpl = new PortletURLImpl(\n\t\t\t\t\trequest, portletId, getPlid(), PortletRequest.ACTION_PHASE);\n\n\t\t\t\ttry {\n\t\t\t\t\tportletURLImpl.setWindowState(WindowState.NORMAL);\n\t\t\t\t\tportletURLImpl.setPortletMode(PortletMode.VIEW);\n\t\t\t\t}\n\t\t\t\tcatch (PortletException pe) {\n\t\t\t\t\tthrow new SystemException(pe);\n\t\t\t\t}\n\n\t\t\t\tportletURLImpl.setAnchor(false);\n\n\t\t\t\tif (PropsValues.LAYOUT_DEFAULT_P_L_RESET &&\n\t\t\t\t\t!resetRenderParameters) {\n\n\t\t\t\t\tportletURLImpl.setParameter(\"p_l_reset\", \"0\");\n\t\t\t\t}\n\t\t\t\telse if (!PropsValues.LAYOUT_DEFAULT_P_L_RESET &&\n\t\t\t\t\t\t resetRenderParameters) {\n\n\t\t\t\t\tportletURLImpl.setParameter(\"p_l_reset\", \"1\");\n\t\t\t\t}\n\n\t\t\t\treturn portletURLImpl.toString();\n\t\t\t}\n\t\t}\n\n\t\tString portalURL = PortalUtil.getPortalURL(request);\n\n\t\tString url = PortalUtil.getLayoutURL(this, themeDisplay);\n\n\t\tif (!CookieKeys.hasSessionId(request) &&\n\t\t\t(url.startsWith(portalURL) || url.startsWith(StringPool.SLASH))) {\n\n\t\t\tHttpSession session = request.getSession();\n\n\t\t\turl = PortalUtil.getURLWithSessionId(url, session.getId());\n\t\t}\n\n\t\tif (!resetMaxState) {\n\t\t\treturn url;\n\t\t}\n\n\t\tif (PropsValues.LAYOUT_DEFAULT_P_L_RESET && !resetRenderParameters) {\n\t\t\turl = HttpUtil.addParameter(url, \"p_l_reset\", 0);\n\t\t}\n\t\telse if (!PropsValues.LAYOUT_DEFAULT_P_L_RESET &&\n\t\t\t\t resetRenderParameters) {\n\n\t\t\turl = HttpUtil.addParameter(url, \"p_l_reset\", 1);\n\t\t}\n\n\t\treturn url;\n\t}","commit_id":"3d01dcf6a317e0dbded7069b7af74fe9bad92ee6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic ColorScheme getWapColorScheme() throws PortalException {\n\t\tif (isInheritLookAndFeel()) {\n\t\t\treturn getLayoutSet().getWapColorScheme();\n\t\t}\n\t\telse {\n\t\t\treturn ThemeLocalServiceUtil.getColorScheme(\n\t\t\t\tgetCompanyId(), getWapTheme().getThemeId(),\n\t\t\t\tgetWapColorSchemeId(), true);\n\t\t}\n\t}","id":58060,"modified_method":"@Override\n\tpublic ColorScheme getWapColorScheme() throws PortalException {\n\t\tif (isInheritLookAndFeel()) {\n\t\t\tLayoutSet layoutSet = getLayoutSet();\n\n\t\t\treturn layoutSet.getWapColorScheme();\n\t\t}\n\t\telse {\n\t\t\tTheme theme = getWapTheme();\n\n\t\t\treturn ThemeLocalServiceUtil.getColorScheme(\n\t\t\t\tgetCompanyId(), theme.getThemeId(), getWapColorSchemeId(),\n\t\t\t\ttrue);\n\t\t}\n\t}","commit_id":"3d01dcf6a317e0dbded7069b7af74fe9bad92ee6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic boolean isTypeLinkToLayout() {\n\t\tif (getType().equals(LayoutConstants.TYPE_LINK_TO_LAYOUT) ||\n\t\t\t_getBaseTypePortlet().equals(LayoutConstants.TYPE_LINK_TO_LAYOUT)) {\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","id":58061,"modified_method":"@Override\n\tpublic boolean isTypeLinkToLayout() {\n\t\tif (Validator.equals(getType(), LayoutConstants.TYPE_LINK_TO_LAYOUT) ||\n\t\t\tValidator.equals(\n\t\t\t\t_getBaseLayoutType(), LayoutConstants.TYPE_LINK_TO_LAYOUT)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"3d01dcf6a317e0dbded7069b7af74fe9bad92ee6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic boolean isTypePanel() {\n\t\tif (getType().equals(LayoutConstants.TYPE_PANEL) ||\n\t\t\t_getBaseTypePortlet().equals(LayoutConstants.TYPE_PANEL)) {\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","id":58062,"modified_method":"@Override\n\tpublic boolean isTypePanel() {\n\t\tif (Validator.equals(getType(), LayoutConstants.TYPE_PANEL) ||\n\t\t\tValidator.equals(\n\t\t\t\t_getBaseLayoutType(), LayoutConstants.TYPE_PANEL)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"3d01dcf6a317e0dbded7069b7af74fe9bad92ee6","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public LayoutSet getLayoutSet() throws PortalException, SystemException {\n\t\treturn LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\tgetGroupId(), isPrivateLayout());\n\t}","id":58063,"modified_method":"public LayoutSet getLayoutSet() throws PortalException, SystemException {\n\t\tif (_layoutSet == null) {\n\t\t\t_layoutSet = LayoutSetLocalServiceUtil.getLayoutSet(\n\t\t\t\tgetGroupId(), isPrivateLayout());\n\t\t}\n\t\treturn _layoutSet;\n\t}","commit_id":"94a0559028feb7002c70b8eb70f1968e2f0bf8da","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void addPublicSite(\n\t\t\tlong companyId, long defaultUserId,\n\t\t\tList<LayoutSetPrototype> layoutSetPrototypes)\n\t\tthrows Exception {\n\n\t\tLayoutSet layoutSet =\n\t\t\tDefaultLayoutSetPrototypesUtil.addLayoutSetPrototype(\n\t\t\t\tcompanyId, defaultUserId,\n\t\t\t\t\"layout-set-prototype-community-site-title\",\n\t\t\t\t\"layout-set-prototype-community-site-description\",\n\t\t\t\tlayoutSetPrototypes,\n\t\t\t\tAddLayoutSetPrototypeAction.class.getClassLoader());\n\n\t\tif (layoutSet == null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Home layout\n\n\t\tLayout layout = DefaultLayoutPrototypesUtil.addLayout(\n\t\t\tlayoutSet, \"home\", \"/home\", \"2_columns_iii\");\n\t\tString portletId = PortletProviderUtil.getPortletId(\n\t\t\tMBMessage.class.getName(), PortletProvider.Action.EDIT);\n\n\t\tDefaultLayoutPrototypesUtil.addPortletId(layout, portletId, \"column-1\");\n\n\t\tDefaultLayoutPrototypesUtil.addPortletId(\n\t\t\tlayout, SocialUserStatisticsPortletKeys.SOCIAL_USER_STATISTICS,\n\t\t\t\"column-2\");\n\n\t\t// Wiki layout\n\n\t\tDefaultLayoutPrototypesUtil.addLayout(\n\t\t\tlayoutSet, \"wiki\", \"/wiki\", \"2_columns_iii\");\n\t}","id":58064,"modified_method":"protected void addPublicSite(\n\t\t\tlong companyId, long defaultUserId,\n\t\t\tList<LayoutSetPrototype> layoutSetPrototypes)\n\t\tthrows Exception {\n\n\t\tLayoutSet layoutSet =\n\t\t\tDefaultLayoutSetPrototypesUtil.addLayoutSetPrototype(\n\t\t\t\tcompanyId, defaultUserId,\n\t\t\t\t\"layout-set-prototype-community-site-title\",\n\t\t\t\t\"layout-set-prototype-community-site-description\",\n\t\t\t\tlayoutSetPrototypes,\n\t\t\t\tAddLayoutSetPrototypeAction.class.getClassLoader());\n\n\t\tif (layoutSet == null) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Home layout\n\n\t\tLayout layout = DefaultLayoutPrototypesUtil.addLayout(\n\t\t\tlayoutSet, \"home\", \"/home\", \"2_columns_iii\");\n\t\tString portletId = PortletProviderUtil.getPortletId(\n\t\t\tMBMessage.class.getName(), PortletProvider.Action.EDIT);\n\n\t\tDefaultLayoutPrototypesUtil.addPortletId(layout, portletId, \"column-1\");\n\n\t\ttry {\n\t\t\tDefaultLayoutPrototypesUtil.addPortletId(\n\t\t\t\tlayout, PollsPortletKeys.POLLS_DISPLAY, \"column-2\");\n\n\t\t\tDefaultLayoutPrototypesUtil.addPortletId(\n\t\t\t\tlayout, SocialUserStatisticsPortletKeys.SOCIAL_USER_STATISTICS,\n\t\t\t\t\"column-2\");\n\n\t\t\t// Wiki layout\n\n\t\t\tDefaultLayoutPrototypesUtil.addLayout(\n\t\t\t\tlayoutSet, \"wiki\", \"/wiki\", \"2_columns_iii\");\n\t\t}\n\t\tcatch (NoSuchResourceActionException e) {\n\t\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\t\t_layoutSetPrototypeLocalService.\n\t\t\t\tgetLayoutSetPrototypeByUuidAndCompanyId(\n\t\t\t\t\tlayoutSet.getLayoutSetPrototypeUuid(), companyId);\n\n\t\t\t_layoutSetLocalService.deleteLayoutSet(layoutSet);\n\t\t\t_layoutSetPrototypeLocalService.deleteLayoutSetPrototype(\n\t\t\t\tlayoutSetPrototype);\n\t\t}\n\t}","commit_id":"96dcbc09092ab9f6ade8b04f8366a1fc05d741f2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static LayoutSet addLayoutSetPrototype(\n\t\t\tlong companyId, long defaultUserId, String nameKey,\n\t\t\tString descriptionKey, List<LayoutSetPrototype> layoutSetPrototypes,\n\t\t\tClassLoader classLoader)\n\t\tthrows Exception {\n\n\t\tResourceBundle resourceBundle = ResourceBundleUtil.getBundle(\n\t\t\t\"content.Language\", LocaleUtil.getDefault(), classLoader);\n\n\t\tString name = LanguageUtil.get(resourceBundle, nameKey);\n\t\tString description = LanguageUtil.get(resourceBundle, descriptionKey);\n\n\t\tfor (LayoutSetPrototype layoutSetPrototype : layoutSetPrototypes) {\n\t\t\tString curName = layoutSetPrototype.getName(\n\t\t\t\tLocaleUtil.getDefault());\n\t\t\tString curDescription = layoutSetPrototype.getDescription(\n\t\t\t\tLocaleUtil.getDefault());\n\n\t\t\tif (name.equals(curName) && description.equals(curDescription)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tMap<Locale, String> nameMap = new HashMap<>();\n\t\tMap<Locale, String> descriptionMap = new HashMap<>();\n\n\t\tfor (Locale locale : LanguageUtil.getAvailableLocales()) {\n\t\t\tresourceBundle = ResourceBundleUtil.getBundle(\n\t\t\t\t\"content.Language\", locale, classLoader);\n\n\t\t\tnameMap.put(locale, LanguageUtil.get(resourceBundle, nameKey));\n\t\t\tdescriptionMap.put(\n\t\t\t\tlocale, LanguageUtil.get(resourceBundle, descriptionKey));\n\t\t}\n\n\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\tLayoutSetPrototypeLocalServiceUtil.addLayoutSetPrototype(\n\t\t\t\tdefaultUserId, companyId, nameMap, descriptionMap, true, true,\n\t\t\t\tnew ServiceContext());\n\n\t\tLayoutSet layoutSet = layoutSetPrototype.getLayoutSet();\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tLayoutLocalServiceUtil.deleteLayouts(\n\t\t\tlayoutSet.getGroupId(), layoutSet.isPrivateLayout(),\n\t\t\tserviceContext);\n\n\t\treturn layoutSetPrototype.getLayoutSet();\n\t}","id":58065,"modified_method":"public static LayoutSet addLayoutSetPrototype(\n\t\t\tlong companyId, long defaultUserId, String nameKey,\n\t\t\tString descriptionKey, List<LayoutSetPrototype> layoutSetPrototypes,\n\t\t\tClassLoader classLoader)\n\t\tthrows Exception {\n\n\t\tResourceBundle resourceBundle = ResourceBundleUtil.getBundle(\n\t\t\t\"content.Language\", LocaleUtil.getDefault(), classLoader);\n\n\t\tString name = LanguageUtil.get(resourceBundle, nameKey);\n\t\tString description = LanguageUtil.get(resourceBundle, descriptionKey);\n\n\t\tfor (LayoutSetPrototype layoutSetPrototype : layoutSetPrototypes) {\n\t\t\tString curName = layoutSetPrototype.getName(\n\t\t\t\tLocaleUtil.getDefault());\n\t\t\tString curDescription = layoutSetPrototype.getDescription(\n\t\t\t\tLocaleUtil.getDefault());\n\n\t\t\tif (name.equals(curName) && description.equals(curDescription)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tMap<Locale, String> nameMap = new HashMap<>();\n\t\tMap<Locale, String> descriptionMap = new HashMap<>();\n\n\t\tfor (Locale locale : LanguageUtil.getAvailableLocales()) {\n\t\t\tresourceBundle = ResourceBundleUtil.getBundle(\n\t\t\t\t\"content.Language\", locale, classLoader);\n\n\t\t\tnameMap.put(locale, LanguageUtil.get(resourceBundle, nameKey));\n\t\t\tdescriptionMap.put(\n\t\t\t\tlocale, LanguageUtil.get(resourceBundle, descriptionKey));\n\t\t}\n\n\t\tLayoutSetPrototype layoutSetPrototype =\n\t\t\tLayoutSetPrototypeLocalServiceUtil.addLayoutSetPrototype(\n\t\t\t\tdefaultUserId, companyId, nameMap, descriptionMap, true, true,\n\t\t\t\tnew ServiceContext());\n\n\t\tLayoutSet layoutSet = layoutSetPrototype.getLayoutSet();\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tLayoutLocalServiceUtil.deleteLayouts(\n\t\t\tlayoutSet.getGroupId(), layoutSet.isPrivateLayout(),\n\t\t\tserviceContext);\n\n\t\tlayoutSet = layoutSetPrototype.getLayoutSet();\n\t\tlayoutSet.setLayoutSetPrototypeUuid(layoutSetPrototype.getUuid());\n\n\t\treturn layoutSet;\n\t}","commit_id":"96dcbc09092ab9f6ade8b04f8366a1fc05d741f2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    public EditorCell createRootCell(List<SModelEvent> events) {\n      if (getEditedNode() == null || getEditedNode().getModel() == null) {\n        EditorContext editorContext = getEditorContext();\n        return new EditorCell_Constant(editorContext, getEditedNode(), \"\");\n      }\n      return getEditorContext().createRootCell(getEditedNode(), events);\n    }","id":58066,"modified_method":"@Override\n    public EditorCell createRootCell(List<SModelEvent> events) {\n      if (getEditedNode() == null || getEditedNode().getModel() == null) {\n        EditorContext editorContext = getEditorContext();\n        return new EditorCell_Constant(editorContext, getEditedNode(), \"\");\n      }\n      pushCellContext();\n      EditorCell rootCell = getEditorContext().createRootCell(getEditedNode(), events);\n      popCellContext();\n      return rootCell;\n    }","commit_id":"be22e2936804b5dd1e5ce63b56a5f2fa02f9c2b9","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public EditorCell createRootCell(List<SModelEvent> events) {\n      if (getEditedNode() == null || getEditedNode().getModel() == null) {\n        EditorContext editorContext = getEditorContext();\n        return new EditorCell_Constant(editorContext, getEditedNode(), \"\");\n      }\n      pushCellContext();\n      EditorCell rootCell = getEditorContext().createRootCell(getEditedNode(), events);\n      popCellContext();\n      return rootCell;\n    }","id":58067,"modified_method":"@Override\n    public EditorCell createRootCell(List<SModelEvent> events) {\n      if (getEditedNode() == null || getEditedNode().getModel() == null) {\n        EditorContext editorContext = getEditorContext();\n        return new EditorCell_Constant(editorContext, getEditedNode(), \"\");\n      }\n      return getEditorContext().createRootCell(getEditedNode(), events);\n    }","commit_id":"2748e7c993727612a367dc6b09e988a28a1a603e","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public EditorCell createRootCell(List<SModelEvent> events) {\n      if (getEditedNode() == null || getEditedNode().getModel() == null) {\n        EditorContext editorContext = getEditorContext();\n        return new EditorCell_Constant(editorContext, getEditedNode(), \"\");\n      }\n      pushCellContext();\n      EditorCell rootCell = getEditorContext().createRootCell(getEditedNode(), events);\n      popCellContext();\n      return rootCell;\n    }","id":58068,"modified_method":"@Override\n    public EditorCell createRootCell(List<SModelEvent> events) {\n      if (getEditedNode() == null || getEditedNode().getModel() == null) {\n        EditorContext editorContext = getEditorContext();\n        return new EditorCell_Constant(editorContext, getEditedNode(), \"\");\n      }\n      pushCellContext();\n      try {\n        return getEditorContext().createRootCell(getEditedNode(), events);\n      } finally {\n        popCellContext();\n      }\n    }","commit_id":"5e9214e2653ad5fb8b59d6b68d860eb8fca29992","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected String cleanContent(String content) {\n\t\treturn HtmlUtil.escape(\n\t\t\tStringUtil.shorten(HtmlUtil.extractText(content), 200));\n\t}","id":58069,"modified_method":"protected String cleanContent(String content) {\n\t\treturn StringUtil.shorten(HtmlUtil.extractText(content), 200);\n\t}","commit_id":"c552a1efff709c4d8f267b103d3b0dd86c570b45","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String getGroupName(long groupId, ThemeDisplay themeDisplay) {\n\t\ttry {\n\t\t\tif (groupId <= 0) {\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\t\tString groupName = HtmlUtil.escape(group.getDescriptiveName());\n\n\t\t\tif (group.getGroupId() == themeDisplay.getScopeGroupId()) {\n\t\t\t\treturn groupName;\n\t\t\t}\n\n\t\t\tString groupDisplayURL =\n\t\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\t\"/my_places/view?groupId=\" +  group.getGroupId();\n\n\t\t\tif (group.hasPublicLayouts()) {\n\t\t\t\tgroupDisplayURL = groupDisplayURL + \"&privateLayout=0\";\n\t\t\t}\n\t\t\telse if (group.hasPrivateLayouts()) {\n\t\t\t\tgroupDisplayURL = groupDisplayURL + \"&privateLayout=1\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn groupName;\n\t\t\t}\n\n\t\t\tgroupName =\n\t\t\t\t\"<a class=\\\"group\\\" href=\\\"\" + groupDisplayURL + \"\\\">\" +\n\t\t\t\t\tgroupName + \"<\/a>\";\n\n\t\t\treturn groupName;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\t}","id":58070,"modified_method":"protected String getGroupName(long groupId, ThemeDisplay themeDisplay) {\n\t\ttry {\n\t\t\tif (groupId <= 0) {\n\t\t\t\treturn StringPool.BLANK;\n\t\t\t}\n\n\t\t\tGroup group = GroupLocalServiceUtil.getGroup(groupId);\n\n\t\t\tString groupName = group.getDescriptiveName();\n\n\t\t\tif (group.getGroupId() == themeDisplay.getScopeGroupId()) {\n\t\t\t\treturn groupName;\n\t\t\t}\n\n\t\t\tString groupDisplayURL =\n\t\t\t\tthemeDisplay.getPortalURL() + themeDisplay.getPathMain() +\n\t\t\t\t\t\"/my_places/view?groupId=\" +  group.getGroupId();\n\n\t\t\tif (group.hasPublicLayouts()) {\n\t\t\t\tgroupDisplayURL = groupDisplayURL + \"&privateLayout=0\";\n\t\t\t}\n\t\t\telse if (group.hasPrivateLayouts()) {\n\t\t\t\tgroupDisplayURL = groupDisplayURL + \"&privateLayout=1\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn groupName;\n\t\t\t}\n\n\t\t\tgroupName =\n\t\t\t\t\"<a class=\\\"group\\\" href=\\\"\" + groupDisplayURL + \"\\\">\" +\n\t\t\t\t\tgroupName + \"<\/a>\";\n\n\t\t\treturn groupName;\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\treturn StringPool.BLANK;\n\t\t}\n\t}","commit_id":"c552a1efff709c4d8f267b103d3b0dd86c570b45","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void getRootFolders(\n\t\t\tCommandArgument commandArgument, Document document,\n\t\t\tElement foldersElement)\n\t\tthrows Exception {\n\n\t\tList<Group> groups = new UniqueList<Group>();\n\n\t\tLinkedHashMap<String, Object> groupParams =\n\t\t\tnew LinkedHashMap<String, Object>();\n\n\t\tgroupParams.put(\"usersGroups\", new Long(commandArgument.getUserId()));\n\n\t\tgroups.addAll(\n\t\t\tGroupLocalServiceUtil.search(\n\t\t\t\tcommandArgument.getCompanyId(), null, null, groupParams,\n\t\t\t\tQueryUtil.ALL_POS, QueryUtil.ALL_POS));\n\n\t\tList<Organization> userOrgs =\n\t\t\tOrganizationLocalServiceUtil.getUserOrganizations(\n\t\t\t\tcommandArgument.getUserId());\n\n\t\tfor (Organization organization : userOrgs) {\n\t\t\tgroups.add(0, organization.getGroup());\n\t\t}\n\n\t\tif (PropsValues.LAYOUT_USER_PRIVATE_LAYOUTS_ENABLED ||\n\t\t\tPropsValues.LAYOUT_USER_PUBLIC_LAYOUTS_ENABLED) {\n\n\t\t\tGroup userGroup = GroupLocalServiceUtil.getUserGroup(\n\t\t\t\tcommandArgument.getCompanyId(), commandArgument.getUserId());\n\n\t\t\tgroups.add(0, userGroup);\n\t\t}\n\n\t\tGroup companyGroup = GroupLocalServiceUtil.getCompanyGroup(\n\t\t\tcommandArgument.getCompanyId());\n\n\t\tgroups.add(0, companyGroup);\n\n\t\tThemeDisplay themeDisplay = commandArgument.getThemeDisplay();\n\n\t\tlong doAsGroupId = themeDisplay.getDoAsGroupId();\n\n\t\tHttpServletRequest request = commandArgument.getHttpServletRequest();\n\n\t\tString portletId = ParamUtil.getString(request, \"p_p_id\");\n\n\t\tfor (Group group : groups) {\n\t\t\tElement folderElement = document.createElement(\"Folder\");\n\n\t\t\tfoldersElement.appendChild(folderElement);\n\n\t\t\tlong groupId = group.getGroupId();\n\t\t\tString descriptiveName = HtmlUtil.escape(\n\t\t\t\tgroup.getDescriptiveName());\n\n\t\t\tif (group.hasStagingGroup()) {\n\t\t\t\tGroup stagingGroup = group.getStagingGroup();\n\n\t\t\t\tif ((stagingGroup.getGroupId() == doAsGroupId) &&\n\t\t\t\t\tgroup.isStagedPortlet(portletId) &&\n\t\t\t\t\t!group.isStagedRemotely() && isStagedData(group)) {\n\n\t\t\t\t\tgroupId = stagingGroup.getGroupId();\n\t\t\t\t\tdescriptiveName = HtmlUtil.escape(\n\t\t\t\t\t\tstagingGroup.getDescriptiveName());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfolderElement.setAttribute(\n\t\t\t\t\"name\", groupId + \" - \" + descriptiveName);\n\t\t}\n\t}","id":58071,"modified_method":"protected void getRootFolders(\n\t\t\tCommandArgument commandArgument, Document document,\n\t\t\tElement foldersElement)\n\t\tthrows Exception {\n\n\t\tList<Group> groups = new UniqueList<Group>();\n\n\t\tLinkedHashMap<String, Object> groupParams =\n\t\t\tnew LinkedHashMap<String, Object>();\n\n\t\tgroupParams.put(\"usersGroups\", new Long(commandArgument.getUserId()));\n\n\t\tgroups.addAll(\n\t\t\tGroupLocalServiceUtil.search(\n\t\t\t\tcommandArgument.getCompanyId(), null, null, groupParams,\n\t\t\t\tQueryUtil.ALL_POS, QueryUtil.ALL_POS));\n\n\t\tList<Organization> userOrgs =\n\t\t\tOrganizationLocalServiceUtil.getUserOrganizations(\n\t\t\t\tcommandArgument.getUserId());\n\n\t\tfor (Organization organization : userOrgs) {\n\t\t\tgroups.add(0, organization.getGroup());\n\t\t}\n\n\t\tif (PropsValues.LAYOUT_USER_PRIVATE_LAYOUTS_ENABLED ||\n\t\t\tPropsValues.LAYOUT_USER_PUBLIC_LAYOUTS_ENABLED) {\n\n\t\t\tGroup userGroup = GroupLocalServiceUtil.getUserGroup(\n\t\t\t\tcommandArgument.getCompanyId(), commandArgument.getUserId());\n\n\t\t\tgroups.add(0, userGroup);\n\t\t}\n\n\t\tGroup companyGroup = GroupLocalServiceUtil.getCompanyGroup(\n\t\t\tcommandArgument.getCompanyId());\n\n\t\tgroups.add(0, companyGroup);\n\n\t\tThemeDisplay themeDisplay = commandArgument.getThemeDisplay();\n\n\t\tlong doAsGroupId = themeDisplay.getDoAsGroupId();\n\n\t\tHttpServletRequest request = commandArgument.getHttpServletRequest();\n\n\t\tString portletId = ParamUtil.getString(request, \"p_p_id\");\n\n\t\tfor (Group group : groups) {\n\t\t\tElement folderElement = document.createElement(\"Folder\");\n\n\t\t\tfoldersElement.appendChild(folderElement);\n\n\t\t\tlong groupId = group.getGroupId();\n\t\t\tString descriptiveName = group.getDescriptiveName();\n\n\t\t\tif (group.hasStagingGroup()) {\n\t\t\t\tGroup stagingGroup = group.getStagingGroup();\n\n\t\t\t\tif ((stagingGroup.getGroupId() == doAsGroupId) &&\n\t\t\t\t\tgroup.isStagedPortlet(portletId) &&\n\t\t\t\t\t!group.isStagedRemotely() && isStagedData(group)) {\n\n\t\t\t\t\tgroupId = stagingGroup.getGroupId();\n\t\t\t\t\tdescriptiveName = stagingGroup.getDescriptiveName();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfolderElement.setAttribute(\n\t\t\t\t\"name\", groupId + \" - \" + HtmlUtil.escape(descriptiveName));\n\t\t}\n\t}","commit_id":"9b703abbe3688c0490c222661b6a348e49af0ed4","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String getGroupEntriesRSS(\n\t\t\tlong groupId, Date displayDate, int status, int max, String type,\n\t\t\tdouble version, String displayStyle, String feedURL,\n\t\t\tString entryURL, ThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tGroup group = groupPersistence.findByPrimaryKey(groupId);\n\n\t\tString name = HtmlUtil.escape(group.getDescriptiveName());\n\t\tList<BlogsEntry> blogsEntries = getGroupEntries(\n\t\t\tgroupId, displayDate, status, max);\n\n\t\treturn exportToRSS(\n\t\t\tname, name, type, version, displayStyle, feedURL, entryURL,\n\t\t\tblogsEntries, themeDisplay);\n\t}","id":58072,"modified_method":"public String getGroupEntriesRSS(\n\t\t\tlong groupId, Date displayDate, int status, int max, String type,\n\t\t\tdouble version, String displayStyle, String feedURL,\n\t\t\tString entryURL, ThemeDisplay themeDisplay)\n\t\tthrows PortalException, SystemException {\n\n\t\tGroup group = groupPersistence.findByPrimaryKey(groupId);\n\n\t\tString name = group.getDescriptiveName();\n\t\tList<BlogsEntry> blogsEntries = getGroupEntries(\n\t\t\tgroupId, displayDate, status, max);\n\n\t\treturn exportToRSS(\n\t\t\tname, name, type, version, displayStyle, feedURL, entryURL,\n\t\t\tblogsEntries, themeDisplay);\n\t}","commit_id":"a28d66fb5f5b515d772c53e20977f4120c4b4311","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String exportToRSS(\n\t\t\tString name, String description, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tList<BlogsEntry> blogsEntries, ThemeDisplay themeDisplay)\n\t\tthrows SystemException {\n\n\t\tSyndFeed syndFeed = new SyndFeedImpl();\n\n\t\tsyndFeed.setFeedType(RSSUtil.getFeedType(type, version));\n\t\tsyndFeed.setTitle(name);\n\t\tsyndFeed.setLink(feedURL);\n\t\tsyndFeed.setDescription(description);\n\n\t\tList<SyndEntry> syndEntries = new ArrayList<SyndEntry>();\n\n\t\tsyndFeed.setEntries(syndEntries);\n\n\t\tfor (BlogsEntry entry : blogsEntries) {\n\t\t\tString author = HtmlUtil.escape(\n\t\t\t\tPortalUtil.getUserName(entry.getUserId(), entry.getUserName()));\n\n\t\t\tStringBundler link = new StringBundler(4);\n\n\t\t\tif (entryURL.endsWith(\"/blogs/rss\")) {\n\t\t\t\tlink.append(entryURL.substring(0, entryURL.length() - 3));\n\t\t\t\tlink.append(entry.getUrlTitle());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlink.append(entryURL);\n\n\t\t\t\tif (!entryURL.endsWith(StringPool.QUESTION)) {\n\t\t\t\t\tlink.append(StringPool.AMPERSAND);\n\t\t\t\t}\n\n\t\t\t\tlink.append(\"entryId=\");\n\t\t\t\tlink.append(entry.getEntryId());\n\t\t\t}\n\n\t\t\tString value = null;\n\n\t\t\tif (displayStyle.equals(RSSUtil.DISPLAY_STYLE_ABSTRACT)) {\n\t\t\t\tString summary = entry.getDescription();\n\n\t\t\t\tif (Validator.isNull(summary)) {\n\t\t\t\t\tsummary = entry.getContent();\n\t\t\t\t}\n\n\t\t\t\tvalue = StringUtil.shorten(\n\t\t\t\t\tHtmlUtil.extractText(summary),\n\t\t\t\t\tPropsValues.BLOGS_RSS_ABSTRACT_LENGTH, StringPool.BLANK);\n\t\t\t}\n\t\t\telse if (displayStyle.equals(RSSUtil.DISPLAY_STYLE_TITLE)) {\n\t\t\t\tvalue = StringPool.BLANK;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = StringUtil.replace(\n\t\t\t\t\tentry.getContent(),\n\t\t\t\t\tnew String[] {\n\t\t\t\t\t\t\"href=\\\"/\", \"src=\\\"/\"\n\t\t\t\t\t},\n\t\t\t\t\tnew String[] {\n\t\t\t\t\t\t\"href=\\\"\" + themeDisplay.getURLPortal() + \"/\",\n\t\t\t\t\t\t\"src=\\\"\" + themeDisplay.getURLPortal() + \"/\"\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tSyndEntry syndEntry = new SyndEntryImpl();\n\n\t\t\tsyndEntry.setAuthor(author);\n\t\t\tsyndEntry.setTitle(entry.getTitle());\n\t\t\tsyndEntry.setLink(link.toString());\n\t\t\tsyndEntry.setUri(syndEntry.getLink());\n\t\t\tsyndEntry.setPublishedDate(entry.getCreateDate());\n\t\t\tsyndEntry.setUpdatedDate(entry.getModifiedDate());\n\n\t\t\tSyndContent syndContent = new SyndContentImpl();\n\n\t\t\tsyndContent.setType(RSSUtil.ENTRY_TYPE_DEFAULT);\n\t\t\tsyndContent.setValue(value);\n\n\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\tsyndEntries.add(syndEntry);\n\t\t}\n\n\t\ttry {\n\t\t\treturn RSSUtil.export(syndFeed);\n\t\t}\n\t\tcatch (FeedException fe) {\n\t\t\tthrow new SystemException(fe);\n\t\t}\n\t}","id":58073,"modified_method":"protected String exportToRSS(\n\t\t\tString name, String description, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tList<BlogsEntry> blogsEntries, ThemeDisplay themeDisplay)\n\t\tthrows SystemException {\n\n\t\tSyndFeed syndFeed = new SyndFeedImpl();\n\n\t\tsyndFeed.setFeedType(RSSUtil.getFeedType(type, version));\n\t\tsyndFeed.setTitle(name);\n\t\tsyndFeed.setLink(feedURL);\n\t\tsyndFeed.setDescription(description);\n\n\t\tList<SyndEntry> syndEntries = new ArrayList<SyndEntry>();\n\n\t\tsyndFeed.setEntries(syndEntries);\n\n\t\tfor (BlogsEntry entry : blogsEntries) {\n\t\t\tString author = PortalUtil.getUserName(entry);\n\n\t\t\tStringBundler link = new StringBundler(4);\n\n\t\t\tif (entryURL.endsWith(\"/blogs/rss\")) {\n\t\t\t\tlink.append(entryURL.substring(0, entryURL.length() - 3));\n\t\t\t\tlink.append(entry.getUrlTitle());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlink.append(entryURL);\n\n\t\t\t\tif (!entryURL.endsWith(StringPool.QUESTION)) {\n\t\t\t\t\tlink.append(StringPool.AMPERSAND);\n\t\t\t\t}\n\n\t\t\t\tlink.append(\"entryId=\");\n\t\t\t\tlink.append(entry.getEntryId());\n\t\t\t}\n\n\t\t\tString value = null;\n\n\t\t\tif (displayStyle.equals(RSSUtil.DISPLAY_STYLE_ABSTRACT)) {\n\t\t\t\tString summary = entry.getDescription();\n\n\t\t\t\tif (Validator.isNull(summary)) {\n\t\t\t\t\tsummary = entry.getContent();\n\t\t\t\t}\n\n\t\t\t\tvalue = StringUtil.shorten(\n\t\t\t\t\tHtmlUtil.extractText(summary),\n\t\t\t\t\tPropsValues.BLOGS_RSS_ABSTRACT_LENGTH, StringPool.BLANK);\n\t\t\t}\n\t\t\telse if (displayStyle.equals(RSSUtil.DISPLAY_STYLE_TITLE)) {\n\t\t\t\tvalue = StringPool.BLANK;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = StringUtil.replace(\n\t\t\t\t\tentry.getContent(),\n\t\t\t\t\tnew String[] {\n\t\t\t\t\t\t\"href=\\\"/\", \"src=\\\"/\"\n\t\t\t\t\t},\n\t\t\t\t\tnew String[] {\n\t\t\t\t\t\t\"href=\\\"\" + themeDisplay.getURLPortal() + \"/\",\n\t\t\t\t\t\t\"src=\\\"\" + themeDisplay.getURLPortal() + \"/\"\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tSyndEntry syndEntry = new SyndEntryImpl();\n\n\t\t\tsyndEntry.setAuthor(author);\n\t\t\tsyndEntry.setTitle(entry.getTitle());\n\t\t\tsyndEntry.setLink(link.toString());\n\t\t\tsyndEntry.setUri(syndEntry.getLink());\n\t\t\tsyndEntry.setPublishedDate(entry.getCreateDate());\n\t\t\tsyndEntry.setUpdatedDate(entry.getModifiedDate());\n\n\t\t\tSyndContent syndContent = new SyndContentImpl();\n\n\t\t\tsyndContent.setType(RSSUtil.ENTRY_TYPE_DEFAULT);\n\t\t\tsyndContent.setValue(value);\n\n\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\tsyndEntries.add(syndEntry);\n\t\t}\n\n\t\ttry {\n\t\t\treturn RSSUtil.export(syndFeed);\n\t\t}\n\t\tcatch (FeedException fe) {\n\t\t\tthrow new SystemException(fe);\n\t\t}\n\t}","commit_id":"a28d66fb5f5b515d772c53e20977f4120c4b4311","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String exportToRSS(\n\t\t\tString name, String description, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tList<MBMessage> messages, ThemeDisplay themeDisplay)\n\t\tthrows SystemException {\n\n\t\tSyndFeed syndFeed = new SyndFeedImpl();\n\n\t\tsyndFeed.setFeedType(RSSUtil.getFeedType(type, version));\n\t\tsyndFeed.setTitle(name);\n\t\tsyndFeed.setLink(feedURL);\n\t\tsyndFeed.setDescription(description);\n\n\t\tList<SyndEntry> syndEntries = new ArrayList<SyndEntry>();\n\n\t\tsyndFeed.setEntries(syndEntries);\n\n\t\tfor (MBMessage message : messages) {\n\t\t\tString author = HtmlUtil.escape(\n\t\t\t\tPortalUtil.getUserName(\n\t\t\t\t\tmessage.getUserId(), message.getUserName()));\n\n\t\t\tString value = null;\n\n\t\t\tif (displayStyle.equals(RSSUtil.DISPLAY_STYLE_ABSTRACT)) {\n\t\t\t\tvalue = StringUtil.shorten(\n\t\t\t\t\tHtmlUtil.extractText(message.getBody()),\n\t\t\t\t\tPropsValues.MESSAGE_BOARDS_RSS_ABSTRACT_LENGTH,\n\t\t\t\t\tStringPool.BLANK);\n\t\t\t}\n\t\t\telse if (displayStyle.equals(RSSUtil.DISPLAY_STYLE_TITLE)) {\n\t\t\t\tvalue = StringPool.BLANK;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = BBCodeTranslatorUtil.getHTML(message.getBody());\n\n\t\t\t\tvalue = StringUtil.replace(\n\t\t\t\t\tvalue,\n\t\t\t\t\tnew String[] {\n\t\t\t\t\t\t\"@theme_images_path@\", \"href=\\\"/\", \"src=\\\"/\"\n\t\t\t\t\t},\n\t\t\t\t\tnew String[] {\n\t\t\t\t\t\tthemeDisplay.getURLPortal() +\n\t\t\t\t\t\t\tthemeDisplay.getPathThemeImages(),\n\t\t\t\t\t\t\"href=\\\"\" + themeDisplay.getURLPortal() + \"/\",\n\t\t\t\t\t\t\"src=\\\"\" + themeDisplay.getURLPortal() + \"/\"\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tSyndEntry syndEntry = new SyndEntryImpl();\n\n\t\t\tif (!message.isAnonymous()) {\n\t\t\t\tsyndEntry.setAuthor(author);\n\t\t\t}\n\n\t\t\tsyndEntry.setTitle(message.getSubject());\n\t\t\tsyndEntry.setLink(\n\t\t\t\tentryURL + \"&messageId=\" + message.getMessageId());\n\t\t\tsyndEntry.setUri(syndEntry.getLink());\n\t\t\tsyndEntry.setPublishedDate(message.getCreateDate());\n\t\t\tsyndEntry.setUpdatedDate(message.getModifiedDate());\n\n\t\t\tSyndContent syndContent = new SyndContentImpl();\n\n\t\t\tsyndContent.setType(RSSUtil.ENTRY_TYPE_DEFAULT);\n\t\t\tsyndContent.setValue(value);\n\n\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\tsyndEntries.add(syndEntry);\n\t\t}\n\n\t\ttry {\n\t\t\treturn RSSUtil.export(syndFeed);\n\t\t}\n\t\tcatch (FeedException fe) {\n\t\t\tthrow new SystemException(fe);\n\t\t}\n\t}","id":58074,"modified_method":"protected String exportToRSS(\n\t\t\tString name, String description, String type, double version,\n\t\t\tString displayStyle, String feedURL, String entryURL,\n\t\t\tList<MBMessage> messages, ThemeDisplay themeDisplay)\n\t\tthrows SystemException {\n\n\t\tSyndFeed syndFeed = new SyndFeedImpl();\n\n\t\tsyndFeed.setFeedType(RSSUtil.getFeedType(type, version));\n\t\tsyndFeed.setTitle(name);\n\t\tsyndFeed.setLink(feedURL);\n\t\tsyndFeed.setDescription(description);\n\n\t\tList<SyndEntry> syndEntries = new ArrayList<SyndEntry>();\n\n\t\tsyndFeed.setEntries(syndEntries);\n\n\t\tfor (MBMessage message : messages) {\n\t\t\tString author = PortalUtil.getUserName(message);\n\n\t\t\tString value = null;\n\n\t\t\tif (displayStyle.equals(RSSUtil.DISPLAY_STYLE_ABSTRACT)) {\n\t\t\t\tvalue = StringUtil.shorten(\n\t\t\t\t\tHtmlUtil.extractText(message.getBody()),\n\t\t\t\t\tPropsValues.MESSAGE_BOARDS_RSS_ABSTRACT_LENGTH,\n\t\t\t\t\tStringPool.BLANK);\n\t\t\t}\n\t\t\telse if (displayStyle.equals(RSSUtil.DISPLAY_STYLE_TITLE)) {\n\t\t\t\tvalue = StringPool.BLANK;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = BBCodeTranslatorUtil.getHTML(message.getBody());\n\n\t\t\t\tvalue = StringUtil.replace(\n\t\t\t\t\tvalue,\n\t\t\t\t\tnew String[] {\n\t\t\t\t\t\t\"@theme_images_path@\", \"href=\\\"/\", \"src=\\\"/\"\n\t\t\t\t\t},\n\t\t\t\t\tnew String[] {\n\t\t\t\t\t\tthemeDisplay.getURLPortal() +\n\t\t\t\t\t\t\tthemeDisplay.getPathThemeImages(),\n\t\t\t\t\t\t\"href=\\\"\" + themeDisplay.getURLPortal() + \"/\",\n\t\t\t\t\t\t\"src=\\\"\" + themeDisplay.getURLPortal() + \"/\"\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\tSyndEntry syndEntry = new SyndEntryImpl();\n\n\t\t\tif (!message.isAnonymous()) {\n\t\t\t\tsyndEntry.setAuthor(author);\n\t\t\t}\n\n\t\t\tsyndEntry.setTitle(message.getSubject());\n\t\t\tsyndEntry.setLink(\n\t\t\t\tentryURL + \"&messageId=\" + message.getMessageId());\n\t\t\tsyndEntry.setUri(syndEntry.getLink());\n\t\t\tsyndEntry.setPublishedDate(message.getCreateDate());\n\t\t\tsyndEntry.setUpdatedDate(message.getModifiedDate());\n\n\t\t\tSyndContent syndContent = new SyndContentImpl();\n\n\t\t\tsyndContent.setType(RSSUtil.ENTRY_TYPE_DEFAULT);\n\t\t\tsyndContent.setValue(value);\n\n\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\tsyndEntries.add(syndEntry);\n\t\t}\n\n\t\ttry {\n\t\t\treturn RSSUtil.export(syndFeed);\n\t\t}\n\t\tcatch (FeedException fe) {\n\t\t\tthrow new SystemException(fe);\n\t\t}\n\t}","commit_id":"a28d66fb5f5b515d772c53e20977f4120c4b4311","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String exportToRSS(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse,\n\t\t\tJournalFeed feed, String languageId, Layout layout,\n\t\t\tThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tResourceURL feedURL = resourceResponse.createResourceURL();\n\n\t\tfeedURL.setCacheability(ResourceURL.FULL);\n\t\tfeedURL.setParameter(\"struts_action\", \"/journal/rss\");\n\t\tfeedURL.setParameter(\"groupId\", String.valueOf(feed.getGroupId()));\n\t\tfeedURL.setParameter(\"feedId\", String.valueOf(feed.getFeedId()));\n\n\t\tSyndFeed syndFeed = new SyndFeedImpl();\n\n\t\tsyndFeed.setDescription(feed.getDescription());\n\t\tsyndFeed.setFeedType(feed.getFeedType() + \"_\" + feed.getFeedVersion());\n\t\tsyndFeed.setLink(feedURL.toString());\n\t\tsyndFeed.setTitle(feed.getName());\n\n\t\tList<SyndEntry> syndEntries = new ArrayList<SyndEntry>();\n\n\t\tsyndFeed.setEntries(syndEntries);\n\n\t\tList<JournalArticle> articles = JournalRSSUtil.getArticles(feed);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Syndicating \" + articles.size() + \" articles\");\n\t\t}\n\n\t\tfor (JournalArticle article : articles) {\n\t\t\tString author = HtmlUtil.escape(\n\t\t\t\tPortalUtil.getUserName(\n\t\t\t\t\tarticle.getUserId(), article.getUserName()));\n\t\t\tString link = getEntryURL(\n\t\t\t\tresourceRequest, feed, article, layout, themeDisplay);\n\n\t\t\tSyndEntry syndEntry = new SyndEntryImpl();\n\n\t\t\tsyndEntry.setAuthor(author);\n\n\t\t\tSyndContent syndContent = new SyndContentImpl();\n\n\t\t\tString value = article.getDescription(languageId);\n\n\t\t\ttry {\n\t\t\t\tvalue = processContent(\n\t\t\t\t\tfeed, article, languageId, themeDisplay, syndEntry,\n\t\t\t\t\tsyndContent);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(e, e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsyndContent.setType(RSSUtil.ENTRY_TYPE_DEFAULT);\n\t\t\tsyndContent.setValue(value);\n\n\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\tsyndEntry.setLink(link);\n\t\t\tsyndEntry.setPublishedDate(article.getDisplayDate());\n\t\t\tsyndEntry.setTitle(article.getTitle(languageId));\n\t\t\tsyndEntry.setUpdatedDate(article.getModifiedDate());\n\t\t\tsyndEntry.setUri(syndEntry.getLink());\n\n\t\t\tsyndEntries.add(syndEntry);\n\t\t}\n\n\t\ttry {\n\t\t\treturn RSSUtil.export(syndFeed);\n\t\t}\n\t\tcatch (FeedException fe) {\n\t\t\tthrow new SystemException(fe);\n\t\t}\n\t}","id":58075,"modified_method":"protected String exportToRSS(\n\t\t\tResourceRequest resourceRequest, ResourceResponse resourceResponse,\n\t\t\tJournalFeed feed, String languageId, Layout layout,\n\t\t\tThemeDisplay themeDisplay)\n\t\tthrows Exception {\n\n\t\tResourceURL feedURL = resourceResponse.createResourceURL();\n\n\t\tfeedURL.setCacheability(ResourceURL.FULL);\n\t\tfeedURL.setParameter(\"struts_action\", \"/journal/rss\");\n\t\tfeedURL.setParameter(\"groupId\", String.valueOf(feed.getGroupId()));\n\t\tfeedURL.setParameter(\"feedId\", String.valueOf(feed.getFeedId()));\n\n\t\tSyndFeed syndFeed = new SyndFeedImpl();\n\n\t\tsyndFeed.setDescription(feed.getDescription());\n\t\tsyndFeed.setFeedType(feed.getFeedType() + \"_\" + feed.getFeedVersion());\n\t\tsyndFeed.setLink(feedURL.toString());\n\t\tsyndFeed.setTitle(feed.getName());\n\n\t\tList<SyndEntry> syndEntries = new ArrayList<SyndEntry>();\n\n\t\tsyndFeed.setEntries(syndEntries);\n\n\t\tList<JournalArticle> articles = JournalRSSUtil.getArticles(feed);\n\n\t\tif (_log.isDebugEnabled()) {\n\t\t\t_log.debug(\"Syndicating \" + articles.size() + \" articles\");\n\t\t}\n\n\t\tfor (JournalArticle article : articles) {\n\t\t\tString author = PortalUtil.getUserName(article);\n\t\t\tString link = getEntryURL(\n\t\t\t\tresourceRequest, feed, article, layout, themeDisplay);\n\n\t\t\tSyndEntry syndEntry = new SyndEntryImpl();\n\n\t\t\tsyndEntry.setAuthor(author);\n\n\t\t\tSyndContent syndContent = new SyndContentImpl();\n\n\t\t\tString value = article.getDescription(languageId);\n\n\t\t\ttry {\n\t\t\t\tvalue = processContent(\n\t\t\t\t\tfeed, article, languageId, themeDisplay, syndEntry,\n\t\t\t\t\tsyndContent);\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(e, e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsyndContent.setType(RSSUtil.ENTRY_TYPE_DEFAULT);\n\t\t\tsyndContent.setValue(value);\n\n\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\tsyndEntry.setLink(link);\n\t\t\tsyndEntry.setPublishedDate(article.getDisplayDate());\n\t\t\tsyndEntry.setTitle(article.getTitle(languageId));\n\t\t\tsyndEntry.setUpdatedDate(article.getModifiedDate());\n\t\t\tsyndEntry.setUri(syndEntry.getLink());\n\n\t\t\tsyndEntries.add(syndEntry);\n\t\t}\n\n\t\ttry {\n\t\t\treturn RSSUtil.export(syndFeed);\n\t\t}\n\t\tcatch (FeedException fe) {\n\t\t\tthrow new SystemException(fe);\n\t\t}\n\t}","commit_id":"a28d66fb5f5b515d772c53e20977f4120c4b4311","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String exportToRSS(\n\t\t\tPortletRequest portletRequest, PortletResponse portletResponse,\n\t\t\tString name, String description, String type, double version,\n\t\t\tString displayStyle, String linkBehavior,\n\t\t\tList<AssetEntry> assetEntries)\n\t\tthrows Exception {\n\n\t\tSyndFeed syndFeed = new SyndFeedImpl();\n\n\t\tsyndFeed.setFeedType(RSSUtil.getFeedType(type, version));\n\t\tsyndFeed.setTitle(name);\n\t\tsyndFeed.setLink(getFeedURL(portletRequest));\n\t\tsyndFeed.setDescription(GetterUtil.getString(description, name));\n\n\t\tList<SyndEntry> syndEntries = new ArrayList<SyndEntry>();\n\n\t\tsyndFeed.setEntries(syndEntries);\n\n\t\tfor (AssetEntry assetEntry : assetEntries) {\n\t\t\tString link = getEntryURL(\n\t\t\t\tportletRequest, portletResponse, linkBehavior, assetEntry);\n\n\t\t\tString author = HtmlUtil.escape(\n\t\t\t\tPortalUtil.getUserName(\n\t\t\t\t\tassetEntry.getUserId(), assetEntry.getUserName()));\n\n\t\t\tString value = null;\n\n\t\t\tString languageId = LanguageUtil.getLanguageId(portletRequest);\n\n\t\t\tif (displayStyle.equals(RSSUtil.DISPLAY_STYLE_TITLE)) {\n\t\t\t\tvalue = StringPool.BLANK;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = assetEntry.getSummary(languageId, true);\n\t\t\t}\n\n\t\t\tSyndEntry syndEntry = new SyndEntryImpl();\n\n\t\t\tsyndEntry.setAuthor(author);\n\n\t\t\tsyndEntry.setTitle(assetEntry.getTitle(languageId, true));\n\n\t\t\tsyndEntry.setLink(link);\n\t\t\tsyndEntry.setUri(syndEntry.getLink());\n\t\t\tsyndEntry.setPublishedDate(assetEntry.getCreateDate());\n\t\t\tsyndEntry.setUpdatedDate(assetEntry.getModifiedDate());\n\n\t\t\tSyndContent syndContent = new SyndContentImpl();\n\n\t\t\tsyndContent.setType(RSSUtil.ENTRY_TYPE_DEFAULT);\n\t\t\tsyndContent.setValue(value);\n\n\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\tsyndEntries.add(syndEntry);\n\t\t}\n\n\t\treturn RSSUtil.export(syndFeed);\n\t}","id":58076,"modified_method":"protected String exportToRSS(\n\t\t\tPortletRequest portletRequest, PortletResponse portletResponse,\n\t\t\tString name, String description, String type, double version,\n\t\t\tString displayStyle, String linkBehavior,\n\t\t\tList<AssetEntry> assetEntries)\n\t\tthrows Exception {\n\n\t\tSyndFeed syndFeed = new SyndFeedImpl();\n\n\t\tsyndFeed.setFeedType(RSSUtil.getFeedType(type, version));\n\t\tsyndFeed.setTitle(name);\n\t\tsyndFeed.setLink(getFeedURL(portletRequest));\n\t\tsyndFeed.setDescription(GetterUtil.getString(description, name));\n\n\t\tList<SyndEntry> syndEntries = new ArrayList<SyndEntry>();\n\n\t\tsyndFeed.setEntries(syndEntries);\n\n\t\tfor (AssetEntry assetEntry : assetEntries) {\n\t\t\tString link = getEntryURL(\n\t\t\t\tportletRequest, portletResponse, linkBehavior, assetEntry);\n\n\t\t\tString author = PortalUtil.getUserName(assetEntry);\n\n\t\t\tString value = null;\n\n\t\t\tString languageId = LanguageUtil.getLanguageId(portletRequest);\n\n\t\t\tif (displayStyle.equals(RSSUtil.DISPLAY_STYLE_TITLE)) {\n\t\t\t\tvalue = StringPool.BLANK;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = assetEntry.getSummary(languageId, true);\n\t\t\t}\n\n\t\t\tSyndEntry syndEntry = new SyndEntryImpl();\n\n\t\t\tsyndEntry.setAuthor(author);\n\n\t\t\tsyndEntry.setTitle(assetEntry.getTitle(languageId, true));\n\n\t\t\tsyndEntry.setLink(link);\n\t\t\tsyndEntry.setUri(syndEntry.getLink());\n\t\t\tsyndEntry.setPublishedDate(assetEntry.getCreateDate());\n\t\t\tsyndEntry.setUpdatedDate(assetEntry.getModifiedDate());\n\n\t\t\tSyndContent syndContent = new SyndContentImpl();\n\n\t\t\tsyndContent.setType(RSSUtil.ENTRY_TYPE_DEFAULT);\n\t\t\tsyndContent.setValue(value);\n\n\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\tsyndEntries.add(syndEntry);\n\t\t}\n\n\t\treturn RSSUtil.export(syndFeed);\n\t}","commit_id":"a28d66fb5f5b515d772c53e20977f4120c4b4311","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected String exportToRSS(\n\t\t\tlong companyId, String name, String description, String type,\n\t\t\tdouble version, String displayStyle, String feedURL,\n\t\t\tString entryURL, List<WikiPage> pages, boolean diff, Locale locale)\n\t\tthrows SystemException {\n\n\t\tSyndFeed syndFeed = new SyndFeedImpl();\n\n\t\tsyndFeed.setFeedType(RSSUtil.getFeedType(type, version));\n\t\tsyndFeed.setTitle(name);\n\t\tsyndFeed.setLink(feedURL);\n\t\tsyndFeed.setDescription(description);\n\n\t\tList<SyndEntry> syndEntries = new ArrayList<SyndEntry>();\n\n\t\tsyndFeed.setEntries(syndEntries);\n\n\t\tWikiPage latestPage = null;\n\n\t\tStringBundler link = new StringBundler(7);\n\n\t\tfor (WikiPage page : pages) {\n\t\t\tString author = HtmlUtil.escape(\n\t\t\t\tPortalUtil.getUserName(page.getUserId(), page.getUserName()));\n\n\t\t\tString title =\n\t\t\t\tpage.getTitle() + StringPool.SPACE + page.getVersion();\n\n\t\t\tif (page.isMinorEdit()) {\n\t\t\t\ttitle +=\n\t\t\t\t\tStringPool.SPACE + StringPool.OPEN_PARENTHESIS +\n\t\t\t\t\t\tLanguageUtil.get(locale, \"minor-edit\") +\n\t\t\t\t\t\t\tStringPool.CLOSE_PARENTHESIS;\n\t\t\t}\n\n\t\t\tlink.setIndex(0);\n\n\t\t\tlink.append(entryURL);\n\t\t\tlink.append(StringPool.AMPERSAND);\n\t\t\tlink.append(HttpUtil.encodeURL(page.getTitle()));\n\n\t\t\tSyndEntry syndEntry = new SyndEntryImpl();\n\n\t\t\tsyndEntry.setAuthor(author);\n\t\t\tsyndEntry.setTitle(title);\n\t\t\tsyndEntry.setPublishedDate(page.getCreateDate());\n\t\t\tsyndEntry.setUpdatedDate(page.getModifiedDate());\n\n\t\t\tSyndContent syndContent = new SyndContentImpl();\n\n\t\t\tsyndContent.setType(RSSUtil.ENTRY_TYPE_DEFAULT);\n\n\t\t\tif (diff) {\n\t\t\t\tif (latestPage != null) {\n\t\t\t\t\tlink.append(StringPool.QUESTION);\n\t\t\t\t\tlink.append(\n\t\t\t\t\t\tPortalUtil.getPortletNamespace(PortletKeys.WIKI));\n\t\t\t\t\tlink.append(\"version=\");\n\t\t\t\t\tlink.append(page.getVersion());\n\n\t\t\t\t\tString value = getPageDiff(\n\t\t\t\t\t\tcompanyId, latestPage, page, locale);\n\n\t\t\t\t\tsyndContent.setValue(value);\n\n\t\t\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\t\t\tsyndEntries.add(syndEntry);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString value = null;\n\n\t\t\t\tif (displayStyle.equals(RSSUtil.DISPLAY_STYLE_ABSTRACT)) {\n\t\t\t\t\tvalue = StringUtil.shorten(\n\t\t\t\t\t\tHtmlUtil.extractText(page.getContent()),\n\t\t\t\t\t\tPropsValues.WIKI_RSS_ABSTRACT_LENGTH, StringPool.BLANK);\n\t\t\t\t}\n\t\t\t\telse if (displayStyle.equals(RSSUtil.DISPLAY_STYLE_TITLE)) {\n\t\t\t\t\tvalue = StringPool.BLANK;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalue = page.getContent();\n\t\t\t\t}\n\n\t\t\t\tsyndContent.setValue(value);\n\n\t\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\t\tsyndEntries.add(syndEntry);\n\t\t\t}\n\n\t\t\tsyndEntry.setLink(link.toString());\n\t\t\tsyndEntry.setUri(syndEntry.getLink());\n\n\t\t\tlatestPage = page;\n\t\t}\n\n\t\ttry {\n\t\t\treturn RSSUtil.export(syndFeed);\n\t\t}\n\t\tcatch (FeedException fe) {\n\t\t\tthrow new SystemException(fe);\n\t\t}\n\t}","id":58077,"modified_method":"protected String exportToRSS(\n\t\t\tlong companyId, String name, String description, String type,\n\t\t\tdouble version, String displayStyle, String feedURL,\n\t\t\tString entryURL, List<WikiPage> pages, boolean diff, Locale locale)\n\t\tthrows SystemException {\n\n\t\tSyndFeed syndFeed = new SyndFeedImpl();\n\n\t\tsyndFeed.setFeedType(RSSUtil.getFeedType(type, version));\n\t\tsyndFeed.setTitle(name);\n\t\tsyndFeed.setLink(feedURL);\n\t\tsyndFeed.setDescription(description);\n\n\t\tList<SyndEntry> syndEntries = new ArrayList<SyndEntry>();\n\n\t\tsyndFeed.setEntries(syndEntries);\n\n\t\tWikiPage latestPage = null;\n\n\t\tStringBundler link = new StringBundler(7);\n\n\t\tfor (WikiPage page : pages) {\n\t\t\tString author = PortalUtil.getUserName(page);\n\t\t\tString title =\n\t\t\t\tpage.getTitle() + StringPool.SPACE + page.getVersion();\n\n\t\t\tif (page.isMinorEdit()) {\n\t\t\t\ttitle +=\n\t\t\t\t\tStringPool.SPACE + StringPool.OPEN_PARENTHESIS +\n\t\t\t\t\t\tLanguageUtil.get(locale, \"minor-edit\") +\n\t\t\t\t\t\t\tStringPool.CLOSE_PARENTHESIS;\n\t\t\t}\n\n\t\t\tlink.setIndex(0);\n\n\t\t\tlink.append(entryURL);\n\t\t\tlink.append(StringPool.AMPERSAND);\n\t\t\tlink.append(HttpUtil.encodeURL(page.getTitle()));\n\n\t\t\tSyndEntry syndEntry = new SyndEntryImpl();\n\n\t\t\tsyndEntry.setAuthor(author);\n\t\t\tsyndEntry.setTitle(title);\n\t\t\tsyndEntry.setPublishedDate(page.getCreateDate());\n\t\t\tsyndEntry.setUpdatedDate(page.getModifiedDate());\n\n\t\t\tSyndContent syndContent = new SyndContentImpl();\n\n\t\t\tsyndContent.setType(RSSUtil.ENTRY_TYPE_DEFAULT);\n\n\t\t\tif (diff) {\n\t\t\t\tif (latestPage != null) {\n\t\t\t\t\tlink.append(StringPool.QUESTION);\n\t\t\t\t\tlink.append(\n\t\t\t\t\t\tPortalUtil.getPortletNamespace(PortletKeys.WIKI));\n\t\t\t\t\tlink.append(\"version=\");\n\t\t\t\t\tlink.append(page.getVersion());\n\n\t\t\t\t\tString value = getPageDiff(\n\t\t\t\t\t\tcompanyId, latestPage, page, locale);\n\n\t\t\t\t\tsyndContent.setValue(value);\n\n\t\t\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\t\t\tsyndEntries.add(syndEntry);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString value = null;\n\n\t\t\t\tif (displayStyle.equals(RSSUtil.DISPLAY_STYLE_ABSTRACT)) {\n\t\t\t\t\tvalue = StringUtil.shorten(\n\t\t\t\t\t\tHtmlUtil.extractText(page.getContent()),\n\t\t\t\t\t\tPropsValues.WIKI_RSS_ABSTRACT_LENGTH, StringPool.BLANK);\n\t\t\t\t}\n\t\t\t\telse if (displayStyle.equals(RSSUtil.DISPLAY_STYLE_TITLE)) {\n\t\t\t\t\tvalue = StringPool.BLANK;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalue = page.getContent();\n\t\t\t\t}\n\n\t\t\t\tsyndContent.setValue(value);\n\n\t\t\t\tsyndEntry.setDescription(syndContent);\n\n\t\t\t\tsyndEntries.add(syndEntry);\n\t\t\t}\n\n\t\t\tsyndEntry.setLink(link.toString());\n\t\t\tsyndEntry.setUri(syndEntry.getLink());\n\n\t\t\tlatestPage = page;\n\t\t}\n\n\t\ttry {\n\t\t\treturn RSSUtil.export(syndFeed);\n\t\t}\n\t\tcatch (FeedException fe) {\n\t\t\tthrow new SystemException(fe);\n\t\t}\n\t}","commit_id":"a28d66fb5f5b515d772c53e20977f4120c4b4311","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void doReceive(Message message) throws Exception {\n\t\tFlagsRequest flagsRequest = (FlagsRequest)message.getPayload();\n\n\t\t// Service context\n\n\t\tServiceContext serviceContext = flagsRequest.getServiceContext();\n\n\t\t// Company\n\n\t\tlong companyId = serviceContext.getCompanyId();\n\n\t\tCompany company = CompanyLocalServiceUtil.getCompany(\n\t\t\tserviceContext.getCompanyId());\n\n\t\t// Group\n\n\t\tLayout layout = LayoutLocalServiceUtil.getLayout(\n\t\t\tserviceContext.getPlid());\n\n\t\tGroup group = layout.getGroup();\n\n\t\tString groupName = HtmlUtil.escape(group.getDescriptiveName());\n\n\t\t// Reporter user\n\n\t\tString reporterUserName = null;\n\t\tString reporterEmailAddress = null;\n\n\t\tUser reporterUser = UserLocalServiceUtil.getUserById(\n\t\t\tserviceContext.getUserId());\n\n\t\tLocale locale = LocaleUtil.getDefault();\n\n\t\tif (reporterUser.isDefaultUser()) {\n\t\t\treporterUserName = LanguageUtil.get(locale, \"anonymous\");\n\t\t}\n\t\telse {\n\t\t\treporterUserName = reporterUser.getFullName();\n\t\t\treporterEmailAddress = reporterUser.getEmailAddress();\n\t\t}\n\n\t\t// Reported user\n\n\t\tString reportedUserName = StringPool.BLANK;\n\t\tString reportedEmailAddress = StringPool.BLANK;\n\t\tString reportedURL = StringPool.BLANK;\n\n\t\tUser reportedUser = UserLocalServiceUtil.getUserById(\n\t\t\tflagsRequest.getReportedUserId());\n\n\t\tif (reportedUser.isDefaultUser()) {\n\t\t\treportedUserName = HtmlUtil.escape(group.getDescriptiveName());\n\t\t}\n\t\telse {\n\t\t\treportedUserName = HtmlUtil.escape(reportedUser.getFullName());\n\t\t\treportedEmailAddress = reportedUser.getEmailAddress();\n\t\t\treportedURL = reportedUser.getDisplayURL(\n\t\t\t\tserviceContext.getPortalURL(), serviceContext.getPathMain());\n\t\t}\n\n\t\t// Content\n\n\t\tString contentType = ResourceActionsUtil.getModelResource(\n\t\t\tlocale, flagsRequest.getClassName());\n\n\t\t// Reason\n\n\t\tString reason = LanguageUtil.get(locale, flagsRequest.getReason());\n\n\t\t// Email\n\n\t\tString fromName = PrefsPropsUtil.getStringFromNames(\n\t\t\tcompanyId, PropsKeys.FLAGS_EMAIL_FROM_NAME,\n\t\t\tPropsKeys.ADMIN_EMAIL_FROM_NAME);\n\t\tString fromAddress = PrefsPropsUtil.getStringFromNames(\n\t\t\tcompanyId, PropsKeys.FLAGS_EMAIL_FROM_ADDRESS,\n\t\t\tPropsKeys.ADMIN_EMAIL_FROM_ADDRESS);\n\n\t\tString subject = PrefsPropsUtil.getContent(\n\t\t\tcompanyId, PropsKeys.FLAGS_EMAIL_SUBJECT);\n\t\tString body = PrefsPropsUtil.getContent(\n\t\t\tcompanyId, PropsKeys.FLAGS_EMAIL_BODY);\n\n\t\t// Recipients\n\n\t\tList<User> recipients = getRecipients(\n\t\t\tcompanyId, serviceContext.getScopeGroupId());\n\n\t\tfor (User recipient : recipients) {\n\t\t\ttry {\n\t\t\t\tnotify(\n\t\t\t\t\tcompany, groupName, reporterEmailAddress, reporterUserName,\n\t\t\t\t\treportedEmailAddress, reportedUserName, reportedURL,\n\t\t\t\t\tflagsRequest.getClassPK(), flagsRequest.getContentTitle(),\n\t\t\t\t\tcontentType, flagsRequest.getContentURL(), reason, fromName,\n\t\t\t\t\tfromAddress, recipient.getFullName(),\n\t\t\t\t\trecipient.getEmailAddress(), subject, body, serviceContext);\n\t\t\t}\n\t\t\tcatch (IOException ioe) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(ioe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":58078,"modified_method":"@Override\n\tprotected void doReceive(Message message) throws Exception {\n\t\tFlagsRequest flagsRequest = (FlagsRequest)message.getPayload();\n\n\t\t// Service context\n\n\t\tServiceContext serviceContext = flagsRequest.getServiceContext();\n\n\t\t// Company\n\n\t\tlong companyId = serviceContext.getCompanyId();\n\n\t\tCompany company = CompanyLocalServiceUtil.getCompany(\n\t\t\tserviceContext.getCompanyId());\n\n\t\t// Group\n\n\t\tLayout layout = LayoutLocalServiceUtil.getLayout(\n\t\t\tserviceContext.getPlid());\n\n\t\tGroup group = layout.getGroup();\n\n\t\tString groupName = group.getDescriptiveName();\n\n\t\t// Reporter user\n\n\t\tString reporterUserName = null;\n\t\tString reporterEmailAddress = null;\n\n\t\tUser reporterUser = UserLocalServiceUtil.getUserById(\n\t\t\tserviceContext.getUserId());\n\n\t\tLocale locale = LocaleUtil.getDefault();\n\n\t\tif (reporterUser.isDefaultUser()) {\n\t\t\treporterUserName = LanguageUtil.get(locale, \"anonymous\");\n\t\t}\n\t\telse {\n\t\t\treporterUserName = reporterUser.getFullName();\n\t\t\treporterEmailAddress = reporterUser.getEmailAddress();\n\t\t}\n\n\t\t// Reported user\n\n\t\tString reportedUserName = StringPool.BLANK;\n\t\tString reportedEmailAddress = StringPool.BLANK;\n\t\tString reportedURL = StringPool.BLANK;\n\n\t\tUser reportedUser = UserLocalServiceUtil.getUserById(\n\t\t\tflagsRequest.getReportedUserId());\n\n\t\tif (reportedUser.isDefaultUser()) {\n\t\t\treportedUserName = group.getDescriptiveName();\n\t\t}\n\t\telse {\n\t\t\treportedUserName = reportedUser.getFullName();\n\t\t\treportedEmailAddress = reportedUser.getEmailAddress();\n\t\t\treportedURL = reportedUser.getDisplayURL(\n\t\t\t\tserviceContext.getPortalURL(), serviceContext.getPathMain());\n\t\t}\n\n\t\t// Content\n\n\t\tString contentType = ResourceActionsUtil.getModelResource(\n\t\t\tlocale, flagsRequest.getClassName());\n\n\t\t// Reason\n\n\t\tString reason = LanguageUtil.get(locale, flagsRequest.getReason());\n\n\t\t// Email\n\n\t\tString fromName = PrefsPropsUtil.getStringFromNames(\n\t\t\tcompanyId, PropsKeys.FLAGS_EMAIL_FROM_NAME,\n\t\t\tPropsKeys.ADMIN_EMAIL_FROM_NAME);\n\t\tString fromAddress = PrefsPropsUtil.getStringFromNames(\n\t\t\tcompanyId, PropsKeys.FLAGS_EMAIL_FROM_ADDRESS,\n\t\t\tPropsKeys.ADMIN_EMAIL_FROM_ADDRESS);\n\n\t\tString subject = PrefsPropsUtil.getContent(\n\t\t\tcompanyId, PropsKeys.FLAGS_EMAIL_SUBJECT);\n\t\tString body = PrefsPropsUtil.getContent(\n\t\t\tcompanyId, PropsKeys.FLAGS_EMAIL_BODY);\n\n\t\t// Recipients\n\n\t\tList<User> recipients = getRecipients(\n\t\t\tcompanyId, serviceContext.getScopeGroupId());\n\n\t\tfor (User recipient : recipients) {\n\t\t\ttry {\n\t\t\t\tnotify(\n\t\t\t\t\tcompany, groupName, reporterEmailAddress, reporterUserName,\n\t\t\t\t\treportedEmailAddress, reportedUserName, reportedURL,\n\t\t\t\t\tflagsRequest.getClassPK(), flagsRequest.getContentTitle(), contentType,\n\t\t\t\t\tflagsRequest.getContentURL(), reason, fromName, fromAddress,\n\t\t\t\t\trecipient.getFullName(), recipient.getEmailAddress(),\n\t\t\t\t\tsubject, body, serviceContext);\n\t\t\t}\n\t\t\tcatch (IOException ioe) {\n\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t_log.warn(ioe);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"1dc8ae13f4e9c62b8fc04289aee222ea62345795","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private static void replaceElements(XmlTag tag, TemplateBuilder builder) {\n    for (XmlAttribute attribute : tag.getAttributes()) {\n      XmlAttributeValue value = attribute.getValueElement();\n      builder.replaceElement(value, TextRange.from(1, 0), new MacroCallNode(new CompleteMacro()));\n    }\n    if (\"<\".equals(tag.getText())) {\n      builder.replaceElement(tag, TextRange.from(1, 0), new MacroCallNode(new CompleteSmartMacro()));\n    }\n    else if (tag.getSubTags().length == 0) {\n      int i = tag.getText().indexOf(\"><\/\");\n      if (i > 0) {\n        builder.replaceElement(tag, TextRange.from(i + 1, 0), new MacroCallNode(new CompleteMacro()));\n      }\n    }\n    for (XmlTag subTag : tag.getSubTags()) {\n      replaceElements(subTag, builder);\n    }\n  }","id":58079,"modified_method":"private static void replaceElements(XmlTag tag, TemplateBuilder builder) {\n    for (XmlAttribute attribute : tag.getAttributes()) {\n      XmlAttributeValue value = attribute.getValueElement();\n      if (value != null) {\n        builder.replaceElement(value, TextRange.from(1, 0), new MacroCallNode(new CompleteMacro()));\n      }\n    }\n    if (\"<\".equals(tag.getText())) {\n      builder.replaceElement(tag, TextRange.from(1, 0), new MacroCallNode(new CompleteSmartMacro()));\n    }\n    else if (tag.getSubTags().length == 0) {\n      int i = tag.getText().indexOf(\"><\/\");\n      if (i > 0) {\n        builder.replaceElement(tag, TextRange.from(i + 1, 0), new MacroCallNode(new CompleteMacro()));\n      }\n    }\n    for (XmlTag subTag : tag.getSubTags()) {\n      replaceElements(subTag, builder);\n    }\n  }","commit_id":"2e5915029f97838c48142b9701877bed67d570d9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void showTemplateBuilder(PsiElement initStatement, @NotNull final PsiFile file) {\n    initStatement = CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(initStatement);\n    if (initStatement instanceof PyAssignmentStatement) {\n      final TemplateBuilder builder = TemplateBuilderFactory.getInstance().createTemplateBuilder(initStatement);\n      final PyExpression assignedValue = ((PyAssignmentStatement)initStatement).getAssignedValue();\n      if (assignedValue != null) {\n        builder.replaceElement(assignedValue, myInitializer);\n        final VirtualFile virtualFile = file.getVirtualFile();\n        if (virtualFile == null) return;\n        final Editor editor = FileEditorManager.getInstance(file.getProject()).openTextEditor(\n                  new OpenFileDescriptor(file.getProject(), virtualFile), true);\n        if (editor == null) return;\n        builder.run(editor, false);\n      }\n    }\n  }","id":58080,"modified_method":"private void showTemplateBuilder(PsiElement initStatement, @NotNull final PsiFile file) {\n    initStatement = CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(initStatement);\n    if (initStatement instanceof PyAssignmentStatement) {\n      final TemplateBuilder builder = TemplateBuilderFactory.getInstance().createTemplateBuilder(initStatement);\n      final PyExpression assignedValue = ((PyAssignmentStatement)initStatement).getAssignedValue();\n      final PyExpression leftExpression = ((PyAssignmentStatement)initStatement).getLeftHandSideExpression();\n      if (assignedValue != null && leftExpression != null) {\n        if (replaceInitializer)\n          builder.replaceElement(assignedValue, myInitializer);\n        else\n          builder.replaceElement(leftExpression.getLastChild(), myIdentifier);\n        final VirtualFile virtualFile = file.getVirtualFile();\n        if (virtualFile == null) return;\n        final Editor editor = FileEditorManager.getInstance(file.getProject()).openTextEditor(\n                  new OpenFileDescriptor(file.getProject(), virtualFile), true);\n        if (editor == null) return;\n        builder.run(editor, false);\n      }\n    }\n  }","commit_id":"136ade1713a08e1fd4ce48e413959a4e4d85507f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public AddFieldQuickFix(@NotNull final String identifier, @NotNull final String initializer, final String className) {\n    myIdentifier = identifier;\n    myInitializer = initializer;\n    myClassName = className;\n  }","id":58081,"modified_method":"public AddFieldQuickFix(@NotNull final String identifier, @NotNull final String initializer, final String className, boolean replace) {\n    myIdentifier = identifier;\n    myInitializer = initializer;\n    myClassName = className;\n    replaceInitializer = replace;\n  }","commit_id":"136ade1713a08e1fd4ce48e413959a4e4d85507f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void addCreateMemberFromUsageFixes(PyType type, PsiReference reference, String refText, List<LocalQuickFix> actions) {\n      PsiElement element = reference.getElement();\n      if (type instanceof PyClassTypeImpl) {\n        PyClass cls = ((PyClassType)type).getPyClass();\n        if (!PyBuiltinCache.getInstance(element).isBuiltin(cls)) {\n          if (element.getParent() instanceof PyCallExpression) {\n            actions.add(new AddMethodQuickFix(refText, cls.getName(), true));\n          }\n          else if (!(reference instanceof PyOperatorReference)) {\n            actions.add(new AddFieldQuickFix(refText, \"None\", type.getName()));\n          }\n        }\n      }\n      else if (type instanceof PyModuleType) {\n        PyFile file = ((PyModuleType)type).getModule();\n        actions.add(new AddFunctionQuickFix(refText, file.getName()));\n      }\n    }","id":58082,"modified_method":"private static void addCreateMemberFromUsageFixes(PyType type, PsiReference reference, String refText, List<LocalQuickFix> actions) {\n      PsiElement element = reference.getElement();\n      if (type instanceof PyClassTypeImpl) {\n        PyClass cls = ((PyClassType)type).getPyClass();\n        if (!PyBuiltinCache.getInstance(element).isBuiltin(cls)) {\n          if (element.getParent() instanceof PyCallExpression) {\n            actions.add(new AddMethodQuickFix(refText, cls.getName(), true));\n          }\n          else if (!(reference instanceof PyOperatorReference)) {\n            actions.add(new AddFieldQuickFix(refText, \"None\", type.getName(), true));\n          }\n        }\n      }\n      else if (type instanceof PyModuleType) {\n        PyFile file = ((PyModuleType)type).getModule();\n        actions.add(new AddFunctionQuickFix(refText, file.getName()));\n      }\n    }","commit_id":"136ade1713a08e1fd4ce48e413959a4e4d85507f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"void registerProblems() {\n    final PyInspectionExtension[] filters = Extensions.getExtensions(PyInspectionExtension.EP_NAME);\n    // Register problems\n\n    final Set<PyFunction> functionsWithInheritors = new HashSet<PyFunction>();\n    final Map<PyFunction, Boolean> emptyFunctions = new HashMap<PyFunction, Boolean>();\n\n    for (PsiElement element : myUnusedElements) {\n      boolean ignoreUnused = false;\n      for (PyInspectionExtension filter : filters) {\n        if (filter.ignoreUnused(element)) {\n          ignoreUnused = true;\n        }\n      }\n      if (ignoreUnused) continue;\n\n      if (element instanceof PyFunction) {\n        // Local function\n        final PsiElement nameIdentifier = ((PyFunction)element).getNameIdentifier();\n        registerWarning(nameIdentifier == null ? element : nameIdentifier,\n                        PyBundle.message(\"INSP.unused.locals.local.function.isnot.used\",\n                        ((PyFunction)element).getName()), new PyRemoveStatementQuickFix());\n      }\n      else if (element instanceof PyClass) {\n        // Local class\n        final PyClass cls = (PyClass)element;\n        final PsiElement name = cls.getNameIdentifier();\n        registerWarning(name != null ? name : element,\n                        PyBundle.message(\"INSP.unused.locals.local.class.isnot.used\", cls.getName()), new PyRemoveStatementQuickFix());\n      }\n      else {\n        // Local variable or parameter\n        String name = element.getText();\n        if (element instanceof PyNamedParameter || element.getParent() instanceof PyNamedParameter) {\n          PyNamedParameter namedParameter = element instanceof PyNamedParameter\n                                            ? (PyNamedParameter) element\n                                            : (PyNamedParameter) element.getParent();\n          name = namedParameter.getName();\n          // When function is inside a class, first parameter may be either self or cls which is always 'used'.\n          if (namedParameter.isSelf()) {\n            continue;\n          }\n          if (myIgnoreLambdaParameters && PsiTreeUtil.getParentOfType(element, Callable.class) instanceof PyLambdaExpression) {\n            continue;\n          }\n          boolean mayBeField = false;\n          PyClass containingClass = null;\n          PyParameterList paramList = PsiTreeUtil.getParentOfType(element, PyParameterList.class);\n          if (paramList != null && paramList.getParent() instanceof PyFunction) {\n            final PyFunction func = (PyFunction) paramList.getParent();\n            containingClass = func.getContainingClass();\n            if (PyNames.INIT.equals(func.getName()) && containingClass != null) {\n              if (!namedParameter.isKeywordContainer() && !namedParameter.isPositionalContainer()) {\n                mayBeField = true;\n              }\n            }\n            else if (ignoreUnusedParameters(func, functionsWithInheritors)) {\n              continue;\n            }\n            if (func.asMethod() != null) {\n              Boolean isEmpty = emptyFunctions.get(func);\n              if (isEmpty == null) {\n                isEmpty = isEmptyFunction(func);\n                emptyFunctions.put(func, isEmpty);\n              }\n              if (isEmpty && !mayBeField) {\n                continue;\n              }\n            }\n          }\n          boolean canRemove = !(PsiTreeUtil.getPrevSiblingOfType(element, PyParameter.class) instanceof PySingleStarParameter) ||\n            PsiTreeUtil.getNextSiblingOfType(element, PyParameter.class) != null;\n\n          final List<LocalQuickFix> fixes = new ArrayList<LocalQuickFix>();\n          if (mayBeField) {\n            fixes.add(new AddFieldQuickFix(name, name, containingClass.getName()));\n          }\n          if (canRemove) {\n            fixes.add(new PyRemoveParameterQuickFix());\n          }\n          registerWarning(element, PyBundle.message(\"INSP.unused.locals.parameter.isnot.used\", name), fixes.toArray(new LocalQuickFix[fixes.size()]));\n        }\n        else {\n          if (myIgnoreTupleUnpacking && isTupleUnpacking(element)) {\n            continue;\n          }\n          final PyForStatement forStatement = PyForStatementNavigator.getPyForStatementByIterable(element);\n          if (forStatement != null) {\n            if (!myIgnoreRangeIterationVariables || !isRangeIteration(forStatement)) {\n              registerProblem(element, PyBundle.message(\"INSP.unused.locals.local.variable.isnot.used\", name),\n                              ProblemHighlightType.LIKE_UNUSED_SYMBOL, null, new ReplaceWithWildCard());\n            }\n          }\n          else {\n            registerWarning(element, PyBundle.message(\"INSP.unused.locals.local.variable.isnot.used\", name), new PyRemoveStatementQuickFix());\n          }\n        }\n      }\n    }\n  }","id":58083,"modified_method":"void registerProblems() {\n    final PyInspectionExtension[] filters = Extensions.getExtensions(PyInspectionExtension.EP_NAME);\n    // Register problems\n\n    final Set<PyFunction> functionsWithInheritors = new HashSet<PyFunction>();\n    final Map<PyFunction, Boolean> emptyFunctions = new HashMap<PyFunction, Boolean>();\n\n    for (PsiElement element : myUnusedElements) {\n      boolean ignoreUnused = false;\n      for (PyInspectionExtension filter : filters) {\n        if (filter.ignoreUnused(element)) {\n          ignoreUnused = true;\n        }\n      }\n      if (ignoreUnused) continue;\n\n      if (element instanceof PyFunction) {\n        // Local function\n        final PsiElement nameIdentifier = ((PyFunction)element).getNameIdentifier();\n        registerWarning(nameIdentifier == null ? element : nameIdentifier,\n                        PyBundle.message(\"INSP.unused.locals.local.function.isnot.used\",\n                        ((PyFunction)element).getName()), new PyRemoveStatementQuickFix());\n      }\n      else if (element instanceof PyClass) {\n        // Local class\n        final PyClass cls = (PyClass)element;\n        final PsiElement name = cls.getNameIdentifier();\n        registerWarning(name != null ? name : element,\n                        PyBundle.message(\"INSP.unused.locals.local.class.isnot.used\", cls.getName()), new PyRemoveStatementQuickFix());\n      }\n      else {\n        // Local variable or parameter\n        String name = element.getText();\n        if (element instanceof PyNamedParameter || element.getParent() instanceof PyNamedParameter) {\n          PyNamedParameter namedParameter = element instanceof PyNamedParameter\n                                            ? (PyNamedParameter) element\n                                            : (PyNamedParameter) element.getParent();\n          name = namedParameter.getName();\n          // When function is inside a class, first parameter may be either self or cls which is always 'used'.\n          if (namedParameter.isSelf()) {\n            continue;\n          }\n          if (myIgnoreLambdaParameters && PsiTreeUtil.getParentOfType(element, Callable.class) instanceof PyLambdaExpression) {\n            continue;\n          }\n          boolean mayBeField = false;\n          PyClass containingClass = null;\n          PyParameterList paramList = PsiTreeUtil.getParentOfType(element, PyParameterList.class);\n          if (paramList != null && paramList.getParent() instanceof PyFunction) {\n            final PyFunction func = (PyFunction) paramList.getParent();\n            containingClass = func.getContainingClass();\n            if (PyNames.INIT.equals(func.getName()) && containingClass != null) {\n              if (!namedParameter.isKeywordContainer() && !namedParameter.isPositionalContainer()) {\n                mayBeField = true;\n              }\n            }\n            else if (ignoreUnusedParameters(func, functionsWithInheritors)) {\n              continue;\n            }\n            if (func.asMethod() != null) {\n              Boolean isEmpty = emptyFunctions.get(func);\n              if (isEmpty == null) {\n                isEmpty = isEmptyFunction(func);\n                emptyFunctions.put(func, isEmpty);\n              }\n              if (isEmpty && !mayBeField) {\n                continue;\n              }\n            }\n          }\n          boolean canRemove = !(PsiTreeUtil.getPrevSiblingOfType(element, PyParameter.class) instanceof PySingleStarParameter) ||\n            PsiTreeUtil.getNextSiblingOfType(element, PyParameter.class) != null;\n\n          final List<LocalQuickFix> fixes = new ArrayList<LocalQuickFix>();\n          if (mayBeField) {\n            fixes.add(new AddFieldQuickFix(name, name, containingClass.getName(), false));\n          }\n          if (canRemove) {\n            fixes.add(new PyRemoveParameterQuickFix());\n          }\n          registerWarning(element, PyBundle.message(\"INSP.unused.locals.parameter.isnot.used\", name), fixes.toArray(new LocalQuickFix[fixes.size()]));\n        }\n        else {\n          if (myIgnoreTupleUnpacking && isTupleUnpacking(element)) {\n            continue;\n          }\n          final PyForStatement forStatement = PyForStatementNavigator.getPyForStatementByIterable(element);\n          if (forStatement != null) {\n            if (!myIgnoreRangeIterationVariables || !isRangeIteration(forStatement)) {\n              registerProblem(element, PyBundle.message(\"INSP.unused.locals.local.variable.isnot.used\", name),\n                              ProblemHighlightType.LIKE_UNUSED_SYMBOL, null, new ReplaceWithWildCard());\n            }\n          }\n          else {\n            registerWarning(element, PyBundle.message(\"INSP.unused.locals.local.variable.isnot.used\", name), new PyRemoveStatementQuickFix());\n          }\n        }\n      }\n    }\n  }","commit_id":"136ade1713a08e1fd4ce48e413959a4e4d85507f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void invoke(@NotNull Project project, Editor editor, PsiFile file) throws IncorrectOperationException {\n    final PsiElement elementAt = PyUtil.findNonWhitespaceAtOffset(file, editor.getCaretModel().getOffset());\n    final PyCallable callable = getCallable(elementAt);\n\n\n    final TemplateBuilder builder = TemplateBuilderFactory.getInstance().createTemplateBuilder(callable);\n\n    PyExpression returnType = annotateReturnType(project, editor.getDocument(), elementAt, false);\n\n    if (returnType != null) {\n      builder.replaceElement(returnType, returnType.getText());\n    }\n\n    if (callable instanceof PyFunction) {\n      PyFunction function = (PyFunction) callable;\n      PyParameter[] params = function.getParameterList().getParameters();\n\n      for (int i = params.length - 1; i >= 0; i--) {\n        if (params[i] instanceof PyNamedParameter) {\n          params[i] = annotateParameter(project, editor, (PyNamedParameter)params[i], false);\n        }\n      }\n\n\n      for (int i = params.length - 1; i >= 0; i--) {\n        if (params[i] instanceof PyNamedParameter) {\n          params[i] = CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(params[i]);\n          PyAnnotation annotation = ((PyNamedParameter)params[i]).getAnnotation();\n          if (annotation != null) {\n            PyExpression annotationValue = annotation.getValue();\n            builder.replaceElement(annotationValue, annotationValue.getText());\n          }\n        }\n      }\n    }\n    final Template template = ((TemplateBuilderImpl)builder).buildInlineTemplate();\n\n    int offset = callable.getTextRange().getStartOffset();\n\n    final OpenFileDescriptor descriptor = new OpenFileDescriptor(\n      project,\n      callable.getContainingFile().getVirtualFile(),\n      offset\n    );\n    final Editor targetEditor = FileEditorManager.getInstance(project).openTextEditor(descriptor, true);\n    if (targetEditor != null) {\n      targetEditor.getCaretModel().moveToOffset(offset);\n      TemplateManager.getInstance(project).startTemplate(targetEditor, template);\n    }\n  }","id":58084,"modified_method":"public void invoke(@NotNull Project project, Editor editor, PsiFile file) throws IncorrectOperationException {\n    final PsiElement elementAt = PyUtil.findNonWhitespaceAtOffset(file, editor.getCaretModel().getOffset());\n    final PyCallable callable = getCallable(elementAt);\n\n\n    final TemplateBuilder builder = TemplateBuilderFactory.getInstance().createTemplateBuilder(callable);\n\n    PyExpression returnType = annotateReturnType(project, editor.getDocument(), elementAt, false);\n\n    if (returnType != null) {\n      builder.replaceElement(returnType, returnType.getText());\n    }\n\n    if (callable instanceof PyFunction) {\n      PyFunction function = (PyFunction) callable;\n      PyParameter[] params = function.getParameterList().getParameters();\n\n      for (int i = params.length - 1; i >= 0; i--) {\n        if (params[i] instanceof PyNamedParameter) {\n          params[i] = annotateParameter(project, editor, (PyNamedParameter)params[i], false);\n        }\n      }\n\n\n      for (int i = params.length - 1; i >= 0; i--) {\n        if (params[i] instanceof PyNamedParameter) {\n          params[i] = CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(params[i]);\n          PyAnnotation annotation = ((PyNamedParameter)params[i]).getAnnotation();\n          if (annotation != null) {\n            PyExpression annotationValue = annotation.getValue();\n            if (annotationValue != null) {\n              builder.replaceElement(annotationValue, annotationValue.getText());\n            }\n          }\n        }\n      }\n    }\n    if (callable != null) {\n      final Template template = ((TemplateBuilderImpl)builder).buildInlineTemplate();\n\n      int offset = callable.getTextRange().getStartOffset();\n\n      final OpenFileDescriptor descriptor = new OpenFileDescriptor(\n        project,\n        callable.getContainingFile().getVirtualFile(),\n        offset\n      );\n      final Editor targetEditor = FileEditorManager.getInstance(project).openTextEditor(descriptor, true);\n      if (targetEditor != null) {\n        targetEditor.getCaretModel().moveToOffset(offset);\n        TemplateManager.getInstance(project).startTemplate(targetEditor, template);\n      }\n    }\n  }","commit_id":"d04be99186ceb12dee8d53eabc9c8f81935f766f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) {\n    if (!(file instanceof PyFile) || file instanceof PyDocstringFile) return false;\n\n    updateText();\n\n    final PsiElement elementAt = PyUtil.findNonWhitespaceAtOffset(file, editor.getCaretModel().getOffset());\n    if (elementAt == null) return false;\n\n    if (resolvesToFunction(elementAt, new Function<PyFunction, Boolean>() {\n      @Override\n      public Boolean apply(PyFunction input) {\n        return true;\n      }\n    })) {\n      updateText();\n      return true;\n    }\n    return false;\n  }","id":58085,"modified_method":"public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) {\n    if (!(file instanceof PyFile) || file instanceof PyDocstringFile) return false;\n\n    if (!LanguageLevel.forElement(file).isPy3K()) return false;\n\n    updateText();\n\n    final PsiElement elementAt = PyUtil.findNonWhitespaceAtOffset(file, editor.getCaretModel().getOffset());\n    if (elementAt == null) return false;\n\n    if (resolvesToFunction(elementAt, new Function<PyFunction, Boolean>() {\n      @Override\n      public Boolean apply(PyFunction input) {\n        return true;\n      }\n    })) {\n      updateText();\n      return true;\n    }\n    return false;\n  }","commit_id":"d04be99186ceb12dee8d53eabc9c8f81935f766f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void populateParams(\n\t\tString friendlyURLPath, Map<String, String[]> parameterMap,\n\t\tMap<String, Object> requestContext) {\n\n\t\tfriendlyURLPath = friendlyURLPath.substring(getMapping().length() + 1);\n\n\t\tMap<String, String> routeParameters = router.urlToParameters(\n\t\t\tfriendlyURLPath);\n\n\t\tif (routeParameters == null) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"No route could be found to match URL \" + friendlyURLPath);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tString portletId = getPortletId(routeParameters);\n\n\t\tif (portletId == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tString namespace = PortalUtil.getPortletNamespace(portletId);\n\n\t\taddParameter(namespace, parameterMap, \"p_p_id\", portletId);\n\n\t\tpopulateParams(parameterMap, namespace, routeParameters);\n\t}","id":58086,"modified_method":"public void populateParams(\n\t\tString friendlyURLPath, Map<String, String[]> parameterMap,\n\t\tMap<String, Object> requestContext) {\n\n\t\tfriendlyURLPath = friendlyURLPath.substring(getMapping().length() + 1);\n\n\t\tMap<String, String> routeParameters = new HashMap<String, String>();\n\n\t\tif (!router.urlToParameters(friendlyURLPath, routeParameters)) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"No route could be found to match URL \" + friendlyURLPath);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tString portletId = getPortletId(routeParameters);\n\n\t\tif (portletId == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tString namespace = PortalUtil.getPortletNamespace(portletId);\n\n\t\taddParameter(namespace, parameterMap, \"p_p_id\", portletId);\n\n\t\tpopulateParams(parameterMap, namespace, routeParameters);\n\t}","commit_id":"158849615f4930cbda22bf0ab2c9ec67331c4bac","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected Router newFriendlyURLRouter(Portlet portlet) throws Exception {\n\t\tif (Validator.isNull(portlet.getFriendlyURLRoutes())) {\n\t\t\treturn null;\n\t\t}\n\n\t\tRouter router = new RouterImpl();\n\n\t\tString xml = StringUtil.read(\n\t\t\t_classLoader, portlet.getFriendlyURLRoutes());\n\n\t\tDocument document = SAXReaderUtil.read(xml, true);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tfor (Element routeElement : rootElement.elements(\"route\")) {\n\t\t\tString pattern = routeElement.elementText(\"pattern\");\n\n\t\t\tRoute route = router.addRoute(pattern);\n\n\t\t\tfor (Element defaultParameterElement :\n\t\t\t\t\trouteElement.elements(\"default-parameter\")) {\n\n\t\t\t\tString name = defaultParameterElement.attributeValue(\"name\");\n\t\t\t\tString value = defaultParameterElement.getText();\n\n\t\t\t\troute.addDefaultParameter(name, value);\n\t\t\t}\n\n\t\t\tfor (Element ignoredParameterElement :\n\t\t\t\t\trouteElement.elements(\"ignored-parameter\")) {\n\n\t\t\t\tString name = ignoredParameterElement.attributeValue(\"name\");\n\n\t\t\t\troute.addIgnoredParameter(name);\n\t\t\t}\n\n\t\t\tfor (Element overriddenParameterElement :\n\t\t\t\t\trouteElement.elements(\"overridden-parameter\")) {\n\n\t\t\t\tString name = overriddenParameterElement.attributeValue(\"name\");\n\t\t\t\tString value = overriddenParameterElement.getText();\n\n\t\t\t\troute.addOverriddenParameter(name, value);\n\t\t\t}\n\t\t}\n\n\t\treturn router;\n\t}","id":58087,"modified_method":"protected Router newFriendlyURLRouter(Portlet portlet) throws Exception {\n\t\tif (Validator.isNull(portlet.getFriendlyURLRoutes())) {\n\t\t\treturn null;\n\t\t}\n\n\t\tRouter router = new RouterImpl();\n\n\t\tString xml = StringUtil.read(\n\t\t\t_classLoader, portlet.getFriendlyURLRoutes());\n\n\t\tDocument document = SAXReaderUtil.read(xml, true);\n\n\t\tElement rootElement = document.getRootElement();\n\n\t\tfor (Element routeElement : rootElement.elements(\"route\")) {\n\t\t\tString pattern = routeElement.elementText(\"pattern\");\n\n\t\t\tRoute route = router.addRoute(pattern);\n\n\t\t\tfor (Element defaultParameterElement :\n\t\t\t\t\trouteElement.elements(\"default-parameter\")) {\n\n\t\t\t\tString name = defaultParameterElement.attributeValue(\"name\");\n\t\t\t\tString value = defaultParameterElement.getText();\n\n\t\t\t\troute.addDefaultParameter(name, value);\n\t\t\t}\n\n\t\t\tfor (Element generatedParameterElement :\n\t\t\t\t\trouteElement.elements(\"generated-parameter\")) {\n\n\t\t\t\tString name = generatedParameterElement.attributeValue(\"name\");\n\t\t\t\tString value = generatedParameterElement.getText();\n\n\t\t\t\troute.addGeneratedParameter(name, value);\n\t\t\t}\n\n\t\t\tfor (Element ignoredParameterElement :\n\t\t\t\t\trouteElement.elements(\"ignored-parameter\")) {\n\n\t\t\t\tString name = ignoredParameterElement.attributeValue(\"name\");\n\n\t\t\t\troute.addIgnoredParameter(name);\n\t\t\t}\n\n\t\t\tfor (Element overriddenParameterElement :\n\t\t\t\t\trouteElement.elements(\"overridden-parameter\")) {\n\n\t\t\t\tString name = overriddenParameterElement.attributeValue(\"name\");\n\t\t\t\tString value = overriddenParameterElement.getText();\n\n\t\t\t\troute.addOverriddenParameter(name, value);\n\t\t\t}\n\t\t}\n\n\t\treturn router;\n\t}","commit_id":"158849615f4930cbda22bf0ab2c9ec67331c4bac","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public RouteImpl(String pattern) {\n\t\t_urlPattern = pattern;\n\n\t\tString regex = escapeRegex(pattern);\n\n\t\tMatcher matcher = _fragmentPattern.matcher(pattern);\n\n\t\twhile (matcher.find()) {\n\t\t\tString fragment = matcher.group();\n\n\t\t\tRoutePart routePart = new RoutePart(fragment);\n\n\t\t\t_routeParts.add(routePart);\n\n\t\t\t_urlPattern = _urlPattern.replace(\n\t\t\t\tfragment, routePart.getFragmentName());\n\n\t\t\tregex = regex.replace(\n\t\t\t\tescapeRegex(fragment), \"(\" + routePart.getPattern() + \")\");\n\t\t}\n\n\t\t_regexPattern = Pattern.compile(regex);\n\t}","id":58088,"modified_method":"public RouteImpl(String pattern) {\n\t\t_parser = new StringParser(pattern);\n\t\t_parser.setEncoder(_urlEncoder);\n\t}","commit_id":"158849615f4930cbda22bf0ab2c9ec67331c4bac","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Map<String, String> urlToParameters(String url) {\n\t\tMatcher matcher = _regexPattern.matcher(url);\n\n\t\tif (!matcher.matches()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tMap<String, String> parameters = new HashMap<String, String>(\n\t\t\t_defaultParameters);\n\n\t\tfor (int i = 1; i <= _routeParts.size(); i++) {\n\t\t\tRoutePart routePart = _routeParts.get(i - 1);\n\n\t\t\tString value = matcher.group(i);\n\n\t\t\tvalue = HttpUtil.decodeURL(value);\n\n\t\t\tparameters.put(routePart.getName(), value);\n\t\t}\n\n\t\tparameters.putAll(_overriddenParameters);\n\n\t\treturn parameters;\n\t}","id":58089,"modified_method":"public boolean urlToParameters(\n\t\t\tString url, Map<String, String> parameters) {\n\n\t\tif (!_parser.parse(url, parameters)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (Map.Entry<String, StringParser> entry :\n\t\t\t\t_generatedParameters.entrySet()) {\n\n\t\t\tString name = entry.getKey();\n\t\t\tStringParser parser = entry.getValue();\n\n\t\t\tString value = parser.build(parameters);\n\n\t\t\t// Generated parameters are not guaranteed to be created. The format\n\t\t\t// of the virtual parameters in the route pattern must match their\n\t\t\t// format in the generated parameter.\n\t\t\tif (value != null) {\n\t\t\t\tparameters.put(name, value);\n\t\t\t}\n\t\t}\n\n\t\tparameters.putAll(_defaultParameters);\n\t\tparameters.putAll(_overriddenParameters);\n\n\t\treturn true;\n\t}","commit_id":"158849615f4930cbda22bf0ab2c9ec67331c4bac","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String parametersToUrl(Map<String, ?> parameters) {\n\t\tList<String> names = new ArrayList<String>();\n\n\t\tif (!_defaultParameters.isEmpty()) {\n\t\t\tfor (Map.Entry<String, String> entry :\n\t\t\t\t\t_defaultParameters.entrySet()) {\n\n\t\t\t\tString name = entry.getKey();\n\t\t\t\tString value = entry.getValue();\n\n\t\t\t\tif (!value.equals(MapUtil.getString(parameters, name))) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tnames.add(name);\n\t\t\t}\n\t\t}\n\n\t\tString url = _urlPattern;\n\n\t\tfor (RoutePart routePart : _routeParts) {\n\t\t\tString name = routePart.getName();\n\n\t\t\tString value = MapUtil.getString(parameters, name);\n\n\t\t\tif (value == null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvalue = HttpUtil.encodeURL(value);\n\n\t\t\tif (!routePart.matches(value)) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tnames.add(name);\n\n\t\t\turl = url.replace(routePart.getFragmentName(), value);\n\t\t}\n\n\t\tfor (String name : names) {\n\t\t\tparameters.remove(name);\n\t\t}\n\n\t\tfor (String name : _ignoredParameters) {\n\t\t\tparameters.remove(name);\n\t\t}\n\n\t\treturn url;\n\t}","id":58090,"modified_method":"public String parametersToUrl(Map<String, String> parameters) {\n\t\tfor (Map.Entry<String, String> entry : _defaultParameters.entrySet()) {\n\t\t\tString name = entry.getKey();\n\t\t\tString value = entry.getValue();\n\n\t\t\tif (!value.equals(MapUtil.getString(parameters, name))) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tInheritableMap<String, String> allParameters =\n\t\t\tnew InheritableMap<String, String>();\n\n\t\tfor (Map.Entry<String, StringParser> entry :\n\t\t\t\t_generatedParameters.entrySet()) {\n\n\t\t\tString name = entry.getKey();\n\t\t\tStringParser parser = entry.getValue();\n\t\t\tString value = MapUtil.getString(parameters, name);\n\n\t\t\tif (!parser.parse(value, allParameters)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tallParameters.setParentMap(parameters);\n\n\t\tString url = _parser.build(allParameters);\n\n\t\tif (url == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (String name : _defaultParameters.keySet()) {\n\t\t\t// Virtual parameters will never be placed in the query string,\n\t\t\t// so parameters is modified directly instead of allParameters.\n\t\t\tparameters.remove(name);\n\t\t}\n\n\t\tfor (String name : _ignoredParameters) {\n\t\t\tparameters.remove(name);\n\t\t}\n\n\t\treturn url;\n\t}","commit_id":"158849615f4930cbda22bf0ab2c9ec67331c4bac","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String parametersToUrl(Map<String, ?> parameters) {\n\t\tfor (Route route : _routes) {\n\t\t\tString url = route.parametersToUrl(parameters);\n\n\t\t\tif (url != null) {\n\t\t\t\treturn url;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}","id":58091,"modified_method":"public String parametersToUrl(Map<String, String> parameters) {\n\t\tfor (Route route : _routes) {\n\t\t\tString url = route.parametersToUrl(parameters);\n\n\t\t\tif (url != null) {\n\t\t\t\treturn url;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}","commit_id":"158849615f4930cbda22bf0ab2c9ec67331c4bac","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Map<String, String> urlToParameters(String url) {\n\t\tfor (Route route : _routes) {\n\t\t\tMap<String, String> parameters = route.urlToParameters(url);\n\n\t\t\tif (parameters != null) {\n\t\t\t\treturn parameters;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}","id":58092,"modified_method":"public boolean urlToParameters(\n\t\t\tString url, Map<String, String> parameters) {\n\n\t\tfor (Route route : _routes) {\n\t\t\tif (route.urlToParameters(url, parameters)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}","commit_id":"158849615f4930cbda22bf0ab2c9ec67331c4bac","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void assertEqualsParametersToUrl(String url, String expectedUrl) {\n\t\tMap<String, String> parameters = _routerImpl.urlToParameters(url);\n\n\t\tString generatedUrl = _routerImpl.parametersToUrl(parameters);\n\n\t\tassertEquals(expectedUrl, generatedUrl);\n\t}","id":58093,"modified_method":"protected void assertEqualsParametersToUrl(String url, String expectedUrl) {\n\t\tMap<String, String> parameters = new HashMap<String, String>();\n\n\t\t_routerImpl.urlToParameters(url, parameters);\n\n\t\tString generatedUrl = _routerImpl.parametersToUrl(parameters);\n\n\t\tassertEquals(expectedUrl, generatedUrl);\n\t}","commit_id":"158849615f4930cbda22bf0ab2c9ec67331c4bac","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void assertEqualsUrlToParameters(String url, String queryString) {\n\t\tMap<String, String[]> parameters = HttpUtil.parameterMapFromString(\n\t\t\tqueryString);\n\n\t\tMap<String, String> generatedParameters = _routerImpl.urlToParameters(\n\t\t\turl);\n\n\t\tassertEquals(parameters, generatedParameters);\n\t}","id":58094,"modified_method":"protected void assertEqualsUrlToParameters(String url, String queryString) {\n\t\tMap<String, String[]> parameters = HttpUtil.parameterMapFromString(\n\t\t\tqueryString);\n\n\t\tMap<String, String> generatedParameters = new HashMap<String, String>();\n\n\t\t_routerImpl.urlToParameters(url, generatedParameters);\n\n\t\tassertEquals(parameters, generatedParameters);\n\t}","commit_id":"158849615f4930cbda22bf0ab2c9ec67331c4bac","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setUp() {\n\t\t_routerImpl = new RouterImpl();\n\n\t\tRoute route = _routerImpl.addRoute(\"GET/{controller}\");\n\n\t\troute.addDefaultParameter(\"action\", \"index\");\n\t\troute.addDefaultParameter(\"format\", \"html\");\n\t\troute.addDefaultParameter(\"method\", \"GET\");\n\n\t\troute = _routerImpl.addRoute(\"GET/{controller}.{format}\");\n\n\t\troute.addDefaultParameter(\"action\", \"index\");\n\t\troute.addDefaultParameter(\"method\", \"GET\");\n\n\t\troute = _routerImpl.addRoute(\"POST/{controller}\");\n\n\t\troute.addDefaultParameter(\"action\", \"create\");\n\t\troute.addDefaultParameter(\"format\", \"html\");\n\t\troute.addDefaultParameter(\"method\", \"POST\");\n\n\t\troute = _routerImpl.addRoute(\"POST/{controller}.{format}\");\n\n\t\troute.addDefaultParameter(\"action\", \"create\");\n\t\troute.addDefaultParameter(\"method\", \"POST\");\n\n\t\troute = _routerImpl.addRoute(\"GET/{controller}/{id:\\\\d+}\");\n\n\t\troute.addDefaultParameter(\"action\", \"view\");\n\t\troute.addDefaultParameter(\"format\", \"html\");\n\t\troute.addDefaultParameter(\"method\", \"GET\");\n\n\t\troute = _routerImpl.addRoute(\"GET/{controller}/{id:\\\\d+}.{format}\");\n\n\t\troute.addDefaultParameter(\"action\", \"view\");\n\t\troute.addDefaultParameter(\"method\", \"GET\");\n\n\t\troute = _routerImpl.addRoute(\"POST/{controller}/{id:\\\\d+}\");\n\n\t\troute.addDefaultParameter(\"action\", \"update\");\n\t\troute.addDefaultParameter(\"format\", \"html\");\n\t\troute.addDefaultParameter(\"method\", \"POST\");\n\n\t\troute = _routerImpl.addRoute(\"POST/{controller}/{id:\\\\d+}.{format}\");\n\n\t\troute.addDefaultParameter(\"action\", \"update\");\n\t\troute.addDefaultParameter(\"method\", \"POST\");\n\n\t\troute = _routerImpl.addRoute(\n\t\t\t\"{method}/{controller}/{id:\\\\d+}/{action}\");\n\n\t\troute.addDefaultParameter(\"format\", \"html\");\n\n\t\troute = _routerImpl.addRoute(\n\t\t\t\"{method}/{controller}/{id:\\\\d+}/{action}.{format}\");\n\n\t\troute = _routerImpl.addRoute(\"{method}/{controller}/{action}\");\n\n\t\troute.addDefaultParameter(\"format\", \"html\");\n\n\t\troute = _routerImpl.addRoute(\"{method}/{controller}/{action}.{format}\");\n\t}","id":58095,"modified_method":"public void setUp() {\n\t\t_routerImpl = new RouterImpl();\n\n\t\tRoute route = _routerImpl.addRoute(\"instance/{instanceId}/{topLink}\");\n\n\t\troute.addGeneratedParameter(\"p_p_id\", \"15_INSTANCE_{instanceId}\");\n\n\t\troute = _routerImpl.addRoute(\"GET/{controller}\");\n\n\t\troute.addDefaultParameter(\"action\", \"index\");\n\t\troute.addDefaultParameter(\"format\", \"html\");\n\t\troute.addDefaultParameter(\"method\", \"GET\");\n\n\t\troute = _routerImpl.addRoute(\"GET/{controller}.{format}\");\n\n\t\troute.addDefaultParameter(\"action\", \"index\");\n\t\troute.addDefaultParameter(\"method\", \"GET\");\n\n\t\troute = _routerImpl.addRoute(\"POST/{controller}\");\n\n\t\troute.addDefaultParameter(\"action\", \"create\");\n\t\troute.addDefaultParameter(\"format\", \"html\");\n\t\troute.addDefaultParameter(\"method\", \"POST\");\n\n\t\troute = _routerImpl.addRoute(\"POST/{controller}.{format}\");\n\n\t\troute.addDefaultParameter(\"action\", \"create\");\n\t\troute.addDefaultParameter(\"method\", \"POST\");\n\n\t\troute = _routerImpl.addRoute(\"GET/{controller}/{id:\\\\d+}\");\n\n\t\troute.addDefaultParameter(\"action\", \"view\");\n\t\troute.addDefaultParameter(\"format\", \"html\");\n\t\troute.addDefaultParameter(\"method\", \"GET\");\n\n\t\troute = _routerImpl.addRoute(\"GET/{controller}/{id:\\\\d+}.{format}\");\n\n\t\troute.addDefaultParameter(\"action\", \"view\");\n\t\troute.addDefaultParameter(\"method\", \"GET\");\n\n\t\troute = _routerImpl.addRoute(\"POST/{controller}/{id:\\\\d+}\");\n\n\t\troute.addDefaultParameter(\"action\", \"update\");\n\t\troute.addDefaultParameter(\"format\", \"html\");\n\t\troute.addDefaultParameter(\"method\", \"POST\");\n\n\t\troute = _routerImpl.addRoute(\"POST/{controller}/{id:\\\\d+}.{format}\");\n\n\t\troute.addDefaultParameter(\"action\", \"update\");\n\t\troute.addDefaultParameter(\"method\", \"POST\");\n\n\t\troute = _routerImpl.addRoute(\n\t\t\t\"{method}/{controller}/{id:\\\\d+}/{action}\");\n\n\t\troute.addDefaultParameter(\"format\", \"html\");\n\n\t\troute = _routerImpl.addRoute(\n\t\t\t\"{method}/{controller}/{id:\\\\d+}/{action}.{format}\");\n\n\t\troute = _routerImpl.addRoute(\"{method}/{controller}/{action}\");\n\n\t\troute.addDefaultParameter(\"format\", \"html\");\n\n\t\troute = _routerImpl.addRoute(\"{method}/{controller}/{action}.{format}\");\n\t}","commit_id":"158849615f4930cbda22bf0ab2c9ec67331c4bac","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void populateParams(\n\t\tString friendlyURLPath, Map<String, String[]> parameterMap,\n\t\tMap<String, Object> requestContext) {\n\n\t\t// Determine lifecycle from request method\n\n\t\tHttpServletRequest request = (HttpServletRequest)requestContext.get(\n\t\t\t\"request\");\n\n\t\tString method = request.getMethod();\n\n\t\tfriendlyURLPath = method +\n\t\t\tfriendlyURLPath.substring(getMapping().length() + 1);\n\n\t\tMap<String, String> routeParameters = router.urlToParameters(\n\t\t\tfriendlyURLPath);\n\n\t\tif (routeParameters == null) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"No route could be found to match URL \" + friendlyURLPath);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tString portletId = getPortletId(routeParameters);\n\n\t\tif (portletId == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tString namespace = PortalUtil.getPortletNamespace(portletId);\n\n\t\taddParameter(namespace, parameterMap, \"p_p_id\", portletId);\n\t\taddParameter(parameterMap, \"p_p_lifecycle\", getLifecycle(method));\n\n\t\tpopulateParams(parameterMap, namespace, routeParameters);\n\t}","id":58096,"modified_method":"public void populateParams(\n\t\tString friendlyURLPath, Map<String, String[]> parameterMap,\n\t\tMap<String, Object> requestContext) {\n\n\t\t// Determine lifecycle from request method\n\n\t\tHttpServletRequest request = (HttpServletRequest)requestContext.get(\n\t\t\t\"request\");\n\n\t\tString method = request.getMethod();\n\n\t\tfriendlyURLPath = method +\n\t\t\tfriendlyURLPath.substring(getMapping().length() + 1);\n\n\t\tMap<String, String> routeParameters = new HashMap<String, String>();\n\n\t\tif (!router.urlToParameters(friendlyURLPath, routeParameters)) {\n\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t_log.warn(\n\t\t\t\t\t\"No route could be found to match URL \" + friendlyURLPath);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tString portletId = getPortletId(routeParameters);\n\n\t\tif (portletId == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tString namespace = PortalUtil.getPortletNamespace(portletId);\n\n\t\taddParameter(namespace, parameterMap, \"p_p_id\", portletId);\n\t\taddParameter(parameterMap, \"p_p_lifecycle\", getLifecycle(method));\n\n\t\tpopulateParams(parameterMap, namespace, routeParameters);\n\t}","commit_id":"764d2407687c6014aac6669e5dcefeb4582a21f4","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void init(PortletConfig portletConfig) throws PortletException {\n\t\tLiferayPortletConfig liferayPortletConfig =\n\t\t\t(LiferayPortletConfig)portletConfig;\n\n\t\tPortlet portlet = liferayPortletConfig.getPortlet();\n\n\t\tFriendlyURLMapper friendlyURLMapper =\n\t\t\tportlet.getFriendlyURLMapperInstance();\n\n\t\tRouter router = friendlyURLMapper.getRouter();\n\n\t\t_defaultRouteParameters = router.urlToParameters(\"GET/\");\n\t\t\n\t\tsuper.init(portletConfig);\n\t}","id":58097,"modified_method":"public void init(PortletConfig portletConfig) throws PortletException {\n\t\tLiferayPortletConfig liferayPortletConfig =\n\t\t\t(LiferayPortletConfig)portletConfig;\n\n\t\tPortlet portlet = liferayPortletConfig.getPortlet();\n\n\t\tFriendlyURLMapper friendlyURLMapper =\n\t\t\tportlet.getFriendlyURLMapperInstance();\n\n\t\tRouter router = friendlyURLMapper.getRouter();\n\n\t\t_defaultRouteParameters = new HashMap<String, String>();\n\t\t\n\t\trouter.urlToParameters(\"GET/\", _defaultRouteParameters);\n\t\t\n\t\tsuper.init(portletConfig);\n\t}","commit_id":"764d2407687c6014aac6669e5dcefeb4582a21f4","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n        public void valueChanged(ListSelectionEvent e) {\n            DefaultListSelectionModel selModel = (DefaultListSelectionModel) e.getSource();\n            if (!selModel.getValueIsAdjusting()) {\n                final int minIndex = selModel.getMinSelectionIndex();\n                final int maxIndex = selModel.getMaxSelectionIndex();\n                int selected = -1;\n                for (int i = minIndex; i <= maxIndex; i++) {\n                    if (selModel.isSelectedIndex(i)) {\n                        selected = i;\n                        break;\n                    }\n                }\n                if (selected != -1) {\n                    setVisited(selected);\n                    //check if has details\n                    IngestMessageGroup m = getMessageGroup(selected);\n                    String details = m.getDetails();\n                    if (details != null && !details.equals(\"\")) {\n                        mainPanel.showDetails(selected);\n                    }\n                }\n\n\n            }\n        }","id":58098,"modified_method":"@Override\n        public void valueChanged(ListSelectionEvent e) {\n            ListSelectionModel selModel = (ListSelectionModel) e.getSource();\n            if (selModel.isSelectionEmpty() || selModel.getValueIsAdjusting())\n                return;\n            \n                final int minIndex = selModel.getMinSelectionIndex();\n                final int maxIndex = selModel.getMaxSelectionIndex();\n                int selected = -1;\n                for (int i = minIndex; i <= maxIndex; i++) {\n                    if (selModel.isSelectedIndex(i)) {\n                        selected = i;\n                        break;\n                    }\n                }\n                if (selected != -1) {\n                    setVisited(selected);\n                    //check if has details\n                    IngestMessageGroup m = getMessageGroup(selected);\n                    String details = m.getDetails();\n                    if (details != null && !details.equals(\"\")) {\n                        mainPanel.showDetails(selected);\n                    }\n                }\n            \n        }","commit_id":"6ea2efcc50db76440f0d5aff84c8549f82c26093","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Nullable\n  @Override\n  public Rectangle onMouseMove(@NotNull MouseEvent event) {\n    Rectangle bounds = getButtonScreenBounds();\n    if (bounds != null) {\n      boolean selected = bounds.contains(event.getLocationOnScreen());\n      boolean wasSelected = myEditButton.getPresentation().getClientProperty(Toggleable.SELECTED_PROPERTY) == Boolean.TRUE;\n      myEditButton.getPresentation().putClientProperty(Toggleable.SELECTED_PROPERTY, selected);\n      if (selected ^ wasSelected) {\n        return myScreenBounds;\n      }\n    }\n\n    return myDelegate.onMouseMove(event);\n  }","id":58099,"modified_method":"@Nullable\n  @Override\n  public Rectangle onMouseMove(@NotNull MouseEvent event) {\n    myEditButton.setVisible(myControl.getSelectedModelRows().size() <= 1);\n    Rectangle bounds = getButtonScreenBounds();\n    if (!myBeingEdited && bounds != null) {\n      boolean selected = bounds.contains(event.getLocationOnScreen());\n      boolean wasSelected = myEditButton.getPresentation().getClientProperty(Toggleable.SELECTED_PROPERTY) == Boolean.TRUE;\n      myEditButton.getPresentation().putClientProperty(Toggleable.SELECTED_PROPERTY, selected);\n      if (selected ^ wasSelected) {\n        return myScreenBounds;\n      }\n    }\n\n    return myDelegate.onMouseMove(event);\n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public Rectangle onMouseEntered(@NotNull MouseEvent e) {\n    setBackground(UIUtil.getDecoratedRowColor());\n    myEditButton.setVisible(true);\n    return myDelegate.onMouseEntered(e);\n  }","id":58100,"modified_method":"@Override\n  public Rectangle onMouseEntered(@NotNull MouseEvent e) {\n    setBackground(UIUtil.getDecoratedRowColor());\n    myEditButton.setVisible(myControl.getSelectedModelRows().size() <= 1);\n    return myDelegate.onMouseEntered(e);\n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @Override\n  public Rectangle onMouseExited() {\n    setBackground(UIUtil.getListBackground());\n    myEditButton.setVisible(false);\n    return myDelegate.onMouseExited(); \n  }","id":58101,"modified_method":"@Nullable\n  @Override\n  public Rectangle onMouseExited() {\n    setBackground(UIUtil.getListBackground());\n    if (!myBeingEdited) {\n      myEditButton.setVisible(false);\n    }\n    return myDelegate.onMouseExited(); \n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ArrangementListRowDecorator(@NotNull ArrangementMatchConditionComponent delegate) {\n    myDelegate = delegate;\n\n    AnAction action = ActionManager.getInstance().getAction(\"Arrangement.Rule.Edit\");\n    Presentation presentation = action.getTemplatePresentation().clone();\n    Icon editIcon = presentation.getIcon();\n    Dimension buttonSize = new Dimension(editIcon.getIconWidth(), editIcon.getIconHeight());\n    myEditButton = new MyActionButton(action, presentation, ArrangementConstants.MATCHING_RULES_CONTROL_PLACE, buttonSize);\n    myEditButton.setVisible(false);\n\n    FontMetrics metrics = getFontMetrics(getFont());\n    int maxWidth = 0;\n    for (int i = 0; i <= 99; i++) {\n      maxWidth = Math.max(metrics.stringWidth(String.valueOf(i)), maxWidth);\n    }\n    int height = metrics.getHeight() - metrics.getDescent() - metrics.getLeading();\n    int diameter = Math.max(maxWidth, height) * 5 / 3;\n    myRowIndexControl = new ArrangementRuleIndexControl(diameter, height);\n\n    setOpaque(true);\n    init();\n  }","id":58102,"modified_method":"public ArrangementListRowDecorator(@NotNull ArrangementMatchConditionComponent delegate,\n                                     @NotNull ArrangementMatchingRulesControl control)\n  {\n    myDelegate = delegate;\n    myControl = control;\n\n    AnAction action = ActionManager.getInstance().getAction(\"Arrangement.Rule.Edit\");\n    Presentation presentation = action.getTemplatePresentation().clone();\n    Icon editIcon = presentation.getIcon();\n    Dimension buttonSize = new Dimension(editIcon.getIconWidth(), editIcon.getIconHeight());\n    myEditButton = new MyActionButton(action, presentation, ArrangementConstants.MATCHING_RULES_CONTROL_PLACE, buttonSize);\n    myEditButton.setVisible(false);\n\n    FontMetrics metrics = getFontMetrics(getFont());\n    int maxWidth = 0;\n    for (int i = 0; i <= 99; i++) {\n      maxWidth = Math.max(metrics.stringWidth(String.valueOf(i)), maxWidth);\n    }\n    int height = metrics.getHeight() - metrics.getDescent() - metrics.getLeading();\n    int diameter = Math.max(maxWidth, height) * 5 / 3;\n    myRowIndexControl = new ArrangementRuleIndexControl(diameter, height);\n\n    setOpaque(true);\n    init();\n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void onMouseRelease(@NotNull MouseEvent event) {\n    myDelegate.onMouseRelease(event); \n  }","id":58103,"modified_method":"@Override\n  public void onMouseRelease(@NotNull MouseEvent event) {\n    myEditButton.setVisible(myControl.getSelectedModelRows().size() <= 1);\n    Rectangle bounds = getButtonScreenBounds();\n    if (bounds != null && bounds.contains(event.getLocationOnScreen())) {\n      if (myBeingEdited) {\n        myControl.hideEditor();\n        myBeingEdited = false;\n      }\n      else {\n        int row = myControl.getRowByRenderer(this);\n        if (row >= 0) {\n          myControl.showEditor(row);\n          myBeingEdited = true;\n        }\n      }\n      event.consume();\n      return;\n    }\n    myDelegate.onMouseRelease(event); \n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void onSelectionChange(@NotNull ListSelectionEvent e) {\n    if (!mySkipSelectionChange && !e.getValueIsAdjusting()) {\n      refreshEditor();\n    }\n  }","id":58104,"modified_method":"private void onSelectionChange(@NotNull ListSelectionEvent e) {\n    if (mySkipSelectionChange || e.getValueIsAdjusting()) {\n      return;\n    }\n    refreshEditor();\n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void onTableChange(@NotNull TableModelEvent e) {\n    final int signum;\n    switch (e.getType()) {\n      case TableModelEvent.INSERT:\n        signum = 1;\n        break;\n      case TableModelEvent.DELETE:\n        signum = -1;\n        for (int i = e.getLastRow(); i >= e.getFirstRow(); i--) {\n          myComponents.remove(i);\n        }\n        break;\n      default:\n        return;\n    }\n    int shift = Math.abs(e.getFirstRow() - e.getLastRow() + 1) * signum;\n    myComponents.shiftKeys(e.getFirstRow(), shift);\n  }","id":58105,"modified_method":"private void onTableChange(@NotNull TableModelEvent e) {\n    final int signum;\n    switch (e.getType()) {\n      case TableModelEvent.INSERT:\n        signum = 1;\n        break;\n      case TableModelEvent.DELETE:\n        signum = -1;\n        for (int i = e.getLastRow(); i >= e.getFirstRow(); i--) {\n          myComponents.remove(i);\n        }\n        break;\n      default:\n        return;\n    }\n    int shift = Math.abs(e.getFirstRow() - e.getLastRow() + 1) * signum;\n    myComponents.shiftKeys(e.getFirstRow(), shift);\n    if (myRowUnderMouse >= e.getFirstRow()) {\n      myRowUnderMouse = -1;\n    }\n    if (getModel().getSize() > 0) {\n      repaintRows(0, getModel().getSize() - 1, false);\n    }\n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void refreshEditor() {\n    ListSelectionModel selectionModel = getSelectionModel();\n    if (selectionModel.isSelectionEmpty()) {\n      hideEditor();\n      return;\n    }\n\n    int selectedRow = selectionModel.getMinSelectionIndex();\n    if (selectedRow != selectionModel.getMaxSelectionIndex()) {\n      // More than one row is selected.\n      hideEditor();\n      return;\n    }\n\n    if (myEditorRow >= 0) {\n      hideEditor();\n    }\n\n    // There is a possible case that there was an active editor in a row before the selected.\n    ArrangementListRowDecorator toEdit = myComponents.get(selectedRow);\n    if (toEdit != null) {\n      showEditor(selectedRow);\n    }\n  }","id":58106,"modified_method":"public void refreshEditor() {\n    if (myEditorRow < 0) {\n      return;\n    }\n\n    ListSelectionModel selectionModel = getSelectionModel();\n    if (selectionModel.isSelectionEmpty()) {\n      hideEditor();\n      return;\n    }\n\n    int selectedRow = selectionModel.getMinSelectionIndex();\n    if (selectedRow != selectionModel.getMaxSelectionIndex()) {\n      // More than one row is selected.\n      hideEditor();\n      return;\n    }\n\n    if (selectedRow != myEditorRow && selectedRow != myEditorRow - 1) {\n      hideEditor();\n    }\n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void showEditor(int selectedRow) {\n    myEditorRow = selectedRow + 1;\n    ArrangementEditorComponent editor = new ArrangementEditorComponent(this, myEditorRow, myEditor);\n    Container parent = getParent();\n    int width = getBounds().width;\n    if (parent instanceof JViewport) {\n      width -=((JScrollPane)parent.getParent()).getVerticalScrollBar().getWidth();\n    }\n    editor.applyAvailableWidth(width);\n    myEditor.updateState(selectedRow);\n    myComponents.shiftKeys(myEditorRow, 1);\n    mySkipSelectionChange = true;\n    try {\n      getModel().insertRow(myEditorRow, new Object[]{editor});\n    }\n    finally {\n      mySkipSelectionChange = false;\n    }\n    \n    Rectangle bounds = getRowsBounds(selectedRow, myEditorRow);\n    if (bounds != null) {\n      myRepresentationCallback.ensureVisible(bounds);\n    }\n\n    // We can't just subscribe to the model modification events and update cached renderers automatically because we need to use\n    // the cached renderer on atom condition removal (via click on 'close' button). The model is modified immediately then but\n    // corresponding cached renderer is used for animation.\n    editor.expand();\n    repaintRows(selectedRow, getModel().getRowCount() - 1, false);\n    editCellAt(myEditorRow, 0);\n  }","id":58107,"modified_method":"public void showEditor(int rowToEdit) {\n    myEditorRow = rowToEdit + 1;\n    ArrangementEditorComponent editor = new ArrangementEditorComponent(this, myEditorRow, myEditor);\n    Container parent = getParent();\n    int width = getBounds().width;\n    if (parent instanceof JViewport) {\n      width -=((JScrollPane)parent.getParent()).getVerticalScrollBar().getWidth();\n    }\n    editor.applyAvailableWidth(width);\n    myEditor.updateState(rowToEdit);\n    myComponents.shiftKeys(myEditorRow, 1);\n    mySkipSelectionChange = true;\n    try {\n      getModel().insertRow(myEditorRow, new Object[]{editor});\n    }\n    finally {\n      mySkipSelectionChange = false;\n    }\n    \n    Rectangle bounds = getRowsBounds(rowToEdit, myEditorRow);\n    if (bounds != null) {\n      myRepresentationCallback.ensureVisible(bounds);\n    }\n\n    // We can't just subscribe to the model modification events and update cached renderers automatically because we need to use\n    // the cached renderer on atom condition removal (via click on 'close' button). The model is modified immediately then but\n    // corresponding cached renderer is used for animation.\n    editor.expand();\n    repaintRows(rowToEdit, getModel().getRowCount() - 1, false);\n    editCellAt(myEditorRow, 0);\n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n      if (value instanceof ArrangementRepresentationAware) {\n        return ((ArrangementRepresentationAware)value).getComponent();\n      }\n      ArrangementListRowDecorator component = myComponents.get(row);\n      if (component == null) {\n        if (!(value instanceof StdArrangementMatchRule)) {\n          return EMPTY_RENDERER;\n        }\n        StdArrangementMatchRule rule = (StdArrangementMatchRule)value;\n        component = new ArrangementListRowDecorator(myFactory.getComponent(rule.getMatcher().getCondition(), rule, true));\n        myComponents.set(row, component);\n        if (myRowUnderMouse == row) {\n          component.setBackground(UIUtil.getDecoratedRowColor());\n        }\n        else {\n          component.setBackground(UIUtil.getListBackground());\n        }\n        setRowHeight(row, component.getPreferredSize().height);\n      }\n      component.setRowIndex((myEditorRow >= 0 && row > myEditorRow) ? row : row + 1);\n      component.setSelected(getSelectionModel().isSelectedIndex(row) || (myEditorRow >= 0 && row == myEditorRow - 1));\n      return component.getUiComponent();\n    }","id":58108,"modified_method":"@Override\n    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {\n      if (value instanceof ArrangementRepresentationAware) {\n        return ((ArrangementRepresentationAware)value).getComponent();\n      }\n      ArrangementListRowDecorator component = myComponents.get(row);\n      if (component == null) {\n        if (!(value instanceof StdArrangementMatchRule)) {\n          return EMPTY_RENDERER;\n        }\n        StdArrangementMatchRule rule = (StdArrangementMatchRule)value;\n        ArrangementMatchConditionComponent ruleComponent = myFactory.getComponent(rule.getMatcher().getCondition(), rule, true);\n        component = new ArrangementListRowDecorator(ruleComponent, ArrangementMatchingRulesControl.this);\n        myComponents.set(row, component);\n      }\n      \n      component.setUnderMouse(myRowUnderMouse == row);\n      component.setRowIndex((myEditorRow >= 0 && row > myEditorRow) ? row : row + 1);\n      component.setSelected(getSelectionModel().isSelectedIndex(row) || (myEditorRow >= 0 && row == myEditorRow - 1));\n      component.setBeingEdited(myEditorRow >= 0 && myEditorRow == row + 1);\n      return component.getUiComponent();\n    }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void hideEditor() {\n    if (myEditorRow < 0) {\n      return;\n    }\n    repaintRows(0, getModel().getSize() - 1, false); // Update 'selected' status\n    myComponents.shiftKeys(myEditorRow, - 1);\n    mySkipSelectionChange = true;\n    try {\n      getModel().removeRow(myEditorRow);\n      ListSelectionModel selectionModel = getSelectionModel();\n      if (selectionModel.getMinSelectionIndex() == selectionModel.getMaxSelectionIndex()) {\n        // One row is selected and editor for it is collapsed.\n        selectionModel.clearSelection();\n      }\n    }\n    finally {\n      mySkipSelectionChange = false;\n    }\n    myEditorRow = -1;\n  }","id":58109,"modified_method":"public void hideEditor() {\n    if (myEditorRow < 0) {\n      return;\n    }\n    mySkipSelectionChange = true;\n    try {\n      getModel().removeRow(myEditorRow);\n    }\n    finally {\n      mySkipSelectionChange = false;\n    }\n    myEditorRow = -1;\n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ArrangementMatchingRulesPanel(@NotNull ArrangementNodeDisplayManager displayManager,\n                                       @NotNull ArrangementColorsProvider colorsProvider,\n                                       @NotNull ArrangementStandardSettingsAware settingsFilter)\n  {\n    super(new GridBagLayout());\n    TitleWithToolbar top = new TitleWithToolbar(\n      ApplicationBundle.message(\"arrangement.settings.section.match\"),\n      ArrangementConstants.ACTION_GROUP_RULE_EDITOR_TOOLBAR,\n      ArrangementConstants.MATCHING_RULES_CONTROL_TOOLBAR_PLACE\n    );\n\n    JBScrollPane scrollPane = new JBScrollPane();\n    final JViewport viewport = scrollPane.getViewport();\n    ArrangementMatchingRulesControl.RepresentationCallback callback = new ArrangementMatchingRulesControl.RepresentationCallback() {\n      @Override\n      public void ensureVisible(@NotNull Rectangle r) {\n        Rectangle visibleRect = viewport.getViewRect();\n        if (r.y <= visibleRect.y) {\n          return;\n        }\n\n        int excessiveHeight = r.y + r.height - (visibleRect.y + visibleRect.height);\n        if (excessiveHeight <= 0) {\n          return;\n        }\n\n        int verticalShift = Math.min(r.y - visibleRect.y, excessiveHeight);\n        if (verticalShift > 0) {\n          viewport.setViewPosition(new Point(visibleRect.x, visibleRect.y + verticalShift));\n        }\n      }\n    };\n    myControl = new ArrangementMatchingRulesControl(displayManager, colorsProvider, settingsFilter, callback);\n    scrollPane.setViewportView(myControl);\n\n    add(top, new GridBag().coverLine().fillCellHorizontally().weightx(1));\n    add(scrollPane, new GridBag().fillCell().weightx(1).weighty(1));\n  }","id":58110,"modified_method":"public ArrangementMatchingRulesPanel(@NotNull ArrangementNodeDisplayManager displayManager,\n                                       @NotNull ArrangementColorsProvider colorsProvider,\n                                       @NotNull ArrangementStandardSettingsAware settingsFilter)\n  {\n    super(new GridBagLayout());\n    TitleWithToolbar top = new TitleWithToolbar(\n      ApplicationBundle.message(\"arrangement.settings.section.match\"),\n      ArrangementConstants.ACTION_GROUP_MATCHING_RULES_CONTROL_TOOLBAR,\n      ArrangementConstants.MATCHING_RULES_CONTROL_TOOLBAR_PLACE\n    );\n\n    JBScrollPane scrollPane = new JBScrollPane();\n    final JViewport viewport = scrollPane.getViewport();\n    ArrangementMatchingRulesControl.RepresentationCallback callback = new ArrangementMatchingRulesControl.RepresentationCallback() {\n      @Override\n      public void ensureVisible(@NotNull Rectangle r) {\n        Rectangle visibleRect = viewport.getViewRect();\n        if (r.y <= visibleRect.y) {\n          return;\n        }\n\n        int excessiveHeight = r.y + r.height - (visibleRect.y + visibleRect.height);\n        if (excessiveHeight <= 0) {\n          return;\n        }\n\n        int verticalShift = Math.min(r.y - visibleRect.y, excessiveHeight);\n        if (verticalShift > 0) {\n          viewport.setViewPosition(new Point(visibleRect.x, visibleRect.y + verticalShift));\n        }\n      }\n    };\n    myControl = new ArrangementMatchingRulesControl(displayManager, colorsProvider, settingsFilter, callback);\n    scrollPane.setViewportView(myControl);\n\n    add(top, new GridBag().coverLine().fillCellHorizontally().weightx(1));\n    add(scrollPane, new GridBag().fillCell().weightx(1).weighty(1));\n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void set(int key, @NotNull V value) {\n    if (key >= myData.length) {\n      int newCapacity = myData.length;\n      while (newCapacity <= key) {\n        newCapacity <<= 1;\n      }\n      myData = Arrays.copyOf(myData, newCapacity);\n    }\n    myData[key] = value;\n    myMaxUsed = Math.max(myMaxUsed, key);\n  }","id":58111,"modified_method":"public void set(int key, @NotNull V value) {\n    if (key >= myData.length) {\n      int newCapacity = myData.length;\n      while (newCapacity <= key) {\n        newCapacity <<= 1;\n      }\n      myData = Arrays.copyOf(myData, newCapacity);\n    }\n    if (myData[key] == null) {\n      mySize++;\n    }\n    myData[key] = value;\n    myMaxUsed = Math.max(myMaxUsed, key);\n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void remove(int key) {\n    if (key < 0 || key >= myData.length) {\n      return;\n    }\n    myData[key] = null;\n    if (key == myMaxUsed) {\n      for (int i = myMaxUsed; i >= 0; i--) {\n        if (myData[i] != null) {\n          myMaxUsed = i;\n          return;\n        }\n      }\n      myMaxUsed = -1;\n    }\n  }","id":58112,"modified_method":"public void remove(int key) {\n    if (key < 0 || key >= myData.length) {\n      return;\n    }\n    if (myData[key] != null) {\n      mySize--;\n    }\n    myData[key] = null;\n    if (key == myMaxUsed) {\n      for (int i = myMaxUsed; i >= 0; i--) {\n        if (myData[i] != null) {\n          myMaxUsed = i;\n          return;\n        }\n      }\n      myMaxUsed = -1;\n    }\n    \n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void clear() {\n    myData = new Object[myData.length];\n    myMaxUsed = -1;\n  }","id":58113,"modified_method":"public void clear() {\n    myData = new Object[myData.length];\n    myMaxUsed = -1;\n    mySize = 0;\n  }","commit_id":"5fc80980399f1e0fe669042f0532686cd81809b1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public MapSlider(MapView mv) {\n        super(0, 20);\n        setOpaque(false);\n        this.mv = mv;\n        addMouseListener(new MouseAdapter(){\n            @Override public void mousePressed(MouseEvent e) {\n                clicked = true;\n            }\n            @Override public void mouseReleased(MouseEvent e) {\n                clicked = false;\n            }\n        });\n        mv.addPropertyChangeListener(\"scale\", this);\n        addChangeListener(this);\n    }","id":58114,"modified_method":"public MapSlider(MapView mv) {\n        super(35, 150);\n        setOpaque(false);\n        this.mv = mv;\n        mv.addPropertyChangeListener(\"scale\", this);\n        addChangeListener(this);\n    }","commit_id":"e6ef2fbfa1d89582de90980c67666f8188ebfdba","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void propertyChange(PropertyChangeEvent evt) {\n        if (!getModel().getValueIsAdjusting())\n            setValue(this.mv.zoom());\n    }","id":58115,"modified_method":"public void propertyChange(PropertyChangeEvent evt) {\n        if (getModel().getValueIsAdjusting()) return;\n        \n        double sizex = this.mv.scale * this.mv.getWidth();\n        double sizey = this.mv.scale * this.mv.getHeight();\n        for (int zoom = 0; zoom <= 150; zoom++, sizex *= 1.1, sizey *= 1.1) {\n            if (sizex > this.mv.world.east() || sizey > this.mv.world.north()) {\n                preventChange=true;\n                setValue(zoom);\n                preventChange=false;\n                break;\n            }\n        }\n    }","commit_id":"e6ef2fbfa1d89582de90980c67666f8188ebfdba","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void stateChanged(ChangeEvent e) {\n        if (!clicked)\n            return;\n        EastNorth pos = MapView.world;\n        for (int zoom = 0; zoom < getValue(); ++zoom)\n            pos = new EastNorth(pos.east()/2, pos.north()/2);\n        if (this.mv.getWidth() < this.mv.getHeight())\n            this.mv.zoomTo(this.mv.center, pos.east()*2/(this.mv.getWidth()-20));\n        else\n            this.mv.zoomTo(this.mv.center, pos.north()*2/(this.mv.getHeight()-20));\n    }","id":58116,"modified_method":"public void stateChanged(ChangeEvent e) {\n        if (preventChange) return;\n        EastNorth pos = MapView.world;\n        for (int zoom = 0; zoom < getValue(); zoom++)\n            pos = new EastNorth(pos.east()/1.1, pos.north()/1.1);\n        if (this.mv.getWidth() < this.mv.getHeight())\n            this.mv.zoomTo(this.mv.center, pos.east()/(this.mv.getWidth()-20));\n        else\n            this.mv.zoomTo(this.mv.center, pos.north()/(this.mv.getHeight()-20));\n    }","commit_id":"e6ef2fbfa1d89582de90980c67666f8188ebfdba","url":"https://github.com/openstreetmap/josm"},{"original_method":"public T storeTermVectors(boolean termVectors) {\n            this.fieldType.setStoreTermVectors(termVectors);\n            return builder;\n        }","id":58117,"modified_method":"public T storeTermVectors(boolean termVectors) {\n            if (termVectors) {\n                this.fieldType.setStoreTermVectors(termVectors);\n            } // don't set it to false, it is default and might be flipped by a more specific option\n            return builder;\n        }","commit_id":"79f676e45ec7205dbfc06d50814672bb3fd40d8c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public T storeTermVectorOffsets(boolean termVectorOffsets) {\n            this.fieldType.setStoreTermVectors(termVectorOffsets);\n            this.fieldType.setStoreTermVectorOffsets(termVectorOffsets);\n            return builder;\n        }","id":58118,"modified_method":"public T storeTermVectorOffsets(boolean termVectorOffsets) {\n            if (termVectorOffsets) {\n                this.fieldType.setStoreTermVectors(termVectorOffsets);\n            }\n            this.fieldType.setStoreTermVectorOffsets(termVectorOffsets);\n            return builder;\n        }","commit_id":"79f676e45ec7205dbfc06d50814672bb3fd40d8c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public T storeTermVectorPayloads(boolean termVectorPayloads) {\n            this.fieldType.setStoreTermVectors(termVectorPayloads);\n            this.fieldType.setStoreTermVectorPayloads(termVectorPayloads);\n            return builder;\n        }","id":58119,"modified_method":"public T storeTermVectorPayloads(boolean termVectorPayloads) {\n            if (termVectorPayloads) {\n                this.fieldType.setStoreTermVectors(termVectorPayloads);\n            }\n            this.fieldType.setStoreTermVectorPayloads(termVectorPayloads);\n            return builder;\n        }","commit_id":"79f676e45ec7205dbfc06d50814672bb3fd40d8c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public T storeTermVectorPositions(boolean termVectorPositions) {\n            this.fieldType.setStoreTermVectors(termVectorPositions);\n            this.fieldType.setStoreTermVectorPositions(termVectorPositions);\n            return builder;\n        }","id":58120,"modified_method":"public T storeTermVectorPositions(boolean termVectorPositions) {\n            if (termVectorPositions) {\n                this.fieldType.setStoreTermVectors(termVectorPositions);\n            }\n            this.fieldType.setStoreTermVectorPositions(termVectorPositions);\n            return builder;\n        }","commit_id":"79f676e45ec7205dbfc06d50814672bb3fd40d8c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n\t * Decodes PageParameters object from the provided url fragment\n\t * \n\t * @param urlFragment\n\t * @return PageParameters object created from the url fragment\n\t */\n\tprotected PageParameters decodePageParameters(String urlFragment)\n\t{\n\t\t// Hack off any leading slash\n\t\tif (urlFragment.startsWith(\"/\"))\n\t\t{\n\t\t\turlFragment = urlFragment.substring(1);\n\t\t}\n\n\t\tif (urlFragment.length() == 0)\n\t\t{\n\t\t\treturn new PageParameters();\n\t\t}\n\n\t\t// Split into pairs\n\t\tfinal String[] pairs = urlFragment.split(\"/\");\n\n\t\t// If we don't have an even number of pairs\n\t\tif (pairs.length % 2 != 0)\n\t\t{\n\t\t\t// give up\n\t\t\tthrow new IllegalStateException(\"URL fragment has unmatched key/value pair: \"\n\t\t\t\t\t+ urlFragment);\n\t\t}\n\n\t\t// Loop through pairs\n\t\tPageParameters parameters = new PageParameters();\n\t\tfor (int i = 0; i < pairs.length; i += 2)\n\t\t{\n\t\t\tparameters.put(pairs[i], pairs[i + 1]);\n\t\t}\n\t\treturn parameters;\n\t}","id":58121,"modified_method":"/**\n\t * Decodes PageParameters object from the provided url fragment\n\t * \n\t * @param urlFragment\n\t * @return PageParameters object created from the url fragment\n\t */\n\tprotected PageParameters decodePageParameters(String urlFragment)\n\t{\n\t\t// Hack off any leading slash\n\t\tif (urlFragment.startsWith(\"/\"))\n\t\t{\n\t\t\turlFragment = urlFragment.substring(1);\n\t\t}\n\n\t\tif (urlFragment.length() == 0)\n\t\t{\n\t\t\treturn new PageParameters();\n\t\t}\n\n\t\t// Split into pairs\n\t\tfinal String[] pairs = urlFragment.split(\"/\");\n\n\t\t// If we don't have an even number of pairs\n\t\tif (pairs.length % 2 != 0)\n\t\t{\n\t\t\t// give up\n\t\t\tthrow new IllegalStateException(\"URL fragment has unmatched key/value pair: \"\n\t\t\t\t\t+ urlFragment);\n\t\t}\n\n\t\t// Loop through pairs\n\t\tPageParameters parameters = new PageParameters();\n\t\tfor (int i = 0; i < pairs.length; i += 2)\n\t\t{\n\t\t\tObject previous = parameters.get(pairs[i]);\n\t\t\tif(previous != null)\n\t\t\t{\n\t\t\t\tif(previous instanceof String)\n\t\t\t\t{\n\t\t\t\t\tparameters.put(pairs[i], new String[] {(String)previous,pairs[i+1]});\n\t\t\t\t}\n\t\t\t\telse if(previous instanceof String[])\n\t\t\t\t{\n\t\t\t\t\tint previousLength = ((String[])previous).length;\n\t\t\t\t\tString[] array = new String[previousLength+1];\n\t\t\t\t\tSystem.arraycopy(previous, 0, array, 0, previousLength);\n\t\t\t\t\tarray[previousLength] = pairs[i+1];\n\t\t\t\t\tparameters.put(pairs[i], array);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparameters.put(pairs[i], pairs[i + 1]);\n\t\t\t}\n\t\t}\n\t\treturn parameters;\n\t}","commit_id":"793fbf5c193a78342f04770d0038356fb7c16259","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Gets the request parameters.\n\t * \n\t * @return Map of parameters\n\t */\n\tpublic Map getParameterMap()\n\t{\n\t\tfinal Map map = new HashMap();\n\n\t\tfor (final Enumeration enumeration = httpServletRequest.getParameterNames(); enumeration\n\t\t\t\t.hasMoreElements();)\n\t\t{\n\t\t\tfinal String name = (String)enumeration.nextElement();\n\t\t\tmap.put(name, httpServletRequest.getParameter(name));\n\t\t}\n\n\t\treturn map;\n\t}","id":58122,"modified_method":"/**\n\t * Gets the request parameters.\n\t * \n\t * @return Map of parameters\n\t */\n\tpublic Map getParameterMap()\n\t{\n\t\tfinal Map map = new HashMap();\n\n\t\tfor (final Enumeration enumeration = httpServletRequest.getParameterNames(); enumeration\n\t\t\t\t.hasMoreElements();)\n\t\t{\n\t\t\tfinal String name = (String)enumeration.nextElement();\n\t\t\tString[] parameterValues = httpServletRequest.getParameterValues(name);\n\t\t\tif(parameterValues.length == 1)\n\t\t\t{\n\t\t\t\tmap.put(name, parameterValues[0]);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmap.put(name, parameterValues);\n\t\t\t}\n\t\t}\n\n\t\treturn map;\n\t}","commit_id":"793fbf5c193a78342f04770d0038356fb7c16259","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Gets a string by key.\n\t * \n\t * @param key\n\t *            The get\n\t * @return The string\n\t */\n\tpublic final String getString(final String key)\n\t{\n\t\tfinal Object o = get(key);\n\t\tif (o == null)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn o.toString();\n\t\t}\n\t}","id":58123,"modified_method":"/**\n\t * Gets a string by key.\n\t * \n\t * @param key\n\t *            The get\n\t * @return The string\n\t */\n\tpublic final String getString(final String key)\n\t{\n\t\tfinal Object o = get(key);\n\t\tif (o == null)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\t\telse if(o.getClass().isArray() && Array.getLength(o) > 0)\n\t\t{\n\t\t\t// if it is an array just get the first value\n\t\t\tfinal Object arrayValue = Array.get(o, 0);\n\t\t\tif(arrayValue == null)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn arrayValue.toString();\n\t\t\t}\n\t\t\t\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn o.toString();\n\t\t}\n\t}","commit_id":"793fbf5c193a78342f04770d0038356fb7c16259","url":"https://github.com/apache/wicket"},{"original_method":"/**\n    * This looks at search parameters and returns anything it finds in the\n    * request parameters that can be put into the search\n    * \n    * @param req a servlet request\n    * @return a search filter object\n    */\n   @SuppressWarnings(\"unchecked\")\n   public Search makeSearchFromRequest(HttpServletRequest req) {\n      Search search = new Search();\n      if (req != null) {\n         Map<String, String[]> params = req.getParameterMap();\n         if (params != null) {\n            for (String key : params.keySet()) {\n               search.addRestriction( new Restriction(\"key\", req.getParameter(key)) );\n            }\n         }\n      }\n      return search;\n   }","id":58124,"modified_method":"/**\n    * This looks at search parameters and returns anything it finds in the\n    * request parameters that can be put into the search\n    * \n    * @param req a servlet request\n    * @return a search filter object\n    */\n   @SuppressWarnings(\"unchecked\")\n   public Search makeSearchFromRequest(HttpServletRequest req) {\n      Search search = new Search();\n      try {\n         if (req != null) {\n            Map<String, String[]> params = req.getParameterMap();\n            if (params != null) {\n               for (String key : params.keySet()) {\n                  if (\"_method\".equals(key)) {\n                     // skip the method\n                     continue;\n                  }\n                  Object value = null;\n                  String[] values = req.getParameterValues(key);\n                  if (values == null) {\n                     // in theory this should not happen\n                     continue;\n                  } else if (values.length > 1) {\n                     value = values;\n                  } else if (values.length == 1) {\n                     value = values[0];\n                  }\n                  search.addRestriction( new Restriction(key, value) );\n               }\n            }\n         }\n      } catch (Exception e) {\n         // failed to translate the request to a search, not really much to do here\n         log.warn(\"Could not translate entity request into search params: \" + e.getMessage(), e);\n      }\n      return search;\n   }","commit_id":"f1b9b1b92768857be600b0665cba6c312f6195ed","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n    * Test method for {@link EntityHandlerImpl#parseEntityURL(String)}\n    */\n   public void testParseEntityUrl() {\n      EntityView view = null;\n\n      view = entityHandler.parseEntityURL(TestData.INPUT_URL1);\n      assertNotNull(view);\n      assertEquals(EntityView.VIEW_SHOW, view.getViewKey());\n      assertEquals(TestData.PREFIX1, view.getEntityReference().getPrefix());\n      assertEquals(TestData.IDS1[0], view.getEntityReference().getId());\n\n      // TODO add more tests\n\n      // parsing of URL related to unregistered entity references returns null\n      view = entityHandler.parseEntityURL(TestData.REF9);\n      assertNull(view);\n\n      // TODO test custom parse rules\n\n      try {\n         view = entityHandler.parseEntityURL(TestData.INVALID_URL);\n         fail(\"Should have thrown exception\");\n      } catch (IllegalArgumentException e) {\n         assertNotNull(e.getMessage());\n      }\n   }","id":58125,"modified_method":"/**\n    * Test method for {@link EntityHandlerImpl#parseEntityURL(String)}\n    */\n   public void testParseEntityURL() {\n      EntityView view = null;\n\n      view = entityHandler.parseEntityURL(TestData.INPUT_URL1);\n      assertNotNull(view);\n      assertEquals(EntityView.VIEW_SHOW, view.getViewKey());\n      assertEquals(TestData.PREFIX1, view.getEntityReference().getPrefix());\n      assertEquals(TestData.IDS1[0], view.getEntityReference().getId());\n\n      // TODO add more tests\n\n      // parsing of URL related to unregistered entity references returns null\n      view = entityHandler.parseEntityURL(TestData.REF9);\n      assertNull(view);\n\n      // TODO test custom parse rules\n\n      try {\n         view = entityHandler.parseEntityURL(TestData.INVALID_URL);\n         fail(\"Should have thrown exception\");\n      } catch (IllegalArgumentException e) {\n         assertNotNull(e.getMessage());\n      }\n   }","commit_id":"f1b9b1b92768857be600b0665cba6c312f6195ed","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n    * @param restriction add this restriction to the search filter,\n    * will replace an existing restriction for a similar property\n    */\n   public void addRestriction(Restriction restriction) {\n      if (restrictions != null) {\n         int location = contains(restrictions, restriction);\n         if (location >= 0 && location < restrictions.length) {\n            restrictions[location] = restriction;\n         }\n      } else {\n         restrictions = new Restriction[] {restriction};\n      }\n   }","id":58126,"modified_method":"/**\n    * @param restriction add this restriction to the search filter,\n    * will replace an existing restriction for a similar property\n    */\n   public void addRestriction(Restriction restriction) {\n      if (restrictions != null) {\n         int location = contains(restrictions, restriction);\n         if (location >= 0 \n               && location < restrictions.length) {\n            restrictions[location] = restriction;\n         } else {\n            restrictions = appendArray(restrictions, restriction);\n         }\n      } else {\n         restrictions = new Restriction[] {restriction};\n      }\n   }","commit_id":"f1b9b1b92768857be600b0665cba6c312f6195ed","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n    * @param restriction add this order to the search filter,\n    * will replace an existing order for a similar property\n    */\n   public void addOrder(Order order) {\n      if (orders != null) {\n         int location = contains(orders, order);\n         if (location >= 0 && location < orders.length) {\n            orders[location] = order;\n         }\n      } else {\n         orders = new Order[] {order};\n      }\n   }","id":58127,"modified_method":"/**\n    * @param restriction add this order to the search filter,\n    * will replace an existing order for a similar property\n    */\n   public void addOrder(Order order) {\n      if (orders != null) {\n         int location = contains(orders, order);\n         if (location >= 0 \n               && location < orders.length) {\n            orders[location] = order;\n         } else {\n            orders = appendArray(orders, order);\n         }\n      } else {\n         orders = new Order[] {order};\n      }\n   }","commit_id":"f1b9b1b92768857be600b0665cba6c312f6195ed","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n   * Passes ChannelRuntimeData to the channel.\n   * This function is called prior to the renderXML() call.\n   * @param rd channel runtime data\n   * @see ChannelRuntimeData\n   */\n  public void setRuntimeData (ChannelRuntimeData rd)\n  {\n    runtimeData = rd;\n\n    String xmlUri = runtimeData.getParameter(\"cw_xml\");\n    if (xmlUri != null) {\n       this.xmlUri = xmlUri;\n       // don't need an explicit reset if a new URI is provided.\n       buttonxmlUri = null;\n    }\n\n    String sslUri = runtimeData.getParameter(\"cw_ssl\");\n    if (sslUri != null)\n       this.sslUri = sslUri;\n\n    String xslTitle = runtimeData.getParameter(\"cw_xslTitle\");\n    if (xslTitle != null)\n       this.xslTitle = xslTitle;\n\n    String xslUri = runtimeData.getParameter(\"cw_xsl\");\n    if (xslUri != null)\n       this.xslUri = xslUri;\n\n    String passThrough = runtimeData.getParameter(\"cw_passThrough\");\n    if (passThrough != null)\n       this.passThrough = passThrough;\n\n    String tidy = runtimeData.getParameter(\"cw_tidy\");\n    if (tidy != null)\n       this.tidy = tidy;\n\n    String infoUri = runtimeData.getParameter(\"cw_info\");\n    if (infoUri != null)\n       this.infoUri = infoUri;\n\n    String editUri = runtimeData.getParameter(\"cw_edit\");\n    if (editUri != null)\n       this.editUri = editUri;\n\n    String helpUri = runtimeData.getParameter(\"cw_help\");\n    if (helpUri != null)\n       this.helpUri = helpUri;\n\n    // reset is a one-time thing.\n    String reset = runtimeData.getParameter(\"cw_reset\");\n    if (reset != null) {\n       if (reset.equalsIgnoreCase(\"return\")) {\n          buttonxmlUri = null;\n       }\n       // else if (reset.equalsIgnoreCase(\"reset\")) {\n       //  call setStaticData with our cached copy.\n       // }\n    }\n\n    if ( buttonxmlUri != null )\n        fullxmlUri = buttonxmlUri;\n    else {\n    //if (this.passThrough != null )\n    //  LogService.instance().log(LogService.DEBUG, \"CWebProxy: passThrough: \"+this.passThrough);\n\n    // Is this a case where we need to pass request parameters to the xmlURI?\n    if ( this.passThrough != null &&\n       !this.passThrough.equalsIgnoreCase(\"none\") &&\n         ( this.passThrough.equalsIgnoreCase(\"all\") ||\n           this.passThrough.equalsIgnoreCase(\"application\") ||\n           runtimeData.getParameter(\"cw_inChannelLink\") != null ) )\n    {\n      LogService.instance().log(LogService.DEBUG, \"CWebProxy: xmlUri is \" + this.xmlUri);\n\n      StringBuffer newXML = new StringBuffer().append(this.xmlUri);\n      String appendchar = (this.xmlUri.indexOf('?') == -1) ? \"?\" : \"&\";\n\n      // want all runtime parameters not specific to WebProxy\n      Enumeration e=runtimeData.getParameterNames ();\n      if (e!=null)\n        {\n          while (e.hasMoreElements ())\n            {\n              String pName = (String) e.nextElement ();\n              if ( !pName.startsWith(\"cw_\") )\n              {\n                newXML.append(appendchar);\n                appendchar = \"&\";\n                newXML.append(pName);\n                newXML.append(\"=\");\n                newXML.append(URLEncoder.encode(runtimeData.getParameter(pName)));\n              }\n            }\n        }\n      fullxmlUri = newXML.toString();\n      LogService.instance().log(LogService.DEBUG, \"CWebProxy: fullxmlUri now: \" + fullxmlUri);\n    }\n    }\n  }","id":58128,"modified_method":"/**\n   * Passes ChannelRuntimeData to the channel.\n   * This function is called prior to the renderXML() call.\n   * @param rd channel runtime data\n   * @see ChannelRuntimeData\n   */\n  public void setRuntimeData (ChannelRuntimeData rd)\n  {\n    runtimeData = rd;\n\n    String xmlUri = runtimeData.getParameter(\"cw_xml\");\n    if (xmlUri != null) {\n       this.xmlUri = xmlUri;\n       // don't need an explicit reset if a new URI is provided.\n       buttonxmlUri = null;\n    }\n\n    String sslUri = runtimeData.getParameter(\"cw_ssl\");\n    if (sslUri != null)\n       this.sslUri = sslUri;\n\n    String xslTitle = runtimeData.getParameter(\"cw_xslTitle\");\n    if (xslTitle != null)\n       this.xslTitle = xslTitle;\n\n    String xslUri = runtimeData.getParameter(\"cw_xsl\");\n    if (xslUri != null)\n       this.xslUri = xslUri;\n\n    String passThrough = runtimeData.getParameter(\"cw_passThrough\");\n    if (passThrough != null)\n       this.passThrough = passThrough;\n\n    String tidy = runtimeData.getParameter(\"cw_tidy\");\n    if (tidy != null)\n       this.tidy = tidy;\n\n    String infoUri = runtimeData.getParameter(\"cw_info\");\n    if (infoUri != null)\n       this.infoUri = infoUri;\n\n    String editUri = runtimeData.getParameter(\"cw_edit\");\n    if (editUri != null)\n       this.editUri = editUri;\n\n    String helpUri = runtimeData.getParameter(\"cw_help\");\n    if (helpUri != null)\n       this.helpUri = helpUri;\n\n    // reset is a one-time thing.\n    String reset = runtimeData.getParameter(\"cw_reset\");\n    if (reset != null) {\n       if (reset.equalsIgnoreCase(\"return\")) {\n          buttonxmlUri = null;\n       }\n       // else if (reset.equalsIgnoreCase(\"reset\")) {\n       //  call setStaticData with our cached copy.\n       // }\n    }\n\n    if ( buttonxmlUri != null )\n        fullxmlUri = buttonxmlUri;\n    else {\n    //if (this.passThrough != null )\n    //  LogService.instance().log(LogService.DEBUG, \"CWebProxy: passThrough: \"+this.passThrough);\n\n    // Is this a case where we need to pass request parameters to the xmlURI?\n    if ( this.passThrough != null &&\n       !this.passThrough.equalsIgnoreCase(\"none\") &&\n         ( this.passThrough.equalsIgnoreCase(\"all\") ||\n           this.passThrough.equalsIgnoreCase(\"application\") ||\n           runtimeData.getParameter(\"cw_inChannelLink\") != null ) )\n    {\n      LogService.instance().log(LogService.DEBUG, \"CWebProxy: xmlUri is \" + this.xmlUri);\n\n      StringBuffer newXML = new StringBuffer().append(this.xmlUri);\n      String appendchar = (this.xmlUri.indexOf('?') == -1) ? \"?\" : \"&\";\n      // BUG 772 - this doesn't seem to catch all cases.\n\n      // want all runtime parameters not specific to WebProxy\n      Enumeration e=runtimeData.getParameterNames ();\n      if (e!=null)\n        {\n          while (e.hasMoreElements ())\n            {\n              String pName = (String) e.nextElement ();\n              if ( !pName.startsWith(\"cw_\") ) {\n        \tString[] value_array = runtimeData.getParameterValues(pName);\n\t\tif ( value_array == null || value_array.length == 0 ) {\n\t\t    // keyword-style parameter\n\t\t    newXML.append(appendchar);\n\t\t    appendchar = \"&\";\n\t\t    newXML.append(pName);\n\t        } else {\n\t\t  int i = 0;\n\t\t  while ( i < value_array.length ) {\n\t\t    newXML.append(appendchar);\n\t\t    appendchar = \"&\";\n\t\t    newXML.append(pName);\n\t\t    newXML.append(\"=\");\n\t\t    newXML.append(URLEncoder.encode(value_array[i++]));\n\t          }\n\t      }\n            }\n          }\n        }\n      fullxmlUri = newXML.toString();\n      LogService.instance().log(LogService.DEBUG, \"CWebProxy: fullxmlUri now: \" + fullxmlUri);\n    }\n    }\n  }","commit_id":"a94b7023c8c7937efca8153d81c1393cb2825392","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.test.AbstractXWikiComponentTestCase#setUp()\n     */\n    @Override\n    protected void setUp() throws Exception\n    {\n        super.setUp();\n\n        getComponentManager().registerComponent(\n            ConfigurationManagerMock.getComponentDescriptor(this.roleHint, null));\n        getComponentManager().registerComponent(ConfigurationSourceCollectionMock.getComponentDescriptor());\n    }","id":58129,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.test.AbstractXWikiComponentTestCase#setUp()\n     */\n    @Override\n    protected void setUp() throws Exception\n    {\n        super.setUp();\n\n        getComponentManager().registerComponent(ConfigurationManagerMock.getComponentDescriptor());\n        getComponentManager().registerComponent(ConfigurationSourceCollectionMock.getComponentDescriptor());\n        \n        ConfigurationManagerMock configurationMock = \n            (ConfigurationManagerMock) getComponentManager().lookup(ConfigurationManager.class);\n        configurationMock.setCacheHint(this.roleHint);\n    }","commit_id":"168f6bbf39cf8d6b631c957270f0242e58b8c623","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.configuration.ConfigurationManager#initializeConfiguration(java.lang.Object, java.util.List,\n     *      java.lang.String)\n     */\n    public void initializeConfiguration(Object configurationBean, List<ConfigurationSource> sources, String namespace)\n        throws InitializationException\n    {\n        CacheManagerConfiguration cacheManagerConfiguration = (CacheManagerConfiguration) configurationBean;\n\n        try {\n            BeanUtils.setProperty(cacheManagerConfiguration, \"defaultCache\", cache);\n            BeanUtils.setProperty(cacheManagerConfiguration, \"defaultLocalCache\", localCache);\n        } catch (Exception e) {\n            getLogger().error(\"Failed to set CacheManager configuration\", e);\n        }\n    }","id":58130,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.configuration.ConfigurationManager#initializeConfiguration(java.lang.Object, java.util.List,\n     *      java.lang.String)\n     */\n    public void initializeConfiguration(Object configurationBean, List<ConfigurationSource> sources, String namespace)\n        throws InitializationException\n    {\n        CacheManagerConfiguration cacheManagerConfiguration = (CacheManagerConfiguration) configurationBean;\n\n        try {\n            BeanUtils.setProperty(cacheManagerConfiguration, \"defaultCache\", this.cache);\n            BeanUtils.setProperty(cacheManagerConfiguration, \"defaultLocalCache\", this.localCache);\n        } catch (Exception e) {\n            getLogger().error(\"Failed to set CacheManager configuration\", e);\n        }\n    }","commit_id":"168f6bbf39cf8d6b631c957270f0242e58b8c623","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Create and return a descriptor for this component.\n     * \n     * @param cache the cache hint.\n     * @param localCache the local cache hint.\n     * @return the descriptor of the component.\n     */\n    public static ComponentDescriptor getComponentDescriptor(String cache, String localCache)\n    {\n        DefaultComponentDescriptor componentDescriptor = new DefaultComponentDescriptor();\n\n        componentDescriptor.setRole(ConfigurationManager.class);\n        componentDescriptor.setImplementation(ConfigurationManagerMock.class.getName());\n        componentDescriptor.addComponentProperty(\"cache\", cache);\n        componentDescriptor.addComponentProperty(\"localCache\", localCache);\n\n        return componentDescriptor;\n    }","id":58131,"modified_method":"/**\n     * Create and return a descriptor for this component.\n     * \n     * @return the descriptor of the component.\n     */\n    public static ComponentDescriptor getComponentDescriptor()\n    {\n        DefaultComponentDescriptor componentDescriptor = new DefaultComponentDescriptor();\n\n        componentDescriptor.setRole(ConfigurationManager.class);\n        componentDescriptor.setImplementation(ConfigurationManagerMock.class.getName());\n\n        return componentDescriptor;\n    }","commit_id":"168f6bbf39cf8d6b631c957270f0242e58b8c623","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @param localCacheHint the role hint of configured default local cache component.\n     */\n    public void setLocalDefaultCache(String localCacheHint)\n    {\n        this.defaultLocalCach = localCacheHint;\n    }","id":58132,"modified_method":"/**\n     * @param localCacheHint the role hint of configured default local cache component.\n     */\n    public void setLocalDefaultCache(String localCacheHint)\n    {\n        this.defaultLocalCache = localCacheHint;\n    }","commit_id":"168f6bbf39cf8d6b631c957270f0242e58b8c623","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.cache.CacheManagerConfiguration#getDefaultLocalCache()\n     */\n    public String getDefaultLocalCache()\n    {\n        return this.defaultLocalCach;\n    }","id":58133,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see org.xwiki.cache.CacheManagerConfiguration#getDefaultLocalCache()\n     */\n    public String getDefaultLocalCache()\n    {\n        return this.defaultLocalCache;\n    }","commit_id":"168f6bbf39cf8d6b631c957270f0242e58b8c623","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.test.AbstractXWikiComponentTestCase#setUp()\n     */\n    @Override\n    protected void setUp() throws Exception\n    {\n        super.setUp();\n        getComponentManager().registerComponent(MockDocumentAccessBridge.getComponentDescriptor());\n        getComponentManager().registerComponent(MockDocumentNameSerializer.getComponentDescriptor());\n    }","id":58134,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see com.xpn.xwiki.test.AbstractXWikiComponentTestCase#setUp()\n     */\n    @Override\n    protected void setUp() throws Exception\n    {\n        super.setUp();\n        Mock mockDocumentAccessBridge = mock(DocumentAccessBridge.class);\n        ((EmbeddableComponentManager) getComponentManager()).registerComponent(DocumentAccessBridge.class,\n            mockDocumentAccessBridge.proxy());\n        Mock mockDocumentNameSerializer = mock(DocumentNameSerializer.class);\n        ((EmbeddableComponentManager) getComponentManager()).registerComponent(DocumentNameSerializer.class,\n            mockDocumentNameSerializer.proxy());\n    }","commit_id":"35dd911c68b118e497daef7af1f4faac4a885d8c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Gets active communication facade.\n     *\n     * @param node Remote node to which connection should be established.\n     * @throws GridServerUnreachableException If none of the servers can be reached after the exception.\n     * @throws GridClientClosedException If client was closed manually.\n     * @throws InterruptedException If connection was interrupted.\n     */\n    @Override public GridClientConnection connection(GridClientNode node)\n        throws GridClientClosedException, GridServerUnreachableException, InterruptedException {\n        assert node != null;\n\n        // Use router's connections if defined.\n        if (!routers.isEmpty())\n            return connection(routers);\n\n        // Use node's connection, if node is available over rest.\n        Collection<InetSocketAddress> endpoints = node.availableAddresses(cfg.getProtocol());\n\n        if (endpoints.isEmpty()) {\n            throw new GridServerUnreachableException(\"No available endpoints to connect \" +\n                \"(is rest enabled for this node?): \" + node);\n        }\n\n        boolean sameHost = node.attributes().isEmpty() ||\n            F.containsAny(U.allLocalMACs(), node.attribute(ATTR_MACS).toString().split(\", \"));\n\n        List<InetSocketAddress> srvs = new ArrayList<>(endpoints);\n\n        if (sameHost)\n            Collections.sort(srvs, GridClientUtils.inetSocketAddressesComparator(true));\n        else {\n            for (int i = srvs.size() - 1; i >= 0; i--)\n                if (srvs.get(i).getAddress().isLoopbackAddress())\n                    srvs.remove(i);\n        }\n\n        return connection(srvs);\n    }","id":58135,"modified_method":"/**\n     * Gets active communication facade.\n     *\n     * @param node Remote node to which connection should be established.\n     * @throws GridServerUnreachableException If none of the servers can be reached after the exception.\n     * @throws GridClientClosedException If client was closed manually.\n     * @throws InterruptedException If connection was interrupted.\n     */\n    @Override public GridClientConnection connection(GridClientNode node)\n        throws GridClientClosedException, GridServerUnreachableException, InterruptedException {\n        assert node != null;\n\n        // Use router's connections if defined.\n        if (!routers.isEmpty())\n            return connection(routers);\n\n        // Use node's connection, if node is available over rest.\n        Collection<InetSocketAddress> endpoints = node.availableAddresses(cfg.getProtocol());\n\n        if (endpoints.isEmpty()) {\n            throw new GridServerUnreachableException(\"No available endpoints to connect \" +\n                \"(is rest enabled for this node?): \" + node);\n        }\n\n        List<InetSocketAddress> srvs = new ArrayList<>(endpoints.size());\n\n        boolean sameHost = node.attributes().isEmpty() ||\n            F.containsAny(U.allLocalMACs(), node.attribute(ATTR_MACS).toString().split(\", \"));\n\n        if (sameHost) {\n            srvs.addAll(endpoints);\n\n            Collections.sort(srvs, GridClientUtils.inetSocketAddressesComparator(true));\n        }\n        else {\n            for (InetSocketAddress endpoint : endpoints)\n                if (!endpoint.getAddress().isLoopbackAddress())\n                    srvs.add(endpoint);\n        }\n\n        return connection(srvs);\n    }","commit_id":"c2d3d09557c5384e2b720d098ab1a00806380a26","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Tries to init client topology using configured set of servers or routers.\n     *\n     * @throws GridClientException If initialisation failed.\n     * @throws InterruptedException If initialisation was interrupted.\n     */\n    private void tryInitTopology() throws GridClientException, InterruptedException {\n        boolean hasSrvs = routers.isEmpty();\n\n        final Collection<InetSocketAddress> connSrvs = (hasSrvs) ? new LinkedHashSet<>(srvs) : routers;\n\n        if (hasSrvs) {\n            // Add REST endpoints for all nodes from previous topology snapshot.\n            try {\n                for (GridClientNodeImpl node : top.nodes()) {\n                    List<InetSocketAddress> endpoints = new ArrayList<>(node.availableAddresses(cfg.getProtocol()));\n\n                    boolean sameHost = node.attributes().isEmpty() ||\n                        F.containsAny(U.allLocalMACs(), node.attribute(ATTR_MACS).toString().split(\", \"));\n\n                    if (sameHost)\n                        Collections.sort(endpoints, GridClientUtils.inetSocketAddressesComparator(true));\n                    else\n                        for(int i = endpoints.size() - 1; i >= 0; i--)\n                            if (endpoints.get(i).getAddress().isLoopbackAddress())\n                                endpoints.remove(i);\n\n                    connSrvs.addAll(endpoints);\n                }\n            }\n            catch (GridClientDisconnectedException ignored) {\n                // Ignore if latest topology update failed.\n            }\n        }\n\n        connMgr.init(connSrvs);\n\n        Map<String, GridClientCacheMode> overallCaches = new HashMap<>();\n\n        for (GridClientNodeImpl node : top.nodes())\n            overallCaches.putAll(node.caches());\n\n        for (Map.Entry<String, GridClientCacheMode> entry : overallCaches.entrySet()) {\n            GridClientDataAffinity affinity = affinity(entry.getKey());\n\n            if (affinity instanceof GridClientPartitionAffinity && entry.getValue() !=\n                GridClientCacheMode.PARTITIONED)\n                log.warning(GridClientPartitionAffinity.class.getSimpleName() + \" is used for a cache configured \" +\n                    \"for non-partitioned mode [cacheName=\" + entry.getKey() + \", cacheMode=\" + entry.getValue() + ']');\n        }\n    }","id":58136,"modified_method":"/**\n     * Tries to init client topology using configured set of servers or routers.\n     *\n     * @throws GridClientException If initialisation failed.\n     * @throws InterruptedException If initialisation was interrupted.\n     */\n    private void tryInitTopology() throws GridClientException, InterruptedException {\n        boolean hasSrvs = routers.isEmpty();\n\n        final Collection<InetSocketAddress> connSrvs = (hasSrvs) ? new LinkedHashSet<>(srvs) : routers;\n\n        if (hasSrvs) {\n            // Add REST endpoints for all nodes from previous topology snapshot.\n            try {\n                for (GridClientNodeImpl node : top.nodes()) {\n                    Collection<InetSocketAddress> endpoints = node.availableAddresses(cfg.getProtocol());\n\n                    List<InetSocketAddress> srvs = new ArrayList<>(endpoints.size());\n\n                    boolean sameHost = node.attributes().isEmpty() ||\n                        F.containsAny(U.allLocalMACs(), node.attribute(ATTR_MACS).toString().split(\", \"));\n\n                    if (sameHost) {\n                        srvs.addAll(endpoints);\n\n                        Collections.sort(srvs, GridClientUtils.inetSocketAddressesComparator(true));\n                    }\n                    else {\n                        for (InetSocketAddress endpoint : endpoints)\n                            if (!endpoint.getAddress().isLoopbackAddress())\n                                srvs.add(endpoint);\n                    }\n\n                    connSrvs.addAll(srvs);\n                }\n            }\n            catch (GridClientDisconnectedException ignored) {\n                // Ignore if latest topology update failed.\n            }\n        }\n\n        connMgr.init(connSrvs);\n\n        Map<String, GridClientCacheMode> overallCaches = new HashMap<>();\n\n        for (GridClientNodeImpl node : top.nodes())\n            overallCaches.putAll(node.caches());\n\n        for (Map.Entry<String, GridClientCacheMode> entry : overallCaches.entrySet()) {\n            GridClientDataAffinity affinity = affinity(entry.getKey());\n\n            if (affinity instanceof GridClientPartitionAffinity && entry.getValue() !=\n                GridClientCacheMode.PARTITIONED)\n                log.warning(GridClientPartitionAffinity.class.getSimpleName() + \" is used for a cache configured \" +\n                    \"for non-partitioned mode [cacheName=\" + entry.getKey() + \", cacheMode=\" + entry.getValue() + ']');\n        }\n    }","commit_id":"c2d3d09557c5384e2b720d098ab1a00806380a26","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Gets active communication facade.\n     *\n     * @param node Remote node to which connection should be established.\n     * @throws GridServerUnreachableException If none of the servers can be reached after the exception.\n     * @throws GridClientClosedException If client was closed manually.\n     * @throws InterruptedException If connection was interrupted.\n     */\n    @Override public GridClientConnection connection(GridClientNode node)\n        throws GridClientClosedException, GridServerUnreachableException, InterruptedException {\n        assert node != null;\n\n        // Use router's connections if defined.\n        if (!routers.isEmpty())\n            return connection(routers);\n\n        // Use node's connection, if node is available over rest.\n        Collection<InetSocketAddress> srvs = node.availableAddresses(cfg.getProtocol());\n\n        if (srvs.isEmpty()) {\n            throw new GridServerUnreachableException(\"No available endpoints to connect \" +\n                \"(is rest enabled for this node?): \" + node);\n        }\n\n        return connection(srvs);\n    }","id":58137,"modified_method":"/**\n     * Gets active communication facade.\n     *\n     * @param node Remote node to which connection should be established.\n     * @throws GridServerUnreachableException If none of the servers can be reached after the exception.\n     * @throws GridClientClosedException If client was closed manually.\n     * @throws InterruptedException If connection was interrupted.\n     */\n    @Override public GridClientConnection connection(GridClientNode node)\n        throws GridClientClosedException, GridServerUnreachableException, InterruptedException {\n        assert node != null;\n\n        // Use router's connections if defined.\n        if (!routers.isEmpty())\n            return connection(routers);\n\n        // Use node's connection, if node is available over rest.\n        Collection<InetSocketAddress> endpoints = node.availableAddresses(cfg.getProtocol());\n\n        if (endpoints.isEmpty()) {\n            throw new GridServerUnreachableException(\"No available endpoints to connect \" +\n                \"(is rest enabled for this node?): \" + node);\n        }\n\n        final boolean emptyAttr = node.attributes().isEmpty();\n        final boolean sameHost = emptyAttr ||\n            F.containsAny(U.allLocalMACs(), node.attribute(ATTR_MACS).toString().split(\", \"));\n\n        final List<InetSocketAddress> srvs = new ArrayList<>(endpoints);\n\n        if (sameHost)\n            Collections.sort(srvs, GridClientUtils.inetSocketAddressesComparator(!emptyAttr));\n        else {\n            for (int i = srvs.size() - 1; i >= 0; i--)\n                if (srvs.get(i).getAddress().isLoopbackAddress())\n                    srvs.remove(i);\n        }\n\n        return connection(srvs);\n    }","commit_id":"5972785c9ff9ce2824df91182f53d19bd941655a","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Tries to init client topology using configured set of servers or routers.\n     *\n     * @throws GridClientException If initialisation failed.\n     * @throws InterruptedException If initialisation was interrupted.\n     */\n    private void tryInitTopology() throws GridClientException, InterruptedException {\n        boolean hasSrvs = routers.isEmpty();\n\n        final Collection<InetSocketAddress> connSrvs = (hasSrvs) ? new LinkedHashSet<>(srvs) : routers;\n\n        if (hasSrvs) {\n            // Add REST endpoints for all nodes from previous topology snapshot.\n            try {\n                for (GridClientNodeImpl node : top.nodes())\n                    connSrvs.addAll(node.availableAddresses(cfg.getProtocol()));\n            }\n            catch (GridClientDisconnectedException ignored) {\n                // Ignore if latest topology update failed.\n            }\n        }\n\n        connMgr.init(connSrvs);\n\n        Map<String, GridClientCacheMode> overallCaches = new HashMap<>();\n\n        for (GridClientNodeImpl node : top.nodes())\n            overallCaches.putAll(node.caches());\n\n        for (Map.Entry<String, GridClientCacheMode> entry : overallCaches.entrySet()) {\n            GridClientDataAffinity affinity = affinity(entry.getKey());\n\n            if (affinity instanceof GridClientPartitionAffinity && entry.getValue() !=\n                GridClientCacheMode.PARTITIONED)\n                log.warning(GridClientPartitionAffinity.class.getSimpleName() + \" is used for a cache configured \" +\n                    \"for non-partitioned mode [cacheName=\" + entry.getKey() + \", cacheMode=\" + entry.getValue() + ']');\n        }\n    }","id":58138,"modified_method":"/**\n     * Tries to init client topology using configured set of servers or routers.\n     *\n     * @throws GridClientException If initialisation failed.\n     * @throws InterruptedException If initialisation was interrupted.\n     */\n    private void tryInitTopology() throws GridClientException, InterruptedException {\n        boolean hasSrvs = routers.isEmpty();\n\n        final Collection<InetSocketAddress> connSrvs = (hasSrvs) ? new LinkedHashSet<>(srvs) : routers;\n\n        if (hasSrvs) {\n            // Add REST endpoints for all nodes from previous topology snapshot.\n            try {\n                for (GridClientNodeImpl node : top.nodes()) {\n                    List<InetSocketAddress> endpoints = new ArrayList<>(node.availableAddresses(cfg.getProtocol()));\n\n                    final boolean emptyAttr = node.attributes().isEmpty();\n                    final boolean sameHost = emptyAttr ||\n                        F.containsAny(U.allLocalMACs(), node.attribute(ATTR_MACS).toString().split(\", \"));\n\n                    if (sameHost)\n                        Collections.sort(endpoints, GridClientUtils.inetSocketAddressesComparator(!emptyAttr));\n                    else\n                        for(int i = endpoints.size() - 1; i >= 0; i--)\n                            if (endpoints.get(i).getAddress().isLoopbackAddress())\n                                endpoints.remove(i);\n\n                    connSrvs.addAll(endpoints);\n                }\n            }\n            catch (GridClientDisconnectedException ignored) {\n                // Ignore if latest topology update failed.\n            }\n        }\n\n        connMgr.init(connSrvs);\n\n        Map<String, GridClientCacheMode> overallCaches = new HashMap<>();\n\n        for (GridClientNodeImpl node : top.nodes())\n            overallCaches.putAll(node.caches());\n\n        for (Map.Entry<String, GridClientCacheMode> entry : overallCaches.entrySet()) {\n            GridClientDataAffinity affinity = affinity(entry.getKey());\n\n            if (affinity instanceof GridClientPartitionAffinity && entry.getValue() !=\n                GridClientCacheMode.PARTITIONED)\n                log.warning(GridClientPartitionAffinity.class.getSimpleName() + \" is used for a cache configured \" +\n                    \"for non-partitioned mode [cacheName=\" + entry.getKey() + \", cacheMode=\" + entry.getValue() + ']');\n        }\n    }","commit_id":"5972785c9ff9ce2824df91182f53d19bd941655a","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public Collection<InetSocketAddress> availableAddresses(GridClientProtocol proto) {\n        Collection<String> addrs;\n        Collection<String> hostNames;\n        AtomicReference<Collection<InetSocketAddress>> addrsCache;\n        final int port;\n\n        switch (proto) {\n            case TCP:\n                addrsCache = tcpSockAddrs;\n                addrs = tcpAddrs;\n                hostNames = tcpHostNames;\n                port = tcpPort;\n\n                break;\n\n            case HTTP:\n                addrsCache = jettySockAddrs;\n                addrs = jettyAddrs;\n                hostNames = jettyHostNames;\n                port = httpPort;\n\n                break;\n\n            default:\n                throw new AssertionError(\"Unknown protocol: \" + proto);\n        }\n\n        Collection<InetSocketAddress> addrs0 = addrsCache.get();\n\n        if (addrs0 != null)\n            return addrs0;\n\n        addrs0 = U.toSocketAddresses(addrs, hostNames, port);\n\n        boolean onDifferentHost = !attributes().isEmpty() &&\n            !F.containsAny(U.allLocalMACs(), attribute(ATTR_MACS).toString().split(\", \"));\n\n        if (onDifferentHost) {\n            Collection<InetSocketAddress> reachableEndpoints = new ArrayList<>(addrs0.size());\n\n            for (InetSocketAddress endpoint : addrs0)\n                if (!endpoint.getAddress().isLoopbackAddress())\n                    reachableEndpoints.add(endpoint);\n\n            addrs0 = U.sealList(reachableEndpoints);\n        }\n\n        if (!addrsCache.compareAndSet(null, addrs0))\n            return addrsCache.get();\n\n        return addrs0;\n    }","id":58139,"modified_method":"/** {@inheritDoc} */\n    @Override public Collection<InetSocketAddress> availableAddresses(GridClientProtocol proto) {\n        Collection<String> addrs;\n        Collection<String> hostNames;\n        AtomicReference<Collection<InetSocketAddress>> addrsCache;\n        final int port;\n\n        switch (proto) {\n            case TCP:\n                addrsCache = tcpSockAddrs;\n                addrs = tcpAddrs;\n                hostNames = tcpHostNames;\n                port = tcpPort;\n\n                break;\n\n            case HTTP:\n                addrsCache = jettySockAddrs;\n                addrs = jettyAddrs;\n                hostNames = jettyHostNames;\n                port = httpPort;\n\n                break;\n\n            default:\n                throw new AssertionError(\"Unknown protocol: \" + proto);\n        }\n\n        Collection<InetSocketAddress> addrs0 = addrsCache.get();\n\n        if (addrs0 != null)\n            return addrs0;\n\n        addrs0 = U.toSocketAddresses(addrs, hostNames, port);\n\n        if (!addrsCache.compareAndSet(null, addrs0))\n            return addrsCache.get();\n\n        return addrs0;\n    }","commit_id":"5972785c9ff9ce2824df91182f53d19bd941655a","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Tries to init client topology using configured set of servers or routers.\n     *\n     * @throws GridClientException If initialisation failed.\n     * @throws InterruptedException If initialisation was interrupted.\n     */\n    private void tryInitTopology() throws GridClientException, InterruptedException {\n        boolean hasSrvs = routers.isEmpty();\n\n        final Collection<InetSocketAddress> connSrvs = (hasSrvs) ? new LinkedHashSet<>(srvs) : routers;\n\n        if (hasSrvs) {\n            // Add REST endpoints for all nodes from previous topology snapshot.\n            try {\n                for (GridClientNodeImpl node : top.nodes())\n                    connSrvs.addAll(node.availableAddresses(cfg.getProtocol()));\n            }\n            catch (GridClientDisconnectedException ignored) {\n                // Ignore if latest topology update failed.\n            }\n        }\n\n        connMgr.init(connSrvs);\n\n        Map<String, GridClientCacheMode> overallCaches = new HashMap<>();\n\n        for (GridClientNodeImpl node : top.nodes())\n            overallCaches.putAll(node.caches());\n\n        for (Map.Entry<String, GridClientCacheMode> entry : overallCaches.entrySet()) {\n            GridClientDataAffinity affinity = affinity(entry.getKey());\n\n            if (affinity instanceof GridClientPartitionAffinity && entry.getValue() !=\n                GridClientCacheMode.PARTITIONED)\n                log.warning(GridClientPartitionAffinity.class.getSimpleName() + \" is used for a cache configured \" +\n                    \"for non-partitioned mode [cacheName=\" + entry.getKey() + \", cacheMode=\" + entry.getValue() + ']');\n        }\n    }","id":58140,"modified_method":"/**\n     * Tries to init client topology using configured set of servers or routers.\n     *\n     * @throws GridClientException If initialisation failed.\n     * @throws InterruptedException If initialisation was interrupted.\n     */\n    private void tryInitTopology() throws GridClientException, InterruptedException {\n        boolean hasSrvs = routers.isEmpty();\n\n        final Collection<InetSocketAddress> connSrvs = (hasSrvs) ? new LinkedHashSet<>(srvs) : routers;\n\n        if (hasSrvs) {\n            // Add REST endpoints for all nodes from previous topology snapshot.\n            try {\n                for (GridClientNodeImpl node : top.nodes()) {\n                    Collection<InetSocketAddress> endpoints = node.availableAddresses(cfg.getProtocol());\n\n                    boolean onSameHost = node.attributes().isEmpty() ||\n                        F.containsAny(U.allLocalMACs(), node.attribute(ATTR_MACS).toString().split(\", \"));\n\n                    if (onSameHost)\n                        connSrvs.addAll(endpoints);\n                    else\n                        for(InetSocketAddress endpoint : endpoints)\n                            if (!endpoint.getAddress().isLoopbackAddress())\n                                connSrvs.add(endpoint);\n                }\n            }\n            catch (GridClientDisconnectedException ignored) {\n                // Ignore if latest topology update failed.\n            }\n        }\n\n        connMgr.init(connSrvs);\n\n        Map<String, GridClientCacheMode> overallCaches = new HashMap<>();\n\n        for (GridClientNodeImpl node : top.nodes())\n            overallCaches.putAll(node.caches());\n\n        for (Map.Entry<String, GridClientCacheMode> entry : overallCaches.entrySet()) {\n            GridClientDataAffinity affinity = affinity(entry.getKey());\n\n            if (affinity instanceof GridClientPartitionAffinity && entry.getValue() !=\n                GridClientCacheMode.PARTITIONED)\n                log.warning(GridClientPartitionAffinity.class.getSimpleName() + \" is used for a cache configured \" +\n                    \"for non-partitioned mode [cacheName=\" + entry.getKey() + \", cacheMode=\" + entry.getValue() + ']');\n        }\n    }","commit_id":"9e107dcbf7efe2312d082e9d60e61ec0a646099b","url":"https://github.com/apache/ignite"},{"original_method":"public void finished() {\n    super.finished();\n\n    final List<String> errors = getMessages(MessageCategory.ERROR);\n    final List<String> warnings = getMessages(MessageCategory.WARNING);\n    if (errors.size() > 0) {\n      NOTIFICATION_GROUP.createNotification(DebuggerBundle.message(\"status.hot.swap.completed.with.errors\"), buildMessage(errors),\n                                                              NotificationType.ERROR, null).notify(getProject());\n    }\n    else if (warnings.size() > 0){\n      NOTIFICATION_GROUP.createNotification(DebuggerBundle.message(\"status.hot.swap.completed.with.warnings\"),\n                                            buildMessage(warnings), NotificationType.WARNING, null).notify(getProject());\n    }\n    else if (myMessages.size() > 0){\n      final StringBuilder msg = StringBuilderSpinAllocator.alloc();\n      try {\n        for (int category : myMessages.keys()) {\n          if (msg.length() > 0) {\n            msg.append(\" \\n\");\n          }\n          final List<String> categoryMessages = getMessages(category);\n          for (Iterator<String> it = categoryMessages.iterator(); it.hasNext();) {\n            msg.append(it.next());\n            if (it.hasNext()) {\n              msg.append(\" \\n\");\n            }\n          }\n        }\n        NOTIFICATION_GROUP.createNotification(msg.toString(), NotificationType.INFORMATION).notify(getProject());\n      }\n      finally {\n        StringBuilderSpinAllocator.dispose(msg);\n      }\n    }\n  }","id":58141,"modified_method":"public void finished() {\n    super.finished();\n\n    final List<String> errors = getMessages(MessageCategory.ERROR);\n    final List<String> warnings = getMessages(MessageCategory.WARNING);\n    if (errors.size() > 0) {\n      NOTIFICATION_GROUP.createNotification(DebuggerBundle.message(\"status.hot.swap.completed.with.errors\"), buildMessage(errors),\n                                                              NotificationType.ERROR, null).notify(getProject());\n    }\n    else if (warnings.size() > 0){\n      NOTIFICATION_GROUP.createNotification(DebuggerBundle.message(\"status.hot.swap.completed.with.warnings\"),\n                                            buildMessage(warnings), NotificationType.WARNING, null).notify(getProject());\n    }\n    else if (myMessages.size() > 0){\n      List<String> messages = new ArrayList<String>();\n      for (int category : myMessages.keys()) {\n        messages.addAll(getMessages(category));\n      }\n      NOTIFICATION_GROUP.createNotification(buildMessage(messages), NotificationType.INFORMATION).notify(getProject());\n    }\n  }","commit_id":"10e72ff4a4162e58fe3afc9fc59c6eaf04f2d358","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String buildMessage(List<String> messages) {\n    return StringUtil.join(messages, \" \\n\");\n  }","id":58142,"modified_method":"private static String buildMessage(List<String> messages) {\n    return StringUtil.trimEnd(StringUtil.join(messages, \" \\n\").trim(), \";\");\n  }","commit_id":"10e72ff4a4162e58fe3afc9fc59c6eaf04f2d358","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean getDisplayErrors() {\t\n\t\tfor(Iterator iter = FacesContext.getCurrentInstance().getMessages(); iter.hasNext();) {\n\t\t\treturn true;   // there is at least one message to display\n\t\t}\n\t\treturn false;\n\t}","id":58143,"modified_method":"public boolean getDisplayErrors() {\t\n\t\treturn FacesContext.getCurrentInstance().getMessages().hasNext();\n\t}","commit_id":"b24f672e0ef7989bc95cde6ecd439b59481ba708","url":"https://github.com/sakaiproject/sakai"},{"original_method":"@Override public GeoPointFieldMapper build(BuilderContext context) {\n            ContentPath.Type origPathType = context.path().pathType();\n            context.path().pathType(pathType);\n\n            GeoHashFieldMapper geohashMapper = new GeoHashFieldMapper.Builder(name).includeInAll(false).build(context);\n\n\n            NumberFieldMapper latMapper = null;\n            NumberFieldMapper lonMapper = null;\n\n            context.path().add(name);\n            if (enableLatLon) {\n                NumberFieldMapper.Builder latMapperBuilder = doubleField(Names.LAT).includeInAll(false);\n                NumberFieldMapper.Builder lonMapperBuilder = doubleField(Names.LON).includeInAll(false);\n                if (precisionStep != null) {\n                    latMapperBuilder.precisionStep(precisionStep);\n                    lonMapperBuilder.precisionStep(precisionStep);\n                }\n                latMapper = (NumberFieldMapper) latMapperBuilder.includeInAll(false).store(store).build(context);\n                lonMapper = (NumberFieldMapper) lonMapperBuilder.includeInAll(false).store(store).build(context);\n            }\n            context.path().remove();\n\n            context.path().pathType(origPathType);\n\n            return new GeoPointFieldMapper(name, pathType, enableLatLon, precisionStep, precision, latMapper, lonMapper, geohashMapper);\n        }","id":58144,"modified_method":"@Override public GeoPointFieldMapper build(BuilderContext context) {\n            ContentPath.Type origPathType = context.path().pathType();\n            context.path().pathType(pathType);\n\n            GeoHashFieldMapper geohashMapper = new GeoHashFieldMapper.Builder(name)\n                    .index(Field.Index.NOT_ANALYZED).omitNorms(true).omitTermFreqAndPositions(true).includeInAll(false).store(store).build(context);\n\n\n            NumberFieldMapper latMapper = null;\n            NumberFieldMapper lonMapper = null;\n\n            context.path().add(name);\n            if (enableLatLon) {\n                NumberFieldMapper.Builder latMapperBuilder = doubleField(Names.LAT).includeInAll(false);\n                NumberFieldMapper.Builder lonMapperBuilder = doubleField(Names.LON).includeInAll(false);\n                if (precisionStep != null) {\n                    latMapperBuilder.precisionStep(precisionStep);\n                    lonMapperBuilder.precisionStep(precisionStep);\n                }\n                latMapper = (NumberFieldMapper) latMapperBuilder.includeInAll(false).store(store).build(context);\n                lonMapper = (NumberFieldMapper) lonMapperBuilder.includeInAll(false).store(store).build(context);\n            }\n            context.path().remove();\n\n            context.path().pathType(origPathType);\n\n            return new GeoPointFieldMapper(name, pathType, enableLatLon, precisionStep, precision, latMapper, lonMapper, geohashMapper);\n        }","commit_id":"3fa214653eba586d777585952e417fa7eed13293","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testLatLonValues() throws Exception {\n        String mapping = XContentFactory.contentTextBuilder(XContentType.JSON).startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = XContentMapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startObject(\"point\").field(\"lat\", 1.2).field(\"lon\", 1.3).endObject()\n                .endObject()\n                .copiedBytes());\n\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        MatcherAssert.assertThat(doc.doc().getField(\"point.geohash\"), nullValue());\n    }","id":58145,"modified_method":"@Test public void testLatLonValues() throws Exception {\n        String mapping = XContentFactory.contentTextBuilder(XContentType.JSON).startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = XContentMapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .startObject(\"point\").field(\"lat\", 1.2).field(\"lon\", 1.3).endObject()\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lat\").getBinaryValue(), nullValue());\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\").getBinaryValue(), nullValue());\n        assertThat(doc.doc().getField(\"point.geohash\"), nullValue());\n    }","commit_id":"c045b4d0ef382709347d324b2ff8c1b514bd6e7c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testGeoHashValue() throws Exception {\n        String mapping = XContentFactory.contentTextBuilder(XContentType.JSON).startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = XContentMapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", GeoHashUtils.encode(1.2, 1.3))\n                .endObject()\n                .copiedBytes());\n\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        MatcherAssert.assertThat(doc.doc().getField(\"point.geohash\"), nullValue());\n    }","id":58146,"modified_method":"@Test public void testGeoHashValue() throws Exception {\n        String mapping = XContentFactory.contentTextBuilder(XContentType.JSON).startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = XContentMapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", GeoHashUtils.encode(1.2, 1.3))\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.geohash\"), nullValue());\n    }","commit_id":"c045b4d0ef382709347d324b2ff8c1b514bd6e7c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test public void testLatLonInOneValue() throws Exception {\n        String mapping = XContentFactory.contentTextBuilder(XContentType.JSON).startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = XContentMapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", \"1.2,1.3\")\n                .endObject()\n                .copiedBytes());\n\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        MatcherAssert.assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        MatcherAssert.assertThat(doc.doc().getField(\"point.geohash\"), nullValue());\n    }","id":58147,"modified_method":"@Test public void testLatLonInOneValue() throws Exception {\n        String mapping = XContentFactory.contentTextBuilder(XContentType.JSON).startObject().startObject(\"type\")\n                .startObject(\"properties\").startObject(\"point\").field(\"type\", \"geo_point\").endObject().endObject()\n                .endObject().endObject().string();\n\n        XContentDocumentMapper defaultMapper = XContentMapperTests.newParser().parse(mapping);\n\n        ParsedDocument doc = defaultMapper.parse(\"type\", \"1\", XContentFactory.jsonBuilder()\n                .startObject()\n                .field(\"point\", \"1.2,1.3\")\n                .endObject()\n                .copiedBytes());\n\n        assertThat(doc.doc().getField(\"point.lat\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.lon\"), notNullValue());\n        assertThat(doc.doc().getField(\"point.geohash\"), nullValue());\n    }","commit_id":"c045b4d0ef382709347d324b2ff8c1b514bd6e7c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public XContentMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            Builder builder = new Builder(name);\n\n            for (Map.Entry<String, Object> entry : node.entrySet()) {\n                String fieldName = Strings.toUnderscoreCase(entry.getKey());\n                Object fieldNode = entry.getValue();\n                if (fieldName.equals(\"path\")) {\n                    builder.pathType(parsePathType(name, fieldNode.toString()));\n                } else if (fieldName.equals(\"lat_lon\")) {\n                    builder.enableLatLon(XContentMapValues.nodeBooleanValue(fieldNode));\n                } else if (fieldName.equals(\"geohash\")) {\n                    builder.enableGeohash(XContentMapValues.nodeBooleanValue(fieldNode));\n                } else if (fieldName.equals(\"resolution\")) {\n                    builder.resolution(Integer.toString(XContentMapValues.nodeIntegerValue(fieldNode)));\n                } else if (fieldName.equals(\"precisionStep\")) {\n                    builder.precisionStep(XContentMapValues.nodeIntegerValue(fieldNode));\n                } else if (fieldName.equals(\"geohash_precision\") || fieldName.equals(\"geohashPrecision\")) {\n                    builder.geohashPrecision(XContentMapValues.nodeIntegerValue(fieldNode));\n                }\n            }\n            return builder;\n        }","id":58148,"modified_method":"@Override public XContentMapper.Builder parse(String name, Map<String, Object> node, ParserContext parserContext) throws MapperParsingException {\n            Builder builder = new Builder(name);\n\n            for (Map.Entry<String, Object> entry : node.entrySet()) {\n                String fieldName = Strings.toUnderscoreCase(entry.getKey());\n                Object fieldNode = entry.getValue();\n                if (fieldName.equals(\"path\")) {\n                    builder.pathType(parsePathType(name, fieldNode.toString()));\n                } else if (fieldName.equals(\"store\")) {\n                    builder.store(parseStore(name, fieldNode.toString()));\n                } else if (fieldName.equals(\"lat_lon\")) {\n                    builder.enableLatLon(XContentMapValues.nodeBooleanValue(fieldNode));\n                } else if (fieldName.equals(\"geohash\")) {\n                    builder.enableGeohash(XContentMapValues.nodeBooleanValue(fieldNode));\n                } else if (fieldName.equals(\"resolution\")) {\n                    builder.resolution(Integer.toString(XContentMapValues.nodeIntegerValue(fieldNode)));\n                } else if (fieldName.equals(\"precisionStep\")) {\n                    builder.precisionStep(XContentMapValues.nodeIntegerValue(fieldNode));\n                } else if (fieldName.equals(\"geohash_precision\") || fieldName.equals(\"geohashPrecision\")) {\n                    builder.geohashPrecision(XContentMapValues.nodeIntegerValue(fieldNode));\n                }\n            }\n            return builder;\n        }","commit_id":"c045b4d0ef382709347d324b2ff8c1b514bd6e7c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public void toXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject(name);\n        builder.field(\"type\", CONTENT_TYPE);\n        builder.field(\"path\", pathType.name().toLowerCase());\n        builder.field(\"lat_lon\", enableLatLon);\n        builder.field(\"geohash\", enableGeohash);\n        builder.field(\"resolution\", resolution);\n        builder.field(\"geohash_precision\", geohashPrecision);\n        if (precisionStep != null) {\n            builder.field(\"precision_step\", precisionStep);\n        }\n\n        builder.endObject();\n    }","id":58149,"modified_method":"@Override public void toXContent(XContentBuilder builder, Params params) throws IOException {\n        builder.startObject(name);\n        builder.field(\"type\", CONTENT_TYPE);\n        builder.field(\"path\", pathType.name().toLowerCase());\n        builder.field(\"lat_lon\", enableLatLon);\n        builder.field(\"geohash\", enableGeohash);\n        builder.field(\"resolution\", resolution);\n        builder.field(\"store\", latMapper.name().toLowerCase());\n        builder.field(\"geohash_precision\", geohashPrecision);\n        if (precisionStep != null) {\n            builder.field(\"precision_step\", precisionStep);\n        }\n\n        builder.endObject();\n    }","commit_id":"c045b4d0ef382709347d324b2ff8c1b514bd6e7c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override public XContentGeoPointFieldMapper build(BuilderContext context) {\n            ContentPath.Type origPathType = context.path().pathType();\n            context.path().pathType(pathType);\n\n            XContentNumberFieldMapper latMapper = null;\n            XContentNumberFieldMapper lonMapper = null;\n            XContentStringFieldMapper geohashMapper = null;\n\n            context.path().add(name);\n            if (enableLatLon) {\n                XContentNumberFieldMapper.Builder latMapperBuilder;\n                XContentNumberFieldMapper.Builder lonMapperBuilder;\n                if (\"32\".equals(resolution)) {\n                    latMapperBuilder = floatField(Names.LAT).includeInAll(false);\n                    lonMapperBuilder = floatField(Names.LON).includeInAll(false);\n                } else if (\"64\".equals(resolution)) {\n                    latMapperBuilder = doubleField(Names.LAT).includeInAll(false);\n                    lonMapperBuilder = doubleField(Names.LON).includeInAll(false);\n                } else {\n                    throw new ElasticSearchIllegalArgumentException(\"Can't handle geo_point resolution [\" + resolution + \"]\");\n                }\n                if (precisionStep != null) {\n                    latMapperBuilder.precisionStep(precisionStep);\n                    lonMapperBuilder.precisionStep(precisionStep);\n                }\n                latMapper = (XContentNumberFieldMapper) latMapperBuilder.includeInAll(false).build(context);\n                lonMapper = (XContentNumberFieldMapper) lonMapperBuilder.includeInAll(false).build(context);\n            }\n            if (enableGeohash) {\n                geohashMapper = stringField(Names.GEOHASH).includeInAll(false).build(context);\n            }\n            context.path().remove();\n\n            context.path().pathType(origPathType);\n\n            return new XContentGeoPointFieldMapper(name, pathType, enableLatLon, enableGeohash, resolution, precisionStep, geohashPrecision, latMapper, lonMapper, geohashMapper);\n        }","id":58150,"modified_method":"@Override public XContentGeoPointFieldMapper build(BuilderContext context) {\n            ContentPath.Type origPathType = context.path().pathType();\n            context.path().pathType(pathType);\n\n            XContentNumberFieldMapper latMapper = null;\n            XContentNumberFieldMapper lonMapper = null;\n            XContentStringFieldMapper geohashMapper = null;\n\n            context.path().add(name);\n            if (enableLatLon) {\n                XContentNumberFieldMapper.Builder latMapperBuilder;\n                XContentNumberFieldMapper.Builder lonMapperBuilder;\n                if (\"32\".equals(resolution)) {\n                    latMapperBuilder = floatField(Names.LAT).includeInAll(false);\n                    lonMapperBuilder = floatField(Names.LON).includeInAll(false);\n                } else if (\"64\".equals(resolution)) {\n                    latMapperBuilder = doubleField(Names.LAT).includeInAll(false);\n                    lonMapperBuilder = doubleField(Names.LON).includeInAll(false);\n                } else {\n                    throw new ElasticSearchIllegalArgumentException(\"Can't handle geo_point resolution [\" + resolution + \"]\");\n                }\n                if (precisionStep != null) {\n                    latMapperBuilder.precisionStep(precisionStep);\n                    lonMapperBuilder.precisionStep(precisionStep);\n                }\n                latMapper = (XContentNumberFieldMapper) latMapperBuilder.includeInAll(false).store(store).build(context);\n                lonMapper = (XContentNumberFieldMapper) lonMapperBuilder.includeInAll(false).store(store).build(context);\n            }\n            if (enableGeohash) {\n                geohashMapper = stringField(Names.GEOHASH).includeInAll(false).build(context);\n            }\n            context.path().remove();\n\n            context.path().pathType(origPathType);\n\n            return new XContentGeoPointFieldMapper(name, pathType, enableLatLon, enableGeohash, resolution, precisionStep, geohashPrecision, latMapper, lonMapper, geohashMapper);\n        }","commit_id":"c045b4d0ef382709347d324b2ff8c1b514bd6e7c","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void showBranchPopup(final String selectedValue) {\n      List<SvnBranchItem> branches = myConfiguration.getBranches(selectedValue);\n      if (branches == null) {\n        return;\n      }\n\n      final Object[] items = new Object[branches.size() + 1];\n      System.arraycopy(branches.toArray(), 0, items, 0, branches.size());\n      items[items.length - 1] = REFRESH_MESSAGE;\n\n      final JList branchList = new JBList(items);\n      branchList.setCellRenderer(new BranchRenderer());\n      final JBPopup popup = JBPopupFactory.getInstance().createListPopupBuilder(branchList)\n        .setTitle(SVNPathUtil.tail(selectedValue))\n        .setResizable(true)\n        //.setDimensionServiceKey(\"Svn.CompareWithBranchPopup\")\n        .setItemChoosenCallback(new Runnable() {\n          public void run() {\n            if (REFRESH_MESSAGE.equals(branchList.getSelectedValue())) {\n              SwingUtilities.invokeLater(new Runnable() {\n                @Override\n                public void run() {\n                  loadBranches(selectedValue, new Runnable() {\n                    @Override\n                    public void run() {\n                      showBranchPopup(selectedValue);\n                    }\n                  });\n                }\n              });\n              return;\n            }\n            SvnBranchItem item = (SvnBranchItem)branchList.getSelectedValue();\n            if (item != null) {\n              myCallback.branchSelected(myProject, myConfiguration, item.getUrl(), item.getRevision());\n            }\n          }\n        })\n        .createPopup();\n      showPopupAt(popup);\n    }","id":58151,"modified_method":"private void showBranchPopup(final String selectedValue) {\n      List<SvnBranchItem> branches = myConfiguration.getBranches(selectedValue);\n      if (branches == null) {\n        return;\n      }\n\n      final Object[] items = new Object[branches.size() + 1];\n      System.arraycopy(branches.toArray(), 0, items, 0, branches.size());\n      items[items.length - 1] = REFRESH_MESSAGE;\n\n      final JList branchList = new JBList(items);\n      branchList.setCellRenderer(new BranchRenderer());\n      final JBPopup popup = JBPopupFactory.getInstance().createListPopupBuilder(branchList)\n        .setTitle(SVNPathUtil.tail(selectedValue))\n        .setResizable(true)\n        //.setDimensionServiceKey(\"Svn.CompareWithBranchPopup\")\n        .setItemChoosenCallback(new Runnable() {\n          public void run() {\n            if (REFRESH_MESSAGE.equals(branchList.getSelectedValue())) {\n              SwingUtilities.invokeLater(new Runnable() {\n                @Override\n                public void run() {\n                  loadBranches(selectedValue, new Runnable() {\n                    @Override\n                    public void run() {\n                      showBranchPopup(selectedValue);\n                    }\n                  });\n                }\n              });\n              return;\n            }\n            SvnBranchItem item = (SvnBranchItem)branchList.getSelectedValue();\n            if (item != null) {\n              myCallback.branchSelected(myProject, myConfiguration, item.getUrl(), item.getRevision());\n            }\n          }\n        })\n        .setFilteringEnabled(new NullableFunction<Object, String>() {\n          @Nullable\n          @Override\n          public String fun(Object item) {\n            return item instanceof SvnBranchItem ? getBranchName((SvnBranchItem)item) : null;\n          }\n        })\n        .createPopup();\n      showPopupAt(popup);\n    }","commit_id":"9e4e4cecc0cb4d3cbaea9bd9652399341f9f4a4c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n      if (isSelected || cellHasFocus) {\n        setBackground(UIUtil.getListSelectionBackground());\n        final Color selectedForegroundColor = UIUtil.getListSelectionForeground();\n        myUrlLabel.setForeground(selectedForegroundColor);\n        myDateLabel.setForeground(selectedForegroundColor);\n        setForeground(selectedForegroundColor);\n      }\n      else {\n        setBackground(UIUtil.getListBackground());\n        final Color foregroundColor = UIUtil.getListForeground();\n        myUrlLabel.setForeground(foregroundColor);\n        myDateLabel.setForeground(UIUtil.getInactiveTextColor());\n        setForeground(foregroundColor);\n      }\n      if (value instanceof String) {\n        myUrlLabel.setText((String) value);\n        myDateLabel.setText(\"\");\n      } else {\n        SvnBranchItem item = (SvnBranchItem) value;\n        myUrlLabel.setText(SVNPathUtil.tail(item.getUrl()));\n        final long creationMillis = item.getCreationDateMillis();\n        myDateLabel.setText((creationMillis > 0) ? DateFormatUtil.formatDate(creationMillis) : \"\");\n      }\n      return this;\n    }","id":58152,"modified_method":"public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {\n      if (isSelected || cellHasFocus) {\n        setBackground(UIUtil.getListSelectionBackground());\n        final Color selectedForegroundColor = UIUtil.getListSelectionForeground();\n        myUrlLabel.setForeground(selectedForegroundColor);\n        myDateLabel.setForeground(selectedForegroundColor);\n        setForeground(selectedForegroundColor);\n      }\n      else {\n        setBackground(UIUtil.getListBackground());\n        final Color foregroundColor = UIUtil.getListForeground();\n        myUrlLabel.setForeground(foregroundColor);\n        myDateLabel.setForeground(UIUtil.getInactiveTextColor());\n        setForeground(foregroundColor);\n      }\n      if (value instanceof String) {\n        myUrlLabel.setText((String) value);\n        myDateLabel.setText(\"\");\n      } else {\n        SvnBranchItem item = (SvnBranchItem) value;\n        myUrlLabel.setText(getBranchName(item));\n        final long creationMillis = item.getCreationDateMillis();\n        myDateLabel.setText((creationMillis > 0) ? DateFormatUtil.formatDate(creationMillis) : \"\");\n      }\n      return this;\n    }","commit_id":"9e4e4cecc0cb4d3cbaea9bd9652399341f9f4a4c","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static XmlTag createTag(XmlTag contextTag, XmlElementDescriptor descriptor) {\n    String bodyText = null;\n    if (descriptor instanceof XmlElementDescriptorImpl) {\n      TypeDescriptor type = ((XmlElementDescriptorImpl)descriptor).getType();\n      if (type instanceof ComplexTypeDescriptor) {\n        int contentType = ((ComplexTypeDescriptor)type).getContentType();\n        bodyText = contentType == XmlElementDescriptor.CONTENT_TYPE_EMPTY ? null : \"\";\n      }\n    }\n    String namespace = getNamespace(descriptor);\n    return contextTag.createChildTag(descriptor.getName(), namespace, bodyText, false);\n  }","id":58153,"modified_method":"private static XmlTag createTag(XmlTag contextTag, XmlElementDescriptor descriptor) {\n    String bodyText = descriptor.getContentType() == XmlElementDescriptor.CONTENT_TYPE_EMPTY ? null : \"\";\n    String namespace = getNamespace(descriptor);\n    return contextTag.createChildTag(descriptor.getName(), namespace, bodyText, false);\n  }","commit_id":"211ea21476b2e864c2231e6671dbaca2620de779","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void invoke(@NotNull final Project project, @NotNull Editor editor, @NotNull final PsiFile file) {\n    try {\n      final XmlTag contextTag = getContextTag(editor, file);\n      if (contextTag == null) {\n        throw new CommonRefactoringUtil.RefactoringErrorHintException(\"Caret should be positioned inside a tag\");\n      }\n      XmlElementDescriptor currentTagDescriptor = contextTag.getDescriptor();\n      final XmlElementDescriptor[] descriptors = currentTagDescriptor.getElementsDescriptors(contextTag);\n      Arrays.sort(descriptors, new Comparator<XmlElementDescriptor>() {\n        @Override\n        public int compare(XmlElementDescriptor o1, XmlElementDescriptor o2) {\n          return o1.getName().compareTo(o2.getName());\n        }\n      });\n      final JBList list = new JBList(descriptors);\n      list.setCellRenderer(new ColoredListCellRenderer() {\n        @Override\n        protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) {\n          XmlElementDescriptor descriptor = (XmlElementDescriptor)value;\n          append(descriptor.getName());\n          append(\" \" + getNamespace(descriptor), SimpleTextAttributes.GRAYED_ATTRIBUTES);\n        }\n      });\n      Runnable runnable = new Runnable() {\n        @Override\n        public void run() {\n          final XmlElementDescriptor selected = (XmlElementDescriptor)list.getSelectedValue();\n          new WriteCommandAction.Simple(project, \"Generate XML Tag\", file) {\n            @Override\n            protected void run() {\n              XmlTag newTag = createTag(contextTag, selected);\n              newTag = contextTag.addSubTag(newTag, false);\n              generateTag(newTag);\n            }\n          }.execute();\n        }\n      };\n      if (ApplicationManager.getApplication().isUnitTestMode()) {\n        XmlElementDescriptor descriptor = ContainerUtil.find(descriptors, new Condition<XmlElementDescriptor>() {\n          @Override\n          public boolean value(XmlElementDescriptor xmlElementDescriptor) {\n            return xmlElementDescriptor.getName().equals(TEST_THREAD_LOCAL.get());\n          }\n        });\n        list.setSelectedValue(descriptor, false);\n        runnable.run();\n      }\n      else {\n        JBPopupFactory.getInstance().createListPopupBuilder(list).setTitle(\"Choose Tag Name\").setItemChoosenCallback(runnable).createPopup().showInBestPositionFor(editor);\n      }\n    }\n    catch (CommonRefactoringUtil.RefactoringErrorHintException e) {\n      HintManager.getInstance().showErrorHint(editor, e.getMessage());\n    }\n  }","id":58154,"modified_method":"@Override\n  public void invoke(@NotNull final Project project, @NotNull Editor editor, @NotNull final PsiFile file) {\n    try {\n      final XmlTag contextTag = getContextTag(editor, file);\n      if (contextTag == null) {\n        throw new CommonRefactoringUtil.RefactoringErrorHintException(\"Caret should be positioned inside a tag\");\n      }\n      XmlElementDescriptor currentTagDescriptor = contextTag.getDescriptor();\n      final XmlElementDescriptor[] descriptors = currentTagDescriptor.getElementsDescriptors(contextTag);\n      Arrays.sort(descriptors, new Comparator<XmlElementDescriptor>() {\n        @Override\n        public int compare(XmlElementDescriptor o1, XmlElementDescriptor o2) {\n          return o1.getName().compareTo(o2.getName());\n        }\n      });\n      final JBList list = new JBList(descriptors);\n      list.setCellRenderer(new ColoredListCellRenderer() {\n        @Override\n        protected void customizeCellRenderer(JList list, Object value, int index, boolean selected, boolean hasFocus) {\n          XmlElementDescriptor descriptor = (XmlElementDescriptor)value;\n          append(descriptor.getName());\n          append(\" \" + getNamespace(descriptor), SimpleTextAttributes.GRAYED_ATTRIBUTES);\n        }\n      });\n      Runnable runnable = new Runnable() {\n        @Override\n        public void run() {\n          final XmlElementDescriptor selected = (XmlElementDescriptor)list.getSelectedValue();\n          new WriteCommandAction.Simple(project, \"Generate XML Tag\", file) {\n            @Override\n            protected void run() {\n              XmlTag newTag = createTag(contextTag, selected);\n              newTag = contextTag.addSubTag(newTag, false);\n              generateTag(newTag);\n            }\n          }.execute();\n        }\n      };\n      if (ApplicationManager.getApplication().isUnitTestMode()) {\n        XmlElementDescriptor descriptor = ContainerUtil.find(descriptors, new Condition<XmlElementDescriptor>() {\n          @Override\n          public boolean value(XmlElementDescriptor xmlElementDescriptor) {\n            return xmlElementDescriptor.getName().equals(TEST_THREAD_LOCAL.get());\n          }\n        });\n        list.setSelectedValue(descriptor, false);\n        runnable.run();\n      }\n      else {\n        JBPopupFactory.getInstance().createListPopupBuilder(list)\n          .setTitle(\"Choose Tag Name\")\n          .setItemChoosenCallback(runnable)\n          .setFilteringEnabled(new Function<Object, String>() {\n            @Override\n            public String fun(Object o) {\n              return ((XmlElementDescriptor)o).getName();\n            }\n          })\n          .createPopup()\n          .showInBestPositionFor(editor);\n      }\n    }\n    catch (CommonRefactoringUtil.RefactoringErrorHintException e) {\n      HintManager.getInstance().showErrorHint(editor, e.getMessage());\n    }\n  }","commit_id":"211ea21476b2e864c2231e6671dbaca2620de779","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public List<XmlElementsGroup> getSubGroups() {\n    return ContainerUtil.map(myParticle.getSubParticles(), new Function<XmlContentParticle, XmlElementsGroup>() {\n      @Override\n      public XmlElementsGroup fun(XmlContentParticle xmlContentParticle) {\n        return new XmlElementsGroupImpl(xmlContentParticle, XmlElementsGroupImpl.this);\n      }\n    });\n  }","id":58155,"modified_method":"@Override\n  public List<XmlElementsGroup> getSubGroups() {\n    return mySubGroups.getValue();\n  }","commit_id":"211ea21476b2e864c2231e6671dbaca2620de779","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void complete(CompletionParameters parameters, CompletionResultSet result, PsiElement element) {\n    if (!XmlCompletionContributor.isXmlNameCompletion(parameters)) {\n      return;\n    }\n    result.stopHere();\n    if (!(element.getParent() instanceof XmlTag)) {\n      return;\n    }\n    final XmlTag tag = (XmlTag)element.getParent();\n    final XmlTag parentTag = tag.getParentTag();\n    final PsiFile file = tag.getContainingFile().getOriginalFile();\n    if (!(file instanceof XmlFile)) return;\n    XSModel xsModel = ApplicationManager.getApplication().runReadAction(new NullableComputable<XSModel>() {\n      @Override\n      public XSModel compute() {\n        return getXSModel((XmlFile)file);\n      }\n    });\n    if (xsModel == null) {\n      return;\n    }\n    XSElementDeclaration decl = getElementDeclaration(parentTag, xsModel);\n    if (decl == null) {\n      return;\n    }\n    XSComplexTypeDecl definition = (XSComplexTypeDecl)decl.getTypeDefinition();\n    XSCMValidator model = definition.getContentModel(new CMBuilder(new CMNodeFactory()));\n    SubstitutionGroupHandler handler = new SubstitutionGroupHandler(new XSGrammarBucket());\n    int[] state = model.startContentModel();\n    for (XmlTag xmlTag : parentTag.getSubTags()) {\n      if (xmlTag == tag) {\n        break;\n      }\n      model.oneTransition(createQName(xmlTag), state, handler);\n    }\n\n    List vector = model.whatCanGoHere(state);\n    for (Object o : vector) {\n      if (o instanceof XSElementDecl) {\n        final XSElementDecl elementDecl = (XSElementDecl)o;\n        result.addElement(LookupElementBuilder.create(elementDecl.getName()).setTypeText(elementDecl.getNamespace()).setInsertHandler(new InsertHandler<LookupElement>() {\n          @Override\n          public void handleInsert(InsertionContext context, LookupElement item) {\n            context.commitDocument();\n            XmlElementDescriptor parentTagDescriptor = parentTag.getDescriptor();\n            assert parentTagDescriptor != null;\n            XmlElementDescriptor[] descriptors = parentTagDescriptor.getElementsDescriptors(parentTag);\n            for (XmlElementDescriptor descriptor : descriptors) {\n              if (descriptor.getName().equals(elementDecl.getName())) {\n                Project project = context.getProject();\n                Editor editor = context.getEditor();\n                // Need to insert \" \" to prevent creating tags like <tagThis is my text\n                final int offset = editor.getCaretModel().getOffset();\n                editor.getDocument().insertString(offset, \" \");\n                PsiDocumentManager.getInstance(project).commitDocument(editor.getDocument());\n                PsiElement current = context.getFile().findElementAt(context.getStartOffset());\n\n                XmlTag newTag = PsiTreeUtil.getParentOfType(current, XmlTag.class);\n                GenerateXmlTagAction.generateTag(\n                  newTag);\n                return;\n              }\n            }\n          }\n        }));\n      }\n    }\n  }","id":58156,"modified_method":"public void complete(CompletionParameters parameters, final CompletionResultSet result, PsiElement element) {\n    if (!XmlCompletionContributor.isXmlNameCompletion(parameters)) {\n      return;\n    }\n    result.stopHere();\n    if (!(element.getParent() instanceof XmlTag)) {\n      return;\n    }\n    final XmlTag tag = (XmlTag)element.getParent();\n    final XmlTag parentTag = tag.getParentTag();\n    final PsiFile file = tag.getContainingFile().getOriginalFile();\n    if (!(file instanceof XmlFile)) return;\n    XSModel xsModel = ApplicationManager.getApplication().runReadAction(new NullableComputable<XSModel>() {\n      @Override\n      public XSModel compute() {\n        return getXSModel((XmlFile)file);\n      }\n    });\n    if (xsModel != null) {\n      processXsModel(result, tag, parentTag, xsModel);\n    }\n\n    ApplicationManager.getApplication().runReadAction(new Runnable() {\n      @Override\n      public void run() {\n        processDtd(result, tag, parentTag);\n      }\n    });\n  }","commit_id":"211ea21476b2e864c2231e6671dbaca2620de779","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void actionPerformed(AnActionEvent e) {\n    final Project project = PlatformDataKeys.PROJECT.getData(e.getDataContext());\n    final DefaultListModel model = new DefaultListModel();\n    final CoverageDataManagerImpl coverageManager = (CoverageDataManagerImpl)CoverageDataManager.getInstance(project);\n    coverageManager.fireBeforeSuiteChosen();\n    final CoverageSuite[] suites = coverageManager.getSuites();\n    final Map<String, List<CoverageSuite>> grouped = new TreeMap<String, List<CoverageSuite>>();\n    for (CoverageSuite suite : suites) {\n      final CoverageFileProvider coverageFileProvider = ((CoverageSuiteImpl)suite).getCoverageDataFileProvider();\n      if (suite.isValid()) {\n        final String sourceProvider =\n          coverageFileProvider instanceof DefaultCoverageFileProvider ? ((DefaultCoverageFileProvider)coverageFileProvider)\n            .getSourceProvider() : coverageFileProvider.getClass().getName();\n        List<CoverageSuite> coverageSuiteList = grouped.get(sourceProvider);\n        if (coverageSuiteList == null) {\n          coverageSuiteList = new ArrayList<CoverageSuite>();\n          grouped.put(sourceProvider, coverageSuiteList);\n        }\n        coverageSuiteList.add(suite);\n      }\n    }\n\n    final List<CoverageSuite> firstInGroup = new ArrayList<CoverageSuite>();\n    for (String provider : grouped.keySet()) {\n      final List<CoverageSuite> toSort = grouped.get(provider);\n      if (toSort.isEmpty()) continue;\n      Collections.sort(toSort, new Comparator<CoverageSuite>() {\n        public int compare(final CoverageSuite s1, final CoverageSuite s2) {\n          return s1.getPresentableName().compareToIgnoreCase(s2.getPresentableName());\n        }\n      });\n      for (CoverageSuite suite : toSort) {\n        model.addElement(suite);\n      }\n      firstInGroup.add(toSort.get(0));\n    }\n    model.addElement(null);\n\n    final JList list = new JList(model);\n    list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n    list.setCellRenderer(new MyCellRenderer(coverageManager) {\n      protected boolean hasSeparatorAbove(final CoverageSuite suite) {\n        return suite == null || (suite != model.getElementAt(0) && firstInGroup.contains(suite));\n      }\n    });\n\n    final Runnable chosen = new Runnable(){\n      public void run() {\n        final CoverageSuite suite = (CoverageSuite)list.getSelectedValue();\n        coverageManager.chooseSuite(suite);\n      }\n    };\n\n    final JBPopup popup = new PopupChooserBuilder(list).\n      setTitle(CodeInsightBundle.message(\"title.popup.show.coverage\")).\n      setMovable(true).\n      setItemChoosenCallback(chosen).\n      createPopup();\n\n    list.registerKeyboardAction(\n      new RemoveSuiteAction(list, coverageManager, model, popup, chosen),\n      KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, 0),\n      JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT\n    );\n\n    popup.showCenteredInCurrentWindow(project);\n  }","id":58157,"modified_method":"public void actionPerformed(AnActionEvent e) {\n    final Project project = PlatformDataKeys.PROJECT.getData(e.getDataContext());\n    final DefaultListModel model = new DefaultListModel();\n    final CoverageDataManagerImpl coverageManager = (CoverageDataManagerImpl)CoverageDataManager.getInstance(project);\n    coverageManager.fireBeforeSuiteChosen();\n    final CoverageSuite[] suites = coverageManager.getSuites();\n    final Map<String, List<CoverageSuite>> grouped = new TreeMap<String, List<CoverageSuite>>();\n    for (CoverageSuite suite : suites) {\n      final CoverageFileProvider coverageFileProvider = ((CoverageSuiteImpl)suite).getCoverageDataFileProvider();\n      if (suite.isValid()) {\n        final String sourceProvider =\n          coverageFileProvider instanceof DefaultCoverageFileProvider ? ((DefaultCoverageFileProvider)coverageFileProvider)\n            .getSourceProvider() : coverageFileProvider.getClass().getName();\n        List<CoverageSuite> coverageSuiteList = grouped.get(sourceProvider);\n        if (coverageSuiteList == null) {\n          coverageSuiteList = new ArrayList<CoverageSuite>();\n          grouped.put(sourceProvider, coverageSuiteList);\n        }\n        coverageSuiteList.add(suite);\n      }\n    }\n\n    final List<CoverageSuite> firstInGroup = new ArrayList<CoverageSuite>();\n    for (String provider : grouped.keySet()) {\n      final List<CoverageSuite> toSort = grouped.get(provider);\n      if (toSort.isEmpty()) continue;\n      Collections.sort(toSort, new Comparator<CoverageSuite>() {\n        public int compare(final CoverageSuite s1, final CoverageSuite s2) {\n          return s1.getPresentableName().compareToIgnoreCase(s2.getPresentableName());\n        }\n      });\n      for (CoverageSuite suite : toSort) {\n        model.addElement(suite);\n      }\n      firstInGroup.add(toSort.get(0));\n    }\n    model.addElement(null);\n\n    final JList list = new JList(model);\n    list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n    list.setCellRenderer(new MyCellRenderer(coverageManager) {\n      protected boolean hasSeparatorAbove(final CoverageSuite suite) {\n        return suite == null || (suite != model.getElementAt(0) && firstInGroup.contains(suite));\n      }\n    });\n\n    final Runnable chosen = new Runnable(){\n      public void run() {\n        final CoverageSuite suite = (CoverageSuite)list.getSelectedValue();\n        coverageManager.chooseSuite(suite);\n      }\n    };\n\n    final JBPopup popup = new PopupChooserBuilder(list).\n      setTitle(CodeInsightBundle.message(\"title.popup.show.coverage\")).\n      setMovable(true).\n      setItemChoosenCallback(chosen).  \n      setFilteringEnabled(new Function<Object, String>() {\n        public String fun(Object o) {\n          if (o instanceof CoverageSuite) {\n            return ((CoverageSuite)o).getPresentableName();\n          }\n          return CodeInsightBundle.message(\"no.coverage\");\n        }\n      }).\n      createPopup();\n\n    list.registerKeyboardAction(\n      new RemoveSuiteAction(list, coverageManager, model, popup, chosen),\n      KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, 0),\n      JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT\n    );\n\n    popup.showCenteredInCurrentWindow(project);\n  }","commit_id":"b73002e6ccc36790eb9d58dec047e8e5126040e4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void customizeCellRenderer(final JList list,\n                                         final Object value, final int index, final boolean selected, final boolean hasFocus) {\n      CoverageSuite suite = (CoverageSuite)value;\n      final SimpleTextAttributes attributes = suite == myCoverageManager.getCurrentSuite() ?\n                                              SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES :\n                                              SimpleTextAttributes.REGULAR_ATTRIBUTES;\n      append(suite != null ? suite.getPresentableName() : CodeInsightBundle.message(\"no.coverage\"), attributes);\n      if (suite != null) {\n        final String date = \" ( \" + new Date(suite.getLastCoverageTimeStamp()).toString() + \" )\";\n        append(date, SimpleTextAttributes.GRAY_ATTRIBUTES);\n      }\n    }","id":58158,"modified_method":"protected void customizeCellRenderer(final JList list,\n                                         final Object value, final int index, final boolean selected, final boolean hasFocus) {\n      CoverageSuite suite = (CoverageSuite)value;\n      final SimpleTextAttributes attributes = suite == myCoverageManager.getCurrentSuite() ?\n                                              SimpleTextAttributes.REGULAR_BOLD_ATTRIBUTES :\n                                              SimpleTextAttributes.REGULAR_ATTRIBUTES;\n      append(suite != null ? suite.getPresentableName() : CodeInsightBundle.message(\"no.coverage\"), attributes);\n      if (suite != null) {\n        final String date = \" (\" + DateFormatUtil.formatDate(new Date(), new Date(suite.getLastCoverageTimeStamp())) + \")\";\n        append(date, SimpleTextAttributes.GRAY_ATTRIBUTES);\n      }\n    }","commit_id":"b73002e6ccc36790eb9d58dec047e8e5126040e4","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * @param outputFile not nul\n     * @param inputResourceName a not null resource in <code>src/main/java<\/code>, <code>src/main/resources<\/code> or <code>src/main/javadoc<\/code>\n     * or in the Javadoc plugin dependencies.\n     * @return the resource file absolute path as String\n     * @since 2.6\n     */\n    private String getResource( File outputFile, String inputResourceName )\n    {\n        if ( inputResourceName.startsWith( \"/\" ) )\n        {\n            inputResourceName = inputResourceName.replaceFirst( \"//*\", \"\" );\n        }\n\n        List<String> classPath = new ArrayList<String>();\n        classPath.add( project.getBuild().getSourceDirectory() );\n\n        URL resourceURL = getResource( classPath, inputResourceName );\n        if ( resourceURL != null )\n        {\n            getLog().debug( inputResourceName + \" found in the main src directory of the project.\" );\n            return FileUtils.toFile( resourceURL ).getAbsolutePath();\n        }\n\n        classPath.clear();\n        for ( Iterator<Resource> it = project.getBuild().getResources().iterator(); it.hasNext(); )\n        {\n            Resource resource = it.next();\n\n            classPath.add( resource.getDirectory() );\n        }\n        resourceURL = getResource( classPath, inputResourceName );\n        if ( resourceURL != null )\n        {\n            getLog().debug( inputResourceName + \" found in the main resources directories of the project.\" );\n            return FileUtils.toFile( resourceURL ).getAbsolutePath();\n        }\n\n        if ( javadocDirectory.exists() )\n        {\n            classPath.clear();\n            classPath.add( javadocDirectory.getAbsolutePath() );\n            resourceURL = getResource( classPath, inputResourceName );\n            if ( resourceURL != null )\n            {\n                getLog().debug( inputResourceName + \" found in the main javadoc directory of the project.\" );\n                return FileUtils.toFile( resourceURL ).getAbsolutePath();\n            }\n        }\n\n        classPath.clear();\n        final String pluginId = \"org.apache.maven.plugins:maven-javadoc-plugin\";\n        Plugin javadocPlugin = getPlugin( project, pluginId );\n        if ( javadocPlugin != null && javadocPlugin.getDependencies() != null )\n        {\n            for ( Iterator<Dependency> it = javadocPlugin.getDependencies().iterator(); it.hasNext(); )\n            {\n                Dependency dependency = it.next();\n\n                JavadocPathArtifact javadocPathArtifact = new JavadocPathArtifact();\n                javadocPathArtifact.setGroupId( dependency.getGroupId() );\n                javadocPathArtifact.setArtifactId( dependency.getArtifactId() );\n                javadocPathArtifact.setVersion( dependency.getVersion() );\n                Artifact artifact = null;\n                try\n                {\n                    artifact = createAndResolveArtifact( javadocPathArtifact );\n                }\n                catch ( Exception e )\n                {\n                    if ( getLog().isDebugEnabled() )\n                    {\n                        getLog().error( \"Unable to retrieve the dependency: \" + dependency + \". Ignored.\", e );\n                    }\n                    else\n                    {\n                        getLog().error( \"Unable to retrieve the dependency: \" + dependency + \". Ignored.\" );\n                    }\n                }\n\n                if ( artifact != null && artifact.getFile().exists() )\n                {\n                    classPath.add( artifact.getFile().getAbsolutePath() );\n                }\n            }\n            resourceURL = getResource( classPath, inputResourceName );\n            if ( resourceURL != null )\n            {\n                getLog().debug( inputResourceName + \" found in javadoc plugin dependencies.\" );\n                try\n                {\n                    JavadocUtil.copyResource( resourceURL, outputFile );\n\n                    return outputFile.getAbsolutePath();\n                }\n                catch ( IOException e )\n                {\n                    if ( getLog().isDebugEnabled() )\n                    {\n                        getLog().error( \"IOException: \" + e.getMessage(), e );\n                    }\n                    else\n                    {\n                        getLog().error( \"IOException: \" + e.getMessage() );\n                    }\n                }\n            }\n        }\n\n        getLog()\n                .warn( \"Unable to find the resource '\" + inputResourceName + \"'. Using default Javadoc resources.\" );\n\n        return null;\n    }","id":58159,"modified_method":"/**\n     * @param outputFile not nul\n     * @param inputResourceName a not null resource in <code>src/main/java<\/code>, <code>src/main/resources<\/code> or <code>src/main/javadoc<\/code>\n     * or in the Javadoc plugin dependencies.\n     * @return the resource file absolute path as String\n     * @since 2.6\n     */\n    private String getResource( File outputFile, String inputResourceName )\n    {\n        if ( inputResourceName.startsWith( \"/\" ) )\n        {\n            inputResourceName = inputResourceName.replaceFirst( \"//*\", \"\" );\n        }\n\n        List<String> classPath = new ArrayList<String>();\n        classPath.add( project.getBuild().getSourceDirectory() );\n\n        URL resourceURL = getResource( classPath, inputResourceName );\n        if ( resourceURL != null )\n        {\n            getLog().debug( inputResourceName + \" found in the main src directory of the project.\" );\n            return FileUtils.toFile( resourceURL ).getAbsolutePath();\n        }\n\n        classPath.clear();\n        for ( Iterator<Resource> it = project.getBuild().getResources().iterator(); it.hasNext(); )\n        {\n            Resource resource = it.next();\n\n            classPath.add( resource.getDirectory() );\n        }\n        resourceURL = getResource( classPath, inputResourceName );\n        if ( resourceURL != null )\n        {\n            getLog().debug( inputResourceName + \" found in the main resources directories of the project.\" );\n            return FileUtils.toFile( resourceURL ).getAbsolutePath();\n        }\n\n        if ( javadocDirectory.exists() )\n        {\n            classPath.clear();\n            classPath.add( javadocDirectory.getAbsolutePath() );\n            resourceURL = getResource( classPath, inputResourceName );\n            if ( resourceURL != null )\n            {\n                getLog().debug( inputResourceName + \" found in the main javadoc directory of the project.\" );\n                return FileUtils.toFile( resourceURL ).getAbsolutePath();\n            }\n        }\n\n        classPath.clear();\n        final String pluginId = \"org.apache.maven.plugins:maven-javadoc-plugin\";\n        Plugin javadocPlugin = getPlugin( project, pluginId );\n        if ( javadocPlugin != null && javadocPlugin.getDependencies() != null )\n        {\n            for ( Iterator<Dependency> it = javadocPlugin.getDependencies().iterator(); it.hasNext(); )\n            {\n                Dependency dependency = it.next();\n\n                JavadocPathArtifact javadocPathArtifact = new JavadocPathArtifact();\n                javadocPathArtifact.setGroupId( dependency.getGroupId() );\n                javadocPathArtifact.setArtifactId( dependency.getArtifactId() );\n                javadocPathArtifact.setVersion( dependency.getVersion() );\n                Artifact artifact = null;\n                try\n                {\n                    artifact = createAndResolveArtifact( javadocPathArtifact );\n                }\n                catch ( Exception e )\n                {\n                    logError( \"Unable to retrieve the dependency: \" + dependency + \". Ignored.\", e );\n                }\n\n                if ( artifact != null && artifact.getFile().exists() )\n                {\n                    classPath.add( artifact.getFile().getAbsolutePath() );\n                }\n            }\n            resourceURL = getResource( classPath, inputResourceName );\n            if ( resourceURL != null )\n            {\n                getLog().debug( inputResourceName + \" found in javadoc plugin dependencies.\" );\n                try\n                {\n                    JavadocUtil.copyResource( resourceURL, outputFile );\n\n                    return outputFile.getAbsolutePath();\n                }\n                catch ( IOException e )\n                {\n                    logError( \"IOException: \" + e.getMessage(), e );\n                }\n            }\n        }\n\n        getLog()\n                .warn( \"Unable to find the resource '\" + inputResourceName + \"'. Using default Javadoc resources.\" );\n\n        return null;\n    }","commit_id":"9fe9647a3fc5964f61bb1e28618c11a04e13ab23","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Method to put the artifacts in the hashmap.\n     *\n     * @param compileArtifactMap the hashmap that will contain the artifacts\n     * @param artifactList the list of artifacts that will be put in the map\n     * @throws MavenReportException if any\n     */\n    private void populateCompileArtifactMap( Map<String, Artifact> compileArtifactMap, Collection<Artifact> artifactList )\n        throws MavenReportException\n    {\n        if ( artifactList == null )\n        {\n            return;\n        }\n\n        for ( Artifact newArtifact : artifactList )\n        {\n            File file = newArtifact.getFile();\n\n            if ( file == null )\n            {\n                throw new MavenReportException( \"Error in plugin descriptor - \"\n                    + \"dependency was not resolved for artifact: \" + newArtifact.getGroupId() + \":\"\n                    + newArtifact.getArtifactId() + \":\" + newArtifact.getVersion() );\n            }\n\n            if ( compileArtifactMap.get( newArtifact.getDependencyConflictId() ) != null )\n            {\n                Artifact oldArtifact =\n                    (Artifact) compileArtifactMap.get( newArtifact.getDependencyConflictId() );\n\n                ArtifactVersion oldVersion = new DefaultArtifactVersion( oldArtifact.getVersion() );\n                ArtifactVersion newVersion = new DefaultArtifactVersion( newArtifact.getVersion() );\n                if ( newVersion.compareTo( oldVersion ) > 0 )\n                {\n                    compileArtifactMap.put( newArtifact.getDependencyConflictId(), newArtifact );\n                }\n            }\n            else\n            {\n                compileArtifactMap.put( newArtifact.getDependencyConflictId(), newArtifact );\n            }\n        }\n    }","id":58160,"modified_method":"/**\n     * Method to put the artifacts in the hashmap.\n     *\n     * @param compileArtifactMap the hashmap that will contain the artifacts\n     * @param artifactList the list of artifacts that will be put in the map\n     * @throws MavenReportException if any\n     */\n    private void populateCompileArtifactMap( Map<String, Artifact> compileArtifactMap, Collection<Artifact> artifactList )\n        throws MavenReportException\n    {\n        if ( artifactList == null )\n        {\n            return;\n        }\n\n        for ( Artifact newArtifact : artifactList )\n        {\n            File file = newArtifact.getFile();\n\n            if ( file == null )\n            {\n                throw new MavenReportException( \"Error in plugin descriptor - \"\n                    + \"dependency was not resolved for artifact: \" + newArtifact.getGroupId() + \":\"\n                    + newArtifact.getArtifactId() + \":\" + newArtifact.getVersion() );\n            }\n\n            if ( compileArtifactMap.get( newArtifact.getDependencyConflictId() ) != null )\n            {\n                Artifact oldArtifact = compileArtifactMap.get( newArtifact.getDependencyConflictId() );\n\n                ArtifactVersion oldVersion = new DefaultArtifactVersion( oldArtifact.getVersion() );\n                ArtifactVersion newVersion = new DefaultArtifactVersion( newArtifact.getVersion() );\n                if ( newVersion.compareTo( oldVersion ) > 0 )\n                {\n                    compileArtifactMap.put( newArtifact.getDependencyConflictId(), newArtifact );\n                }\n            }\n            else\n            {\n                compileArtifactMap.put( newArtifact.getDependencyConflictId(), newArtifact );\n            }\n        }\n    }","commit_id":"9fe9647a3fc5964f61bb1e28618c11a04e13ab23","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Write a debug javadoc script in case of command line error or in debug mode.\n     *\n     * @param cmdLine the current command line as string, not null.\n     * @param javadocOutputDirectory the output dir, not null.\n     * @see #executeJavadocCommandLine(Commandline, File)\n     * @since 2.6\n     */\n    private void writeDebugJavadocScript( String cmdLine, File javadocOutputDirectory )\n    {\n        File commandLineFile = new File( javadocOutputDirectory, DEBUG_JAVADOC_SCRIPT_NAME );\n        commandLineFile.getParentFile().mkdirs();\n\n        try\n        {\n            FileUtils.fileWrite( commandLineFile.getAbsolutePath(), \"UTF-8\", cmdLine );\n\n            if ( !SystemUtils.IS_OS_WINDOWS )\n            {\n                Runtime.getRuntime().exec( new String[] { \"chmod\", \"a+x\", commandLineFile.getAbsolutePath() } );\n            }\n        }\n        catch ( IOException e )\n        {\n            if ( getLog().isDebugEnabled() )\n            {\n                getLog().error( \"Unable to write '\" + commandLineFile.getName() + \"' debug script file\", e );\n            }\n            else\n            {\n                getLog().error( \"Unable to write '\" + commandLineFile.getName() + \"' debug script file\" );\n            }\n        }\n    }","id":58161,"modified_method":"/**\n     * Write a debug javadoc script in case of command line error or in debug mode.\n     *\n     * @param cmdLine the current command line as string, not null.\n     * @param javadocOutputDirectory the output dir, not null.\n     * @see #executeJavadocCommandLine(Commandline, File)\n     * @since 2.6\n     */\n    private void writeDebugJavadocScript( String cmdLine, File javadocOutputDirectory )\n    {\n        File commandLineFile = new File( javadocOutputDirectory, DEBUG_JAVADOC_SCRIPT_NAME );\n        commandLineFile.getParentFile().mkdirs();\n\n        try\n        {\n            FileUtils.fileWrite( commandLineFile.getAbsolutePath(), \"UTF-8\", cmdLine );\n\n            if ( !SystemUtils.IS_OS_WINDOWS )\n            {\n                Runtime.getRuntime().exec( new String[] { \"chmod\", \"a+x\", commandLineFile.getAbsolutePath() } );\n            }\n        }\n        catch ( IOException e )\n        {\n            logError( \"Unable to write '\" + commandLineFile.getName() + \"' debug script file\", e );\n        }\n    }","commit_id":"9fe9647a3fc5964f61bb1e28618c11a04e13ab23","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Using Maven, a Javadoc link is given by <code>${project.url}/apidocs<\/code>.\n     *\n     * @return the detected Javadoc links using the Maven conventions for all modules defined in the current project\n     * or an empty list.\n     * @throws MavenReportException if any\n     * @see #detectOfflineLinks\n     * @see #reactorProjects\n     * @since 2.6\n     */\n    private List<OfflineLink> getModulesLinks()\n        throws MavenReportException\n    {\n        if ( !( detectOfflineLinks && !isAggregator() && reactorProjects != null ) )\n        {\n            return Collections.emptyList();\n        }\n\n        getLog().debug( \"Trying to add links for modules...\" );\n\n        List<OfflineLink> modulesLinks = new ArrayList<OfflineLink>();\n        String javadocDirRelative = PathUtils.toRelative( project.getBasedir(), getOutputDirectory() );\n        for ( MavenProject p : reactorProjects )\n        {\n            if ( p.getPackaging().equals( \"pom\" ) || p.getId().equals( project.getId() ) || ( p.getUrl() == null ) )\n            {\n                continue;\n            }\n\n            File location = new File( p.getBasedir(), javadocDirRelative );\n\n            if ( !location.exists() )\n            {\n                if ( getLog().isDebugEnabled() )\n                {\n                    getLog().debug( \"Javadoc directory not found: \" + location );\n                }\n\n                String javadocGoal = getFullJavadocGoal();\n                getLog().info( \"The goal '\" + javadocGoal + \"' has not been previously called for the module: '\"\n                                   + p.getId() + \"'. Trying to invoke it...\" );\n\n                File invokerDir = new File( project.getBuild().getDirectory(), \"invoker\" );\n                invokerDir.mkdirs();\n                File invokerLogFile = FileUtils.createTempFile( \"maven-javadoc-plugin\", \".txt\", invokerDir );\n                try\n                {\n                    JavadocUtil.invokeMaven( getLog(), new File( localRepository.getBasedir() ), p.getFile(),\n                                             Collections.singletonList( javadocGoal ), null, invokerLogFile );\n                }\n                catch ( MavenInvocationException e )\n                {\n                    if ( getLog().isDebugEnabled() )\n                    {\n                        getLog().error( \"MavenInvocationException: \" + e.getMessage(), e );\n                    }\n                    else\n                    {\n                        getLog().error( \"MavenInvocationException: \" + e.getMessage() );\n                    }\n\n                    String invokerLogContent = JavadocUtil.readFile( invokerLogFile, \"UTF-8\" );\n                    \n                    // TODO: Why are we only interested in cases where the JVM won't start?\n                    // [MJAVADOC-275][jdcasey] I changed the logic here to only throw an error WHEN \n                    //   the JVM won't start (opposite of what it was).\n                    if ( invokerLogContent != null && invokerLogContent.contains( JavadocUtil.ERROR_INIT_VM ) )\n                    {\n                        throw new MavenReportException( e.getMessage(), e );\n                    }\n                }\n                finally\n                {\n                    // just create the directory to prevent repeated invocations..\n                    if ( !location.exists() )\n                    {\n                        getLog().warn( \"Creating fake javadoc directory to prevent repeated invocations: \" + location );\n                        location.mkdirs();\n                    }\n                }\n            }\n\n            if ( location.exists() )\n            {\n                String url = getJavadocLink( p );\n\n                OfflineLink ol = new OfflineLink();\n                ol.setUrl( url );\n                ol.setLocation( location.getAbsolutePath() );\n\n                if ( getLog().isDebugEnabled() )\n                {\n                    getLog().debug( \"Added Javadoc offline link: \" + url + \" for the module: \" + p.getId() );\n                }\n\n                modulesLinks.add( ol );\n            }\n        }\n\n        return modulesLinks;\n    }","id":58162,"modified_method":"/**\n     * Using Maven, a Javadoc link is given by <code>${project.url}/apidocs<\/code>.\n     *\n     * @return the detected Javadoc links using the Maven conventions for all modules defined in the current project\n     * or an empty list.\n     * @throws MavenReportException if any\n     * @see #detectOfflineLinks\n     * @see #reactorProjects\n     * @since 2.6\n     */\n    private List<OfflineLink> getModulesLinks()\n        throws MavenReportException\n    {\n        if ( !detectOfflineLinks || isAggregator() || reactorProjects == null )\n        {\n            return Collections.emptyList();\n        }\n\n        getLog().debug( \"Trying to add links for modules...\" );\n\n        List<OfflineLink> modulesLinks = new ArrayList<OfflineLink>();\n        String javadocDirRelative = PathUtils.toRelative( project.getBasedir(), getOutputDirectory() );\n        for ( MavenProject p : reactorProjects )\n        {\n            if ( p.getPackaging().equals( \"pom\" ) || p.getId().equals( project.getId() ) || ( p.getUrl() == null ) )\n            {\n                continue;\n            }\n\n            File location = new File( p.getBasedir(), javadocDirRelative );\n\n            if ( !location.exists() )\n            {\n                if ( getLog().isDebugEnabled() )\n                {\n                    getLog().debug( \"Javadoc directory not found: \" + location );\n                }\n\n                String javadocGoal = getFullJavadocGoal();\n                getLog().info( \"The goal '\" + javadocGoal + \"' has not been previously called for the module: '\"\n                                   + p.getId() + \"'. Trying to invoke it...\" );\n\n                File invokerDir = new File( project.getBuild().getDirectory(), \"invoker\" );\n                invokerDir.mkdirs();\n                File invokerLogFile = FileUtils.createTempFile( \"maven-javadoc-plugin\", \".txt\", invokerDir );\n                try\n                {\n                    JavadocUtil.invokeMaven( getLog(), new File( localRepository.getBasedir() ), p.getFile(),\n                                             Collections.singletonList( javadocGoal ), null, invokerLogFile );\n                }\n                catch ( MavenInvocationException e )\n                {\n                    logError( \"MavenInvocationException: \" + e.getMessage(), e );\n\n                    String invokerLogContent = JavadocUtil.readFile( invokerLogFile, \"UTF-8\" );\n                    \n                    // TODO: Why are we only interested in cases where the JVM won't start?\n                    // [MJAVADOC-275][jdcasey] I changed the logic here to only throw an error WHEN \n                    //   the JVM won't start (opposite of what it was).\n                    if ( invokerLogContent != null && invokerLogContent.contains( JavadocUtil.ERROR_INIT_VM ) )\n                    {\n                        throw new MavenReportException( e.getMessage(), e );\n                    }\n                }\n                finally\n                {\n                    // just create the directory to prevent repeated invocations..\n                    if ( !location.exists() )\n                    {\n                        getLog().warn( \"Creating fake javadoc directory to prevent repeated invocations: \" + location );\n                        location.mkdirs();\n                    }\n                }\n            }\n\n            if ( location.exists() )\n            {\n                String url = getJavadocLink( p );\n\n                OfflineLink ol = new OfflineLink();\n                ol.setUrl( url );\n                ol.setLocation( location.getAbsolutePath() );\n\n                if ( getLog().isDebugEnabled() )\n                {\n                    getLog().debug( \"Added Javadoc offline link: \" + url + \" for the module: \" + p.getId() );\n                }\n\n                modulesLinks.add( ol );\n            }\n        }\n\n        return modulesLinks;\n    }","commit_id":"9fe9647a3fc5964f61bb1e28618c11a04e13ab23","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Using Maven, a Javadoc link is given by <code>${project.url}/apidocs<\/code>.\n     *\n     * @return the detected Javadoc links using the Maven conventions for all dependencies defined in the current\n     * project or an empty list.\n     * @see #detectLinks\n     * @since 2.6\n     */\n    private List<String> getDependenciesLinks()\n    {\n        if ( !detectLinks )\n        {\n            return Collections.emptyList();\n        }\n\n        getLog().debug( \"Trying to add links for dependencies...\" );\n\n        List<String> dependenciesLinks = new ArrayList<String>();\n        for ( Iterator<Artifact> it = project.getDependencyArtifacts().iterator(); it.hasNext(); )\n        {\n            Artifact artifact = it.next();\n\n            if ( artifact != null && artifact.getFile() != null && artifact.getFile().exists() )\n            {\n                try\n                {\n                    MavenProject artifactProject =\n                        mavenProjectBuilder.buildFromRepository( artifact, remoteRepositories, localRepository );\n\n                    if ( StringUtils.isNotEmpty( artifactProject.getUrl() ) )\n                    {\n                        String url = getJavadocLink( artifactProject );\n\n                        if ( getLog().isDebugEnabled() )\n                        {\n                            getLog().debug(\n                                            \"Added Javadoc link: \" + url + \" for the artifact: \"\n                                                + artifactProject.getId() );\n                        }\n                        dependenciesLinks.add( url );\n                    }\n                }\n                catch ( ProjectBuildingException e )\n                {\n                    if ( getLog().isDebugEnabled() )\n                    {\n                        getLog().debug(\n                                       \"Error when building the artifact: \" + artifact.toString()\n                                           + \". Ignored to add Javadoc link.\" );\n                        getLog().error( \"ProjectBuildingException: \" + e.getMessage(), e );\n                    }\n                    else\n                    {\n                        getLog().error( \"ProjectBuildingException: \" + e.getMessage() );\n                    }\n                }\n            }\n        }\n\n        return dependenciesLinks;\n    }","id":58163,"modified_method":"/**\n     * Using Maven, a Javadoc link is given by <code>${project.url}/apidocs<\/code>.\n     *\n     * @return the detected Javadoc links using the Maven conventions for all dependencies defined in the current\n     * project or an empty list.\n     * @see #detectLinks\n     * @since 2.6\n     */\n    private List<String> getDependenciesLinks()\n    {\n        if ( !detectLinks )\n        {\n            return Collections.emptyList();\n        }\n\n        getLog().debug( \"Trying to add links for dependencies...\" );\n\n        List<String> dependenciesLinks = new ArrayList<String>();\n        for ( Iterator<Artifact> it = project.getDependencyArtifacts().iterator(); it.hasNext(); )\n        {\n            Artifact artifact = it.next();\n\n            if ( artifact != null && artifact.getFile() != null && artifact.getFile().exists() )\n            {\n                try\n                {\n                    MavenProject artifactProject =\n                        mavenProjectBuilder.buildFromRepository( artifact, remoteRepositories, localRepository );\n\n                    if ( StringUtils.isNotEmpty( artifactProject.getUrl() ) )\n                    {\n                        String url = getJavadocLink( artifactProject );\n\n                        if ( getLog().isDebugEnabled() )\n                        {\n                            getLog().debug(\n                                            \"Added Javadoc link: \" + url + \" for the artifact: \"\n                                                + artifactProject.getId() );\n                        }\n                        dependenciesLinks.add( url );\n                    }\n                }\n                catch ( ProjectBuildingException e )\n                {\n                    if ( getLog().isDebugEnabled() )\n                    {\n                        getLog().debug(\n                                       \"Error when building the artifact: \" + artifact.toString()\n                                           + \". Ignored to add Javadoc link.\" );\n                    }\n                    logError( \"ProjectBuildingException: \" + e.getMessage(), e );\n                }\n            }\n        }\n\n        return dependenciesLinks;\n    }","commit_id":"9fe9647a3fc5964f61bb1e28618c11a04e13ab23","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * @param repo not null\n     * @param artifact not null\n     * @return <code>true<\/code> if the artifact exists in the given repo, <code>false<\/code> otherwise or if\n     * the repo is blacklisted.\n     */\n    public boolean dependencyExistsInRepo( ArtifactRepository repo, Artifact artifact )\n    {\n        if ( repo.isBlacklisted() )\n        {\n            if ( log.isDebugEnabled() )\n            {\n                log.debug( \"The repo '\" + repo.getId() + \"' is black listed - Ignored it\" );\n            }\n            return false;\n        }\n\n        if ( UNKNOWN_HOSTS.contains( repo.getUrl() ) )\n        {\n            if ( log.isDebugEnabled() )\n            {\n                log.debug( \"The repo url '\" + repo.getUrl() + \"' is unknowned - Ignored it\" );\n            }\n            return false;\n        }\n\n        repo = wagonManager.getMirrorRepository( repo );\n\n        String id = repo.getId();\n        Repository repository = new Repository( id, repo.getUrl() );\n\n        Wagon wagon;\n        try\n        {\n            wagon = wagonManager.getWagon( repository );\n        }\n        catch ( UnsupportedProtocolException e )\n        {\n            log.error( \"Unsupported protocol: '\" + repo.getProtocol() + \"'\", e );\n            return false;\n        }\n        catch ( WagonConfigurationException e )\n        {\n            log.error( \"Unsupported protocol: '\" + repo.getProtocol() + \"'\", e );\n            return false;\n        }\n\n        wagon.setTimeout( 1000 );\n\n        if ( log.isDebugEnabled() )\n        {\n            Debug debug = new Debug();\n\n            wagon.addSessionListener( debug );\n            wagon.addTransferListener( debug );\n        }\n\n        try\n        {\n            // FIXME when upgrading to maven 3.x : this must be changed.\n            AuthenticationInfo auth = wagonManager.getAuthenticationInfo( repo.getId() );\n\n            ProxyInfo proxyInfo = getProxyInfo();\n            if ( proxyInfo != null )\n            {\n                wagon.connect( repository, auth, proxyInfo );\n            }\n            else\n            {\n                wagon.connect( repository, auth );\n            }\n\n            return wagon.resourceExists( StringUtils.replace( getDependencyUrlFromRepository( artifact, repo ),\n                                                              repo.getUrl(), \"\" ) );\n        }\n        catch ( ConnectionException e )\n        {\n            if ( log.isDebugEnabled() )\n            {\n                log.error( \"Unable to connect to: \" + repo.getUrl(), e );\n            }\n            else\n            {\n                log.error( \"Unable to connect to: \" + repo.getUrl() );\n            }\n            return false;\n        }\n        catch ( AuthenticationException e )\n        {\n            if ( log.isDebugEnabled() )\n            {\n                log.error( \"Unable to connect to: \" + repo.getUrl(), e );\n            }\n            else\n            {\n                log.error( \"Unable to connect to: \" + repo.getUrl() );\n            }\n            return false;\n        }\n        catch ( TransferFailedException e )\n        {\n            if ( e.getCause() instanceof UnknownHostException )\n            {\n                log.error( \"Unknown host \" + e.getCause().getMessage() + \" - ignored it\" );\n                UNKNOWN_HOSTS.add( repo.getUrl() );\n            }\n            else\n            {\n                if ( log.isDebugEnabled() )\n                {\n                    log.error( \"Unable to determine if resource \" + artifact + \" exists in \" + repo.getUrl(), e );\n                }\n                else\n                {\n                    log.error( \"Unable to determine if resource \" + artifact + \" exists in \" + repo.getUrl() );\n                }\n            }\n            return false;\n        }\n        catch ( AuthorizationException e )\n        {\n            if ( log.isDebugEnabled() )\n            {\n                log.error( \"Unable to connect to: \" + repo.getUrl(), e );\n            }\n            else\n            {\n                log.error( \"Unable to connect to: \" + repo.getUrl() );\n            }\n            return false;\n        }\n        catch ( AbstractMethodError e )\n        {\n            log.error( \"Wagon \" + wagon.getClass().getName() + \" does not support the resourceExists method\" );\n            return false;\n        }\n        finally\n        {\n            try\n            {\n                wagon.disconnect();\n            }\n            catch ( ConnectionException e )\n            {\n                if ( log.isDebugEnabled() )\n                {\n                    log.error( \"Error disconnecting wagon - ignored\", e );\n                }\n                else\n                {\n                    log.error( \"Error disconnecting wagon - ignored\" );\n                }\n            }\n        }\n    }","id":58164,"modified_method":"/**\n     * @param repo not null\n     * @param artifact not null\n     * @return <code>true<\/code> if the artifact exists in the given repo, <code>false<\/code> otherwise or if\n     * the repo is blacklisted.\n     */\n    public boolean dependencyExistsInRepo( ArtifactRepository repo, Artifact artifact )\n    {\n        if ( repo.isBlacklisted() )\n        {\n            if ( log.isDebugEnabled() )\n            {\n                log.debug( \"The repo '\" + repo.getId() + \"' is black listed - Ignored it\" );\n            }\n            return false;\n        }\n\n        if ( UNKNOWN_HOSTS.contains( repo.getUrl() ) )\n        {\n            if ( log.isDebugEnabled() )\n            {\n                log.debug( \"The repo url '\" + repo.getUrl() + \"' is unknowned - Ignored it\" );\n            }\n            return false;\n        }\n\n        repo = wagonManager.getMirrorRepository( repo );\n\n        String id = repo.getId();\n        Repository repository = new Repository( id, repo.getUrl() );\n\n        Wagon wagon;\n        try\n        {\n            wagon = wagonManager.getWagon( repository );\n        }\n        catch ( UnsupportedProtocolException e )\n        {\n            logError( \"Unsupported protocol: '\" + repo.getProtocol() + \"'\", e );\n            return false;\n        }\n        catch ( WagonConfigurationException e )\n        {\n            logError( \"Unsupported protocol: '\" + repo.getProtocol() + \"'\", e );\n            return false;\n        }\n\n        wagon.setTimeout( 1000 );\n\n        if ( log.isDebugEnabled() )\n        {\n            Debug debug = new Debug();\n\n            wagon.addSessionListener( debug );\n            wagon.addTransferListener( debug );\n        }\n\n        try\n        {\n            // FIXME when upgrading to maven 3.x : this must be changed.\n            AuthenticationInfo auth = wagonManager.getAuthenticationInfo( repo.getId() );\n\n            ProxyInfo proxyInfo = getProxyInfo();\n            if ( proxyInfo != null )\n            {\n                wagon.connect( repository, auth, proxyInfo );\n            }\n            else\n            {\n                wagon.connect( repository, auth );\n            }\n\n            return wagon.resourceExists( StringUtils.replace( getDependencyUrlFromRepository( artifact, repo ),\n                                                              repo.getUrl(), \"\" ) );\n        }\n        catch ( ConnectionException e )\n        {\n            logError( \"Unable to connect to: \" + repo.getUrl(), e );\n            return false;\n        }\n        catch ( AuthenticationException e )\n        {\n            logError( \"Unable to connect to: \" + repo.getUrl(), e );\n            return false;\n        }\n        catch ( TransferFailedException e )\n        {\n            if ( e.getCause() instanceof UnknownHostException )\n            {\n                log.error( \"Unknown host \" + e.getCause().getMessage() + \" - ignored it\" );\n                UNKNOWN_HOSTS.add( repo.getUrl() );\n            }\n            else\n            {\n                logError( \"Unable to determine if resource \" + artifact + \" exists in \" + repo.getUrl(), e );\n            }\n            return false;\n        }\n        catch ( AuthorizationException e )\n        {\n            logError( \"Unable to connect to: \" + repo.getUrl(), e );\n            return false;\n        }\n        catch ( AbstractMethodError e )\n        {\n            log.error( \"Wagon \" + wagon.getClass().getName() + \" does not support the resourceExists method\" );\n            return false;\n        }\n        finally\n        {\n            try\n            {\n                wagon.disconnect();\n            }\n            catch ( ConnectionException e )\n            {\n                logError( \"Error disconnecting wagon - ignored\", e );\n            }\n        }\n    }","commit_id":"36347bdf948b1bb846d9d41c9622084ffc03c64f","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see WysiwygService#getMacroDescriptor(String, String)\n     */\n    public MacroDescriptor getMacroDescriptor(String macroName, String syntaxId) throws XWikiGWTException\n    {\n        try {\n            SyntaxFactory syntaxFactory = Utils.getComponent(SyntaxFactory.class);\n            MacroManager manager = Utils.getComponentManager().lookup(MacroManager.class);\n            Macro< ? > macro =\n                manager.getMacro(new MacroId(macroName, syntaxFactory.createSyntaxFromIdString(syntaxId)));\n            org.xwiki.rendering.macro.descriptor.MacroDescriptor descriptor = macro.getDescriptor();\n\n            ParameterDescriptor contentDescriptor = null;\n            if (descriptor.getContentDescriptor() != null) {\n                contentDescriptor = new ParameterDescriptor();\n                contentDescriptor.setName(\"content\");\n                contentDescriptor.setDescription(descriptor.getContentDescriptor().getDescription());\n                // Just a hack to distinguish between regular strings and large strings.\n                contentDescriptor.setType(StringBuffer.class.getName());\n                contentDescriptor.setMandatory(descriptor.getContentDescriptor().isMandatory());\n            }\n\n            Map<String, ParameterDescriptor> parameterDescriptorMap = new HashMap<String, ParameterDescriptor>();\n            for (Map.Entry<String, org.xwiki.rendering.macro.descriptor.ParameterDescriptor> entry : descriptor\n                .getParameterDescriptorMap().entrySet()) {\n                ParameterDescriptor parameterDescriptor = new ParameterDescriptor();\n                parameterDescriptor.setName(entry.getValue().getName());\n                parameterDescriptor.setDescription(entry.getValue().getDescription());\n                parameterDescriptor.setType(getMacroParameterType(entry.getValue().getType()));\n                Object defaultValue = entry.getValue().getDefaultValue();\n                if (defaultValue != null) {\n                    parameterDescriptor.setDefaultValue(String.valueOf(defaultValue));\n                }\n                parameterDescriptor.setMandatory(entry.getValue().isMandatory());\n                parameterDescriptorMap.put(entry.getKey(), parameterDescriptor);\n            }\n\n            MacroDescriptor result = new MacroDescriptor();\n            result.setDescription(descriptor.getDescription());\n            result.setContentDescriptor(contentDescriptor);\n            result.setParameterDescriptorMap(parameterDescriptorMap);\n\n            return result;\n        } catch (Throwable t) {\n            LOG.error(\"Exception while retrieving macro descriptor.\", t);\n            throw new XWikiGWTException(t.getLocalizedMessage(), t.toString(), -1, -1);\n        }\n    }","id":58165,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see WysiwygService#getMacroDescriptor(String, String)\n     */\n    public MacroDescriptor getMacroDescriptor(String macroName, String syntaxId) throws XWikiGWTException\n    {\n        try {\n            SyntaxFactory syntaxFactory = Utils.getComponent(SyntaxFactory.class);\n            MacroManager manager = Utils.getComponentManager().lookup(MacroManager.class);\n            Macro< ? > macro =\n                manager.getMacro(new MacroId(macroName, syntaxFactory.createSyntaxFromIdString(syntaxId)));\n            org.xwiki.rendering.macro.descriptor.MacroDescriptor descriptor = macro.getDescriptor();\n\n            ParameterDescriptor contentDescriptor = null;\n            if (descriptor.getContentDescriptor() != null) {\n                contentDescriptor = new ParameterDescriptor();\n                contentDescriptor.setName(\"content\");\n                contentDescriptor.setDescription(descriptor.getContentDescriptor().getDescription());\n                // Just a hack to distinguish between regular strings and large strings.\n                contentDescriptor.setType(StringBuffer.class.getName());\n                contentDescriptor.setMandatory(descriptor.getContentDescriptor().isMandatory());\n            }\n\n            Map<String, ParameterDescriptor> parameterDescriptorMap = new HashMap<String, ParameterDescriptor>();\n            for (Map.Entry<String, org.xwiki.rendering.macro.descriptor.ParameterDescriptor> entry : descriptor\n                .getParameterDescriptorMap().entrySet()) {\n                ParameterDescriptor parameterDescriptor = new ParameterDescriptor();\n                parameterDescriptor.setName(entry.getValue().getName());\n                parameterDescriptor.setDescription(entry.getValue().getDescription());\n                parameterDescriptor.setType(getMacroParameterType(entry.getValue().getType()));\n                Object defaultValue = entry.getValue().getDefaultValue();\n                if (defaultValue != null) {\n                    parameterDescriptor.setDefaultValue(String.valueOf(defaultValue));\n                }\n                parameterDescriptor.setMandatory(entry.getValue().isMandatory());\n                parameterDescriptorMap.put(entry.getKey(), parameterDescriptor);\n            }\n\n            MacroDescriptor result = new MacroDescriptor();\n            result.setName(descriptor.getName());\n            result.setDescription(descriptor.getDescription());\n            result.setContentDescriptor(contentDescriptor);\n            result.setParameterDescriptorMap(parameterDescriptorMap);\n\n            return result;\n        } catch (Throwable t) {\n            LOG.error(\"Exception while retrieving macro descriptor.\", t);\n            throw new XWikiGWTException(t.getLocalizedMessage(), t.toString(), -1, -1);\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Sets the macro call to be edited.\n     * \n     * @param macroCall the macro call to be edited\n     */\n    public void setMacroCall(MacroCall macroCall)\n    {\n        this.macroCall = macroCall;\n\n        // Clear the dialog.\n        getBody().clear();\n        parameterDisplayers.clear();\n        contentDisplayer = null;\n\n        // Update the title of the dialog.\n        title.setText(\"Macro : \" + macroCall.getName());\n\n        // Disable the apply button till we receive the macro descriptor from the server.\n        apply.setEnabled(false);\n\n        // Put the dialog in loading state.\n        setLoading(true);\n\n        // Request macro descriptor.\n        WysiwygService.Singleton.getInstance().getMacroDescriptor(macroCall.getName(), config.getParameter(\"syntax\"),\n            new MacroDescriptorAsyncCallback());\n    }","id":58166,"modified_method":"/**\n     * Sets the macro call to be edited.\n     * \n     * @param macroCall the macro call to be edited\n     */\n    public void setMacroCall(MacroCall macroCall)\n    {\n        this.macroCall = macroCall;\n\n        // Clear the dialog.\n        getBody().clear();\n        parameterDisplayers.clear();\n        contentDisplayer = null;\n\n        // Update the title of the dialog, using the macro id till we receive the macro descriptor.\n        title.setText(TITLE_PREFIX + macroCall.getName());\n\n        // Disable the apply button till we receive the macro descriptor from the server.\n        apply.setEnabled(false);\n\n        // Put the dialog in loading state.\n        setLoading(true);\n\n        // Request macro descriptor.\n        WysiwygService.Singleton.getInstance().getMacroDescriptor(macroCall.getName(), config.getParameter(\"syntax\"),\n            new MacroDescriptorAsyncCallback());\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Fills the dialog with the controls needed to edit the underlying macro.\n     * \n     * @param macroDescriptor describes the edited macro\n     */\n    private void fill(MacroDescriptor macroDescriptor)\n    {\n        // First get the dialog out of the loading state.\n        setLoading(false);\n\n        // Display the macro description.\n        Label macroDescription = new Label(macroDescriptor.getDescription());\n        macroDescription.addStyleName(\"xMacroDescription\");\n        getBody().add(macroDescription);\n\n        // Display the macro parameters.\n        for (Map.Entry<String, ParameterDescriptor> entry : macroDescriptor.getParameterDescriptorMap().entrySet()) {\n            ParameterDisplayer displayer = new ParameterDisplayer(entry.getValue());\n            String value = macroCall.getArgument(entry.getKey());\n            if (value == null) {\n                // Display the default value if the macro call doesn't specify one.\n                value = entry.getValue().getDefaultValue();\n            }\n            displayer.setValue(value);\n            parameterDisplayers.add(displayer);\n            getBody().add(displayer.getWidget());\n        }\n\n        // Display the content of the macro.\n        if (macroDescriptor.getContentDescriptor() != null) {\n            contentDisplayer = new ParameterDisplayer(macroDescriptor.getContentDescriptor());\n            contentDisplayer.setValue(macroCall.getContent());\n            getBody().add(contentDisplayer.getWidget());\n        }\n\n        // Focus the first input control.\n        if (parameterDisplayers.size() > 0) {\n            parameterDisplayers.get(0).setFocused(true);\n        } else if (contentDisplayer != null) {\n            contentDisplayer.setFocused(true);\n        }\n\n        // Now that all the controls are in place, let's enable the apply button.\n        apply.setEnabled(true);\n    }","id":58167,"modified_method":"/**\n     * Fills the dialog with the controls needed to edit the underlying macro.\n     * \n     * @param macroDescriptor describes the edited macro\n     */\n    private void fill(MacroDescriptor macroDescriptor)\n    {\n        // First get the dialog out of the loading state.\n        setLoading(false);\n\n        // Update the title of the dialog, this time using the human-readable macro name.\n        title.setText(TITLE_PREFIX + macroDescriptor.getName());\n\n        // Display the macro description.\n        Label macroDescription = new Label(macroDescriptor.getDescription());\n        macroDescription.addStyleName(\"xMacroDescription\");\n        getBody().add(macroDescription);\n\n        // Display the macro parameters.\n        for (Map.Entry<String, ParameterDescriptor> entry : macroDescriptor.getParameterDescriptorMap().entrySet()) {\n            ParameterDisplayer displayer = new ParameterDisplayer(entry.getValue());\n            String value = macroCall.getArgument(entry.getKey());\n            if (value == null) {\n                // Display the default value if the macro call doesn't specify one.\n                value = entry.getValue().getDefaultValue();\n            }\n            displayer.setValue(value);\n            parameterDisplayers.add(displayer);\n            getBody().add(displayer.getWidget());\n        }\n\n        // Display the content of the macro.\n        if (macroDescriptor.getContentDescriptor() != null) {\n            contentDisplayer = new ParameterDisplayer(macroDescriptor.getContentDescriptor());\n            contentDisplayer.setValue(macroCall.getContent());\n            getBody().add(contentDisplayer.getWidget());\n        }\n\n        // Focus the first input control.\n        if (parameterDisplayers.size() > 0) {\n            parameterDisplayers.get(0).setFocused(true);\n        } else if (contentDisplayer != null) {\n            contentDisplayer.setFocused(true);\n        }\n\n        // Now that all the controls are in place, let's enable the apply button.\n        apply.setEnabled(true);\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see KeyPressHandler#onKeyPress(KeyPressEvent)\n     */\n    public void onKeyPress(KeyPressEvent event)\n    {\n        if (event.getSource() == getWidget()) {\n            if (!ignoreNextKeyPress) {\n                if (updateSelectedItem(event.getNativeEvent().getKeyCode())) {\n                    event.preventDefault();\n                }\n            }\n            ignoreNextKeyPress = false;\n        }\n    }","id":58168,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see KeyPressHandler#onKeyPress(KeyPressEvent)\n     */\n    public void onKeyPress(KeyPressEvent event)\n    {\n        if (event.getSource() == getWidget()) {\n            if (!ignoreNextKeyPress) {\n                updateSelectedItem((Event) event.getNativeEvent());\n            }\n            ignoreNextKeyPress = false;\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Selects the specified list item.\n     * \n     * @param item the list item to be selected\n     */\n    public void setSelectedItem(ListItem item)\n    {\n        if (item != selectedItem && (item == null || item.getParent() == list)) {\n            if (selectedItem != null) {\n                selectedItem.setSelected(false);\n            }\n            selectedItem = item;\n            if (selectedItem != null) {\n                selectedItem.setSelected(true);\n                selectedItem.getElement().scrollIntoView();\n            }\n            SelectionEvent.fire(this, selectedItem);\n        }\n    }","id":58169,"modified_method":"/**\n     * Selects the specified list item.\n     * \n     * @param item the list item to be selected\n     */\n    public void setSelectedItem(ListItem<T> item)\n    {\n        if (item != selectedItem && (item == null || item.getParent() == list)) {\n            if (selectedItem != null) {\n                selectedItem.setSelected(false);\n            }\n            selectedItem = item;\n            if (selectedItem != null) {\n                selectedItem.setSelected(true);\n                selectedItem.getElement().scrollIntoView();\n            }\n            SelectionEvent.fire(this, selectedItem);\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Selects the last list item if the list of not empty.\n     */\n    protected void selectLastItem()\n    {\n        if (list.getWidgetCount() > 0) {\n            setSelectedItem((ListItem) list.getWidget(list.getWidgetCount() - 1));\n        }\n    }","id":58170,"modified_method":"/**\n     * Selects the last list item if the list of not empty.\n     */\n    protected void selectLastItem()\n    {\n        if (list.getWidgetCount() > 0) {\n            setSelectedItem(getItem(list.getWidgetCount() - 1));\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see KeyDownHandler#onKeyDown(KeyDownEvent)\n     */\n    public void onKeyDown(KeyDownEvent event)\n    {\n        if (event.getSource() == getWidget()) {\n            ignoreNextKeyPress = true;\n            if (updateSelectedItem(event.getNativeKeyCode())) {\n                event.preventDefault();\n            }\n        }\n    }","id":58171,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see KeyDownHandler#onKeyDown(KeyDownEvent)\n     */\n    public void onKeyDown(KeyDownEvent event)\n    {\n        if (event.getSource() == getWidget()) {\n            ignoreNextKeyPress = true;\n            updateSelectedItem((Event) event.getNativeEvent());\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Selects the first list item if the list is not empty.\n     */\n    protected void selectFirstItem()\n    {\n        if (list.getWidgetCount() > 0) {\n            setSelectedItem((ListItem) list.getWidget(0));\n        }\n    }","id":58172,"modified_method":"/**\n     * Selects the first list item if the list is not empty.\n     */\n    protected void selectFirstItem()\n    {\n        if (list.getWidgetCount() > 0) {\n            setSelectedItem(getItem(0));\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Removes an item from this list.\n     * \n     * @param item the list item to be removed\n     */\n    public void removeItem(ListItem item)\n    {\n        list.remove(item);\n        if (item == selectedItem) {\n            setSelectedItem(null);\n        }\n    }","id":58173,"modified_method":"/**\n     * Removes an item from this list.\n     * \n     * @param item the list item to be removed\n     */\n    public void removeItem(ListItem<T> item)\n    {\n        list.remove(item);\n        if (item == selectedItem) {\n            setSelectedItem(null);\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Selects the next list item with respect to the currently selected item.\n     */\n    protected void selectNextItem()\n    {\n        int selectedIndex = list.getWidgetIndex(selectedItem);\n        if (selectedIndex >= 0 && selectedIndex < list.getWidgetCount() - 1) {\n            setSelectedItem((ListItem) list.getWidget(selectedIndex + 1));\n        }\n    }","id":58174,"modified_method":"/**\n     * Selects the next list item with respect to the currently selected item.\n     */\n    protected void selectNextItem()\n    {\n        int selectedIndex = list.getWidgetIndex(selectedItem);\n        if (selectedIndex >= 0 && selectedIndex < list.getWidgetCount() - 1) {\n            setSelectedItem(getItem(selectedIndex + 1));\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Adds a new item to the list.\n     * \n     * @param item the item to be added\n     */\n    public void addItem(ListItem item)\n    {\n        item.setSelected(false);\n        list.add(item);\n    }","id":58175,"modified_method":"/**\n     * Adds a new item to the list.\n     * \n     * @param item the item to be added\n     */\n    public void addItem(ListItem<T> item)\n    {\n        item.setSelected(false);\n        list.add(item);\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see HasSelectionHandlers#addSelectionHandler(SelectionHandler)\n     */\n    public HandlerRegistration addSelectionHandler(SelectionHandler<ListItem> handler)\n    {\n        return addHandler(handler, SelectionEvent.getType());\n    }","id":58176,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see HasSelectionHandlers#addSelectionHandler(SelectionHandler)\n     */\n    public HandlerRegistration addSelectionHandler(SelectionHandler<ListItem<T>> handler)\n    {\n        return addHandler(handler, SelectionEvent.getType());\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Selects the previous list item with respect to the currently selected item.\n     */\n    protected void selectPreviousItem()\n    {\n        int selectedIndex = list.getWidgetIndex(selectedItem);\n        if (selectedIndex > 0) {\n            setSelectedItem((ListItem) list.getWidget(selectedIndex - 1));\n        }\n    }","id":58177,"modified_method":"/**\n     * Selects the previous list item with respect to the currently selected item.\n     */\n    protected void selectPreviousItem()\n    {\n        int selectedIndex = list.getWidgetIndex(selectedItem);\n        if (selectedIndex > 0) {\n            setSelectedItem(getItem(selectedIndex - 1));\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Inserts an item before the specified position.\n     * \n     * @param item the item to be inserted\n     * @param beforeIndex the index before which to insert the item\n     */\n    public void insertItem(ListItem item, int beforeIndex)\n    {\n        item.setSelected(false);\n        list.insert(item, beforeIndex);\n    }","id":58178,"modified_method":"/**\n     * Inserts an item before the specified position.\n     * \n     * @param item the item to be inserted\n     * @param beforeIndex the index before which to insert the item\n     */\n    public void insertItem(ListItem<T> item, int beforeIndex)\n    {\n        item.setSelected(false);\n        list.insert(item, beforeIndex);\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see ClickHandler#onClick(ClickEvent)\n     */\n    public void onClick(ClickEvent event)\n    {\n        if (event.getSource() == getWidget()) {\n            setSelectedItem(findItem(Element.as(event.getNativeEvent().getEventTarget())));\n        }\n    }","id":58179,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see ClickHandler#onClick(ClickEvent)\n     */\n    public void onClick(ClickEvent event)\n    {\n        if (event.getSource() == getWidget()) {\n            setSelectedItem(getItemForEvent(event));\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Updates the selected item based on the key pressed.\n     * \n     * @param keyCode the code of the pressed key\n     * @return {@code true} if the selected item has been changed\n     */\n    protected boolean updateSelectedItem(int keyCode)\n    {\n        ListItem oldItem = selectedItem;\n        switch (keyCode) {\n            case KeyCodes.KEY_UP:\n                selectPreviousItem();\n                break;\n            case KeyCodes.KEY_DOWN:\n                selectNextItem();\n                break;\n            case KeyCodes.KEY_HOME:\n                selectFirstItem();\n                break;\n            case KeyCodes.KEY_END:\n                selectLastItem();\n                break;\n            default:\n                // ignore\n        }\n        return oldItem != selectedItem;\n    }","id":58180,"modified_method":"/**\n     * Updates the selected item based on the native keyboard event that was fired.\n     * \n     * @param event the native event that was fired\n     */\n    protected void updateSelectedItem(Event event)\n    {\n        ListItem<T> oldItem = selectedItem;\n        switch (event.getKeyCode()) {\n            case KeyCodes.KEY_UP:\n                selectPreviousItem();\n                break;\n            case KeyCodes.KEY_DOWN:\n                selectNextItem();\n                break;\n            case KeyCodes.KEY_HOME:\n                selectFirstItem();\n                break;\n            case KeyCodes.KEY_END:\n                selectLastItem();\n                break;\n            default:\n                // ignore\n        }\n        if (oldItem != selectedItem) {\n            // We have to prevent the default browser behavior which scrolls the list.\n            event.xPreventDefault();\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(Wysiwyg, RichTextArea, Config)\n     */\n    public void init(Wysiwyg wysiwyg, RichTextArea textArea, Config config)\n    {\n        super.init(wysiwyg, textArea, config);\n\n        displayer = GWT.create(MacroDisplayer.class);\n        displayer.setTextArea(getTextArea());\n        selector = new MacroSelector(displayer);\n\n        getTextArea().getCommandManager().registerCommand(REFRESH,\n            new RefreshExecutable(getConfig().getParameter(\"syntax\", \"xhtml/1.0\")));\n        getTextArea().getCommandManager().registerCommand(COLLAPSE, new CollapseExecutable(selector, true));\n        getTextArea().getCommandManager().registerCommand(EXPAND, new CollapseExecutable(selector, false));\n        getTextArea().getCommandManager().registerCommand(INSERT, new InsertExecutable(selector));\n\n        menuExtension = new MacroMenuExtension(this);\n        getUIExtensionList().add(menuExtension.getExtension());\n    }","id":58181,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(Wysiwyg, RichTextArea, Config)\n     */\n    public void init(Wysiwyg wysiwyg, RichTextArea textArea, Config config)\n    {\n        super.init(wysiwyg, textArea, config);\n\n        displayer = GWT.create(MacroDisplayer.class);\n        displayer.setTextArea(getTextArea());\n        selector = new MacroSelector(displayer);\n\n        getTextArea().getCommandManager().registerCommand(REFRESH,\n            new RefreshExecutable(getConfig().getParameter(\"syntax\", \"xhtml/1.0\")));\n        getTextArea().getCommandManager().registerCommand(COLLAPSE, new CollapseExecutable(selector, true));\n        getTextArea().getCommandManager().registerCommand(EXPAND, new CollapseExecutable(selector, false));\n        getTextArea().getCommandManager().registerCommand(INSERT, new InsertExecutable(selector));\n\n        saveRegistration(getTextArea().addDoubleClickHandler(this));\n\n        menuExtension = new MacroMenuExtension(this);\n        getUIExtensionList().add(menuExtension.getExtension());\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see ClickHandler#onClick(ClickEvent)\n     */\n    public void onClick(ClickEvent event)\n    {\n        if (event.getSource() == select) {\n            setCanceled(false);\n            hide();\n        }\n    }","id":58182,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see ClickHandler#onClick(ClickEvent)\n     */\n    public void onClick(ClickEvent event)\n    {\n        if (event.getSource() == select) {\n            submit();\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @return the name of the selected macro\n     */\n    public String getSelectedMacro()\n    {\n        return macroList.getSelectedItem() == null ? null : ((Label) macroList.getSelectedItem().getWidget(0))\n            .getText();\n    }","id":58183,"modified_method":"/**\n     * @return the name of the selected macro\n     */\n    public String getSelectedMacro()\n    {\n        return macroList.getSelectedItem() == null ? null : macroList.getSelectedItem().getData();\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Fills the dialog with the controls needed to select one of the available macros.\n     * \n     * @param macros the list of available macro names\n     */\n    private void fill(List<String> macros)\n    {\n        macroList.clear();\n        for (String macro : macros) {\n            Label name = new Label(macro);\n            name.addStyleName(\"xMacroLabel\");\n\n            final ListItem item = new ListItem();\n            item.addStyleName(\"xMacro\");\n            item.add(name);\n\n            macroList.addItem(item);\n\n            // Request the macro descriptor to fill the macro description.\n            AsyncCallback<MacroDescriptor> callback = new AsyncCallback<MacroDescriptor>()\n            {\n                public void onFailure(Throwable caught)\n                {\n                    // ignore\n                }\n\n                public void onSuccess(MacroDescriptor result)\n                {\n                    Label description = new Label(result.getDescription());\n                    description.addStyleName(\"xMacroDescription\");\n                    item.add(description);\n                }\n            };\n            CancelableAsyncCallback<MacroDescriptor> cancelableCallback =\n                new CancelableAsyncCallback<MacroDescriptor>(callback)\n                {\n                    public void onFailure(Throwable caught)\n                    {\n                        super.onFailure(caught);\n                        if (!isCanceled()) {\n                            mayFinishLoading(this);\n                        }\n                    }\n\n                    public void onSuccess(MacroDescriptor result)\n                    {\n                        super.onSuccess(result);\n                        if (!isCanceled()) {\n                            mayFinishLoading(this);\n                        }\n                    }\n                };\n            macroDescriptorCallbackList.add(cancelableCallback);\n            WysiwygService.Singleton.getInstance().getMacroDescriptor(macro, getSyntax(), cancelableCallback);\n        }\n    }","id":58184,"modified_method":"/**\n     * Fills the dialog with the controls needed to select one of the available macros.\n     * \n     * @param macros the list of available macro names\n     */\n    private void fill(List<String> macros)\n    {\n        macroList.clear();\n        for (String macro : macros) {\n            final ListItem<String> item = new ListItem<String>();\n            item.setData(macro);\n            item.addStyleName(\"xMacro\");\n\n            macroList.addItem(item);\n\n            // Request the macro descriptor to fill the macro description.\n            AsyncCallback<MacroDescriptor> callback = new AsyncCallback<MacroDescriptor>()\n            {\n                public void onFailure(Throwable caught)\n                {\n                    // ignore\n                }\n\n                public void onSuccess(MacroDescriptor result)\n                {\n                    Label name = new Label(result.getName());\n                    name.addStyleName(\"xMacroLabel\");\n\n                    Label description = new Label(result.getDescription());\n                    description.addStyleName(\"xMacroDescription\");\n\n                    item.add(name);\n                    item.add(description);\n                }\n            };\n            CancelableAsyncCallback<MacroDescriptor> cancelableCallback =\n                new CancelableAsyncCallback<MacroDescriptor>(callback)\n                {\n                    public void onFailure(Throwable caught)\n                    {\n                        super.onFailure(caught);\n                        if (!isCanceled()) {\n                            mayFinishLoading(this);\n                        }\n                    }\n\n                    public void onSuccess(MacroDescriptor result)\n                    {\n                        super.onSuccess(result);\n                        if (!isCanceled()) {\n                            mayFinishLoading(this);\n                        }\n                    }\n                };\n            macroDescriptorCallbackList.add(cancelableCallback);\n            WysiwygService.Singleton.getInstance().getMacroDescriptor(macro, getSyntax(), cancelableCallback);\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Creates a new dialog for selecting one of the available macros. The dialog is modal.\n     * \n     * @param config the object used to configure the newly created dialog\n     */\n    public SelectMacroDialog(Config config)\n    {\n        super(false, true);\n\n        this.config = config;\n\n        getDialog().setIcon(Images.INSTANCE.macroInsert().createImage());\n        getDialog().setCaption(Strings.INSTANCE.macroInsertDialogCaption());\n\n        getHeader().add(new Label(Strings.INSTANCE.macroInsertDialogTitle()));\n\n        macroList = new ListBox();\n        macroList.addSelectionHandler(this);\n\n        select = new Button(Strings.INSTANCE.select());\n        select.addClickHandler(this);\n        getFooter().add(select);\n    }","id":58185,"modified_method":"/**\n     * Creates a new dialog for selecting one of the available macros. The dialog is modal.\n     * \n     * @param config the object used to configure the newly created dialog\n     */\n    public SelectMacroDialog(Config config)\n    {\n        super(false, true);\n\n        this.config = config;\n\n        getDialog().setIcon(Images.INSTANCE.macroInsert().createImage());\n        getDialog().setCaption(Strings.INSTANCE.macroInsertDialogCaption());\n\n        getHeader().add(new Label(Strings.INSTANCE.macroInsertDialogTitle()));\n\n        macroList = new ListBox<String>();\n        macroList.addSelectionHandler(this);\n        macroList.addDoubleClickHandler(this);\n        macroList.addKeyUpHandler(this);\n\n        select = new Button(Strings.INSTANCE.select());\n        select.addClickHandler(this);\n        getFooter().add(select);\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see SelectionHandler#onSelection(SelectionEvent)\n     */\n    public void onSelection(SelectionEvent<ListItem> event)\n    {\n        if (event.getSource() == macroList) {\n            select.setEnabled(macroList.getSelectedItem() != null);\n        }\n    }","id":58186,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see SelectionHandler#onSelection(SelectionEvent)\n     */\n    public void onSelection(SelectionEvent<ListItem<String>> event)\n    {\n        if (event.getSource() == macroList) {\n            select.setEnabled(macroList.getSelectedItem() != null);\n        }\n    }","commit_id":"c889bfe14f9932b955fff4eaaf5cec3d80e17969","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Draw a small rectangle.\n     * White if selected (as always) or red otherwise.\n     *\n     * @param n The node to draw.\n     */\n    public void visit(Node n) {\n        // check, if the node is visible at all\n        Point p = nc.getPoint(n.eastNorth);\n        if ((!selectedCall && n.selected) || (p.x < 0) || (p.y < 0)\n        || (p.x > nc.getWidth()) || (p.y > nc.getHeight())) return;\n\n        IconElemStyle nodeStyle = styles != null ? (IconElemStyle)styles.get(n) : null;\n        if (nodeStyle != null && isZoomOk(nodeStyle))\n            drawNode(n, nodeStyle.icon, nodeStyle.annotate, n.selected);\n        else if (n.selected)\n            drawNode(n, selectedColor, selectedNodeSize, selectedNodeRadius, fillSelectedNode);\n        else if (n.tagged)\n            drawNode(n, nodeColor, taggedNodeSize, taggedNodeRadius, fillUnselectedNode);\n        else\n            drawNode(n, nodeColor, unselectedNodeSize, unselectedNodeRadius, fillUnselectedNode);\n    }","id":58187,"modified_method":"/**\n     * Draw a small rectangle.\n     * White if selected (as always) or red otherwise.\n     *\n     * @param n The node to draw.\n     */\n    public void visit(Node n) {\n        // check, if the node is visible at all\n        Point p = nc.getPoint(n.eastNorth);\n        if ((!selectedCall && n.selected) || (p.x < 0) || (p.y < 0)\n        || (p.x > nc.getWidth()) || (p.y > nc.getHeight())) return;\n        \n        profilerVisibleNodes++;\n        \n        IconElemStyle nodeStyle = (IconElemStyle)getPrimitiveStyle(n);\n        if (nodeStyle != null && isZoomOk(nodeStyle))\n            drawNode(n, nodeStyle.icon, nodeStyle.annotate, n.selected);\n        else if (n.selected)\n            drawNode(n, selectedColor, selectedNodeSize, selectedNodeRadius, fillSelectedNode);\n        else if (n.tagged)\n            drawNode(n, nodeColor, taggedNodeSize, taggedNodeRadius, fillUnselectedNode);\n        else\n            drawNode(n, nodeColor, unselectedNodeSize, unselectedNodeRadius, fillUnselectedNode);\n    }","commit_id":"2ac5c3b9e4c3b58b0892167f6cc5b59007238ecf","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void visitAll(DataSet data, Boolean virtual) {\n\n        boolean profiler = Main.pref.getBoolean(\"mappaint.profiler\",false);\n        long profilerStart = java.lang.System.currentTimeMillis();\n        long profilerLast = profilerStart;\n        int profilerN;\n        if(profiler)\n        {\n            System.out.println(\"Mappaint Profiler\");\n        }\n\n        getSettings(virtual);\n        useRealWidth = Main.pref.getBoolean(\"mappaint.useRealWidth\",false);\n        zoomLevelDisplay = Main.pref.getBoolean(\"mappaint.zoomLevelDisplay\",false);\n        fillAreas = Main.pref.getBoolean(\"mappaint.fillareas\", true);\n        fillAlpha = Math.min(255, Math.max(0, Integer.valueOf(Main.pref.getInteger(\"mappaint.fillalpha\", 50))));\n        circum = Main.map.mapView.getScale()*100*Main.proj.scaleFactor()*40041455; // circumference of the earth in meter\n        styles = MapPaintStyles.getStyles().getStyleSet();\n        drawMultipolygon = Main.pref.getBoolean(\"mappaint.multipolygon\",false);\n        orderFont = new Font(Main.pref.get(\"mappaint.font\",\"Helvetica\"), Font.PLAIN, Main.pref.getInteger(\"mappaint.fontsize\", 8));\n        String currentLocale = Locale.getDefault().getLanguage();\n        regionalNameOrder = Main.pref.get(\"mappaint.nameOrder\", \"name:\"+currentLocale+\";name;int_name;ref;operator;brand\").split(\";\");\n\n        alreadyDrawn = new LinkedList<OsmPrimitive>();\n        alreadyDrawnAreas = new LinkedList<Way>();\n        selectedCall = false;\n\n        if(profiler)\n        {\n            System.out.format(\"Prepare  : %4dms\\n\", (java.lang.System.currentTimeMillis()-profilerLast));\n            profilerLast = java.lang.System.currentTimeMillis();\n        }\n\n        if (fillAreas && styles != null && styles.hasAreas()) {\n            Collection<Way> noAreaWays = new LinkedList<Way>();\n\n            /*** RELATIONS ***/\n            profilerN = 0;\n            for (final Relation osm : data.relations)\n            {\n                if(!osm.deleted && !osm.incomplete)\n                {\n                    osm.visit(this);\n                    profilerN++;\n                }\n            }\n\n            if(profiler)\n            {\n                System.out.format(\"Relations: %4dms, n=%d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n\n            /*** AREAS ***/\n            profilerN = 0;\n            for (final Way osm : data.ways)\n            {\n                if (!osm.incomplete && !osm.deleted && !alreadyDrawn.contains(osm))\n                {\n                    if(styles.isArea((Way)osm) && !alreadyDrawnAreas.contains(osm))\n                    {\n                        osm.visit(this);\n                        profilerN++;\n                    } else\n                        noAreaWays.add((Way)osm);\n                }\n            }\n            alreadyDrawnAreas = null;\n\n            if(profiler)\n            {\n                System.out.format(\"Areas    : %4dms, n=%d\\n\",  (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n\n            /*** WAYS ***/\n            profilerN = 0;\n            fillAreas = false;\n            for (final OsmPrimitive osm : noAreaWays)\n            {\n                osm.visit(this);\n                profilerN++;\n            }\n\n            if(profiler)\n            {\n                System.out.format(\"Ways     : %4dms, n=%d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n        }\n        else\n        {\n            /*** WAYS (filling disabled)  ***/\n            profilerN = 0;\n            for (final OsmPrimitive osm : data.ways)\n                if (!osm.incomplete && !osm.deleted && !osm.selected)\n                {\n                    osm.visit(this);\n                    profilerN++;\n                }\n\n            if(profiler)\n            {\n                System.out.format(\"Ways     : %4dms, n=%d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n        }\n\n        /*** SELECTED  ***/\n        selectedCall = true;\n        profilerN = 0;\n        for (final OsmPrimitive osm : data.getSelected()) {\n            if (!osm.incomplete && !osm.deleted\n            && !(osm instanceof Node) && !alreadyDrawn.contains(osm))\n            {\n                osm.visit(this);\n                profilerN++;\n            }\n        }\n\n        if(profiler)\n        {\n            System.out.format(\"Selected : %4dms, n=%d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n            profilerLast = java.lang.System.currentTimeMillis();\n        }\n\n        /*** DISPLAY CACHED SEGMENTS (WAYS) NOW ***/\n        displaySegments();\n        /*System.out.println(\"display segments \" + (java.lang.System.currentTimeMillis()-profilerLast) + \"ms\");\n        profilerLast = java.lang.System.currentTimeMillis();*/\n\n        /*** NODES ***/\n        profilerN = 0;\n        for (final OsmPrimitive osm : data.nodes)\n            if (!osm.incomplete && !osm.deleted && !alreadyDrawn.contains(osm))\n            {\n                osm.visit(this);\n                profilerN++;\n            }\n\n        if(profiler)\n        {\n            System.out.format(\"Nodes    : %4dms, n=%d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n            profilerLast = java.lang.System.currentTimeMillis();\n        }\n\n        alreadyDrawn = null;\n\n        /*** VIRTUAL  ***/\n        if (virtualNodeSize != 0)\n        {\n            profilerN = 0;\n            currentColor = nodeColor;\n            for (final OsmPrimitive osm : data.ways)\n                if (!osm.incomplete && !osm.deleted)\n                {\n                    visitVirtual((Way)osm);\n                    profilerN++;\n                }\n\n            if(profiler)\n            {\n                System.out.format(\"Virtual  : %4dms, n=%d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n\n            displaySegments(null);\n            /*System.out.println(\"display segments virtual \" + (java.lang.System.currentTimeMillis()-profilerLast) + \"ms\");\n            profilerLast = java.lang.System.currentTimeMillis();*/\n        }\n\n        if(profiler)\n        {\n            System.out.format(\"All      : %4dms\\n\", (profilerLast-profilerStart));\n        }\n    }","id":58188,"modified_method":"public void visitAll(DataSet data, Boolean virtual) {\n\n        boolean profiler = Main.pref.getBoolean(\"mappaint.profiler\",false);\n        useStyleCache = Main.pref.getBoolean(\"mappaint.cache\",true);\n        fillAreas = Main.pref.getBoolean(\"mappaint.fillareas\", true);\n        fillAlpha = Math.min(255, Math.max(0, Integer.valueOf(Main.pref.getInteger(\"mappaint.fillalpha\", 50))));\n\n        long profilerStart = java.lang.System.currentTimeMillis();\n        long profilerLast = profilerStart;\n        int profilerN;\n        if(profiler)\n            System.out.println(\"Mappaint Profiler (\" +\n                (useStyleCache ? \"cache=true, \" : \"cache=false, \") +\n                (fillAreas ? \"fillareas=true, \" : \"fillareas=false, \") +\n                \"fillalpha=\" + fillAlpha + \"%)\");\n\n        getSettings(virtual);\n        useRealWidth = Main.pref.getBoolean(\"mappaint.useRealWidth\",false);\n        zoomLevelDisplay = Main.pref.getBoolean(\"mappaint.zoomLevelDisplay\",false);\n        circum = Main.map.mapView.getScale()*100*Main.proj.scaleFactor()*40041455; // circumference of the earth in meter\n        styles = MapPaintStyles.getStyles().getStyleSet();\n        drawMultipolygon = Main.pref.getBoolean(\"mappaint.multipolygon\",false);\n        orderFont = new Font(Main.pref.get(\"mappaint.font\",\"Helvetica\"), Font.PLAIN, Main.pref.getInteger(\"mappaint.fontsize\", 8));\n        String currentLocale = Locale.getDefault().getLanguage();\n        regionalNameOrder = Main.pref.get(\"mappaint.nameOrder\", \"name:\"+currentLocale+\";name;int_name;ref;operator;brand\").split(\";\");\n\n        alreadyDrawn = new LinkedList<OsmPrimitive>();\n        alreadyDrawnAreas = new LinkedList<Way>();\n        selectedCall = false;\n        \n        profilerVisibleNodes = 0;\n        profilerVisibleWays = 0;\n        profilerVisibleAreas = 0;\n\n        if(profiler)\n        {\n            System.out.format(\"Prepare  : %4dms\\n\", (java.lang.System.currentTimeMillis()-profilerLast));\n            profilerLast = java.lang.System.currentTimeMillis();\n        }\n\n        if (fillAreas && styles != null && styles.hasAreas()) {\n            Collection<Way> noAreaWays = new LinkedList<Way>();\n\n            /*** RELATIONS ***/\n            profilerN = 0;\n            for (final Relation osm : data.relations)\n            {\n                if(!osm.deleted && !osm.incomplete)\n                {\n                    osm.visit(this);\n                    profilerN++;\n                }\n            }\n\n            if(profiler)\n            {\n                System.out.format(\"Relations: %4dms, n=%5d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n\n            /*** AREAS ***/\n            profilerN = 0;\n            for (final Way osm : data.ways)\n            {\n                //if (!osm.incomplete && !osm.deleted && !alreadyDrawn.contains(osm))\n                if (!osm.incomplete && !osm.deleted)\n                {\n                    //if(styles.isArea((Way)osm) && !alreadyDrawnAreas.contains(osm))\n                    if(isPrimitiveArea(osm))\n                    {\n                        osm.visit(this);\n                        profilerN++;\n                    } else\n                        noAreaWays.add((Way)osm);\n                }\n            }\n            alreadyDrawnAreas = null;\n\n            if(profiler)\n            {\n                System.out.format(\"Areas    : %4dms, n=%5d, visible=%d\\n\",\n                    (java.lang.System.currentTimeMillis()-profilerLast), profilerN, profilerVisibleAreas);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n\n            /*** WAYS ***/\n            profilerN = 0;\n            fillAreas = false;\n            for (final OsmPrimitive osm : noAreaWays)\n            {\n                osm.visit(this);\n                profilerN++;\n            }\n\n            if(profiler)\n            {\n                System.out.format(\"Ways     : %4dms, n=%5d, visible=%d\\n\",\n                    (java.lang.System.currentTimeMillis()-profilerLast), profilerN, profilerVisibleWays);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n        }\n        else\n        {\n            /*** WAYS (filling disabled)  ***/\n            profilerN = 0;\n            for (final OsmPrimitive osm : data.ways)\n                if (!osm.incomplete && !osm.deleted && !osm.selected)\n                {\n                    osm.visit(this);\n                    profilerN++;\n                }\n\n            if(profiler)\n            {\n                System.out.format(\"Ways     : %4dms, n=%5d, visible=%d\\n\", \n                    (java.lang.System.currentTimeMillis()-profilerLast), profilerN, profilerVisibleWays);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n        }\n\n        /*** SELECTED  ***/\n        selectedCall = true;\n        profilerN = 0;\n        for (final OsmPrimitive osm : data.getSelected()) {\n            if (!osm.incomplete && !osm.deleted\n            //&& !(osm instanceof Node) && !alreadyDrawn.contains(osm))\n            && !(osm instanceof Node))\n            {\n                osm.visit(this);\n                profilerN++;\n            }\n        }\n\n        if(profiler)\n        {\n            System.out.format(\"Selected : %4dms, n=%5d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n            profilerLast = java.lang.System.currentTimeMillis();\n        }\n\n        /*** DISPLAY CACHED SEGMENTS (WAYS) NOW ***/\n        displaySegments();\n        /*if(profiler)\n        {\n            System.out.format(\"DS       : %4dms\\n\", (java.lang.System.currentTimeMillis()-profilerLast));\n            profilerLast = java.lang.System.currentTimeMillis();\n        }*/\n\n        /*** NODES ***/\n        profilerN = 0;\n        for (final OsmPrimitive osm : data.nodes)\n            //if (!osm.incomplete && !osm.deleted && !alreadyDrawn.contains(osm))\n            if (!osm.incomplete && !osm.deleted)\n            {\n                osm.visit(this);\n                profilerN++;\n            }\n\n        if(profiler)\n        {\n            System.out.format(\"Nodes    : %4dms, n=%5d, visible=%d\\n\",\n                (java.lang.System.currentTimeMillis()-profilerLast), profilerN, profilerVisibleNodes);\n            profilerLast = java.lang.System.currentTimeMillis();\n        }\n\n        alreadyDrawn = null;\n\n        /*** VIRTUAL  ***/\n        if (virtualNodeSize != 0)\n        {\n            profilerN = 0;\n            currentColor = nodeColor;\n            for (final OsmPrimitive osm : data.ways)\n                if (!osm.incomplete && !osm.deleted)\n                {\n                    visitVirtual((Way)osm);\n                    profilerN++;\n                }\n\n            if(profiler)\n            {\n                System.out.format(\"Virtual  : %4dms, n=%5d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n\n            displaySegments(null);\n            /*if(profiler)\n            {\n                System.out.format(\"VirtualDS: %4dms\\n\", (java.lang.System.currentTimeMillis()-profilerLast));\n                profilerLast = java.lang.System.currentTimeMillis();\n            }*/\n        }\n\n        if(profiler)\n        {\n            System.out.format(\"All      : %4dms\\n\", (profilerLast-profilerStart));\n        }\n    }","commit_id":"2ac5c3b9e4c3b58b0892167f6cc5b59007238ecf","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Draw a line for all segments, according to tags.\n     * @param w The way to draw.\n     */\n    public void visit(Way w) {\n        if(w.nodes.size() < 2 && (!selectedCall && w.selected))\n            return;\n\n        // check, if the way is visible at all\n        Polygon polygon = getPolygon(w);\n        if(!isPolygonVisible(polygon))\n            return;\n\n        ElemStyle wayStyle = styles != null ? styles.get(w) : null;\n\n        if(!isZoomOk(wayStyle))\n            return;\n\n        LineElemStyle l = null;\n        Color areacolor = untaggedColor;\n        if(wayStyle!=null)\n        {\n            if(wayStyle instanceof LineElemStyle)\n                l = (LineElemStyle)wayStyle;\n            else if (wayStyle instanceof AreaElemStyle)\n            {\n                areacolor = ((AreaElemStyle)wayStyle).color;\n                l = ((AreaElemStyle)wayStyle).line;\n                if (fillAreas)\n                    drawArea(polygon, w.selected ? selectedColor : areacolor);\n            }\n        }\n\n        drawWay(w, l, areacolor, w.selected);\n    }","id":58189,"modified_method":"/**\n     * Draw a line for all segments, according to tags.\n     * @param w The way to draw.\n     */\n    public void visit(Way w) {\n        if(w.nodes.size() < 2 && (!selectedCall && w.selected))\n            return;\n\n        // check, if the way is visible at all\n        Polygon polygon = getPolygon(w);\n        if(!isPolygonVisible(polygon))\n            return;\n            \n        ElemStyle wayStyle = getPrimitiveStyle(w);\n\n        if(!isZoomOk(wayStyle))\n            return;\n\n        if(wayStyle==null)\n        {\n            // way without style\n            profilerVisibleWays++;\n            drawWay(w, null, untaggedColor, w.selected);\n        }\n        else if(wayStyle instanceof LineElemStyle)\n        {\n            // way with line style\n            profilerVisibleWays++;\n            drawWay(w, (LineElemStyle)wayStyle, untaggedColor, w.selected);\n        }\n        else if (wayStyle instanceof AreaElemStyle)\n        {\n            // way with area style\n            if (fillAreas)\n            {\n                profilerVisibleAreas++;\n                drawArea(polygon, w.selected ? selectedColor : ((AreaElemStyle)wayStyle).color);\n            }\n            drawWay(w, ((AreaElemStyle)wayStyle).line, ((AreaElemStyle)wayStyle).color, w.selected);\n        }\n    }","commit_id":"2ac5c3b9e4c3b58b0892167f6cc5b59007238ecf","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Set the given value to the given key\n     * @param key The key, for which the value is to be set.\n     * @param value The value for the key.\n     */\n    public final void put(String key, String value) {\n        if (value == null)\n            remove(key);\n        else {\n            if (keys == null)\n                keys = new HashMap<String, String>();\n            keys.put(key, value);\n        }\n        checkTagged();\n        checkDirectionTagged();\n    }","id":58190,"modified_method":"/**\n     * Set the given value to the given key\n     * @param key The key, for which the value is to be set.\n     * @param value The value for the key.\n     */\n    public final void put(String key, String value) {\n        if (value == null)\n            remove(key);\n        else {\n            if (keys == null)\n                keys = new HashMap<String, String>();\n            keys.put(key, value);\n        }\n        checkTagged();\n        checkDirectionTagged();\n        mappaintStyle = null;\n    }","commit_id":"2ac5c3b9e4c3b58b0892167f6cc5b59007238ecf","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Get and write all attributes from the parameter. Does not fire any listener, so\n     * use this only in the data initializing phase\n     */\n    public void cloneFrom(OsmPrimitive osm) {\n        keys = osm.keys == null ? null : new HashMap<String, String>(osm.keys);\n        id = osm.id;\n        modified = osm.modified;\n        deleted = osm.deleted;\n        selected = osm.selected;\n        timestamp = osm.timestamp;\n        version = osm.version;\n        tagged = osm.tagged;\n        incomplete = osm.incomplete;\n    }","id":58191,"modified_method":"/**\n     * Get and write all attributes from the parameter. Does not fire any listener, so\n     * use this only in the data initializing phase\n     */\n    public void cloneFrom(OsmPrimitive osm) {\n        keys = osm.keys == null ? null : new HashMap<String, String>(osm.keys);\n        id = osm.id;\n        modified = osm.modified;\n        deleted = osm.deleted;\n        selected = osm.selected;\n        timestamp = osm.timestamp;\n        version = osm.version;\n        tagged = osm.tagged;\n        incomplete = osm.incomplete;\n        mappaintStyle = null;\n    }","commit_id":"2ac5c3b9e4c3b58b0892167f6cc5b59007238ecf","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Remove the given key from the list.\n     */\n    public final void remove(String key) {\n        if (keys != null) {\n            keys.remove(key);\n            if (keys.isEmpty())\n                keys = null;\n        }\n        checkTagged();\n        checkDirectionTagged();\n    }","id":58192,"modified_method":"/**\n     * Remove the given key from the list.\n     */\n    public final void remove(String key) {\n        if (keys != null) {\n            keys.remove(key);\n            if (keys.isEmpty())\n                keys = null;\n        }\n        checkTagged();\n        checkDirectionTagged();\n        mappaintStyle = null;\n    }","commit_id":"2ac5c3b9e4c3b58b0892167f6cc5b59007238ecf","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void copyTo(OsmPrimitive osm) {\n               osm.id = id;\n               osm.keys = keys;\n               osm.modified = modified;\n               osm.selected = selected;\n               osm.deleted = deleted;\n               osm.timestamp = timestamp;\n               osm.user = user;\n               osm.visible = visible;\n               osm.version = version;\n               osm.checkTagged();\n               osm.checkDirectionTagged();\n          }","id":58193,"modified_method":"public void copyTo(OsmPrimitive osm) {\n               osm.id = id;\n               osm.keys = keys;\n               osm.modified = modified;\n               osm.selected = selected;\n               osm.deleted = deleted;\n               osm.timestamp = timestamp;\n               osm.user = user;\n               osm.visible = visible;\n               osm.version = version;\n               osm.checkTagged();\n               osm.checkDirectionTagged();\n               osm.mappaintStyle = null;\n          }","commit_id":"2ac5c3b9e4c3b58b0892167f6cc5b59007238ecf","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void drawSelectedRelation(Relation r)\n    {\n        for (RelationMember m : r.members)\n        {\n            if (m.member != null && !m.member.incomplete && !m.member.deleted\n            && !(m.member instanceof Relation))\n            {\n                /* nodes drawn on second call */\n                if(!(m.member instanceof Node))\n                    drawSelected(m.member, styles != null ? styles.get(m.member)\n                    : null, true, true);\n                alreadyDrawn.add(m.member);\n            }\n        }\n    }","id":58194,"modified_method":"public void drawSelectedRelation(Relation r)\n    {\n        for (RelationMember m : r.members)\n        {\n            if (m.member != null && !m.member.incomplete && !m.member.deleted\n            && !(m.member instanceof Relation))\n            {\n                /* nodes drawn on second call */\n                if(!(m.member instanceof Node))\n                    drawSelected(m.member, styles != null ? styles.get(m.member)\n                    : null, true, true);\n            }\n        }\n    }","commit_id":"2955a30a118ebbd1a0511e01d3660db136149f39","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void drawSelected(OsmPrimitive osm, ElemStyle style, Boolean area,\n    Boolean areaselected)\n    {\n        if(osm instanceof Way)\n        {\n            if(style instanceof AreaElemStyle)\n            {\n                drawWay((Way)osm, ((AreaElemStyle)style).line, selectedColor, true);\n                if(area)\n                    drawArea(getPolygon((Way)osm), areaselected ? selectedColor\n                    : ((AreaElemStyle)style).color);\n            }\n            else\n            {\n                drawWay((Way)osm, (LineElemStyle)style, selectedColor, true);\n            }\n        }\n        else if(osm instanceof Node)\n        {\n            if(style != null && isZoomOk(style))\n                drawNode((Node)osm, ((IconElemStyle)style).icon,\n                ((IconElemStyle)style).annotate, true);\n            else\n                drawNode((Node)osm, selectedColor, selectedNodeSize, selectedNodeRadius, fillSelectedNode);\n        }\n    }","id":58195,"modified_method":"public void drawSelected(OsmPrimitive osm, ElemStyle style, Boolean area,\n    Boolean areaselected)\n    {\n        if(osm instanceof Way)\n        {\n            if(style instanceof AreaElemStyle)\n            {\n                drawWay((Way)osm, ((AreaElemStyle)style).line, selectedColor, true);\n                if(area)\n                    drawArea(getPolygon((Way)osm), areaselected ? selectedColor\n                    : ((AreaElemStyle)style).color);\n            }\n            else\n            {\n                drawWay((Way)osm, (LineElemStyle)style, selectedColor, true);\n            }\n        }\n        else if(osm instanceof Node)\n        {\n            if(style != null && isZoomOk(style))\n                drawNode((Node)osm, ((IconElemStyle)style).icon,\n                ((IconElemStyle)style).annotate, true);\n            else\n                drawNode((Node)osm, selectedColor, selectedNodeSize, selectedNodeRadius, fillSelectedNode);\n        }\n        osm.mappaintDrawnCode = paintid;\n    }","commit_id":"2955a30a118ebbd1a0511e01d3660db136149f39","url":"https://github.com/openstreetmap/josm"},{"original_method":"protected void drawNode(Node n, ImageIcon icon, boolean annotate, Boolean selected) {\n        Point p = nc.getPoint(n.eastNorth);\n        if ((p.x < 0) || (p.y < 0) || (p.x > nc.getWidth()) || (p.y > nc.getHeight())) return;\n        int w = icon.getIconWidth(), h=icon.getIconHeight();\n        icon.paintIcon ( Main.map.mapView, g, p.x-w/2, p.y-h/2 );\n        String name = getNodeName(n);\n        if (name!=null && annotate)\n        {\n            g.setColor(textColor);\n            Font defaultFont = g.getFont();\n            g.setFont (orderFont);\n            g.drawString (name, p.x+w/2+2, p.y+h/2+2);\n            g.setFont(defaultFont);\n        }\n        if (selected)\n        {\n            g.setColor (  selectedColor );\n            g.drawRect (p.x-w/2-2,p.y-w/2-2, w+4, h+4);\n        }\n    }","id":58196,"modified_method":"protected void drawNode(Node n, ImageIcon icon, boolean annotate, Boolean selected) {\n        Point p = nc.getPoint(n.eastNorth);\n        if ((p.x < 0) || (p.y < 0) || (p.x > nc.getWidth()) || (p.y > nc.getHeight())) return;\n        int w = icon.getIconWidth(), h=icon.getIconHeight();\n        icon.paintIcon ( Main.map.mapView, g, p.x-w/2, p.y-h/2 );\n        if(showName)\n        {\n            String name = getNodeName(n);\n            if (name!=null && annotate)\n            {\n                g.setColor(textColor);\n                Font defaultFont = g.getFont();\n                g.setFont (orderFont);\n                g.drawString (name, p.x+w/2+2, p.y+h/2+2);\n                g.setFont(defaultFont);\n            }\n        }\n        if (selected)\n        {\n            g.setColor (  selectedColor );\n            g.drawRect (p.x-w/2-2,p.y-w/2-2, w+4, h+4);\n        }\n    }","commit_id":"2955a30a118ebbd1a0511e01d3660db136149f39","url":"https://github.com/openstreetmap/josm"},{"original_method":"private void drawSeg(Node n1, Node n2, Color col, boolean showDirection, int width, boolean dashed) {\n        if (col != currentColor || width != currentWidth || dashed != currentDashed) {\n            displaySegments(col, width, dashed);\n        }\n        Point p1 = nc.getPoint(n1.eastNorth);\n        Point p2 = nc.getPoint(n2.eastNorth);\n\n        if (!isSegmentVisible(p1, p2)) {\n            return;\n        }\n        currentPath.moveTo(p1.x, p1.y);\n        currentPath.lineTo(p2.x, p2.y);\n\n        if (showDirection) {\n            double t = Math.atan2(p2.y-p1.y, p2.x-p1.x) + Math.PI;\n            currentPath.lineTo((int)(p2.x + 10*Math.cos(t-PHI)), (int)(p2.y + 10*Math.sin(t-PHI)));\n            currentPath.moveTo((int)(p2.x + 10*Math.cos(t+PHI)), (int)(p2.y + 10*Math.sin(t+PHI)));\n            currentPath.lineTo(p2.x, p2.y);\n        }\n    }","id":58197,"modified_method":"private void drawSeg(Node n1, Node n2, Color col, boolean showDirection, int width, boolean dashed) {\n        profilerSegments++;\n        if (col != currentColor || width != currentWidth || dashed != currentDashed) {\n            displaySegments(col, width, dashed);\n        }\n        Point p1 = nc.getPoint(n1.eastNorth);\n        Point p2 = nc.getPoint(n2.eastNorth);\n\n        if (!isSegmentVisible(p1, p2)) {\n            return;\n        }\n        profilerVisibleSegments++;\n        currentPath.moveTo(p1.x, p1.y);\n        currentPath.lineTo(p2.x, p2.y);\n\n        if (showDirection) {\n            double t = Math.atan2(p2.y-p1.y, p2.x-p1.x) + Math.PI;\n            currentPath.lineTo((int)(p2.x + 10*Math.cos(t-PHI)), (int)(p2.y + 10*Math.sin(t-PHI)));\n            currentPath.moveTo((int)(p2.x + 10*Math.cos(t+PHI)), (int)(p2.y + 10*Math.sin(t+PHI)));\n            currentPath.lineTo(p2.x, p2.y);\n        }\n    }","commit_id":"2955a30a118ebbd1a0511e01d3660db136149f39","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void visitAll(DataSet data, Boolean virtual) {\n\n        boolean profiler = Main.pref.getBoolean(\"mappaint.profiler\",false);\n        useStyleCache = Main.pref.getBoolean(\"mappaint.cache\",true);\n        fillAreas = Main.pref.getBoolean(\"mappaint.fillareas\", true);\n        fillAlpha = Math.min(255, Math.max(0, Integer.valueOf(Main.pref.getInteger(\"mappaint.fillalpha\", 50))));\n\n        long profilerStart = java.lang.System.currentTimeMillis();\n        long profilerLast = profilerStart;\n        int profilerN;\n        if(profiler)\n            System.out.println(\"Mappaint Profiler (\" +\n                (useStyleCache ? \"cache=true, \" : \"cache=false, \") +\n                (fillAreas ? \"fillareas=true, \" : \"fillareas=false, \") +\n                \"fillalpha=\" + fillAlpha + \"%)\");\n\n        getSettings(virtual);\n        useRealWidth = Main.pref.getBoolean(\"mappaint.useRealWidth\",false);\n        zoomLevelDisplay = Main.pref.getBoolean(\"mappaint.zoomLevelDisplay\",false);\n        circum = Main.map.mapView.getScale()*100*Main.proj.scaleFactor()*40041455; // circumference of the earth in meter\n        styles = MapPaintStyles.getStyles().getStyleSet();\n        drawMultipolygon = Main.pref.getBoolean(\"mappaint.multipolygon\",false);\n        orderFont = new Font(Main.pref.get(\"mappaint.font\",\"Helvetica\"), Font.PLAIN, Main.pref.getInteger(\"mappaint.fontsize\", 8));\n        String currentLocale = Locale.getDefault().getLanguage();\n        regionalNameOrder = Main.pref.get(\"mappaint.nameOrder\", \"name:\"+currentLocale+\";name;int_name;ref;operator;brand\").split(\";\");\n\n        alreadyDrawn = new LinkedList<OsmPrimitive>();\n        alreadyDrawnAreas = new LinkedList<Way>();\n        selectedCall = false;\n        \n        profilerVisibleNodes = 0;\n        profilerVisibleWays = 0;\n        profilerVisibleAreas = 0;\n\n        if(profiler)\n        {\n            System.out.format(\"Prepare  : %4dms\\n\", (java.lang.System.currentTimeMillis()-profilerLast));\n            profilerLast = java.lang.System.currentTimeMillis();\n        }\n\n        if (fillAreas && styles != null && styles.hasAreas()) {\n            Collection<Way> noAreaWays = new LinkedList<Way>();\n\n            /*** RELATIONS ***/\n            profilerN = 0;\n            for (final Relation osm : data.relations)\n            {\n                if(!osm.deleted && !osm.incomplete)\n                {\n                    osm.visit(this);\n                    profilerN++;\n                }\n            }\n\n            if(profiler)\n            {\n                System.out.format(\"Relations: %4dms, n=%5d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n\n            /*** AREAS ***/\n            profilerN = 0;\n            for (final Way osm : data.ways)\n            {\n                //if (!osm.incomplete && !osm.deleted && !alreadyDrawn.contains(osm))\n                if (!osm.incomplete && !osm.deleted)\n                {\n                    //if(styles.isArea((Way)osm) && !alreadyDrawnAreas.contains(osm))\n                    if(isPrimitiveArea(osm))\n                    {\n                        osm.visit(this);\n                        profilerN++;\n                    } else\n                        noAreaWays.add((Way)osm);\n                }\n            }\n            alreadyDrawnAreas = null;\n\n            if(profiler)\n            {\n                System.out.format(\"Areas    : %4dms, n=%5d, visible=%d\\n\",\n                    (java.lang.System.currentTimeMillis()-profilerLast), profilerN, profilerVisibleAreas);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n\n            /*** WAYS ***/\n            profilerN = 0;\n            fillAreas = false;\n            for (final OsmPrimitive osm : noAreaWays)\n            {\n                osm.visit(this);\n                profilerN++;\n            }\n\n            if(profiler)\n            {\n                System.out.format(\"Ways     : %4dms, n=%5d, visible=%d\\n\",\n                    (java.lang.System.currentTimeMillis()-profilerLast), profilerN, profilerVisibleWays);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n        }\n        else\n        {\n            /*** WAYS (filling disabled)  ***/\n            profilerN = 0;\n            for (final OsmPrimitive osm : data.ways)\n                if (!osm.incomplete && !osm.deleted && !osm.selected)\n                {\n                    osm.visit(this);\n                    profilerN++;\n                }\n\n            if(profiler)\n            {\n                System.out.format(\"Ways     : %4dms, n=%5d, visible=%d\\n\", \n                    (java.lang.System.currentTimeMillis()-profilerLast), profilerN, profilerVisibleWays);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n        }\n\n        /*** SELECTED  ***/\n        selectedCall = true;\n        profilerN = 0;\n        for (final OsmPrimitive osm : data.getSelected()) {\n            if (!osm.incomplete && !osm.deleted\n            //&& !(osm instanceof Node) && !alreadyDrawn.contains(osm))\n            && !(osm instanceof Node))\n            {\n                osm.visit(this);\n                profilerN++;\n            }\n        }\n\n        if(profiler)\n        {\n            System.out.format(\"Selected : %4dms, n=%5d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n            profilerLast = java.lang.System.currentTimeMillis();\n        }\n\n        /*** DISPLAY CACHED SEGMENTS (WAYS) NOW ***/\n        displaySegments();\n        /*if(profiler)\n        {\n            System.out.format(\"DS       : %4dms\\n\", (java.lang.System.currentTimeMillis()-profilerLast));\n            profilerLast = java.lang.System.currentTimeMillis();\n        }*/\n\n        /*** NODES ***/\n        profilerN = 0;\n        for (final OsmPrimitive osm : data.nodes)\n            //if (!osm.incomplete && !osm.deleted && !alreadyDrawn.contains(osm))\n            if (!osm.incomplete && !osm.deleted)\n            {\n                osm.visit(this);\n                profilerN++;\n            }\n\n        if(profiler)\n        {\n            System.out.format(\"Nodes    : %4dms, n=%5d, visible=%d\\n\",\n                (java.lang.System.currentTimeMillis()-profilerLast), profilerN, profilerVisibleNodes);\n            profilerLast = java.lang.System.currentTimeMillis();\n        }\n\n        alreadyDrawn = null;\n\n        /*** VIRTUAL  ***/\n        if (virtualNodeSize != 0)\n        {\n            profilerN = 0;\n            currentColor = nodeColor;\n            for (final OsmPrimitive osm : data.ways)\n                if (!osm.incomplete && !osm.deleted)\n                {\n                    visitVirtual((Way)osm);\n                    profilerN++;\n                }\n\n            if(profiler)\n            {\n                System.out.format(\"Virtual  : %4dms, n=%5d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n\n            displaySegments(null);\n            /*if(profiler)\n            {\n                System.out.format(\"VirtualDS: %4dms\\n\", (java.lang.System.currentTimeMillis()-profilerLast));\n                profilerLast = java.lang.System.currentTimeMillis();\n            }*/\n        }\n\n        if(profiler)\n        {\n            System.out.format(\"All      : %4dms\\n\", (profilerLast-profilerStart));\n        }\n    }","id":58198,"modified_method":"public void visitAll(DataSet data, Boolean virtual) {\n\n        boolean profiler = Main.pref.getBoolean(\"mappaint.profiler\",false);\n        profilerOmitDraw = Main.pref.getBoolean(\"mappaint.profiler.omitdraw\",false);\n        \n        useStyleCache = Main.pref.getBoolean(\"mappaint.cache\",true);\n        fillAreas = Main.pref.getBoolean(\"mappaint.fillareas\", true);\n        fillAlpha = Math.min(255, Math.max(0, Integer.valueOf(Main.pref.getInteger(\"mappaint.fillalpha\", 50))));\n        showName = Main.pref.getBoolean(\"mappaint.showname\", true);\n\n        long profilerStart = java.lang.System.currentTimeMillis();\n        long profilerLast = profilerStart;\n        int profilerN;\n        if(profiler)\n            System.out.println(\"Mappaint Profiler (\" +\n                (useStyleCache ? \"cache=true, \" : \"cache=false, \") +\n                (fillAreas ? \"fillareas=true, \" : \"fillareas=false, \") +\n                \"fillalpha=\" + fillAlpha + \"%)\");\n\n        getSettings(virtual);\n        useRealWidth = Main.pref.getBoolean(\"mappaint.useRealWidth\",false);\n        zoomLevelDisplay = Main.pref.getBoolean(\"mappaint.zoomLevelDisplay\",false);\n        circum = Main.map.mapView.getScale()*100*Main.proj.scaleFactor()*40041455; // circumference of the earth in meter\n        styles = MapPaintStyles.getStyles().getStyleSet();\n        drawMultipolygon = Main.pref.getBoolean(\"mappaint.multipolygon\",true);\n        orderFont = new Font(Main.pref.get(\"mappaint.font\",\"Helvetica\"), Font.PLAIN, Main.pref.getInteger(\"mappaint.fontsize\", 8));\n        String currentLocale = Locale.getDefault().getLanguage();\n        regionalNameOrder = Main.pref.get(\"mappaint.nameOrder\", \"name:\"+currentLocale+\";name;int_name;ref;operator;brand\").split(\";\");\n\n        selectedCall = false;\n        ++paintid;\n        viewid = nc.getViewID();\n\n        profilerVisibleNodes = 0;\n        profilerVisibleWays = 0;\n        profilerVisibleAreas = 0;\n        profilerSegments = 0;\n        profilerVisibleSegments = 0;\n\n        if(profiler)\n        {\n            System.out.format(\"Prepare  : %4dms\\n\", (java.lang.System.currentTimeMillis()-profilerLast));\n            profilerLast = java.lang.System.currentTimeMillis();\n        }\n\n        if (fillAreas && styles != null && styles.hasAreas()) {\n            Collection<Way> noAreaWays = new LinkedList<Way>();\n\n            /*** RELATIONS ***/\n            profilerN = 0;\n            for (final Relation osm : data.relations)\n            {\n                if(!osm.deleted && !osm.incomplete && osm.mappaintVisibleCode != viewid)\n                {\n                    osm.visit(this);\n                    profilerN++;\n                }\n            }\n\n            if(profiler)\n            {\n                System.out.format(\"Relations: %4dms, calls=%5d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n\n            /*** AREAS ***/\n            profilerN = 0;\n            for (final Way osm : data.ways)\n            {\n                if (!osm.incomplete && !osm.deleted\n                && osm.mappaintVisibleCode != viewid && osm.mappaintDrawnCode != paintid)\n                {\n                    if(isPrimitiveArea(osm) && osm.mappaintDrawnAreaCode != paintid)\n                    {\n                        osm.visit(this);\n                        profilerN++;\n                    } else\n                        noAreaWays.add((Way)osm);\n                }\n            }\n\n            if(profiler)\n            {\n                System.out.format(\"Areas    : %4dms, calls=%5d, visible=%d\\n\",\n                    (java.lang.System.currentTimeMillis()-profilerLast), profilerN, profilerVisibleAreas);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n\n            /*** WAYS ***/\n            profilerN = 0;\n            fillAreas = false;\n            for (final OsmPrimitive osm : noAreaWays)\n            {\n                osm.visit(this);\n                profilerN++;\n            }\n\n            if(profiler)\n            {\n                System.out.format(\"Ways     : %4dms, calls=%5d, visible=%d\\n\",\n                    (java.lang.System.currentTimeMillis()-profilerLast), profilerN, profilerVisibleWays);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n        }\n        else\n        {\n            /*** WAYS (filling disabled)  ***/\n            profilerN = 0;\n            for (final OsmPrimitive osm : data.ways)\n                if (!osm.incomplete && !osm.deleted && !osm.selected\n                && osm.mappaintVisibleCode != viewid )\n                {\n                    osm.visit(this);\n                    profilerN++;\n                }\n\n            if(profiler)\n            {\n                System.out.format(\"Ways     : %4dms, calls=%5d, visible=%d\\n\",\n                    (java.lang.System.currentTimeMillis()-profilerLast), profilerN, profilerVisibleWays);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n        }\n\n        /*** SELECTED  ***/\n        selectedCall = true;\n        profilerN = 0;\n        for (final OsmPrimitive osm : data.getSelected()) {\n            if (!osm.incomplete && !osm.deleted && !(osm instanceof Node)\n            && osm.mappaintVisibleCode != viewid && osm.mappaintDrawnCode != paintid)\n            {\n                osm.visit(this);\n                profilerN++;\n            }\n        }\n\n        if(profiler)\n        {\n            System.out.format(\"Selected : %4dms, calls=%5d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n            profilerLast = java.lang.System.currentTimeMillis();\n        }\n\n        /*** DISPLAY CACHED SEGMENTS (WAYS) NOW ***/\n        displaySegments();\n        /*if(profiler)\n        {\n            System.out.format(\"DS       : %4dms\\n\", (java.lang.System.currentTimeMillis()-profilerLast));\n            profilerLast = java.lang.System.currentTimeMillis();\n        }*/\n\n        /*** NODES ***/\n        profilerN = 0;\n        for (final OsmPrimitive osm : data.nodes)\n            if (!osm.incomplete && !osm.deleted\n            && osm.mappaintVisibleCode != viewid && osm.mappaintDrawnCode != paintid)\n            {\n                osm.visit(this);\n                profilerN++;\n            }\n\n        if(profiler)\n        {\n            System.out.format(\"Nodes    : %4dms, calls=%5d, visible=%d\\n\",\n                (java.lang.System.currentTimeMillis()-profilerLast), profilerN, profilerVisibleNodes);\n            profilerLast = java.lang.System.currentTimeMillis();\n        }\n\n        /*** VIRTUAL  ***/\n        if (virtualNodeSize != 0)\n        {\n            profilerN = 0;\n            currentColor = nodeColor;\n            for (final OsmPrimitive osm : data.ways)\n                if (!osm.incomplete && !osm.deleted\n                && osm.mappaintVisibleCode != viewid )\n                {\n                    // TODO: move this into the SimplePaint code?\n                    if(!profilerOmitDraw)\n                        visitVirtual((Way)osm);\n                    profilerN++;\n                }\n\n            if(profiler)\n            {\n                System.out.format(\"Virtual  : %4dms, calls=%5d\\n\", (java.lang.System.currentTimeMillis()-profilerLast), profilerN);\n                profilerLast = java.lang.System.currentTimeMillis();\n            }\n\n            displaySegments(null);\n            /*if(profiler)\n            {\n                System.out.format(\"VirtualDS: %4dms\\n\", (java.lang.System.currentTimeMillis()-profilerLast));\n                profilerLast = java.lang.System.currentTimeMillis();\n            }*/\n        }\n\n        if(profiler)\n        {\n            System.out.format(\"Segments :         calls=%5d, visible=%d\\n\", profilerSegments, profilerVisibleSegments);\n            System.out.format(\"All      : %4dms\\n\", (profilerLast-profilerStart));\n        }\n    }","commit_id":"2955a30a118ebbd1a0511e01d3660db136149f39","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Draw the node as small rectangle with the given color.\n     *\n     * @param n  The node to draw.\n     * @param color The color of the node.\n     */\n    public void drawNode(Node n, Color color, int size, int radius, boolean fill) {\n        if (isZoomOk(null) && size > 1) {\n            Point p = nc.getPoint(n.eastNorth);\n            if ((p.x < 0) || (p.y < 0) || (p.x > nc.getWidth())\n                    || (p.y > nc.getHeight()))\n                return;\n            g.setColor(color);\n            if (fill) {\n                g.fillRect(p.x - radius, p.y - radius, size, size);\n                g.drawRect(p.x - radius, p.y - radius, size, size);\n            } else\n                g.drawRect(p.x - radius, p.y - radius, size, size);\n\n            String name = getNodeName(n);\n            if (name!=null /* && annotate */)\n            {\n                g.setColor(textColor);\n                Font defaultFont = g.getFont();\n                g.setFont (orderFont);\n                g.drawString (name, p.x+radius+2, p.y+radius+2);\n                g.setFont(defaultFont);\n            }\n        }\n    }","id":58199,"modified_method":"/**\n     * Draw the node as small rectangle with the given color.\n     *\n     * @param n  The node to draw.\n     * @param color The color of the node.\n     */\n    public void drawNode(Node n, Color color, int size, int radius, boolean fill) {\n        if (isZoomOk(null) && size > 1) {\n            Point p = nc.getPoint(n.eastNorth);\n            if ((p.x < 0) || (p.y < 0) || (p.x > nc.getWidth())\n                    || (p.y > nc.getHeight()))\n                return;\n            g.setColor(color);\n            if (fill) {\n                g.fillRect(p.x - radius, p.y - radius, size, size);\n                g.drawRect(p.x - radius, p.y - radius, size, size);\n            } else\n                g.drawRect(p.x - radius, p.y - radius, size, size);\n\n            if(showName)\n            {\n                String name = getNodeName(n);\n                if (name!=null /* && annotate */)\n                {\n                    g.setColor(textColor);\n                    Font defaultFont = g.getFont();\n                    g.setFont (orderFont);\n                    g.drawString (name, p.x+radius+2, p.y+radius+2);\n                    g.setFont(defaultFont);\n                }\n            }\n        }\n    }","commit_id":"2955a30a118ebbd1a0511e01d3660db136149f39","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void visit(Relation r) {\n        // draw multipolygon relations including their ways\n        // other relations are only drawn when selected\n        if(r.selected)\n        {\n            if(selectedCall)\n            {\n                for (RelationMember m : r.members)\n                {\n                    /* second call - draw nodes */\n                    if (m.member != null && !m.member.incomplete && !m.member.deleted\n                    && m.member instanceof Node)\n                    {\n                        drawSelected(m.member, styles != null ? styles.get(m.member) : null, true, true);\n                        alreadyDrawn.add(m.member);\n                    }\n                }\n                return;\n            }\n        }\n        if (!drawMultipolygon || r.keys == null || !\"multipolygon\".equals(r.keys.get(\"type\")))\n        {\n            if(r.selected)\n                drawSelectedRelation(r);\n            return;\n        }\n\n        Collection<Way> inner = new LinkedList<Way>();\n        Collection<Way> outer = new LinkedList<Way>();\n        Collection<Way> innerclosed = new LinkedList<Way>();\n        Collection<Way> outerclosed = new LinkedList<Way>();\n        Boolean incomplete = false;\n\n        r.clearErrors();\n\n        for (RelationMember m : r.members)\n        {\n            if(m.member == null) /* Should not happen, must be a bug elsewhere */\n                r.putError(tr(\"Empty member in relation.\"), true);\n            else if(m.member.deleted)\n                r.putError(tr(\"Deleted member ''{0}'' in relation.\",\n                m.member.getName()), true);\n            else if(m.member.incomplete)\n                incomplete = true;\n            else\n            {\n                if(m.member instanceof Way)\n                {\n                    Way w = (Way) m.member;\n                    if(w.nodes.size() < 2)\n                    {\n                        r.putError(tr(\"Way ''{0}'' with less than two points.\",\n                        w.getName()), true);\n                    }\n                    else if(\"inner\".equals(m.role))\n                        inner.add(w);\n                    else if(\"outer\".equals(m.role))\n                        outer.add(w);\n                    else\n                    {\n                        r.putError(tr(\"No useful role ''{0}'' for Way ''{1}''.\",\n                        m.role == null ? \"\" : m.role, w.getName()), true);\n                        if(m.role == null || m.role.length() == 0)\n                            outer.add(w);\n                        else if(r.selected)\n                            drawSelected(m.member, styles != null ? styles.get(m.member) : null, true, true);\n                    }\n                }\n                else\n                {\n                    /* nodes drawn on second call */\n                    r.putError(tr(\"Non-Way ''{0}'' in multipolygon.\",\n                    m.member.getName()), true);\n                }\n            }\n        }\n\n        ElemStyle wayStyle = styles != null ? styles.get(r) : null;\n        /* find one wayStyle, prefer the style from Relation or take the first\n        one of outer rings */\n        if(styles != null && (wayStyle == null || !(wayStyle instanceof AreaElemStyle)))\n        {\n            for (Way w : outer)\n            {\n               if(wayStyle == null || !(wayStyle instanceof AreaElemStyle))\n                   wayStyle = styles.get(w);\n            }\n        }\n\n        if(wayStyle != null && wayStyle instanceof AreaElemStyle)\n        {\n            Boolean zoomok = isZoomOk(wayStyle);\n            Collection<Way> join = new LinkedList<Way>();\n\n            /* parse all outer rings and join them */\n            for (Way w : outer)\n            {\n                if(w.isClosed()) outerclosed.add(w);\n                else join.add(w);\n            }\n            if(join.size() != 0)\n            {\n                for(Way w : joinWays(join, incomplete ? null : r))\n                    outerclosed.add(w);\n            }\n\n            /* parse all inner rings and join them */\n            join.clear();\n            for (Way w : inner)\n            {\n                if(w.isClosed()) innerclosed.add(w);\n                else join.add(w);\n            }\n            if(join.size() != 0)\n            {\n                for(Way w : joinWays(join, incomplete ? null : r))\n                    innerclosed.add(w);\n            }\n\n            if(outerclosed.size() == 0)\n            {\n                r.putError(tr(\"No outer way for multipolygon ''{0}''.\",\n                r.getName()), true);\n            }\n            else if(zoomok) /* draw */\n            {\n                class PolyData {\n                    public Polygon poly = new Polygon();\n                    public Way way;\n                    private Point p = null;\n                    private Collection<Polygon> inner = null;\n                    PolyData(Way w)\n                    {\n                        way = w;\n                        for (Node n : w.nodes)\n                        {\n                            p = nc.getPoint(n.eastNorth);\n                            poly.addPoint(p.x,p.y);\n                        }\n                    }\n                    public int contains(Polygon p)\n                    {\n                        int contains = p.npoints;\n                        for(int i = 0; i < p.npoints; ++i)\n                        {\n                            if(poly.contains(p.xpoints[i],p.ypoints[i]))\n                                --contains;\n                        }\n                        if(contains == 0) return 1; /* inside */\n                        if(contains == p.npoints) return 0; /* outside */\n                        return 2; /* mixed */\n                    }\n                    public void addInner(Polygon p)\n                    {\n                        if(inner == null)\n                            inner = new ArrayList<Polygon>();\n                        inner.add(p);\n                    }\n                    public Polygon get()\n                    {\n                        if(inner != null)\n                        {\n                            for (Polygon pp : inner)\n                            {\n                                for(int i = 0; i < pp.npoints; ++i)\n                                    poly.addPoint(pp.xpoints[i],pp.ypoints[i]);\n                                poly.addPoint(p.x,p.y);\n                            }\n                            inner = null;\n                        }\n                        return poly;\n                    }\n                }\n                LinkedList<PolyData> poly = new LinkedList<PolyData>();\n                for (Way w : outerclosed)\n                {\n                    poly.add(new PolyData(w));\n                }\n                for (Way wInner : innerclosed)\n                {\n                    Polygon polygon = new Polygon();\n\n                    for (Node n : wInner.nodes)\n                    {\n                        Point pInner = nc.getPoint(n.eastNorth);\n                        polygon.addPoint(pInner.x,pInner.y);\n                    }\n                    if(!wInner.isClosed())\n                    {\n                        Point pInner = nc.getPoint(wInner.nodes.get(0).eastNorth);\n                        polygon.addPoint(pInner.x,pInner.y);\n                    }\n                    PolyData o = null;\n                    for (PolyData pd : poly)\n                    {\n                        Integer c = pd.contains(polygon);\n                        if(c >= 1)\n                        {\n                            if(c > 1 && pd.way.isClosed())\n                            {\n                                r.putError(tr(\"Intersection between ways ''{0}'' and ''{1}''.\",\n                                pd.way.getName(), wInner.getName()), true);\n                            }\n                            if(o == null || o.contains(pd.poly) > 0)\n                                o = pd;\n                        }\n                    }\n                    if(o == null)\n                    {\n                        if(!incomplete)\n                        {\n                            r.putError(tr(\"Inner way ''{0}'' is outside.\",\n                            wInner.getName()), true);\n                        }\n                        o = poly.get(0);\n                    }\n                    o.addInner(polygon);\n                }\n                for (PolyData pd : poly)\n                {\n                    drawArea(pd.get(), (pd.way.selected || r.selected) ? selectedColor\n                    : ((AreaElemStyle)wayStyle).color);\n                }\n            }\n            for (Way wInner : inner)\n            {\n                ElemStyle innerStyle = styles.get(wInner);\n                if(innerStyle == null)\n                {\n                    if(zoomok)\n                    {\n                        drawWay(wInner, ((AreaElemStyle)wayStyle).line,\n                        ((AreaElemStyle)wayStyle).color, wInner.selected\n                        || r.selected);\n                    }\n                    alreadyDrawn.add(wInner);\n                }\n                else\n                {\n                    if(r.selected)\n                    {\n                        drawSelected(wInner, innerStyle,\n                        !wayStyle.equals(innerStyle), wInner.selected);\n                        alreadyDrawn.add(wInner);\n                    }\n                    if(wayStyle.equals(innerStyle))\n                    {\n                        r.putError(tr(\"Style for inner way ''{0}'' equals multipolygon.\",\n                        wInner.getName()), false);\n                        if(!r.selected)\n                            alreadyDrawnAreas.add(wInner);\n                    }\n                }\n            }\n            for (Way wOuter : outer)\n            {\n                ElemStyle outerStyle = styles.get(wOuter);\n                if(outerStyle == null)\n                {\n                    if(zoomok)\n                    {\n                        drawWay(wOuter, ((AreaElemStyle)wayStyle).line,\n                        ((AreaElemStyle)wayStyle).color, wOuter.selected\n                        || r.selected);\n                    }\n                    alreadyDrawn.add(wOuter);\n                }\n                else\n                {\n                    if(outerStyle instanceof AreaElemStyle\n                    && !wayStyle.equals(outerStyle))\n                    {\n                        r.putError(tr(\"Style for outer way ''{0}'' mismatches.\",\n                        wOuter.getName()), true);\n                    }\n                    if(r.selected)\n                    {\n                        drawSelected(wOuter, outerStyle, false, false);\n                        alreadyDrawn.add(wOuter);\n                    }\n//                    else if(outerStyle instanceof AreaElemStyle)\n                        alreadyDrawnAreas.add(wOuter);\n                }\n            }\n        }\n        else if(r.selected)\n            drawSelectedRelation(r);\n    }","id":58200,"modified_method":"public void visit(Relation r) {\n   \n        r.mappaintVisibleCode = 0;\n        /* TODO implement visible handling for relations too */\n\n        // TODO: is it possible to do this like the nodes/ways code?\n        if(profilerOmitDraw)\n            return;\n\n        // draw multipolygon relations including their ways\n        // other relations are only drawn when selected\n        if(r.selected && selectedCall)\n        {\n            for (RelationMember m : r.members)\n            {\n                if (m.member != null && !m.member.incomplete && !m.member.deleted\n                && m.member instanceof Node)\n                {\n                    drawSelected(m.member, styles != null ? styles.get(m.member) : null, true, true);\n                }\n            }\n            return;\n        }\n        if (!drawMultipolygon || r.keys == null || !\"multipolygon\".equals(r.keys.get(\"type\")))\n        {\n            if(r.selected)\n                drawSelectedRelation(r);\n            return;\n        }\n\n        Collection<Way> inner = new LinkedList<Way>();\n        Collection<Way> outer = new LinkedList<Way>();\n        Collection<Way> innerclosed = new LinkedList<Way>();\n        Collection<Way> outerclosed = new LinkedList<Way>();\n        Boolean incomplete = false;\n\n        r.clearErrors();\n\n        for (RelationMember m : r.members)\n        {\n            if(m.member == null) \n                r.putError(tr(\"Empty member in relation.\"), true);\n            else if(m.member.deleted)\n                r.putError(tr(\"Deleted member ''{0}'' in relation.\",\n                m.member.getName()), true);\n            else if(m.member.incomplete)\n                incomplete = true;\n            else\n            {\n                if(m.member instanceof Way)\n                {\n                    Way w = (Way) m.member;\n                    if(w.nodes.size() < 2)\n                    {\n                        r.putError(tr(\"Way ''{0}'' with less than two points.\",\n                        w.getName()), true);\n                    }\n                    else if(\"inner\".equals(m.role))\n                        inner.add(w);\n                    else if(\"outer\".equals(m.role))\n                        outer.add(w);\n                    else\n                    {\n                        r.putError(tr(\"No useful role ''{0}'' for Way ''{1}''.\",\n                        m.role == null ? \"\" : m.role, w.getName()), true);\n                        if(m.role == null || m.role.length() == 0)\n                            outer.add(w);\n                        else if(r.selected)\n                            drawSelected(m.member, styles != null ? styles.get(m.member) : null, true, true);\n                    }\n                }\n                else\n                {\n                    r.putError(tr(\"Non-Way ''{0}'' in multipolygon.\",\n                    m.member.getName()), true);\n                }\n            }\n        }\n\n        ElemStyle wayStyle = styles != null ? styles.get(r) : null;\n        if(styles != null && (wayStyle == null || !(wayStyle instanceof AreaElemStyle)))\n        {\n            for (Way w : outer)\n            {\n               if(wayStyle == null || !(wayStyle instanceof AreaElemStyle))\n                   wayStyle = styles.get(w);\n            }\n        }\n\n        if(wayStyle != null && wayStyle instanceof AreaElemStyle)\n        {\n            Boolean zoomok = isZoomOk(wayStyle);\n            Collection<Way> join = new LinkedList<Way>();\n\n            for (Way w : outer)\n            {\n                if(w.isClosed()) outerclosed.add(w);\n                else join.add(w);\n            }\n            if(join.size() != 0)\n            {\n                for(Way w : joinWays(join, incomplete ? null : r))\n                    outerclosed.add(w);\n            }\n\n            join.clear();\n            for (Way w : inner)\n            {\n                if(w.isClosed()) innerclosed.add(w);\n                else join.add(w);\n            }\n            if(join.size() != 0)\n            {\n                for(Way w : joinWays(join, incomplete ? null : r))\n                    innerclosed.add(w);\n            }\n\n            if(outerclosed.size() == 0)\n            {\n                r.putError(tr(\"No outer way for multipolygon ''{0}''.\",\n                r.getName()), true);\n            }\n            else if(zoomok) \n            {\n                class PolyData {\n                    public Polygon poly = new Polygon();\n                    public Way way;\n                    private Point p = null;\n                    private Collection<Polygon> inner = null;\n                    PolyData(Way w)\n                    {\n                        way = w;\n                        for (Node n : w.nodes)\n                        {\n                            p = nc.getPoint(n.eastNorth);\n                            poly.addPoint(p.x,p.y);\n                        }\n                    }\n                    public int contains(Polygon p)\n                    {\n                        int contains = p.npoints;\n                        for(int i = 0; i < p.npoints; ++i)\n                        {\n                            if(poly.contains(p.xpoints[i],p.ypoints[i]))\n                                --contains;\n                        }\n                        if(contains == 0) return 1; \n                        if(contains == p.npoints) return 0; \n                        return 2; \n                    }\n                    public void addInner(Polygon p)\n                    {\n                        if(inner == null)\n                            inner = new ArrayList<Polygon>();\n                        inner.add(p);\n                    }\n                    public Polygon get()\n                    {\n                        if(inner != null)\n                        {\n                            for (Polygon pp : inner)\n                            {\n                                for(int i = 0; i < pp.npoints; ++i)\n                                    poly.addPoint(pp.xpoints[i],pp.ypoints[i]);\n                                poly.addPoint(p.x,p.y);\n                            }\n                            inner = null;\n                        }\n                        return poly;\n                    }\n                }\n                LinkedList<PolyData> poly = new LinkedList<PolyData>();\n                for (Way w : outerclosed)\n                {\n                    poly.add(new PolyData(w));\n                }\n                for (Way wInner : innerclosed)\n                {\n                    Polygon polygon = new Polygon();\n\n                    for (Node n : wInner.nodes)\n                    {\n                        Point pInner = nc.getPoint(n.eastNorth);\n                        polygon.addPoint(pInner.x,pInner.y);\n                    }\n                    if(!wInner.isClosed())\n                    {\n                        Point pInner = nc.getPoint(wInner.nodes.get(0).eastNorth);\n                        polygon.addPoint(pInner.x,pInner.y);\n                    }\n                    PolyData o = null;\n                    for (PolyData pd : poly)\n                    {\n                        Integer c = pd.contains(polygon);\n                        if(c >= 1)\n                        {\n                            if(c > 1 && pd.way.isClosed())\n                            {\n                                r.putError(tr(\"Intersection between ways ''{0}'' and ''{1}''.\",\n                                pd.way.getName(), wInner.getName()), true);\n                            }\n                            if(o == null || o.contains(pd.poly) > 0)\n                                o = pd;\n                        }\n                    }\n                    if(o == null)\n                    {\n                        if(!incomplete)\n                        {\n                            r.putError(tr(\"Inner way ''{0}'' is outside.\",\n                            wInner.getName()), true);\n                        }\n                        o = poly.get(0);\n                    }\n                    o.addInner(polygon);\n                }\n                for (PolyData pd : poly)\n                {\n                    drawArea(pd.get(), (pd.way.selected || r.selected) ? selectedColor\n                    : ((AreaElemStyle)wayStyle).color);\n                }\n            }\n            for (Way wInner : inner)\n            {\n                ElemStyle innerStyle = styles.get(wInner);\n                if(innerStyle == null)\n                {\n                    if(zoomok)\n                    {\n                        drawWay(wInner, ((AreaElemStyle)wayStyle).line,\n                        ((AreaElemStyle)wayStyle).color, wInner.selected\n                        || r.selected);\n                    }\n                    wInner.mappaintDrawnCode = paintid;\n                }\n                else\n                {\n                    if(r.selected)\n                    {\n                        drawSelected(wInner, innerStyle,\n                        !wayStyle.equals(innerStyle), wInner.selected);\n                    }\n                    if(wayStyle.equals(innerStyle))\n                    {\n                        r.putError(tr(\"Style for inner way ''{0}'' equals multipolygon.\",\n                        wInner.getName()), false);\n                        if(!r.selected)\n                            wInner.mappaintDrawnAreaCode = paintid;\n                    }\n                }\n            }\n            for (Way wOuter : outer)\n            {\n                ElemStyle outerStyle = styles.get(wOuter);\n                if(outerStyle == null)\n                {\n                    if(zoomok)\n                    {\n                        drawWay(wOuter, ((AreaElemStyle)wayStyle).line,\n                        ((AreaElemStyle)wayStyle).color, wOuter.selected\n                        || r.selected);\n                    }\n                    wOuter.mappaintDrawnCode = paintid;\n                }\n                else\n                {\n                    if(outerStyle instanceof AreaElemStyle\n                    && !wayStyle.equals(outerStyle))\n                    {\n                        r.putError(tr(\"Style for outer way ''{0}'' mismatches.\",\n                        wOuter.getName()), true);\n                    }\n                    if(r.selected)\n                    {\n                        drawSelected(wOuter, outerStyle, false, false);\n                    }\n                    else if(outerStyle instanceof AreaElemStyle)\n                        wOuter.mappaintDrawnAreaCode = paintid;\n                }\n            }\n        }\n        else if(r.selected)\n            drawSelectedRelation(r);\n    }","commit_id":"2955a30a118ebbd1a0511e01d3660db136149f39","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Draw a line for all segments, according to tags.\n     * @param w The way to draw.\n     */\n    public void visit(Way w) {\n        if(w.nodes.size() < 2 && (!selectedCall && w.selected))\n            return;\n\n        // check, if the way is visible at all\n        Polygon polygon = getPolygon(w);\n        if(!isPolygonVisible(polygon))\n            return;\n            \n        ElemStyle wayStyle = getPrimitiveStyle(w);\n\n        if(!isZoomOk(wayStyle))\n            return;\n\n        if(wayStyle==null)\n        {\n            // way without style\n            profilerVisibleWays++;\n            drawWay(w, null, untaggedColor, w.selected);\n        }\n        else if(wayStyle instanceof LineElemStyle)\n        {\n            // way with line style\n            profilerVisibleWays++;\n            drawWay(w, (LineElemStyle)wayStyle, untaggedColor, w.selected);\n        }\n        else if (wayStyle instanceof AreaElemStyle)\n        {\n            // way with area style\n            if (fillAreas)\n            {\n                profilerVisibleAreas++;\n                drawArea(polygon, w.selected ? selectedColor : ((AreaElemStyle)wayStyle).color);\n            }\n            drawWay(w, ((AreaElemStyle)wayStyle).line, ((AreaElemStyle)wayStyle).color, w.selected);\n        }\n    }","id":58201,"modified_method":"/**\n     * Draw a line for all segments, according to tags.\n     * @param w The way to draw.\n     */\n    public void visit(Way w) {\n        if(w.nodes.size() < 2)\n        {\n            w.mappaintVisibleCode = viewid;\n            return;\n        }\n\n        // check, if the way is visible at all\n        Polygon polygon = getPolygon(w);\n        if(!isPolygonVisible(polygon))\n        {\n            w.mappaintVisibleCode = viewid;\n            return;\n        }\n\n        ElemStyle wayStyle = getPrimitiveStyle(w);\n\n        if(!isZoomOk(wayStyle))\n        {\n            w.mappaintVisibleCode = viewid;\n            return;\n        }\n\n        w.mappaintVisibleCode = 0;\n\n        if(wayStyle==null)\n        {\n            // way without style\n            profilerVisibleWays++;\n            if(!profilerOmitDraw)\n                drawWay(w, null, untaggedColor, w.selected);\n        }\n        else if(wayStyle instanceof LineElemStyle)\n        {\n            // way with line style\n            profilerVisibleWays++;\n            if(!profilerOmitDraw)\n                drawWay(w, (LineElemStyle)wayStyle, untaggedColor, w.selected);\n        }\n        else if (wayStyle instanceof AreaElemStyle)\n        {\n            // way with area style\n            if(!profilerOmitDraw)\n            {\n                if (fillAreas)\n                {\n                    profilerVisibleAreas++;\n                    drawArea(polygon, w.selected ? selectedColor : ((AreaElemStyle)wayStyle).color);\n                }\n                drawWay(w, ((AreaElemStyle)wayStyle).line, ((AreaElemStyle)wayStyle).color, w.selected);\n            }\n        }\n    }","commit_id":"2955a30a118ebbd1a0511e01d3660db136149f39","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Draw a small rectangle.\n     * White if selected (as always) or red otherwise.\n     *\n     * @param n The node to draw.\n     */\n    public void visit(Node n) {\n        // check, if the node is visible at all\n        Point p = nc.getPoint(n.eastNorth);\n        if ((!selectedCall && n.selected) || (p.x < 0) || (p.y < 0)\n        || (p.x > nc.getWidth()) || (p.y > nc.getHeight())) return;\n        \n        profilerVisibleNodes++;\n        \n        IconElemStyle nodeStyle = (IconElemStyle)getPrimitiveStyle(n);\n        if (nodeStyle != null && isZoomOk(nodeStyle))\n            drawNode(n, nodeStyle.icon, nodeStyle.annotate, n.selected);\n        else if (n.selected)\n            drawNode(n, selectedColor, selectedNodeSize, selectedNodeRadius, fillSelectedNode);\n        else if (n.tagged)\n            drawNode(n, nodeColor, taggedNodeSize, taggedNodeRadius, fillUnselectedNode);\n        else\n            drawNode(n, nodeColor, unselectedNodeSize, unselectedNodeRadius, fillUnselectedNode);\n    }","id":58202,"modified_method":"/**\n     * Draw a small rectangle.\n     * White if selected (as always) or red otherwise.\n     *\n     * @param n The node to draw.\n     */\n    public void visit(Node n) {\n        // check, if the node is visible at all\n        Point p = nc.getPoint(n.eastNorth);\n        if ((p.x < 0) || (p.y < 0) || (p.x > nc.getWidth()) || (p.y > nc.getHeight()))\n        {\n            n.mappaintVisibleCode = viewid;\n            return;\n        }\n        n.mappaintVisibleCode = 0;\n\n        profilerVisibleNodes++;\n        \n        IconElemStyle nodeStyle = (IconElemStyle)getPrimitiveStyle(n);\n\n        if(profilerOmitDraw)\n            return;\n            \n        if (nodeStyle != null && isZoomOk(nodeStyle))\n            drawNode(n, nodeStyle.icon, nodeStyle.annotate, n.selected);\n        else if (n.selected)\n            drawNode(n, selectedColor, selectedNodeSize, selectedNodeRadius, fillSelectedNode);\n        else if (n.tagged)\n            drawNode(n, nodeColor, taggedNodeSize, taggedNodeRadius, fillUnselectedNode);\n        else\n            drawNode(n, nodeColor, unselectedNodeSize, unselectedNodeRadius, fillUnselectedNode);\n    }","commit_id":"2955a30a118ebbd1a0511e01d3660db136149f39","url":"https://github.com/openstreetmap/josm"},{"original_method":"public List<HTribe> getLatestTribes(){\n\t\treturn entityManager.createQuery(\"select t from HTribe t\").getResultList();\n\t}","id":58203,"modified_method":"public List<HTribe> getLatestTribes(){\n\t\t// NB ULocale data isn't stored in the database, so we have \n\t\t// to do a post-select sort.\n\t\tList<HTribe> tribes = entityManager.createQuery(\"select t from HTribe t\").getResultList();\n\n\t\t// This Comparator isn't complete enough for general use, but it should work \n\t\tCollections.sort(tribes, new TribeComparator());\n\t\treturn tribes;\n\t}","commit_id":"8e0cdf46e3f16bd0765f929c07a8d844be280ee9","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<HProject> searchQuery(@Nonnull String searchQuery,\n            int maxResult, int firstResult) throws ParseException {\n\n        searchQuery = QueryParser.escape(searchQuery);\n\n        PrefixQuery slugQuery = new PrefixQuery(new Term(\"slug\", searchQuery));\n        PrefixQuery nameQuery = new PrefixQuery(new Term(\"name\", searchQuery));\n        PrefixQuery descQuery =\n                new PrefixQuery(new Term(\"description\", searchQuery));\n\n        BooleanQuery booleanQuery = new BooleanQuery();\n        booleanQuery.add(slugQuery, BooleanClause.Occur.SHOULD);\n        booleanQuery.add(nameQuery, BooleanClause.Occur.SHOULD);\n        booleanQuery.add(descQuery, BooleanClause.Occur.SHOULD);\n\n        FullTextQuery query =\n                entityManager.createFullTextQuery(booleanQuery, HProject.class);\n        query.setMaxResults(maxResult).setFirstResult(firstResult)\n                .getResultList();\n\n        @SuppressWarnings(\"unchecked\")\n        List<HProject> resultList = query.getResultList();\n        return resultList;\n    }","id":58204,"modified_method":"public List<HProject> searchQuery(@Nonnull String searchQuery,\n            int maxResult, int firstResult, boolean includeObsolete)\n            throws ParseException {\n        FullTextQuery query = getTextQuery(searchQuery, includeObsolete);\n        query.setMaxResults(maxResult).setFirstResult(firstResult)\n                .getResultList();\n\n        return query.getResultList();\n    }","commit_id":"87dacec9d4d852bb48104ba0d7f0cbf468df785c","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n     * Return results on project search\n     *\n     * @param query\n     */\n    public List<SearchResult> suggestProjects(String query) {\n        searchQuery = query;\n        List<SearchResult> result = Lists.newArrayList();\n        if (StringUtils.isEmpty(searchQuery)) {\n            return result;\n        }\n        try {\n            for (HProject project : projectDAO.searchQuery(searchQuery,\n                    INITIAL_RESULT_COUNT, 0)) {\n                result.add(new SearchResult(project, searchQuery));\n            }\n            result.add(new SearchResult(searchQuery));\n            return result;\n        } catch (ParseException pe) {\n            return result;\n        }\n    }","id":58205,"modified_method":"/**\n     * Return results on project search\n     */\n    public List<SearchResult> suggestProjects() {\n        List<SearchResult> result = Lists.newArrayList();\n        if (StringUtils.isEmpty(suggestQuery)) {\n            return result;\n        }\n        try {\n            List<HProject> searchResult =\n                    projectDAO\n                            .searchQuery(suggestQuery, INITIAL_RESULT_COUNT, 0,\n                                    identity.hasPermission(\"HProject\",\n                                            \"view-obsolete\"));\n\n            for (HProject project : searchResult) {\n                result.add(new SearchResult(project));\n            }\n            result.add(new SearchResult());\n            return result;\n        } catch (ParseException pe) {\n            return result;\n        }\n    }","commit_id":"87dacec9d4d852bb48104ba0d7f0cbf468df785c","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<HLocale> suggestLocales(final String query) {\n        List<HLocale> localeList = localeServiceImpl.getSupportedLocales();\n\n        Collection<HLocale> filtered =\n                Collections2.filter(localeList, new Predicate<HLocale>() {\n                    @Override\n                    public boolean apply(@Nullable HLocale input) {\n                        if (StringUtils.isEmpty(query)) {\n                            return !getInstance().getActiveLocales().contains(\n                                    input);\n                        }\n                        return !getInstance().getActiveLocales()\n                                .contains(input)\n                                && (input.getLocaleId().getId()\n                                        .startsWith(query) || input\n                                        .retrieveDisplayName().toLowerCase()\n                                        .contains(query.toLowerCase()));\n                    }\n                });\n\n        return Lists.newArrayList(filtered);\n    }","id":58206,"modified_method":"public List<HLocale> suggestLocales() {\n        if (StringUtils.isEmpty(languageQuery)) {\n            return Lists.newArrayList();\n        }\n\n        List<HLocale> localeList = localeServiceImpl.getSupportedLocales();\n\n        Collection<HLocale> filtered =\n                Collections2.filter(localeList, new Predicate<HLocale>() {\n                    @Override\n                    public boolean apply(@Nullable HLocale input) {\n                        return !getInstance().getActiveLocales()\n                                .contains(input)\n                                && (input.getLocaleId().getId()\n                                        .startsWith(languageQuery) || input\n                                        .retrieveDisplayName().toLowerCase()\n                                        .contains(languageQuery.toLowerCase()));\n                    }\n                });\n\n        return Lists.newArrayList(filtered);\n    }","commit_id":"87dacec9d4d852bb48104ba0d7f0cbf468df785c","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<HProjectIteration> suggestVersions(final String query) {\n        List<HProjectIteration> versionList =\n                versionGroupServiceImpl.searchLikeSlugOrProjectSlug(query);\n\n        Collection<HProjectIteration> filtered =\n                Collections2.filter(versionList,\n                        new Predicate<HProjectIteration>() {\n                            @Override\n                            public boolean apply(\n                                    @Nullable HProjectIteration input) {\n                                return !input.getGroups().contains(\n                                        getInstance());\n                            }\n                        });\n\n        return Lists.newArrayList(filtered);\n    }","id":58207,"modified_method":"public List<HProjectIteration> suggestVersions() {\n        List<HProjectIteration> versionList =\n                versionGroupServiceImpl\n                        .searchLikeSlugOrProjectSlug(versionQuery);\n\n        Collection<HProjectIteration> filtered =\n                Collections2.filter(versionList,\n                        new Predicate<HProjectIteration>() {\n                            @Override\n                            public boolean apply(\n                                    @Nullable HProjectIteration input) {\n                                return !input.getGroups().contains(\n                                        getInstance());\n                            }\n                        });\n\n        return Lists.newArrayList(filtered);\n    }","commit_id":"87dacec9d4d852bb48104ba0d7f0cbf468df785c","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<HPerson> suggestMaintainers(final String query) {\n        List<HPerson> personList = personDAO.findAllContainingName(query);\n\n        Collection<HPerson> filtered =\n                Collections2.filter(personList, new Predicate<HPerson>() {\n                    @Override\n                    public boolean apply(@Nullable HPerson input) {\n                        return !getInstance().getMaintainers().contains(input);\n                    }\n                });\n\n        return Lists.newArrayList(filtered);\n    }","id":58208,"modified_method":"public List<HPerson> suggestMaintainers() {\n        List<HPerson> personList =\n                personDAO.findAllContainingName(maintainerQuery);\n\n        Collection<HPerson> filtered =\n                Collections2.filter(personList, new Predicate<HPerson>() {\n                    @Override\n                    public boolean apply(@Nullable HPerson input) {\n                        return !getInstance().getMaintainers().contains(input);\n                    }\n                });\n\n        return Lists.newArrayList(filtered);\n    }","commit_id":"87dacec9d4d852bb48104ba0d7f0cbf468df785c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Restrict(\"#{s:hasPermission(versionGroupHome.instance, 'update')}\")\n    public void addLanguage() {\n        if (StringUtils.isEmpty(newLanguage)) {\n            return;\n        }\n        String localeId = newLanguage.split(\"\\\\[\")[1].replace(\"]\", \"\");\n\n        HLocale locale = localeServiceImpl.getByLocaleId(localeId);\n\n        getInstance().getActiveLocales().add(locale);\n        super.update();\n        newLanguage = \"\";\n\n        addMessage(\n                StatusMessage.Severity.INFO,\n                zanataMessages.getMessage(\"jsf.LanguageAddedToGroup\",\n                        locale.retrieveDisplayName()));\n    }","id":58209,"modified_method":"@Restrict(\"#{s:hasPermission(versionGroupHome.instance, 'update')}\")\n    public void addLanguage() {\n        if (StringUtils.isEmpty(selectedLocale)) {\n            return;\n        }\n\n        HLocale locale = localeServiceImpl.getByLocaleId(selectedLocale);\n\n        getInstance().getActiveLocales().add(locale);\n        super.update();\n        selectedLocale = \"\";\n        languageQuery = \"\";\n\n        addMessage(\n                StatusMessage.Severity.INFO,\n                zanataMessages.getMessage(\"jsf.LanguageAddedToGroup\",\n                        locale.retrieveDisplayName()));\n    }","commit_id":"87dacec9d4d852bb48104ba0d7f0cbf468df785c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Restrict(\"#{s:hasPermission(versionGroupHome.instance, 'update')}\")\n    public void addMaintainer() {\n        if (StringUtils.isEmpty(newMaintainer)) {\n            return;\n        }\n        String[] maintainerName = newMaintainer.split(\"@\");\n\n        HPerson maintainer = personDAO.findByUsername(maintainerName[1]);\n        getInstance().getMaintainers().add(maintainer);\n        super.update();\n        this.newMaintainer = \"\";\n\n        addMessage(StatusMessage.Severity.INFO, zanataMessages.getMessage(\n                \"jsf.MaintainerAddedToGroup\", maintainer.getName()));\n    }","id":58210,"modified_method":"@Restrict(\"#{s:hasPermission(versionGroupHome.instance, 'update')}\")\n    public void addMaintainer() {\n        if (StringUtils.isEmpty(selectedMaintainer)) {\n            return;\n        }\n\n        HPerson maintainer = personDAO.findByUsername(selectedMaintainer);\n        getInstance().getMaintainers().add(maintainer);\n        super.update();\n        selectedMaintainer = \"\";\n        maintainerQuery = \"\";\n\n        addMessage(StatusMessage.Severity.INFO, zanataMessages.getMessage(\n                \"jsf.MaintainerAddedToGroup\", maintainer.getName()));\n    }","commit_id":"87dacec9d4d852bb48104ba0d7f0cbf468df785c","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Restrict(\"#{s:hasPermission(versionGroupHome.instance, 'update')}\")\n    public void addVersion() {\n        if (StringUtils.isEmpty(newVersion)) {\n            return;\n        }\n\n        String[] slugs = newVersion.split(\" \");\n\n        HProjectIteration version =\n                projectIterationDAO.getBySlug(slugs[0], slugs[1]);\n        getInstance().getProjectIterations().add(version);\n        super.update();\n        this.newVersion = \"\";\n\n        addMessage(\n                StatusMessage.Severity.INFO,\n                zanataMessages.getMessage(\"jsf.VersionAddedToGroup\",\n                        version.getSlug(), version.getProject().getSlug()));\n    }","id":58211,"modified_method":"@Restrict(\"#{s:hasPermission(versionGroupHome.instance, 'update')}\")\n    public void addVersion() {\n        if (StringUtils.isEmpty(selectedVersion)) {\n            return;\n        }\n\n        HProjectIteration version =\n                projectIterationDAO.findById(new Long(selectedVersion));\n        getInstance().getProjectIterations().add(version);\n        super.update();\n        selectedVersion = \"\";\n        versionQuery = \"\";\n\n        addMessage(\n                StatusMessage.Severity.INFO,\n                zanataMessages.getMessage(\"jsf.VersionAddedToGroup\",\n                        version.getSlug(), version.getProject().getSlug()));\n    }","commit_id":"87dacec9d4d852bb48104ba0d7f0cbf468df785c","url":"https://github.com/zanata/zanata-server"},{"original_method":"protected CriteriaQuery<PortalEvent> buildFindPortalEventsForTimeRangeQuery(final CriteriaBuilder cb) {\n        final CriteriaQuery<PortalEvent> criteriaQuery = cb.createQuery(PortalEvent.class);\n        final Root<PortalEvent> entityRoot = criteriaQuery.from(PortalEvent.class);\n        criteriaQuery.select(entityRoot);\n        criteriaQuery.where(\n            cb.and(\n                cb.ge(entityRoot.get(PortalEvent_.timestamp), this.startTimeParameter),\n                cb.lessThan(entityRoot.get(PortalEvent_.timestamp), this.endTimeParameter)\n            )\n        );\n        criteriaQuery.orderBy(cb.asc(entityRoot.get(PortalEvent_.timestamp)));\n        \n        return criteriaQuery;\n    }","id":58212,"modified_method":"protected CriteriaQuery<PersistentPortalEvent> buildFindPortalEventsForTimeRangeQuery(final CriteriaBuilder cb) {\n        final CriteriaQuery<PersistentPortalEvent> criteriaQuery = cb.createQuery(PersistentPortalEvent.class);\n        final Root<PersistentPortalEvent> entityRoot = criteriaQuery.from(PersistentPortalEvent.class);\n        criteriaQuery.select(entityRoot);\n        criteriaQuery.where(\n            cb.and(\n                cb.greaterThan(entityRoot.get(PersistentPortalEvent_.timestamp), this.startTimeParameter),\n                cb.lessThan(entityRoot.get(PersistentPortalEvent_.timestamp), this.endTimeParameter)\n            )\n        );\n        criteriaQuery.orderBy(cb.asc(entityRoot.get(PersistentPortalEvent_.timestamp)));\n        \n        return criteriaQuery;\n    }","commit_id":"9a6dda6293f3c7c7e66092ec675208f77c103966","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n    public List<PortalEvent> getPortalEvents(long startTime, long endTime) {\n        final TypedQuery<PortalEvent> query = this.getEntityManager().createQuery(this.findPortalEventsForTimeRangeQuery);\n        query.setParameter(this.startTimeParameter, startTime);\n        query.setParameter(this.endTimeParameter, endTime);\n        \n        return new ArrayList<PortalEvent>(query.getResultList());\n    }","id":58213,"modified_method":"@Override\n    public List<PortalEvent> getPortalEvents(long startTime, long endTime) {\n        final TypedQuery<PersistentPortalEvent> query = this.getEntityManager().createQuery(this.findPortalEventsForTimeRangeQuery);\n        query.setParameter(this.startTimeParameter, new Date(startTime));\n        query.setParameter(this.endTimeParameter, new Date(endTime));\n        \n        final List<PersistentPortalEvent> resultList = query.getResultList();\n        \n        return Lists.transform(resultList, new Function<PersistentPortalEvent, PortalEvent>() {\n            @Override\n            public PortalEvent apply(PersistentPortalEvent input) {\n                return input.getPortalEvent();\n            }\n        });\n    }","commit_id":"9a6dda6293f3c7c7e66092ec675208f77c103966","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n    protected void buildCriteriaQueries(CriteriaBuilder cb) {\n        this.startTimeParameter = cb.parameter(Long.class, \"startTime\");\n        this.endTimeParameter = cb.parameter(Long.class, \"endTime\");\n        \n        this.findPortalEventsForTimeRangeQuery = this.buildFindPortalEventsForTimeRangeQuery(cb);\n    }","id":58214,"modified_method":"@Override\n    protected void buildCriteriaQueries(CriteriaBuilder cb) {\n        this.startTimeParameter = cb.parameter(Date.class, \"startTime\");\n        this.endTimeParameter = cb.parameter(Date.class, \"endTime\");\n        \n        this.findPortalEventsForTimeRangeQuery = this.buildFindPortalEventsForTimeRangeQuery(cb);\n    }","commit_id":"9a6dda6293f3c7c7e66092ec675208f77c103966","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * @return the layoutOwnerPerson\n     */\n    public IPerson getLayoutOwnerPerson() {\n        return this.layoutOwnerPerson;\n    }","id":58215,"modified_method":"/**\n     * @return the layoutOwnerPerson, may be null, if so fall back to {@link #getLayoutOwner()}\n     */\n    public IPerson getLayoutOwnerPerson() {\n        return this.layoutOwnerPerson;\n    }","commit_id":"9a6dda6293f3c7c7e66092ec675208f77c103966","url":"https://github.com/Jasig/uPortal"},{"original_method":"LoginEvent(PortalEventBuilder eventBuilder, \n            Set<String> groups, Map<String, List<String>> attributes) {\n        super(eventBuilder);\n        Validate.notNull(groups, \"groups\");\n        Validate.notNull(attributes, \"attributes\");\n        \n        this.groups = new LinkedHashSet<String>(groups);\n        this.attributes = new ArrayList<UserAttributeList>(attributes.size());\n        for (final Map.Entry<String, List<String>> attributeEntry : attributes.entrySet()) {\n            this.attributes.add(new UserAttributeList(attributeEntry.getKey(), attributeEntry.getValue()));\n        }\n    }","id":58216,"modified_method":"LoginEvent(PortalEventBuilder eventBuilder, \n            Set<String> groups, Map<String, List<String>> attributes) {\n        super(eventBuilder);\n        Validate.notNull(groups, \"groups\");\n        Validate.notNull(attributes, \"attributes\");\n        \n        this.groups = ImmutableSet.copyOf(groups);\n        \n        final Builder<String, List<String>> attributesBuilder = ImmutableMap.builder();\n        for (final Map.Entry<String, List<String>> attributeEntry : attributes.entrySet()) {\n            attributesBuilder.put(attributeEntry.getKey(), ImmutableList.copyOf(attributeEntry.getValue()));\n        }\n        this.attributes = attributesBuilder.build();\n    }","commit_id":"9a6dda6293f3c7c7e66092ec675208f77c103966","url":"https://github.com/Jasig/uPortal"},{"original_method":"@SuppressWarnings(\"unused\")\n    private LoginEvent() {\n        super();\n        this.groups = null;\n        this.attributes = null;\n    }","id":58217,"modified_method":"@SuppressWarnings(\"unused\")\n    private LoginEvent() {\n        super();\n        this.groups = Collections.emptySet();\n        this.attributes = Collections.emptyMap();\n    }","commit_id":"9a6dda6293f3c7c7e66092ec675208f77c103966","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * @return The attributes the user had at login\n     */\n    public Map<String, List<String>> getAttributes() {\n        final Builder<String, List<String>> attributesBuilder = ImmutableMap.builder();\n        for (final UserAttributeList userAttributeList : this.attributes) {\n            attributesBuilder.put(userAttributeList.getName(), userAttributeList.getValues());\n        }\n        return attributesBuilder.build();\n    }","id":58218,"modified_method":"/**\n     * @return The attributes the user had at login\n     */\n    public Map<String, List<String>> getAttributes() {\n        return this.attributes;\n    }","commit_id":"9a6dda6293f3c7c7e66092ec675208f77c103966","url":"https://github.com/Jasig/uPortal"},{"original_method":"PortalEvent(PortalEventBuilder eventBuilder) {\n        super(eventBuilder.source);\n        \n        this.id = -1;\n        this.serverName = eventBuilder.serverName;\n        this.eventSessionId = eventBuilder.eventSessionId;\n        this.person = eventBuilder.person;\n        this.userName = this.person.getUserName();\n    }","id":58219,"modified_method":"PortalEvent(PortalEventBuilder eventBuilder) {\n        super(eventBuilder.source);\n        \n        this.serverId = eventBuilder.serverName;\n        this.eventSessionId = eventBuilder.eventSessionId;\n        this.person = eventBuilder.person;\n        this.userName = this.person.getUserName();\n    }","commit_id":"9a6dda6293f3c7c7e66092ec675208f77c103966","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * @return the serverName that created the event\n     */\n    public final String getServerId() {\n        return this.serverName;\n    }","id":58220,"modified_method":"/**\n     * @return the serverId that created the event\n     */\n    public final String getServerId() {\n        return this.serverId;\n    }","commit_id":"9a6dda6293f3c7c7e66092ec675208f77c103966","url":"https://github.com/Jasig/uPortal"},{"original_method":"PortalEvent() {\n        super(UNKNOWN_SOURCE);\n        this.id = -1;\n        this.serverName = null;\n        this.eventSessionId = null;\n        this.person = null;\n        this.userName = null;\n    }","id":58221,"modified_method":"PortalEvent() {\n        super(UNKNOWN_SOURCE);\n        this.serverId = null;\n        this.eventSessionId = null;\n        this.person = null;\n        this.userName = null;\n    }","commit_id":"9a6dda6293f3c7c7e66092ec675208f77c103966","url":"https://github.com/Jasig/uPortal"},{"original_method":"PortalEventBuilder(Object source, String serverName, String eventSessionId, IPerson person) {\n            Validate.notNull(source, \"source\");\n            Validate.notNull(serverName, \"serverName\");\n            Validate.notNull(eventSessionId, \"eventSessionId\");\n            Validate.notNull(person, \"person\");\n            \n            this.source = source;\n            this.serverName = serverName;\n            this.eventSessionId = eventSessionId;\n            this.person = person;\n        }","id":58222,"modified_method":"PortalEventBuilder(Object source, String serverName, String eventSessionId, IPerson person) {\n            Validate.notNull(source, \"source\");\n            Validate.notNull(serverName, \"serverId\");\n            Validate.notNull(eventSessionId, \"eventSessionId\");\n            Validate.notNull(person, \"person\");\n            \n            this.source = source;\n            this.serverName = serverName;\n            this.eventSessionId = eventSessionId;\n            this.person = person;\n        }","commit_id":"9a6dda6293f3c7c7e66092ec675208f77c103966","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n    public String toString() {\n        return this.getClass().getSimpleName() + \" [id=\" + this.id + \n                \", serverName=\" + this.serverName +\n                \", eventSessionId=\" + this.eventSessionId + \n                \", userName=\" + this.userName + \n                \", timestampAsDate=\" + this.getTimestampAsDate();\n    }","id":58223,"modified_method":"@Override\n    public String toString() {\n        return this.getClass().getSimpleName() + \" [serverId=\" + this.serverId +\n                \", eventSessionId=\" + this.eventSessionId + \n                \", userName=\" + this.userName + \n                \", timestampAsDate=\" + this.getTimestampAsDate();\n    }","commit_id":"9a6dda6293f3c7c7e66092ec675208f77c103966","url":"https://github.com/Jasig/uPortal"},{"original_method":"public Set<LocaleId> getTargetLocales(HDocument hDoc)\n   {\n      @SuppressWarnings(\"unchecked\")\n      // @formatter:off\n      // TODO should this use UNIQUE?\n      Query q = getSession().createQuery(\n            \"select tft.locale from HTextFlowTarget tft \" +\n            \"where tft.textFlow.document = :document\");\n      q.setParameter(\"document\", hDoc);\n      List<LocaleId> locales = q.list();\n      // @formatter:on\n      return new HashSet<LocaleId>(locales);\n   }","id":58224,"modified_method":"public Set<LocaleId> getTargetLocales(HDocument hDoc)\n   {\n      // @formatter:off\n      // TODO should this use UNIQUE?\n      Query q = getSession().createQuery(\n            \"select tft.locale from HTextFlowTarget tft \" +\n            \"where tft.textFlow.document = :document\");\n      q.setParameter(\"document\", hDoc);\n      @SuppressWarnings(\"unchecked\")\n      List<LocaleId> locales = q.list();\n      // @formatter:on\n      return new HashSet<LocaleId>(locales);\n   }","commit_id":"071b6b673ad119c93fe9aacd01903eb23627c2cb","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<HProject> searchQuery(String searchQuery, int maxResult, int firstResult) throws ParseException\n   {\n      String[] projectFields = { \"slug\", \"name\", \"description\" };\n      QueryParser parser = new MultiFieldQueryParser(Version.LUCENE_29, projectFields, new StandardAnalyzer(Version.LUCENE_24));\n      parser.setAllowLeadingWildcard(true);\n      org.apache.lucene.search.Query luceneQuery = parser.parse(QueryParser.escape(searchQuery));\n      FullTextQuery query=  entityManager.createFullTextQuery(luceneQuery, HProject.class);\n      query.setMaxResults(maxResult).setFirstResult(firstResult).getResultList();\n\n      return query.getResultList();\n   }","id":58225,"modified_method":"public List<HProject> searchQuery(String searchQuery, int maxResult, int firstResult) throws ParseException\n   {\n      String[] projectFields = { \"slug\", \"name\", \"description\" };\n      QueryParser parser = new MultiFieldQueryParser(Version.LUCENE_29, projectFields, new StandardAnalyzer(Version.LUCENE_24));\n      parser.setAllowLeadingWildcard(true);\n      org.apache.lucene.search.Query luceneQuery = parser.parse(QueryParser.escape(searchQuery));\n      FullTextQuery query=  entityManager.createFullTextQuery(luceneQuery, HProject.class);\n      query.setMaxResults(maxResult).setFirstResult(firstResult).getResultList();\n\n      @SuppressWarnings(\"unchecked\")\n      List<HProject> resultList = query.getResultList();\n      return resultList;\n   }","commit_id":"071b6b673ad119c93fe9aacd01903eb23627c2cb","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n    * @see DocumentDAO#getStatistics(long, LocaleId)\n    * @param iterationId\n    * @param localeId\n    * @return\n    */\n   public TransUnitCount getStatisticsForContainer(Long iterationId, LocaleId localeId)\n   {\n\n      @SuppressWarnings(\"unchecked\")\n      // @formatter:off\n      Query q = getSession().createQuery(\"select new org.zanata.model.StatusCount(tft.state, count(tft)) \" +\n         \"from HTextFlowTarget tft \" + \n         \"where tft.textFlow.document.projectIteration.id = :id \" + \n         \"  and tft.locale.localeId = :locale\" +\n         \" and tft.textFlow.obsolete = false\" + \n         \" and tft.textFlow.document.obsolete = false\" + \n         \" group by tft.state\");\n      // @formatter:on\n      q.setParameter(\"id\", iterationId)\n            .setParameter(\"locale\", localeId);\n      q.setCacheable(true).setComment(\"ProjectIterationDAO.getStatisticsForContainer\");\n      List<StatusCount> stats = q.list();\n\n      TransUnitCount stat = new TransUnitCount();\n\n      for (StatusCount count : stats)\n      {\n         stat.set(count.status, count.count.intValue());\n      }\n\n      Long totalCount = getTotalCountForIteration(iterationId);\n\n      stat.set(ContentState.New, totalCount.intValue() - (stat.getApproved() + stat.getNeedReview()));\n\n      return stat;\n   }","id":58226,"modified_method":"/**\n    * @see DocumentDAO#getStatistics(long, LocaleId)\n    * @param iterationId\n    * @param localeId\n    * @return\n    */\n   public TransUnitCount getStatisticsForContainer(Long iterationId, LocaleId localeId)\n   {\n\n      // @formatter:off\n      Query q = getSession().createQuery(\"select new org.zanata.model.StatusCount(tft.state, count(tft)) \" +\n         \"from HTextFlowTarget tft \" + \n         \"where tft.textFlow.document.projectIteration.id = :id \" + \n         \"  and tft.locale.localeId = :locale\" +\n         \" and tft.textFlow.obsolete = false\" + \n         \" and tft.textFlow.document.obsolete = false\" + \n         \" group by tft.state\");\n      // @formatter:on\n      q.setParameter(\"id\", iterationId)\n            .setParameter(\"locale\", localeId);\n      q.setCacheable(true).setComment(\"ProjectIterationDAO.getStatisticsForContainer\");\n      @SuppressWarnings(\"unchecked\")\n      List<StatusCount> stats = q.list();\n\n      TransUnitCount stat = new TransUnitCount();\n\n      for (StatusCount count : stats)\n      {\n         stat.set(count.status, count.count.intValue());\n      }\n\n      Long totalCount = getTotalCountForIteration(iterationId);\n\n      stat.set(ContentState.New, totalCount.intValue() - (stat.getApproved() + stat.getNeedReview()));\n\n      return stat;\n   }","commit_id":"071b6b673ad119c93fe9aacd01903eb23627c2cb","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<HProjectIteration> searchBySlugAndProjectSlug(String searchTerm) throws ParseException\n   {\n      final String FIELDS[] = { \"slug\", GroupSearchBridge.PROJECT_FIELD };\n\n      MultiFieldQueryParser parser = new MultiFieldQueryParser(Version.LUCENE_29, FIELDS, new StandardAnalyzer(Version.LUCENE_29));\n      org.apache.lucene.search.Query textQuery = parser.parse(searchTerm);\n\n      org.hibernate.search.jpa.FullTextQuery ftQuery = entityManager.createFullTextQuery(textQuery, HProjectIteration.class);\n      List<HProjectIteration> matches = (List<HProjectIteration>) ftQuery.getResultList();\n      return matches;\n   }","id":58227,"modified_method":"public List<HProjectIteration> searchBySlugAndProjectSlug(String searchTerm) throws ParseException\n   {\n      final String FIELDS[] = { \"slug\", GroupSearchBridge.PROJECT_FIELD };\n\n      MultiFieldQueryParser parser = new MultiFieldQueryParser(Version.LUCENE_29, FIELDS, new StandardAnalyzer(Version.LUCENE_29));\n      org.apache.lucene.search.Query textQuery = parser.parse(searchTerm);\n\n      org.hibernate.search.jpa.FullTextQuery ftQuery = entityManager.createFullTextQuery(textQuery, HProjectIteration.class);\n      @SuppressWarnings(\"unchecked\")\n      List<HProjectIteration> matches = (List<HProjectIteration>) ftQuery.getResultList();\n      return matches;\n   }","commit_id":"071b6b673ad119c93fe9aacd01903eb23627c2cb","url":"https://github.com/zanata/zanata-server"},{"original_method":"public EntityTag getResourcesETag(HProjectIteration projectIteration)\n   {\n      @SuppressWarnings(\"unchecked\")\n      // @formatter:off\n      Query q = getSession().createQuery(\n         \"select d.revision from HDocument d \" +\n         \"where d.projectIteration =:iteration \" + \n         \"and d.obsolete = false\")\n            .setParameter(\"iteration\", projectIteration);\n      // @formatter:on\n      q.setCacheable(true).setComment(\"ProjectIterationDAO.getResourcesETag\");\n      List<Integer> revisions = q.list();\n\n      int hashCode = 1;\n      for (int revision : revisions)\n      {\n         hashCode = 31 * hashCode + revision;\n      }\n\n      String hash = HashUtil.generateHash(String.valueOf(hashCode));\n\n      return EntityTag.valueOf(hash);\n   }","id":58228,"modified_method":"public EntityTag getResourcesETag(HProjectIteration projectIteration)\n   {\n      // @formatter:off\n      Query q = getSession().createQuery(\n         \"select d.revision from HDocument d \" +\n         \"where d.projectIteration =:iteration \" + \n         \"and d.obsolete = false\")\n            .setParameter(\"iteration\", projectIteration);\n      // @formatter:on\n      q.setCacheable(true).setComment(\"ProjectIterationDAO.getResourcesETag\");\n      @SuppressWarnings(\"unchecked\")\n      List<Integer> revisions = q.list();\n\n      int hashCode = 1;\n      for (int revision : revisions)\n      {\n         hashCode = 31 * hashCode + revision;\n      }\n\n      String hash = HashUtil.generateHash(String.valueOf(hashCode));\n\n      return EntityTag.valueOf(hash);\n   }","commit_id":"071b6b673ad119c93fe9aacd01903eb23627c2cb","url":"https://github.com/zanata/zanata-server"},{"original_method":"/**\n    * @see DocumentDAO#getStatistics(long, LocaleId)\n    * @param iterationId\n    * @param localeId\n    * @return\n    */\n   public TransUnitWords getWordStatsForContainer(Long iterationId, LocaleId localeId)\n   {\n\n      @SuppressWarnings(\"unchecked\")\n      // @formatter:off\n      Query q = getSession().createQuery(\"select new org.zanata.model.StatusCount(tft.state, sum(tft.textFlow.wordCount)) \" +\n         \"from HTextFlowTarget tft \" + \n         \"where tft.textFlow.document.projectIteration.id = :id \" + \n         \"  and tft.locale.localeId = :locale\" +\n         \" and tft.textFlow.obsolete = false\" + \n         \" and tft.textFlow.document.obsolete = false\" + \n         \" group by tft.state\");\n         // @formatter:on\n      q.setParameter(\"id\", iterationId)\n            .setParameter(\"locale\", localeId);\n      q.setCacheable(true).setComment(\"ProjectIterationDAO.getWordStatsForContainer\");\n      List<StatusCount> stats = q.list();\n\n\n      TransUnitWords stat = new TransUnitWords();\n\n      for (StatusCount count : stats)\n      {\n         stat.set(count.status, count.count.intValue());\n      }\n\n      Long totalCount = getTotalCountForIteration(iterationId);\n\n      stat.set(ContentState.New, totalCount.intValue() - (stat.getApproved() + stat.getNeedReview()));\n\n      return stat;\n   }","id":58229,"modified_method":"/**\n    * @see DocumentDAO#getStatistics(long, LocaleId)\n    * @param iterationId\n    * @param localeId\n    * @return\n    */\n   public TransUnitWords getWordStatsForContainer(Long iterationId, LocaleId localeId)\n   {\n\n      // @formatter:off\n      Query q = getSession().createQuery(\"select new org.zanata.model.StatusCount(tft.state, sum(tft.textFlow.wordCount)) \" +\n         \"from HTextFlowTarget tft \" + \n         \"where tft.textFlow.document.projectIteration.id = :id \" + \n         \"  and tft.locale.localeId = :locale\" +\n         \" and tft.textFlow.obsolete = false\" + \n         \" and tft.textFlow.document.obsolete = false\" + \n         \" group by tft.state\");\n         // @formatter:on\n      q.setParameter(\"id\", iterationId)\n            .setParameter(\"locale\", localeId);\n      q.setCacheable(true).setComment(\"ProjectIterationDAO.getWordStatsForContainer\");\n      @SuppressWarnings(\"unchecked\")\n      List<StatusCount> stats = q.list();\n\n\n      TransUnitWords stat = new TransUnitWords();\n\n      for (StatusCount count : stats)\n      {\n         stat.set(count.status, count.count.intValue());\n      }\n\n      Long totalCount = getTotalCountForIteration(iterationId);\n\n      stat.set(ContentState.New, totalCount.intValue() - (stat.getApproved() + stat.getNeedReview()));\n\n      return stat;\n   }","commit_id":"071b6b673ad119c93fe9aacd01903eb23627c2cb","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<HPerson> getMaintainerBySlug(String slug)\n   {\n      Query q = getSession().createQuery(\"select g.maintainers from HIterationGroup as g where g.slug = :slug\");\n      q.setParameter(\"slug\", slug);\n      return q.list();\n   }","id":58230,"modified_method":"public List<HPerson> getMaintainerBySlug(String slug)\n   {\n      Query q = getSession().createQuery(\"select g.maintainers from HIterationGroup as g where g.slug = :slug\");\n      q.setParameter(\"slug\", slug);\n      @SuppressWarnings(\"unchecked\")\n      List<HPerson> results = q.list();\n      return results;\n   }","commit_id":"071b6b673ad119c93fe9aacd01903eb23627c2cb","url":"https://github.com/zanata/zanata-server"},{"original_method":"public Dependency saveDependency(Dependency dependency) {\n    checkReadOnly(\"addDependency\");\n    return index.addDependency(dependency);\n  }","id":58231,"modified_method":"public Dependency saveDependency(Dependency dependency) {\n    checkReadOnly(\"addDependency\");\n    return sonarIndex.addDependency(dependency);\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Project getProject() {\n    return index.getProject();\n  }","id":58232,"modified_method":"public Project getProject() {\n    return sonarIndex.getProject();\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Set<Dependency> getDependencies() {\n    return index.getDependencies();\n  }","id":58233,"modified_method":"public Set<Dependency> getDependencies() {\n    return sonarIndex.getDependencies();\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n  * {@inheritDoc}\n  */\n  public List<Violation> getViolations() {\n    return index.getViolations(resource);\n  }","id":58234,"modified_method":"/**\n  * {@inheritDoc}\n  */\n  public List<Violation> getViolations() {\n    return sonarIndex.getViolations(resource);\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void deleteEvent(Event event) {\n    index.deleteEvent(event);\n  }","id":58235,"modified_method":"public void deleteEvent(Event event) {\n    sonarIndex.deleteEvent(event);\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public List<Event> getEvents() {\n    return index.getEvents(resource);\n  }","id":58236,"modified_method":"public List<Event> getEvents() {\n    return sonarIndex.getEvents(resource);\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Event createEvent(String name, String description, String category, Date date) {\n    return index.addEvent(resource, name, description, category, date);\n  }","id":58237,"modified_method":"public Event createEvent(String name, String description, String category, Date date) {\n    return sonarIndex.addEvent(resource, name, description, category, date);\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public DefaultDecoratorContext(Resource resource,\n    SonarIndex index,\n    List<DecoratorContext> childrenContexts,\n    MeasurementFilters measurementFilters, MeasureCache measureCache, MetricFinder metricFinder) {\n    this.index = index;\n    this.resource = resource;\n    this.childrenContexts = childrenContexts;\n    this.measurementFilters = measurementFilters;\n    this.measureCache = measureCache;\n    this.metricFinder = metricFinder;\n  }","id":58238,"modified_method":"public DefaultDecoratorContext(Resource resource,\n    SonarIndex index,\n    List<DecoratorContext> childrenContexts,\n    MeasurementFilters measurementFilters, MeasureCache measureCache, MetricFinder metricFinder) {\n    this.sonarIndex = index;\n    this.resource = resource;\n    this.childrenContexts = childrenContexts;\n    this.measurementFilters = measurementFilters;\n    this.measureCache = measureCache;\n    this.metricFinder = metricFinder;\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public DefaultDecoratorContext saveViolation(Violation violation, boolean force) {\n    if (violation.getResource() == null) {\n      violation.setResource(resource);\n    }\n    index.addViolation(violation, force);\n    return this;\n  }","id":58239,"modified_method":"public DefaultDecoratorContext saveViolation(Violation violation, boolean force) {\n    if (violation.getResource() == null) {\n      violation.setResource(resource);\n    }\n    sonarIndex.addViolation(violation, force);\n    return this;\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Collection<Dependency> getIncomingDependencies() {\n    return index.getIncomingEdges(resource);\n  }","id":58240,"modified_method":"public Collection<Dependency> getIncomingDependencies() {\n    return sonarIndex.getIncomingEdges(resource);\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n  * {@inheritDoc}\n  */\n  public List<Violation> getViolations(ViolationQuery violationQuery) {\n    return index.getViolations(violationQuery);\n  }","id":58241,"modified_method":"/**\n  * {@inheritDoc}\n  */\n  public List<Violation> getViolations(ViolationQuery violationQuery) {\n    return sonarIndex.getViolations(violationQuery);\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public Collection<Dependency> getOutgoingDependencies() {\n    return index.getOutgoingEdges(resource);\n  }","id":58242,"modified_method":"public Collection<Dependency> getOutgoingDependencies() {\n    return sonarIndex.getOutgoingEdges(resource);\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public void execute() {\n    final List<Long> ids = new ArrayList<Long>();\n    new MassUpdater(db, 50).execute(\n      new MassUpdater.InputLoader<Row>() {\n        @Override\n        public String selectSql() {\n          return \"SELECT md.id, md.measure_id FROM measure_data md\";\n        }\n\n        @Override\n        public Row load(ResultSet rs) throws SQLException {\n          Row row = new Row();\n          row.id = SqlUtil.getLong(rs, 1);\n          row.measure_id = SqlUtil.getLong(rs, 2);\n          return row;\n        }\n      },\n      new MassUpdater.InputConverter<Row>() {\n\n        @Override\n        public String updateSql() {\n          return \"UPDATE project_measures SET measure_data = (SELECT md.data FROM measure_data md WHERE md.id = ?) WHERE id=?\";\n        }\n\n        @Override\n        public boolean convert(Row row, PreparedStatement updateStatement) throws SQLException {\n          ids.add(row.id);\n          updateStatement.setLong(1, row.id);\n          updateStatement.setLong(2, row.measure_id);\n          return true;\n        }\n      },\n      new MassUpdater.PeriodicUpdater() {\n\n        @Override\n        public boolean update(Connection connection) throws SQLException {\n          if (ids.size() > 0) {\n            String deleteSql = new StringBuilder().append(\"DELETE FROM measure_data WHERE id IN (\")\n              .append(StringUtils.repeat(\"?\", \",\", ids.size())).append(\")\").toString();\n            PreparedStatement s = connection.prepareStatement(deleteSql);\n            int i = 1;\n            for (Long id : ids) {\n              s.setLong(i++, id);\n            }\n            s.executeUpdate();\n            s.close();\n            ids.clear();\n            return true;\n          }\n          return false;\n        }\n\n      }\n      );\n  }","id":58243,"modified_method":"@Override\n  public void execute() {\n    final List<Long> ids = new ArrayList<Long>();\n    new MassUpdater(db, 50).execute(\n      new MassUpdater.InputLoader<Row>() {\n        @Override\n        public String selectSql() {\n          return \"SELECT md.id, md.measure_id FROM measure_data md\";\n        }\n\n        @Override\n        public Row load(ResultSet rs) throws SQLException {\n          Row row = new Row();\n          row.id = SqlUtil.getLong(rs, 1);\n          row.measure_id = SqlUtil.getLong(rs, 2);\n          return row;\n        }\n      },\n      new MassUpdater.InputConverter<Row>() {\n\n        @Override\n        public String updateSql() {\n          return \"UPDATE project_measures SET measure_data = (SELECT md.data FROM measure_data md WHERE md.id = ?) WHERE id=?\";\n        }\n\n        @Override\n        public boolean convert(Row row, PreparedStatement updateStatement) throws SQLException {\n          ids.add(row.id);\n          updateStatement.setLong(1, row.id);\n          updateStatement.setLong(2, row.measure_id);\n          return true;\n        }\n      },\n      new MassUpdater.PeriodicUpdater() {\n\n        @Override\n        public boolean update(Connection connection) throws SQLException {\n          if (!ids.isEmpty()) {\n            PreparedStatement s = prepareDeleteQuery(ids, connection);\n            s.executeUpdate();\n            s.close();\n            ids.clear();\n            return true;\n          }\n          return false;\n        }\n      });\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public boolean shouldExecuteOnProject(Project project) {\n    return project.getModules().size() > 0;\n  }","id":58244,"modified_method":"public boolean shouldExecuteOnProject(Project project) {\n    return !project.getModules().isEmpty();\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private List<ResourceModel> loadEnabledResources(int moduleId, StringBuilder hql) {\n    List<ResourceModel> resources = session.createQuery(hql.toString())\n      .setParameter(\"rootId\", moduleId)\n      .setParameter(\"enabled\", true)\n      .getResultList();\n    return resources;\n  }","id":58245,"modified_method":"private List<ResourceModel> loadEnabledResources(int moduleId, StringBuilder hql) {\n    return session.createQuery(hql.toString())\n      .setParameter(\"rootId\", moduleId)\n      .setParameter(\"enabled\", true)\n      .getResultList();\n  }","commit_id":"d0569c1ebf7aa7b2aa4a42cef4f0664a2a4bb534","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public String processURI(String u, String overrideType, boolean noRelative, boolean inline) throws CommentException {\n\t\tif(u.matches(\"^#\" + FRAGMENT + \"$\")) {\n\t\t\t// Hack for anchors, see #710\n\t\t\treturn u;\n\t\t}\n\t\t\n\t\t// evil hack, see #2451 and r24565,r24566\n\t\tu = u.replaceAll(\" #\", \" %23\");\n\t\t\n\t\tURI uri;\n\t\tURI resolved;\n\t\tboolean logMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\ttry {\n\t\t\tif(logMINOR) Logger.minor(this, \"Processing \"+u);\n\t\t\turi = URIPreEncoder.encodeURI(u).normalize();\n\t\t\tif(logMINOR) Logger.minor(this, \"Processing \"+uri);\n\t\t\tif(!noRelative)\n\t\t\t\tresolved = baseURI.resolve(uri);\n\t\t\telse\n\t\t\t\tresolved = uri;\n\t\t\tif(logMINOR) Logger.minor(this, \"Resolved: \"+resolved);\n\t\t} catch (URISyntaxException e1) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Failed to parse URI: \"+e1);\n\t\t\tthrow new CommentException(l10n(\"couldNotParseURIWithError\", \"error\", e1.getMessage()));\n\t\t}\n\t\tString path = uri.getPath();\n\t\t\n\t\tHTTPRequest req = new HTTPRequestImpl(uri, \"GET\");\n\t\tif (path != null){\n\t\t\tif(path.equals(\"/\") && req.isParameterSet(\"newbookmark\")){\n\t\t\t\t// allow links to the root to add bookmarks\n\t\t\t\tString bookmark_key = req.getParam(\"newbookmark\");\n\t\t\t\tString bookmark_desc = req.getParam(\"desc\");\n\t\t\t\tString bookmark_activelink = req.getParam(\"hasAnActivelink\", \"\");\n\n\t\t\t\tbookmark_key = HTMLEncoder.encode(bookmark_key);\n\t\t\t\tbookmark_desc = HTMLEncoder.encode(bookmark_desc);\n\n\t\t\t\tString url = \"/?newbookmark=\"+bookmark_key+\"&desc=\"+bookmark_desc;\n\t\t\t\tif (!bookmark_activelink.equals(\"\")) {\n\t\t\t\t\tbookmark_activelink = HTMLEncoder.encode(bookmark_activelink);\n\t\t\t\t\turl = url+\"&hasAnActivelink=true\";\n\t\t\t\t}\n\t\t\t\treturn url;\n\t\t\t} else if(path.startsWith(StaticToadlet.ROOT_URL)) {\n\t\t\t\t// @see bug #2297\n\t\t\t\treturn path;\n\t\t\t}\n\t\t}\n\t\t\n\t\tString reason = \"\";\n\t\t\n\t\t// Try as an absolute URI\n\t\t\n\t\tString rpath = uri.getPath();\n\t\t\n\t\tif(uri.getHost() == null) {\n\t\t\n\t\t\tboolean isAbsolute = false;\n\t\t\t\n\t\t\tif(rpath != null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Resolved URI (rpath absolute): \"+rpath);\n\t\t\t\t\n\t\t\t\t// Valid FreenetURI?\n\t\t\t\ttry {\n\t\t\t\t\tString p = rpath;\n\t\t\t\t\twhile(p.startsWith(\"/\")) {\n\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\tp = p.substring(1);\n\t\t\t\t\t}\n\t\t\t\t\tFreenetURI furi = new FreenetURI(p);\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Parsed: \"+furi);\n\t\t\t\t\treturn processURI(furi, uri, overrideType, noRelative, inline);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\t// Not a FreenetURI\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Malformed URL (a): \"+e, e);\n\t\t\t\t\tif(e.getMessage() != null) {\n\t\t\t\t\t\treason = l10n(\"malformedAbsoluteURL\", \"error\", e.getMessage());\n\t\t\t\t\t} else {\n\t\t\t\t\t\treason = l10n(\"couldNotParseAbsoluteFreenetURI\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(!isAbsolute) {\n\t\t\t\t\n\t\t\t\t// Relative URI\n\t\t\t\t\n\t\t\t\trpath = resolved.getPath();\n\t\t\t\tif(rpath == null) throw new CommentException(\"No URI\");\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Resolved URI (rpath relative): \"+rpath);\n\t\t\t\t\n\t\t\t\t// Valid FreenetURI?\n\t\t\t\ttry {\n\t\t\t\t\tString p = rpath;\n\t\t\t\t\twhile(p.startsWith(\"/\")) p = p.substring(1);\n\t\t\t\t\tFreenetURI furi = new FreenetURI(p);\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Parsed: \"+furi);\n\t\t\t\t\treturn processURI(furi, uri, overrideType, noRelative, inline);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Malformed URL (b): \"+e, e);\n\t\t\t\t\tif(e.getMessage() != null) {\n\t\t\t\t\t\treason = l10n(\"malformedRelativeURL\", \"error\", e.getMessage());\n\t\t\t\t\t} else {\n\t\t\t\t\t\treason = l10n(\"couldNotParseRelativeFreenetURI\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\t\tif(GenericReadFilterCallback.allowedProtocols.contains(uri.getScheme()))\n\t\t\treturn \"/?\"+GenericReadFilterCallback.magicHTTPEscapeString+ '=' +uri;\n\t\telse {\n\t\t\tif(uri.getScheme() == null) {\n\t\t\t\tthrow new CommentException(reason);\n\t\t\t}\n\t\t\tthrow new CommentException(l10n(\"protocolNotEscaped\", \"protocol\", uri.getScheme()));\n\t\t}\n\t}","id":58246,"modified_method":"public String processURI(String u, String overrideType, boolean noRelative, boolean inline) throws CommentException {\n\t\tif(u.matches(\"^#\" + FRAGMENT + \"$\")) {\n\t\t\t// Hack for anchors, see #710\n\t\t\treturn u;\n\t\t}\n\t\t\n\t\t// evil hack, see #2451 and r24565,r24566\n\t\tu = u.replaceAll(\" #\", \" %23\");\n\t\t\n\t\tURI uri;\n\t\tURI resolved;\n\t\tboolean logMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\ttry {\n\t\t\tif(logMINOR) Logger.minor(this, \"Processing \"+u);\n\t\t\turi = URIPreEncoder.encodeURI(u).normalize();\n\t\t\tif(logMINOR) Logger.minor(this, \"Processing \"+uri);\n\t\t\tif(!noRelative)\n\t\t\t\tresolved = baseURI.resolve(uri);\n\t\t\telse\n\t\t\t\tresolved = uri;\n\t\t\tif(logMINOR) Logger.minor(this, \"Resolved: \"+resolved);\n\t\t} catch (URISyntaxException e1) {\n\t\t\tif(logMINOR) Logger.minor(this, \"Failed to parse URI: \"+e1);\n\t\t\tthrow new CommentException(l10n(\"couldNotParseURIWithError\", \"error\", e1.getMessage()));\n\t\t}\n\t\tString path = uri.getPath();\n\t\t\n\t\tHTTPRequest req = new HTTPRequestImpl(uri, \"GET\");\n\t\tif (path != null){\n\t\t\tif(path.equals(\"/\") && req.isParameterSet(\"newbookmark\")){\n\t\t\t\t// allow links to the root to add bookmarks\n\t\t\t\tString bookmark_key = req.getParam(\"newbookmark\");\n\t\t\t\tString bookmark_desc = req.getParam(\"desc\");\n\t\t\t\tString bookmark_activelink = req.getParam(\"hasAnActivelink\", \"\");\n\n\t\t\t\tbookmark_key = HTMLEncoder.encode(bookmark_key);\n\t\t\t\tbookmark_desc = HTMLEncoder.encode(bookmark_desc);\n\n\t\t\t\tString url = \"/?newbookmark=\"+bookmark_key+\"&desc=\"+bookmark_desc;\n\t\t\t\tif (!bookmark_activelink.equals(\"\")) {\n\t\t\t\t\tbookmark_activelink = HTMLEncoder.encode(bookmark_activelink);\n\t\t\t\t\turl = url+\"&hasAnActivelink=true\";\n\t\t\t\t}\n\t\t\t\treturn url;\n\t\t\t} else if(path.startsWith(StaticToadlet.ROOT_URL)) {\n\t\t\t\t// @see bug #2297\n\t\t\t\treturn path;\n\t\t\t}\n\t\t}\n\t\t\n\t\tString reason = \"\";\n\t\t\n\t\t// Try as an absolute URI\n\t\t\n\t\tURI origURI = uri;\n\t\t\n\t\t// Convert localhost uri's to relative internal ones.\n\t\t\n\t\tString host = uri.getHost();\n\t\tif(host != null && (host.equals(\"localhost\") || host.equals(\"127.0.0.1\")) && uri.getPort() == 8888) {\n\t\t\ttry {\n\t\t\t\turi = new URI(null, null, null, -1, uri.getPath(), uri.getQuery(), uri.getFragment());\n\t\t\t} catch (URISyntaxException e) {\n\t\t\t\tLogger.error(this, \"URI \"+uri+\" looked like localhost but could not parse\", e);\n\t\t\t\tthrow new CommentException(\"URI looked like localhost but could not parse: \"+e);\n\t\t\t}\n\t\t\thost = null;\n\t\t}\n\t\t\n\t\tString rpath = uri.getPath();\n\t\t\n\t\tif(host == null) {\n\t\t\n\t\t\tboolean isAbsolute = false;\n\t\t\t\n\t\t\tif(rpath != null) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Resolved URI (rpath absolute): \"+rpath);\n\t\t\t\t\n\t\t\t\t// Valid FreenetURI?\n\t\t\t\ttry {\n\t\t\t\t\tString p = rpath;\n\t\t\t\t\twhile(p.startsWith(\"/\")) {\n\t\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\t\tp = p.substring(1);\n\t\t\t\t\t}\n\t\t\t\t\tFreenetURI furi = new FreenetURI(p);\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Parsed: \"+furi);\n\t\t\t\t\treturn processURI(furi, uri, overrideType, noRelative, inline);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\t// Not a FreenetURI\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Malformed URL (a): \"+e, e);\n\t\t\t\t\tif(e.getMessage() != null) {\n\t\t\t\t\t\treason = l10n(\"malformedAbsoluteURL\", \"error\", e.getMessage());\n\t\t\t\t\t} else {\n\t\t\t\t\t\treason = l10n(\"couldNotParseAbsoluteFreenetURI\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(!isAbsolute) {\n\t\t\t\t\n\t\t\t\t// Relative URI\n\t\t\t\t\n\t\t\t\trpath = resolved.getPath();\n\t\t\t\tif(rpath == null) throw new CommentException(\"No URI\");\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Resolved URI (rpath relative): \"+rpath);\n\t\t\t\t\n\t\t\t\t// Valid FreenetURI?\n\t\t\t\ttry {\n\t\t\t\t\tString p = rpath;\n\t\t\t\t\twhile(p.startsWith(\"/\")) p = p.substring(1);\n\t\t\t\t\tFreenetURI furi = new FreenetURI(p);\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Parsed: \"+furi);\n\t\t\t\t\treturn processURI(furi, uri, overrideType, noRelative, inline);\n\t\t\t\t} catch (MalformedURLException e) {\n\t\t\t\t\tif(logMINOR) Logger.minor(this, \"Malformed URL (b): \"+e, e);\n\t\t\t\t\tif(e.getMessage() != null) {\n\t\t\t\t\t\treason = l10n(\"malformedRelativeURL\", \"error\", e.getMessage());\n\t\t\t\t\t} else {\n\t\t\t\t\t\treason = l10n(\"couldNotParseRelativeFreenetURI\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\t\turi = origURI;\n\t\t\n\t\tif(GenericReadFilterCallback.allowedProtocols.contains(uri.getScheme()))\n\t\t\treturn \"/?\"+GenericReadFilterCallback.magicHTTPEscapeString+ '=' +uri;\n\t\telse {\n\t\t\tif(uri.getScheme() == null) {\n\t\t\t\tthrow new CommentException(reason);\n\t\t\t}\n\t\t\tthrow new CommentException(l10n(\"protocolNotEscaped\", \"protocol\", uri.getScheme()));\n\t\t}\n\t}","commit_id":"f1e1c8b444a34890a06b19eb2d8147c26dda969a","url":"https://github.com/freenet/fred"},{"original_method":"public static serverObjects respond(httpHeader header, serverObjects post, serverSwitch env) {\r\n        // return variable that accumulates replacements\r\n        listManager.switchboard = (plasmaSwitchboard) env;\r\n        listManager.listsPath = new File(listManager.switchboard.getRootPath(),listManager.switchboard.getConfig(\"listManager.listsPath\", \"DATA/LISTS\"));\r\n        final serverObjects prop = new serverObjects();\r\n        String line;\r\n//      String HTMLout = \"\";\r\n\r\n        String removeItem = \"removeme\";\r\n        int numItems = 0;\r\n        int i; // need below\r\n\r\n        String[] filenames = listManager.getListslistArray(BLACKLIST_ALL);\r\n        String filename = \"\";\r\n\r\n        if (post != null) {\r\n            if (post.containsKey(\"blackLists\")) { // Blacklist selected\r\n                filename = (String)post.get(\"blackLists\");\r\n            } else if (post.containsKey(\"filename\")) {\r\n                filename = (String)post.get(\"filename\");\r\n            } else if (filenames.length > 0){ // first BlackList\r\n                filename = filenames[0];\r\n//          } else { //No BlackList\r\n//              System.out.println(\"DEBUG: No Blacklist found\");\r\n            }\r\n            prop.put(\"status\", 0); // nothing\r\n\r\n            // del list\r\n            if (post.containsKey(\"dellistbutton\")) {\r\n                final File BlackListFile = new File(listManager.listsPath, filename);\r\n                BlackListFile.delete();\r\n\r\n                // remove from all BlackLists Lists\r\n                listManager.removeListFromListslist(BLACKLIST_ALL, filename);\r\n                listManager.removeListFromListslist(BLACKLIST_ACTIVE, filename);\r\n                listManager.removeListFromListslist(BLACKLIST_SHARED, filename);\r\n\r\n                // reload Blacklists\r\n                listManager.reloadBlacklists();\r\n                filenames = listManager.getListslistArray(BLACKLIST_ALL);\r\n                if (filenames.length > 0) {\r\n                    filename = filenames[0];\r\n                }\r\n\r\n            // new list\r\n            } else if (post.containsKey(\"newlistbutton\")) {\r\n                String newList = (String)post.get(\"newlist\");\r\n                if (!newList.endsWith(\".black\")) {\r\n                    newList += \".black\";\r\n                }\r\n                filename = newList; //to select it in the returnes Document\r\n                try {\r\n                    final File newFile = new File(listManager.listsPath, newList);\r\n                    newFile.createNewFile();\r\n                    listManager.addListToListslist(BLACKLIST_ALL, newList);\r\n                    listManager.addListToListslist(BLACKLIST_ACTIVE, newList);\r\n                    listManager.addListToListslist(BLACKLIST_SHARED, newList);\r\n                } catch (IOException e) {}\r\n\r\n\r\n            } else if (post.containsKey(\"activatelistbutton\")) {\r\n                if( listManager.ListInListslist(BLACKLIST_ACTIVE, filename) ){ \r\n                    listManager.removeListFromListslist(BLACKLIST_ACTIVE, filename);\r\n                } else { // inactive list -> enable\r\n                    listManager.addListToListslist(BLACKLIST_ACTIVE, filename);\r\n                }\r\n                listManager.reloadBlacklists();\r\n\r\n            } else if (post.containsKey(\"sharelistbutton\")) {\r\n                if (listManager.ListInListslist(BLACKLIST_SHARED, filename)) { \r\n                    // Remove from shared BlackLists\r\n                    listManager.removeListFromListslist(BLACKLIST_SHARED, filename);\r\n                } else { // inactive list -> enable\r\n                    listManager.addListToListslist(BLACKLIST_SHARED, filename);\r\n                }\r\n            } // List Management End\r\n\r\n            // remove a Item?\r\n            if (post.containsKey(\"delbutton\") &&\r\n                post.containsKey(\"Itemlist\")  &&\r\n              !((String)post.get(\"Itemlist\")).equals(\"\") ) {\r\n                removeItem = (String)post.get(\"Itemlist\");\r\n            }\r\n        } // post != null   \r\n\r\n        // Read the List\r\n        final ArrayList list = listManager.getListArray(new File(listManager.listsPath, filename));\r\n        final StringBuffer out = new StringBuffer(list.size() * 64);\r\n        final Iterator iter = list.iterator();\r\n        while (iter.hasNext()){\r\n            line = (String) iter.next();\r\n\r\n            if (!(line.length() == 0 || line.charAt(0) == '#' || line.equals(removeItem))) { //Not the item to remove\r\n                prop.put(\"Itemlist_\" + numItems + \"_item\", line);\r\n                numItems++;\r\n            }\r\n\r\n            if (line.equals(removeItem)) {\r\n                prop.put(\"status\", 1);//removed\r\n                prop.put(\"status_item\", line);\r\n//              if (listManager.switchboard.urlBlacklist != null) {\r\n//                  listManager.switchboard.urlBlacklist.remove(line);\r\n                if (plasmaSwitchboard.urlBlacklist != null) {\r\n                    plasmaSwitchboard.urlBlacklist.remove(line);\r\n                }\r\n            } else {\r\n                out.append(line).append(serverCore.crlfString); //full list\r\n            }\r\n        }\r\n        prop.put(\"Itemlist\", numItems);\r\n\r\n        // Add a new Item\r\n        if (post != null && post.containsKey(\"addbutton\") && !((String)post.get(\"newItem\")).equals(\"\")) {\r\n            String newItem = (String)post.get(\"newItem\");\r\n\r\n            //clean http://\r\n            if ( newItem.startsWith(\"http://\") ){\r\n                newItem = newItem.substring(7);\r\n            }\r\n\r\n            //append \"/.*\"\r\n            int pos = newItem.indexOf(\"/\");\r\n            if (pos < 0) {\r\n                // add default empty path pattern\r\n                pos = newItem.length();\r\n                newItem = newItem + \"/.*\";\r\n            }\r\n\r\n            out.append(newItem).append(serverCore.crlfString);\r\n\r\n            prop.put(\"Itemlist_\"+numItems+\"_item\", newItem);\r\n            numItems++;\r\n            prop.put(\"Itemlist\", numItems);\r\n\r\n            prop.put(\"status\", 2);//added\r\n            prop.put(\"status_item\", newItem);//added\r\n\r\n            // add to blacklist\r\n//          if (listManager.switchboard.urlBlacklist != null)\r\n//              listManager.switchboard.urlBlacklist.add(newItem.substring(0, pos), newItem.substring(pos + 1));\r\n            if (plasmaSwitchboard.urlBlacklist != null) { \r\n                plasmaSwitchboard.urlBlacklist.add(newItem.substring(0, pos), newItem.substring(pos + 1));\r\n            }\r\n        }\r\n        listManager.writeList(new File(listManager.listsPath, filename), out.toString());\r\n\r\n        // List known hosts for BlackList retrieval\r\n        yacySeed seed;\r\n        if (yacyCore.seedDB != null && yacyCore.seedDB.sizeConnected() > 0) { // no nullpointer error\r\n            final Enumeration e = yacyCore.seedDB.seedsConnected(true, false, null);\r\n            i = 0;\r\n            while (e.hasMoreElements()) {\r\n                seed = (yacySeed) e.nextElement();\r\n                if (seed != null) {\r\n                    final String Hash = seed.hash;\r\n                    final String Name = seed.get(yacySeed.NAME, \"nameless\");\r\n                    prop.put(\"otherHosts_\" + i + \"_hash\", Hash);\r\n                    prop.put(\"otherHosts_\" + i + \"_name\", Name);\r\n                    i++;\r\n                }\r\n            }\r\n            prop.put(\"otherHosts\", i);\r\n//      } else {\r\n//          System.out.println(\"BlackList_p: yacy seed not loaded!\"); // DEBUG: \r\n        }\r\n\r\n        // List BlackLists\r\n        final String[] BlackLists = listManager.getListslistArray(BLACKLIST_ALL);\r\n        for (i = 0; i <= BlackLists.length - 1; i++) {\r\n            prop.put(BLACKLIST + i + \"_name\", BlackLists[i]);\r\n            prop.put(BLACKLIST + i + \"_active\", 0);\r\n            prop.put(BLACKLIST + i + \"_shared\", 0);\r\n            prop.put(BLACKLIST + i + \"_selected\", 0);\r\n            if (BlackLists[i].equals(filename)) { //current List\r\n                prop.put(BLACKLIST + i + \"_selected\", 1);\r\n            }\r\n            if (listManager.ListInListslist(BLACKLIST_ACTIVE, BlackLists[i])) {\r\n                prop.put(BLACKLIST + i + \"_active\", 1);\r\n            }\r\n            if (listManager.ListInListslist(BLACKLIST_SHARED, BlackLists[i])) {\r\n                prop.put(BLACKLIST + i + \"_shared\", 1);\r\n            }\r\n        }\r\n        prop.put(\"blackLists\", i);\r\n        prop.put(\"filename\", filename);\r\n        return prop;\r\n    }","id":58247,"modified_method":"public static serverObjects respond(httpHeader header, serverObjects post, serverSwitch env) {\r\n        // return variable that accumulates replacements\r\n        listManager.switchboard = (plasmaSwitchboard) env;\r\n        listManager.listsPath = new File(listManager.switchboard.getRootPath(),listManager.switchboard.getConfig(\"listManager.listsPath\", \"DATA/LISTS\"));\r\n        final serverObjects prop = new serverObjects();\r\n        String line;\r\n//      String HTMLout = \"\";\r\n\r\n        String removeItem = \"removeme\";\r\n        int numItems = 0;\r\n        int i; // need below\r\n\r\n        String[] filenames = listManager.getListslistArray(BLACKLIST_ALL);\r\n        String filename = \"\";\r\n\r\n        if (post != null) {\r\n            if (post.containsKey(\"blackLists\")) { // Blacklist selected\r\n                filename = (String)post.get(\"blackLists\");\r\n            } else if (post.containsKey(\"filename\")) {\r\n                filename = (String)post.get(\"filename\");\r\n            } else if (filenames.length > 0){ // first BlackList\r\n                filename = filenames[0];\r\n//          } else { //No BlackList\r\n//              System.out.println(\"DEBUG: No Blacklist found\");\r\n            }\r\n            prop.put(\"status\", 0); // nothing\r\n\r\n            // del list\r\n            if (post.containsKey(\"dellistbutton\")) {\r\n                final File BlackListFile = new File(listManager.listsPath, filename);\r\n                BlackListFile.delete();\r\n\r\n                // remove from all BlackLists Lists\r\n                listManager.removeListFromListslist(BLACKLIST_ALL, filename);\r\n                listManager.removeListFromListslist(BLACKLIST_ACTIVE, filename);\r\n                listManager.removeListFromListslist(BLACKLIST_SHARED, filename);\r\n\r\n                // reload Blacklists\r\n                listManager.reloadBlacklists();\r\n                filenames = listManager.getListslistArray(BLACKLIST_ALL);\r\n                if (filenames.length > 0) {\r\n                    filename = filenames[0];\r\n                }\r\n\r\n            // new list\r\n            } else if (post.containsKey(\"newlistbutton\")) {\r\n                String newList = (String)post.get(\"newlist\");\r\n                if (!newList.endsWith(\".black\")) {\r\n                    newList += \".black\";\r\n                }\r\n                filename = newList; //to select it in the returnes Document\r\n                try {\r\n                    final File newFile = new File(listManager.listsPath, newList);\r\n                    newFile.createNewFile();\r\n                    listManager.addListToListslist(BLACKLIST_ALL, newList);\r\n                    listManager.addListToListslist(BLACKLIST_ACTIVE, newList);\r\n                    listManager.addListToListslist(BLACKLIST_SHARED, newList);\r\n                } catch (IOException e) {}\r\n\r\n\r\n            } else if (post.containsKey(\"changebutton\")) {\r\n                if (post.containsKey(\"proxylist\")){\r\n                    if( !(post.get(\"proxylist\").equals(\"on\")) && listManager.ListInListslist(BLACKLIST_ACTIVE, filename) ){ \r\n                        listManager.removeListFromListslist(BLACKLIST_ACTIVE, filename);\r\n                    } else if ( post.get(\"proxylist\").equals(\"on\") && !(listManager.ListInListslist(BLACKLIST_ACTIVE, filename)) ) { // inactive list -> enable\r\n                        listManager.addListToListslist(BLACKLIST_ACTIVE, filename);\r\n                    }\r\n\t\t\t\t}\r\n                if (post.containsKey(\"sharedlist\")){\r\n                    if( !(post.get(\"sharedlist\").equals(\"on\")) && listManager.ListInListslist(BLACKLIST_SHARED, filename) ){ \r\n                        listManager.removeListFromListslist(BLACKLIST_SHARED, filename);\r\n                    } else if ( post.get(\"sharedlist\").equals(\"on\") && !(listManager.ListInListslist(BLACKLIST_SHARED, filename)) ) { // inSHARED list -> enable\r\n                        listManager.addListToListslist(BLACKLIST_SHARED, filename);\r\n                    }\r\n\t\t\t\t}\r\n                    listManager.reloadBlacklists();\r\n\r\n            } else if (post.containsKey(\"sharelistbutton\")) {\r\n                if (listManager.ListInListslist(BLACKLIST_SHARED, filename)) { \r\n                    // Remove from shared BlackLists\r\n                    listManager.removeListFromListslist(BLACKLIST_SHARED, filename);\r\n                } else { // inactive list -> enable\r\n                    listManager.addListToListslist(BLACKLIST_SHARED, filename);\r\n                }\r\n            } // List Management End\r\n\r\n            // remove a Item?\r\n            if (post.containsKey(\"delbutton\") &&\r\n                post.containsKey(\"Itemlist\")  &&\r\n              !((String)post.get(\"Itemlist\")).equals(\"\") ) {\r\n                removeItem = (String)post.get(\"Itemlist\");\r\n            }\r\n        } // post != null   \r\n\r\n        // Read the List\r\n        final ArrayList list = listManager.getListArray(new File(listManager.listsPath, filename));\r\n        final StringBuffer out = new StringBuffer(list.size() * 64);\r\n        final Iterator iter = list.iterator();\r\n        while (iter.hasNext()){\r\n            line = (String) iter.next();\r\n\r\n            if (!(line.length() == 0 || line.charAt(0) == '#' || line.equals(removeItem))) { //Not the item to remove\r\n                prop.put(\"Itemlist_\" + numItems + \"_item\", line);\r\n                numItems++;\r\n            }\r\n\r\n            if (line.equals(removeItem)) {\r\n                prop.put(\"status\", 1);//removed\r\n                prop.put(\"status_item\", line);\r\n//              if (listManager.switchboard.urlBlacklist != null) {\r\n//                  listManager.switchboard.urlBlacklist.remove(line);\r\n                if (plasmaSwitchboard.urlBlacklist != null) {\r\n                    plasmaSwitchboard.urlBlacklist.remove(line);\r\n                }\r\n            } else {\r\n                out.append(line).append(serverCore.crlfString); //full list\r\n            }\r\n        }\r\n        prop.put(\"Itemlist\", numItems);\r\n\r\n        // Add a new Item\r\n        if (post != null && post.containsKey(\"addbutton\") && !((String)post.get(\"newItem\")).equals(\"\")) {\r\n            String newItem = (String)post.get(\"newItem\");\r\n\r\n            //clean http://\r\n            if ( newItem.startsWith(\"http://\") ){\r\n                newItem = newItem.substring(7);\r\n            }\r\n\r\n            //append \"/.*\"\r\n            int pos = newItem.indexOf(\"/\");\r\n            if (pos < 0) {\r\n                // add default empty path pattern\r\n                pos = newItem.length();\r\n                newItem = newItem + \"/.*\";\r\n            }\r\n\r\n            out.append(newItem).append(serverCore.crlfString);\r\n\r\n            prop.put(\"Itemlist_\"+numItems+\"_item\", newItem);\r\n            numItems++;\r\n            prop.put(\"Itemlist\", numItems);\r\n\r\n            prop.put(\"status\", 2);//added\r\n            prop.put(\"status_item\", newItem);//added\r\n\r\n            // add to blacklist\r\n//          if (listManager.switchboard.urlBlacklist != null)\r\n//              listManager.switchboard.urlBlacklist.add(newItem.substring(0, pos), newItem.substring(pos + 1));\r\n            if (plasmaSwitchboard.urlBlacklist != null) { \r\n                plasmaSwitchboard.urlBlacklist.add(newItem.substring(0, pos), newItem.substring(pos + 1));\r\n            }\r\n        }\r\n        listManager.writeList(new File(listManager.listsPath, filename), out.toString());\r\n\r\n        // List known hosts for BlackList retrieval\r\n        yacySeed seed;\r\n        if (yacyCore.seedDB != null && yacyCore.seedDB.sizeConnected() > 0) { // no nullpointer error\r\n            final Enumeration e = yacyCore.seedDB.seedsConnected(true, false, null);\r\n            i = 0;\r\n            while (e.hasMoreElements()) {\r\n                seed = (yacySeed) e.nextElement();\r\n                if (seed != null) {\r\n                    final String Hash = seed.hash;\r\n                    final String Name = seed.get(yacySeed.NAME, \"nameless\");\r\n                    prop.put(\"otherHosts_\" + i + \"_hash\", Hash);\r\n                    prop.put(\"otherHosts_\" + i + \"_name\", Name);\r\n                    i++;\r\n                }\r\n            }\r\n            prop.put(\"otherHosts\", i);\r\n//      } else {\r\n//          System.out.println(\"BlackList_p: yacy seed not loaded!\"); // DEBUG: \r\n        }\r\n\r\n        // List BlackLists\r\n        final String[] BlackLists = listManager.getListslistArray(BLACKLIST_ALL);\r\n        for (i = 0; i <= BlackLists.length - 1; i++) {\r\n            prop.put(BLACKLIST + i + \"_name\", BlackLists[i]);\r\n            prop.put(BLACKLIST + i + \"_active\", 0);\r\n            prop.put(BLACKLIST + i + \"_shared\", 0);\r\n            prop.put(BLACKLIST + i + \"_selected\", 0);\r\n            if (BlackLists[i].equals(filename)) { //current List\r\n                prop.put(BLACKLIST + i + \"_selected\", 1);\r\n            }\r\n            if (listManager.ListInListslist(BLACKLIST_ACTIVE, BlackLists[i])) {\r\n                prop.put(BLACKLIST + i + \"_active\", 1);\r\n            }\r\n            if (listManager.ListInListslist(BLACKLIST_SHARED, BlackLists[i])) {\r\n                prop.put(BLACKLIST + i + \"_shared\", 1);\r\n            }\r\n        }\r\n        prop.put(\"blackLists\", i);\r\n        prop.put(\"filename\", filename);\r\n        return prop;\r\n    }","commit_id":"787c36869689b126b553f68cbaafd2f215fa4413","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/**\r\n     * @param conProp a collection of properties about the connection, like URL\r\n     * @param requestHeader The header lines of the connection from the request\r\n     * @param respond the OutputStream to the client\r\n     * @see de.anomic.http.httpdHandler#doGet(java.util.Properties, de.anomic.http.httpHeader, java.io.OutputStream)\r\n     */\r\n    public void doGet(Properties conProp, httpHeader requestHeader, OutputStream respond) throws IOException {\r\n        \r\n        this.connectionProperties = conProp;\r\n        \r\n        try {\r\n            // remembering the starting time of the request\r\n            Date requestDate = new Date(); // remember the time...\r\n            this.connectionProperties.put(httpHeader.CONNECTION_PROP_REQUEST_START,new Long(requestDate.getTime()));\r\n            if (yacyTrigger) de.anomic.yacy.yacyCore.triggerOnlineAction();\r\n            switchboard.proxyLastAccess = System.currentTimeMillis();\r\n            \r\n            // using an ByteCount OutputStream to count the send bytes (needed for the logfile)\r\n            respond = new httpdByteCountOutputStream(respond,conProp.getProperty(httpHeader.CONNECTION_PROP_REQUESTLINE).length() + 2);\r\n            \r\n            String host =    conProp.getProperty(httpHeader.CONNECTION_PROP_HOST);\r\n            String path =    conProp.getProperty(httpHeader.CONNECTION_PROP_PATH);     // always starts with leading '/'\r\n            String args =    conProp.getProperty(httpHeader.CONNECTION_PROP_ARGS);     // may be null if no args were given\r\n            String ip =      conProp.getProperty(httpHeader.CONNECTION_PROP_CLIENTIP); // the ip from the connecting peer\r\n            \r\n            int port, pos;        \r\n            if ((pos = host.indexOf(\":\")) < 0) {\r\n                port = 80;\r\n            } else {\r\n                port = Integer.parseInt(host.substring(pos + 1));\r\n                host = host.substring(0, pos);\r\n            }\r\n            \r\n            String ext;\r\n            if ((pos = path.lastIndexOf('.')) < 0) {\r\n                ext = \"\";\r\n            } else {\r\n                ext = path.substring(pos + 1).toLowerCase();\r\n            }\r\n            \r\n            URL url = null;\r\n            try {\r\n                url = httpHeader.getRequestURL(conProp);\r\n                //redirector\r\n                if (redirectorEnabled){\r\n                    redirectorWriter.println(url.toString());\r\n                    redirectorWriter.flush();\r\n                    String newUrl=redirectorReader.readLine();\r\n                    url=new URL(newUrl);\r\n                    conProp.setProperty(httpHeader.CONNECTION_PROP_HOST, url.getHost());\r\n                    conProp.setProperty(httpHeader.CONNECTION_PROP_PATH, url.getPath());\r\n                    requestHeader.put(httpHeader.HOST, url.getHost());\r\n                    requestHeader.put(httpHeader.CONNECTION_PROP_PATH, url.getPath());\r\n                    host=url.getHost();\r\n                    port=url.getPort();//TODO:this does not work.\r\n                    path=url.getPath();\r\n                }\r\n            } catch (MalformedURLException e) {\r\n                String errorMsg = \"ERROR: internal error with url generation: host=\" +\r\n                                  host + \", port=\" + port + \", path=\" + path + \", args=\" + args;\r\n                serverLog.logSevere(\"PROXY\", errorMsg);\r\n                httpd.sendRespondError(conProp,respond,4,501,null,errorMsg,e);\r\n                return;\r\n            }\r\n            \r\n            // check the blacklist\r\n            // blacklist idea inspired by [AS]:\r\n            // respond a 404 for all AGIS (\"all you get is shit\") servers\r\n            String hostlow = host.toLowerCase();\r\n            if (plasmaSwitchboard.urlBlacklist.isListed(hostlow, path)) {\r\n                httpd.sendRespondError(conProp,respond,4,403,null,\r\n                        \"URL '\" + hostlow + \"' blocked by yacy proxy (blacklisted)\",null);\r\n                this.theLogger.logInfo(\"AGIS blocking of host '\" + hostlow + \"'\");\r\n                return;\r\n            }\r\n            \r\n            // handle outgoing cookies\r\n            handleOutgoingCookies(requestHeader, host, ip);\r\n            \r\n            // set another userAgent, if not yellowlisted\r\n            if ((yellowList != null) && (!(yellowList.contains(domain(hostlow))))) {\r\n                // change the User-Agent\r\n                requestHeader.put(httpHeader.USER_AGENT, generateUserAgent(requestHeader));\r\n            }\r\n            \r\n            // setting the X-Forwarded-For Header\r\n            requestHeader.put(httpHeader.X_FORWARDED_FOR,conProp.getProperty(httpHeader.CONNECTION_PROP_CLIENTIP));\r\n            \r\n            // decide wether to use a cache entry or connect to the network\r\n            File cacheFile = cacheManager.getCachePath(url);\r\n            String urlHash = plasmaURL.urlHash(url);\r\n            httpHeader cachedResponseHeader = cacheManager.getCachedResponse(urlHash);\r\n            boolean cacheExists = ((cacheFile.isFile()) && (cachedResponseHeader != null));\r\n            \r\n            // why are files unzipped upon arrival? why not zip all files in cache?\r\n            // This follows from the following premises\r\n            // (a) no file shall be unzip-ed more than once to prevent unnessesary computing time\r\n            // (b) old cache entries shall be comparable with refill-entries to detect/distiguish case 3+4\r\n            // (c) the indexing mechanism needs files unzip-ed, a schedule could do that later\r\n            // case b and c contradicts, if we use a scheduler, because files in a stale cache would be unzipped\r\n            // and the newly arrival would be zipped and would have to be unzipped upon load. But then the\r\n            // scheduler is superfluous. Therefore the only reminding case is\r\n            // (d) cached files shall be either all zipped or unzipped\r\n            // case d contradicts with a, because files need to be unzipped for indexing. Therefore\r\n            // the only remaining case is to unzip files right upon load. Thats what we do here.\r\n            \r\n            // finally use existing cache if appropriate\r\n            // here we must decide weather or not to save the data\r\n            // to a cache\r\n            // we distinguish four CACHE STATE cases:\r\n            // 1. cache fill\r\n            // 2. cache fresh - no refill\r\n            // 3. cache stale - refill - necessary\r\n            // 4. cache stale - refill - superfluous\r\n            // in two of these cases we trigger a scheduler to handle newly arrived files:\r\n            // case 1 and case 3\r\n            plasmaHTCache.Entry cacheEntry = (cachedResponseHeader == null) ? null :\r\n                cacheManager.newEntry(\r\n                    requestDate,                     // init date \r\n                    0,                               // crawling depth\r\n                    url,                             // url\r\n                    \"\",                              // name of the url is unknown\r\n                    requestHeader,                   // request headers\r\n                    \"200 OK\",                        // request status\r\n                    cachedResponseHeader,            // response headers\r\n                    null,                            // initiator\r\n                    switchboard.defaultProxyProfile  // profile\r\n            );\r\n            if (yacyCore.getOnlineMode() == 0) {\r\n            \tif (cacheExists) {\r\n            \t\tfulfillRequestFromCache(conProp,url,ext,requestHeader,cachedResponseHeader,cacheFile,respond);\r\n            \t}\r\n            \telse {\r\n            \t\thttpd.sendRespondError(conProp,respond,4,404,null,\"URL not availabe in Cache\",null);\r\n            \t}\r\n            }\r\n            else if (cacheExists && cacheEntry.shallUseCacheForProxy()) {\r\n                fulfillRequestFromCache(conProp,url,ext,requestHeader,cachedResponseHeader,cacheFile,respond);\r\n            } else {            \r\n                fulfillRequestFromWeb(conProp,url,ext,requestHeader,cachedResponseHeader,cacheFile,respond);\r\n            }\r\n           \r\n        } catch (Exception e) {\r\n            try {\r\n                String exTxt = e.getMessage();\r\n                if ((exTxt!=null)&&(exTxt.startsWith(\"Socket closed\"))) {\r\n                    this.forceConnectionClose();\r\n                } else if (!conProp.containsKey(httpHeader.CONNECTION_PROP_PROXY_RESPOND_HEADER)) {\r\n                    String errorMsg = \"Unexpected Error. \" + e.getClass().getName() + \": \" + e.getMessage(); \r\n                    httpd.sendRespondError(conProp,respond,4,501,null,errorMsg,e);\r\n                    this.theLogger.logSevere(errorMsg);\r\n                } else {\r\n                    this.forceConnectionClose();                    \r\n                }\r\n            } catch (Exception ee) {\r\n                this.forceConnectionClose();\r\n            }            \r\n        } finally {\r\n            try { respond.flush(); } catch (Exception e) {}\r\n            if (respond instanceof httpdByteCountOutputStream) ((httpdByteCountOutputStream)respond).finish();\r\n            \r\n            this.connectionProperties.put(httpHeader.CONNECTION_PROP_REQUEST_END,new Long(System.currentTimeMillis()));\r\n            this.connectionProperties.put(httpHeader.CONNECTION_PROP_PROXY_RESPOND_SIZE,new Long(((httpdByteCountOutputStream)respond).getCount()));\r\n            this.logProxyAccess();\r\n        }\r\n    }","id":58248,"modified_method":"/**\r\n     * @param conProp a collection of properties about the connection, like URL\r\n     * @param requestHeader The header lines of the connection from the request\r\n     * @param respond the OutputStream to the client\r\n     * @see de.anomic.http.httpdHandler#doGet(java.util.Properties, de.anomic.http.httpHeader, java.io.OutputStream)\r\n     */\r\n    public void doGet(Properties conProp, httpHeader requestHeader, OutputStream respond) throws IOException {\r\n        \r\n        this.connectionProperties = conProp;\r\n        \r\n        try {\r\n            // remembering the starting time of the request\r\n            Date requestDate = new Date(); // remember the time...\r\n            this.connectionProperties.put(httpHeader.CONNECTION_PROP_REQUEST_START,new Long(requestDate.getTime()));\r\n            if (yacyTrigger) de.anomic.yacy.yacyCore.triggerOnlineAction();\r\n            switchboard.proxyLastAccess = System.currentTimeMillis();\r\n            \r\n            // using an ByteCount OutputStream to count the send bytes (needed for the logfile)\r\n            respond = new httpdByteCountOutputStream(respond,conProp.getProperty(httpHeader.CONNECTION_PROP_REQUESTLINE).length() + 2);\r\n            \r\n            String host =    conProp.getProperty(httpHeader.CONNECTION_PROP_HOST);\r\n            String path =    conProp.getProperty(httpHeader.CONNECTION_PROP_PATH);     // always starts with leading '/'\r\n            String args =    conProp.getProperty(httpHeader.CONNECTION_PROP_ARGS);     // may be null if no args were given\r\n            String ip =      conProp.getProperty(httpHeader.CONNECTION_PROP_CLIENTIP); // the ip from the connecting peer\r\n            \r\n            int port, pos;        \r\n            if ((pos = host.indexOf(\":\")) < 0) {\r\n                port = 80;\r\n            } else {\r\n                port = Integer.parseInt(host.substring(pos + 1));\r\n                host = host.substring(0, pos);\r\n            }\r\n            \r\n            String ext;\r\n            if ((pos = path.lastIndexOf('.')) < 0) {\r\n                ext = \"\";\r\n            } else {\r\n                ext = path.substring(pos + 1).toLowerCase();\r\n            }\r\n            \r\n            URL url = null;\r\n            try {\r\n                url = httpHeader.getRequestURL(conProp);\r\n                //redirector\r\n                if (redirectorEnabled){\r\n                    synchronized(redirectorProcess){\r\n                        redirectorWriter.println(url.toString());\r\n                        redirectorWriter.flush();\r\n                    }\r\n                    String newUrl=redirectorReader.readLine();\r\n                    url=new URL(newUrl);\r\n                    conProp.setProperty(httpHeader.CONNECTION_PROP_HOST, url.getHost()+\":\"+url.getPort());\r\n                    conProp.setProperty(httpHeader.CONNECTION_PROP_PATH, url.getPath());\r\n                    requestHeader.put(httpHeader.HOST, url.getHost()+\":\"+url.getPort());\r\n                    requestHeader.put(httpHeader.CONNECTION_PROP_PATH, url.getPath());\r\n                    host=url.getHost();\r\n                    port=url.getPort();\r\n                    path=url.getPath();\r\n                }\r\n            } catch (MalformedURLException e) {\r\n                String errorMsg = \"ERROR: internal error with url generation: host=\" +\r\n                                  host + \", port=\" + port + \", path=\" + path + \", args=\" + args;\r\n                serverLog.logSevere(\"PROXY\", errorMsg);\r\n                httpd.sendRespondError(conProp,respond,4,501,null,errorMsg,e);\r\n                return;\r\n            }\r\n            \r\n            // check the blacklist\r\n            // blacklist idea inspired by [AS]:\r\n            // respond a 404 for all AGIS (\"all you get is shit\") servers\r\n            String hostlow = host.toLowerCase();\r\n            if (plasmaSwitchboard.urlBlacklist.isListed(hostlow, path)) {\r\n                httpd.sendRespondError(conProp,respond,4,403,null,\r\n                        \"URL '\" + hostlow + \"' blocked by yacy proxy (blacklisted)\",null);\r\n                this.theLogger.logInfo(\"AGIS blocking of host '\" + hostlow + \"'\");\r\n                return;\r\n            }\r\n            \r\n            // handle outgoing cookies\r\n            handleOutgoingCookies(requestHeader, host, ip);\r\n            \r\n            // set another userAgent, if not yellowlisted\r\n            if ((yellowList != null) && (!(yellowList.contains(domain(hostlow))))) {\r\n                // change the User-Agent\r\n                requestHeader.put(httpHeader.USER_AGENT, generateUserAgent(requestHeader));\r\n            }\r\n            \r\n            // setting the X-Forwarded-For Header\r\n            requestHeader.put(httpHeader.X_FORWARDED_FOR,conProp.getProperty(httpHeader.CONNECTION_PROP_CLIENTIP));\r\n            \r\n            // decide wether to use a cache entry or connect to the network\r\n            File cacheFile = cacheManager.getCachePath(url);\r\n            String urlHash = plasmaURL.urlHash(url);\r\n            httpHeader cachedResponseHeader = cacheManager.getCachedResponse(urlHash);\r\n            boolean cacheExists = ((cacheFile.isFile()) && (cachedResponseHeader != null));\r\n            \r\n            // why are files unzipped upon arrival? why not zip all files in cache?\r\n            // This follows from the following premises\r\n            // (a) no file shall be unzip-ed more than once to prevent unnessesary computing time\r\n            // (b) old cache entries shall be comparable with refill-entries to detect/distiguish case 3+4\r\n            // (c) the indexing mechanism needs files unzip-ed, a schedule could do that later\r\n            // case b and c contradicts, if we use a scheduler, because files in a stale cache would be unzipped\r\n            // and the newly arrival would be zipped and would have to be unzipped upon load. But then the\r\n            // scheduler is superfluous. Therefore the only reminding case is\r\n            // (d) cached files shall be either all zipped or unzipped\r\n            // case d contradicts with a, because files need to be unzipped for indexing. Therefore\r\n            // the only remaining case is to unzip files right upon load. Thats what we do here.\r\n            \r\n            // finally use existing cache if appropriate\r\n            // here we must decide weather or not to save the data\r\n            // to a cache\r\n            // we distinguish four CACHE STATE cases:\r\n            // 1. cache fill\r\n            // 2. cache fresh - no refill\r\n            // 3. cache stale - refill - necessary\r\n            // 4. cache stale - refill - superfluous\r\n            // in two of these cases we trigger a scheduler to handle newly arrived files:\r\n            // case 1 and case 3\r\n            plasmaHTCache.Entry cacheEntry = (cachedResponseHeader == null) ? null :\r\n                cacheManager.newEntry(\r\n                    requestDate,                     // init date \r\n                    0,                               // crawling depth\r\n                    url,                             // url\r\n                    \"\",                              // name of the url is unknown\r\n                    requestHeader,                   // request headers\r\n                    \"200 OK\",                        // request status\r\n                    cachedResponseHeader,            // response headers\r\n                    null,                            // initiator\r\n                    switchboard.defaultProxyProfile  // profile\r\n            );\r\n            if (yacyCore.getOnlineMode() == 0) {\r\n            \tif (cacheExists) {\r\n            \t\tfulfillRequestFromCache(conProp,url,ext,requestHeader,cachedResponseHeader,cacheFile,respond);\r\n            \t}\r\n            \telse {\r\n            \t\thttpd.sendRespondError(conProp,respond,4,404,null,\"URL not availabe in Cache\",null);\r\n            \t}\r\n            }\r\n            else if (cacheExists && cacheEntry.shallUseCacheForProxy()) {\r\n                fulfillRequestFromCache(conProp,url,ext,requestHeader,cachedResponseHeader,cacheFile,respond);\r\n            } else {            \r\n                fulfillRequestFromWeb(conProp,url,ext,requestHeader,cachedResponseHeader,cacheFile,respond);\r\n            }\r\n           \r\n        } catch (Exception e) {\r\n            try {\r\n                String exTxt = e.getMessage();\r\n                if ((exTxt!=null)&&(exTxt.startsWith(\"Socket closed\"))) {\r\n                    this.forceConnectionClose();\r\n                } else if (!conProp.containsKey(httpHeader.CONNECTION_PROP_PROXY_RESPOND_HEADER)) {\r\n                    String errorMsg = \"Unexpected Error. \" + e.getClass().getName() + \": \" + e.getMessage(); \r\n                    httpd.sendRespondError(conProp,respond,4,501,null,errorMsg,e);\r\n                    this.theLogger.logSevere(errorMsg);\r\n                } else {\r\n                    this.forceConnectionClose();                    \r\n                }\r\n            } catch (Exception ee) {\r\n                this.forceConnectionClose();\r\n            }            \r\n        } finally {\r\n            try { respond.flush(); } catch (Exception e) {}\r\n            if (respond instanceof httpdByteCountOutputStream) ((httpdByteCountOutputStream)respond).finish();\r\n            \r\n            this.connectionProperties.put(httpHeader.CONNECTION_PROP_REQUEST_END,new Long(System.currentTimeMillis()));\r\n            this.connectionProperties.put(httpHeader.CONNECTION_PROP_PROXY_RESPOND_SIZE,new Long(((httpdByteCountOutputStream)respond).getCount()));\r\n            this.logProxyAccess();\r\n        }\r\n    }","commit_id":"787c36869689b126b553f68cbaafd2f215fa4413","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/**\n   * return a hadoop path from a given url\n   * \n   * @param url\n   *          url to convert\n   * @return path from {@link URL}\n   * @throws URISyntaxException\n   */\n  public static Path getPathFromYarnURL(URL url) throws URISyntaxException {\n    String scheme = url.getScheme() == null ? \"\" : url.getScheme();\n    String authority = url.getHost() != null ? url.getHost() + \":\" + url.getPort()\n        : \"\";\n    return new Path(\n        (new URI(scheme, authority, url.getFile(), null, null)).normalize());\n  }","id":58249,"modified_method":"/**\n   * return a hadoop path from a given url\n   * \n   * @param url\n   *          url to convert\n   * @return path from {@link URL}\n   * @throws URISyntaxException\n   */\n  public static Path getPathFromYarnURL(URL url) throws URISyntaxException {\n    String scheme = url.getScheme() == null ? \"\" : url.getScheme();\n    \n    String authority = \"\";\n    if (url.getHost() != null) {\n      authority = url.getHost();\n      if (url.getPort() > 0) {\n        authority += \":\" + url.getPort();\n      }\n    }\n    \n    return new Path(\n        (new URI(scheme, authority, url.getFile(), null, null)).normalize());\n  }","commit_id":"2cf4aca02eda61a9a1a362dd750ee28bf21788cc","url":"https://github.com/apache/hadoop"},{"original_method":"/**\r\n     * Gets the next address from DNS.\r\n     *\r\n     * @throws DnssecException When a DNSSEC failure occured during the lookup.\r\n     * @throws ParseException When a domain name (possibly returned from DNS\r\n     *             itself) is invalid.\r\n     */\r\n    private boolean getNextAddressInternal()\r\n        throws DnssecException, ParseException\r\n    {\r\n        switch(state)\r\n        {\r\n            case New:\r\n                state = State.Naptr;\r\n                return getNextAddressFromDns();\r\n            case IP:\r\n                if(socketAddressIndex == 0)\r\n                {\r\n                    socketAddressIndex++;\r\n                    try\r\n                    {\r\n                        socketAddress = new InetSocketAddress(\r\n                            nu.getInetAddress(address),\r\n                            ListeningPoint.TLS.equalsIgnoreCase(transport)\r\n                                ? ListeningPoint.PORT_5061\r\n                                : ListeningPoint.PORT_5060\r\n                        );\r\n                    }\r\n                    catch (UnknownHostException e)\r\n                    {\r\n                        //this is not supposed to happen\r\n                        logger.error(\"invalid IP address: \" + address, e);\r\n                        return false;\r\n                    }\r\n                    transport = defaultTransport;\r\n                    return true;\r\n                }\r\n                return false;\r\n            case Naptr:\r\n                naptrRecords = nu.getNAPTRRecords(address);\r\n                if(naptrRecords != null && naptrRecords.length > 0)\r\n                {\r\n                    state = State.NaptrSrv;\r\n                    naptrIndex = 0;\r\n                }\r\n                else\r\n                {\r\n                    hadSrvResults = false;\r\n                    state = State.Srv;\r\n                    srvTransportIndex = 0;\r\n                }\r\n\r\n                return getNextAddressFromDns();\r\n            case NaptrSrv:\r\n                for(; naptrIndex < naptrRecords.length; naptrIndex++)\r\n                {\r\n                    srvRecords = nu.getSRVRecords(\r\n                        naptrRecords[naptrIndex][2]);\r\n                    if(srvRecords != null && srvRecords.length > 0)\r\n                    {\r\n                        state = State.NaptrSrvHosts;\r\n                        if(TLS.equalsIgnoreCase(naptrRecords[naptrIndex][1]))\r\n                            transport = TLS;\r\n                        else if(TCP.equalsIgnoreCase(naptrRecords[naptrIndex][1]))\r\n                            transport = TCP;\r\n                        else\r\n                            transport = UDP;\r\n                        srvRecordsIndex = 0;\r\n                        if(getNextAddressFromDns())\r\n                        {\r\n                            naptrIndex++;\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false; //no more naptr's\r\n            case NaptrSrvHosts:\r\n                for(; srvRecordsIndex < srvRecords.length; srvRecordsIndex++)\r\n                {\r\n                    socketAddresses = nu.getAandAAAARecords(\r\n                        srvRecords[srvRecordsIndex].getTarget(),\r\n                        srvRecords[srvRecordsIndex].getPort());\r\n                    if(socketAddresses != null && socketAddresses.length > 0)\r\n                    {\r\n                        state = State.NaptrSrvHostIPs;\r\n                        socketAddressIndex = 0;\r\n                        if(getNextAddressFromDns())\r\n                        {\r\n                            srvRecordsIndex++;\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                state = State.NaptrSrv;\r\n                return getNextAddressFromDns(); //backtrack to next naptr\r\n            case NaptrSrvHostIPs:\r\n                if(socketAddressIndex >= socketAddresses.length)\r\n                {\r\n                    state = State.NaptrSrvHosts;\r\n                    return getNextAddressFromDns(); //backtrack to next srv\r\n                }\r\n                socketAddress = socketAddresses[socketAddressIndex];\r\n                socketAddressIndex++;\r\n                return true;\r\n            case Srv:\r\n                for(;srvTransportIndex < transports.length; srvTransportIndex++)\r\n                {\r\n                    srvRecords = nu.getSRVRecords(\r\n                        (TLS.equals(transports[srvTransportIndex])\r\n                            ? \"sips\"\r\n                            : \"sip\"),\r\n                        (UDP.equalsIgnoreCase(transports[srvTransportIndex])\r\n                            ? UDP\r\n                            : TCP),\r\n                        address);\r\n                    if(srvRecords != null && srvRecords.length > 0)\r\n                    {\r\n                        hadSrvResults = true;\r\n                        state = State.SrvHosts;\r\n                        srvRecordsIndex = 0;\r\n                        transport = transports[srvTransportIndex];\r\n                        if(getNextAddressFromDns())\r\n                        {\r\n                            srvTransportIndex++;\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                if(!hadSrvResults)\r\n                {\r\n                    state = State.Hosts;\r\n                    socketAddressIndex = 0;\r\n                    return getNextAddressFromDns();\r\n                }\r\n                return false;\r\n            case SrvHosts:\r\n                if(srvRecordsIndex >= srvRecords.length)\r\n                {\r\n                    state = State.Srv;\r\n                    return getNextAddressFromDns(); //backtrack to next srv record\r\n                }\r\n                for(; srvRecordsIndex < srvRecords.length; srvRecordsIndex++)\r\n                {\r\n                    socketAddresses = nu.getAandAAAARecords(\r\n                        srvRecords[srvRecordsIndex].getTarget(),\r\n                        srvRecords[srvRecordsIndex].getPort());\r\n                    if(socketAddresses != null && socketAddresses.length > 0)\r\n                    {\r\n                        state = State.SrvHostIPs;\r\n                        socketAddressIndex = 0;\r\n                        if(getNextAddressFromDns())\r\n                        {\r\n                            srvRecordsIndex++;\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            case SrvHostIPs:\r\n                if(socketAddressIndex >= socketAddresses.length)\r\n                {\r\n                    state = State.SrvHosts;\r\n                    return getNextAddressFromDns();\r\n                }\r\n                socketAddress = socketAddresses[socketAddressIndex];\r\n                socketAddressIndex++;\r\n                return true;\r\n            case Hosts:\r\n                transport = defaultTransport;\r\n\r\n                if(socketAddresses == null)\r\n                {\r\n                    socketAddresses = nu.getAandAAAARecords(\r\n                        address,\r\n                        ListeningPoint.PORT_5060);\r\n                }\r\n\r\n                if(socketAddresses != null && socketAddresses.length > 0\r\n                    && socketAddressIndex < socketAddresses.length)\r\n                {\r\n                    socketAddress = socketAddresses[socketAddressIndex++];\r\n                    return true;\r\n                }\r\n                return false;\r\n        }\r\n        return false;\r\n    }","id":58250,"modified_method":"/**\n     * Gets the next address from DNS.\n     *\n     * @throws DnssecException When a DNSSEC failure occured during the lookup.\n     * @throws ParseException When a domain name (possibly returned from DNS\n     *             itself) is invalid.\n     */\n    private boolean getNextAddressInternal()\n        throws DnssecException, ParseException\n    {\n        switch(state)\n        {\n            case New:\n                state = State.Naptr;\n                return getNextAddressFromDns();\n            case IP:\n                if(socketAddressIndex == 0)\n                {\n                    socketAddressIndex++;\n                    try\n                    {\n                        socketAddress = new InetSocketAddress(\n                            nu.getInetAddress(address),\n                            ListeningPoint.TLS.equalsIgnoreCase(transport)\n                                ? ListeningPoint.PORT_5061\n                                : ListeningPoint.PORT_5060\n                        );\n                    }\n                    catch (UnknownHostException e)\n                    {\n                        //this is not supposed to happen\n                        logger.error(\"invalid IP address: \" + address, e);\n                        return false;\n                    }\n                    transport = defaultTransport;\n                    return true;\n                }\n                return false;\n            case Naptr:\n                naptrRecords = nu.getNAPTRRecords(address);\n                if(naptrRecords != null && naptrRecords.length > 0)\n                {\n                    state = State.NaptrSrv;\n                    naptrIndex = 0;\n                }\n                else\n                {\n                    hadSrvResults = false;\n                    state = State.Srv;\n                    srvTransportIndex = 0;\n                }\n\n                return getNextAddressFromDns();\n            case NaptrSrv:\n                for(; naptrIndex < naptrRecords.length; naptrIndex++)\n                {\n                    srvRecords = nu.getSRVRecords(\n                        naptrRecords[naptrIndex][2]);\n                    if(srvRecords != null && srvRecords.length > 0)\n                    {\n                        state = State.NaptrSrvHosts;\n                        if(TLS.equalsIgnoreCase(naptrRecords[naptrIndex][1]))\n                            transport = TLS;\n                        else if(TCP.equalsIgnoreCase(naptrRecords[naptrIndex][1]))\n                            transport = TCP;\n                        else\n                            transport = UDP;\n                        srvRecordsIndex = 0;\n                        if(getNextAddressFromDns())\n                        {\n                            naptrIndex++;\n                            return true;\n                        }\n                    }\n                }\n                return false; //no more naptr's\n            case NaptrSrvHosts:\n                for(; srvRecordsIndex < srvRecords.length; srvRecordsIndex++)\n                {\n                    socketAddresses = nu.getAandAAAARecords(\n                        srvRecords[srvRecordsIndex].getTarget(),\n                        srvRecords[srvRecordsIndex].getPort());\n                    if(socketAddresses != null && socketAddresses.length > 0)\n                    {\n                        state = State.NaptrSrvHostIPs;\n                        socketAddressIndex = 0;\n                        if(getNextAddressFromDns())\n                        {\n                            srvRecordsIndex++;\n                            return true;\n                        }\n                    }\n                }\n                state = State.NaptrSrv;\n                return getNextAddressFromDns(); //backtrack to next naptr\n            case NaptrSrvHostIPs:\n                if(socketAddressIndex >= socketAddresses.length)\n                {\n                    state = State.NaptrSrvHosts;\n                    return getNextAddressFromDns(); //backtrack to next srv\n                }\n                socketAddress = socketAddresses[socketAddressIndex];\n                socketAddressIndex++;\n                return true;\n            case Srv:\n                for(;srvTransportIndex < transports.length; srvTransportIndex++)\n                {\n                    srvRecords = nu.getSRVRecords(\n                        (TLS.equals(transports[srvTransportIndex])\n                            ? \"sips\"\n                            : \"sip\"),\n                        (UDP.equalsIgnoreCase(transports[srvTransportIndex])\n                            ? UDP\n                            : TCP),\n                        address);\n                    if(srvRecords != null && srvRecords.length > 0)\n                    {\n                        hadSrvResults = true;\n                        state = State.SrvHosts;\n                        srvRecordsIndex = 0;\n                        transport = transports[srvTransportIndex];\n                        if(getNextAddressFromDns())\n                        {\n                            srvTransportIndex++;\n                            return true;\n                        }\n                    }\n                }\n                if(!hadSrvResults)\n                {\n                    state = State.Hosts;\n                    socketAddressIndex = 0;\n                    return getNextAddressFromDns();\n                }\n                return false;\n            case SrvHosts:\n                if(srvRecordsIndex >= srvRecords.length)\n                {\n                    state = State.Srv;\n                    return getNextAddressFromDns(); //backtrack to next srv record\n                }\n                for(; srvRecordsIndex < srvRecords.length; srvRecordsIndex++)\n                {\n                    socketAddresses = nu.getAandAAAARecords(\n                        srvRecords[srvRecordsIndex].getTarget(),\n                        srvRecords[srvRecordsIndex].getPort());\n                    if(socketAddresses != null && socketAddresses.length > 0)\n                    {\n                        state = State.SrvHostIPs;\n                        socketAddressIndex = 0;\n                        if(getNextAddressFromDns())\n                        {\n                            srvRecordsIndex++;\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            case SrvHostIPs:\n                if(socketAddressIndex >= socketAddresses.length)\n                {\n                    state = State.SrvHosts;\n                    return getNextAddressFromDns();\n                }\n                socketAddress = socketAddresses[socketAddressIndex];\n                socketAddressIndex++;\n                return true;\n            case Hosts:\n                transport = defaultTransport;\n\n                if(socketAddresses == null)\n                {\n                    socketAddresses = nu.getAandAAAARecords(\n                        address,\n                        port);\n                }\n\n                if(socketAddresses != null && socketAddresses.length > 0\n                    && socketAddressIndex < socketAddresses.length)\n                {\n                    socketAddress = socketAddresses[socketAddressIndex++];\n                    return true;\n                }\n                return false;\n        }\n        return false;\n    }","commit_id":"0d8d67ac0eda96037e635fce462aa6587606e813","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Creates a new instance of this class. Uses the server from the account.\r\n     *\r\n     * @param account the account of this SIP protocol instance\r\n     * @param defaultTransport the default transport to use when DNS does not\r\n     *            provide a protocol through NAPTR or SRV\r\n     */\r\n    public AutoProxyConnection( SipAccountIDImpl account,\r\n                                String defaultTransport )\r\n    {\r\n        super(account);\r\n        this.defaultTransport = defaultTransport;\r\n        reset();\r\n    }","id":58251,"modified_method":"/**\n     * Creates a new instance of this class. Uses the server from the account.\n     *\n     * @param account the account of this SIP protocol instance\n     * @param defaultTransport the default transport to use when DNS does not\n     *            provide a protocol through NAPTR or SRV\n     */\n    public AutoProxyConnection( SipAccountIDImpl account,\n                                String defaultTransport )\n    {\n        super(account);\n        port = ListeningPoint.PORT_5060;\n        this.defaultTransport = defaultTransport;\n        reset();\n    }","commit_id":"0d8d67ac0eda96037e635fce462aa6587606e813","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Creates a new instance of this class. Uses the supplied address instead\r\n     * of the server address from the account.\r\n     *\r\n     * @param account the account of this SIP protocol instance\r\n     * @param address the domain on which to perform autodetection\r\n     * @param defaultTransport the default transport to use when DNS does not\r\n     *            provide a protocol through NAPTR or SRV\r\n     */\r\n    public AutoProxyConnection( SipAccountIDImpl account, String address,\r\n                                String defaultTransport )\r\n    {\r\n        super(account);\r\n        this.defaultTransport = defaultTransport;\r\n        reset();\r\n        this.address = address;\r\n        if (nu.isValidIPAddress(this.address))\r\n        {\r\n            this.state = State.IP;\r\n        }\r\n    }","id":58252,"modified_method":"/**\n     * Creates a new instance of this class. Uses the supplied address instead\n     * of the server address from the account.\n     *\n     * @param account the account of this SIP protocol instance\n     * @param address the domain on which to perform autodetection\n     * @param port the destination socket port\n     * @param defaultTransport the default transport to use when DNS does not\n     *            provide a protocol through NAPTR or SRV\n     */\n    public AutoProxyConnection( SipAccountIDImpl account, String address,\n                                int port, String defaultTransport )\n    {\n        super(account);\n        this.defaultTransport = defaultTransport;\n        this.port = port;\n        reset();\n        this.address = address;\n        if (nu.isValidIPAddress(this.address))\n        {\n            this.state = State.IP;\n        }\n    }","commit_id":"0d8d67ac0eda96037e635fce462aa6587606e813","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>InetAddress<\/tt> that is most likely to be to be used\n     * as a next hop when contacting the specified <tt>destination<\/tt>. This is\n     * an utility method that is used whenever we have to choose one of our\n     * local addresses to put in the Via, Contact or (in the case of no\n     * registrar accounts) From headers. The method also takes into account\n     * the existence of an outbound proxy and in that case returns its address\n     * as the next hop.\n     *\n     * @param destination the destination that we would contact.\n     *\n     * @return the <tt>InetSocketAddress<\/tt> that is most likely to be to be\n     * used as a next hop when contacting the specified <tt>destination<\/tt>.\n     *\n     * @throws IllegalArgumentException if <tt>destination<\/tt> is not a valid\n     * host/ip/fqdn\n     */\n    public InetSocketAddress getIntendedDestination(SipURI destination)\n        throws IllegalArgumentException\n    {\n        return getIntendedDestination(destination.getHost());\n    }","id":58253,"modified_method":"/**\n     * Returns the <tt>InetAddress<\/tt> that is most likely to be to be used\n     * as a next hop when contacting the specified <tt>destination<\/tt>. This is\n     * an utility method that is used whenever we have to choose one of our\n     * local addresses to put in the Via, Contact or (in the case of no\n     * registrar accounts) From headers. The method also takes into account\n     * the existence of an outbound proxy and in that case returns its address\n     * as the next hop.\n     *\n     * @param destination the destination that we would contact.\n     *\n     * @return the <tt>InetSocketAddress<\/tt> that is most likely to be to be\n     * used as a next hop when contacting the specified <tt>destination<\/tt>.\n     *\n     * @throws IllegalArgumentException if <tt>destination<\/tt> is not a valid\n     * host/ip/fqdn\n     */\n    public InetSocketAddress getIntendedDestination(SipURI destination)\n        throws IllegalArgumentException\n    {\n        // Address\n        InetSocketAddress destinationInetAddress = null;\n\n        //resolveSipAddress() verifies whether our destination is valid\n        //but the destination could only be known to our outbound proxy\n        //if we have one. If this is the case replace the destination\n        //address with that of the proxy.(report by Dan Bogos)\n        InetSocketAddress outboundProxy = connection.getAddress();\n\n        if(outboundProxy != null)\n        {\n            if (logger.isTraceEnabled())\n                logger.trace(\"Will use proxy address\");\n            destinationInetAddress = outboundProxy;\n        }\n        else\n        {\n            String transport = destination.getTransportParam();\n            if (transport == null)\n            {\n                transport = getDefaultTransport();\n            }\n\n            int port = destination.getPort();\n            if (port == -1)\n            {\n                port = ListeningPoint.PORT_5060;\n            }\n\n            ProxyConnection tempConn = new AutoProxyConnection(\n                (SipAccountIDImpl)getAccountID(),\n                destination.getHost(),\n                port,\n                transport);\n            try\n            {\n                if(tempConn.getNextAddress())\n                    destinationInetAddress = tempConn.getAddress();\n                else\n                    throw new IllegalArgumentException(destination.getHost()\n                        + \" could not be resolved to an internet address.\");\n            }\n            catch (DnssecException e)\n            {\n                logger.error(\"unable to obtain next hop address\", e);\n            }\n        }\n\n        if(logger.isDebugEnabled())\n            logger.debug(\"Returning address \" + destinationInetAddress\n                 + \" for destination \" + destination.getHost());\n\n        return destinationInetAddress;\n    }","commit_id":"0d8d67ac0eda96037e635fce462aa6587606e813","url":"https://github.com/jitsi/jitsi"},{"original_method":"@Override\n    public HttpRequest toNettyRequest(Message message, String uri, NettyHttpConfiguration configuration) throws Exception {\n        LOG.trace(\"toNettyRequest: {}\", message);\n\n        // the message body may already be a Netty HTTP response\n        if (message.getBody() instanceof HttpRequest) {\n            return (HttpRequest) message.getBody();\n        }\n\n        String uriForRequest = uri;\n        if (configuration.isUseRelativePath()) {\n            int indexOfPath = uri.indexOf((new URI(uri)).getPath());\n            if (indexOfPath > 0) {\n                uriForRequest = uri.substring(indexOfPath);               \n            } \n        }\n        \n        // just assume GET for now, we will later change that to the actual method to use\n        HttpRequest request = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET, uriForRequest);\n        \n        Object body = message.getBody();\n        if (body != null) {\n            // support bodies as native Netty\n            ByteBuf buffer;\n            if (body instanceof ByteBuf) {\n                buffer = (ByteBuf) body;\n            } else {\n                // try to convert to buffer first\n                buffer = message.getBody(ByteBuf.class);\n                if (buffer == null) {\n                    // fallback to byte array as last resort\n                    byte[] data = message.getMandatoryBody(byte[].class);\n                    buffer = NettyConverter.toByteBuffer(data);\n                }\n            }\n            if (buffer != null) {\n                request = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.POST, uriForRequest, buffer);\n                int len = buffer.readableBytes();\n                // set content-length\n                request.headers().set(HttpHeaders.Names.CONTENT_LENGTH, len);\n                LOG.trace(\"Content-Length: {}\", len);\n            } else {\n                // we do not support this kind of body\n                throw new NoTypeConversionAvailableException(body, ByteBuf.class);\n            }\n        }\n\n        // update HTTP method accordingly as we know if we have a body or not\n        HttpMethod method = NettyHttpHelper.createMethod(message, body != null);\n        request.setMethod(method);\n        \n        TypeConverter tc = message.getExchange().getContext().getTypeConverter();\n\n        // if we bridge endpoint then we need to skip matching headers with the HTTP_QUERY to avoid sending\n        // duplicated headers to the receiver, so use this skipRequestHeaders as the list of headers to skip\n        Map<String, Object> skipRequestHeaders = null;\n        if (configuration.isBridgeEndpoint()) {\n            String queryString = message.getHeader(Exchange.HTTP_QUERY, String.class);\n            if (queryString != null) {\n                skipRequestHeaders = URISupport.parseQuery(queryString, false, true);\n            }\n            // Need to remove the Host key as it should be not used\n            message.getHeaders().remove(\"host\");\n        }\n\n        // append headers\n        // must use entrySet to ensure case of keys is preserved\n        for (Map.Entry<String, Object> entry : message.getHeaders().entrySet()) {\n            String key = entry.getKey();\n            Object value = entry.getValue();\n\n            // we should not add headers for the parameters in the uri if we bridge the endpoint\n            // as then we would duplicate headers on both the endpoint uri, and in HTTP headers as well\n            if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {\n                continue;\n            }\n\n            // use an iterator as there can be multiple values. (must not use a delimiter)\n            final Iterator<?> it = ObjectHelper.createIterator(value, null, true);\n            while (it.hasNext()) {\n                String headerValue = tc.convertTo(String.class, it.next());\n\n                if (headerValue != null && headerFilterStrategy != null\n                        && !headerFilterStrategy.applyFilterToCamelHeaders(key, headerValue, message.getExchange())) {\n                    LOG.trace(\"HTTP-Header: {}={}\", key, headerValue);\n                    request.headers().add(key, headerValue);\n                }\n            }\n        }\n\n        // set the content type in the response.\n        String contentType = MessageHelper.getContentType(message);\n        if (contentType != null) {\n            // set content-type\n            request.headers().set(HttpHeaders.Names.CONTENT_TYPE, contentType);\n            LOG.trace(\"Content-Type: {}\", contentType);\n        }\n\n        // must include HOST header as required by HTTP 1.1\n        // use URI as its faster than URL (no DNS lookup)\n        URI u = new URI(uri);\n        String host = u.getHost();\n        request.headers().set(HttpHeaders.Names.HOST, host);\n        LOG.trace(\"Host: {}\", host);\n\n        // configure connection to accordingly to keep alive configuration\n        // favor using the header from the message\n        String connection = message.getHeader(HttpHeaders.Names.CONNECTION, String.class);\n        if (connection == null) {\n            // fallback and use the keep alive from the configuration\n            if (configuration.isKeepAlive()) {\n                connection = HttpHeaders.Values.KEEP_ALIVE;\n            } else {\n                connection = HttpHeaders.Values.CLOSE;\n            }\n        }\n        request.headers().set(HttpHeaders.Names.CONNECTION, connection);\n        LOG.trace(\"Connection: {}\", connection);\n\n        return request;\n    }","id":58254,"modified_method":"@Override\n    public HttpRequest toNettyRequest(Message message, String uri, NettyHttpConfiguration configuration) throws Exception {\n        LOG.trace(\"toNettyRequest: {}\", message);\n\n        // the message body may already be a Netty HTTP response\n        if (message.getBody() instanceof HttpRequest) {\n            return (HttpRequest) message.getBody();\n        }\n\n        String uriForRequest = uri;\n        if (configuration.isUseRelativePath()) {\n            int indexOfPath = uri.indexOf((new URI(uri)).getPath());\n            if (indexOfPath > 0) {\n                uriForRequest = uri.substring(indexOfPath);               \n            } \n        }\n        \n        // just assume GET for now, we will later change that to the actual method to use\n        HttpRequest request = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET, uriForRequest);\n        \n        Object body = message.getBody();\n        if (body != null) {\n            // support bodies as native Netty\n            ByteBuf buffer;\n            if (body instanceof ByteBuf) {\n                buffer = (ByteBuf) body;\n            } else {\n                // try to convert to buffer first\n                buffer = message.getBody(ByteBuf.class);\n                if (buffer == null) {\n                    // fallback to byte array as last resort\n                    byte[] data = message.getMandatoryBody(byte[].class);\n                    buffer = NettyConverter.toByteBuffer(data);\n                }\n            }\n            if (buffer != null) {\n                request = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.POST, uriForRequest, buffer);\n                int len = buffer.readableBytes();\n                // set content-length\n                request.headers().set(HttpHeaders.Names.CONTENT_LENGTH, len);\n                LOG.trace(\"Content-Length: {}\", len);\n            } else {\n                // we do not support this kind of body\n                throw new NoTypeConversionAvailableException(body, ByteBuf.class);\n            }\n        }\n\n        // update HTTP method accordingly as we know if we have a body or not\n        HttpMethod method = NettyHttpHelper.createMethod(message, body != null);\n        request.setMethod(method);\n        \n        TypeConverter tc = message.getExchange().getContext().getTypeConverter();\n\n        // if we bridge endpoint then we need to skip matching headers with the HTTP_QUERY to avoid sending\n        // duplicated headers to the receiver, so use this skipRequestHeaders as the list of headers to skip\n        Map<String, Object> skipRequestHeaders = null;\n        if (configuration.isBridgeEndpoint()) {\n            String queryString = message.getHeader(Exchange.HTTP_QUERY, String.class);\n            if (queryString != null) {\n                skipRequestHeaders = URISupport.parseQuery(queryString, false, true);\n            }\n            // Need to remove the Host key as it should be not used\n            message.getHeaders().remove(\"host\");\n        }\n\n        // append headers\n        // must use entrySet to ensure case of keys is preserved\n        for (Map.Entry<String, Object> entry : message.getHeaders().entrySet()) {\n            String key = entry.getKey();\n            Object value = entry.getValue();\n\n            // we should not add headers for the parameters in the uri if we bridge the endpoint\n            // as then we would duplicate headers on both the endpoint uri, and in HTTP headers as well\n            if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {\n                continue;\n            }\n\n            // use an iterator as there can be multiple values. (must not use a delimiter)\n            final Iterator<?> it = ObjectHelper.createIterator(value, null, true);\n            while (it.hasNext()) {\n                String headerValue = tc.convertTo(String.class, it.next());\n\n                if (headerValue != null && headerFilterStrategy != null\n                        && !headerFilterStrategy.applyFilterToCamelHeaders(key, headerValue, message.getExchange())) {\n                    LOG.trace(\"HTTP-Header: {}={}\", key, headerValue);\n                    request.headers().add(key, headerValue);\n                }\n            }\n        }\n\n        // set the content type in the response.\n        String contentType = MessageHelper.getContentType(message);\n        if (contentType != null) {\n            // set content-type\n            request.headers().set(HttpHeaders.Names.CONTENT_TYPE, contentType);\n            LOG.trace(\"Content-Type: {}\", contentType);\n        }\n\n        // must include HOST header as required by HTTP 1.1\n        // use URI as its faster than URL (no DNS lookup)\n        URI u = new URI(uri);\n        String hostHeader = u.getHost() \n                + (configuration.isUseRelativePath() ? \":\" + u.getPort() : \"\");\n        request.headers().set(HttpHeaders.Names.HOST, hostHeader);\n        LOG.trace(\"Host: {}\", hostHeader);\n\n        // configure connection to accordingly to keep alive configuration\n        // favor using the header from the message\n        String connection = message.getHeader(HttpHeaders.Names.CONNECTION, String.class);\n        if (connection == null) {\n            // fallback and use the keep alive from the configuration\n            if (configuration.isKeepAlive()) {\n                connection = HttpHeaders.Values.KEEP_ALIVE;\n            } else {\n                connection = HttpHeaders.Values.CLOSE;\n            }\n        }\n        request.headers().set(HttpHeaders.Names.CONNECTION, connection);\n        LOG.trace(\"Connection: {}\", connection);\n\n        return request;\n    }","commit_id":"dedb59d82f9d60c4854cc22f6d16358e56995bab","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    public HttpRequest toNettyRequest(Message message, String uri, NettyHttpConfiguration configuration) throws Exception {\n        LOG.trace(\"toNettyRequest: {}\", message);\n\n        // the message body may already be a Netty HTTP response\n        if (message.getBody() instanceof HttpRequest) {\n            return (HttpRequest) message.getBody();\n        }\n\n        String uriForRequest = uri;\n        if (configuration.isUseRelativePath()) {\n            int indexOfPath = uri.indexOf((new URI(uri)).getPath());\n            if (indexOfPath > 0) {\n                uriForRequest = uri.substring(indexOfPath);               \n            } \n        }\n        \n        // just assume GET for now, we will later change that to the actual method to use\n        HttpRequest request = new DefaultHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET, uriForRequest);\n\n        TypeConverter tc = message.getExchange().getContext().getTypeConverter();\n\n        // if we bridge endpoint then we need to skip matching headers with the HTTP_QUERY to avoid sending\n        // duplicated headers to the receiver, so use this skipRequestHeaders as the list of headers to skip\n        Map<String, Object> skipRequestHeaders = null;\n        if (configuration.isBridgeEndpoint()) {\n            String queryString = message.getHeader(Exchange.HTTP_QUERY, String.class);\n            if (queryString != null) {\n                skipRequestHeaders = URISupport.parseQuery(queryString, false, true);\n            }\n            // Need to remove the Host key as it should be not used\n            message.getHeaders().remove(\"host\");\n        }\n\n        // append headers\n        // must use entrySet to ensure case of keys is preserved\n        for (Map.Entry<String, Object> entry : message.getHeaders().entrySet()) {\n            String key = entry.getKey();\n            Object value = entry.getValue();\n\n            // we should not add headers for the parameters in the uri if we bridge the endpoint\n            // as then we would duplicate headers on both the endpoint uri, and in HTTP headers as well\n            if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {\n                continue;\n            }\n\n            // use an iterator as there can be multiple values. (must not use a delimiter)\n            final Iterator<?> it = ObjectHelper.createIterator(value, null, true);\n            while (it.hasNext()) {\n                String headerValue = tc.convertTo(String.class, it.next());\n\n                if (headerValue != null && headerFilterStrategy != null\n                        && !headerFilterStrategy.applyFilterToCamelHeaders(key, headerValue, message.getExchange())) {\n                    LOG.trace(\"HTTP-Header: {}={}\", key, headerValue);\n                    request.headers().add(key, headerValue);\n                }\n            }\n        }\n\n        Object body = message.getBody();\n        if (body != null) {\n            // support bodies as native Netty\n            ChannelBuffer buffer;\n            if (body instanceof ChannelBuffer) {\n                buffer = (ChannelBuffer) body;\n            } else {\n                // try to convert to buffer first\n                buffer = message.getBody(ChannelBuffer.class);\n                if (buffer == null) {\n                    // fallback to byte array as last resort\n                    byte[] data = message.getMandatoryBody(byte[].class);\n                    buffer = ChannelBuffers.copiedBuffer(data);\n                }\n            }\n            if (buffer != null) {\n                request.setContent(buffer);\n                int len = buffer.readableBytes();\n                // set content-length\n                request.headers().set(HttpHeaders.Names.CONTENT_LENGTH, len);\n                LOG.trace(\"Content-Length: {}\", len);\n            } else {\n                // we do not support this kind of body\n                throw new NoTypeConversionAvailableException(body, ChannelBuffer.class);\n            }\n        }\n\n        // update HTTP method accordingly as we know if we have a body or not\n        HttpMethod method = NettyHttpHelper.createMethod(message, body != null);\n        request.setMethod(method);\n\n        // set the content type in the response.\n        String contentType = MessageHelper.getContentType(message);\n        if (contentType != null) {\n            // set content-type\n            request.headers().set(HttpHeaders.Names.CONTENT_TYPE, contentType);\n            LOG.trace(\"Content-Type: {}\", contentType);\n        }\n\n        // must include HOST header as required by HTTP 1.1\n        // use URI as its faster than URL (no DNS lookup)\n        URI u = new URI(uri);\n        String host = u.getHost();\n        request.headers().set(HttpHeaders.Names.HOST, host);\n        LOG.trace(\"Host: {}\", host);\n\n        // configure connection to accordingly to keep alive configuration\n        // favor using the header from the message\n        String connection = message.getHeader(HttpHeaders.Names.CONNECTION, String.class);\n        if (connection == null) {\n            // fallback and use the keep alive from the configuration\n            if (configuration.isKeepAlive()) {\n                connection = HttpHeaders.Values.KEEP_ALIVE;\n            } else {\n                connection = HttpHeaders.Values.CLOSE;\n            }\n        }\n        request.headers().set(HttpHeaders.Names.CONNECTION, connection);\n        LOG.trace(\"Connection: {}\", connection);\n        return request;\n    }","id":58255,"modified_method":"@Override\n    public HttpRequest toNettyRequest(Message message, String uri, NettyHttpConfiguration configuration) throws Exception {\n        LOG.trace(\"toNettyRequest: {}\", message);\n\n        // the message body may already be a Netty HTTP response\n        if (message.getBody() instanceof HttpRequest) {\n            return (HttpRequest) message.getBody();\n        }\n\n        String uriForRequest = uri;\n        if (configuration.isUseRelativePath()) {\n            int indexOfPath = uri.indexOf((new URI(uri)).getPath());\n            if (indexOfPath > 0) {\n                uriForRequest = uri.substring(indexOfPath);               \n            } \n        }\n        \n        // just assume GET for now, we will later change that to the actual method to use\n        HttpRequest request = new DefaultHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET, uriForRequest);\n\n        TypeConverter tc = message.getExchange().getContext().getTypeConverter();\n\n        // if we bridge endpoint then we need to skip matching headers with the HTTP_QUERY to avoid sending\n        // duplicated headers to the receiver, so use this skipRequestHeaders as the list of headers to skip\n        Map<String, Object> skipRequestHeaders = null;\n        if (configuration.isBridgeEndpoint()) {\n            String queryString = message.getHeader(Exchange.HTTP_QUERY, String.class);\n            if (queryString != null) {\n                skipRequestHeaders = URISupport.parseQuery(queryString, false, true);\n            }\n            // Need to remove the Host key as it should be not used\n            message.getHeaders().remove(\"host\");\n        }\n\n        // append headers\n        // must use entrySet to ensure case of keys is preserved\n        for (Map.Entry<String, Object> entry : message.getHeaders().entrySet()) {\n            String key = entry.getKey();\n            Object value = entry.getValue();\n\n            // we should not add headers for the parameters in the uri if we bridge the endpoint\n            // as then we would duplicate headers on both the endpoint uri, and in HTTP headers as well\n            if (skipRequestHeaders != null && skipRequestHeaders.containsKey(key)) {\n                continue;\n            }\n\n            // use an iterator as there can be multiple values. (must not use a delimiter)\n            final Iterator<?> it = ObjectHelper.createIterator(value, null, true);\n            while (it.hasNext()) {\n                String headerValue = tc.convertTo(String.class, it.next());\n\n                if (headerValue != null && headerFilterStrategy != null\n                        && !headerFilterStrategy.applyFilterToCamelHeaders(key, headerValue, message.getExchange())) {\n                    LOG.trace(\"HTTP-Header: {}={}\", key, headerValue);\n                    request.headers().add(key, headerValue);\n                }\n            }\n        }\n\n        Object body = message.getBody();\n        if (body != null) {\n            // support bodies as native Netty\n            ChannelBuffer buffer;\n            if (body instanceof ChannelBuffer) {\n                buffer = (ChannelBuffer) body;\n            } else {\n                // try to convert to buffer first\n                buffer = message.getBody(ChannelBuffer.class);\n                if (buffer == null) {\n                    // fallback to byte array as last resort\n                    byte[] data = message.getMandatoryBody(byte[].class);\n                    buffer = ChannelBuffers.copiedBuffer(data);\n                }\n            }\n            if (buffer != null) {\n                request.setContent(buffer);\n                int len = buffer.readableBytes();\n                // set content-length\n                request.headers().set(HttpHeaders.Names.CONTENT_LENGTH, len);\n                LOG.trace(\"Content-Length: {}\", len);\n            } else {\n                // we do not support this kind of body\n                throw new NoTypeConversionAvailableException(body, ChannelBuffer.class);\n            }\n        }\n\n        // update HTTP method accordingly as we know if we have a body or not\n        HttpMethod method = NettyHttpHelper.createMethod(message, body != null);\n        request.setMethod(method);\n\n        // set the content type in the response.\n        String contentType = MessageHelper.getContentType(message);\n        if (contentType != null) {\n            // set content-type\n            request.headers().set(HttpHeaders.Names.CONTENT_TYPE, contentType);\n            LOG.trace(\"Content-Type: {}\", contentType);\n        }\n\n        // must include HOST header as required by HTTP 1.1\n        // use URI as its faster than URL (no DNS lookup)\n        URI u = new URI(uri);\n        String hostHeader = u.getHost() \n                + (configuration.isUseRelativePath() ? \":\" + u.getPort() : \"\");\n        request.headers().set(HttpHeaders.Names.HOST, hostHeader);\n        LOG.trace(\"Host: {}\", hostHeader);\n\n        // configure connection to accordingly to keep alive configuration\n        // favor using the header from the message\n        String connection = message.getHeader(HttpHeaders.Names.CONNECTION, String.class);\n        if (connection == null) {\n            // fallback and use the keep alive from the configuration\n            if (configuration.isKeepAlive()) {\n                connection = HttpHeaders.Values.KEEP_ALIVE;\n            } else {\n                connection = HttpHeaders.Values.CLOSE;\n            }\n        }\n        request.headers().set(HttpHeaders.Names.CONNECTION, connection);\n        LOG.trace(\"Connection: {}\", connection);\n        return request;\n    }","commit_id":"dedb59d82f9d60c4854cc22f6d16358e56995bab","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            public void configure() throws Exception {\n                from(\"netty4-http:http://localhost:{{port}}/myapp/myservice\").process(new Processor() {\n                    public void process(Exchange exchange) throws Exception {\n                        String body = exchange.getIn().getBody(String.class);\n\n                        // for unit testing make sure we got right message\n                        assertEquals(\"The body message is wrong\", \"b1=x&b2=y\", body);\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"a\", exchange.getIn().getHeader(\"query1\"));\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"b\", exchange.getIn().getHeader(\"query2\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"x\", exchange.getIn().getHeader(\"b1\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"y\", exchange.getIn().getHeader(\"b2\"));\n\n                        NettyHttpMessage in = (NettyHttpMessage) exchange.getIn();                        \n                        FullHttpRequest request = in.getHttpRequest();\n                        assertNotEquals(\"Relative path should NOT be used in POST\", \"/myapp/myservice?query1=a&query2=b\", request.getUri());\n                                \n                        \n                        // send a response\n                        exchange.getOut().getHeaders().clear();\n                        exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        exchange.getOut().setBody(\"Request message is OK\");\n                    }\n                });\n            }\n        };\n    }","id":58256,"modified_method":"@Override\n    protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            public void configure() throws Exception {\n                from(\"netty4-http:http://localhost:{{port}}/myapp/myservice\").process(new Processor() {\n                    public void process(Exchange exchange) throws Exception {\n                        String body = exchange.getIn().getBody(String.class);\n\n                        // for unit testing make sure we got right message\n                        assertEquals(\"The body message is wrong\", \"b1=x&b2=y\", body);\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"a\", exchange.getIn().getHeader(\"query1\"));\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"b\", exchange.getIn().getHeader(\"query2\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"x\", exchange.getIn().getHeader(\"b1\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"y\", exchange.getIn().getHeader(\"b2\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"localhost\", exchange.getIn().getHeader(\"host\"));\n                        \n                        NettyHttpMessage in = (NettyHttpMessage) exchange.getIn();                        \n                        FullHttpRequest request = in.getHttpRequest();\n                        assertNotEquals(\"Relative path should NOT be used in POST\", \"/myapp/myservice?query1=a&query2=b\", request.getUri());\n                                                  \n                        // send a response\n                        exchange.getOut().getHeaders().clear();\n                        exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        exchange.getOut().setBody(\"Request message is OK\");\n                    }\n                });\n            }\n        };\n    }","commit_id":"dedb59d82f9d60c4854cc22f6d16358e56995bab","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            public void configure() throws Exception {\n                from(\"netty-http:http://localhost:{{port}}/myapp/myservice\").process(new Processor() {\n                    public void process(Exchange exchange) throws Exception {\n                        String body = exchange.getIn().getBody(String.class);\n\n                        // for unit testing make sure we got right message\n                        assertEquals(\"The body message is wrong\", \"b1=x&b2=y\", body);\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"a\", exchange.getIn().getHeader(\"query1\"));\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"b\", exchange.getIn().getHeader(\"query2\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"x\", exchange.getIn().getHeader(\"b1\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"y\", exchange.getIn().getHeader(\"b2\"));\n\n                        UpstreamMessageEvent event = (UpstreamMessageEvent) exchange.getIn().getHeader(\"CamelNettyMessageEvent\");\n                        DefaultHttpRequest request = (DefaultHttpRequest) event.getMessage();\n                        assertNotEquals(\"Relative path should NOT be used in POST\", \"/myapp/myservice?query1=a&query2=b\", request.getUri());\n                                                \n                        // send a response\n                        exchange.getOut().getHeaders().clear();\n                        exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        exchange.getOut().setBody(\"Request message is OK\");\n                    }\n                });\n            }\n        };\n    }","id":58257,"modified_method":"@Override\n    protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            public void configure() throws Exception {\n                from(\"netty-http:http://localhost:{{port}}/myapp/myservice\").process(new Processor() {\n                    public void process(Exchange exchange) throws Exception {\n                        String body = exchange.getIn().getBody(String.class);\n\n                        // for unit testing make sure we got right message\n                        assertEquals(\"The body message is wrong\", \"b1=x&b2=y\", body);\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"a\", exchange.getIn().getHeader(\"query1\"));\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"b\", exchange.getIn().getHeader(\"query2\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"x\", exchange.getIn().getHeader(\"b1\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"y\", exchange.getIn().getHeader(\"b2\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"localhost\", exchange.getIn().getHeader(\"host\"));\n                        \n                        UpstreamMessageEvent event = (UpstreamMessageEvent) exchange.getIn().getHeader(\"CamelNettyMessageEvent\");\n                        DefaultHttpRequest request = (DefaultHttpRequest) event.getMessage();\n                        assertNotEquals(\"Relative path should NOT be used in POST\", \"/myapp/myservice?query1=a&query2=b\", request.getUri());\n                                                \n                        // send a response\n                        exchange.getOut().getHeaders().clear();\n                        exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        exchange.getOut().setBody(\"Request message is OK\");\n                    }\n                });\n            }\n        };\n    }","commit_id":"dedb59d82f9d60c4854cc22f6d16358e56995bab","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            public void configure() throws Exception {\n                from(\"netty4-http:http://localhost:{{port}}/myapp/myservice\").process(new Processor() {\n                    public void process(Exchange exchange) throws Exception {\n                        String body = exchange.getIn().getBody(String.class);\n\n                        // for unit testing make sure we got right message\n                        assertEquals(\"The body message is wrong\", \"b1=x&b2=y\", body);\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"a\", exchange.getIn().getHeader(\"query1\"));\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"b\", exchange.getIn().getHeader(\"query2\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"x\", exchange.getIn().getHeader(\"b1\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"y\", exchange.getIn().getHeader(\"b2\"));\n                        \n                        NettyHttpMessage in = (NettyHttpMessage) exchange.getIn();                        \n                        FullHttpRequest request = in.getHttpRequest();\n                        assertEquals(\"Relative path not used in POST\", \"/myapp/myservice?query1=a&query2=b\", request.getUri());\n                        \n                        // send a response\n                        exchange.getOut().getHeaders().clear();\n                        exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        exchange.getOut().setBody(\"Request message is OK\");\n                    }\n                });\n            }\n        };\n    }","id":58258,"modified_method":"@Override\n    protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            public void configure() throws Exception {\n                from(\"netty4-http:http://localhost:{{port}}/myapp/myservice\").process(new Processor() {\n                    public void process(Exchange exchange) throws Exception {\n                        String body = exchange.getIn().getBody(String.class);\n\n                        // for unit testing make sure we got right message\n                        assertEquals(\"The body message is wrong\", \"b1=x&b2=y\", body);\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"a\", exchange.getIn().getHeader(\"query1\"));\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"b\", exchange.getIn().getHeader(\"query2\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"x\", exchange.getIn().getHeader(\"b1\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"y\", exchange.getIn().getHeader(\"b2\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"localhost:\" + getPort(), exchange.getIn().getHeader(\"host\"));\n                        \n                        NettyHttpMessage in = (NettyHttpMessage) exchange.getIn();                        \n                        FullHttpRequest request = in.getHttpRequest();\n                        assertEquals(\"Relative path not used in POST\", \"/myapp/myservice?query1=a&query2=b\", request.getUri());\n                        \n                        // send a response\n                        exchange.getOut().getHeaders().clear();\n                        exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        exchange.getOut().setBody(\"Request message is OK\");\n                    }\n                });\n            }\n        };\n    }","commit_id":"dedb59d82f9d60c4854cc22f6d16358e56995bab","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            public void configure() throws Exception {\n                from(\"netty-http:http://localhost:{{port}}/myapp/myservice\").process(new Processor() {\n                    public void process(Exchange exchange) throws Exception {\n                        String body = exchange.getIn().getBody(String.class);\n\n                        // for unit testing make sure we got right message\n                        assertEquals(\"The body message is wrong\", \"b1=x&b2=y\", body);\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"a\", exchange.getIn().getHeader(\"query1\"));\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"b\", exchange.getIn().getHeader(\"query2\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"x\", exchange.getIn().getHeader(\"b1\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"y\", exchange.getIn().getHeader(\"b2\"));\n                        \n                        UpstreamMessageEvent event = (UpstreamMessageEvent) exchange.getIn().getHeader(\"CamelNettyMessageEvent\");\n                        DefaultHttpRequest request = (DefaultHttpRequest) event.getMessage();\n                        assertEquals(\"Relative path not used in POST\", \"/myapp/myservice?query1=a&query2=b\", request.getUri());\n                        \n                        // send a response\n                        exchange.getOut().getHeaders().clear();\n                        exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        exchange.getOut().setBody(\"Request message is OK\");\n                    }\n                });\n            }\n        };\n    }","id":58259,"modified_method":"@Override\n    protected RouteBuilder createRouteBuilder() throws Exception {\n        return new RouteBuilder() {\n            public void configure() throws Exception {\n                from(\"netty-http:http://localhost:{{port}}/myapp/myservice\").process(new Processor() {\n                    public void process(Exchange exchange) throws Exception {\n                        String body = exchange.getIn().getBody(String.class);\n\n                        // for unit testing make sure we got right message\n                        assertEquals(\"The body message is wrong\", \"b1=x&b2=y\", body);\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"a\", exchange.getIn().getHeader(\"query1\"));\n                        assertEquals(\"Get a wrong query parameter from the message header\", \"b\", exchange.getIn().getHeader(\"query2\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"x\", exchange.getIn().getHeader(\"b1\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"y\", exchange.getIn().getHeader(\"b2\"));\n                        assertEquals(\"Get a wrong form parameter from the message header\", \"localhost:\" + getPort(), exchange.getIn().getHeader(\"host\"));\n                        \n                        UpstreamMessageEvent event = (UpstreamMessageEvent) exchange.getIn().getHeader(\"CamelNettyMessageEvent\");\n                        DefaultHttpRequest request = (DefaultHttpRequest) event.getMessage();\n                        assertEquals(\"Relative path not used in POST\", \"/myapp/myservice?query1=a&query2=b\", request.getUri());\n                        \n                        // send a response\n                        exchange.getOut().getHeaders().clear();\n                        exchange.getOut().setHeader(Exchange.CONTENT_TYPE, \"text/plain\");\n                        exchange.getOut().setBody(\"Request message is OK\");\n                    }\n                });\n            }\n        };\n    }","commit_id":"dedb59d82f9d60c4854cc22f6d16358e56995bab","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * do a proxy request for document\n     * extracts url from GET-parameter url\n     * not in separete servlet, because we need access to binary outstream\n     * @throws IOException\n     */\n    private static void doURLProxy(final serverObjects args, final HashMap<String, Object> conProp, final RequestHeader requestHeader, OutputStream out) throws IOException {\n        final String httpVersion = (String) conProp.get(HeaderFramework.CONNECTION_PROP_HTTP_VER);\n\t\tURL proxyurl = null;\n\n\t\tif(conProp != null && conProp.containsKey(\"ARGS\")) {\n\t\t\tfinal String strARGS = (String) conProp.get(\"ARGS\");\n\t\t\tif(strARGS.startsWith(\"url=\")) {\n\t\t\t\tfinal String strUrl = strARGS.substring(4); // strip url=\n\t\t\t\tproxyurl = new URL(strUrl);\n\t\t\t}\n\t\t}\n\n\t\tif (proxyurl==null) {\n\t\t\tthrow new IOException(\"no url as argument supplied\");\n\t\t}\n\n\t\t// set properties for proxy connection\n   \t\tfinal HashMap<String, Object> prop = new HashMap<String, Object>();\n\t\tprop.put(HeaderFramework.CONNECTION_PROP_HTTP_VER, HeaderFramework.HTTP_VERSION_1_1);\n\t\tprop.put(HeaderFramework.CONNECTION_PROP_HOST, proxyurl.getHost());\n\t\tprop.put(HeaderFramework.CONNECTION_PROP_PATH, proxyurl.getFile().replaceAll(\" \", \"%20\"));\n\t\tprop.put(HeaderFramework.CONNECTION_PROP_REQUESTLINE, \"PROXY\");\n\t\tprop.put(\"CLIENTIP\", \"0:0:0:0:0:0:0:1\");\n\n\t\t// remove some stuff from request header, so it isn't send to the server\n\t\trequestHeader.remove(\"CLIENTIP\");\n\t\trequestHeader.remove(\"EXT\");\n\t\trequestHeader.remove(\"PATH\");\n\t\trequestHeader.remove(\"Authorization\");\n\t\trequestHeader.remove(\"Connection\");\n\t\trequestHeader.put(HeaderFramework.HOST, proxyurl.getHost());\n\n\t\tfinal ByteArrayOutputStream o = new ByteArrayOutputStream();\n\t\tHTTPDProxyHandler.doGet(prop, requestHeader, o);\n\n\t\t// reparse header to extract content-length and mimetype\n\t\tfinal ResponseHeader outgoingHeader = new ResponseHeader();\n\t\tfinal InputStream in = new ByteArrayInputStream(o.toByteArray());\n\t\tString line = readLine(in);\n\t\twhile(line != null && !line.equals(\"\")) {\n\t\t\tint p;\n\t\t\tif ((p = line.indexOf(':')) >= 0) {\n\t\t\t\t// store a property\n\t\t\t\toutgoingHeader.add(line.substring(0, p).trim(), line.substring(p + 1).trim());\n\t\t\t}\n\t\t\tline = readLine(in);\n\t\t}\n\t\tif (line==null) {\n\t\t\tHTTPDemon.sendRespondError(conProp,out,3,500,\"null\",null,null);\n\t\t\treturn;\n\t\t}\n\n\t\tfinal int httpStatus = Integer.parseInt((String) prop.get(HeaderFramework.CONNECTION_PROP_PROXY_RESPOND_STATUS));\n\n\t\tString directory = \"\";\n\t\tif (proxyurl.getPath().lastIndexOf('/') > 0)\n\t\t\tdirectory = proxyurl.getPath().substring(0, proxyurl.getPath().lastIndexOf('/'));\n\n\t\tif (outgoingHeader.containsKey(\"Location\")) {\n\t\t\t// rewrite location header\n\t\t\tString location = outgoingHeader.get(\"Location\");\n\t\t\tif (location.startsWith(\"http\")) {\n\t\t\t\tlocation = \"/proxy.html?url=\" + location;\n\t\t\t} else {\n\t\t\t\tlocation = \"/proxy.html?url=http://\" + proxyurl.getHost() + \"/\" + location;\n\t\t\t}\n\t\t\toutgoingHeader.put(\"Location\", location);\n\t\t}\n\n\t\tfinal String mimeType = outgoingHeader.getContentType();\n\t\tif (mimeType.startsWith(\"text/html\") || mimeType.startsWith(\"text\")) {\n\t\t\tfinal StringWriter buffer = new StringWriter();\n\n\t\t\tif (outgoingHeader.containsKey(HeaderFramework.TRANSFER_ENCODING)) {\n\t\t\t\tFileUtils.copy(new ChunkedInputStream(in), buffer, UTF8.charset);\n\t\t\t} else {\n\t\t\t\tFileUtils.copy(in, buffer, UTF8.charset);\n\t\t\t}\n\n\t\t\tfinal String sbuffer = buffer.toString();\n\n\t\t\tfinal Pattern p = Pattern.compile(\"(href=\\\"|src=\\\")([^\\\"]+)|(href='|src=')([^']+)|(url\\\\(')([^']+)|(url\\\\(\\\")([^\\\"]+)|(url\\\\()([^\\\\)]+)\");\n\t\t\tfinal Matcher m = p.matcher(sbuffer);\n\t\t\tfinal StringBuffer result = new StringBuffer(80);\n\t\t\tString init, url;\n\t\t\tMultiProtocolURI target;\n\t\t\twhile (m.find()) {\n\t\t\t\tinit = null;\n\t\t\t\tif(m.group(1) != null) init = m.group(1);\n\t\t\t\tif(m.group(3) != null) init = m.group(3);\n\t\t\t\tif(m.group(5) != null) init = m.group(5);\n\t\t\t\tif(m.group(7) != null) init = m.group(7);\n\t\t\t\tif(m.group(9) != null) init = m.group(9);\n\t\t\t\turl = null;\n\t\t\t\tif(m.group(2) != null) url = m.group(2);\n\t\t\t\tif(m.group(4) != null) url = m.group(4);\n\t\t\t\tif(m.group(6) != null) url = m.group(6);\n\t\t\t\tif(m.group(8) != null) url = m.group(8);\n\t\t\t\tif(m.group(10) != null) url = m.group(10);\n\t\t\t\tif (url.startsWith(\"data:\") || url.startsWith(\"#\") || url.startsWith(\"mailto:\") || url.startsWith(\"javascript:\")) {\n\t\t\t\t    m.appendReplacement(result, init + url);\n\n\t\t\t\t} else if (url.startsWith(\"http\")) {\n\t\t\t\t\t// absoulte url of form href=\"http://domain.com/path\"\n\t\t\t\t\tif (sb.getConfig(\"proxyURL.rewriteURLs\", \"all\").equals(\"domainlist\")) {\n\t\t\t\t\t\tif (sb.crawlStacker.urlInAcceptedDomain(new DigestURI(url)) != null) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t    m.appendReplacement(result, init + \"/proxy.html?url=\" + url);\n\n\t\t\t\t} else if (url.startsWith(\"/\")) {\n\t\t\t\t\t// absolute path of form href=\"/absolute/path/to/linked/page\"\n\t\t\t\t    m.appendReplacement(result, init + \"/proxy.html?url=http://\" + proxyurl.getHost() + url);\n\n\t\t\t\t} else {\n\t\t\t\t\t// relative path of form href=\"relative/path\"\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttarget = new MultiProtocolURI(proxyurl.getHost() + directory + \"/\" + url);\t\t\t\t\t\t\n\t\t\t\t\t\tm.appendReplacement(result, init + \"/proxy.html?url=\" + target.toString());\n\t\t\t\t\t}\n\t\t\t\t\tcatch (MalformedURLException e) {}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tm.appendTail(result);\n\n\t\t\tfinal byte[] sbb = UTF8.getBytes(result.toString());\n\n\t\t\tif (outgoingHeader.containsKey(HeaderFramework.TRANSFER_ENCODING)) {\n\t\t\t\tHTTPDemon.sendRespondHeader(conProp, out, httpVersion, httpStatus, outgoingHeader);\n\n\t\t\t\tChunkedOutputStream cos = new ChunkedOutputStream(out);\n\n\t\t\t\tcos.write(sbb);\n\t\t\t\tcos.finish();\n\t\t\t} else {\n\t\t\t\toutgoingHeader.put(HeaderFramework.CONTENT_LENGTH, Integer.toString(sbb.length));\n\n\t\t\t\tHTTPDemon.sendRespondHeader(conProp, out, httpVersion, httpStatus, outgoingHeader);\n\n\t\t\t\tout.write(sbb);\n\t\t\t}\n\t\t} else {\n\t\t\tif (!outgoingHeader.containsKey(HeaderFramework.CONTENT_LENGTH))\n\t\t\t\toutgoingHeader.put(HeaderFramework.CONTENT_LENGTH, (String) prop.get(HeaderFramework.CONNECTION_PROP_PROXY_RESPOND_SIZE));\n    \t\tHTTPDemon.sendRespondHeader(conProp, out, httpVersion, httpStatus, outgoingHeader);\n\t\t\tFileUtils.copy(in, out);\n\t\t}\n\t\treturn;\n    }","id":58260,"modified_method":"/**\n     * do a proxy request for document\n     * extracts url from GET-parameter url\n     * not in separete servlet, because we need access to binary outstream\n     * @throws IOException\n     */\n    private static void doURLProxy(final serverObjects args, final HashMap<String, Object> conProp, final RequestHeader requestHeader, OutputStream out) throws IOException {\n        final String httpVersion = (String) conProp.get(HeaderFramework.CONNECTION_PROP_HTTP_VER);\n\t\tURL proxyurl = null;\n\n\t\tif(conProp != null && conProp.containsKey(\"ARGS\")) {\n\t\t\tfinal String strARGS = (String) conProp.get(\"ARGS\");\n\t\t\tif(strARGS.startsWith(\"url=\")) {\n\t\t\t\tfinal String strUrl = strARGS.substring(4); // strip url=\n\t\t\t\tproxyurl = new URL(strUrl);\n\t\t\t}\n\t\t}\n\n\t\tif (proxyurl==null) {\n\t\t\tthrow new IOException(\"no url as argument supplied\");\n\t\t}\n\t\tString host = proxyurl.getHost();\n\t\tif (proxyurl.getPort() != -1) {\n\t\t\thost += \":\" + proxyurl.getPort(); \n\t\t}\n\n\t\t// set properties for proxy connection\n   \t\tfinal HashMap<String, Object> prop = new HashMap<String, Object>();\n\t\tprop.put(HeaderFramework.CONNECTION_PROP_HTTP_VER, HeaderFramework.HTTP_VERSION_1_1);\n\t\tprop.put(HeaderFramework.CONNECTION_PROP_HOST, host);\n\t\tprop.put(HeaderFramework.CONNECTION_PROP_PATH, proxyurl.getFile().replaceAll(\" \", \"%20\"));\n\t\tprop.put(HeaderFramework.CONNECTION_PROP_REQUESTLINE, \"PROXY\");\n\t\tprop.put(\"CLIENTIP\", \"0:0:0:0:0:0:0:1\");\n\n\t\t// remove some stuff from request header, so it isn't send to the server\n\t\trequestHeader.remove(\"CLIENTIP\");\n\t\trequestHeader.remove(\"EXT\");\n\t\trequestHeader.remove(\"PATH\");\n\t\trequestHeader.remove(\"Authorization\");\n\t\trequestHeader.remove(\"Connection\");\n\t\trequestHeader.put(HeaderFramework.HOST, proxyurl.getHost());\n\n\t\tfinal ByteArrayOutputStream o = new ByteArrayOutputStream();\n\t\tHTTPDProxyHandler.doGet(prop, requestHeader, o);\n\n\t\t// reparse header to extract content-length and mimetype\n\t\tfinal ResponseHeader outgoingHeader = new ResponseHeader();\n\t\tfinal InputStream in = new ByteArrayInputStream(o.toByteArray());\n\t\tString line = readLine(in);\n\t\twhile(line != null && !line.equals(\"\")) {\n\t\t\tint p;\n\t\t\tif ((p = line.indexOf(':')) >= 0) {\n\t\t\t\t// store a property\n\t\t\t\toutgoingHeader.add(line.substring(0, p).trim(), line.substring(p + 1).trim());\n\t\t\t}\n\t\t\tline = readLine(in);\n\t\t}\n\t\tif (line==null) {\n\t\t\tHTTPDemon.sendRespondError(conProp,out,3,500,\"null\",null,null);\n\t\t\treturn;\n\t\t}\n\n\t\tfinal int httpStatus = Integer.parseInt((String) prop.get(HeaderFramework.CONNECTION_PROP_PROXY_RESPOND_STATUS));\n\n\t\tString directory = \"\";\n\t\tif (proxyurl.getPath().lastIndexOf('/') > 0)\n\t\t\tdirectory = proxyurl.getPath().substring(0, proxyurl.getPath().lastIndexOf('/'));\n\n\t\tif (outgoingHeader.containsKey(\"Location\")) {\n\t\t\t// rewrite location header\n\t\t\tString location = outgoingHeader.get(\"Location\");\n\t\t\tif (location.startsWith(\"http\")) {\n\t\t\t\tlocation = \"/proxy.html?url=\" + location;\n\t\t\t} else {\n\t\t\t\tlocation = \"/proxy.html?url=http://\" + proxyurl.getHost() + \"/\" + location;\n\t\t\t}\n\t\t\toutgoingHeader.put(\"Location\", location);\n\t\t}\n\n\t\tfinal String mimeType = outgoingHeader.getContentType();\n\t\tif (mimeType.startsWith(\"text/html\") || mimeType.startsWith(\"text\")) {\n\t\t\tfinal StringWriter buffer = new StringWriter();\n\n\t\t\tif (outgoingHeader.containsKey(HeaderFramework.TRANSFER_ENCODING)) {\n\t\t\t\tFileUtils.copy(new ChunkedInputStream(in), buffer, UTF8.charset);\n\t\t\t} else {\n\t\t\t\tFileUtils.copy(in, buffer, UTF8.charset);\n\t\t\t}\n\n\t\t\tfinal String sbuffer = buffer.toString();\n\n\t\t\tfinal Pattern p = Pattern.compile(\"(href=\\\"|src=\\\")([^\\\"]+)|(href='|src=')([^']+)|(url\\\\(')([^']+)|(url\\\\(\\\")([^\\\"]+)|(url\\\\()([^\\\\)]+)\");\n\t\t\tfinal Matcher m = p.matcher(sbuffer);\n\t\t\tfinal StringBuffer result = new StringBuffer(80);\n\t\t\tString init, url;\n\t\t\tMultiProtocolURI target;\n\t\t\twhile (m.find()) {\n\t\t\t\tinit = null;\n\t\t\t\tif(m.group(1) != null) init = m.group(1);\n\t\t\t\tif(m.group(3) != null) init = m.group(3);\n\t\t\t\tif(m.group(5) != null) init = m.group(5);\n\t\t\t\tif(m.group(7) != null) init = m.group(7);\n\t\t\t\tif(m.group(9) != null) init = m.group(9);\n\t\t\t\turl = null;\n\t\t\t\tif(m.group(2) != null) url = m.group(2);\n\t\t\t\tif(m.group(4) != null) url = m.group(4);\n\t\t\t\tif(m.group(6) != null) url = m.group(6);\n\t\t\t\tif(m.group(8) != null) url = m.group(8);\n\t\t\t\tif(m.group(10) != null) url = m.group(10);\n\t\t\t\tif (url.startsWith(\"data:\") || url.startsWith(\"#\") || url.startsWith(\"mailto:\") || url.startsWith(\"javascript:\")) {\n\t\t\t\t    m.appendReplacement(result, init + url);\n\n\t\t\t\t} else if (url.startsWith(\"http\")) {\n\t\t\t\t\t// absoulte url of form href=\"http://domain.com/path\"\n\t\t\t\t\tif (sb.getConfig(\"proxyURL.rewriteURLs\", \"all\").equals(\"domainlist\")) {\n\t\t\t\t\t\tif (sb.crawlStacker.urlInAcceptedDomain(new DigestURI(url)) != null) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t    m.appendReplacement(result, init + \"/proxy.html?url=\" + url);\n\n\t\t\t\t} else if (url.startsWith(\"/\")) {\n\t\t\t\t\t// absolute path of form href=\"/absolute/path/to/linked/page\"\n\t\t\t\t    m.appendReplacement(result, init + \"/proxy.html?url=http://\" + proxyurl.getHost() + url);\n\n\t\t\t\t} else {\n\t\t\t\t\t// relative path of form href=\"relative/path\"\n\t\t\t\t\ttry {\n\t\t\t\t\t\ttarget = new MultiProtocolURI(proxyurl.getHost() + directory + \"/\" + url);\t\t\t\t\t\t\n\t\t\t\t\t\tm.appendReplacement(result, init + \"/proxy.html?url=\" + target.toString());\n\t\t\t\t\t}\n\t\t\t\t\tcatch (MalformedURLException e) {}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tm.appendTail(result);\n\n\t\t\tfinal byte[] sbb = UTF8.getBytes(result.toString());\n\n\t\t\tif (outgoingHeader.containsKey(HeaderFramework.TRANSFER_ENCODING)) {\n\t\t\t\tHTTPDemon.sendRespondHeader(conProp, out, httpVersion, httpStatus, outgoingHeader);\n\n\t\t\t\tChunkedOutputStream cos = new ChunkedOutputStream(out);\n\n\t\t\t\tcos.write(sbb);\n\t\t\t\tcos.finish();\n\t\t\t} else {\n\t\t\t\toutgoingHeader.put(HeaderFramework.CONTENT_LENGTH, Integer.toString(sbb.length));\n\n\t\t\t\tHTTPDemon.sendRespondHeader(conProp, out, httpVersion, httpStatus, outgoingHeader);\n\n\t\t\t\tout.write(sbb);\n\t\t\t}\n\t\t} else {\n\t\t\tif (!outgoingHeader.containsKey(HeaderFramework.CONTENT_LENGTH))\n\t\t\t\toutgoingHeader.put(HeaderFramework.CONTENT_LENGTH, (String) prop.get(HeaderFramework.CONNECTION_PROP_PROXY_RESPOND_SIZE));\n    \t\tHTTPDemon.sendRespondHeader(conProp, out, httpVersion, httpStatus, outgoingHeader);\n\t\t\tFileUtils.copy(in, out);\n\t\t}\n\t\treturn;\n    }","commit_id":"87e6abd168b637397d1e0177384524f3618644b4","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public ClusterInfo getClusterInfo() {\n    return clusterInfo;\n  }","id":58261,"modified_method":"public ClusterConfiguration getClusterInfo() {\n    return clusterConfiguration;\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void startThreads() {\n    //:: should really be organized as a thread group etc etc :://\n    LOG.warn( \"Starting cluster: \" + this.clusterInfo.getUri() );\n    this.waitForCerts();\n    if( !stopped ) {\n    if ( this.mqThread == null || this.mqThread.isAlive() )\n      this.mqThread = this.startNamedThread( messageQueue );\n\n    if ( this.rscThread == null || this.rscThread.isAlive() )\n      this.rscThread = this.startNamedThread( rscUpdater );\n\n    if ( this.vmThread == null || this.vmThread.isAlive() )\n      this.vmThread = this.startNamedThread( vmUpdater );\n\n    if ( this.addrThread == null || this.addrThread.isAlive() )\n      this.addrThread = this.startNamedThread( addrUpdater );\n\n    if ( this.keyThread == null || this.keyThread.isAlive() )\n      this.keyThread = this.startNamedThread( nodeCertUpdater );//, nodeCertUpdater.getClass().getSimpleName() + \"-\" + this.getName() ) ).start();\n\n//    if ( this.logThread != null && !this.logThread.isAlive() )\n//      ( this.logThread = new Thread( nodeLogUpdater, nodeLogUpdater.getClass().getSimpleName() + \"-\" + this.getName() ) ).start();\n\n    }\n  }","id":58262,"modified_method":"public void startThreads() {\n    //:: should really be organized as a thread group etc etc :://\n    LOG.warn( \"Starting cluster: \" + this.clusterConfiguration );\n    this.waitForCerts();\n    if( !stopped ) {\n    if ( this.mqThread == null || this.mqThread.isAlive() )\n      this.mqThread = this.startNamedThread( messageQueue );\n\n    if ( this.rscThread == null || this.rscThread.isAlive() )\n      this.rscThread = this.startNamedThread( rscUpdater );\n\n    if ( this.vmThread == null || this.vmThread.isAlive() )\n      this.vmThread = this.startNamedThread( vmUpdater );\n\n    if ( this.addrThread == null || this.addrThread.isAlive() )\n      this.addrThread = this.startNamedThread( addrUpdater );\n\n    if ( this.keyThread == null || this.keyThread.isAlive() )\n      this.keyThread = this.startNamedThread( nodeCertUpdater );//, nodeCertUpdater.getClass().getSimpleName() + \"-\" + this.getName() ) ).start();\n\n//    if ( this.logThread != null && !this.logThread.isAlive() )\n//      ( this.logThread = new Thread( nodeLogUpdater, nodeLogUpdater.getClass().getSimpleName() + \"-\" + this.getName() ) ).start();\n\n    }\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public String getName() {\n    return this.clusterInfo.getName();\n  }","id":58263,"modified_method":"public String getName() {\n    return this.clusterConfiguration.getClusterName();\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public ClusterInfoType getInfo() {\n    String state = String.format( \"%4s %s\", this.isReachable() ? \"UP\" : \"DOWN\", this.clusterInfo.getHost() );\n    return new ClusterInfoType( this.clusterInfo.getName(), state );\n  }","id":58264,"modified_method":"public ClusterInfoType getInfo() {\n    String state = String.format( \"%4s %s\", this.isReachable() ? \"UP\" : \"DOWN\", this.clusterConfiguration.getHostName() );\n    return new ClusterInfoType( this.clusterConfiguration.getClusterName(), state );\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private boolean checkCerts( final GetKeysResponseType reply ) {\n    NodeCertInfo certs = reply.getCerts();\n    if ( certs == null ) return false;\n    String ccCert = new String( Base64.decode( certs.getCcCert() ) );\n    String ncCert = new String( Base64.decode( certs.getNcCert() ) );\n    boolean ret = true;\n    LOG.info( \"===============================================================\" );\n    LOG.info( \" Trying to verify the certificates for \" + this.getClusterInfo().getName() );\n    LOG.info( \"---------------------------------------------------------------\" );\n//    try {\n      //TODO: IMPORTANT fix me\n//      X509Certificate x509 = AbstractKeyStore.pemToX509( ccCert );\n//      String alias = ServiceKeyStore.getInstance().getCertificateAlias( x509 );\n//      LOG.info( \"FOUND: alias \" + alias );\n//    }\n//    catch ( GeneralSecurityException e ) {\n//      LOG.error( e );\n//      ret = false;\n//    }\n    LOG.info( \"---------------------------------------------------------------\" );\n//    try {\n//      String alias = ServiceKeyStore.getInstance().getCertificateAlias( ncCert );\n//      LOG.info( \"FOUND: alias \" + alias );\n//    }\n//    catch ( GeneralSecurityException e ) {\n//      ret = false;\n//      LOG.error( e );\n//    }\n    LOG.info( \"===============================================================\" );\n    return ret;\n  }","id":58265,"modified_method":"private boolean checkCerts( final GetKeysResponseType reply ) {\n    NodeCertInfo certs = reply.getCerts();\n    if ( certs == null ) return false;\n    String ccCert = new String( Base64.decode( certs.getCcCert() ) );\n    String ncCert = new String( Base64.decode( certs.getNcCert() ) );\n    boolean ret = true;\n    LOG.info( \"===============================================================\" );\n    LOG.info( \" Trying to verify the certificates for \" + this.getClusterInfo().getClusterName() );\n    LOG.info( \"---------------------------------------------------------------\" );\n//    try {\n      //TODO: IMPORTANT fix me\n//      X509Certificate x509 = AbstractKeyStore.pemToX509( ccCert );\n//      String alias = ServiceKeyStore.getInstance().getCertificateAlias( x509 );\n//      LOG.info( \"FOUND: alias \" + alias );\n//    }\n//    catch ( GeneralSecurityException e ) {\n//      LOG.error( e );\n//      ret = false;\n//    }\n    LOG.info( \"---------------------------------------------------------------\" );\n//    try {\n//      String alias = ServiceKeyStore.getInstance().getCertificateAlias( ncCert );\n//      LOG.info( \"FOUND: alias \" + alias );\n//    }\n//    catch ( GeneralSecurityException e ) {\n//      ret = false;\n//      LOG.error( e );\n//    }\n    LOG.info( \"===============================================================\" );\n    return ret;\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void stop() {\n    LOG.warn( \"Stopping cluster: \" + this.clusterInfo.getUri() );\n    this.reachable = false;\n    this.stopped = true;\n    this.rscUpdater.stop();\n    this.addrUpdater.stop();\n    this.vmUpdater.stop();\n    this.nodeLogUpdater.stop();\n    this.nodeCertUpdater.stop();\n    this.messageQueue.stop();\n  }","id":58266,"modified_method":"public void stop() {\n    LOG.warn( \"Stopping cluster: \" + this.clusterConfiguration );\n    this.reachable = false;\n    this.stopped = true;\n    this.rscUpdater.stop();\n    this.addrUpdater.stop();\n    this.vmUpdater.stop();\n    this.nodeLogUpdater.stop();\n    this.nodeCertUpdater.stop();\n    this.messageQueue.stop();\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public RegisterClusterType getWeb() {\n    String host = this.getClusterInfo().getUri();\n    int port = 0;\n    try {\n      URI uri = new URI( this.getClusterInfo().getUri() );\n      host = uri.getHost();\n      port = uri.getPort();\n    }\n    catch ( URISyntaxException e ) {}\n    return new RegisterClusterType( this.getName(), host, port );\n  }","id":58267,"modified_method":"public RegisterClusterType getWeb() {\n    String host = this.getClusterInfo().getHostName( );\n    int port = 0;\n    try {\n      URI uri = new URI( this.getClusterInfo().getUri() );\n      host = uri.getHost();\n      port = uri.getPort();\n    }\n    catch ( URISyntaxException e ) {}\n    return new RegisterClusterType( this.getName(), host, port );\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public String toString() {\n    return \"Cluster{\" +\n           \"clusterInfo=\" + clusterInfo +\n           \"\\n\" + this.getName() + \".state=\" + state +\n           \"\\n\" + this.getName() + \".messageQueue=\" + messageQueue +\n           \"\\n\" + this.getName() + \".nodeMap=\" + nodeMap +\n           '}';\n  }","id":58268,"modified_method":"@Override\n  public String toString() {\n    return \"Cluster{\" +\n           \"clusterInfo=\" + clusterConfiguration +\n           \"\\n\" + this.getName() + \".state=\" + state +\n           \"\\n\" + this.getName() + \".messageQueue=\" + messageQueue +\n           \"\\n\" + this.getName() + \".nodeMap=\" + nodeMap +\n           '}';\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void update( List<RegisterClusterType> clusterChanges ) {\n    EntityWrapper<ClusterInfo> db = new EntityWrapper<ClusterInfo>( );\n    // :: remove old non-existant clusters :://\n    List<ClusterInfo> clusterList = db.query( new ClusterInfo( ) );\n    for ( ClusterInfo c : clusterList ) {\n      boolean found = false;\n      for ( RegisterClusterType newClusterInfo : clusterChanges ) {\n        if ( c.getName( ).equals( newClusterInfo.getName( ) ) ) {\n          found = true;\n          break;\n        }\n      }\n      if ( !found ) {\n        Cluster cluster = null;\n        try {\n          cluster = this.lookup( c.getName( ) );\n          db.delete( c );\n          this.deregister( cluster.getName( ) );\n          cluster.stop( );\n        } catch ( Exception e ) {\n          LOG.error( e, e );\n        }\n      }\n    }\n    db.commit( );\n\n    // :: add the new entries / modify existing entries :://\n    for ( RegisterClusterType c : clusterChanges ) {\n      db = new EntityWrapper<ClusterInfo>( );\n      try {\n        ClusterInfo clusterInfo = db.getUnique( new ClusterInfo( c.getName( ) ) );\n        if ( !clusterInfo.getHost( ).equals( c.getHost( ) ) || clusterInfo.getPort( ) != c.getPort( ) ) {\n          clusterInfo.setHost( c.getHost( ) );\n          clusterInfo.setPort( c.getPort( ) );\n          Cluster cluster = this.lookup( c.getName( ) );\n          this.deregister( c.getName( ) );\n          cluster.stop( );\n          Cluster newCluster = new Cluster( clusterInfo );\n          this.register( newCluster );\n          db.commit( );\n          newCluster.start( );\n        } else db.rollback( );\n      } catch ( Exception e ) {\n        ClusterInfo clusterInfo = setupCluster( c );\n        db.add( clusterInfo );\n        db.commit( );\n      }\n    }\n  }","id":58269,"modified_method":"public void update( List<RegisterClusterType> clusterChanges ) {\n    EntityWrapper<ClusterInfo> db = new EntityWrapper<ClusterInfo>( );\n    // :: remove old non-existant clusters :://\n//    List<ClusterInfo> clusterList = db.query( new ClusterInfo( ) );\n//    for ( ClusterInfo c : clusterList ) {\n//      boolean found = false;\n//      for ( RegisterClusterType newClusterInfo : clusterChanges ) {\n//        if ( c.getName( ).equals( newClusterInfo.getName( ) ) ) {\n//          found = true;\n//          break;\n//        }\n//      }\n//      if ( !found ) {\n//        Cluster cluster = null;\n//        try {\n//          cluster = this.lookup( c.getName( ) );\n//          db.delete( c );\n//          this.deregister( cluster.getName( ) );\n//          cluster.stop( );\n//        } catch ( Exception e ) {\n//          LOG.error( e, e );\n//        }\n//      }\n//    }\n//    db.commit( );\n\n    // :: add the new entries / modify existing entries :://\n//    for ( RegisterClusterType c : clusterChanges ) {\n//      db = new EntityWrapper<ClusterInfo>( );\n//      try {\n//        ClusterInfo clusterInfo = db.getUnique( new ClusterInfo( c.getName( ) ) );\n//        if ( !clusterInfo.getHost( ).equals( c.getHost( ) ) || clusterInfo.getPort( ) != c.getPort( ) ) {\n//          clusterInfo.setHost( c.getHost( ) );\n//          clusterInfo.setPort( c.getPort( ) );\n//          Cluster cluster = this.lookup( c.getName( ) );\n//          this.deregister( c.getName( ) );\n//          cluster.stop( );\n//          Cluster newCluster = new Cluster( clusterInfo );\n//          this.register( newCluster );\n//          db.commit( );\n//          newCluster.start( );\n//        } else db.rollback( );\n//      } catch ( Exception e ) {\n//        ClusterInfo clusterInfo = setupCluster( c );\n//        db.add( clusterInfo );\n//        db.commit( );\n//      }\n//    }\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public List<String> getClusterAddresses( ) {\n    List<String> list = new ArrayList<String>( );\n    for ( Cluster c : this.listValues( ) )\n      list.add( c.getClusterInfo( ).getHost( ) + \":\" + c.getClusterInfo( ).getPort( ) );\n    return list;\n  }","id":58270,"modified_method":"public List<String> getClusterAddresses( ) {\n    List<String> list = new ArrayList<String>( );\n    for ( Cluster c : this.listValues( ) )\n      list.add( c.getClusterInfo( ).getHostName( ) + \":\" + c.getClusterInfo( ).getPort( ) );\n    return list;\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public RegisterClusterResponseType registerCluster( RegisterClusterType request ) throws EucalyptusCloudException {\n    this.checkClusterExists( request );\n\n    EntityWrapper<ClusterConfiguration> db = Configuration.getEntityWrapper( );\n    ClusterConfiguration newCluster;\n    try {\n      newCluster = new ClusterConfiguration( request.getName( ), request.getHost( ), request.getPort( ) );\n      db.add( newCluster );\n      db.commit( );\n    } catch ( Exception e ) {\n      db.rollback( );\n      LOG.error( e,e );\n      throw new EucalyptusCloudException( e );\n    }\n\n    /** generate the cluster keys **/\n    String ccAlias = String.format( CLUSTER_KEY_FSTRING, newCluster.getClusterName( ) );\n    String ncAlias = String.format( NODE_KEY_FSTRING, newCluster.getClusterName( ) );\n    String directory = SubDirectory.KEYS.toString( ) + File.separator + newCluster.getClusterName( );\n    File keyDir = new File( directory );\n    keyDir.mkdir( );\n    LOG.info( \"creating keys in \" + directory );\n    EntityWrapper<ClusterCredentials> credDb = Credentials.getEntityWrapper( );\n    try {      \n      // TODO: move this!!!!\n      KeyTool keyTool = new KeyTool( );\n      KeyPair clusterKp = keyTool.getKeyPair( );\n      X509Certificate clusterX509 = keyTool.getCertificate( clusterKp, EucalyptusProperties.getDName( \"cc-\" + newCluster.getClusterName( ) ) );\n      keyTool.writePem( directory + File.separator + \"cluster-pk.pem\", clusterKp.getPrivate( ) );\n      keyTool.writePem( directory + File.separator + \"cluster-cert.pem\", clusterX509 );\n\n      KeyPair nodeKp = keyTool.getKeyPair( );\n      X509Certificate nodeX509 = keyTool.getCertificate( nodeKp, EucalyptusProperties.getDName( \"nc-\" + newCluster.getClusterName( ) ) );\n      keyTool.writePem( directory + File.separator + \"node-pk.pem\", nodeKp.getPrivate( ) );\n      keyTool.writePem( directory + File.separator + \"node-cert.pem\", nodeX509 );\n\n      ClusterCredentials clusterCredentials = new ClusterCredentials( newCluster.getClusterName( ) );\n      clusterCredentials.setClusterCertificate( X509Cert.fromCertificate( ccAlias, clusterX509 ) );\n      clusterCredentials.setNodeCertificate( X509Cert.fromCertificate( ncAlias, nodeX509 ) );\n      credDb.add( clusterCredentials );\n      credDb.commit( );\n    } catch ( Exception eee ) {\n      credDb.rollback( );\n      throw new EucalyptusCloudException( eee );\n    }\n    /*\n     * TODO:\n     * 1. try to add to db\n     * 2. generate key pairs\n     * 3. update registry\n     */\n    RegisterClusterResponseType  reply = ( RegisterClusterResponseType ) request.getReply( );\n    reply.set_return( true );\n    return reply;\n  }","id":58271,"modified_method":"public RegisterClusterResponseType registerCluster( RegisterClusterType request ) throws EucalyptusCloudException {\n    RegisterClusterResponseType  reply = ( RegisterClusterResponseType ) request.getReply( );\n    reply.set_return( true );\n    if( this.checkClusterExists( request ) ) {\n      return reply;\n    }\n\n    EntityWrapper<ClusterConfiguration> db = Configuration.getEntityWrapper( );\n    ClusterConfiguration newCluster;\n    try {\n      newCluster = new ClusterConfiguration( request.getName( ), request.getHost( ), request.getPort( ) );\n      db.add( newCluster );\n      db.commit( );\n    } catch ( Exception e ) {\n      db.rollback( );\n      LOG.error( e,e );\n      throw new EucalyptusCloudException( e );\n    }\n\n    /** generate the cluster keys **/\n    String ccAlias = String.format( CLUSTER_KEY_FSTRING, newCluster.getClusterName( ) );\n    String ncAlias = String.format( NODE_KEY_FSTRING, newCluster.getClusterName( ) );\n    String directory = SubDirectory.KEYS.toString( ) + File.separator + newCluster.getClusterName( );\n    File keyDir = new File( directory );\n    keyDir.mkdir( );\n    LOG.info( \"creating keys in \" + directory );\n    EntityWrapper<ClusterCredentials> credDb = Credentials.getEntityWrapper( );\n    try {      \n      // TODO: move this!!!!\n      KeyTool keyTool = new KeyTool( );\n      KeyPair clusterKp = keyTool.getKeyPair( );\n      X509Certificate clusterX509 = keyTool.getCertificate( clusterKp, EucalyptusProperties.getDName( \"cc-\" + newCluster.getClusterName( ) ) );\n      keyTool.writePem( directory + File.separator + \"cluster-pk.pem\", clusterKp.getPrivate( ) );\n      keyTool.writePem( directory + File.separator + \"cluster-cert.pem\", clusterX509 );\n\n      KeyPair nodeKp = keyTool.getKeyPair( );\n      X509Certificate nodeX509 = keyTool.getCertificate( nodeKp, EucalyptusProperties.getDName( \"nc-\" + newCluster.getClusterName( ) ) );\n      keyTool.writePem( directory + File.separator + \"node-pk.pem\", nodeKp.getPrivate( ) );\n      keyTool.writePem( directory + File.separator + \"node-cert.pem\", nodeX509 );\n\n      X509Certificate systemX509 = SystemCredentialProvider.getCredentialProvider( Component.Name.eucalyptus ).getCertificate( ); \n      keyTool.writePem( directory + File.separator + \"cloud-cert.pem\", systemX509 );\n      Signature signer = Signature.getInstance( \"SHA256withRSA\" );\n      signer.initSign( SystemCredentialProvider.getCredentialProvider( Component.Name.eucalyptus ).getPrivateKey( ) );\n      signer.update( \"eucalyptus\".getBytes( ) );\n      byte[] sig = signer.sign( );\n      FileWriter out = new FileWriter( directory + File.separator + \"vtunpass\" );\n      String hexSig = Hashes.bytesToHex(sig);\n      out.write( hexSig );  \n      out.flush( );\n      out.close( );\n      \n      ClusterCredentials clusterCredentials = new ClusterCredentials( newCluster.getClusterName( ) );\n      clusterCredentials.setClusterCertificate( X509Cert.fromCertificate( ccAlias, clusterX509 ) );\n      clusterCredentials.setNodeCertificate( X509Cert.fromCertificate( ncAlias, nodeX509 ) );\n      credDb.add( clusterCredentials );\n      credDb.commit( );\n    } catch ( Exception eee ) {\n      credDb.rollback( );\n      throw new EucalyptusCloudException( eee );\n    }\n    /*\n     * TODO:\n     * 1. try to add to db\n     * 2. generate key pairs\n     * 3. update registry\n     */\n    return reply;\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private void checkClusterExists( RegisterClusterType request ) throws EucalyptusCloudException {\n    EntityWrapper<ClusterConfiguration> db = Configuration.getEntityWrapper( );    \n    ClusterConfiguration existingName = null;\n    ClusterConfiguration existingHost = null;\n    try {\n      existingName = db.getUnique( ClusterConfiguration.byClusterName( request.getName( ) ) );\n      existingHost = db.getUnique( ClusterConfiguration.byHostName( request.getHost( ) ) );\n    } catch ( Exception e ) {\n      if ( existingHost != null ) {\n        throw new EucalyptusCloudException( \"Cluster already exists: \" + request.getName( ) + \" at \" + existingHost.getHostName( ) );\n      } else if ( existingName != null ) {\n        throw new EucalyptusCloudException( \"Cluster already exists: \" + existingName.getClusterName( ) + \" at \" + request.getHost( ) );\n      }\n    } finally {\n      db.rollback( );\n    }\n  }","id":58272,"modified_method":"private boolean checkClusterExists( RegisterClusterType request ) throws EucalyptusCloudException {\n    EntityWrapper<ClusterConfiguration> db = Configuration.getEntityWrapper( );    \n    ClusterConfiguration existingName = null;\n    ClusterConfiguration existingHost = null;\n    try {\n      existingName = db.getUnique( new ClusterConfiguration( request.getName( ), request.getHost(), request.getPort() ) );\n      return true;\n    } catch ( Exception e1 ) {\n      try {\n        existingName = db.getUnique( ClusterConfiguration.byClusterName( request.getName( ) ) );\n        existingHost = db.getUnique( ClusterConfiguration.byHostName( request.getHost( ) ) );\n      } catch ( Exception e ) {\n        if ( existingHost != null ) {\n          throw new EucalyptusCloudException( \"Cluster at host=\" + existingHost.getHostName( ) + \" already exists with name=\" + request.getName() );\n        } else if ( existingName != null ) {\n          throw new EucalyptusCloudException( \"Cluster with name=\" + request.getName( ) + \" already exists at host=\" + existingName.getHostName( ) );\n        }\n      }\n    } finally {\n      db.rollback( );\n    }\n    return false;\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n  public void handleUpstream( ChannelHandlerContext ctx, ChannelEvent e ) throws Exception {\n    LOG.debug( this.getClass( ).getSimpleName( ) + \"[incoming]: \" + e );\n    if ( e instanceof MessageEvent ) {\n      this.startTime = System.currentTimeMillis( );\n      final MessageEvent event = ( MessageEvent ) e;\n      if ( event.getMessage( ) instanceof MappingHttpMessage ) {\n        MappingHttpMessage request = ( MappingHttpMessage ) event.getMessage( );\n        User user = request.getUser( );\n        requestLocal.set( ctx.getChannel( ), request );\n        EucalyptusMessage msg = (EucalyptusMessage) request.getMessage( );\n        if( user != null && msgReceiver == null) {\n          msg.setUserId( user.getUserName( ) );\n          msg.setEffectiveUserId( user.getIsAdministrator( )?EucalyptusProperties.NAME:user.getUserName( ) );\n        }\n        LOG.info( EventRecord.create( this.getClass( ).getSimpleName( ), msg.getUserId( ), msg.getCorrelationId( ), EventType.MSG_RECEIVED, msg.getClass( ).getSimpleName( ) ) );\n        if( this.msgReceiver == null ) {\n          ReplyQueue.addReplyListener( msg.getCorrelationId( ), ctx );\n          Messaging.dispatch( \"vm://RequestQueue\", msg );\n        } else if (user == null||user.getIsAdministrator( )){\n          MuleMessage reply = this.msgReceiver.routeMessage( new DefaultMuleMessage( this.msgReceiver.getConnector().getMessageAdapter( msg ) ) );\n          ctx.getChannel( ).write( reply.getPayload( ) );\n        }\n      }\n    }\n  }","id":58273,"modified_method":"@Override\n  public void handleUpstream( ChannelHandlerContext ctx, ChannelEvent e ) throws Exception {\n    LOG.debug( this.getClass( ).getSimpleName( ) + \"[incoming]: \" + e );\n    if( e instanceof ExceptionEvent) {\n      this.exceptionCaught( ctx, (ExceptionEvent)e );\n    } else if ( e instanceof MessageEvent ) {\n      this.startTime = System.currentTimeMillis( );\n      final MessageEvent event = ( MessageEvent ) e;\n      if ( event.getMessage( ) instanceof MappingHttpMessage ) {\n        MappingHttpMessage request = ( MappingHttpMessage ) event.getMessage( );\n        User user = request.getUser( );\n        requestLocal.set( ctx.getChannel( ), request );\n        EucalyptusMessage msg = (EucalyptusMessage) request.getMessage( );\n        if( user != null && msgReceiver == null) {\n          msg.setUserId( user.getUserName( ) );\n          msg.setEffectiveUserId( user.getIsAdministrator( )?EucalyptusProperties.NAME:user.getUserName( ) );\n        }\n        LOG.info( EventRecord.create( this.getClass( ).getSimpleName( ), msg.getUserId( ), msg.getCorrelationId( ), EventType.MSG_RECEIVED, msg.getClass( ).getSimpleName( ) ) );\n        ReplyQueue.addReplyListener( msg.getCorrelationId( ), ctx );\n        if( this.msgReceiver == null ) {\n          Messaging.dispatch( \"vm://RequestQueue\", msg );\n        } else if (user == null||user.getIsAdministrator( )){\n          MuleMessage reply = this.msgReceiver.routeMessage( new DefaultMuleMessage( this.msgReceiver.getConnector().getMessageAdapter( msg ) ) );\n          ctx.getChannel( ).write( reply.getPayload( ) );\n        }\n      }\n    }\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@SuppressWarnings( \"unchecked\" )\n  @Override\n  public void handleDownstream( final ChannelHandlerContext ctx, final ChannelEvent e ) throws Exception {\n    if ( e instanceof MessageEvent ) {\n      MessageEvent msge = ( MessageEvent ) e;\n      if ( msge.getMessage( ) instanceof IsData ) {//Pass through for chunked messaging\n        ctx.sendDownstream( msge );\n      } else if ( msge.getMessage( ) instanceof EucalyptusMessage ) {//Handle single request-response MEP\n        MappingHttpMessage request = requestLocal.get( ctx.getChannel( ) );\n        EucalyptusMessage reply = ( EucalyptusMessage ) ( ( MessageEvent ) e ).getMessage( );\n        if ( reply == null ) {// TODO: fix this error reporting\n          LOG.warn( \"Received a null response for request: \" + request.getMessageString( ) );\n          reply = new EucalyptusErrorMessageType( this.getClass( ).getSimpleName( ), ( EucalyptusMessage ) request.getMessage( ), \"Received a NULL reply\" );\n        }\n        LOG.info( EventRecord.create( this.getClass( ).getSimpleName( ), reply.getUserId( ), reply.getCorrelationId( ), EventType.MSG_SERVICED, ( System.currentTimeMillis( ) - startTime ) ) );\n        if ( reply instanceof WalrusDataGetResponseType ) {\n          if ( reply instanceof GetObjectResponseType ) {\n            GetObjectResponseType getObjectResponse = ( GetObjectResponseType ) reply;\n            if ( getObjectResponse.getBase64Data( ) == null ) return;\n          } else {\n            return;\n          }\n        }\n        MappingHttpResponse response = new MappingHttpResponse( request.getProtocolVersion( ) );\n        DownstreamMessageEvent newEvent = new DownstreamMessageEvent( ctx.getChannel( ), e.getFuture( ), response, null );\n        response.setMessage( reply );\n        ctx.sendDownstream( newEvent );\n        newEvent.getFuture( ).addListener( ChannelFutureListener.CLOSE );\n      }\n    }\n  }","id":58274,"modified_method":"@SuppressWarnings( \"unchecked\" )\n  @Override\n  public void handleDownstream( final ChannelHandlerContext ctx, final ChannelEvent e ) throws Exception {\n    if ( e instanceof MessageEvent ) {\n      MessageEvent msge = ( MessageEvent ) e;\n      if ( msge.getMessage( ) instanceof IsData ) {//Pass through for chunked messaging\n        ctx.sendDownstream( msge );\n      } else if ( msge.getMessage( ) instanceof EucalyptusMessage ) {//Handle single request-response MEP\n        MappingHttpMessage request = requestLocal.get( ctx.getChannel( ) );\n        EucalyptusMessage reply = ( EucalyptusMessage ) ( ( MessageEvent ) e ).getMessage( );\n        if ( reply == null ) {// TODO: fix this error reporting\n          LOG.warn( \"Received a null response for request: \" + request.getMessageString( ) );\n          reply = new EucalyptusErrorMessageType( this.getClass( ).getSimpleName( ), ( EucalyptusMessage ) request.getMessage( ), \"Received a NULL reply\" );\n        }\n        LOG.info( EventRecord.create( this.getClass( ).getSimpleName( ), reply.getUserId( ), reply.getCorrelationId( ), EventType.MSG_SERVICED, ( System.currentTimeMillis( ) - startTime ) ) );\n        if ( reply instanceof WalrusDataGetResponseType ) {\n          if ( reply instanceof GetObjectResponseType ) {\n            GetObjectResponseType getObjectResponse = ( GetObjectResponseType ) reply;\n            if ( getObjectResponse.getBase64Data( ) == null ) return;\n          } else {\n            return;\n          }\n        }\n        MappingHttpResponse response = new MappingHttpResponse( request.getProtocolVersion( ) );\n        DownstreamMessageEvent newEvent = new DownstreamMessageEvent( ctx.getChannel( ), e.getFuture( ), response, null );\n        response.setMessage( reply );\n        ctx.sendDownstream( newEvent );\n        newEvent.getFuture( ).addListener( ChannelFutureListener.CLOSE );\n      } else {\n        \n      }\n    }\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public KeyPair getKeyPair( ) {\n    return SystemCredentialProvider.keypairs.get( this );\n  }","id":58275,"modified_method":"public KeyPair getKeyPair( ) {\n    return SystemCredentialProvider.keypairs.get( this.name );\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public X509Certificate getCertificate( ) {\n    return SystemCredentialProvider.certs.get( this );\n  }","id":58276,"modified_method":"public X509Certificate getCertificate( ) {\n    return SystemCredentialProvider.certs.get( this.name );\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public PrivateKey getPrivateKey( ) {\n    return SystemCredentialProvider.keypairs.get( this ).getPrivate( );\n  }","id":58277,"modified_method":"public PrivateKey getPrivateKey( ) {\n    return SystemCredentialProvider.keypairs.get( this.name ).getPrivate( );\n  }","commit_id":"21cf715639eff9a21ef44e820389a15a5f006d43","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@BeforeClass\n    public static void init() throws Exception\n    {\n        SslSelectChannelConnector connector = new SslSelectChannelConnector();\n\n        String keyStorePath = MavenTestingUtils.getTestResourceFile(\"keystore\").getAbsolutePath();\n        connector.setKeystore(keyStorePath);\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n\n        startServer(connector, new ServerHandler());\n        startProxy();\n    }","id":58278,"modified_method":"@BeforeClass\n    public static void init() throws Exception\n    {\n        SslSelectChannelConnector connector = new SslSelectChannelConnector();\n\n        String keyStorePath = MavenTestingUtils.getTestResourceFile(\"keystore\").getAbsolutePath();\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keyStorePath);\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n\n        startServer(connector, new ServerHandler());\n        startProxy();\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public static void main(String[] args) throws Exception\n    {\n        String jetty_home = System.getProperty(\"jetty.home\",\"../jetty-distribution/target/distribution\");\n        System.setProperty(\"jetty.home\",jetty_home);\n\n        Server server = new Server();\n        server.setDumpAfterStart(true);\n        server.setDumpBeforeStop(true);\n        \n        // Setup JMX\n        MBeanContainer mbContainer=new MBeanContainer(ManagementFactory.getPlatformMBeanServer());\n        server.getContainer().addEventListener(mbContainer);\n        server.addBean(mbContainer);\n        mbContainer.addBean(Log.getLog());\n\n        \n        // Setup Threadpool\n        QueuedThreadPool threadPool = new QueuedThreadPool();\n        threadPool.setMaxThreads(100);\n        server.setThreadPool(threadPool);\n\n        // Setup Connectors\n        SelectChannelConnector connector = new SelectChannelConnector();\n        connector.setPort(8080);\n        connector.setMaxIdleTime(30000);\n        connector.setConfidentialPort(8443);\n        connector.setStatsOn(true);\n        \n        server.setConnectors(new Connector[]\n        { connector });\n\n        SslSelectChannelConnector ssl_connector = new SslSelectChannelConnector();\n        ssl_connector.setPort(8443);\n        ssl_connector.setKeystore(jetty_home + \"/etc/keystore\");\n        ssl_connector.setPassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        ssl_connector.setKeyPassword(\"OBF:1u2u1wml1z7s1z7a1wnl1u2g\");\n        ssl_connector.setTruststore(jetty_home + \"/etc/keystore\");\n        ssl_connector.setTrustPassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        ssl_connector.setStatsOn(true);\n        ssl_connector.setExcludeCipherSuites(\n                new String[] {\n                    \"SSL_RSA_WITH_DES_CBC_SHA\",\n                    \"SSL_DHE_RSA_WITH_DES_CBC_SHA\",\n                    \"SSL_DHE_DSS_WITH_DES_CBC_SHA\",\n                    \"SSL_RSA_EXPORT_WITH_RC4_40_MD5\",\n                    \"SSL_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n                    \"SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n                    \"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\"\n                });\n        server.addConnector(ssl_connector);\n\n        Ajp13SocketConnector ajp = new Ajp13SocketConnector();\n        ajp.setPort(8009);\n        server.addConnector(ajp);\n        \n        HandlerCollection handlers = new HandlerCollection();\n        ContextHandlerCollection contexts = new ContextHandlerCollection();\n        RequestLogHandler requestLogHandler = new RequestLogHandler();\n        handlers.setHandlers(new Handler[]\n        { contexts, new DefaultHandler(), requestLogHandler });\n        \n        StatisticsHandler stats = new StatisticsHandler();\n        stats.setHandler(handlers);\n        \n        server.setHandler(stats);\n\n        // Setup deployers\n        DeploymentManager deployer = new DeploymentManager();\n        deployer.setContexts(contexts);\n        server.addBean(deployer);   \n        \n        ContextProvider context_provider = new ContextProvider();\n        context_provider.setMonitoredDirName(jetty_home + \"/contexts\");\n        context_provider.setScanInterval(2);\n        deployer.addAppProvider(context_provider);\n\n        WebAppProvider webapp_provider = new WebAppProvider();\n        webapp_provider.setMonitoredDirName(jetty_home + \"/webapps\");\n        webapp_provider.setParentLoaderPriority(false);\n        webapp_provider.setExtractWars(true);\n        webapp_provider.setScanInterval(2);\n        webapp_provider.setDefaultsDescriptor(jetty_home + \"/etc/webdefault.xml\");\n        webapp_provider.setContextXmlDir(jetty_home + \"/contexts\");\n        deployer.addAppProvider(webapp_provider);\n        \n        HashLoginService login = new HashLoginService();\n        login.setName(\"Test Realm\");\n        login.setConfig(jetty_home + \"/etc/realm.properties\");\n        server.addBean(login);\n\n        NCSARequestLog requestLog = new NCSARequestLog(jetty_home + \"/logs/jetty-yyyy_mm_dd.log\");\n        requestLog.setExtended(false);\n        requestLogHandler.setRequestLog(requestLog);\n\n        server.setStopAtShutdown(true);\n        server.setSendServerVersion(true);\n        \n        server.start();\n        \n        server.join();\n    }","id":58279,"modified_method":"public static void main(String[] args) throws Exception\n    {\n        String jetty_home = System.getProperty(\"jetty.home\",\"../jetty-distribution/target/distribution\");\n        System.setProperty(\"jetty.home\",jetty_home);\n\n        Server server = new Server();\n        server.setDumpAfterStart(true);\n        server.setDumpBeforeStop(true);\n        \n        // Setup JMX\n        MBeanContainer mbContainer=new MBeanContainer(ManagementFactory.getPlatformMBeanServer());\n        server.getContainer().addEventListener(mbContainer);\n        server.addBean(mbContainer);\n        mbContainer.addBean(Log.getLog());\n\n        \n        // Setup Threadpool\n        QueuedThreadPool threadPool = new QueuedThreadPool();\n        threadPool.setMaxThreads(100);\n        server.setThreadPool(threadPool);\n\n        // Setup Connectors\n        SelectChannelConnector connector = new SelectChannelConnector();\n        connector.setPort(8080);\n        connector.setMaxIdleTime(30000);\n        connector.setConfidentialPort(8443);\n        connector.setStatsOn(true);\n        \n        server.setConnectors(new Connector[]\n        { connector });\n\n        SslSelectChannelConnector ssl_connector = new SslSelectChannelConnector();\n        ssl_connector.setPort(8443);\n        SslContextFactory cf = ssl_connector.getSslContextFactory();\n        cf.setKeyStore(jetty_home + \"/etc/keystore\");\n        cf.setKeyStorePassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        cf.setKeyManagerPassword(\"OBF:1u2u1wml1z7s1z7a1wnl1u2g\");\n        cf.setTrustStore(jetty_home + \"/etc/keystore\");\n        cf.setTrustStorePassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        cf.setExcludeCipherSuites(\n                new String[] {\n                    \"SSL_RSA_WITH_DES_CBC_SHA\",\n                    \"SSL_DHE_RSA_WITH_DES_CBC_SHA\",\n                    \"SSL_DHE_DSS_WITH_DES_CBC_SHA\",\n                    \"SSL_RSA_EXPORT_WITH_RC4_40_MD5\",\n                    \"SSL_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n                    \"SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA\",\n                    \"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\"\n                });\n        ssl_connector.setStatsOn(true);\n        server.addConnector(ssl_connector);\n\n        Ajp13SocketConnector ajp = new Ajp13SocketConnector();\n        ajp.setPort(8009);\n        server.addConnector(ajp);\n        \n        HandlerCollection handlers = new HandlerCollection();\n        ContextHandlerCollection contexts = new ContextHandlerCollection();\n        RequestLogHandler requestLogHandler = new RequestLogHandler();\n        handlers.setHandlers(new Handler[]\n        { contexts, new DefaultHandler(), requestLogHandler });\n        \n        StatisticsHandler stats = new StatisticsHandler();\n        stats.setHandler(handlers);\n        \n        server.setHandler(stats);\n\n        // Setup deployers\n        DeploymentManager deployer = new DeploymentManager();\n        deployer.setContexts(contexts);\n        server.addBean(deployer);   \n        \n        ContextProvider context_provider = new ContextProvider();\n        context_provider.setMonitoredDirName(jetty_home + \"/contexts\");\n        context_provider.setScanInterval(2);\n        deployer.addAppProvider(context_provider);\n\n        WebAppProvider webapp_provider = new WebAppProvider();\n        webapp_provider.setMonitoredDirName(jetty_home + \"/webapps\");\n        webapp_provider.setParentLoaderPriority(false);\n        webapp_provider.setExtractWars(true);\n        webapp_provider.setScanInterval(2);\n        webapp_provider.setDefaultsDescriptor(jetty_home + \"/etc/webdefault.xml\");\n        webapp_provider.setContextXmlDir(jetty_home + \"/contexts\");\n        deployer.addAppProvider(webapp_provider);\n        \n        HashLoginService login = new HashLoginService();\n        login.setName(\"Test Realm\");\n        login.setConfig(jetty_home + \"/etc/realm.properties\");\n        server.addBean(login);\n\n        NCSARequestLog requestLog = new NCSARequestLog(jetty_home + \"/logs/jetty-yyyy_mm_dd.log\");\n        requestLog.setExtended(false);\n        requestLogHandler.setRequestLog(requestLog);\n\n        server.setStopAtShutdown(true);\n        server.setSendServerVersion(true);\n        \n        server.start();\n        \n        server.join();\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public static void main(String[] args) throws Exception\n    {\n        Server server = new Server();\n\n        SelectChannelConnector connector0 = new SelectChannelConnector();\n        connector0.setPort(8080);\n        connector0.setMaxIdleTime(30000);\n        connector0.setRequestHeaderSize(8192);\n\n        SelectChannelConnector connector1 = new SelectChannelConnector();\n        connector1.setHost(\"127.0.0.1\");\n        connector1.setPort(8888);\n        connector1.setThreadPool(new QueuedThreadPool(20));\n        connector1.setName(\"admin\");\n\n        SslSelectChannelConnector ssl_connector = new SslSelectChannelConnector();\n        String jetty_home = System.getProperty(\"jetty.home\",\"../jetty-distribution/target/distribution\");\n        System.setProperty(\"jetty.home\",jetty_home);\n        ssl_connector.setPort(8443);\n        ssl_connector.setKeystore(jetty_home + \"/etc/keystore\");\n        ssl_connector.setPassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        ssl_connector.setKeyPassword(\"OBF:1u2u1wml1z7s1z7a1wnl1u2g\");\n        server.addConnector(ssl_connector);\n\n        server.setConnectors(new Connector[]\n        { connector0, connector1, ssl_connector });\n\n        server.setHandler(new HelloHandler());\n\n        server.start();\n        server.join();\n    }","id":58280,"modified_method":"public static void main(String[] args) throws Exception\n    {\n        Server server = new Server();\n\n        SelectChannelConnector connector0 = new SelectChannelConnector();\n        connector0.setPort(8080);\n        connector0.setMaxIdleTime(30000);\n        connector0.setRequestHeaderSize(8192);\n\n        SelectChannelConnector connector1 = new SelectChannelConnector();\n        connector1.setHost(\"127.0.0.1\");\n        connector1.setPort(8888);\n        connector1.setThreadPool(new QueuedThreadPool(20));\n        connector1.setName(\"admin\");\n\n        SslSelectChannelConnector ssl_connector = new SslSelectChannelConnector();\n        String jetty_home = System.getProperty(\"jetty.home\",\"../jetty-distribution/target/distribution\");\n        System.setProperty(\"jetty.home\",jetty_home);\n        ssl_connector.setPort(8443);\n        SslContextFactory cf = ssl_connector.getSslContextFactory();\n        cf.setKeyStore(jetty_home + \"/etc/keystore\");\n        cf.setKeyStorePassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        cf.setKeyManagerPassword(\"OBF:1u2u1wml1z7s1z7a1wnl1u2g\");\n        server.addConnector(ssl_connector);\n\n        server.setConnectors(new Connector[]\n        { connector0, connector1, ssl_connector });\n\n        server.setHandler(new HelloHandler());\n\n        server.start();\n        server.join();\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private void startSSLServer(Handler handler) throws Exception\n    {\n        SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        String keyStorePath = MavenTestingUtils.getTestResourceFile(\"keystore\").getAbsolutePath();\n        connector.setKeystore(keyStorePath);\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n        startServer(connector, handler);\n    }","id":58281,"modified_method":"private void startSSLServer(Handler handler) throws Exception\n    {\n        SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        String keyStorePath = MavenTestingUtils.getTestResourceFile(\"keystore\").getAbsolutePath();\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keyStorePath);\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n        startServer(connector, handler);\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@BeforeClass\n    public static void startServer() throws Exception\n    {\n        server=new Server();\n        connector=new SslSelectChannelConnector();\n        String keystore = MavenTestingUtils.getTestResourceFile(\"keystore\").getAbsolutePath();\n\n        connector.setPort(0);\n        connector.setKeystore(keystore);\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n        connector.setRequestBufferSize(512);\n        connector.setRequestHeaderSize(512);\n\n        server.setConnectors(new Connector[]{connector });\n        server.setHandler(new HelloWorldHandler());\n        server.start();\n    }","id":58282,"modified_method":"@BeforeClass\n    public static void startServer() throws Exception\n    {\n        server=new Server();\n        connector=new SslSelectChannelConnector();\n        String keystore = MavenTestingUtils.getTestResourceFile(\"keystore\").getAbsolutePath();\n\n        connector.setPort(0);\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keystore);\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n        connector.setRequestBufferSize(512);\n        connector.setRequestHeaderSize(512);\n\n        server.setConnectors(new Connector[]{connector });\n        server.setHandler(new HelloWorldHandler());\n        server.start();\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@BeforeClass\n    public static void startServer() throws Exception\n    {\n        server = new Server();\n        connector = new SslSelectChannelConnector();\n        server.addConnector(connector);\n\n        String keystorePath = System.getProperty(\"basedir\", \".\") + \"/src/test/resources/keystore\";\n        connector.setKeystore(keystorePath);\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n        connector.setTruststore(keystorePath);\n        connector.setTrustPassword(\"storepwd\");\n\n        server.setHandler(new EmptyHandler());\n\n        server.start();\n\n        KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());\n        keystore.load(new FileInputStream(connector.getKeystore()), \"storepwd\".toCharArray());\n        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n        trustManagerFactory.init(keystore);\n        sslContext = SSLContext.getInstance(\"SSL\");\n        sslContext.init(null, trustManagerFactory.getTrustManagers(), null);\n    }","id":58283,"modified_method":"@BeforeClass\n    public static void startServer() throws Exception\n    {\n        server = new Server();\n        connector = new SslSelectChannelConnector();\n        server.addConnector(connector);\n\n        String keystorePath = System.getProperty(\"basedir\", \".\") + \"/src/test/resources/keystore\";\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keystorePath);\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n        cf.setTrustStore(keystorePath);\n        cf.setTrustStorePassword(\"storepwd\");\n\n        server.setHandler(new EmptyHandler());\n\n        server.start();\n\n        KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());\n        keystore.load(new FileInputStream(connector.getKeystore()), \"storepwd\".toCharArray());\n        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n        trustManagerFactory.init(keystore);\n        sslContext = SSLContext.getInstance(\"SSL\");\n        sslContext.init(null, trustManagerFactory.getTrustManagers(), null);\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"protected void configureServer(Server server)\n        throws Exception\n    {\n        setProtocol(\"https\");\n        \n        SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        File keystore = MavenTestingUtils.getTestResourceFile(\"keystore\");\n        connector.setKeystore(keystore.getAbsolutePath());\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n        server.addConnector(connector);\n                \n        Handler handler = new TestHandler(getBasePath());\n\n        ServletContextHandler root = new ServletContextHandler();\n        root.setContextPath(\"/\");\n        root.setResourceBase(getBasePath());\n        ServletHolder servletHolder = new ServletHolder( new DefaultServlet() );\n        servletHolder.setInitParameter( \"gzip\", \"true\" );\n        root.addServlet( servletHolder, \"/*\" );    \n\n        HandlerCollection handlers = new HandlerCollection();\n        handlers.setHandlers(new Handler[]{handler, root});\n        server.setHandler( handlers ); \n    }","id":58284,"modified_method":"protected void configureServer(Server server)\n        throws Exception\n    {\n        setProtocol(\"https\");\n        \n        SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        File keystore = MavenTestingUtils.getTestResourceFile(\"keystore\");\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keystore.getAbsolutePath());\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n        server.addConnector(connector);\n                \n        Handler handler = new TestHandler(getBasePath());\n\n        ServletContextHandler root = new ServletContextHandler();\n        root.setContextPath(\"/\");\n        root.setResourceBase(getBasePath());\n        ServletHolder servletHolder = new ServletHolder( new DefaultServlet() );\n        servletHolder.setInitParameter( \"gzip\", \"true\" );\n        root.addServlet( servletHolder, \"/*\" );    \n\n        HandlerCollection handlers = new HandlerCollection();\n        handlers.setHandlers(new Handler[]{handler, root});\n        server.setHandler( handlers ); \n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    protected void newServer()\n    {\n        _server = new Server();\n        //SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        SslSocketConnector connector = new SslSocketConnector();\n\n        String keystore = MavenTestingUtils.getTestResourceFile(\"keystore\").getAbsolutePath();\n\n        connector.setPort(0);\n        connector.setKeystore(keystore);\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n\tconnector.setAllowRenegotiate(true);\n\n        _server.setConnectors(new Connector[]\n        { connector });\n        _connector=connector;\n    }","id":58285,"modified_method":"@Override\n    protected void newServer()\n    {\n        _server = new Server();\n        //SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        SslSocketConnector connector = new SslSocketConnector();\n\n        String keystore = MavenTestingUtils.getTestResourceFile(\"keystore\").getAbsolutePath();\n\n        connector.setPort(0);\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keystore);\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n\tconnector.setAllowRenegotiate(true);\n\n        _server.setConnectors(new Connector[]\n        { connector });\n        _connector=connector;\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private void doRequests(SslConnector connector, boolean reneg) throws Exception\n    {\n        Server server=new Server();\n        try\n        {\n            String keystore = MavenTestingUtils.getTestResourceFile(\"keystore\").getAbsolutePath();\n            connector.setPort(0);\n            connector.setKeystore(keystore);\n            connector.setPassword(\"storepwd\");\n            connector.setKeyPassword(\"keypwd\");\n            connector.setAllowRenegotiate(reneg);\n\n            server.setConnectors(new Connector[] { connector });\n            server.setHandler(new HelloWorldHandler());\n\n            server.start();\n\n            SocketAddress addr = new InetSocketAddress(\"localhost\",connector.getLocalPort());\n            _socket = SocketChannel.open(addr);\n            _socket.configureBlocking(true);\n\n            SSLContext context=SSLContext.getInstance(\"SSL\");\n            context.init( null, trustAllCerts, new java.security.SecureRandom() );\n\n            _engine = context.createSSLEngine();\n            _engine.setUseClientMode(true);\n            SSLSession session=_engine.getSession();\n\n            _outAppB = ByteBuffer.allocate(session.getApplicationBufferSize());\n            _outPacketB = ByteBuffer.allocate(session.getPacketBufferSize());\n            _inAppB = ByteBuffer.allocate(session.getApplicationBufferSize());\n            _inPacketB = ByteBuffer.allocate(session.getPacketBufferSize());\n\n\n            _outAppB.put(\"GET /1 HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\n\".getBytes(StringUtil.__ISO_8859_1));\n            _outAppB.flip();\n\n            _engine.beginHandshake();\n\n            runHandshake();\n\n            doWrap();\n            doUnwrap();\n            _inAppB.flip();\n            String response=new IndirectNIOBuffer(_inAppB,true).toString();\n            // System.err.println(response);\n            assertTrue(response.startsWith(\"HTTP/1.1 200 OK\"));\n\n            if (response.indexOf(\"HELLO WORLD\")<0)\n            {\n                _inAppB.clear();\n                doUnwrap();\n                _inAppB.flip();\n                response=new IndirectNIOBuffer(_inAppB,true).toString();\n            }\n\n            assertTrue(response.indexOf(\"HELLO WORLD\")>=0);\n\n            _inAppB.clear();\n            _outAppB.clear();\n            _outAppB.put(\"GET /2 HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\n\".getBytes(StringUtil.__ISO_8859_1));\n            _outAppB.flip();\n\n            try\n            {\n                session.invalidate();\n                _engine.beginHandshake();\n                runHandshake();\n\n                doWrap();\n                doUnwrap();\n                _inAppB.flip();\n                response=new IndirectNIOBuffer(_inAppB,true).toString();\n                assertTrue(response.startsWith(\"HTTP/1.1 200 OK\"));\n                assertTrue(response.indexOf(\"HELLO WORLD\")>0);\n\n                assertTrue(reneg);\n            }\n            catch(IOException e)\n            {\n                if (!(e instanceof SSLProtocolException))\n                {\n                    if (reneg)\n                        Log.warn(e);\n                    assertFalse(reneg);\n                }\n            }\n        }\n        finally\n        {\n            server.stop();\n            server.join();\n        }\n    }","id":58286,"modified_method":"private void doRequests(SslConnector connector, boolean reneg) throws Exception\n    {\n        Server server=new Server();\n        try\n        {\n            String keystore = MavenTestingUtils.getTestResourceFile(\"keystore\").getAbsolutePath();\n            connector.setPort(0);\n            SslContextFactory cf = connector.getSslContextFactory();\n            cf.setKeyStore(keystore);\n            cf.setKeyStorePassword(\"storepwd\");\n            cf.setKeyManagerPassword(\"keypwd\");\n            cf.setAllowRenegotiate(reneg);\n\n            server.setConnectors(new Connector[] { connector });\n            server.setHandler(new HelloWorldHandler());\n\n            server.start();\n\n            SocketAddress addr = new InetSocketAddress(\"localhost\",connector.getLocalPort());\n            _socket = SocketChannel.open(addr);\n            _socket.configureBlocking(true);\n\n            SSLContext context=SSLContext.getInstance(\"SSL\");\n            context.init( null, trustAllCerts, new java.security.SecureRandom() );\n\n            _engine = context.createSSLEngine();\n            _engine.setUseClientMode(true);\n            SSLSession session=_engine.getSession();\n\n            _outAppB = ByteBuffer.allocate(session.getApplicationBufferSize());\n            _outPacketB = ByteBuffer.allocate(session.getPacketBufferSize());\n            _inAppB = ByteBuffer.allocate(session.getApplicationBufferSize());\n            _inPacketB = ByteBuffer.allocate(session.getPacketBufferSize());\n\n\n            _outAppB.put(\"GET /1 HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\n\".getBytes(StringUtil.__ISO_8859_1));\n            _outAppB.flip();\n\n            _engine.beginHandshake();\n\n            runHandshake();\n\n            doWrap();\n            doUnwrap();\n            _inAppB.flip();\n            String response=new IndirectNIOBuffer(_inAppB,true).toString();\n            // System.err.println(response);\n            assertTrue(response.startsWith(\"HTTP/1.1 200 OK\"));\n\n            if (response.indexOf(\"HELLO WORLD\")<0)\n            {\n                _inAppB.clear();\n                doUnwrap();\n                _inAppB.flip();\n                response=new IndirectNIOBuffer(_inAppB,true).toString();\n            }\n\n            assertTrue(response.indexOf(\"HELLO WORLD\")>=0);\n\n            _inAppB.clear();\n            _outAppB.clear();\n            _outAppB.put(\"GET /2 HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\n\".getBytes(StringUtil.__ISO_8859_1));\n            _outAppB.flip();\n\n            try\n            {\n                session.invalidate();\n                _engine.beginHandshake();\n                runHandshake();\n\n                doWrap();\n                doUnwrap();\n                _inAppB.flip();\n                response=new IndirectNIOBuffer(_inAppB,true).toString();\n                assertTrue(response.startsWith(\"HTTP/1.1 200 OK\"));\n                assertTrue(response.indexOf(\"HELLO WORLD\")>0);\n\n                assertTrue(reneg);\n            }\n            catch(IOException e)\n            {\n                if (!(e instanceof SSLProtocolException))\n                {\n                    if (reneg)\n                        Log.warn(e);\n                    assertFalse(reneg);\n                }\n            }\n        }\n        finally\n        {\n            server.stop();\n            server.join();\n        }\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"protected void configureServer(Server server)\n        throws Exception\n    {\n        setProtocol(\"https\");\n        setRealm(new Realm()\n                 {\n                     public String getId()\n                     {\n                         return \"MyRealm\";\n                     }\n                \n                     public String getPrincipal()\n                     {\n                         return \"jetty\";\n                     }\n                \n                     public String getCredentials()\n                     {\n                         return \"jetty\";\n                     }\n                 });\n                        \n        SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        File keystore = MavenTestingUtils.getTestResourceFile(\"keystore\");\n        connector.setKeystore(keystore.getAbsolutePath());\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n        server.addConnector(connector);\n\n        File realmPropFile = MavenTestingUtils.getTestResourceFile(\"realm.properties\");\n        LoginService loginService = new HashLoginService(\"MyRealm\",realmPropFile.getAbsolutePath());\n        server.addBean(loginService); \n\n        ConstraintSecurityHandler security = new ConstraintSecurityHandler();\n        server.setHandler(security);\n\n        Constraint constraint = new Constraint();\n        constraint.setName(\"auth\");\n        constraint.setAuthenticate( true );\n        constraint.setRoles(new String[]{\"user\", \"admin\"});\n\n        ConstraintMapping mapping = new ConstraintMapping();\n        mapping.setPathSpec( \"/*\" );\n        mapping.setConstraint( constraint );\n\n        Set<String> knownRoles = new HashSet<String>();\n        knownRoles.add(\"user\");\n        knownRoles.add(\"admin\");\n        \n        security.setConstraintMappings(Collections.singletonList(mapping), knownRoles);\n        security.setAuthenticator(new BasicAuthenticator());\n        security.setLoginService(loginService);\n        security.setStrict(false);\n        \n        ServletContextHandler root = new ServletContextHandler();\n        root.setContextPath(\"/\");\n        root.setResourceBase(getBasePath());\n        ServletHolder servletHolder = new ServletHolder( new DefaultServlet() );\n        servletHolder.setInitParameter( \"gzip\", \"true\" );\n        root.addServlet( servletHolder, \"/*\" );    \n\n        Handler handler = new TestHandler(getBasePath());       \n        \n        HandlerCollection handlers = new HandlerCollection();\n        handlers.setHandlers(new Handler[]{handler, root});\n        security.setHandler(handlers);\n    }","id":58287,"modified_method":"protected void configureServer(Server server)\n        throws Exception\n    {\n        setProtocol(\"https\");\n        setRealm(new Realm()\n                 {\n                     public String getId()\n                     {\n                         return \"MyRealm\";\n                     }\n                \n                     public String getPrincipal()\n                     {\n                         return \"jetty\";\n                     }\n                \n                     public String getCredentials()\n                     {\n                         return \"jetty\";\n                     }\n                 });\n                        \n        SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        File keystore = MavenTestingUtils.getTestResourceFile(\"keystore\");\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keystore.getAbsolutePath());\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n        server.addConnector(connector);\n\n        File realmPropFile = MavenTestingUtils.getTestResourceFile(\"realm.properties\");\n        LoginService loginService = new HashLoginService(\"MyRealm\",realmPropFile.getAbsolutePath());\n        server.addBean(loginService); \n\n        ConstraintSecurityHandler security = new ConstraintSecurityHandler();\n        server.setHandler(security);\n\n        Constraint constraint = new Constraint();\n        constraint.setName(\"auth\");\n        constraint.setAuthenticate( true );\n        constraint.setRoles(new String[]{\"user\", \"admin\"});\n\n        ConstraintMapping mapping = new ConstraintMapping();\n        mapping.setPathSpec( \"/*\" );\n        mapping.setConstraint( constraint );\n\n        Set<String> knownRoles = new HashSet<String>();\n        knownRoles.add(\"user\");\n        knownRoles.add(\"admin\");\n        \n        security.setConstraintMappings(Collections.singletonList(mapping), knownRoles);\n        security.setAuthenticator(new BasicAuthenticator());\n        security.setLoginService(loginService);\n        security.setStrict(false);\n        \n        ServletContextHandler root = new ServletContextHandler();\n        root.setContextPath(\"/\");\n        root.setResourceBase(getBasePath());\n        ServletHolder servletHolder = new ServletHolder( new DefaultServlet() );\n        servletHolder.setInitParameter( \"gzip\", \"true\" );\n        root.addServlet( servletHolder, \"/*\" );    \n\n        Handler handler = new TestHandler(getBasePath());       \n        \n        HandlerCollection handlers = new HandlerCollection();\n        handlers.setHandlers(new Handler[]{handler, root});\n        security.setHandler(handlers);\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"protected void startServer() throws Exception\n    {\n        _server = new Server();\n        //SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        SslSocketConnector connector = new SslSocketConnector();\n\n        String keystore = MavenTestingUtils.getTestResourceFile(\"keystore\").getAbsolutePath();\n\n        connector.setPort(0);\n        connector.setKeystore(keystore);\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n\n        _server.setConnectors(new Connector[]\n        { connector });\n\n        Constraint constraint = new Constraint();\n        constraint.setName(\"Need User or Admin\");\n        constraint.setRoles(new String[]\n        { \"user\", \"admin\" });\n        constraint.setAuthenticate(true);\n\n        ConstraintMapping cm = new ConstraintMapping();\n        cm.setConstraint(constraint);\n        cm.setPathSpec(\"/*\");\n\n        File realmPropFile = MavenTestingUtils.getTestResourceFile(\"realm.properties\");\n        LoginService loginService = new HashLoginService(\"MyRealm\",realmPropFile.getAbsolutePath());\n        _server.addBean(loginService);\n        \n        BasicAuthenticator authenticator = new BasicAuthenticator();\n        \n        ConstraintSecurityHandler sh = new ConstraintSecurityHandler();\n        sh.setAuthenticator(authenticator);\n        \n        Set<String> roles = new HashSet<String>(Arrays.asList(new String[]{\"user\", \"admin\"}));\n        sh.setConstraintMappings(Collections.singletonList(cm), roles);\n        _server.setHandler(sh);\n\n        Handler testHandler = new AbstractHandler()\n        {\n\n            public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException\n            {\n                // System.err.println(\"passed authentication!\\n\"+((Request)request).getConnection().getRequestFields());\n                \n                baseRequest.setHandled(true);\n                response.setStatus(200);\n                response.setContentType(\"text/plain\");\n                if (request.getServerName().equals(\"jetty.eclipse.org\"))\n                {\n                    response.getOutputStream().println(\"Proxy request: \" + request.getRequestURL());\n                }\n                else if (request.getMethod().equalsIgnoreCase(\"GET\"))\n                {\n                    response.getOutputStream().println(\"<hello>\");\n                    for (int i = 0; i < 100; i++)\n                    {\n                        response.getOutputStream().println(\"  <world>\" + i + \"<\/world>\");\n                        if (i % 20 == 0)\n                            response.getOutputStream().flush();\n                    }\n                    response.getOutputStream().println(\"<\/hello>\");\n                }\n                else\n                {\n                    copyStream(request.getInputStream(),response.getOutputStream());\n                }\n            }\n        };\n\n        sh.setHandler(testHandler);\n\n        _server.start();\n        _port = connector.getLocalPort();\n    }","id":58288,"modified_method":"protected void startServer() throws Exception\n    {\n        _server = new Server();\n        //SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        SslSocketConnector connector = new SslSocketConnector();\n\n        String keystore = MavenTestingUtils.getTestResourceFile(\"keystore\").getAbsolutePath();\n\n        connector.setPort(0);\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keystore);\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n\n        _server.setConnectors(new Connector[]\n        { connector });\n\n        Constraint constraint = new Constraint();\n        constraint.setName(\"Need User or Admin\");\n        constraint.setRoles(new String[]\n        { \"user\", \"admin\" });\n        constraint.setAuthenticate(true);\n\n        ConstraintMapping cm = new ConstraintMapping();\n        cm.setConstraint(constraint);\n        cm.setPathSpec(\"/*\");\n\n        File realmPropFile = MavenTestingUtils.getTestResourceFile(\"realm.properties\");\n        LoginService loginService = new HashLoginService(\"MyRealm\",realmPropFile.getAbsolutePath());\n        _server.addBean(loginService);\n        \n        BasicAuthenticator authenticator = new BasicAuthenticator();\n        \n        ConstraintSecurityHandler sh = new ConstraintSecurityHandler();\n        sh.setAuthenticator(authenticator);\n        \n        Set<String> roles = new HashSet<String>(Arrays.asList(new String[]{\"user\", \"admin\"}));\n        sh.setConstraintMappings(Collections.singletonList(cm), roles);\n        _server.setHandler(sh);\n\n        Handler testHandler = new AbstractHandler()\n        {\n\n            public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException\n            {\n                // System.err.println(\"passed authentication!\\n\"+((Request)request).getConnection().getRequestFields());\n                \n                baseRequest.setHandled(true);\n                response.setStatus(200);\n                response.setContentType(\"text/plain\");\n                if (request.getServerName().equals(\"jetty.eclipse.org\"))\n                {\n                    response.getOutputStream().println(\"Proxy request: \" + request.getRequestURL());\n                }\n                else if (request.getMethod().equalsIgnoreCase(\"GET\"))\n                {\n                    response.getOutputStream().println(\"<hello>\");\n                    for (int i = 0; i < 100; i++)\n                    {\n                        response.getOutputStream().println(\"  <world>\" + i + \"<\/world>\");\n                        if (i % 20 == 0)\n                            response.getOutputStream().flush();\n                    }\n                    response.getOutputStream().println(\"<\/hello>\");\n                }\n                else\n                {\n                    copyStream(request.getInputStream(),response.getOutputStream());\n                }\n            }\n        };\n\n        sh.setHandler(testHandler);\n\n        _server.start();\n        _port = connector.getLocalPort();\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@BeforeClass\n    public static void init() throws Exception\n    {   \n        SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        String keystorePath = System.getProperty(\"basedir\",\".\") + \"/src/test/resources/keystore\";\n        connector.setKeystore(keystorePath);\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n        connector.setTruststore(keystorePath);\n        connector.setTrustPassword(\"storepwd\");\n        connector.setUseDirectBuffers(true);\n        startServer(connector);\n        \n\n        KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());\n        keystore.load(new FileInputStream(connector.getKeystore()), \"storepwd\".toCharArray());\n        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n        trustManagerFactory.init(keystore);\n        __sslContext = SSLContext.getInstance(\"SSL\");\n        __sslContext.init(null, trustManagerFactory.getTrustManagers(), null);\n        \n\n        try\n        {\n            HttpsURLConnection.setDefaultHostnameVerifier(__hostnameverifier);\n            SSLContext sc = SSLContext.getInstance(\"SSL\"); \n            sc.init(null, __trustAllCerts, new java.security.SecureRandom()); \n            HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());\n        }\n        catch(Exception e)\n        {\n            e.printStackTrace();\n            throw new RuntimeException(e);\n        }\n        \n    }","id":58289,"modified_method":"@BeforeClass\n    public static void init() throws Exception\n    {   \n        SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        String keystorePath = System.getProperty(\"basedir\",\".\") + \"/src/test/resources/keystore\";\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keystorePath);\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n        cf.setTrustStore(keystorePath);\n        cf.setTrustStorePassword(\"storepwd\");\n        connector.setUseDirectBuffers(true);\n        startServer(connector);\n        \n\n        KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());\n        keystore.load(new FileInputStream(connector.getKeystore()), \"storepwd\".toCharArray());\n        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n        trustManagerFactory.init(keystore);\n        __sslContext = SSLContext.getInstance(\"SSL\");\n        __sslContext.init(null, trustManagerFactory.getTrustManagers(), null);\n        \n\n        try\n        {\n            HttpsURLConnection.setDefaultHostnameVerifier(__hostnameverifier);\n            SSLContext sc = SSLContext.getInstance(\"SSL\"); \n            sc.init(null, __trustAllCerts, new java.security.SecureRandom()); \n            HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());\n        }\n        catch(Exception e)\n        {\n            e.printStackTrace();\n            throw new RuntimeException(e);\n        }\n        \n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@BeforeClass\n    public static void init() throws Exception\n    {   \n        SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        connector.setMaxIdleTime(MAX_IDLE_TIME); //250 msec max idle\n        String keystorePath = System.getProperty(\"basedir\",\".\") + \"/src/test/resources/keystore\";\n        connector.setKeystore(keystorePath);\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n        connector.setTruststore(keystorePath);\n        connector.setTrustPassword(\"storepwd\");\n        startServer(connector);\n        \n        KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());\n        keystore.load(new FileInputStream(connector.getKeystore()), \"storepwd\".toCharArray());\n        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n        trustManagerFactory.init(keystore);\n        __sslContext = SSLContext.getInstance(\"SSL\");\n        __sslContext.init(null, trustManagerFactory.getTrustManagers(), null);\n        \n    }","id":58290,"modified_method":"@BeforeClass\n    public static void init() throws Exception\n    {   \n        SslSelectChannelConnector connector = new SslSelectChannelConnector();\n        connector.setMaxIdleTime(MAX_IDLE_TIME); //250 msec max idle\n        String keystorePath = System.getProperty(\"basedir\",\".\") + \"/src/test/resources/keystore\";\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keystorePath);\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n        cf.setTrustStore(keystorePath);\n        cf.setTrustStorePassword(\"storepwd\");\n        startServer(connector);\n        \n        KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());\n        keystore.load(new FileInputStream(connector.getKeystore()), \"storepwd\".toCharArray());\n        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n        trustManagerFactory.init(keystore);\n        __sslContext = SSLContext.getInstance(\"SSL\");\n        __sslContext.init(null, trustManagerFactory.getTrustManagers(), null);\n        \n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@BeforeClass\n    public static void init() throws Exception\n    {   \n        SslSocketConnector connector = new SslSocketConnector();\n        String keystorePath = System.getProperty(\"basedir\",\".\") + \"/src/test/resources/keystore\";\n        connector.setKeystore(keystorePath);\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n        connector.setTruststore(keystorePath);\n        connector.setTrustPassword(\"storepwd\");\n        startServer(connector);\n        \n\n        KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());\n        keystore.load(new FileInputStream(connector.getKeystore()), \"storepwd\".toCharArray());\n        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n        trustManagerFactory.init(keystore);\n        __sslContext = SSLContext.getInstance(\"SSL\");\n        __sslContext.init(null, trustManagerFactory.getTrustManagers(), null);\n        \n\n    }","id":58291,"modified_method":"@BeforeClass\n    public static void init() throws Exception\n    {   \n        SslSocketConnector connector = new SslSocketConnector();\n        String keystorePath = System.getProperty(\"basedir\",\".\") + \"/src/test/resources/keystore\";\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keystorePath);\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n        cf.setTrustStore(keystorePath);\n        cf.setTrustStorePassword(\"storepwd\");\n        startServer(connector);\n        \n\n        KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());\n        keystore.load(new FileInputStream(connector.getKeystore()), \"storepwd\".toCharArray());\n        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n        trustManagerFactory.init(keystore);\n        __sslContext = SSLContext.getInstance(\"SSL\");\n        __sslContext.init(null, trustManagerFactory.getTrustManagers(), null);\n        \n\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@BeforeClass\n    public static void init() throws Exception\n    {   \n        SslSocketConnector connector = new SslSocketConnector();\n        connector.setMaxIdleTime(MAX_IDLE_TIME); //250 msec max idle\n        String keystorePath = System.getProperty(\"basedir\",\".\") + \"/src/test/resources/keystore\";\n        connector.setKeystore(keystorePath);\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n        connector.setTruststore(keystorePath);\n        connector.setTrustPassword(\"storepwd\");\n        startServer(connector);\n        \n\n        KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());\n        keystore.load(new FileInputStream(connector.getKeystore()), \"storepwd\".toCharArray());\n        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n        trustManagerFactory.init(keystore);\n        _sslContext = SSLContext.getInstance(\"SSL\");\n        _sslContext.init(null, trustManagerFactory.getTrustManagers(), null);\n       \n    }","id":58292,"modified_method":"@BeforeClass\n    public static void init() throws Exception\n    {   \n        SslSocketConnector connector = new SslSocketConnector();\n        connector.setMaxIdleTime(MAX_IDLE_TIME); //250 msec max idle\n        String keystorePath = System.getProperty(\"basedir\",\".\") + \"/src/test/resources/keystore\";\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keystorePath);\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n        cf.setTrustStore(keystorePath);\n        cf.setTrustStorePassword(\"storepwd\");\n        startServer(connector);\n        \n\n        KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());\n        keystore.load(new FileInputStream(connector.getKeystore()), \"storepwd\".toCharArray());\n        TrustManagerFactory trustManagerFactory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());\n        trustManagerFactory.init(keystore);\n        _sslContext = SSLContext.getInstance(\"SSL\");\n        _sslContext.init(null, trustManagerFactory.getTrustManagers(), null);\n       \n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@BeforeClass\n    public static void startServer() throws Exception\n    {\n        server = new Server();\n        connector = new SslSelectChannelConnector();\n        server.addConnector(connector);\n\n        String keystorePath = System.getProperty(\"basedir\",\".\") + \"/src/test/resources/keystore\";\n        connector.setKeystore(keystorePath);\n        connector.setPassword(\"storepwd\");\n        connector.setKeyPassword(\"keypwd\");\n        connector.setTruststore(keystorePath);\n        connector.setTrustPassword(\"storepwd\");\n\n        server.setHandler(new EmptyHandler());\n\n        server.start();\n    }","id":58293,"modified_method":"@BeforeClass\n    public static void startServer() throws Exception\n    {\n        server = new Server();\n        connector = new SslSelectChannelConnector();\n        server.addConnector(connector);\n\n        String keystorePath = System.getProperty(\"basedir\",\".\") + \"/src/test/resources/keystore\";\n        SslContextFactory cf = connector.getSslContextFactory();\n        cf.setKeyStore(keystorePath);\n        cf.setKeyStorePassword(\"storepwd\");\n        cf.setKeyManagerPassword(\"keypwd\");\n        cf.setTrustStore(keystorePath);\n        cf.setTrustStorePassword(\"storepwd\");\n\n        server.setHandler(new EmptyHandler());\n\n        server.start();\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    protected void configureClient(HttpClient client)\n        throws Exception\n    {\n        client.setTrustStoreLocation(_trustpath);\n        client.setTrustStorePassword(_password);\n        client.setConnectorType(__konnector);\n    }","id":58294,"modified_method":"@Override\n    protected void configureClient(HttpClient client)\n        throws Exception\n    {\n        client.setConnectorType(__konnector);\n\n        SslContextFactory cf = client.getSslContextFactory();\n        cf.setTrustStore(_trustpath);\n        cf.setTrustStorePassword(_password);\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public static void main(String[] args) throws Exception\n    {\n        Log.getLog().setDebugEnabled(false);\n        ((StdErrLog)Log.getLog()).setSource(false);\n        \n        String jetty_root = \"..\";\n\n        Server server = new Server();\n        server.setSendDateHeader(true);\n        \n        // Setup JMX\n        MBeanContainer mbContainer=new MBeanContainer(ManagementFactory.getPlatformMBeanServer());\n        server.getContainer().addEventListener(mbContainer);\n        server.addBean(mbContainer);\n        mbContainer.addBean(Log.getLog());\n        \n        // Setup Threadpool\n        QueuedThreadPool threadPool = new QueuedThreadPool();\n        threadPool.setMaxThreads(100);\n        server.setThreadPool(threadPool);\n\n        // Setup Connectors\n        SelectChannelConnector connector0 = new SelectChannelConnector();\n        connector0.setPort(8080);\n        connector0.setMaxIdleTime(30000);\n        connector0.setConfidentialPort(8443);\n        connector0.setUseDirectBuffers(true);\n        server.addConnector(connector0);\n        \n        // Setup Connectors\n        SelectChannelConnector connector1 = new SelectChannelConnector();\n        connector1.setPort(8081);\n        connector1.setMaxIdleTime(30000);\n        connector1.setConfidentialPort(8443);\n        connector1.setUseDirectBuffers(false);\n        server.addConnector(connector1);\n        \n        // Setup Connectors\n        SocketConnector connector2 = new SocketConnector();\n        connector2.setPort(8082);\n        connector2.setMaxIdleTime(30000);\n        connector2.setConfidentialPort(8443);\n        server.addConnector(connector2);\n        \n        // Setup Connectors\n        BlockingChannelConnector connector3 = new BlockingChannelConnector();\n        connector3.setPort(8083);\n        connector3.setMaxIdleTime(30000);\n        connector3.setConfidentialPort(8443);\n        server.addConnector(connector3);\n\n        SslSelectChannelConnector ssl_connector = new SslSelectChannelConnector();\n        ssl_connector.setPort(8443);\n        ssl_connector.setKeystore(jetty_root + \"/jetty-server/src/main/config/etc/keystore\");\n        ssl_connector.setPassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        ssl_connector.setKeyPassword(\"OBF:1u2u1wml1z7s1z7a1wnl1u2g\");\n        ssl_connector.setTruststore(jetty_root + \"/jetty-server/src/main/config/etc/keystore\");\n        ssl_connector.setTrustPassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        server.addConnector(ssl_connector);\n\n        HandlerCollection handlers = new HandlerCollection();\n        ContextHandlerCollection contexts = new ContextHandlerCollection();\n        RequestLogHandler requestLogHandler = new RequestLogHandler();\n        handlers.setHandlers(new Handler[]\n        { contexts, new DefaultHandler(), requestLogHandler });\n        \n        // Add restart handler to test the ability to save sessions and restart\n        RestartHandler restart = new RestartHandler();\n        restart.setHandler(handlers);\n        \n        server.setHandler(restart);\n\n        \n        // Setup deployers\n\n        HashLoginService login = new HashLoginService();\n        login.setName(\"Test Realm\");\n        login.setConfig(jetty_root + \"/test-jetty-webapp/src/main/config/etc/realm.properties\");\n        server.addBean(login);\n\n        File log=File.createTempFile(\"jetty-yyyy_mm_dd\", \"log\");\n        NCSARequestLog requestLog = new NCSARequestLog(log.toString());\n        requestLog.setExtended(false);\n        requestLogHandler.setRequestLog(requestLog);\n\n        server.setStopAtShutdown(true);\n        server.setSendServerVersion(true);\n        \n        WebAppContext webapp = new WebAppContext();\n        webapp.setParentLoaderPriority(true);\n        webapp.setResourceBase(\"./src/main/webapp\");\n        webapp.setAttribute(\"testAttribute\",\"testValue\");\n        File sessiondir=File.createTempFile(\"sessions\",null);\n        if (sessiondir.exists())\n            sessiondir.delete();\n        sessiondir.mkdir();\n        sessiondir.deleteOnExit();\n        ((HashSessionManager)webapp.getSessionHandler().getSessionManager()).setStoreDirectory(sessiondir);\n        ((HashSessionManager)webapp.getSessionHandler().getSessionManager()).setSavePeriod(10);\n        \n        contexts.addHandler(webapp);\n        \n        server.start();\n        server.join();\n    }","id":58295,"modified_method":"public static void main(String[] args) throws Exception\n    {\n        Log.getLog().setDebugEnabled(false);\n        ((StdErrLog)Log.getLog()).setSource(false);\n        \n        String jetty_root = \"..\";\n\n        Server server = new Server();\n        server.setSendDateHeader(true);\n        \n        // Setup JMX\n        MBeanContainer mbContainer=new MBeanContainer(ManagementFactory.getPlatformMBeanServer());\n        server.getContainer().addEventListener(mbContainer);\n        server.addBean(mbContainer);\n        mbContainer.addBean(Log.getLog());\n        \n        // Setup Threadpool\n        QueuedThreadPool threadPool = new QueuedThreadPool();\n        threadPool.setMaxThreads(100);\n        server.setThreadPool(threadPool);\n\n        // Setup Connectors\n        SelectChannelConnector connector0 = new SelectChannelConnector();\n        connector0.setPort(8080);\n        connector0.setMaxIdleTime(30000);\n        connector0.setConfidentialPort(8443);\n        connector0.setUseDirectBuffers(true);\n        server.addConnector(connector0);\n        \n        // Setup Connectors\n        SelectChannelConnector connector1 = new SelectChannelConnector();\n        connector1.setPort(8081);\n        connector1.setMaxIdleTime(30000);\n        connector1.setConfidentialPort(8443);\n        connector1.setUseDirectBuffers(false);\n        server.addConnector(connector1);\n        \n        // Setup Connectors\n        SocketConnector connector2 = new SocketConnector();\n        connector2.setPort(8082);\n        connector2.setMaxIdleTime(30000);\n        connector2.setConfidentialPort(8443);\n        server.addConnector(connector2);\n        \n        // Setup Connectors\n        BlockingChannelConnector connector3 = new BlockingChannelConnector();\n        connector3.setPort(8083);\n        connector3.setMaxIdleTime(30000);\n        connector3.setConfidentialPort(8443);\n        server.addConnector(connector3);\n\n        SslSelectChannelConnector ssl_connector = new SslSelectChannelConnector();\n        ssl_connector.setPort(8443);\n        SslContextFactory cf = ssl_connector.getSslContextFactory();\n        cf.setKeyStore(jetty_root + \"/jetty-server/src/main/config/etc/keystore\");\n        cf.setKeyStorePassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        cf.setKeyManagerPassword(\"OBF:1u2u1wml1z7s1z7a1wnl1u2g\");\n        cf.setTrustStore(jetty_root + \"/jetty-server/src/main/config/etc/keystore\");\n        cf.setTrustStorePassword(\"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4\");\n        server.addConnector(ssl_connector);\n\n        HandlerCollection handlers = new HandlerCollection();\n        ContextHandlerCollection contexts = new ContextHandlerCollection();\n        RequestLogHandler requestLogHandler = new RequestLogHandler();\n        handlers.setHandlers(new Handler[]\n        { contexts, new DefaultHandler(), requestLogHandler });\n        \n        // Add restart handler to test the ability to save sessions and restart\n        RestartHandler restart = new RestartHandler();\n        restart.setHandler(handlers);\n        \n        server.setHandler(restart);\n\n        \n        // Setup deployers\n\n        HashLoginService login = new HashLoginService();\n        login.setName(\"Test Realm\");\n        login.setConfig(jetty_root + \"/test-jetty-webapp/src/main/config/etc/realm.properties\");\n        server.addBean(login);\n\n        File log=File.createTempFile(\"jetty-yyyy_mm_dd\", \"log\");\n        NCSARequestLog requestLog = new NCSARequestLog(log.toString());\n        requestLog.setExtended(false);\n        requestLogHandler.setRequestLog(requestLog);\n\n        server.setStopAtShutdown(true);\n        server.setSendServerVersion(true);\n        \n        WebAppContext webapp = new WebAppContext();\n        webapp.setParentLoaderPriority(true);\n        webapp.setResourceBase(\"./src/main/webapp\");\n        webapp.setAttribute(\"testAttribute\",\"testValue\");\n        File sessiondir=File.createTempFile(\"sessions\",null);\n        if (sessiondir.exists())\n            sessiondir.delete();\n        sessiondir.mkdir();\n        sessiondir.deleteOnExit();\n        ((HashSessionManager)webapp.getSessionHandler().getSessionManager()).setStoreDirectory(sessiondir);\n        ((HashSessionManager)webapp.getSessionHandler().getSessionManager()).setSavePeriod(10);\n        \n        contexts.addHandler(webapp);\n        \n        server.start();\n        server.join();\n    }","commit_id":"8f09ef1266369a309ec3e14f540c87b87aa1a720","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void testConnectionFailed() throws Exception\n    {\n        ServerSocket socket = new ServerSocket();\n        socket.bind(null);\n        int port=socket.getLocalPort();\n        socket.close();\n\n        HttpClient httpClient = new HttpClient();\n        httpClient.start();\n\n        CountDownLatch latch = new CountDownLatch(1);\n        HttpExchange exchange = new ConnectionExchange(latch);\n        exchange.setAddress(new Address(\"localhost\", port));\n        exchange.setURI(\"/\");\n        httpClient.send(exchange);\n\n        boolean passed = latch.await(4000, TimeUnit.MILLISECONDS);\n        assertTrue(passed);\n\n        long wait = 100;\n        long maxWait = 10 * wait;\n        long curWait = wait;\n        while (curWait < maxWait && !exchange.isDone())\n        {\n            Thread.sleep(wait);\n            curWait += wait;\n        }\n\n        assertEquals(HttpExchange.STATUS_EXCEPTED, exchange.getStatus());\n    }","id":58296,"modified_method":"@Test\n    public void testConnectionFailed() throws Exception\n    {\n        ServerSocket serverSocket = new ServerSocket();\n        serverSocket.bind(null);\n        int port=serverSocket.getLocalPort();\n        serverSocket.close();\n\n        HttpClient httpClient = new HttpClient();\n        httpClient.start();\n        try\n        {\n            CountDownLatch latch = new CountDownLatch(1);\n            HttpExchange exchange = new ConnectionExchange(latch);\n            exchange.setAddress(new Address(\"localhost\", port));\n            exchange.setURI(\"/\");\n            httpClient.send(exchange);\n\n            boolean passed = latch.await(4000, TimeUnit.MILLISECONDS);\n            assertTrue(passed);\n\n            long wait = 100;\n            long maxWait = 10 * wait;\n            long curWait = wait;\n            while (curWait < maxWait && !exchange.isDone())\n            {\n                Thread.sleep(wait);\n                curWait += wait;\n            }\n\n            assertEquals(HttpExchange.STATUS_EXCEPTED, exchange.getStatus());\n        }\n        finally\n        {\n            httpClient.stop();\n        }\n    }","commit_id":"222826d2f718520a986e4433a16bab9c97920100","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void testIdleConnection() throws Exception\n    {\n        ServerSocket socket = new ServerSocket();\n        socket.bind(null);\n        int port=socket.getLocalPort();\n\n        HttpClient httpClient = new HttpClient();\n        httpClient.setIdleTimeout(700);\n        httpClient.start();\n\n        HttpExchange exchange = new ConnectionExchange();\n        exchange.setAddress(new Address(\"localhost\", port));\n        exchange.setURI(\"/\");\n        HttpDestination dest = httpClient.getDestination(new Address(\"localhost\", port),false);\n\n        httpClient.send(exchange);\n        Socket s = socket.accept();\n        byte[] buf = new byte[4096];\n        s.getInputStream().read(buf);\n        assertEquals(1,dest.getConnections());\n        assertEquals(0,dest.getIdleConnections());\n\n        s.getOutputStream().write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 0\\r\\n\\r\\n\".getBytes());\n\n        Thread.sleep(300);\n        assertEquals(1,dest.getConnections());\n        assertEquals(1,dest.getIdleConnections());\n\n        exchange = new ConnectionExchange();\n        exchange.setAddress(new Address(\"localhost\", port));\n        exchange.setURI(\"/\");\n\n        httpClient.send(exchange);\n        s.getInputStream().read(buf);\n        assertEquals(1,dest.getConnections());\n        assertEquals(0,dest.getIdleConnections());\n        s.getOutputStream().write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 0\\r\\n\\r\\n\".getBytes());\n\n        Thread.sleep(500);\n\n        assertEquals(1,dest.getConnections());\n        assertEquals(1,dest.getIdleConnections());\n\n        Thread.sleep(500);\n\n        assertEquals(0,dest.getConnections());\n        assertEquals(0,dest.getIdleConnections());\n\n        socket.close();\n\n    }","id":58297,"modified_method":"@Test\n    public void testIdleConnection() throws Exception\n    {\n        ServerSocket serverSocket = new ServerSocket();\n        serverSocket.bind(null);\n        int port=serverSocket.getLocalPort();\n\n        HttpClient httpClient = new HttpClient();\n        httpClient.setIdleTimeout(700);\n        httpClient.start();\n        try\n        {\n            HttpExchange exchange = new ConnectionExchange();\n            exchange.setAddress(new Address(\"localhost\", port));\n            exchange.setURI(\"/\");\n            HttpDestination dest = httpClient.getDestination(new Address(\"localhost\", port),false);\n\n            httpClient.send(exchange);\n            Socket s = serverSocket.accept();\n            byte[] buf = new byte[4096];\n            s.getInputStream().read(buf);\n            assertEquals(1,dest.getConnections());\n            assertEquals(0,dest.getIdleConnections());\n\n            s.getOutputStream().write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 0\\r\\n\\r\\n\".getBytes());\n\n            Thread.sleep(300);\n            assertEquals(1,dest.getConnections());\n            assertEquals(1,dest.getIdleConnections());\n\n            exchange = new ConnectionExchange();\n            exchange.setAddress(new Address(\"localhost\", port));\n            exchange.setURI(\"/\");\n\n            httpClient.send(exchange);\n            s.getInputStream().read(buf);\n            assertEquals(1,dest.getConnections());\n            assertEquals(0,dest.getIdleConnections());\n            s.getOutputStream().write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 0\\r\\n\\r\\n\".getBytes());\n\n            Thread.sleep(500);\n\n            assertEquals(1,dest.getConnections());\n            assertEquals(1,dest.getIdleConnections());\n\n            Thread.sleep(500);\n\n            assertEquals(0,dest.getConnections());\n            assertEquals(0,dest.getIdleConnections());\n\n            serverSocket.close();\n        }\n        finally\n        {\n            httpClient.stop();\n        }\n    }","commit_id":"222826d2f718520a986e4433a16bab9c97920100","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void testExpire() throws IOException\n    {\n        String baseUrl = \"http://\" + host + \":\" + _port + \"/\";\n\n        int count = 200;\n        expireCount.set( 0 );\n        Log.info( \"Starting test on \" + baseUrl );\n\n        for (int i=0;i<count;i++)\n        {\n            if (i%10==0)\n                System.err.print('.');\n            expireCount.incrementAndGet();\n            final ContentExchange ex = new ContentExchange()\n            {\n                @Override\n                protected void onExpire()\n                {\n                    expireCount.decrementAndGet();\n                }\n            };\n            ex.setMethod( \"GET\" );\n            ex.setURL( baseUrl );\n\n            client.send( ex );\n            try\n            {\n                Thread.sleep( 50 );\n            }\n            catch ( InterruptedException e )\n            {\n                break;\n            }\n        }\n        // Log.info(\"Test done\");\n        // Wait to be sure that all exchanges have expired\n        try\n        {\n            Thread.sleep( 2000 );\n            int loops = 0;\n            while ( expireCount.get()>0 && loops < 10 ) // max out at 30 seconds\n            {\n                Log.info( \"waiting for test to complete: \"+expireCount.get()+\" of \"+count );\n                ++loops;\n                Thread.sleep( 2000 );\n            }\n            Thread.sleep( 2000 );\n        }\n        catch ( InterruptedException e )\n        {\n        }\n        System.err.println('!');\n\n        assertEquals( 0, expireCount.get() );\n    }","id":58298,"modified_method":"@Test\n    public void testExpire() throws Exception\n    {\n        String baseUrl = \"http://\" + \"localhost\" + \":\" + port + \"/\";\n\n        int count = 200;\n        final CountDownLatch expires = new CountDownLatch(count);\n\n        for (int i=0;i<count;i++)\n        {\n            final ContentExchange exchange = new ContentExchange()\n            {\n                @Override\n                protected void onExpire()\n                {\n                    expires.countDown();\n                }\n            };\n            exchange.setMethod(\"GET\");\n            exchange.setURL(baseUrl);\n\n            client.send(exchange);\n            Thread.sleep(50);\n        }\n\n        // Wait to be sure that all exchanges have expired\n        assertTrue(expires.await(5, TimeUnit.SECONDS));\n    }","commit_id":"222826d2f718520a986e4433a16bab9c97920100","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException\n        {\n            if (baseRequest.isHandled())\n                return;\n\n            headers = new HashMap<String, String>();\n            for (Enumeration e = request.getHeaderNames(); e.hasMoreElements();)\n            {\n                String name = (String)e.nextElement();\n                headers.put(name,request.getHeader(name));\n            }\n\n            response.setContentType(\"text/plain\");\n            response.setStatus(HttpServletResponse.SC_OK);\n            response.getWriter().print(_content);\n\n            baseRequest.setHandled(true);\n        }","id":58299,"modified_method":"public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException\n        {\n            if (baseRequest.isHandled())\n                return;\n\n            headers = new HashMap<String, String>();\n            for (Enumeration e = request.getHeaderNames(); e.hasMoreElements();)\n            {\n                String name = (String)e.nextElement();\n                headers.put(name,request.getHeader(name));\n            }\n\n            response.setContentType(\"text/plain\");\n            response.setStatus(HttpServletResponse.SC_OK);\n            response.getWriter().print(CONTENT);\n\n            baseRequest.setHandled(true);\n        }","commit_id":"222826d2f718520a986e4433a16bab9c97920100","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void testHttpHeaders() throws Exception\n    {\n        HttpClient client = new HttpClient();\n        client.setConnectorType(HttpClient.CONNECTOR_SELECT_CHANNEL);\n        client.start();\n\n        String requestUrl = \"http://localhost:\" + _port + \"/header\";\n\n        ContentExchange exchange = new ContentExchange();\n        exchange.setURL(requestUrl);\n        exchange.setMethod(HttpMethods.GET);\n        exchange.addRequestHeader(\"User-Agent\",\"Jetty-Client/7.0\");\n\n        client.send(exchange);\n        int state = exchange.waitForDone();\n\n        String content = \"\";\n        int responseStatus = exchange.getResponseStatus();\n        if (responseStatus == HttpStatus.OK_200)\n        {\n            content = exchange.getResponseContent();\n        }\n\n        assertEquals(HttpStatus.OK_200,responseStatus);\n        assertEquals(_content,content);\n        assertEquals(\"Jetty-Client/7.0\",_handler.headers.get(\"User-Agent\"));\n    }","id":58300,"modified_method":"@Test\n    public void testHttpHeaders() throws Exception\n    {\n        HttpClient httpClient = new HttpClient();\n        httpClient.setConnectorType(HttpClient.CONNECTOR_SELECT_CHANNEL);\n        httpClient.start();\n        try\n        {\n            String requestUrl = \"http://localhost:\" + _port + \"/header\";\n\n            ContentExchange exchange = new ContentExchange();\n            exchange.setURL(requestUrl);\n            exchange.setMethod(HttpMethods.GET);\n            exchange.addRequestHeader(\"User-Agent\",\"Jetty-Client/7.0\");\n\n            httpClient.send(exchange);\n\n            int state = exchange.waitForDone();\n            assertEquals(HttpExchange.STATUS_COMPLETED, state);\n            int responseStatus = exchange.getResponseStatus();\n            assertEquals(HttpStatus.OK_200,responseStatus);\n\n            String content = exchange.getResponseContent();\n\n            assertEquals(HttpHeadersTest.CONTENT,content);\n            assertEquals(\"Jetty-Client/7.0\",_handler.headers.get(\"User-Agent\"));\n        }\n        finally\n        {\n            httpClient.stop();\n        }\n    }","commit_id":"222826d2f718520a986e4433a16bab9c97920100","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * Sets the response status and content type header and starts the the\n     * response HTML text with the header, and an introductory phrase.\n     */\n    private PrintWriter sendIntro(HttpServletResponse response, int statusCode,\n            String statusMessageIn, String requestUri, String servletName)\n            throws IOException {\n\n        final String statusMessage = ResponseUtil.escapeXml(statusMessageIn);\n\n        // set the status code and content type in the response\n        final PrintWriter pw = response.getWriter();\n        if(!response.isCommitted()) {\n            response.setStatus(statusCode);\n            response.setContentType(\"text/html; charset=UTF-8\");\n\n            pw.println(\"<!DOCTYPE HTML PUBLIC \\\"-//IETF//DTD HTML 2.0//EN\\\">\");\n            pw.println(\"<html>\");\n            pw.println(\"<head>\");\n            pw.println(\"<title>\" + statusCode + \" \" + statusMessage + \"<\/title>\");\n            pw.println(\"<\/head>\");\n            pw.println(\"<body>\");\n        } else {\n            // Response already committed: don't change status or write HTML prolog, but report\n            // the error inline and warn about that\n            log.warn(\"Response already committed, unable to change status, output might not be well formed\");\n        }\n        pw.println(\"<h1>\" + statusMessage + \" (\" + statusCode + \")<\/h1>\");\n        pw.print(\"<p>The requested URL \" + ResponseUtil.escapeXml(requestUri)\n            + \" resulted in an error\");\n\n        if (servletName != null) {\n            pw.print(\" in \" + servletName);\n        }\n\n        pw.println(\".<\/p>\");\n\n        return pw;\n    }","id":58301,"modified_method":"/**\n     * Sets the response status and content type header and starts the the\n     * response HTML text with the header, and an introductory phrase.\n     */\n    private PrintWriter sendIntro(HttpServletResponse response, int statusCode,\n            String statusMessageIn, String requestUri, String servletName)\n            throws IOException {\n\n        final String statusMessage = ResponseUtil.escapeXml(statusMessageIn);\n\n        // set the status code and content type in the response\n        final PrintWriter pw;\n        if(!response.isCommitted()) {\n\n            response.reset();\n            response.setStatus(statusCode);\n            response.setContentType(\"text/html\");\n            response.setCharacterEncoding(\"UTF-8\");\n\n            pw = response.getWriter();\n            pw.println(\"<!DOCTYPE HTML PUBLIC \\\"-//IETF//DTD HTML 2.0//EN\\\">\");\n            pw.println(\"<html>\");\n            pw.println(\"<head>\");\n            pw.println(\"<title>\" + statusCode + \" \" + statusMessage + \"<\/title>\");\n            pw.println(\"<\/head>\");\n            pw.println(\"<body>\");\n\n        } else {\n\n            // Response already committed: don't change status or write HTML prolog, but report\n            // the error inline and warn about that\n            log.warn(\"Response already committed, unable to change status, output might not be well formed\");\n            pw = response.getWriter();\n\n        }\n\n        pw.println(\"<h1>\" + statusMessage + \" (\" + statusCode + \")<\/h1>\");\n        pw.print(\"<p>The requested URL \" + ResponseUtil.escapeXml(requestUri)\n            + \" resulted in an error\");\n\n        if (servletName != null) {\n            pw.print(\" in \" + servletName);\n        }\n\n        pw.println(\".<\/p>\");\n\n        return pw;\n    }","commit_id":"9b56fb509d29b14d51470d0489cd7c11c41dca8a","url":"https://github.com/apache/sling"},{"original_method":"/** Process a portlet request.\n\t * @return false if the page is not found.\n\t * @since 3.0.0\n\t */\n\tprotected boolean process(Session sess, RenderRequest request,\n\tRenderResponse response, String path, boolean bRichlet)\n\tthrows PortletException, IOException {\n\t\tif (D.ON && log.debugable()) log.debug(\"Creates from \"+path);\n\t\tfinal WebManager webman = getWebManager();\n\t\tfinal WebApp wapp = webman.getWebApp();\n\t\tfinal WebAppCtrl wappc = (WebAppCtrl)wapp;\n\n\t\tfinal HttpServletRequest httpreq = RenderHttpServletRequest.getInstance(request);\n\t\tfinal HttpServletResponse httpres = RenderHttpServletResponse.getInstance(response);\n\t\tfinal ServletContext svlctx = (ServletContext)wapp.getNativeContext();\n\n\t\tfinal DesktopRecycle dtrc = wapp.getConfiguration().getDesktopRecycle();\n\t\tDesktop desktop = dtrc != null ? Utils.beforeService(dtrc, svlctx, sess, httpreq, httpres, path): null;\n\n\t\tif (desktop != null) { //recycle\n\t\t\tfinal Page page = Utils.getMainPage(desktop);\n\t\t\tif (page != null) {\n\t\t\t\tfinal Execution exec = new ExecutionImpl(svlctx, httpreq, httpres, desktop, page);\n\t\t\t\tfixContentType(response);\n\t\t\t\twappc.getUiEngine().recycleDesktop(exec, page, response.getWriter());\n\t\t\t} else\n\t\t\t\tdesktop = null; //something wrong (not possible; just in case)\n\t\t}\n\n\t\tif (desktop == null) {\n\t\t\tdesktop = webman.getDesktop(sess, httpreq, httpres, path, true);\n\t\t\tif (desktop == null) //forward or redirect\n\t\t\t\treturn true;\n\n\t\t\tfinal RequestInfo ri = new RequestInfoImpl(\n\t\t\t\twapp, sess, desktop, httpreq, PageDefinitions.getLocator(wapp, path));\n\t\t\t((SessionCtrl)sess).notifyClientRequest(true);\n\n\t\t\tfinal UiFactory uf = wappc.getUiFactory();\n\t\t\tif (uf.isRichlet(ri, bRichlet)) {\n\t\t\t\tfinal Richlet richlet = uf.getRichlet(ri, path);\n\t\t\t\tif (richlet == null)\n\t\t\t\t\treturn false; //not found\n\n\t\t\t\tfinal Page page = WebManager.newPage(uf, ri, richlet, httpres, path);\n\t\t\t\tfinal Execution exec =\n\t\t\t\t\tnew ExecutionImpl(svlctx, httpreq, httpres, desktop, page);\n\t\t\t\tfixContentType(response);\n\t\t\t\twappc.getUiEngine().execNewPage(exec, richlet, page, response.getWriter());\n\t\t\t} else if (path != null) {\n\t\t\t\tfinal PageDefinition pagedef = uf.getPageDefinition(ri, path);\n\t\t\t\tif (pagedef == null)\n\t\t\t\t\treturn false; //not found\n\n\t\t\t\tfinal Page page = WebManager.newPage(uf, ri, pagedef, httpres, path);\n\t\t\t\tfinal Execution exec =\n\t\t\t\t\tnew ExecutionImpl(svlctx, httpreq, httpres, desktop, page);\n\t\t\t\tfixContentType(response);\n\t\t\t\twappc.getUiEngine()\n\t\t\t\t\t.execNewPage(exec, pagedef, page, response.getWriter());\n\t\t\t}\n\t\t}\n\n\t\tif (dtrc != null) Utils.afterService(dtrc, desktop);\n\t\treturn true; //success\n\t}","id":58302,"modified_method":"/** Process a portlet request.\n\t * @return false if the page is not found.\n\t * @since 3.0.0\n\t */\n\tprotected boolean process(Session sess, RenderRequest request,\n\tRenderResponse response, String path, boolean bRichlet)\n\tthrows PortletException, IOException {\n\t\tif (D.ON && log.debugable()) log.debug(\"Creates from \"+path);\n\t\tfinal WebManager webman = getWebManager();\n\t\tfinal WebApp wapp = webman.getWebApp();\n\t\tfinal WebAppCtrl wappc = (WebAppCtrl)wapp;\n\n\t\tfinal HttpServletRequest httpreq = RenderHttpServletRequest.getInstance(request);\n\t\tfinal HttpServletResponse httpres = RenderHttpServletResponse.getInstance(response);\n\t\tfinal ServletContext svlctx = (ServletContext)wapp.getNativeContext();\n\n\t\tfinal DesktopRecycle dtrc = wapp.getConfiguration().getDesktopRecycle();\n\t\tDesktop desktop = dtrc != null ? Utils.beforeService(dtrc, svlctx, sess, httpreq, httpres, path): null;\n\n\t\ttry {\n\t\t\tif (desktop != null) { //recycle\n\t\t\t\tfinal Page page = Utils.getMainPage(desktop);\n\t\t\t\tif (page != null) {\n\t\t\t\t\tfinal Execution exec =\n\t\t\t\t\t\tnew ExecutionImpl(svlctx, httpreq, httpres, desktop, page);\n\t\t\t\t\tfixContentType(response);\n\t\t\t\t\twappc.getUiEngine()\n\t\t\t\t\t\t.recycleDesktop(exec, page, response.getWriter());\n\t\t\t\t} else\n\t\t\t\t\tdesktop = null; //something wrong (not possible; just in case)\n\t\t\t}\n\n\t\t\tif (desktop == null) {\n\t\t\t\tdesktop = webman.getDesktop(sess, httpreq, httpres, path, true);\n\t\t\t\tif (desktop == null) //forward or redirect\n\t\t\t\t\treturn true;\n\n\t\t\t\tfinal RequestInfo ri = new RequestInfoImpl(\n\t\t\t\t\twapp, sess, desktop, httpreq,\n\t\t\t\t\tPageDefinitions.getLocator(wapp, path));\n\t\t\t\t((SessionCtrl)sess).notifyClientRequest(true);\n\n\t\t\t\tfinal Page page;\n\t\t\t\tfinal StringWriter sw =\n\t\t\t\t\tshallJQueryPatch(httpreq) ? new StringWriter(): null;\n\t\t\t\tfinal UiFactory uf = wappc.getUiFactory();\n\t\t\t\tif (uf.isRichlet(ri, bRichlet)) {\n\t\t\t\t\tfinal Richlet richlet = uf.getRichlet(ri, path);\n\t\t\t\t\tif (richlet == null)\n\t\t\t\t\t\treturn false; //not found\n\n\t\t\t\t\tpage = WebManager.newPage(uf, ri, richlet, httpres, path);\n\t\t\t\t\tfinal Execution exec =\n\t\t\t\t\t\tnew ExecutionImpl(svlctx, httpreq, httpres, desktop, page);\n\t\t\t\t\tfixContentType(response);\n\t\t\t\t\twappc.getUiEngine().execNewPage(exec, richlet, page,\n\t\t\t\t\t\tsw != null ? (Writer)sw: response.getWriter());\n\t\t\t\t} else if (path != null) {\n\t\t\t\t\tfinal PageDefinition pagedef = uf.getPageDefinition(ri, path);\n\t\t\t\t\tif (pagedef == null)\n\t\t\t\t\t\treturn false; //not found\n\n\t\t\t\t\tpage = WebManager.newPage(uf, ri, pagedef, httpres, path);\n\t\t\t\t\tfinal Execution exec =\n\t\t\t\t\t\tnew ExecutionImpl(svlctx, httpreq, httpres, desktop, page);\n\t\t\t\t\tfixContentType(response);\n\t\t\t\t\twappc.getUiEngine().execNewPage(exec, pagedef, page,\n\t\t\t\t\t\tsw != null ? (Writer)sw: response.getWriter());\n\t\t\t\t} else\n\t\t\t\t\treturn true; //nothing to do\n\n\t\t\t\t//Liferay failed to load zk.wpd with IE, so we delay it\n\t\t\t\tif (sw != null) {\n\t\t\t\t\tWriter out = response.getWriter();\n\t\t\t\t\tout.write(\"<div id=\\\"\");\n\t\t\t\t\tout.write(page.getUuid());\n\t\t\t\t\tout.write(\"\\\"><\/div><script>setTimeout(function(){\\njQuery('#\");\n\t\t\t\t\tout.write(page.getUuid());\n\t\t\t\t\tout.write(\"').replaceWith('\");\n\t\t\t\t\tout.write(Strings.escape(sw.toString(), Strings.ESCAPE_JAVASCRIPT));\n\t\t\t\t\tout.write(\"');},\");\n\t\t\t\t\tout.write(_jqpatchDelay);\n\t\t\t\t\tout.write(\");<\/script>\");\n\t\t\t\t}\n\t\t\t}\n\t\t} finally {\n\t\t\tif (dtrc != null) Utils.afterService(dtrc, desktop);\n\t\t}\n\t\treturn true; //success\n\t}","commit_id":"0e5192f79a0407494fdb74b12686a9eb5ace1afa","url":"https://github.com/zkoss/zk"},{"original_method":"@Override\n\tpublic void include(\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tString key)\n\t\tthrows IOException {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong themeLastModified = PortalWebResourcesUtil.getLastModified(\n\t\t\tPortalWebResourceConstants.RESOURCE_TYPE_THEME_CONTRIBUTOR);\n\n\t\tPrintWriter printWriter = response.getWriter();\n\n\t\tPortalResourceUrlRenderedFactory.PortalResourceUrlRenderer\n\t\t\tportalResourceUrlRenderer = PortalResourceUrlRenderedFactory.create(\n\t\t\t\tthemeDisplay.isThemeCssFastLoad(), \"css\", themeLastModified);\n\n\t\tportalResourceUrlRenderer.render(\n\t\t\trequest, printWriter, _cssResourceUrls,\n\t\t\tnew PortalResourceUrlRenderedFactory.LinkRenderer() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic void render(PrintWriter printWriter, String href) {\n\t\t\t\t\tprintWriter.println(\n\t\t\t\t\t\t\"<link href=\\\"\" + href + \"\\\" rel=\\\"stylesheet\\\" \" +\n\t\t\t\t\t\t\t\"type = \\\"text/css\\\" />\");\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tportalResourceUrlRenderer = PortalResourceUrlRenderedFactory.create(\n\t\t\tthemeDisplay.isThemeJsFastLoad(), \"js\", themeLastModified);\n\n\t\tportalResourceUrlRenderer.render(\n\t\t\trequest, printWriter, _jsResourceUrls,\n\t\t\tnew PortalResourceUrlRenderedFactory.LinkRenderer() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic void render(PrintWriter printWriter, String href) {\n\t\t\t\t\tprintWriter.println(\n\t\t\t\t\t\t\"<script src=\\\"\" + href + \"\\\" \" +\n\t\t\t\t\t\t\t\"\\\" type = \\\"text/javascript\\\"><\/script>\");\n\t\t\t\t}\n\n\t\t\t});\n\t}","id":58303,"modified_method":"@Override\n\tpublic void include(\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tString key)\n\t\tthrows IOException {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tlong themeLastModified = PortalWebResourcesUtil.getLastModified(\n\t\t\tPortalWebResourceConstants.RESOURCE_TYPE_THEME_CONTRIBUTOR);\n\n\t\tPortalResourceUrlRenderedFactory.PortalResourceUrlRenderer\n\t\t\tportalResourceUrlRenderer = PortalResourceUrlRenderedFactory.create(\n\t\t\t\tthemeDisplay.isThemeCssFastLoad(), \"css\",\n\t\t\t\tthemeLastModified);\n\n\t\tportalResourceUrlRenderer.render(\n\t\t\trequest, response.getWriter(), _cssResourceUrls,\n\t\t\tnew PortalResourceUrlRenderedFactory.LinkRenderer() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic void render(PrintWriter printWriter, String href) {\n\t\t\t\t\tprintWriter.println(\n\t\t\t\t\t\t\"<link href=\\\"\" + href + \"\\\" rel=\\\"stylesheet\\\" \" +\n\t\t\t\t\t\t\t\"type = \\\"text/css\\\" />\");\n\t\t\t\t}\n\n\t\t\t});\n\n\t\tportalResourceUrlRenderer = PortalResourceUrlRenderedFactory.create(\n\t\t\tthemeDisplay.isThemeJsFastLoad(), \"js\", themeLastModified);\n\n\t\tportalResourceUrlRenderer.render(\n\t\t\trequest, response.getWriter(), _jsResourceUrls,\n\t\t\tnew PortalResourceUrlRenderedFactory.LinkRenderer() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic void render(PrintWriter printWriter, String href) {\n\t\t\t\t\tprintWriter.println(\n\t\t\t\t\t\t\"<script src=\\\"\" + href + \"\\\" \" +\n\t\t\t\t\t\t\t\"\\\" type = \\\"text/javascript\\\"><\/script>\");\n\t\t\t\t}\n\n\t\t\t});\n\t}","commit_id":"65a5aaf70640cdbe005e660e062dc8331ca912f5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private BundleWebResourcesImpl _scanForResources(Bundle bundle) {\n\t\tfinal List<String> cssResourcePaths = new ArrayList<>();\n\t\tfinal List<String> jsResourcePaths = new ArrayList<>();\n\n\t\tEnumeration<URL> cssEntries = bundle.findEntries(\n\t\t\t\"/META-INF/resources\", \"*.css\", true);\n\t\tEnumeration<URL> jsEntries = bundle.findEntries(\n\t\t\t\"/META-INF/resources\", \"*.js\", true);\n\n\t\tif (cssEntries != null) {\n\t\t\twhile (cssEntries.hasMoreElements()) {\n\t\t\t\tURL entry = cssEntries.nextElement();\n\n\t\t\t\tString path = entry.getFile();\n\n\t\t\t\tpath = path.replace(\"/META-INF/resources\", \"\");\n\n\t\t\t\tint lastIndexOfSlash = path.lastIndexOf('/');\n\n\t\t\t\tif (!StringPool.UNDERLINE.equals(\n\t\t\t\t\t\tpath.charAt(lastIndexOfSlash + 1)) &&\n\t\t\t\t\t!path.endsWith(\"_rtl.css\")) {\n\n\t\t\t\t\tcssResourcePaths.add(path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (jsEntries != null) {\n\t\t\twhile (jsEntries.hasMoreElements()) {\n\t\t\t\tURL entry = jsEntries.nextElement();\n\n\t\t\t\tString path = entry.getFile();\n\n\t\t\t\tjsResourcePaths.add(path.replace(\"/META-INF/resources\", \"\"));\n\t\t\t}\n\t\t}\n\n\t\tif (cssResourcePaths.isEmpty() && jsResourcePaths.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\telse {\n\t\t\treturn new BundleWebResourcesImpl(\n\t\t\t\tcssResourcePaths, jsResourcePaths);\n\t\t}\n\t}","id":58304,"modified_method":"private BundleWebResourcesImpl _scanForResources(Bundle bundle) {\n\t\tfinal List<String> cssResourcePaths = new ArrayList<>();\n\t\tfinal List<String> jsResourcePaths = new ArrayList<>();\n\n\t\tEnumeration<URL> cssEntries = bundle.findEntries(\n\t\t\t\"/META-INF/resources\", \"*.css\", true);\n\t\tEnumeration<URL> jsEntries = bundle.findEntries(\n\t\t\t\"/META-INF/resources\", \"*.js\", true);\n\n\t\tif (cssEntries != null) {\n\t\t\twhile (cssEntries.hasMoreElements()) {\n\t\t\t\tURL url = cssEntries.nextElement();\n\n\t\t\t\tString path = url.getFile();\n\n\t\t\t\tpath = path.replace(\"/META-INF/resources\", \"\");\n\n\t\t\t\tint index = path.lastIndexOf('/');\n\n\t\t\t\tif (!StringPool.UNDERLINE.equals(path.charAt(index + 1)) &&\n\t\t\t\t\t!path.endsWith(\"_rtl.css\")) {\n\n\t\t\t\t\tcssResourcePaths.add(path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (jsEntries != null) {\n\t\t\twhile (jsEntries.hasMoreElements()) {\n\t\t\t\tURL url = jsEntries.nextElement();\n\n\t\t\t\tString path = url.getFile();\n\n\t\t\t\tjsResourcePaths.add(path.replace(\"/META-INF/resources\", \"\"));\n\t\t\t}\n\t\t}\n\n\t\tif (cssResourcePaths.isEmpty() && jsResourcePaths.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\telse {\n\t\t\treturn new BundleWebResourcesImpl(\n\t\t\t\tcssResourcePaths, jsResourcePaths);\n\t\t}\n\t}","commit_id":"65a5aaf70640cdbe005e660e062dc8331ca912f5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void start() throws Exception {\n\t\tfinal BundleContext bundleContext = _bundle.getBundleContext();\n\n\t\tFilter filter = bundleContext.createFilter(\n\t\t\t\"(&(objectClass=\" + ServletContext.class.getName() +\n\t\t\t\")(osgi.web.symbolicname=\" + _bundle.getSymbolicName() + \"))\");\n\n\t\t_serviceTracker = new ServiceTracker<>(\n\t\t\tbundleContext, filter,\n\t\t\tnew ServiceTrackerCustomizer\n\t\t\t\t<ServletContext, Collection<ServiceRegistration<?>>>() {\n\n\t\t\t@Override\n\t\t\tpublic Collection<ServiceRegistration<?>> addingService(\n\t\t\t\tServiceReference<ServletContext> reference) {\n\n\t\t\t\tServletContext servletContext = bundleContext.getService(\n\t\t\t\t\treference);\n\n\t\t\t\tCollection<ServiceRegistration<?>> serviceRegistrations =\n\t\t\t\t\tnew ArrayList<>();\n\n\t\t\t\tserviceRegistrations.add(\n\t\t\t\t\tbundleContext.registerService(\n\t\t\t\t\t\tPortalWebResources.class.getName(),\n\t\t\t\t\t\tnew ThemeContributorPortalWebResources(servletContext),\n\t\t\t\t\tnull));\n\n\t\t\t\tString contextPath = servletContext.getContextPath();\n\n\t\t\t\t_bundleWebResources.setServletContextPath(contextPath);\n\n\t\t\t\tserviceRegistrations.add(\n\t\t\t\t\tbundleContext.registerService(\n\t\t\t\t\t\tBundleWebResources.class, _bundleWebResources, null));\n\n\t\t\t\treturn serviceRegistrations;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void modifiedService(\n\t\t\t\tServiceReference<ServletContext> reference,\n\t\t\t\tCollection<ServiceRegistration<?>> service) {\n\n\t\t\t\tremovedService(reference, service);\n\n\t\t\t\taddingService(reference);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void removedService(\n\t\t\t\tServiceReference<ServletContext> reference,\n\t\t\t\tCollection<ServiceRegistration<?>> serviceRegistrations) {\n\n\t\t\t\tfor (ServiceRegistration<?> serviceRegistration :\n\t\t\t\t\t\tserviceRegistrations) {\n\n\t\t\t\t\tserviceRegistration.unregister();\n\t\t\t\t}\n\n\t\t\t\tbundleContext.ungetService(reference);\n\t\t\t}\n\n\t\t});\n\n\t\t_serviceTracker.open();\n\t}","id":58305,"modified_method":"@Override\n\tpublic void start() throws Exception {\n\t\tfinal BundleContext bundleContext = _bundle.getBundleContext();\n\n\t\tFilter filter = bundleContext.createFilter(\n\t\t\t\"(&(objectClass=\" + ServletContext.class.getName() +\n\t\t\t\t\")(osgi.web.symbolicname=\" + _bundle.getSymbolicName() + \"))\");\n\n\t\t_serviceTracker = new ServiceTracker<>(\n\t\t\tbundleContext, filter,\n\t\t\tnew ServiceTrackerCustomizer\n\t\t\t\t<ServletContext, Collection<ServiceRegistration<?>>>() {\n\n\t\t\t@Override\n\t\t\tpublic Collection<ServiceRegistration<?>> addingService(\n\t\t\t\tServiceReference<ServletContext> serviceReference) {\n\n\t\t\t\tCollection<ServiceRegistration<?>> serviceRegistrations =\n\t\t\t\t\tnew ArrayList<>();\n\n\t\t\t\tServletContext servletContext = bundleContext.getService(\n\t\t\t\t\tserviceReference);\n\n\t\t\t\tserviceRegistrations.add(\n\t\t\t\t\tbundleContext.registerService(\n\t\t\t\t\t\tPortalWebResources.class.getName(),\n\t\t\t\t\t\tnew ThemeContributorPortalWebResources(servletContext),\n\t\t\t\t\tnull));\n\n\t\t\t\tString contextPath = servletContext.getContextPath();\n\n\t\t\t\t_bundleWebResources.setServletContextPath(contextPath);\n\n\t\t\t\tserviceRegistrations.add(\n\t\t\t\t\tbundleContext.registerService(\n\t\t\t\t\t\tBundleWebResources.class, _bundleWebResources, null));\n\n\t\t\t\treturn serviceRegistrations;\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void modifiedService(\n\t\t\t\tServiceReference<ServletContext> serviceReference,\n\t\t\t\tCollection<ServiceRegistration<?>> service) {\n\n\t\t\t\tremovedService(serviceReference, service);\n\n\t\t\t\taddingService(serviceReference);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void removedService(\n\t\t\t\tServiceReference<ServletContext> serviceReference,\n\t\t\t\tCollection<ServiceRegistration<?>> serviceRegistrations) {\n\n\t\t\t\tfor (ServiceRegistration<?> serviceRegistration :\n\t\t\t\t\t\tserviceRegistrations) {\n\n\t\t\t\t\tserviceRegistration.unregister();\n\t\t\t\t}\n\n\t\t\t\tbundleContext.ungetService(serviceReference);\n\t\t\t}\n\n\t\t});\n\n\t\t_serviceTracker.open();\n\t}","commit_id":"65a5aaf70640cdbe005e660e062dc8331ca912f5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    protected void doGet(SlingHttpServletRequest request, SlingHttpServletResponse response) \n    throws ServletException,IOException {\n        final PrintWriter pw = response.getWriter();\n        response.setContentType(\"text/plain\");\n        response.setCharacterEncoding(\"UTF-8\");\n        \n        for(String key : repository.getDescriptorKeys()) {\n            final String v = repository.getDescriptor(key);\n            pw.print(key);\n            pw.print(\"=\");\n            pw.println(v);\n        }\n        pw.flush();\n    }","id":58306,"modified_method":"@Override\n    protected void doGet(SlingHttpServletRequest request, SlingHttpServletResponse response) \n    throws ServletException,IOException {\n        response.setContentType(\"application/json\");\n        response.setCharacterEncoding(\"UTF-8\");\n        try {\n            final JSONWriter w = new JSONWriter(response.getWriter());\n            w.setTidy(Arrays.asList(request.getRequestPathInfo().getSelectors()).contains(\"tidy\"));\n            w.object();\n            w.key(\"descriptors\");\n            w.object();\n            for(String key : repository.getDescriptorKeys()) {\n                w.key(key).value(repository.getDescriptor(key));\n            }\n            w.endObject();\n            w.endObject();\n        } catch(JSONException je) {\n            throw (IOException)new IOException(\"JSONException in doGet\").initCause(je);\n        }\n        response.getWriter().flush();\n    }","commit_id":"e9b9464a537e4475931eb6fa4d560f70e9adbea9","url":"https://github.com/apache/sling"},{"original_method":"public void testName() throws IOException {\n        final String path = \"/testing/RepositoryDescriptors.txt\";\n        final String runMode = System.getProperty(RUN_MODE_PROP, DEFAULT_RUN_MODE);\n        final String content = getContent(HTTP_BASE_URL + path, CONTENT_TYPE_PLAIN).toLowerCase();\n        final Pattern expectedPattern = Pattern.compile(\"(?s).*jcr.repository.name=[^$]*\" + runMode + \".*\");\n        assertTrue(\n                \"Expecting lowercased content at \" + path + \" to match \" + expectedPattern + \", content=\" + content, \n                expectedPattern.matcher(content).matches());\n    }","id":58307,"modified_method":"public void testName() throws Exception {\n        final String runMode = System.getProperty(RUN_MODE_PROP, DEFAULT_RUN_MODE);\n        final String name = RUNMODE_TO_NAME.get(runMode);\n        assertNotNull(\"Expecting to have a repository name for run mode \" + runMode, name);\n        \n        final String path = \"/testing/RepositoryDescriptors.json\";\n        final JSONObject json = new JSONObject(getContent(HTTP_BASE_URL + path, CONTENT_TYPE_JSON));\n        final String key = \"jcr.repository.name\";\n        assertEquals(\"Expecting \" + key + \"=\" + name, name, json.getJSONObject(\"descriptors\").getString(key));\n    }","commit_id":"e9b9464a537e4475931eb6fa4d560f70e9adbea9","url":"https://github.com/apache/sling"},{"original_method":"protected final JCExpression transformArg(int argIndex) {\n        final Tree.Term expr = getArgumentExpression(argIndex);\n        if (hasParameter(argIndex)) {\n            ProducedType type = getParameterType(argIndex);\n            return gen.expressionGen().transformExpression(expr, \n                    getParameterBoxingStrategy(argIndex), \n                    type);\n        } else {\n            // Overloaded methods don't have a reference to a parameter\n            // so we have to treat them differently. Also knowing it's\n            // overloaded we know we're dealing with Java code so we unbox\n            ProducedType type = expr.getTypeModel();\n            return gen.expressionGen().transformExpression(expr, \n                    BoxingStrategy.UNBOXED, \n                    type);\n        }\n    }","id":58308,"modified_method":"protected final JCExpression transformArg(int argIndex) {\n        final Tree.Term expr = getArgumentExpression(argIndex);\n        if (hasParameter(argIndex)) {\n            ProducedType type = getParameterType(argIndex);\n            BoxingStrategy boxingStrategy = getParameterBoxingStrategy(argIndex);\n            JCExpression ret = gen.expressionGen().transformExpression(expr, \n                    boxingStrategy, \n                    type);\n            if(isParameterSequenced(argIndex)\n                    && isJavaMethod()\n                    && dontBoxSequence()){\n                // must translate it into a Util call\n                ret = gen.sequenceToJavaArray(ret, type, boxingStrategy);\n            }\n            return ret;\n        } else {\n            // Overloaded methods don't have a reference to a parameter\n            // so we have to treat them differently. Also knowing it's\n            // overloaded we know we're dealing with Java code so we unbox\n            ProducedType type = expr.getTypeModel();\n            return gen.expressionGen().transformExpression(expr, \n                    BoxingStrategy.UNBOXED, \n                    type);\n        }\n    }","commit_id":"ac2ad4cc1c38f2d5e5ce92e2b63368de5b1c9098","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"private JCExpression transformOverridableUnaryOperator(Tree.UnaryOperatorExpression op, ProducedType expectedType) {\n        at(op);\n        Tree.Term term = op.getTerm();\n\n        OperatorTranslation operator = Operators.getOperator(op.getClass());\n        if (operator == null) {\n            return make().Erroneous();\n        }\n\n        if(operator.getOptimisationStrategy(op, this).useJavaOperator()){\n            // optimisation for unboxed types\n            return make().Unary(operator.javacOperator, transformExpression(term, BoxingStrategy.UNBOXED, expectedType));\n        }\n        \n        return make().Apply(null, makeSelect(transformExpression(term, BoxingStrategy.BOXED, expectedType), \n                Util.getGetterName(operator.ceylonMethod)), List.<JCExpression> nil());\n    }","id":58309,"modified_method":"private JCExpression transformOverridableUnaryOperator(Tree.UnaryOperatorExpression op, ProducedType expectedType) {\n        at(op);\n        Tree.Term term = op.getTerm();\n\n        OperatorTranslation operator = Operators.getOperator(op.getClass());\n        if (operator == null) {\n            return make().Erroneous();\n        }\n\n        if(operator.getOptimisationStrategy(op, this).useJavaOperator()){\n            // optimisation for unboxed types\n            JCExpression expr = transformExpression(term, BoxingStrategy.UNBOXED, expectedType);\n            // unary + is essentially a NOOP\n            if(operator == OperatorTranslation.UNARY_POSITIVE)\n                return expr;\n            return make().Unary(operator.javacOperator, expr);\n        }\n        \n        return make().Apply(null, makeSelect(transformExpression(term, BoxingStrategy.BOXED, expectedType), \n                Util.getGetterName(operator.ceylonMethod)), List.<JCExpression> nil());\n    }","commit_id":"d8e8ae67cf101d2e052226fab5513b87d653c2e0","url":"https://github.com/ceylon/ceylon-compiler"},{"original_method":"protected Expression transformPropertyExpression(PropertyExpression pe) {\n        boolean itlp = isTopLevelProperty;\n        boolean ipe = inPropertyExpression;\n\n        Expression objectExpression = pe.getObjectExpression();\n        inPropertyExpression = true;\n        isTopLevelProperty = !(objectExpression.getClass() == PropertyExpression.class);\n        objectExpression = transform(objectExpression);\n        // we handle the property part as if it where not part of the property\n        inPropertyExpression = false;\n        Expression property = transform(pe.getProperty());\n        isTopLevelProperty = itlp;\n        inPropertyExpression = ipe;\n\n        boolean spreadSafe = pe.isSpreadSafe();\n        pe = new PropertyExpression(objectExpression, property, pe.isSafe());\n        pe.setSpreadSafe(spreadSafe);\n\n        String className = lookupClassName(pe);\n        if (className != null) {\n            ClassNode type = ClassHelper.make(className);\n            if (resolve(type)) return new ClassExpression(type);\n        }\n        if (objectExpression instanceof ClassExpression && pe.getPropertyAsString() != null) {\n            // possibly an inner class\n            ClassExpression ce = (ClassExpression) objectExpression;\n            ClassNode type = ClassHelper.make(ce.getType().getName() + \"$\" + pe.getPropertyAsString());\n            if (resolve(type, false, false, false)) return new ClassExpression(type);\n        }\n        Expression ret = pe;\n        if (isTopLevelProperty) ret = correctClassClassChain(pe);\n        return ret;\n    }","id":58310,"modified_method":"protected Expression transformPropertyExpression(PropertyExpression pe) {\n        boolean itlp = isTopLevelProperty;\n        boolean ipe = inPropertyExpression;\n\n        Expression objectExpression = pe.getObjectExpression();\n        inPropertyExpression = true;\n        isTopLevelProperty = !(objectExpression.getClass() == PropertyExpression.class);\n        objectExpression = transform(objectExpression);\n        // we handle the property part as if it where not part of the property\n        inPropertyExpression = false;\n        Expression property = transform(pe.getProperty());\n        isTopLevelProperty = itlp;\n        inPropertyExpression = ipe;\n\n        boolean spreadSafe = pe.isSpreadSafe();\n        PropertyExpression old = pe;\n        pe = new PropertyExpression(objectExpression, property, pe.isSafe());\n        pe.setSpreadSafe(spreadSafe);\n        pe.setSourcePosition(old);\n\n        String className = lookupClassName(pe);\n        if (className != null) {\n            ClassNode type = ClassHelper.make(className);\n            if (resolve(type)) {\n                Expression ret =  new ClassExpression(type);\n                ret.setSourcePosition(pe);\n                return ret;\n            }\n        }\n        if (objectExpression instanceof ClassExpression && pe.getPropertyAsString() != null) {\n            // possibly an inner class\n            ClassExpression ce = (ClassExpression) objectExpression;\n            ClassNode type = ClassHelper.make(ce.getType().getName() + \"$\" + pe.getPropertyAsString());\n            if (resolve(type, false, false, false)) {\n                Expression ret = new ClassExpression(type);\n                ret.setSourcePosition(ce);\n                return ret;\n            }\n        }\n        Expression ret = pe;\n        if (isTopLevelProperty) ret = correctClassClassChain(pe);\n        return ret;\n    }","commit_id":"977a0998a08d40a6baed4d6dea90b6e19f93d9f4","url":"https://github.com/apache/groovy"},{"original_method":"public Expression transform(Expression exp) {\n        if (exp == null) return null;\n        if (exp instanceof VariableExpression) {\n            return transformVariableExpression((VariableExpression) exp);\n        } else if (exp.getClass() == PropertyExpression.class) {\n            return transformPropertyExpression((PropertyExpression) exp);\n        } else if (exp instanceof DeclarationExpression) {\n            return transformDeclarationExpression((DeclarationExpression) exp);\n        } else if (exp instanceof BinaryExpression) {\n            return transformBinaryExpression((BinaryExpression) exp);\n        } else if (exp instanceof MethodCallExpression) {\n            return transformMethodCallExpression((MethodCallExpression) exp);\n        } else if (exp instanceof ClosureExpression) {\n            return transformClosureExpression((ClosureExpression) exp);\n        } else if (exp instanceof ConstructorCallExpression) {\n            return transformConstructorCallExpression((ConstructorCallExpression) exp);\n        } else if (exp instanceof AnnotationConstantExpression) {\n            return transformAnnotationConstantExpression((AnnotationConstantExpression) exp);\n        } else {\n            resolveOrFail(exp.getType(), exp);\n            return exp.transformExpression(this);\n        }\n    }","id":58311,"modified_method":"public Expression transform(Expression exp) {\n        if (exp == null) return null;\n        Expression ret = null;\n        if (exp instanceof VariableExpression) {\n            ret = transformVariableExpression((VariableExpression) exp);\n        } else if (exp.getClass() == PropertyExpression.class) {\n            ret = transformPropertyExpression((PropertyExpression) exp);\n        } else if (exp instanceof DeclarationExpression) {\n            ret = transformDeclarationExpression((DeclarationExpression) exp);\n        } else if (exp instanceof BinaryExpression) {\n            ret = transformBinaryExpression((BinaryExpression) exp);\n        } else if (exp instanceof MethodCallExpression) {\n            ret = transformMethodCallExpression((MethodCallExpression) exp);\n        } else if (exp instanceof ClosureExpression) {\n            ret = transformClosureExpression((ClosureExpression) exp);\n        } else if (exp instanceof ConstructorCallExpression) {\n            ret = transformConstructorCallExpression((ConstructorCallExpression) exp);\n        } else if (exp instanceof AnnotationConstantExpression) {\n            ret = transformAnnotationConstantExpression((AnnotationConstantExpression) exp);\n        } else {\n            resolveOrFail(exp.getType(), exp);\n            ret = exp.transformExpression(this);\n        }\n        if (ret!=null && ret!=exp) ret.setSourcePosition(exp);\n        return ret;\n    }","commit_id":"977a0998a08d40a6baed4d6dea90b6e19f93d9f4","url":"https://github.com/apache/groovy"},{"original_method":"@NotNull\n  public static Scope getScope(@NotNull SNode enclosingNode, @Nullable String role, int index, SNode smartConcept, IOperationContext context) {\n    ModelAccess.assertLegalRead();\n\n    SNode smartRef = ReferenceConceptUtil.getCharacteristicReference(smartConcept);\n    SNode linkDeclaration = role != null ? enclosingNode.getLinkDeclaration(role) : null;\n    SearchScopeStatus status = getSearchScope(enclosingNode, null, smartConcept, SModelUtil.getGenuineLinkRole(smartRef), SModelUtil.getLinkDeclarationTarget(smartRef), linkDeclaration, context);\n    if (status.isOk()) {\n      if(status.isDefault()) {\n        SNode smartTarget = SModelUtil.getLinkDeclarationTarget(smartRef);\n        return createDefaultScope(enclosingNode.getModel(), context, NameUtil.nodeFQName(smartTarget));\n      }\n      return new Adapter(status.getSearchScope());\n    }\n    return new ErrorScope(status.getMessage());\n  }","id":58312,"modified_method":"@NotNull\n  public static Scope getScope(@NotNull SNode enclosingNode, @Nullable String role, int index, @Nullable SNode smartConcept, IOperationContext context) {\n    ModelAccess.assertLegalRead();\n\n    SearchScopeStatus status;\n    SNode scopeReference;\n    if (smartConcept == null) {\n      if (role == null) throw new NullPointerException(\"role and smartConcept cannot be null at the same time\");\n      scopeReference = enclosingNode.getLinkDeclaration(role);\n      if (scopeReference == null) {\n        return new ErrorScope(\"can't find link for role '\" + role + \"' in '\" + enclosingNode.getConceptFqName() + \"'\");\n      }\n      status = getSearchScope(enclosingNode.getParent(), enclosingNode, enclosingNode.getConceptDeclarationNode(), SModelUtil.getGenuineLinkRole(scopeReference), SModelUtil.getLinkDeclarationTarget(scopeReference), enclosingNode.getRoleLink(), context);\n    } else {\n      scopeReference = ReferenceConceptUtil.getCharacteristicReference(smartConcept);\n      SNode linkDeclaration = role != null ? enclosingNode.getLinkDeclaration(role) : null;\n      if (linkDeclaration != null && SNodeUtil.getLinkDeclaration_IsReference(linkDeclaration)) {\n        throw new IllegalArgumentException(\"for reference role smartConcept should be null\");\n      }\n      status = getSearchScope(enclosingNode, null, smartConcept, SModelUtil.getGenuineLinkRole(scopeReference), SModelUtil.getLinkDeclarationTarget(scopeReference), linkDeclaration, context);\n    }\n    if (status.isOk()) {\n      if (status.isDefault()) {\n        SNode smartTarget = SModelUtil.getLinkDeclarationTarget(scopeReference);\n        return createDefaultScope(enclosingNode.getModel(), context, NameUtil.nodeFQName(smartTarget));\n      }\n      return new Adapter(status.getSearchScope());\n    }\n    return new ErrorScope(status.getMessage());\n  }","commit_id":"ad4291fb857cf7637ab04665089e9af1694dee4c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static ISearchScope getReferentSearchScope(SNode referenceNode, String referenceRole, IOperationContext context) {\n    if (referenceNode == null) {\n      return null;\n    }\n    SNode referenceNodeConcept = referenceNode.getConceptDeclarationNode();\n    SNode referenceLinkDecl = SNodeOperations.cast(SModelSearchUtil.findLinkDeclaration(referenceNodeConcept, referenceRole), \"jetbrains.mps.lang.structure.structure.LinkDeclaration\");\n    if (referenceLinkDecl == null) {\n      return null;\n    }\n    String genuineRole = SModelUtil.getGenuineLinkRole(referenceLinkDecl);\n    SearchScopeStatus status = ModelConstraintsUtil.getSearchScope(referenceNode.getParent(), referenceNode, referenceNodeConcept, genuineRole, referenceNode.getRoleLink(), context);\n    if (status.isOk()) {\n      return status.getSearchScope();\n    }\n    return null;\n  }","id":58313,"modified_method":"/**\n   * use ModelConstraintsUtil.getScope()\n   */\n  @Deprecated\n  public static ISearchScope getReferentSearchScope(SNode referenceNode, String referenceRole, IOperationContext context) {\n    if (referenceNode == null) {\n      return null;\n    }\n    Scope scope = ModelConstraintsUtil.getScope(referenceNode, referenceRole, 0, null, context);\n    if (scope instanceof ErrorScope) {\n      return null;\n    }\n    if (scope instanceof ISearchScope.Adapter) {\n      return ((ISearchScope.Adapter) scope).getSearchScope();\n    }\n    return new ScopeAdapter(scope);\n  }","commit_id":"ad4291fb857cf7637ab04665089e9af1694dee4c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static int resolveReferences(List<SReference> toResolve, Map<SModelReference, SModelReference> models, IOperationContext context) {\n    int cnt = 0;\n    boolean found;\n    do {\n      found = false;\n      for (SReference ref : ListSequence.fromList(toResolve).toGenericArray(SReference.class)) {\n        SNode node = ref.getSourceNode();\n        final SModelReference modelRef = MapSequence.fromMap(models).get(ref.getTargetSModelReference());\n        final String resolveInfo = SLinkOperations.getResolveInfo(ref);\n        if (modelRef == null || resolveInfo == null) {\n          continue;\n        }\n        final ISearchScope scope = SNodeOperations.getReferentSearchScope(node, SLinkOperations.getRole(ref), context);\n        if (scope == null) {\n          continue;\n        }\n        List<SNode> resolved = TypeContextManager.getInstance().runResolveAction(new Computable<List<SNode>>() {\n          public List<SNode> compute() {\n            return scope.getNodes(new Condition<SNode>() {\n              public boolean met(SNode n) {\n                return modelRef.equals(SNodeOperations.getModel(n).getSModelReference()) && resolveInfo.equals(n.getResolveInfo());\n              }\n            });\n          }\n        });\n        if (ListSequence.fromList(resolved).count() > 1) {\n          if (log.isErrorEnabled()) {\n            log.error(\"more than 1 possible resolution for \" + SLinkOperations.getResolveInfo(ref) + \" in model \" + modelRef.getLongName());\n          }\n        }\n        if (ListSequence.fromList(resolved).count() > 0) {\n          node.setReferent(SLinkOperations.getRole(ref), ListSequence.fromList(resolved).first());\n          ListSequence.fromList(toResolve).removeElement(ref);\n          ++cnt;\n          found = true;\n        }\n      }\n    } while (found);\n    return cnt;\n  }","id":58314,"modified_method":"public static int resolveReferences(List<SReference> toResolve, Map<SModelReference, SModelReference> models, IOperationContext context) {\n    int cnt = 0;\n    boolean found;\n    do {\n      found = false;\n      for (SReference ref : ListSequence.fromList(toResolve).toGenericArray(SReference.class)) {\n        SNode node = ref.getSourceNode();\n        final SModelReference modelRef = MapSequence.fromMap(models).get(ref.getTargetSModelReference());\n        final String resolveInfo = SLinkOperations.getResolveInfo(ref);\n        if (modelRef == null || resolveInfo == null) {\n          continue;\n        }\n        final Scope refScope = ModelConstraintsUtil.getScope(ref, context);\n        if (refScope instanceof ErrorScope) {\n          continue;\n        }\n        List<SNode> resolved = TypeContextManager.getInstance().runResolveAction(new Computable<IListSequence<SNode>>() {\n          public IListSequence<SNode> compute() {\n            return ListSequence.fromList(refScope.getAvailableElements(null)).where(new IWhereFilter<SNode>() {\n              public boolean accept(SNode n) {\n                return modelRef.equals(SNodeOperations.getModel(n).getSModelReference()) && resolveInfo.equals(n.getResolveInfo());\n              }\n            }).toListSequence();\n          }\n        });\n        if (ListSequence.fromList(resolved).count() > 1) {\n          if (log.isErrorEnabled()) {\n            log.error(\"more than 1 possible resolution for \" + SLinkOperations.getResolveInfo(ref) + \" in model \" + modelRef.getLongName());\n          }\n        }\n        if (ListSequence.fromList(resolved).count() > 0) {\n          node.setReferent(SLinkOperations.getRole(ref), ListSequence.fromList(resolved).first());\n          ListSequence.fromList(toResolve).removeElement(ref);\n          ++cnt;\n          found = true;\n        }\n      }\n    } while (found);\n    return cnt;\n  }","commit_id":"ad4291fb857cf7637ab04665089e9af1694dee4c","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void applyRule(final SNode node, final TypeCheckingContext typeCheckingContext) {\n    IOperationContext context = typeCheckingContext.getOperationContext();\n    if (context == null) {\n      return;\n    }\n    AbstractConceptDeclaration concept = ((ConceptDeclaration) SNodeOperations.getAdapter(SNodeOperations.getConceptDeclaration(node)));\n    for (SReference ref : SNodeOperations.getReferences(node)) {\n      SNode target = SLinkOperations.getTargetNode(ref);\n      // don't check unresolved and broken references, they already have an error message \n      if ((target == null)) {\n        continue;\n      }\n      SearchScopeStatus sss = ModelConstraintsUtil.getSearchScope(SNodeOperations.getParent(node), node, concept, ((LinkDeclaration) SNodeOperations.getAdapter(SLinkOperations.findLinkDeclaration(ref))), context);\n      if (sss.isError()) {\n        {\n          BaseIntentionProvider intentionProvider = null;\n          IErrorTarget errorTarget = new NodeErrorTarget();\n          errorTarget = new ReferenceErrorTarget(SLinkOperations.getRole(ref));\n          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(node, sss.getMessage(), \"r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)\", \"4942048232752368615\", intentionProvider, errorTarget);\n        }\n      } else if (!(sss.isDefault() || sss.getSearchScope().isInScope(target))) {\n        String name = target.getName();\n        {\n          BaseIntentionProvider intentionProvider = null;\n          IErrorTarget errorTarget = new NodeErrorTarget();\n          errorTarget = new ReferenceErrorTarget(SLinkOperations.getRole(ref));\n          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(node, \"reference\" + ((name == null ?\n            \"\" :\n            \" \" + name\n          )) + \" (\" + SLinkOperations.getRole(ref) + \") is out of search scope\", \"r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)\", \"4942048232752376292\", intentionProvider, errorTarget);\n          {\n            SNode _foreign_34989546 = sss.getReferenceValidatorNode();\n            if (_foreign_34989546 != null) {\n              _reporter_2309309498.addAdditionalRuleId(_foreign_34989546.getModel().toString(), _foreign_34989546.getId());\n            }\n          }\n        }\n      }\n    }\n  }","id":58315,"modified_method":"public void applyRule(final SNode node, final TypeCheckingContext typeCheckingContext) {\n    IOperationContext context = typeCheckingContext.getOperationContext();\n    if (context == null) {\n      return;\n    }\n    AbstractConceptDeclaration concept = ((ConceptDeclaration) SNodeOperations.getAdapter(SNodeOperations.getConceptDeclaration(node)));\n    for (SReference ref : SNodeOperations.getReferences(node)) {\n      SNode target = SLinkOperations.getTargetNode(ref);\n      LinkDeclaration linkDeclaration = ((LinkDeclaration) SNodeOperations.getAdapter(SLinkOperations.findLinkDeclaration(ref)));\n      // don't check unresolved and broken references, they should already have an error message \n      if ((target == null) || linkDeclaration == null) {\n        continue;\n      }\n      SearchScopeStatus sss = ModelConstraintsUtil.getSearchScope(SNodeOperations.getParent(node), node, concept, linkDeclaration, context);\n      if (sss.isError()) {\n        {\n          BaseIntentionProvider intentionProvider = null;\n          IErrorTarget errorTarget = new NodeErrorTarget();\n          errorTarget = new ReferenceErrorTarget(SLinkOperations.getRole(ref));\n          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(node, sss.getMessage(), \"r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)\", \"4942048232752368615\", intentionProvider, errorTarget);\n        }\n      } else if (!(sss.isDefault() || sss.getSearchScope().isInScope(target))) {\n        String name = target.getName();\n        {\n          BaseIntentionProvider intentionProvider = null;\n          IErrorTarget errorTarget = new NodeErrorTarget();\n          errorTarget = new ReferenceErrorTarget(SLinkOperations.getRole(ref));\n          IErrorReporter _reporter_2309309498 = typeCheckingContext.reportTypeError(node, \"reference\" + ((name == null ?\n            \"\" :\n            \" \" + name\n          )) + \" (\" + SLinkOperations.getRole(ref) + \") is out of search scope\", \"r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)\", \"4942048232752376292\", intentionProvider, errorTarget);\n          {\n            SNode _foreign_34989546 = sss.getReferenceValidatorNode();\n            if (_foreign_34989546 != null) {\n              _reporter_2309309498.addAdditionalRuleId(_foreign_34989546.getModel().toString(), _foreign_34989546.getId());\n            }\n          }\n        }\n      }\n    }\n  }","commit_id":"3c121d81391fad4b3190dc2749332841bbc55ed1","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected void createRequestForPreparedClass(final DebugProcessImpl debugProcess, final ReferenceType classType) {\n    if (!isInScopeOf(debugProcess)) {\n      return;\n    }\n    ApplicationManager.getApplication().runReadAction(new Runnable() {\n      public void run() {\n        try {\n          List<Location> locs = debugProcess.getPositionManager().locationsOfLine(classType, getSourcePosition());\n          if (locs.size() > 0) {\n            for (final Location location : locs) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Found location for reference type \" + classType.name() + \" at line \" + getLineIndex() + \"; isObsolete: \" + (debugProcess.getVirtualMachineProxy().versionHigher(\"1.4\") && location.method().isObsolete()));\n              }\n              BreakpointRequest request = debugProcess.getRequestsManager().createBreakpointRequest(LineBreakpoint.this, location);\n              debugProcess.getRequestsManager().enableRequest(request);\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Created breakpoint request for reference type \" + classType.name() + \" at line \" + getLineIndex());\n              }\n            }\n          }\n          else {\n            // there's no executable code in this class\n            debugProcess.getRequestsManager().setInvalid(LineBreakpoint.this, DebuggerBundle.message(\n              \"error.invalid.breakpoint.no.executable.code\", (getLineIndex() + 1), classType.name())\n            );\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"No locations of type \" + classType.name() + \" found at line \" + getLineIndex());\n            }\n          }\n        }\n        catch (ClassNotPreparedException ex) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"ClassNotPreparedException: \" + ex.getMessage());\n          }\n          // there's a chance to add a breakpoint when the class is prepared\n        }\n        catch (ObjectCollectedException ex) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"ObjectCollectedException: \" + ex.getMessage());\n          }\n          // there's a chance to add a breakpoint when the class is prepared\n        }\n        catch (InvalidLineNumberException ex) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"InvalidLineNumberException: \" + ex.getMessage());\n          }\n          debugProcess.getRequestsManager().setInvalid(LineBreakpoint.this, DebuggerBundle.message(\"error.invalid.breakpoint.bad.line.number\"));\n        }\n        catch (InternalException ex) {\n          LOG.info(ex);\n        }\n        catch(Exception ex) {\n          LOG.info(ex);\n        }\n        updateUI();\n      }\n    });\n  }","id":58316,"modified_method":"protected void createRequestForPreparedClass(final DebugProcessImpl debugProcess, final ReferenceType classType) {\n    if (!isInScopeOf(debugProcess, classType.name())) {\n      return;\n    }\n    ApplicationManager.getApplication().runReadAction(new Runnable() {\n      public void run() {\n        try {\n          List<Location> locs = debugProcess.getPositionManager().locationsOfLine(classType, getSourcePosition());\n          if (locs.size() > 0) {\n            for (final Location location : locs) {\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Found location for reference type \" + classType.name() + \" at line \" + getLineIndex() + \"; isObsolete: \" + (debugProcess.getVirtualMachineProxy().versionHigher(\"1.4\") && location.method().isObsolete()));\n              }\n              BreakpointRequest request = debugProcess.getRequestsManager().createBreakpointRequest(LineBreakpoint.this, location);\n              debugProcess.getRequestsManager().enableRequest(request);\n              if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Created breakpoint request for reference type \" + classType.name() + \" at line \" + getLineIndex());\n              }\n            }\n          }\n          else {\n            // there's no executable code in this class\n            debugProcess.getRequestsManager().setInvalid(LineBreakpoint.this, DebuggerBundle.message(\n              \"error.invalid.breakpoint.no.executable.code\", (getLineIndex() + 1), classType.name())\n            );\n            if (LOG.isDebugEnabled()) {\n              LOG.debug(\"No locations of type \" + classType.name() + \" found at line \" + getLineIndex());\n            }\n          }\n        }\n        catch (ClassNotPreparedException ex) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"ClassNotPreparedException: \" + ex.getMessage());\n          }\n          // there's a chance to add a breakpoint when the class is prepared\n        }\n        catch (ObjectCollectedException ex) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"ObjectCollectedException: \" + ex.getMessage());\n          }\n          // there's a chance to add a breakpoint when the class is prepared\n        }\n        catch (InvalidLineNumberException ex) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"InvalidLineNumberException: \" + ex.getMessage());\n          }\n          debugProcess.getRequestsManager().setInvalid(LineBreakpoint.this, DebuggerBundle.message(\"error.invalid.breakpoint.bad.line.number\"));\n        }\n        catch (InternalException ex) {\n          LOG.info(ex);\n        }\n        catch(Exception ex) {\n          LOG.info(ex);\n        }\n        updateUI();\n      }\n    });\n  }","commit_id":"b42a9e423675f4fb08d3ad9ed774a2b6f7b28d34","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private boolean isInScopeOf(DebugProcessImpl debugProcess) {\n    final SourcePosition position = getSourcePosition();\n    if (position != null) {\n      final GlobalSearchScope scope = debugProcess.getSearchScope();\n      final VirtualFile file = position.getFile().getVirtualFile();\n      if (file != null && ProjectRootManager.getInstance(debugProcess.getProject()).getFileIndex().isInSourceContent(file)) {\n        return scope.accept(file);\n      }\n    }\n    return true;\n  }","id":58317,"modified_method":"private boolean isInScopeOf(DebugProcessImpl debugProcess, String className) {\n    final SourcePosition position = getSourcePosition();\n    if (position != null) {\n      final VirtualFile breakpointFile = position.getFile().getVirtualFile();\n      if (breakpointFile != null) {\n        final Collection<VirtualFile> candidates = findClassFileCandidates(className, debugProcess.getSearchScope());\n        if (!candidates.isEmpty()) {\n          for (VirtualFile classFile : candidates) {\n            if (breakpointFile.equals(classFile)) {\n              return true;\n            }\n          }\n          return false;\n        }\n      }\n    }\n    return true;\n  }","commit_id":"b42a9e423675f4fb08d3ad9ed774a2b6f7b28d34","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void createOrWaitPrepare(DebugProcessImpl debugProcess, String classToBeLoaded) {\n    if (isInScopeOf(debugProcess)) {\n      super.createOrWaitPrepare(debugProcess, classToBeLoaded);\n    }\n  }","id":58318,"modified_method":"protected void createOrWaitPrepare(DebugProcessImpl debugProcess, String classToBeLoaded) {\n    if (isInScopeOf(debugProcess, classToBeLoaded)) {\n      super.createOrWaitPrepare(debugProcess, classToBeLoaded);\n    }\n  }","commit_id":"b42a9e423675f4fb08d3ad9ed774a2b6f7b28d34","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\r\n  public Item item(final QueryContext ctx, final InputInfo ii)\r\n      throws QueryException {\r\n    switch(def) {\r\n      case MB: return mb(ctx);\r\n      case MS: return ms(ctx);\r\n      case FRM_BASE: return fromBase(ctx, ii);\r\n      case TO_BASE: return toBase(ctx, ii);\r\n      default: return super.item(ctx, ii);\r\n    }\r\n  }","id":58319,"modified_method":"@Override\r\n  public Item item(final QueryContext ctx, final InputInfo ii)\r\n      throws QueryException {\r\n    switch(def) {\r\n      case MB: return mb(ctx);\r\n      case MS: return ms(ctx);\r\n      case FRM_BASE: return fromBase(ctx, ii);\r\n      case TO_BASE: return toBase(ctx, ii);\r\n      case MD5: return hash(ctx, \"MD5\");\r\n      case SHA1: return hash(ctx, \"SHA\");\r\n      default: return super.item(ctx, ii);\r\n    }\r\n  }","commit_id":"e74f30d8085e85b480481948f5bb18cac4b3e5e0","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Converts the given number to a string, using the given base.\r\n   * @param ctx query context\r\n   * @param ii input info\r\n   * @return string representation of the given number\r\n   * @throws QueryException query exception\r\n   */\r\n  private Str toBase(final QueryContext ctx, final InputInfo ii)\r\n      throws QueryException {\r\n\r\n      final long num = checkItr(expr[0].item(ctx, input)),\r\n                 base = checkItr(expr[1].item(ctx, input));\r\n      if(base < 2 || base > 36) INVBASE.thrw(ii, base);\r\n\r\n    // use fast variant for powers of two\r\n    for(int i = 1, p = 2; i < 6; i++, p <<= 1)\r\n      if(base == p) return toBaseFast(num, i);\r\n\r\n    final TokenBuilder tb = new TokenBuilder();\r\n    long n = num;\r\n    if(n < 0) {\r\n      // unsigned value doesn't fit in any native type...\r\n      final BigInteger[] dr = BigInteger.valueOf(n).add(\r\n          MAX_ULONG).divideAndRemainder(BigInteger.valueOf(base));\r\n      n = dr[0].longValue();\r\n      tb.addByte(DIGITS[dr[1].intValue()]);\r\n    } else {\r\n      tb.addByte(DIGITS[(int) (n % base)]);\r\n      n /= base;\r\n    }\r\n\r\n    while (n != 0) {\r\n      tb.addByte(DIGITS[(int) (n % base)]);\r\n      n /= base;\r\n    }\r\n\r\n    final byte[] res = tb.finish();\r\n    Array.reverse(res);\r\n    return Str.get(res);\r\n  }","id":58320,"modified_method":"/**\r\n   * Converts the given number to a string, using the given base.\r\n   * @param ctx query context\r\n   * @param ii input info\r\n   * @return string representation of the given number\r\n   * @throws QueryException query exception\r\n   */\r\n  private Str toBase(final QueryContext ctx, final InputInfo ii)\r\n      throws QueryException {\r\n\r\n    final long num = checkItr(expr[0], ctx),\r\n               base = checkItr(expr[1], ctx);\r\n    if(base < 2 || base > 36) INVBASE.thrw(ii, base);\r\n\r\n    // use fast variant for powers of two\r\n    for(int i = 1, p = 2; i < 6; i++, p <<= 1)\r\n      if(base == p) return toBaseFast(num, i);\r\n\r\n    final TokenBuilder tb = new TokenBuilder();\r\n    long n = num;\r\n    if(n < 0) {\r\n      // unsigned value doesn't fit in any native type...\r\n      final BigInteger[] dr = BigInteger.valueOf(n).add(\r\n          MAX_ULONG).divideAndRemainder(BigInteger.valueOf(base));\r\n      n = dr[0].longValue();\r\n      tb.addByte(DIGITS[dr[1].intValue()]);\r\n    } else {\r\n      tb.addByte(DIGITS[(int) (n % base)]);\r\n      n /= base;\r\n    }\r\n\r\n    while (n != 0) {\r\n      tb.addByte(DIGITS[(int) (n % base)]);\r\n      n /= base;\r\n    }\r\n\r\n    final byte[] res = tb.finish();\r\n    Array.reverse(res);\r\n    return Str.get(res);\r\n  }","commit_id":"e74f30d8085e85b480481948f5bb18cac4b3e5e0","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Converts the given string to a number, interpreting it as an xs:integer\r\n   * encoded in the given base.\r\n   * @param ctx query context\r\n   * @param ii input info\r\n   * @return read integer\r\n   * @throws QueryException exception\r\n   */\r\n  private Itr fromBase(final QueryContext ctx, final InputInfo ii)\r\n      throws QueryException {\r\n    final byte[] str = checkEStr(expr[0].item(ctx, ii));\r\n    final long base = checkItr(expr[1].item(ctx, ii));\r\n    if(base < 2 || base > 36) INVBASE.thrw(ii, base);\r\n\r\n    long res = 0;\r\n    for(final byte b : str) {\r\n      final int num = b <= '9' ? b - 0x30 : (b & 0xDF) - 0x37;\r\n      if(!(b >= '0' && b <= '9' || b >= 'a' && b <= 'z' ||\r\n          b >= 'A' && b <= 'Z') || num >= base)\r\n        INVDIG.thrw(ii, base, (char) (b & 0xff));\r\n\r\n      res = res * base + num;\r\n    }\r\n\r\n    return Itr.get(res);\r\n  }","id":58321,"modified_method":"/**\r\n   * Converts the given string to a number, interpreting it as an xs:integer\r\n   * encoded in the given base.\r\n   * @param ctx query context\r\n   * @param ii input info\r\n   * @return read integer\r\n   * @throws QueryException exception\r\n   */\r\n  private Itr fromBase(final QueryContext ctx, final InputInfo ii)\r\n      throws QueryException {\r\n\r\n    final byte[] str = checkStr(expr[0], ctx);\r\n    final long base = checkItr(expr[1], ctx);\r\n    if(base < 2 || base > 36) INVBASE.thrw(ii, base);\r\n\r\n    long res = 0;\r\n    for(final byte b : str) {\r\n      final int num = b <= '9' ? b - 0x30 : (b & 0xDF) - 0x37;\r\n      if(!(b >= '0' && b <= '9' || b >= 'a' && b <= 'z' ||\r\n          b >= 'A' && b <= 'Z') || num >= base)\r\n        INVDIG.thrw(ii, base, (char) (b & 0xff));\r\n\r\n      res = res * base + num;\r\n    }\r\n\r\n    return Itr.get(res);\r\n  }","commit_id":"e74f30d8085e85b480481948f5bb18cac4b3e5e0","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public boolean uses(final Use u) {\r\n    return u == Use.CTX && !(def == FunDef.FRM_BASE || def == FunDef.TO_BASE)\r\n        || super.uses(u);\r\n  }","id":58322,"modified_method":"@Override\r\n  public boolean uses(final Use u) {\r\n    return u == Use.CTX && (def == FunDef.MB || def == FunDef.MB\r\n        || def == FunDef.EVAL || def == FunDef.RUN) || super.uses(u);\r\n  }","commit_id":"e74f30d8085e85b480481948f5bb18cac4b3e5e0","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Constructor.\r\n   * @param b base64 data\r\n   */\r\n  Hex(final B64 b) {\r\n    super(Type.HEX);\r\n    val = b.val;\r\n  }","id":58323,"modified_method":"/**\r\n   * Constructor.\r\n   * @param b base64 data\r\n   */\r\n  Hex(final B64 b) {\r\n    this(b.val);\r\n  }","commit_id":"e74f30d8085e85b480481948f5bb18cac4b3e5e0","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Executes a query, update or prepared statement.\n   * @param ctx query context\n   * @return result\n   * @throws QueryException query exception\n   */\n  private NodeSeqBuilder execute(final QueryContext ctx) throws QueryException {\n    final int id = (int) checkItr(expr[0].item(ctx, info));\n    final Object obj = ctx.jdbc().get(id);\n    if(!(obj instanceof Connection)) BXSQ_CONN.thrw(info, id);\n\n    final String query = string(checkStr(ctx.iter(expr[1]).next(), ctx));\n    Statement stmt = null;\n    try {\n      stmt = ((Connection) obj).createStatement();\n      final boolean result = stmt.execute(query);\n      return result ? buildResult(stmt.getResultSet()) : new NodeSeqBuilder();\n    } catch(final SQLException ex) {\n      throw BXSQ_ERROR.thrw(info, ex);\n    } finally {\n      if(stmt != null) try { stmt.close(); } catch(final SQLException ignored) { }\n    }\n  }","id":58324,"modified_method":"/**\n   * Executes a query, update or prepared statement.\n   * @param ctx query context\n   * @return result\n   * @throws QueryException query exception\n   */\n  private NodeSeqBuilder execute(final QueryContext ctx) throws QueryException {\n    final int id = (int) checkItr(expr[0], ctx);\n    final Object obj = ctx.jdbc().get(id);\n    if(!(obj instanceof Connection)) BXSQ_CONN.thrw(info, id);\n\n    final String query = string(checkStr(expr[1], ctx));\n    Statement stmt = null;\n    try {\n      stmt = ((Connection) obj).createStatement();\n      final boolean result = stmt.execute(query);\n      return result ? buildResult(stmt.getResultSet()) : new NodeSeqBuilder();\n    } catch(final SQLException ex) {\n      throw BXSQ_ERROR.thrw(info, ex);\n    } finally {\n      if(stmt != null) try { stmt.close(); } catch(final SQLException ignored) { }\n    }\n  }","commit_id":"d64f38c79a6754ac7adfe94214d073d15e8c3251","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Executes a query, update or prepared statement.\n   * @param ctx query context\n   * @return result\n   * @throws QueryException query exception\n   */\n  private NodeSeqBuilder executePrepared(final QueryContext ctx) throws QueryException {\n    final int id = (int) checkItr(expr[0].item(ctx, info));\n    final Object obj = ctx.jdbc().get(id);\n    if(!(obj instanceof PreparedStatement)) BXSQ_STATE.thrw(info, id);\n\n    // Get parameters for prepared statement\n    long c = 0;\n    ANode params = null;\n    if(expr.length > 1) {\n      params = (ANode) checkType(expr[1].item(ctx, info), NodeType.ELM);\n      if(!params.qname().eq(E_PARAMS)) ELMOPTION.thrw(info, params.qname());\n      c = countParams(params);\n    }\n\n    try {\n      final PreparedStatement stmt = (PreparedStatement) obj;\n      // Check if number of parameters equals number of place holders\n      if(c != stmt.getParameterMetaData().getParameterCount()) BXSQ_PARAMS.thrw(info);\n      if(params != null) setParameters(params.children(), stmt);\n      return stmt.execute() ? buildResult(stmt.getResultSet()) : new NodeSeqBuilder();\n    } catch(final SQLException ex) {\n      throw BXSQ_ERROR.thrw(info, ex);\n    }\n  }","id":58325,"modified_method":"/**\n   * Executes a query, update or prepared statement.\n   * @param ctx query context\n   * @return result\n   * @throws QueryException query exception\n   */\n  private NodeSeqBuilder executePrepared(final QueryContext ctx) throws QueryException {\n    final int id = (int) checkItr(expr[0], ctx);\n    final Object obj = ctx.jdbc().get(id);\n    if(!(obj instanceof PreparedStatement)) BXSQ_STATE.thrw(info, id);\n\n    // Get parameters for prepared statement\n    long c = 0;\n    ANode params = null;\n    if(expr.length > 1) {\n      params = (ANode) checkType(checkItem(expr[1], ctx), NodeType.ELM);\n      if(!params.qname().eq(E_PARAMS)) ELMOPTION.thrw(info, params.qname());\n      c = countParams(params);\n    }\n\n    try {\n      final PreparedStatement stmt = (PreparedStatement) obj;\n      // Check if number of parameters equals number of place holders\n      if(c != stmt.getParameterMetaData().getParameterCount()) BXSQ_PARAMS.thrw(info);\n      if(params != null) setParameters(params.children(), stmt);\n      return stmt.execute() ? buildResult(stmt.getResultSet()) : new NodeSeqBuilder();\n    } catch(final SQLException ex) {\n      throw BXSQ_ERROR.thrw(info, ex);\n    }\n  }","commit_id":"d64f38c79a6754ac7adfe94214d073d15e8c3251","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Returns a connection and removes it from list with opened connections if\n   * requested.\n   * @param ctx query context\n   * @param del flag indicating if connection has to be removed\n   * @return connection\n   * @throws QueryException query exception\n   */\n  private Connection connection(final QueryContext ctx, final boolean del)\n      throws QueryException {\n    final int id = (int) checkItr(expr[0].item(ctx, info));\n    final Object obj = ctx.jdbc().get(id);\n    if(!(obj instanceof Connection)) BXSQ_CONN.thrw(info, id);\n    if(del) ctx.jdbc().remove(id);\n    return (Connection) obj;\n  }","id":58326,"modified_method":"/**\n   * Returns a connection and removes it from list with opened connections if\n   * requested.\n   * @param ctx query context\n   * @param del flag indicating if connection has to be removed\n   * @return connection\n   * @throws QueryException query exception\n   */\n  private Connection connection(final QueryContext ctx, final boolean del)\n      throws QueryException {\n    final int id = (int) checkItr(expr[0], ctx);\n    final Object obj = ctx.jdbc().get(id);\n    if(!(obj instanceof Connection)) BXSQ_CONN.thrw(info, id);\n    if(del) ctx.jdbc().remove(id);\n    return (Connection) obj;\n  }","commit_id":"d64f38c79a6754ac7adfe94214d073d15e8c3251","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Establishes a connection to a relational database.\n   * @param ctx query context\n   * @return connection id\n   * @throws QueryException query exception\n   */\n  private Int connect(final QueryContext ctx) throws QueryException {\n    // URL to relational database\n    final String url = string(checkStr(expr[0], ctx));\n    try {\n      if(expr.length > 2) {\n        // credentials\n        final String user = string(checkStr(expr[1], ctx));\n        final String pass = string(checkStr(expr[2], ctx));\n        if(expr.length == 4) {\n          // connection options\n          final Item opt = expr[3].item(ctx, info);\n          final TokenMap options = new FuncParams(E_OPS, info).parse(opt);\n          // extract auto-commit mode from options\n          boolean ac = true;\n          final byte[] commit = options.get(AUTO_COMM);\n          if(commit != null) {\n            ac = eq(commit, TRUE);\n            options.delete(AUTO_COMM);\n          }\n          // connection properties\n          final Properties props = connProps(options);\n          props.setProperty(USER, user);\n          props.setProperty(PASS, pass);\n\n          // open connection\n          final Connection conn = getConnection(url, props);\n          // set auto/commit mode\n          conn.setAutoCommit(ac);\n          return Int.get(ctx.jdbc().add(conn));\n        }\n        return Int.get(ctx.jdbc().add(getConnection(url, user, pass)));\n      }\n      return Int.get(ctx.jdbc().add(getConnection(url)));\n    } catch(final SQLException ex) {\n      throw BXSQ_ERROR.thrw(info, ex);\n    }\n  }","id":58327,"modified_method":"/**\n   * Establishes a connection to a relational database.\n   * @param ctx query context\n   * @return connection id\n   * @throws QueryException query exception\n   */\n  private Int connect(final QueryContext ctx) throws QueryException {\n    // URL to relational database\n    final String url = string(checkStr(expr[0], ctx));\n    try {\n      if(expr.length > 2) {\n        // credentials\n        final String user = string(checkStr(expr[1], ctx));\n        final String pass = string(checkStr(expr[2], ctx));\n        if(expr.length == 4) {\n          // connection options\n          final Item opt = checkItem(expr[3], ctx);\n          final TokenMap options = new FuncParams(E_OPS, info).parse(opt);\n          // extract auto-commit mode from options\n          boolean ac = true;\n          final byte[] commit = options.get(AUTO_COMM);\n          if(commit != null) {\n            ac = eq(commit, TRUE);\n            options.delete(AUTO_COMM);\n          }\n          // connection properties\n          final Properties props = connProps(options);\n          props.setProperty(USER, user);\n          props.setProperty(PASS, pass);\n\n          // open connection\n          final Connection conn = getConnection(url, props);\n          // set auto/commit mode\n          conn.setAutoCommit(ac);\n          return Int.get(ctx.jdbc().add(conn));\n        }\n        return Int.get(ctx.jdbc().add(getConnection(url, user, pass)));\n      }\n      return Int.get(ctx.jdbc().add(getConnection(url)));\n    } catch(final SQLException ex) {\n      throw BXSQ_ERROR.thrw(info, ex);\n    }\n  }","commit_id":"d64f38c79a6754ac7adfe94214d073d15e8c3251","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n     * Checks that the WSS4J results refer to the required signed/encrypted\n     * elements as defined by the XPath expressions in {@link #xPaths}.\n     * \n     * @param message\n     *            the SOAP message containing the signature\n     * \n     * @throws SoapFault\n     *             if there is an error evaluating an XPath or an element is not\n     *             covered by the required cryptographic operation\n     */\n    public void handleMessage(SoapMessage message) throws Fault {\n        if (this.xPaths == null || this.xPaths.isEmpty()) {\n            // return\n        }\n        \n        if (message.getContent(SOAPMessage.class) == null) {\n            throw new SoapFault(\"Error obtaining SOAP document\", Fault.FAULT_CODE_CLIENT);\n        }\n        \n        Element documentElement = null;\n        try {\n            SOAPMessage saajDoc = message.getContent(SOAPMessage.class);\n            SOAPEnvelope envelope = saajDoc.getSOAPPart().getEnvelope();\n            if (!checkFaults && envelope.getBody().hasFault()) {\n                return;\n            }\n            documentElement = envelope;\n        } catch (SOAPException e) {\n            throw new SoapFault(\"Error obtaining SOAP document\", Fault.FAULT_CODE_CLIENT);\n        }\n        \n        final Collection<WSDataRef> signed = new HashSet<WSDataRef>();\n        final Collection<WSDataRef> encrypted = new HashSet<WSDataRef>();\n        \n        List<WSHandlerResult> results = CastUtils.cast(\n                (List<?>) message.get(WSHandlerConstants.RECV_RESULTS));\n        \n        for (final WSHandlerResult wshr : results) {\n            final List<WSSecurityEngineResult> wsSecurityEngineSignResults = \n                WSSecurityUtil.fetchAllActionResults(wshr.getResults(), WSConstants.SIGN);\n            \n            final List<WSSecurityEngineResult> wsSecurityEngineEncResults = \n                WSSecurityUtil.fetchAllActionResults(wshr.getResults(), WSConstants.ENCR);\n            \n            for (WSSecurityEngineResult wser : wsSecurityEngineSignResults) {\n            \n                List<WSDataRef> sl = CastUtils.cast((List<?>) wser\n                        .get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n                if (sl != null) {\n                    if (sl.size() == 1\n                        && sl.get(0).getName().equals(new QName(WSConstants.SIG_NS, WSConstants.SIG_LN))) {\n                        //endorsing the signature so don't include\n                        break;\n                    }\n                    \n                    for (WSDataRef r : sl) {\n                        signed.add(r);\n                    }\n                }\n            }\n            \n            for (WSSecurityEngineResult wser : wsSecurityEngineEncResults) {\n                List<WSDataRef> el = CastUtils.cast((List<?>) wser\n                        .get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n\n                if (el != null) {\n                    for (WSDataRef r : el) {\n                        encrypted.add(r);\n                    }\n                }\n            }\n        }\n        \n        CryptoCoverageUtil.reconcileEncryptedSignedRefs(signed, encrypted);\n\n        // XPathFactory and XPath are not thread-safe so we must recreate them\n        // each request.\n        final XPathFactory factory = XPathFactory.newInstance();\n        final XPath xpath = factory.newXPath();\n\n        if (this.prefixMap != null) {\n            xpath.setNamespaceContext(new MapNamespaceContext(this.prefixMap));\n        }\n\n        for (XPathExpression xPathExpression : this.xPaths) {\n            Collection<WSDataRef> refsToCheck = null;\n\n            switch (xPathExpression.getType()) {\n            case SIGNED:\n                refsToCheck = signed;\n                break;\n            case ENCRYPTED:\n                refsToCheck = encrypted;\n                break;\n            default:\n                throw new IllegalStateException(\"Unexpected crypto type: \" \n                    + xPathExpression.getType());\n            }\n\n            try {\n                CryptoCoverageUtil.checkCoverage(\n                                                 documentElement,\n                                                 refsToCheck,\n                                                 xpath, \n                                                 Arrays.asList(xPathExpression.getXPath()),\n                                                 xPathExpression.getType(),\n                                                 xPathExpression.getScope());\n            } catch (WSSecurityException e) {\n                throw new SoapFault(\"No \" + xPathExpression.getType()\n                                    + \" element found matching XPath \"\n                                    + xPathExpression.getXPath(), Fault.FAULT_CODE_CLIENT);\n            }\n        }\n    }","id":58328,"modified_method":"/**\n     * Checks that the WSS4J results refer to the required signed/encrypted\n     * elements as defined by the XPath expressions in {@link #xPaths}.\n     * \n     * @param message\n     *            the SOAP message containing the signature\n     * \n     * @throws SoapFault\n     *             if there is an error evaluating an XPath or an element is not\n     *             covered by the required cryptographic operation\n     */\n    public void handleMessage(SoapMessage message) throws Fault {\n        if (this.xPaths == null || this.xPaths.isEmpty()) {\n            // return\n        }\n        \n        if (message.getContent(SOAPMessage.class) == null) {\n            throw new SoapFault(\"Error obtaining SOAP document\", Fault.FAULT_CODE_CLIENT);\n        }\n        \n        Element documentElement = null;\n        try {\n            SOAPMessage saajDoc = message.getContent(SOAPMessage.class);\n            SOAPEnvelope envelope = saajDoc.getSOAPPart().getEnvelope();\n            if (!checkFaults && envelope.getBody().hasFault()) {\n                return;\n            }\n            documentElement = envelope;\n        } catch (SOAPException e) {\n            throw new SoapFault(\"Error obtaining SOAP document\", Fault.FAULT_CODE_CLIENT);\n        }\n        \n        final Collection<WSDataRef> signed = new HashSet<>();\n        final Collection<WSDataRef> encrypted = new HashSet<>();\n        \n        List<WSHandlerResult> results = CastUtils.cast(\n                (List<?>) message.get(WSHandlerConstants.RECV_RESULTS));\n        \n        // Get all encrypted and signed references\n        for (WSHandlerResult wshr : results) {\n            for (WSSecurityEngineResult result : wshr.getResults()) {\n                Integer actInt = (Integer)result.get(WSSecurityEngineResult.TAG_ACTION);\n                if (actInt == WSConstants.SIGN) {\n                    List<WSDataRef> sl = \n                        CastUtils.cast((List<?>)result.get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n                    if (sl != null) {\n                        if (sl.size() == 1\n                            && sl.get(0).getName().equals(new QName(WSConstants.SIG_NS, WSConstants.SIG_LN))) {\n                            //endorsing the signature so don't include\n                            continue;\n                        }\n                        \n                        signed.addAll(sl);\n                    }\n                } else if (actInt == WSConstants.ENCR) {\n                    List<WSDataRef> el = \n                        CastUtils.cast((List<?>)result.get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n                    if (el != null) {\n                        encrypted.addAll(el);\n                    }\n                }\n            }\n        }\n        \n        CryptoCoverageUtil.reconcileEncryptedSignedRefs(signed, encrypted);\n\n        // XPathFactory and XPath are not thread-safe so we must recreate them\n        // each request.\n        final XPathFactory factory = XPathFactory.newInstance();\n        final XPath xpath = factory.newXPath();\n\n        if (this.prefixMap != null) {\n            xpath.setNamespaceContext(new MapNamespaceContext(this.prefixMap));\n        }\n\n        for (XPathExpression xPathExpression : this.xPaths) {\n            Collection<WSDataRef> refsToCheck = null;\n\n            switch (xPathExpression.getType()) {\n            case SIGNED:\n                refsToCheck = signed;\n                break;\n            case ENCRYPTED:\n                refsToCheck = encrypted;\n                break;\n            default:\n                throw new IllegalStateException(\"Unexpected crypto type: \" \n                    + xPathExpression.getType());\n            }\n\n            try {\n                CryptoCoverageUtil.checkCoverage(\n                                                 documentElement,\n                                                 refsToCheck,\n                                                 xpath, \n                                                 Arrays.asList(xPathExpression.getXPath()),\n                                                 xPathExpression.getType(),\n                                                 xPathExpression.getScope());\n            } catch (WSSecurityException e) {\n                throw new SoapFault(\"No \" + xPathExpression.getType()\n                                    + \" element found matching XPath \"\n                                    + xPathExpression.getXPath(), Fault.FAULT_CODE_CLIENT);\n            }\n        }\n    }","commit_id":"dfecaa60ea6082fda8f2959c083ba2f2f7a03112","url":"https://github.com/apache/cxf"},{"original_method":"/**\n     * Inspects the signed and encrypted content in the message and accurately\n     * resolves encrypted and then signed elements in {@code signedRefs}.\n     * Entries in {@code signedRefs} that correspond to an encrypted element\n     * are resolved to the decrypted element and added to {@code signedRefs}.\n     * The original reference to the encrypted content remains unaltered in the\n     * list to allow for matching against a requirement that xenc:EncryptedData\n     * and xenc:EncryptedKey elements be signed.\n     * \n     * @param signedRefs references to the signed content in the message\n     * @param encryptedRefs references to the encrypted content in the message\n     */\n    public static void reconcileEncryptedSignedRefs(final Collection<WSDataRef> signedRefs, \n            final Collection<WSDataRef> encryptedRefs) {\n        \n        final List<WSDataRef> encryptedSignedRefs = new LinkedList<WSDataRef>();\n        \n        for (WSDataRef encryptedRef : encryptedRefs) {\n            final Iterator<WSDataRef> signedRefsIt = signedRefs.iterator();\n            while (signedRefsIt.hasNext()) {\n                final WSDataRef signedRef = signedRefsIt.next();\n                \n                if (isSignedEncryptionRef(encryptedRef, signedRef)) {\n\n                    final WSDataRef encryptedSignedRef = new WSDataRef();\n                    encryptedSignedRef.setWsuId(signedRef.getWsuId());\n                    \n                    encryptedSignedRef.setContent(false);\n                    encryptedSignedRef.setName(encryptedRef.getName());\n                    encryptedSignedRef.setProtectedElement(encryptedRef\n                            .getProtectedElement());\n                    // This value is the ID of the encrypted element, not\n                    // the value of the ID in the decrypted content \n                    // (WSS4J 1.5.8).  Therefore, passing it along does\n                    // not provide much value.\n                    //encryptedSignedRef.setWsuId(encryptedRef.getWsuId());\n                    encryptedSignedRef.setXpath(encryptedRef.getXpath());\n                    \n                    encryptedSignedRefs.add(encryptedSignedRef);\n                }\n            }\n        }\n        \n        signedRefs.addAll(encryptedSignedRefs);\n    }","id":58329,"modified_method":"/**\n     * Inspects the signed and encrypted content in the message and accurately\n     * resolves encrypted and then signed elements in {@code signedRefs}.\n     * Entries in {@code signedRefs} that correspond to an encrypted element\n     * are resolved to the decrypted element and added to {@code signedRefs}.\n     * The original reference to the encrypted content remains unaltered in the\n     * list to allow for matching against a requirement that xenc:EncryptedData\n     * and xenc:EncryptedKey elements be signed.\n     * \n     * @param signedRefs references to the signed content in the message\n     * @param encryptedRefs references to the encrypted content in the message\n     */\n    public static void reconcileEncryptedSignedRefs(final Collection<WSDataRef> signedRefs, \n            final Collection<WSDataRef> encryptedRefs) {\n        \n        final List<WSDataRef> encryptedSignedRefs = new LinkedList<>();\n        \n        for (WSDataRef encryptedRef : encryptedRefs) {\n            for (WSDataRef signedRef : signedRefs) {\n                if (signedRef.getProtectedElement() == encryptedRef.getEncryptedElement()) {\n\n                    final WSDataRef encryptedSignedRef = new WSDataRef();\n                    encryptedSignedRef.setWsuId(signedRef.getWsuId());\n                    \n                    encryptedSignedRef.setContent(false);\n                    encryptedSignedRef.setName(encryptedRef.getName());\n                    encryptedSignedRef.setProtectedElement(encryptedRef\n                            .getProtectedElement());\n                    \n                    encryptedSignedRef.setXpath(encryptedRef.getXpath());\n                    \n                    encryptedSignedRefs.add(encryptedSignedRef);\n                }\n            }\n        }\n        \n        signedRefs.addAll(encryptedSignedRefs);\n    }","commit_id":"dfecaa60ea6082fda8f2959c083ba2f2f7a03112","url":"https://github.com/apache/cxf"},{"original_method":"@Override\n    protected void doResults(\n        SoapMessage msg, \n        String actor,\n        Element soapHeader,\n        Element soapBody,\n        List<WSSecurityEngineResult> results, \n        boolean utWithCallbacks\n    ) throws SOAPException, XMLStreamException, WSSecurityException {\n        AssertionInfoMap aim = msg.get(AssertionInfoMap.class);\n        Collection<WSDataRef> signed = new HashSet<WSDataRef>();\n        Collection<WSDataRef> encrypted = new HashSet<WSDataRef>();\n        \n        //\n        // Pre-fetch various results\n        //\n        final List<Integer> actions = new ArrayList<Integer>(2);\n        actions.add(WSConstants.SIGN);\n        actions.add(WSConstants.UT_SIGN);\n        actions.add(WSConstants.ST_SIGNED);\n        List<WSSecurityEngineResult> signedResults = \n            WSSecurityUtil.fetchAllActionResults(results, actions);\n        for (WSSecurityEngineResult result : signedResults) {\n            List<WSDataRef> sl = \n                CastUtils.cast((List<?>)result.get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n            if (sl != null) {\n                for (WSDataRef r : sl) {\n                    signed.add(r);\n                }\n            }\n        }\n        \n        List<WSSecurityEngineResult> encryptResults = \n            WSSecurityUtil.fetchAllActionResults(results, WSConstants.ENCR);\n        for (WSSecurityEngineResult result : encryptResults) {\n            List<WSDataRef> sl = \n                CastUtils.cast((List<?>)result.get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n            if (sl != null) {\n                for (WSDataRef r : sl) {\n                    encrypted.add(r);\n                }\n            }\n        }\n        \n        //\n        // Check policies\n        //\n        if (!checkSignedEncryptedCoverage(aim, msg, soapHeader, soapBody, signed, encrypted)) {\n            LOG.fine(\"Incoming request failed signed-encrypted policy validation\");\n        }\n        \n        if (!checkTokenCoverage(aim, msg, soapBody, results, signedResults)) {\n            LOG.fine(\"Incoming request failed token policy validation\");\n        }\n        \n        if (!checkBindingCoverage(aim, msg, soapBody, results, signedResults, encryptResults)) {\n            LOG.fine(\"Incoming request failed binding policy validation\");\n        }\n\n        if (!checkSupportingTokenCoverage(aim, msg, results, signedResults, \n            encryptResults, utWithCallbacks)) {\n            LOG.fine(\"Incoming request failed supporting token policy validation\");\n        }\n        \n        super.doResults(msg, actor, soapHeader, soapBody, results, utWithCallbacks);\n    }","id":58330,"modified_method":"@Override\n    protected void doResults(\n        SoapMessage msg, \n        String actor,\n        Element soapHeader,\n        Element soapBody,\n        List<WSSecurityEngineResult> results, \n        boolean utWithCallbacks\n    ) throws SOAPException, XMLStreamException, WSSecurityException {\n        AssertionInfoMap aim = msg.get(AssertionInfoMap.class);\n        Collection<WSDataRef> signed = new HashSet<WSDataRef>();\n        Collection<WSDataRef> encrypted = new HashSet<WSDataRef>();\n        \n        //\n        // Pre-fetch various results\n        //\n        final List<Integer> actions = new ArrayList<Integer>(3);\n        actions.add(WSConstants.SIGN);\n        actions.add(WSConstants.UT_SIGN);\n        actions.add(WSConstants.ST_SIGNED);\n        List<WSSecurityEngineResult> signedResults = \n            WSSecurityUtil.fetchAllActionResults(results, actions);\n        for (WSSecurityEngineResult result : signedResults) {\n            List<WSDataRef> sl = \n                CastUtils.cast((List<?>)result.get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n            if (sl != null) {\n                for (WSDataRef r : sl) {\n                    signed.add(r);\n                }\n            }\n        }\n        \n        List<WSSecurityEngineResult> encryptResults = \n            WSSecurityUtil.fetchAllActionResults(results, WSConstants.ENCR);\n        for (WSSecurityEngineResult result : encryptResults) {\n            List<WSDataRef> sl = \n                CastUtils.cast((List<?>)result.get(WSSecurityEngineResult.TAG_DATA_REF_URIS));\n            if (sl != null) {\n                for (WSDataRef r : sl) {\n                    encrypted.add(r);\n                }\n            }\n        }\n        \n        //\n        // Check policies\n        //\n        if (!checkSignedEncryptedCoverage(aim, msg, soapHeader, soapBody, signed, encrypted)) {\n            LOG.fine(\"Incoming request failed signed-encrypted policy validation\");\n        }\n        \n        if (!checkTokenCoverage(aim, msg, soapBody, results, signedResults)) {\n            LOG.fine(\"Incoming request failed token policy validation\");\n        }\n        \n        if (!checkBindingCoverage(aim, msg, soapBody, results, signedResults, encryptResults)) {\n            LOG.fine(\"Incoming request failed binding policy validation\");\n        }\n\n        if (!checkSupportingTokenCoverage(aim, msg, results, signedResults, \n            encryptResults, utWithCallbacks)) {\n            LOG.fine(\"Incoming request failed supporting token policy validation\");\n        }\n        \n        super.doResults(msg, actor, soapHeader, soapBody, results, utWithCallbacks);\n    }","commit_id":"dfecaa60ea6082fda8f2959c083ba2f2f7a03112","url":"https://github.com/apache/cxf"},{"original_method":"public IEntity newInstance(String key) throws GroupsException {\n        throw new UnsupportedOperationException(\n            \"Group updates are not supported by the Grouper groups service\");\n\t}","id":58331,"modified_method":"public IEntity newInstance(String key) throws GroupsException {\n\t    return new EntityImpl(key, null);\n\t}","commit_id":"76bf08b46ec1f8dd4f9181b1d3d416af6322f692","url":"https://github.com/Jasig/uPortal"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tpublic IEntity newInstance(String key, Class type) throws GroupsException {\n        throw new UnsupportedOperationException(\n            \"Group updates are not supported by the Grouper groups service\");\n\t}","id":58332,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tpublic IEntity newInstance(String key, Class type) throws GroupsException {\n        if (org.jasig.portal.EntityTypes.getEntityTypeID(type) == null) {\n            throw new GroupsException(\"Invalid group type: \" + type);\n        }\n        return new EntityImpl(key, type);\n\t}","commit_id":"76bf08b46ec1f8dd4f9181b1d3d416af6322f692","url":"https://github.com/Jasig/uPortal"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tpublic Iterator findMemberGroups(IEntityGroup group) throws GroupsException {\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"Searching for group-type members of group with key: \" \n\t\t\t        + group.getKey());\n\t\t}\n\n        try {\n            \n            GcGetGroups getGroups = new GcGetGroups();\n            getGroups.addSubjectIdentifier(group.getLocalKey());\n            WsGetGroupsResults results = getGroups.execute();\n            \n            if (results == null || results.getResults() == null) {\n                if (LOGGER.isDebugEnabled()) {\n                    LOGGER.debug(\"No group-type members found for group with key \"\n                            + group.getKey());\n                }\n                return Collections.<IEntityGroup>emptyList().iterator();                \n            }\n            \n            final List<IEntityGroup> members = new ArrayList<IEntityGroup>();\n            for (WsGetGroupsResult wsg : results.getResults()) {\n                if (wsg.getWsGroups() != null) {\n                    for (WsGroup g : wsg.getWsGroups()) {\n                        IEntityGroup member = createUportalGroupFromGrouperGroup(g);\n                        members.add(member);\n                        if (LOGGER.isTraceEnabled()) {\n                            LOGGER.trace(\"found IEntityGroup member: \" + member);\n                        }\n                    }\n                }\n            }\n            \n            return members.iterator();\n            \n        } catch (Exception e) {\n            LOGGER.warn(\"Exception while attempting to retrieve \"\n                    + \"member groups of group with key \" + group.getKey() \n                    + \" from Grouper web services\", e);\n            return Collections.<IGroupMember>emptyList().iterator();\n        }\n\n\t}","id":58333,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tpublic Iterator findMemberGroups(IEntityGroup group) throws GroupsException {\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"Searching for group-type members of group with key: \" \n\t\t\t        + group.getKey());\n\t\t}\n\n        try {\n            \n            if (!validKey(group.getLocalKey())) {\n                return Collections.<IEntityGroup> emptyList().iterator();\n            }\n\n            GcGetMembers gcGetMembers = new GcGetMembers();\n            gcGetMembers.addGroupName(group.getLocalKey());\n            gcGetMembers.addSourceId(\"g:gsa\");\n\n            WsGetMembersResults results = gcGetMembers.execute();\n\n            if (results == null || results.getResults() == null) {\n                if (LOGGER.isDebugEnabled()) {\n                    LOGGER\n                            .debug(\"No group-type members found for group with key \"\n                                    + group.getKey());\n                }\n                return Collections.<IEntityGroup> emptyList().iterator();\n            }\n\n            final List<IEntityGroup> members = new ArrayList<IEntityGroup>();\n            for (WsGetMembersResult wsg : results.getResults()) {\n                if (wsg.getWsSubjects() != null) {\n                    for (WsSubject wsSubject : wsg.getWsSubjects()) {\n                        if (validKey(wsSubject.getName())) {\n                            WsGroup wsGroup = findGroupFromKey(wsSubject\n                                    .getName());\n                            if (wsGroup != null) {\n                                IEntityGroup member = createUportalGroupFromGrouperGroup(wsGroup);\n                                members.add(member);\n                                if (LOGGER.isTraceEnabled()) {\n                                    LOGGER.trace(\"found IEntityGroup member: \"\n                                            + member);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            \n            return members.iterator();\n            \n        } catch (Exception e) {\n            LOGGER.warn(\"Exception while attempting to retrieve \"\n                    + \"member groups of group with key \" + group.getKey() \n                    + \" from Grouper web services\", e);\n            return Collections.<IGroupMember>emptyList().iterator();\n        }\n\n\t}","commit_id":"76bf08b46ec1f8dd4f9181b1d3d416af6322f692","url":"https://github.com/Jasig/uPortal"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tpublic Iterator findEntitiesForGroup(IEntityGroup group)\n\t\t\tthrows GroupsException {\n\t    \n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"Searching Grouper for members of the group with key: \" \n\t\t\t        + group.getKey());\n\t\t}\n\n        try {\n            \n            // execute a search for members of the specified group\n            GcGetMembers getGroupsMembers = new GcGetMembers();\n            getGroupsMembers.addGroupName(group.getLocalKey());\n            WsGetMembersResults results = getGroupsMembers.execute();\n            \n            if (results == null || results.getResults() == null\n                    || results.getResults().length == 0\n                    || results.getResults()[0].getWsSubjects() == null) {\n                LOGGER.debug(\"No members found for Grouper group with key \"\n                        + group.getLocalKey());\n                return Collections.<IGroupMember>emptyList().iterator();\n            }\n\n            WsSubject[] gInfos = results.getResults()[0].getWsSubjects();\n            final List<IGroupMember> members = new ArrayList<IGroupMember>(\n                    gInfos.length);\n            \n            // add each result to the member list\n            for (WsSubject gInfo : gInfos) {\n                \n                // TODO: Is there more reliable logic for determining the entity\n                // type of a Grouper result?\n\n                // if the member is a person group\n                if (gInfo.getName() != null && gInfo.getName().contains(\":\")) {\n                    LOGGER.trace(\"creating group member: \" + gInfo.getName());\n                    \n                    WsGroup wsGroup = findGroupFromKey(gInfo.getAttributeValue(4));\n                    if (wsGroup != null) {\n                      IEntityGroup member = createUportalGroupFromGrouperGroup(wsGroup);\n                      members.add(member);\n                    }\n                }\n                \n                // otherwise assume the member is an individual person \n                else {\n                    LOGGER.trace(\"creating leaf member: \" + gInfo.getId());\n                    IGroupMember member = new EntityImpl(gInfo.getId(), IPerson.class);\n                    members.add(member);\n                }\n\n            }\n\n            // return an iterator for the assembled group\n            return members.iterator();\n            \n        } catch (Exception e) {\n            LOGGER.warn(\"Exception while attempting to retrieve \"\n                    + \"member entities of group with key \" + group.getKey() \n                    + \" from Grouper web services\", e);\n            return Collections.<IGroupMember>emptyList().iterator();\n        }\n\n\t}","id":58334,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tpublic Iterator findEntitiesForGroup(IEntityGroup group)\n\t\t\tthrows GroupsException {\n\t    \n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"Searching Grouper for members of the group with key: \" \n\t\t\t        + group.getKey());\n\t\t}\n\n        try {\n            \n            // execute a search for members of the specified group\n            GcGetMembers getGroupsMembers = new GcGetMembers();\n            getGroupsMembers.addGroupName(group.getLocalKey());\n            WsGetMembersResults results = getGroupsMembers.execute();\n            \n            if (results == null || results.getResults() == null\n                    || results.getResults().length == 0\n                    || results.getResults()[0].getWsSubjects() == null) {\n                LOGGER.debug(\"No members found for Grouper group with key \"\n                        + group.getLocalKey());\n                return Collections.<IGroupMember>emptyList().iterator();\n            }\n\n            WsSubject[] gInfos = results.getResults()[0].getWsSubjects();\n            final List<IGroupMember> members = new ArrayList<IGroupMember>(\n                    gInfos.length);\n            \n            // add each result to the member list\n            for (WsSubject gInfo : gInfos) {\n                \n                // if the member is a person group\n                if (StringUtils.equals(gInfo.getSourceId(), \"g:gsa\")) {\n                  \n                  if (validKey(gInfo.getName())) {\n                    LOGGER.trace(\"creating group member: \" + gInfo.getName());\n                    \n                    WsGroup wsGroup = findGroupFromKey(gInfo.getName());\n                    if (wsGroup != null) {\n                      IEntityGroup member = createUportalGroupFromGrouperGroup(wsGroup);\n                      members.add(member);\n                    }\n                }\n                }\n                \n                // otherwise assume the member is an individual person \n                else {\n                    LOGGER.trace(\"creating leaf member: \" + gInfo.getId());\n                    IGroupMember member = new EntityImpl(gInfo.getId(), IPerson.class);\n                    members.add(member);\n                }\n\n            }\n\n            // return an iterator for the assembled group\n            return members.iterator();\n            \n        } catch (Exception e) {\n            LOGGER.warn(\"Exception while attempting to retrieve \"\n                    + \"member entities of group with key \" + group.getKey() \n                    + \" from Grouper web services\", e);\n            return Collections.<IGroupMember>emptyList().iterator();\n        }\n\n\t}","commit_id":"76bf08b46ec1f8dd4f9181b1d3d416af6322f692","url":"https://github.com/Jasig/uPortal"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tpublic Iterator findContainingGroups(IGroupMember gm)\n\t\t\tthrows GroupsException {\n\t    \n\t\tif (gm.isGroup()) {\n\n\t\t    // TODO: need to add support for retrieving the parents of \n\t\t    // groups\n\t\t\treturn new LinkedList<IEntityGroup>().iterator();\n\n\t\t} else {\n\n\t\t    GcGetGroups getGroups = new GcGetGroups();\n\n\t\t    // Determine the key to use for this entity.  If the entity is a\n\t\t    // group, we should use the group's local key (excluding the \n\t\t    // \"grouper.\" portion of the full key.  If the entity is not a \n\t\t    // group type, just use the key.\n\t        String key = null;\n\t        if (gm instanceof IEntityGroup) {\n\t            key = ((IEntityGroup) gm).getLocalKey();\n\t        } else {\n\t            key = gm.getKey();\n\t        }\n            getGroups.addSubjectIdentifier(key);\n\n\t        if (LOGGER.isDebugEnabled()) {\n\t            LOGGER.debug(\"Searching Grouper for parent groups of the entity with key: \"\n\t                    + key);\n\t        }\n\n\t        try {\n\t            \n\t            WsGetGroupsResults results = getGroups.execute();\n\n\t            final List<IEntityGroup> parents = new LinkedList<IEntityGroup>();\n\n\t            if (results == null || results.getResults() == null || results.getResults().length == 0) {\n\t                LOGGER.debug(\"Grouper service returned no matches for key \" + key);\n\t                return parents.iterator();\n\t            }\n\t            \n\t            // add each returned group to the parents list\n                for (WsGetGroupsResult wsg : results.getResults()) {\n                    if (wsg.getWsGroups() != null) {\n                        for (WsGroup g : wsg.getWsGroups()) {\n                            if (LOGGER.isDebugEnabled()) {\n                                LOGGER.trace(\"Retrieved group: \" + g.getName());\n                            }\n                            IEntityGroup parent = createUportalGroupFromGrouperGroup(g);\n                        }\n                    }\n                }\n\n\t            if (LOGGER.isDebugEnabled()) {\n\t                LOGGER.debug(\"Retrieved \" + parents.size() + \" parent groups of entity with key \" + key);\n\t            }\n\n\t            return parents.iterator();\n\t            \n\t        } catch (Exception e) {\n                LOGGER.warn(\"Exception while attempting to retrieve \"\n                        + \"parents for entity with key \" + key\n                        + \" from Grouper web services\", e);\n\t            return Collections.<IEntityGroup>emptyList().iterator();\n\t        }\n\n\t\t}\n\t}","id":58335,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tpublic Iterator findContainingGroups(IGroupMember gm)\n\t\t\tthrows GroupsException {\n\t    \n        final List<IEntityGroup> parents = new LinkedList<IEntityGroup>();\n\n        GcGetGroups getGroups = new GcGetGroups();\n\n        String uportalStem = getStemPrefix();\n\n        // if only searching in a specific stem\n        if (!StringUtils.isBlank(uportalStem)) {\n            getGroups.assignStemScope(StemScope.ALL_IN_SUBTREE);\n            getGroups.assignWsStemLookup(new WsStemLookup(uportalStem, null));\n\n        }\n\n        String key = null;\n        String subjectSourceId = null;\n        if (gm.isGroup()) {\n\n            key = ((IEntityGroup) gm).getLocalKey();\n\n            if (!validKey(key)) {\n                return parents.iterator();\n            }\n            subjectSourceId = \"g:gsa\";\n        } else {\n\n            // Determine the key to use for this entity. If the entity is a\n            // group, we should use the group's local key (excluding the\n            // \"grouper.\" portion of the full key. If the entity is not a\n            // group type, just use the key.\n            key = gm.getKey();\n        }\n        getGroups.addSubjectLookup(new WsSubjectLookup(null, subjectSourceId,\n                key));\n\n\t        if (LOGGER.isDebugEnabled()) {\n\t            LOGGER.debug(\"Searching Grouper for parent groups of the entity with key: \"\n\t                    + key);\n\t        }\n\n\t        try {\n\t            \n\t            WsGetGroupsResults results = getGroups.execute();\n\n\n\t            if (results == null || results.getResults() == null || results.getResults().length != 1) {\n\t                LOGGER.debug(\"Grouper service returned no matches for key \" + key);\n\t                return parents.iterator();\n\t            }\n\t            WsGetGroupsResult wsg = results.getResults()[0];\n                    if (wsg.getWsGroups() != null) {\n                        for (WsGroup g : wsg.getWsGroups()) {\n                            if (LOGGER.isDebugEnabled()) {\n                                LOGGER.trace(\"Retrieved group: \" + g.getName());\n                            }\n                            IEntityGroup parent = createUportalGroupFromGrouperGroup(g);\n                      parents.add(parent);\n                    }\n                }\n\n\t            if (LOGGER.isDebugEnabled()) {\n\t                LOGGER.debug(\"Retrieved \" + parents.size() + \" parent groups of entity with key \" + key);\n\t            }\n\n\t        } catch (Exception e) {\n                LOGGER.warn(\"Exception while attempting to retrieve \"\n                        + \"parents for entity with key \" + key\n                        + \" from Grouper web services\", e);\n\t            return Collections.<IEntityGroup>emptyList().iterator();\n\t        }\n\n\t\treturn parents.iterator();\n\t}","commit_id":"76bf08b46ec1f8dd4f9181b1d3d416af6322f692","url":"https://github.com/Jasig/uPortal"},{"original_method":"public boolean contains(IEntityGroup group, IGroupMember member)\n\t\t\tthrows GroupsException {\n\t    // TODO: Original implementation simply returned the existence of \n\t    // the member group in the Grouper service.  We need to instead\n\t    // determine if the parent group contains the member.\n\t\treturn false;\n\t}","id":58336,"modified_method":"public boolean contains(IEntityGroup group, IGroupMember member)\n\t\t\tthrows GroupsException {\n    \n        String groupContainerName = group.getLocalKey();\n        String groupMemberName = member.getKey();\n\n        if (!validKey(groupContainerName)\n                || !validKey(groupMemberName)) {\n            return false;\n        }\n\n        GcHasMember gcHasMember = new GcHasMember();\n        gcHasMember.assignGroupName(groupContainerName);\n        gcHasMember.addSubjectLookup(new WsSubjectLookup(null, \"g:gsa\",\n                groupMemberName));\n        WsHasMemberResults wsHasMemberResults = gcHasMember.execute();\n        if (GrouperClientUtils.length(wsHasMemberResults.getResults()) == 1) {\n            WsHasMemberResult wsHasMemberResult = wsHasMemberResults\n                    .getResults()[0];\n            return StringUtils.equals(\"IS_MEMBER\", wsHasMemberResult\n                    .getResultMetadata().getResultCode());\n        }\n        return false;\n\t}","commit_id":"76bf08b46ec1f8dd4f9181b1d3d416af6322f692","url":"https://github.com/Jasig/uPortal"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tpublic EntityIdentifier[] searchForEntities(String query, int method,\n\t\t\tClass type) throws GroupsException {\n        throw new UnsupportedOperationException(\n            \"Entity search is not supported by the Grouper groups service\");\n\t}","id":58337,"modified_method":"@SuppressWarnings(\"unchecked\")\n    public EntityIdentifier[] searchForEntities(String query, int method,\n            Class type) throws GroupsException {\n        return new EntityIdentifier[]{};\n    }","commit_id":"76bf08b46ec1f8dd4f9181b1d3d416af6322f692","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * Parse and extract email messages from the pst/ost file.\n     * \n     * @param file A pst or ost file.\n     * @return ParseResult: OK on success, ERROR on an error, ENCRYPT if failed because the file is encrypted.\n     */\n    public ParseResult parse(File file) {\n        PSTFile pstFile;\n        try {\n            pstFile = new PSTFile(file);\n            processFolder(pstFile.getRootFolder(), \"\\\\\", true);\n            return ParseResult.OK;\n        } catch (PSTException | IOException ex) {\n            String msg = file.getName() + \"Failed to create internal java-libpst PST file to parse: \" + ex.getMessage();\n            logger.log(Level.WARNING, msg);\n            return ParseResult.ERROR;\n        } catch (IllegalArgumentException ex) {\n            logger.log(Level.INFO, \"Found encrypted PST file.\");\n            return ParseResult.ENCRYPT;\n        }\n    }","id":58338,"modified_method":"/**\n     * Parse and extract email messages from the pst/ost file.\n     * \n     * @param file A pst or ost file.\n     * @return ParseResult: OK on success, ERROR on an error, ENCRYPT if failed because the file is encrypted.\n     */\n    public ParseResult parse(File file) {\n        PSTFile pstFile;\n        try {\n            pstFile = new PSTFile(file);\n            processFolder(pstFile.getRootFolder(), \"\\\\\", true);\n            return ParseResult.OK;\n        } catch (PSTException | IOException ex) {\n            String msg = file.getName() + \": Failed to create internal java-libpst PST file to parse:\\n\" + ex.getMessage();\n            logger.log(Level.WARNING, msg);\n            return ParseResult.ERROR;\n        } catch (IllegalArgumentException ex) {\n            logger.log(Level.INFO, \"Found encrypted PST file.\");\n            return ParseResult.ENCRYPT;\n        }\n    }","commit_id":"20623389beb3331fae8444d8320d4a5aacdcb068","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"Data(String fileName, Data parent) {\n                this.fileName = fileName;\n                this.parent = parent;\n                this.localRelPath = parent.localRelPath + \"/\" + fileName;\n                //new child derived file will be set by unpack() method\n                parent.children.add(this);\n\n            }","id":58339,"modified_method":"Data(String fileName, Data parent) {\n                this.fileName = fileName;\n                this.parent = parent;\n                this.localRelPath = parent.localRelPath + File.separator + fileName;\n                //new child derived file will be set by unpack() method\n                parent.children.add(this);\n\n            }","commit_id":"20623389beb3331fae8444d8320d4a5aacdcb068","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n    public void init(IngestModuleInit initContext) {\n        services = IngestServices.getDefault();\n    }","id":58340,"modified_method":"@Override\n    public void init(IngestModuleInit initContext) {\n        services = IngestServices.getDefault();\n        fileManager = Case.getCurrentCase().getServices().getFileManager();\n    }","commit_id":"20623389beb3331fae8444d8320d4a5aacdcb068","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Add an artifact to the AbstractFile representing the email message\n     * retrieved from an outlook data file.\n     * \n     * @param abstractFile The outlook data file.\n     * @param email The email message.\n     * @param localPath The path to the email message within the data files directory structure.\n     * @return true if the artifact was created and added successfully.\n     */\n    private boolean addPstArtifact(AbstractFile abstractFile, PSTMessage email, String localPath) {\n        List<BlackboardAttribute> bbattributes = new ArrayList<>();\n\n        String to = email.getDisplayTo();\n        String cc = email.getDisplayCC();\n        String bcc = email.getDisplayBCC();\n        String from = getPstFromAttr(email.getSenderName(), email.getSenderEmailAddress());\n        Date date = email.getMessageDeliveryTime();\n        long dateL = ((date == null) ? -1 : date.getTime() / 1000);\n        String body = email.getBody();\n        String bodyHTML = email.getBodyHTML();\n        String rtf = \"\";\n        try {\n             rtf = email.getRTFBody();\n        } catch (PSTException | IOException ex) {\n            logger.log(Level.INFO, \"Failed to get RTF content from pst email.\");\n        }\n        String subject = email.getSubject();\n        \n        if (email.hasAttachments()) {\n            handlePstAttachments(abstractFile, email);\n        }\n        \n        if (to.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_TO.getTypeID(), MODULE_NAME, to));\n        }\n        if (cc.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_CC.getTypeID(), MODULE_NAME, cc));\n        }\n        if (bcc.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_BCC.getTypeID(), MODULE_NAME, bcc));\n        }\n        if (from.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_FROM.getTypeID(), MODULE_NAME, from));\n        }\n        if (dateL > 0) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_RCVD.getTypeID(), MODULE_NAME, dateL));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_SENT.getTypeID(), MODULE_NAME, dateL));\n        }\n        if (body.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_CONTENT_PLAIN.getTypeID(), MODULE_NAME, body));\n        }\n        if (bodyHTML.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_CONTENT_HTML.getTypeID(), MODULE_NAME, bodyHTML));\n        }\n        if (rtf.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_CONTENT_RTF.getTypeID(), MODULE_NAME, rtf));\n        }\n        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_MSG_ID.getTypeID(), MODULE_NAME, email.getDescriptorNodeId()));\n        if (subject.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_SUBJECT.getTypeID(), MODULE_NAME, subject));\n        }\n        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH.getTypeID(), MODULE_NAME, localPath));\n        \n        try {\n            BlackboardArtifact bbart = abstractFile.newArtifact(BlackboardArtifact.ARTIFACT_TYPE.TSK_EMAIL_MSG);\n            bbart.addAttributes(bbattributes);\n            return true;\n        } catch (TskCoreException ex) {\n            logger.log(Level.WARNING, null, ex);\n            return false;\n        }\n    }","id":58341,"modified_method":"/**\n     * Add an artifact to the AbstractFile representing the email message\n     * retrieved from an outlook data file.\n     * \n     * @param abstractFile The outlook data file.\n     * @param email The email message.\n     * @param localPath The path to the email message within the data files directory structure.\n     * @return true if the artifact was created and added successfully.\n     */\n    private boolean addPstArtifact(AbstractFile abstractFile, PSTMessage email, String localPath) {\n        List<BlackboardAttribute> bbattributes = new ArrayList<>();\n\n        String to = email.getDisplayTo();\n        String cc = email.getDisplayCC();\n        String bcc = email.getDisplayBCC();\n        String from = getPstFromAttr(email.getSenderName(), email.getSenderEmailAddress());\n        Date date = email.getMessageDeliveryTime();\n        long dateL = ((date == null) ? -1 : date.getTime() / 1000);\n        String body = email.getBody();\n        String bodyHTML = email.getBodyHTML();\n        String rtf = \"\";\n        try {\n             rtf = email.getRTFBody();\n        } catch (PSTException | IOException ex) {\n            logger.log(Level.INFO, \"Failed to get RTF content from pst email.\");\n        }\n        String subject = email.getSubject();\n        \n        if (to.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_TO.getTypeID(), MODULE_NAME, to));\n        }\n        if (cc.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_CC.getTypeID(), MODULE_NAME, cc));\n        }\n        if (bcc.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_BCC.getTypeID(), MODULE_NAME, bcc));\n        }\n        if (from.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_FROM.getTypeID(), MODULE_NAME, from));\n        }\n        if (dateL > 0) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_RCVD.getTypeID(), MODULE_NAME, dateL));\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_DATETIME_SENT.getTypeID(), MODULE_NAME, dateL));\n        }\n        if (body.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_CONTENT_PLAIN.getTypeID(), MODULE_NAME, body));\n        }\n        if (bodyHTML.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_CONTENT_HTML.getTypeID(), MODULE_NAME, bodyHTML));\n        }\n        if (rtf.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_EMAIL_CONTENT_RTF.getTypeID(), MODULE_NAME, rtf));\n        }\n        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_MSG_ID.getTypeID(), MODULE_NAME, email.getDescriptorNodeId()));\n        if (subject.isEmpty() == false) {\n            bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_SUBJECT.getTypeID(), MODULE_NAME, subject));\n        }\n        bbattributes.add(new BlackboardAttribute(ATTRIBUTE_TYPE.TSK_PATH.getTypeID(), MODULE_NAME, localPath));\n        \n        try {\n            BlackboardArtifact bbart = abstractFile.newArtifact(BlackboardArtifact.ARTIFACT_TYPE.TSK_EMAIL_MSG);\n            bbart.addAttributes(bbattributes);\n            return true;\n        } catch (TskCoreException ex) {\n            logger.log(Level.WARNING, null, ex);\n            return false;\n        }\n    }","commit_id":"20623389beb3331fae8444d8320d4a5aacdcb068","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Extract attachments from the email to the temp folder.\n     */\n    private void handlePstAttachments(AbstractFile abstractFile, PSTMessage email) {\n        int numberOfAttachments = email.getNumberOfAttachments();\n        for (int x = 0; x < numberOfAttachments; x++) {\n            try {\n                PSTAttachment attach = email.getAttachment(x);\n                InputStream attachmentStream = attach.getFileInputStream();\n                // both long and short filenames can be used for attachments\n                String filename = attach.getLongFilename();\n                if (filename.isEmpty()) {\n                    filename = attach.getFilename();\n                }\n                String outPath = getTempPath() + File.separator + abstractFile.getId() + \"-\" + email.getDescriptorNodeId() + \"-\" + x + \"-\" + filename;\n                FileOutputStream out = new FileOutputStream(outPath);\n                // 8176 is the block size used internally and should give the best performance\n                int bufferSize = 8176;\n                byte[] buffer = new byte[bufferSize];\n                int count = attachmentStream.read(buffer);\n                while (count == bufferSize) {\n                    out.write(buffer);\n                    count = attachmentStream.read(buffer);\n                }\n                byte[] endBuffer = new byte[count];\n                System.arraycopy(buffer, 0, endBuffer, 0, count);\n                out.write(endBuffer);\n                out.close();\n                attachmentStream.close();\n            } catch (PSTException | IOException ex) {\n                IngestMessage msg = IngestMessage.createErrorMessage(messageId++, this, getName(), \"Failed to extract attachment from \" + abstractFile.getName());\n                services.postMessage(msg);\n                logger.log(Level.WARNING, \"Failed to extract attachment.\");\n            }\n        }\n    }","id":58342,"modified_method":"/**\n     * Extracts attachments and creates derived files.\n     * \n     * @param abstractFile\n     * @param email\n     * @param toPopulate derived files should be added to this list when created.\n     */\n    private void handlePstAttachments(AbstractFile abstractFile, PSTMessage email, List<AbstractFile> toPopulate) {\n        int numberOfAttachments = email.getNumberOfAttachments();\n        String outputDirPath = getModuleOutputPath() + File.separator;\n        for (int x = 0; x < numberOfAttachments; x++) {\n            try {\n                PSTAttachment attach = email.getAttachment(x);\n                long size = attach.getAttachSize();\n                if (size >= services.getFreeDiskSpace()) {\n                    continue;\n                }\n                // both long and short filenames can be used for attachments\n                String filename = attach.getLongFilename();\n                if (filename.isEmpty()) {\n                    filename = attach.getFilename();\n                }\n                filename = email.getDescriptorNodeId() + \"-\" + filename;\n                String outPath = outputDirPath + filename;\n                extractPstAttachment(attach, outPath);\n                \n                long crTime = attach.getCreationTime().getTime() / 1000;\n                long mTime = attach.getModificationTime().getTime() / 1000;\n                String relPath = getRelModuleOutputPath() + File.separator + filename;\n                \n                DerivedFile df = fileManager.addDerivedFile(filename, relPath, \n                        size, 0L, crTime, 0L, mTime, true, abstractFile, \"\", \n                        MODULE_NAME, MODULE_VERSION, \"\");\n                \n                toPopulate.add(df);\n            } catch (PSTException | IOException ex) {\n                IngestMessage msg = IngestMessage.createErrorMessage(messageId++, this, getName(), \"Failed to extract attachment from \" + abstractFile.getName());\n                services.postMessage(msg);\n                logger.log(Level.WARNING, \"Failed to extract attachment.\");\n            } catch (TskCoreException ex) {\n                logger.log(Level.WARNING, \"Failed to create derived file under abstract file: \" + abstractFile.getName());\n            } catch (Exception ex) {\n                ex.printStackTrace();\n            }\n        }\n    }","commit_id":"20623389beb3331fae8444d8320d4a5aacdcb068","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"@Override\n    public ProcessResult process(PipelineContext<IngestModuleAbstractFile>ingestContext, AbstractFile abstractFile) {\n        \n        // skip known\n        if (abstractFile.getKnown().equals(TskData.FileKnown.KNOWN)) {\n            return ProcessResult.OK; \n        }\n        \n        //skip unalloc\n        if(abstractFile.getType().equals(TskData.TSK_DB_FILES_TYPE_ENUM.UNALLOC_BLOCKS)) {\n            return ProcessResult.OK;\n        }\n        \n        if (abstractFile.isDirNameFlagSet(TskData.TSK_FS_NAME_FLAG_ENUM.UNALLOC)) {\n            return ProcessResult.OK;\n        }\n\n        //file has read error, stop processing it\n        // @@@ I don't really like this\n        // we don't know if Hash was run or if it had lookup errors \n        IngestModuleAbstractFile.ProcessResult hashDBResult =\n                services.getAbstractFileModuleResult(hashDBModuleName);\n        if (hashDBResult == IngestModuleAbstractFile.ProcessResult.ERROR) {\n            return ProcessResult.ERROR;  \n        }\n\n        if (abstractFile.isVirtual()) {\n            return ProcessResult.OK;\n        }\n        \n        // check its signature\n        boolean isMbox = false;\n        try {\n            byte[] t = new byte[64];\n            if (abstractFile.getSize() > 64) {\n                int byteRead = abstractFile.read(t, 0, 64);\n                if (byteRead > 0) {\n                    isMbox = ThunderbirdEmailParser.isValidMimeTypeMbox(t);\n                }\n            }\n        } catch (TskException ex) {\n            logger.log(Level.WARNING, null, ex);\n        }\n        \n        if (isMbox) {\n            return processMBox(abstractFile);\n        }\n        \n        int extIndex = abstractFile.getName().lastIndexOf(\".\");\n        String ext = (extIndex == -1 ? \"\" : abstractFile.getName().substring(extIndex));\n        if (PstParser.isPstFile(abstractFile)) {\n            return processPst(abstractFile);\n        }\n        \n        return ProcessResult.OK;\n    }","id":58343,"modified_method":"@Override\n    public ProcessResult process(PipelineContext<IngestModuleAbstractFile>ingestContext, AbstractFile abstractFile) {\n        \n        // skip known\n        if (abstractFile.getKnown().equals(TskData.FileKnown.KNOWN)) {\n            return ProcessResult.OK; \n        }\n        \n        //skip unalloc\n        if(abstractFile.getType().equals(TskData.TSK_DB_FILES_TYPE_ENUM.UNALLOC_BLOCKS)) {\n            return ProcessResult.OK;\n        }\n        \n        if (abstractFile.isDirNameFlagSet(TskData.TSK_FS_NAME_FLAG_ENUM.UNALLOC)) {\n            return ProcessResult.OK;\n        }\n\n        //file has read error, stop processing it\n        // @@@ I don't really like this\n        // we don't know if Hash was run or if it had lookup errors \n        IngestModuleAbstractFile.ProcessResult hashDBResult =\n                services.getAbstractFileModuleResult(hashDBModuleName);\n        if (hashDBResult == IngestModuleAbstractFile.ProcessResult.ERROR) {\n            return ProcessResult.ERROR;  \n        }\n\n        if (abstractFile.isVirtual()) {\n            return ProcessResult.OK;\n        }\n        \n        // check its signature\n        boolean isMbox = false;\n        try {\n            byte[] t = new byte[64];\n            if (abstractFile.getSize() > 64) {\n                int byteRead = abstractFile.read(t, 0, 64);\n                if (byteRead > 0) {\n                    isMbox = ThunderbirdEmailParser.isValidMimeTypeMbox(t);\n                }\n            }\n        } catch (TskException ex) {\n            logger.log(Level.WARNING, null, ex);\n        }\n        \n        if (isMbox) {\n            return processMBox(abstractFile);\n        }\n        \n        int extIndex = abstractFile.getName().lastIndexOf(\".\");\n        String ext = (extIndex == -1 ? \"\" : abstractFile.getName().substring(extIndex));\n        if (PstParser.isPstFile(abstractFile)) {\n            return processPst(ingestContext, abstractFile);\n        }\n        \n        return ProcessResult.OK;\n    }","commit_id":"20623389beb3331fae8444d8320d4a5aacdcb068","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * @see org.jasig.portal.groups.IEntityStore#newInstance(java.lang.String)\n     */\n    public IEntity newInstance(String key) throws GroupsException {\n        return new EntityImpl(key, null);\n    }","id":58344,"modified_method":"/**\n\t * @see org.jasig.portal.groups.IEntityStore#newInstance(java.lang.String)\n\t */\n\tpublic IEntity newInstance(String key) throws GroupsException {\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"creating new entity from key: \" + key);\n\t\t}\n\n\t\treturn new EntityImpl(key, null);\n\t}","commit_id":"9a04b6c5b26f0de705b2f89a9e8a9195b7e0e21f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * Find the Grouper group matching the specified key.\n     * \n     * @param key\n     * @return the group or null\n     */\n    protected WsGroup findGroupFromKey(String key) {\n        GcFindGroups gcFindGroups = new GcFindGroups();\n        gcFindGroups.addGroupName(key);\n        WsFindGroupsResults results = gcFindGroups.execute();\n\n        // if no results were returned, return null\n        if (results == null || results.getGroupResults() == null\n                || results.getGroupResults().length == 0) {\n            LOGGER.debug(\"Grouper service returned no matches for key \" + key);\n            return null;\n        }\n\n        // construct a uPortal group representation of the first returned\n        // result\n        WsGroup wsGroup = results.getGroupResults()[0];\n        return wsGroup;\n    }","id":58345,"modified_method":"/**\n\t * Find the Grouper group matching the specified key. the key should find a\n\t * single exact match or null.\n\t * \n\t * @param key\n\t * @return the group or null\n\t */\n\tprotected WsGroup findGroupFromKey(String key) {\n\n\t\tWsGroup wsGroup = null;\n\n\t\tif (key != null) {\n\n\t\t\tGcFindGroups gcFindGroups = new GcFindGroups();\n\t\t\tgcFindGroups.addGroupName(key);\n\t\t\tWsFindGroupsResults results = gcFindGroups.execute();\n\n\t\t\t// if no results were returned, return null\n\t\t\tif (results != null && results.getGroupResults() != null\n\t\t\t\t\t&& results.getGroupResults().length > 0) {\n\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"found group from key \" + key + \": \"\n\t\t\t\t\t\t\t+ results.getGroupResults()[0]);\n\t\t\t\t}\n\n\t\t\t\twsGroup = results.getGroupResults()[0];\n\t\t\t}\n\t\t}\n\n\t\treturn wsGroup;\n\t}","commit_id":"9a04b6c5b26f0de705b2f89a9e8a9195b7e0e21f","url":"https://github.com/Jasig/uPortal"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    public Iterator findContainingGroups(IGroupMember gm)\n            throws GroupsException {\n        \n        final List<IEntityGroup> parents = new LinkedList<IEntityGroup>();\n\n        GcGetGroups getGroups = new GcGetGroups();\n\n        String uportalStem = getStemPrefix();\n\n        // if only searching in a specific stem\n        if (!StringUtils.isBlank(uportalStem)) {\n            getGroups.assignStemScope(StemScope.ALL_IN_SUBTREE);\n            getGroups.assignWsStemLookup(new WsStemLookup(uportalStem, null));\n\n        }\n\n        String key = null;\n        String subjectSourceId = null;\n        if (gm.isGroup()) {\n\n            key = ((IEntityGroup) gm).getLocalKey();\n\n            if (!validKey(key)) {\n                return parents.iterator();\n            }\n            subjectSourceId = \"g:gsa\";\n        } else {\n\n            // Determine the key to use for this entity. If the entity is a\n            // group, we should use the group's local key (excluding the\n            // \"grouper.\" portion of the full key. If the entity is not a\n            // group type, just use the key.\n            key = gm.getKey();\n        }\n        getGroups.addSubjectLookup(new WsSubjectLookup(null, subjectSourceId,\n                key));\n\n            if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(\"Searching Grouper for parent groups of the entity with key: \"\n                        + key);\n            }\n\n            try {\n                \n                WsGetGroupsResults results = getGroups.execute();\n\n\n                if (results == null || results.getResults() == null || results.getResults().length != 1) {\n                    LOGGER.debug(\"Grouper service returned no matches for key \" + key);\n                    return parents.iterator();\n                }\n                WsGetGroupsResult wsg = results.getResults()[0];\n                    if (wsg.getWsGroups() != null) {\n                        for (WsGroup g : wsg.getWsGroups()) {\n                            if (LOGGER.isDebugEnabled()) {\n                                LOGGER.trace(\"Retrieved group: \" + g.getName());\n                            }\n                            IEntityGroup parent = createUportalGroupFromGrouperGroup(g);\n                      parents.add(parent);\n                    }\n                }\n\n                if (LOGGER.isDebugEnabled()) {\n                    LOGGER.debug(\"Retrieved \" + parents.size() + \" parent groups of entity with key \" + key);\n                }\n\n            } catch (Exception e) {\n                LOGGER.warn(\"Exception while attempting to retrieve \"\n                        + \"parents for entity with key \" + key\n                        + \" from Grouper web services\", e);\n                return Collections.<IEntityGroup>emptyList().iterator();\n            }\n\n        return parents.iterator();\n    }","id":58346,"modified_method":"public Iterator<IEntityGroup> findContainingGroups(IGroupMember gm)\n\t\t\tthrows GroupsException {\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"finding containing groups for: \" + gm);\n\t\t}\n\n\t\tfinal List<IEntityGroup> parents = new LinkedList<IEntityGroup>();\n\n\t\tGcGetGroups getGroups = new GcGetGroups();\n\n\t\tString uportalStem = getStemPrefix();\n\n\t\t// if only searching in a specific stem\n\t\tif (!StringUtils.isBlank(uportalStem)) {\n\t\t\tgetGroups.assignStemScope(StemScope.ALL_IN_SUBTREE);\n\t\t\tgetGroups.assignWsStemLookup(new WsStemLookup(uportalStem, null));\n\n\t\t}\n\n\t\tString key = null;\n\t\tString subjectSourceId = null;\n\t\tif (gm.isGroup()) {\n\n\t\t\tkey = ((IEntityGroup) gm).getLocalKey();\n\n\t\t\tif (!validKey(key)) {\n\t\t\t\treturn parents.iterator();\n\t\t\t}\n\t\t\tsubjectSourceId = \"g:gsa\";\n\n\t\t} else {\n\n\t\t\t// Determine the key to use for this entity. If the entity is a\n\t\t\t// group, we should use the group's local key (excluding the\n\t\t\t// \"grouper.\" portion of the full key. If the entity is not a\n\t\t\t// group type, just use the key.\n\t\t\tkey = gm.getKey();\n\t\t}\n\n\t\tgetGroups.addSubjectLookup(new WsSubjectLookup(null, subjectSourceId,\n\t\t\t\tkey));\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"Searching Grouper for parent groups of the entity with key: \"\n\t\t\t\t\t+ key);\n\t\t}\n\n\t\ttry {\n\n\t\t\tWsGetGroupsResults results = getGroups.execute();\n\n\t\t\tif (results == null || results.getResults() == null\n\t\t\t\t\t|| results.getResults().length != 1) {\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"Grouper service returned no matches for key \"\n\t\t\t\t\t\t\t+ key);\n\t\t\t\t}\n\t\t\t\treturn parents.iterator();\n\t\t\t}\n\t\t\tWsGetGroupsResult wsg = results.getResults()[0];\n\t\t\tif (wsg.getWsGroups() != null) {\n\t\t\t\tfor (WsGroup g : wsg.getWsGroups()) {\n\t\t\t\t\tif (LOGGER.isTraceEnabled()) {\n\t\t\t\t\t\tLOGGER.trace(\"Retrieved group: \" + g.getName());\n\t\t\t\t\t}\n\t\t\t\t\tIEntityGroup parent = createUportalGroupFromGrouperGroup(g);\n\t\t\t\t\tparents.add(parent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\tLOGGER.debug(\"Retrieved \" + parents.size()\n\t\t\t\t\t\t+ \" parent groups of entity with key \" + key);\n\t\t\t}\n\n\t\t} catch (Exception e) {\n\t\t\tLOGGER.warn(\"Exception while attempting to retrieve \"\n\t\t\t\t\t+ \"parents for entity with key \" + key\n\t\t\t\t\t+ \" from Grouper web services: \" + e.getMessage());\n\t\t\treturn Collections.<IEntityGroup> emptyList().iterator();\n\t\t}\n\n\t\treturn parents.iterator();\n\t}","commit_id":"9a04b6c5b26f0de705b2f89a9e8a9195b7e0e21f","url":"https://github.com/Jasig/uPortal"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    public String[] findMemberGroupKeys(IEntityGroup group)\n            throws GroupsException {\n        \n        // first the get an iterator for the member groups\n        final Iterator<IEntityGroup> it = findMemberGroups(group);\n        \n        // construct a list of group keys from this iterator\n        List<String> keys = new ArrayList<String>();\n        while (it.hasNext()) {\n            IEntityGroup eg = it.next();\n            keys.add(eg.getKey());\n        }\n        \n        // return an iterator over the assembled list\n        return keys.toArray(new String[keys.size()]);\n    }","id":58347,"modified_method":"@Override\n\tpublic String[] findMemberGroupKeys(IEntityGroup group)\n\t\t\tthrows GroupsException {\n\n\t\t// first the get an iterator for the member groups\n\t\tfinal Iterator<IEntityGroup> it = findMemberGroups(group);\n\n\t\t// construct a list of group keys from this iterator\n\t\tList<String> keys = new ArrayList<String>();\n\t\twhile (it.hasNext()) {\n\t\t\tIEntityGroup eg = it.next();\n\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\tLOGGER.debug(\"member group name: \" + eg.getName() + \", key:\"\n\t\t\t\t\t\t+ eg.getKey());\n\t\t\t}\n\t\t\tkeys.add(eg.getKey());\n\t\t}\n\n\t\t// return an iterator over the assembled list\n\t\treturn keys.toArray(new String[keys.size()]);\n\t}","commit_id":"9a04b6c5b26f0de705b2f89a9e8a9195b7e0e21f","url":"https://github.com/Jasig/uPortal"},{"original_method":"public boolean contains(IEntityGroup group, IGroupMember member)\n            throws GroupsException {\n    \n        String groupContainerName = group.getLocalKey();\n        String groupMemberName = member.getKey();\n\n        if (!validKey(groupContainerName)\n                || !validKey(groupMemberName)) {\n            return false;\n        }\n\n        GcHasMember gcHasMember = new GcHasMember();\n        gcHasMember.assignGroupName(groupContainerName);\n        gcHasMember.addSubjectLookup(new WsSubjectLookup(null, \"g:gsa\",\n                groupMemberName));\n        WsHasMemberResults wsHasMemberResults = gcHasMember.execute();\n        if (GrouperClientUtils.length(wsHasMemberResults.getResults()) == 1) {\n            WsHasMemberResult wsHasMemberResult = wsHasMemberResults\n                    .getResults()[0];\n            return StringUtils.equals(\"IS_MEMBER\", wsHasMemberResult\n                    .getResultMetadata().getResultCode());\n        }\n        return false;\n    }","id":58348,"modified_method":"@Override\n\tpublic boolean contains(IEntityGroup group, IGroupMember member)\n\t\t\tthrows GroupsException {\n\n\t\tString groupContainerName = group.getLocalKey();\n\t\tString groupMemberName = member.getKey();\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"groupContainerName: \" + groupContainerName);\n\t\t\tLOGGER.debug(\"groupMemberName: \" + groupMemberName);\n\t\t}\n\n\t\tif (!validKey(groupContainerName) || !validKey(groupMemberName)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tGcHasMember gcHasMember = new GcHasMember();\n\t\tgcHasMember.assignGroupName(groupContainerName);\n\t\tgcHasMember.addSubjectLookup(new WsSubjectLookup(null, \"g:gsa\",\n\t\t\t\tgroupMemberName));\n\t\tWsHasMemberResults wsHasMemberResults = gcHasMember.execute();\n\t\tif (GrouperClientUtils.length(wsHasMemberResults.getResults()) == 1) {\n\t\t\tWsHasMemberResult wsHasMemberResult = wsHasMemberResults\n\t\t\t\t\t.getResults()[0];\n\t\t\treturn StringUtils.equals(\"IS_MEMBER\", wsHasMemberResult\n\t\t\t\t\t.getResultMetadata().getResultCode());\n\t\t}\n\t\treturn false;\n\t}","commit_id":"9a04b6c5b26f0de705b2f89a9e8a9195b7e0e21f","url":"https://github.com/Jasig/uPortal"},{"original_method":"public IEntityGroup find(String key) throws GroupsException {\n\n\n        try {\n\n            // Search the Grouper server for groups with the specified local\n            // key\n            LOGGER.debug(\"Searching Grouper for a direct match for key: \" + key);\n            WsGroup wsGroup = findGroupFromKey(key);\n            if (wsGroup == null) {\n              return null;\n            }\n            IEntityGroup group = createUportalGroupFromGrouperGroup(wsGroup);\n            \n            if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(\"Retrieved group from the Grouper server matching key \"\n                        + key + \": \" + group.toString());\n            }\n            \n            // return the group\n            return group;\n            \n\n        } catch (Exception e) {\n            LOGGER.warn(\"Exception while attempting to retrieve \" \n                    + \"group with key \" + key + \" from Grouper web services\", e);\n            return null;\n        }\n\n    }","id":58349,"modified_method":"@Override\n\tpublic IEntityGroup find(String key) throws GroupsException {\n\n\t\tIEntityGroup group = null;\n\n\t\tif (key != null) {\n\n\t\t\ttry {\n\n\t\t\t\t// Search the Grouper server for groups with the specified local\n\t\t\t\t// key\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"Searching Grouper for a direct match for key: \"\n\t\t\t\t\t\t\t+ key);\n\t\t\t\t}\n\n\t\t\t\tWsGroup wsGroup = findGroupFromKey(key);\n\t\t\t\tif (wsGroup != null) {\n\n\t\t\t\t\tgroup = createUportalGroupFromGrouperGroup(wsGroup);\n\n\t\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\t\tLOGGER.debug(\"Retrieved group from the Grouper server matching key \"\n\t\t\t\t\t\t\t\t+ key + \": \" + group.toString());\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} catch (Exception e) {\n\t\t\t\tLOGGER.warn(\"Exception while attempting to retrieve \"\n\t\t\t\t\t\t+ \"group with key \" + key\n\t\t\t\t\t\t+ \" from Grouper web services: \" + e.getMessage());\n\t\t\t}\n\t\t}\n\n\t\t// return the group\n\t\treturn group;\n\t}","commit_id":"9a04b6c5b26f0de705b2f89a9e8a9195b7e0e21f","url":"https://github.com/Jasig/uPortal"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    public Iterator findEntitiesForGroup(IEntityGroup group)\n            throws GroupsException {\n        \n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"Searching Grouper for members of the group with key: \" \n                    + group.getKey());\n        }\n\n        try {\n            \n            // execute a search for members of the specified group\n            GcGetMembers getGroupsMembers = new GcGetMembers();\n            getGroupsMembers.addGroupName(group.getLocalKey());\n            WsGetMembersResults results = getGroupsMembers.execute();\n            \n            if (results == null || results.getResults() == null\n                    || results.getResults().length == 0\n                    || results.getResults()[0].getWsSubjects() == null) {\n                LOGGER.debug(\"No members found for Grouper group with key \"\n                        + group.getLocalKey());\n                return Collections.<IGroupMember>emptyList().iterator();\n            }\n\n            WsSubject[] gInfos = results.getResults()[0].getWsSubjects();\n            final List<IGroupMember> members = new ArrayList<IGroupMember>(\n                    gInfos.length);\n            \n            // add each result to the member list\n            for (WsSubject gInfo : gInfos) {\n                \n                // if the member is a person group\n                if (StringUtils.equals(gInfo.getSourceId(), \"g:gsa\")) {\n                  \n                  if (validKey(gInfo.getName())) {\n                    LOGGER.trace(\"creating group member: \" + gInfo.getName());\n                    \n                    WsGroup wsGroup = findGroupFromKey(gInfo.getName());\n                    if (wsGroup != null) {\n                      IEntityGroup member = createUportalGroupFromGrouperGroup(wsGroup);\n                      members.add(member);\n                    }\n                }\n                }\n                \n                // otherwise assume the member is an individual person \n                else {\n                    LOGGER.trace(\"creating leaf member: \" + gInfo.getId());\n                    IGroupMember member = new EntityImpl(gInfo.getId(), IPerson.class);\n                    members.add(member);\n                }\n\n            }\n\n            // return an iterator for the assembled group\n            return members.iterator();\n            \n        } catch (Exception e) {\n            LOGGER.warn(\"Exception while attempting to retrieve \"\n                    + \"member entities of group with key \" + group.getKey() \n                    + \" from Grouper web services\", e);\n            return Collections.<IGroupMember>emptyList().iterator();\n        }\n\n    }","id":58350,"modified_method":"public Iterator<IGroupMember> findEntitiesForGroup(IEntityGroup group)\n\t\t\tthrows GroupsException {\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"Searching Grouper for members of the group with key: \"\n\t\t\t\t\t+ group.getKey());\n\t\t}\n\n\t\ttry {\n\n\t\t\t// execute a search for members of the specified group\n\t\t\tGcGetMembers getGroupsMembers = new GcGetMembers();\n\t\t\tgetGroupsMembers.addGroupName(group.getLocalKey());\n\t\t\tgetGroupsMembers.assignIncludeSubjectDetail(true);\n\t\t\tWsGetMembersResults results = getGroupsMembers.execute();\n\n\t\t\tif (results == null || results.getResults() == null\n\t\t\t\t\t|| results.getResults().length == 0\n\t\t\t\t\t|| results.getResults()[0].getWsSubjects() == null) {\n\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"No members found for Grouper group with key \"\n\t\t\t\t\t\t\t+ group.getLocalKey());\n\t\t\t\t}\n\n\t\t\t\treturn Collections.<IGroupMember> emptyList().iterator();\n\t\t\t}\n\n\t\t\tWsSubject[] gInfos = results.getResults()[0].getWsSubjects();\n\t\t\tfinal List<IGroupMember> members = new ArrayList<IGroupMember>(\n\t\t\t\t\tgInfos.length);\n\n\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\tLOGGER.debug(\"Found \" + gInfos.length + \" members.\");\n\t\t\t}\n\n\t\t\t// add each result to the member list\n\t\t\tfor (WsSubject gInfo : gInfos) {\n\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"WsSubject id:\" + gInfo.getId() + \", name: \"\n\t\t\t\t\t\t\t+ gInfo.getName() + \", sourceId: \"\n\t\t\t\t\t\t\t+ gInfo.getSourceId());\n\t\t\t\t}\n\t\t\t\t// if the member is not a group\n\t\t\t\tif (!StringUtils.equals(gInfo.getSourceId(), \"g:gsa\")) {\n\n\t\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\t\tLOGGER.debug(\"creating leaf member:\" + gInfo.getId()\n\t\t\t\t\t\t\t\t+ \" and name: \" + gInfo.getName()\n\t\t\t\t\t\t\t\t+ \" from group: \" + group.getLocalKey());\n\t\t\t\t\t}\n\n\t\t\t\t\tIGroupMember member = new EntityImpl(gInfo.getName(),\n\t\t\t\t\t\t\tIPerson.class);\n\t\t\t\t\tmembers.add(member);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\tLOGGER.debug(\"returning \" + gInfos.length + \" members leafs.\");\n\t\t\t}\n\n\t\t\t// return an iterator for the assembled group\n\t\t\treturn members.iterator();\n\n\t\t} catch (Exception e) {\n\t\t\tLOGGER.warn(\"Exception while attempting to retrieve \"\n\t\t\t\t\t+ \"member entities of group with key \" + group.getKey()\n\t\t\t\t\t+ \" from Grouper web services: \" + e.getMessage());\n\t\t\treturn Collections.<IGroupMember> emptyList().iterator();\n\t\t}\n\n\t}","commit_id":"9a04b6c5b26f0de705b2f89a9e8a9195b7e0e21f","url":"https://github.com/Jasig/uPortal"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    public Iterator findMemberGroups(IEntityGroup group) throws GroupsException {\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"Searching for group-type members of group with key: \" \n                    + group.getKey());\n        }\n\n        try {\n            \n            if (!validKey(group.getLocalKey())) {\n                return Collections.<IEntityGroup> emptyList().iterator();\n            }\n\n            GcGetMembers gcGetMembers = new GcGetMembers();\n            gcGetMembers.addGroupName(group.getLocalKey());\n            gcGetMembers.addSourceId(\"g:gsa\");\n\n            WsGetMembersResults results = gcGetMembers.execute();\n\n            if (results == null || results.getResults() == null) {\n                if (LOGGER.isDebugEnabled()) {\n                    LOGGER\n                            .debug(\"No group-type members found for group with key \"\n                                    + group.getKey());\n                }\n                return Collections.<IEntityGroup> emptyList().iterator();\n            }\n\n            final List<IEntityGroup> members = new ArrayList<IEntityGroup>();\n            for (WsGetMembersResult wsg : results.getResults()) {\n                if (wsg.getWsSubjects() != null) {\n                    for (WsSubject wsSubject : wsg.getWsSubjects()) {\n                        if (validKey(wsSubject.getName())) {\n                            WsGroup wsGroup = findGroupFromKey(wsSubject\n                                    .getName());\n                            if (wsGroup != null) {\n                                IEntityGroup member = createUportalGroupFromGrouperGroup(wsGroup);\n                                members.add(member);\n                                if (LOGGER.isTraceEnabled()) {\n                                    LOGGER.trace(\"found IEntityGroup member: \"\n                                            + member);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            \n            return members.iterator();\n            \n        } catch (Exception e) {\n            LOGGER.warn(\"Exception while attempting to retrieve \"\n                    + \"member groups of group with key \" + group.getKey() \n                    + \" from Grouper web services\", e);\n            return Collections.<IGroupMember>emptyList().iterator();\n        }\n\n    }","id":58351,"modified_method":"@Override\n\tpublic Iterator<IEntityGroup> findMemberGroups(IEntityGroup group)\n\t\t\tthrows GroupsException {\n\n\t\t// this group comes from the find() method above.\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"Searching for group-type members of group with key: \"\n\t\t\t\t\t+ group.getLocalKey());\n\t\t}\n\n\t\ttry {\n\n\t\t\tif (!validKey(group.getLocalKey())) {\n\t\t\t\treturn Collections.<IEntityGroup> emptyList().iterator();\n\t\t\t}\n\n\t\t\tGcGetMembers gcGetMembers = new GcGetMembers();\n\t\t\tgcGetMembers.addGroupName(group.getLocalKey());\n\t\t\tgcGetMembers.assignIncludeSubjectDetail(true);\n\t\t\tgcGetMembers.addSourceId(\"g:gsa\");\n\n\t\t\tWsGetMembersResults results = gcGetMembers.execute();\n\n\t\t\tif (results == null || results.getResults() == null\n\t\t\t\t\t|| results.getResults().length == 0\n\t\t\t\t\t|| results.getResults()[0].getWsSubjects() == null) {\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"No group-type members found for group with key \"\n\t\t\t\t\t\t\t+ group.getKey());\n\t\t\t\t}\n\t\t\t\treturn Collections.<IEntityGroup> emptyList().iterator();\n\t\t\t}\n\n\t\t\tfinal List<IEntityGroup> members = new ArrayList<IEntityGroup>();\n\n\t\t\tWsSubject[] subjects = results.getResults()[0].getWsSubjects();\n\n\t\t\tfor (WsSubject wsSubject : subjects) {\n\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"WsSubject id: \" + wsSubject.getId()\n\t\t\t\t\t\t\t+ \", name: \" + wsSubject.getName());\n\t\t\t\t}\n\n\t\t\t\tif (validKey(wsSubject.getName())) {\n\t\t\t\t\t// was getName change to getID\n\t\t\t\t\tif (wsSubject.getId() != null) {\n\t\t\t\t\t\tWsGroup wsGroup = findGroupFromKey(wsSubject.getName());\n\t\t\t\t\t\tif (wsGroup != null) {\n\t\t\t\t\t\t\tIEntityGroup member = createUportalGroupFromGrouperGroup(wsGroup);\n\t\t\t\t\t\t\tmembers.add(member);\n\t\t\t\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\t\t\t\tLOGGER.debug(\"found IEntityGroup member: \"\n\t\t\t\t\t\t\t\t\t\t+ member);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\tLOGGER.debug(\"returning: \" + members.size() + \" member groups\");\n\t\t\t}\n\n\t\t\treturn members.iterator();\n\n\t\t} catch (Exception e) {\n\t\t\tLOGGER.warn(\"Exception while attempting to retrieve \"\n\t\t\t\t\t+ \"member groups of group with key \" + group.getKey()\n\t\t\t\t\t+ \" from Grouper web services: \" + e.getMessage());\n\t\t\treturn Collections.<IEntityGroup> emptyList().iterator();\n\t\t}\n\n\t}","commit_id":"9a04b6c5b26f0de705b2f89a9e8a9195b7e0e21f","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * @see org.jasig.portal.groups.IEntityGroupStore#updateMembers(org.jasig.portal.groups.IEntityGroup)\n     */\n    public void updateMembers(IEntityGroup group) throws GroupsException {\n\n        // assume key is fully qualified group name\n        String groupName = group.getLocalKey();\n\n        GcAddMember gcAddMember = new GcAddMember().assignGroupName(groupName);\n\n        Iterator<IGroupMember> membersIterator = group.getMembers();\n\n        while (membersIterator != null && membersIterator.hasNext()) {\n            IGroupMember iGroupMember = membersIterator.next();\n            EntityIdentifier entityIdentifier = iGroupMember\n                    .getEntityIdentifier();\n\n            String identifier = entityIdentifier.getKey();\n\n            gcAddMember.addSubjectIdentifier(identifier);\n        }\n        gcAddMember.execute();\n\n    }","id":58352,"modified_method":"/**\n\t * @see org.jasig.portal.groups.IEntityGroupStore#updateMembers(org.jasig.portal.groups.IEntityGroup)\n\t */\n\tpublic void updateMembers(IEntityGroup group) throws GroupsException {\n\n\t\t// assume key is fully qualified group name\n\t\tString groupName = group.getLocalKey();\n\n\t\tGcAddMember gcAddMember = new GcAddMember().assignGroupName(groupName);\n\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tIterator<IGroupMember> membersIterator = group.getMembers();\n\n\t\twhile (membersIterator != null && membersIterator.hasNext()) {\n\t\t\tIGroupMember iGroupMember = membersIterator.next();\n\t\t\tEntityIdentifier entityIdentifier = iGroupMember\n\t\t\t\t\t.getEntityIdentifier();\n\n\t\t\tString identifier = entityIdentifier.getKey();\n\n\t\t\tgcAddMember.addSubjectIdentifier(identifier);\n\t\t}\n\t\tgcAddMember.execute();\n\n\t}","commit_id":"9a04b6c5b26f0de705b2f89a9e8a9195b7e0e21f","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n\tpublic String[] findMemberGroupKeys(IEntityGroup group)\n\t\t\tthrows GroupsException {\n\n\t\t// first the get an iterator for the member groups\n\t\tfinal Iterator<IEntityGroup> it = findMemberGroups(group);\n\n\t\t// construct a list of group keys from this iterator\n\t\tList<String> keys = new ArrayList<String>();\n\t\twhile (it.hasNext()) {\n\t\t\tIEntityGroup eg = it.next();\n\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\tLOGGER.debug(\"member group name: \" + eg.getName() + \", key:\"\n\t\t\t\t\t\t+ eg.getKey());\n\t\t\t}\n\t\t\tkeys.add(eg.getKey());\n\t\t}\n\n\t\t// return an iterator over the assembled list\n\t\treturn keys.toArray(new String[keys.size()]);\n\t}","id":58353,"modified_method":"@SuppressWarnings(\"unchecked\")\n    public String[] findMemberGroupKeys(IEntityGroup group)\n            throws GroupsException {\n        \n        // first the get an iterator for the member groups\n        final Iterator<IEntityGroup> it = findMemberGroups(group);\n        \n        // construct a list of group keys from this iterator\n        List<String> keys = new ArrayList<String>();\n        while (it.hasNext()) {\n            IEntityGroup eg = it.next();\n            keys.add(eg.getKey());\n        }\n        \n        // return an iterator over the assembled list\n        return keys.toArray(new String[keys.size()]);\n    }","commit_id":"f25b7ad97bcb4d4d16555ad8256e29cb901dd7a8","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n\tpublic IEntityGroup find(String key) throws GroupsException {\n\n\t\tIEntityGroup group = null;\n\n\t\tif (key != null) {\n\n\t\t\ttry {\n\n\t\t\t\t// Search the Grouper server for groups with the specified local\n\t\t\t\t// key\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"Searching Grouper for a direct match for key: \"\n\t\t\t\t\t\t\t+ key);\n\t\t\t\t}\n\n\t\t\t\tWsGroup wsGroup = findGroupFromKey(key);\n\t\t\t\tif (wsGroup != null) {\n\n\t\t\t\t\tgroup = createUportalGroupFromGrouperGroup(wsGroup);\n\n\t\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\t\tLOGGER.debug(\"Retrieved group from the Grouper server matching key \"\n\t\t\t\t\t\t\t\t+ key + \": \" + group.toString());\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} catch (Exception e) {\n\t\t\t\tLOGGER.warn(\"Exception while attempting to retrieve \"\n\t\t\t\t\t\t+ \"group with key \" + key\n\t\t\t\t\t\t+ \" from Grouper web services: \" + e.getMessage());\n\t\t\t}\n\t\t}\n\n\t\t// return the group\n\t\treturn group;\n\t}","id":58354,"modified_method":"public IEntityGroup find(String key) throws GroupsException {\n\n\n        try {\n\n            // Search the Grouper server for groups with the specified local\n            // key\n            LOGGER.debug(\"Searching Grouper for a direct match for key: \" + key);\n            WsGroup wsGroup = findGroupFromKey(key);\n            if (wsGroup == null) {\n              return null;\n            }\n            IEntityGroup group = createUportalGroupFromGrouperGroup(wsGroup);\n            \n            if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(\"Retrieved group from the Grouper server matching key \"\n                        + key + \": \" + group.toString());\n            }\n            \n            // return the group\n            return group;\n            \n\n        } catch (Exception e) {\n            LOGGER.warn(\"Exception while attempting to retrieve \" \n                    + \"group with key \" + key + \" from Grouper web services\", e);\n            return null;\n        }\n\n    }","commit_id":"f25b7ad97bcb4d4d16555ad8256e29cb901dd7a8","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * @see org.jasig.portal.groups.IEntitySearcher#searchForEntities(java.lang.String,\n\t *      int, java.lang.Class)\n\t */\n\t@SuppressWarnings(\"unchecked\")\n\tpublic EntityIdentifier[] searchForEntities(String query, int method,\n\t\t\t@SuppressWarnings(\"rawtypes\") Class type) throws GroupsException {\n\n\t\t// only search for groups\n\t\tif (type != IPerson.class) {\n\t\t\treturn new EntityIdentifier[] {};\n\t\t}\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"Searching Grouper for entities matching query: \"\n\t\t\t\t\t+ query);\n\t\t}\n\n\t\tList<EntityIdentifier> entityIdentifiers = new ArrayList<EntityIdentifier>();\n\n\t\ttry {\n\n\t\t\tGcGetSubjects subjects = new GcGetSubjects();\n\t\t\tsubjects.assignIncludeSubjectDetail(true);\n\t\t\tWsGetSubjectsResults results = subjects.assignSearchString(query)\n\t\t\t\t\t.execute();\n\n\t\t\tif (results != null && results.getWsSubjects() != null) {\n\n\t\t\t\tfor (WsSubject wsSubject : results.getWsSubjects()) {\n\t\t\t\t\tentityIdentifiers.add(new EntityIdentifier(wsSubject\n\t\t\t\t\t\t\t.getName(), EntityTypes.LEAF_ENTITY_TYPE));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ((EntityIdentifier[]) entityIdentifiers.toArray());\n\n\t\t} catch (Exception e) {\n\t\t\tLOGGER.warn(\"Exception while attempting to retrieve \"\n\t\t\t\t\t+ \"search results for query \" + query + \" and entity type \"\n\t\t\t\t\t+ type.getCanonicalName() + \" : \" + e.getMessage());\n\t\t\treturn new EntityIdentifier[] {};\n\t\t}\n\t}","id":58355,"modified_method":"/**\n     * @see org.jasig.portal.groups.IEntitySearcher#searchForEntities(java.lang.String,\n     *      int, java.lang.Class)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public EntityIdentifier[] searchForEntities(String query, int method,\n            Class type) throws GroupsException {\n\n        WsGetSubjectsResults wsGetSubjectsResults = new GcGetSubjects()\n                .assignSearchString(query).execute();\n\n        EntityIdentifier[] entityIdentifiers = new EntityIdentifier[GrouperClientUtils\n                .length(wsGetSubjectsResults.getWsSubjects())];\n\n        int i = 0;\n        for (WsSubject wsSubject : wsGetSubjectsResults.getWsSubjects()) {\n\n            EntityIdentifier entityIdentifier = new EntityIdentifier(\n                    wsSubject.getId(),\n                    \"g:gsa\".equals(wsSubject.getSourceId()) ? EntityTypes.GROUP_ENTITY_TYPE\n                            : EntityTypes.LEAF_ENTITY_TYPE);\n            entityIdentifiers[i] = entityIdentifier;\n            i++;\n    }\n      return entityIdentifiers;\n    \n    }","commit_id":"f25b7ad97bcb4d4d16555ad8256e29cb901dd7a8","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * Find the Grouper group matching the specified key. the key should find a\n\t * single exact match or null.\n\t * \n\t * @param key\n\t * @return the group or null\n\t */\n\tprotected WsGroup findGroupFromKey(String key) {\n\n\t\tWsGroup wsGroup = null;\n\n\t\tif (key != null) {\n\n\t\t\tGcFindGroups gcFindGroups = new GcFindGroups();\n\t\t\tgcFindGroups.addGroupName(key);\n\t\t\tWsFindGroupsResults results = gcFindGroups.execute();\n\n\t\t\t// if no results were returned, return null\n\t\t\tif (results != null && results.getGroupResults() != null\n\t\t\t\t\t&& results.getGroupResults().length > 0) {\n\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"found group from key \" + key + \": \"\n\t\t\t\t\t\t\t+ results.getGroupResults()[0]);\n\t\t\t\t}\n\n\t\t\t\twsGroup = results.getGroupResults()[0];\n\t\t\t}\n\t\t}\n\n\t\treturn wsGroup;\n\t}","id":58356,"modified_method":"/**\n     * Find the Grouper group matching the specified key.\n     * \n     * @param key\n     * @return the group or null\n     */\n    protected WsGroup findGroupFromKey(String key) {\n        GcFindGroups gcFindGroups = new GcFindGroups();\n        gcFindGroups.addGroupName(key);\n        WsFindGroupsResults results = gcFindGroups.execute();\n\n        // if no results were returned, return null\n        if (results == null || results.getGroupResults() == null\n                || results.getGroupResults().length == 0) {\n            LOGGER.debug(\"Grouper service returned no matches for key \" + key);\n            return null;\n        }\n\n        // construct a uPortal group representation of the first returned\n        // result\n        WsGroup wsGroup = results.getGroupResults()[0];\n        return wsGroup;\n    }","commit_id":"f25b7ad97bcb4d4d16555ad8256e29cb901dd7a8","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n\tpublic Iterator<IEntityGroup> findMemberGroups(IEntityGroup group)\n\t\t\tthrows GroupsException {\n\n\t\t// this group comes from the find() method above.\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"Searching for group-type members of group with key: \"\n\t\t\t\t\t+ group.getLocalKey());\n\t\t}\n\n\t\ttry {\n\n\t\t\tif (!validKey(group.getLocalKey())) {\n\t\t\t\treturn Collections.<IEntityGroup> emptyList().iterator();\n\t\t\t}\n\n\t\t\tGcGetMembers gcGetMembers = new GcGetMembers();\n\t\t\tgcGetMembers.addGroupName(group.getLocalKey());\n\t\t\tgcGetMembers.assignIncludeSubjectDetail(true);\n\t\t\tgcGetMembers.addSourceId(\"g:gsa\");\n\n\t\t\tWsGetMembersResults results = gcGetMembers.execute();\n\n\t\t\tif (results == null || results.getResults() == null\n\t\t\t\t\t|| results.getResults().length == 0\n\t\t\t\t\t|| results.getResults()[0].getWsSubjects() == null) {\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"No group-type members found for group with key \"\n\t\t\t\t\t\t\t+ group.getKey());\n\t\t\t\t}\n\t\t\t\treturn Collections.<IEntityGroup> emptyList().iterator();\n\t\t\t}\n\n\t\t\tfinal List<IEntityGroup> members = new ArrayList<IEntityGroup>();\n\n\t\t\tWsSubject[] subjects = results.getResults()[0].getWsSubjects();\n\n\t\t\tfor (WsSubject wsSubject : subjects) {\n\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"WsSubject id: \" + wsSubject.getId()\n\t\t\t\t\t\t\t+ \", name: \" + wsSubject.getName());\n\t\t\t\t}\n\n\t\t\t\tif (validKey(wsSubject.getName())) {\n\t\t\t\t\t// was getName change to getID\n\t\t\t\t\tif (wsSubject.getId() != null) {\n\t\t\t\t\t\tWsGroup wsGroup = findGroupFromKey(wsSubject.getName());\n\t\t\t\t\t\tif (wsGroup != null) {\n\t\t\t\t\t\t\tIEntityGroup member = createUportalGroupFromGrouperGroup(wsGroup);\n\t\t\t\t\t\t\tmembers.add(member);\n\t\t\t\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\t\t\t\tLOGGER.debug(\"found IEntityGroup member: \"\n\t\t\t\t\t\t\t\t\t\t+ member);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\tLOGGER.debug(\"returning: \" + members.size() + \" member groups\");\n\t\t\t}\n\n\t\t\treturn members.iterator();\n\n\t\t} catch (Exception e) {\n\t\t\tLOGGER.warn(\"Exception while attempting to retrieve \"\n\t\t\t\t\t+ \"member groups of group with key \" + group.getKey()\n\t\t\t\t\t+ \" from Grouper web services: \" + e.getMessage());\n\t\t\treturn Collections.<IEntityGroup> emptyList().iterator();\n\t\t}\n\n\t}","id":58357,"modified_method":"@SuppressWarnings(\"unchecked\")\n    public Iterator findMemberGroups(IEntityGroup group) throws GroupsException {\n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"Searching for group-type members of group with key: \" \n                    + group.getKey());\n        }\n\n        try {\n            \n            if (!validKey(group.getLocalKey())) {\n                return Collections.<IEntityGroup> emptyList().iterator();\n            }\n\n            GcGetMembers gcGetMembers = new GcGetMembers();\n            gcGetMembers.addGroupName(group.getLocalKey());\n            gcGetMembers.addSourceId(\"g:gsa\");\n\n            WsGetMembersResults results = gcGetMembers.execute();\n\n            if (results == null || results.getResults() == null) {\n                if (LOGGER.isDebugEnabled()) {\n                    LOGGER\n                            .debug(\"No group-type members found for group with key \"\n                                    + group.getKey());\n                }\n                return Collections.<IEntityGroup> emptyList().iterator();\n            }\n\n            final List<IEntityGroup> members = new ArrayList<IEntityGroup>();\n            for (WsGetMembersResult wsg : results.getResults()) {\n                if (wsg.getWsSubjects() != null) {\n                    for (WsSubject wsSubject : wsg.getWsSubjects()) {\n                        if (validKey(wsSubject.getName())) {\n                            WsGroup wsGroup = findGroupFromKey(wsSubject\n                                    .getName());\n                            if (wsGroup != null) {\n                                IEntityGroup member = createUportalGroupFromGrouperGroup(wsGroup);\n                                members.add(member);\n                                if (LOGGER.isTraceEnabled()) {\n                                    LOGGER.trace(\"found IEntityGroup member: \"\n                                            + member);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            \n            return members.iterator();\n            \n        } catch (Exception e) {\n            LOGGER.warn(\"Exception while attempting to retrieve \"\n                    + \"member groups of group with key \" + group.getKey() \n                    + \" from Grouper web services\", e);\n            return Collections.<IGroupMember>emptyList().iterator();\n        }\n\n    }","commit_id":"f25b7ad97bcb4d4d16555ad8256e29cb901dd7a8","url":"https://github.com/Jasig/uPortal"},{"original_method":"public Iterator<IEntityGroup> findContainingGroups(IGroupMember gm)\n\t\t\tthrows GroupsException {\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"finding containing groups for: \" + gm);\n\t\t}\n\n\t\tfinal List<IEntityGroup> parents = new LinkedList<IEntityGroup>();\n\n\t\tGcGetGroups getGroups = new GcGetGroups();\n\n\t\tString uportalStem = getStemPrefix();\n\n\t\t// if only searching in a specific stem\n\t\tif (!StringUtils.isBlank(uportalStem)) {\n\t\t\tgetGroups.assignStemScope(StemScope.ALL_IN_SUBTREE);\n\t\t\tgetGroups.assignWsStemLookup(new WsStemLookup(uportalStem, null));\n\n\t\t}\n\n\t\tString key = null;\n\t\tString subjectSourceId = null;\n\t\tif (gm.isGroup()) {\n\n\t\t\tkey = ((IEntityGroup) gm).getLocalKey();\n\n\t\t\tif (!validKey(key)) {\n\t\t\t\treturn parents.iterator();\n\t\t\t}\n\t\t\tsubjectSourceId = \"g:gsa\";\n\n\t\t} else {\n\n\t\t\t// Determine the key to use for this entity. If the entity is a\n\t\t\t// group, we should use the group's local key (excluding the\n\t\t\t// \"grouper.\" portion of the full key. If the entity is not a\n\t\t\t// group type, just use the key.\n\t\t\tkey = gm.getKey();\n\t\t}\n\n\t\tgetGroups.addSubjectLookup(new WsSubjectLookup(null, subjectSourceId,\n\t\t\t\tkey));\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"Searching Grouper for parent groups of the entity with key: \"\n\t\t\t\t\t+ key);\n\t\t}\n\n\t\ttry {\n\n\t\t\tWsGetGroupsResults results = getGroups.execute();\n\n\t\t\tif (results == null || results.getResults() == null\n\t\t\t\t\t|| results.getResults().length != 1) {\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"Grouper service returned no matches for key \"\n\t\t\t\t\t\t\t+ key);\n\t\t\t\t}\n\t\t\t\treturn parents.iterator();\n\t\t\t}\n\t\t\tWsGetGroupsResult wsg = results.getResults()[0];\n\t\t\tif (wsg.getWsGroups() != null) {\n\t\t\t\tfor (WsGroup g : wsg.getWsGroups()) {\n\t\t\t\t\tif (LOGGER.isTraceEnabled()) {\n\t\t\t\t\t\tLOGGER.trace(\"Retrieved group: \" + g.getName());\n\t\t\t\t\t}\n\t\t\t\t\tIEntityGroup parent = createUportalGroupFromGrouperGroup(g);\n\t\t\t\t\tparents.add(parent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\tLOGGER.debug(\"Retrieved \" + parents.size()\n\t\t\t\t\t\t+ \" parent groups of entity with key \" + key);\n\t\t\t}\n\n\t\t} catch (Exception e) {\n\t\t\tLOGGER.warn(\"Exception while attempting to retrieve \"\n\t\t\t\t\t+ \"parents for entity with key \" + key\n\t\t\t\t\t+ \" from Grouper web services: \" + e.getMessage());\n\t\t\treturn Collections.<IEntityGroup> emptyList().iterator();\n\t\t}\n\n\t\treturn parents.iterator();\n\t}","id":58358,"modified_method":"@SuppressWarnings(\"unchecked\")\n    public Iterator findContainingGroups(IGroupMember gm)\n            throws GroupsException {\n        \n        final List<IEntityGroup> parents = new LinkedList<IEntityGroup>();\n\n        GcGetGroups getGroups = new GcGetGroups();\n\n        String uportalStem = getStemPrefix();\n\n        // if only searching in a specific stem\n        if (!StringUtils.isBlank(uportalStem)) {\n            getGroups.assignStemScope(StemScope.ALL_IN_SUBTREE);\n            getGroups.assignWsStemLookup(new WsStemLookup(uportalStem, null));\n\n        }\n\n        String key = null;\n        String subjectSourceId = null;\n        if (gm.isGroup()) {\n\n            key = ((IEntityGroup) gm).getLocalKey();\n\n            if (!validKey(key)) {\n                return parents.iterator();\n            }\n            subjectSourceId = \"g:gsa\";\n        } else {\n\n            // Determine the key to use for this entity. If the entity is a\n            // group, we should use the group's local key (excluding the\n            // \"grouper.\" portion of the full key. If the entity is not a\n            // group type, just use the key.\n            key = gm.getKey();\n        }\n        getGroups.addSubjectLookup(new WsSubjectLookup(null, subjectSourceId,\n                key));\n\n            if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(\"Searching Grouper for parent groups of the entity with key: \"\n                        + key);\n            }\n\n            try {\n                \n                WsGetGroupsResults results = getGroups.execute();\n\n\n                if (results == null || results.getResults() == null || results.getResults().length != 1) {\n                    LOGGER.debug(\"Grouper service returned no matches for key \" + key);\n                    return parents.iterator();\n                }\n                WsGetGroupsResult wsg = results.getResults()[0];\n                    if (wsg.getWsGroups() != null) {\n                        for (WsGroup g : wsg.getWsGroups()) {\n                            if (LOGGER.isDebugEnabled()) {\n                                LOGGER.trace(\"Retrieved group: \" + g.getName());\n                            }\n                            IEntityGroup parent = createUportalGroupFromGrouperGroup(g);\n                      parents.add(parent);\n                    }\n                }\n\n                if (LOGGER.isDebugEnabled()) {\n                    LOGGER.debug(\"Retrieved \" + parents.size() + \" parent groups of entity with key \" + key);\n                }\n\n            } catch (Exception e) {\n                LOGGER.warn(\"Exception while attempting to retrieve \"\n                        + \"parents for entity with key \" + key\n                        + \" from Grouper web services\", e);\n                return Collections.<IEntityGroup>emptyList().iterator();\n            }\n\n        return parents.iterator();\n    }","commit_id":"f25b7ad97bcb4d4d16555ad8256e29cb901dd7a8","url":"https://github.com/Jasig/uPortal"},{"original_method":"public Iterator<IGroupMember> findEntitiesForGroup(IEntityGroup group)\n\t\t\tthrows GroupsException {\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"Searching Grouper for members of the group with key: \"\n\t\t\t\t\t+ group.getKey());\n\t\t}\n\n\t\ttry {\n\n\t\t\t// execute a search for members of the specified group\n\t\t\tGcGetMembers getGroupsMembers = new GcGetMembers();\n\t\t\tgetGroupsMembers.addGroupName(group.getLocalKey());\n\t\t\tgetGroupsMembers.assignIncludeSubjectDetail(true);\n\t\t\tWsGetMembersResults results = getGroupsMembers.execute();\n\n\t\t\tif (results == null || results.getResults() == null\n\t\t\t\t\t|| results.getResults().length == 0\n\t\t\t\t\t|| results.getResults()[0].getWsSubjects() == null) {\n\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"No members found for Grouper group with key \"\n\t\t\t\t\t\t\t+ group.getLocalKey());\n\t\t\t\t}\n\n\t\t\t\treturn Collections.<IGroupMember> emptyList().iterator();\n\t\t\t}\n\n\t\t\tWsSubject[] gInfos = results.getResults()[0].getWsSubjects();\n\t\t\tfinal List<IGroupMember> members = new ArrayList<IGroupMember>(\n\t\t\t\t\tgInfos.length);\n\n\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\tLOGGER.debug(\"Found \" + gInfos.length + \" members.\");\n\t\t\t}\n\n\t\t\t// add each result to the member list\n\t\t\tfor (WsSubject gInfo : gInfos) {\n\n\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\tLOGGER.debug(\"WsSubject id:\" + gInfo.getId() + \", name: \"\n\t\t\t\t\t\t\t+ gInfo.getName() + \", sourceId: \"\n\t\t\t\t\t\t\t+ gInfo.getSourceId());\n\t\t\t\t}\n\t\t\t\t// if the member is not a group\n\t\t\t\tif (!StringUtils.equals(gInfo.getSourceId(), \"g:gsa\")) {\n\n\t\t\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\t\t\tLOGGER.debug(\"creating leaf member:\" + gInfo.getId()\n\t\t\t\t\t\t\t\t+ \" and name: \" + gInfo.getName()\n\t\t\t\t\t\t\t\t+ \" from group: \" + group.getLocalKey());\n\t\t\t\t\t}\n\n\t\t\t\t\tIGroupMember member = new EntityImpl(gInfo.getName(),\n\t\t\t\t\t\t\tIPerson.class);\n\t\t\t\t\tmembers.add(member);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\t\tLOGGER.debug(\"returning \" + gInfos.length + \" members leafs.\");\n\t\t\t}\n\n\t\t\t// return an iterator for the assembled group\n\t\t\treturn members.iterator();\n\n\t\t} catch (Exception e) {\n\t\t\tLOGGER.warn(\"Exception while attempting to retrieve \"\n\t\t\t\t\t+ \"member entities of group with key \" + group.getKey()\n\t\t\t\t\t+ \" from Grouper web services: \" + e.getMessage());\n\t\t\treturn Collections.<IGroupMember> emptyList().iterator();\n\t\t}\n\n\t}","id":58359,"modified_method":"@SuppressWarnings(\"unchecked\")\n    public Iterator findEntitiesForGroup(IEntityGroup group)\n            throws GroupsException {\n        \n        if (LOGGER.isDebugEnabled()) {\n            LOGGER.debug(\"Searching Grouper for members of the group with key: \" \n                    + group.getKey());\n        }\n\n        try {\n            \n            // execute a search for members of the specified group\n            GcGetMembers getGroupsMembers = new GcGetMembers();\n            getGroupsMembers.addGroupName(group.getLocalKey());\n            WsGetMembersResults results = getGroupsMembers.execute();\n            \n            if (results == null || results.getResults() == null\n                    || results.getResults().length == 0\n                    || results.getResults()[0].getWsSubjects() == null) {\n                LOGGER.debug(\"No members found for Grouper group with key \"\n                        + group.getLocalKey());\n                return Collections.<IGroupMember>emptyList().iterator();\n            }\n\n            WsSubject[] gInfos = results.getResults()[0].getWsSubjects();\n            final List<IGroupMember> members = new ArrayList<IGroupMember>(\n                    gInfos.length);\n            \n            // add each result to the member list\n            for (WsSubject gInfo : gInfos) {\n                \n                // if the member is a person group\n                if (StringUtils.equals(gInfo.getSourceId(), \"g:gsa\")) {\n                  \n                  if (validKey(gInfo.getName())) {\n                    LOGGER.trace(\"creating group member: \" + gInfo.getName());\n                    \n                    WsGroup wsGroup = findGroupFromKey(gInfo.getName());\n                    if (wsGroup != null) {\n                      IEntityGroup member = createUportalGroupFromGrouperGroup(wsGroup);\n                      members.add(member);\n                    }\n                }\n                }\n                \n                // otherwise assume the member is an individual person \n                else {\n                    LOGGER.trace(\"creating leaf member: \" + gInfo.getId());\n                    IGroupMember member = new EntityImpl(gInfo.getId(), IPerson.class);\n                    members.add(member);\n                }\n\n            }\n\n            // return an iterator for the assembled group\n            return members.iterator();\n            \n        } catch (Exception e) {\n            LOGGER.warn(\"Exception while attempting to retrieve \"\n                    + \"member entities of group with key \" + group.getKey() \n                    + \" from Grouper web services\", e);\n            return Collections.<IGroupMember>emptyList().iterator();\n        }\n\n    }","commit_id":"f25b7ad97bcb4d4d16555ad8256e29cb901dd7a8","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n\tpublic boolean contains(IEntityGroup group, IGroupMember member)\n\t\t\tthrows GroupsException {\n\n\t\tString groupContainerName = group.getLocalKey();\n\t\tString groupMemberName = member.getKey();\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"groupContainerName: \" + groupContainerName);\n\t\t\tLOGGER.debug(\"groupMemberName: \" + groupMemberName);\n\t\t}\n\n\t\tif (!validKey(groupContainerName) || !validKey(groupMemberName)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tGcHasMember gcHasMember = new GcHasMember();\n\t\tgcHasMember.assignGroupName(groupContainerName);\n\t\tgcHasMember.addSubjectLookup(new WsSubjectLookup(null, \"g:gsa\",\n\t\t\t\tgroupMemberName));\n\t\tWsHasMemberResults wsHasMemberResults = gcHasMember.execute();\n\t\tif (GrouperClientUtils.length(wsHasMemberResults.getResults()) == 1) {\n\t\t\tWsHasMemberResult wsHasMemberResult = wsHasMemberResults\n\t\t\t\t\t.getResults()[0];\n\t\t\treturn StringUtils.equals(\"IS_MEMBER\", wsHasMemberResult\n\t\t\t\t\t.getResultMetadata().getResultCode());\n\t\t}\n\t\treturn false;\n\t}","id":58360,"modified_method":"public boolean contains(IEntityGroup group, IGroupMember member)\n            throws GroupsException {\n    \n        String groupContainerName = group.getLocalKey();\n        String groupMemberName = member.getKey();\n\n        if (!validKey(groupContainerName)\n                || !validKey(groupMemberName)) {\n            return false;\n        }\n\n        GcHasMember gcHasMember = new GcHasMember();\n        gcHasMember.assignGroupName(groupContainerName);\n        gcHasMember.addSubjectLookup(new WsSubjectLookup(null, \"g:gsa\",\n                groupMemberName));\n        WsHasMemberResults wsHasMemberResults = gcHasMember.execute();\n        if (GrouperClientUtils.length(wsHasMemberResults.getResults()) == 1) {\n            WsHasMemberResult wsHasMemberResult = wsHasMemberResults\n                    .getResults()[0];\n            return StringUtils.equals(\"IS_MEMBER\", wsHasMemberResult\n                    .getResultMetadata().getResultCode());\n        }\n        return false;\n    }","commit_id":"f25b7ad97bcb4d4d16555ad8256e29cb901dd7a8","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * @see org.jasig.portal.groups.IEntityStore#newInstance(java.lang.String)\n\t */\n\tpublic IEntity newInstance(String key) throws GroupsException {\n\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"creating new entity from key: \" + key);\n\t\t}\n\n\t\treturn new EntityImpl(key, null);\n\t}","id":58361,"modified_method":"/**\n     * @see org.jasig.portal.groups.IEntityStore#newInstance(java.lang.String)\n     */\n    public IEntity newInstance(String key) throws GroupsException {\n        return new EntityImpl(key, null);\n    }","commit_id":"f25b7ad97bcb4d4d16555ad8256e29cb901dd7a8","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * @see org.jasig.portal.groups.IEntityStore#newInstance(java.lang.String,\n\t *      java.lang.Class)\n\t */\n\t@Override\n\tpublic IEntity newInstance(String key,\n\t\t\t@SuppressWarnings(\"rawtypes\") Class type) throws GroupsException {\n\t\tif (org.jasig.portal.EntityTypes.getEntityTypeID(type) == null) {\n\t\t\tthrow new GroupsException(\"Invalid group type: \" + type);\n\t\t}\n\t\tif (LOGGER.isDebugEnabled()) {\n\t\t\tLOGGER.debug(\"creating new entity from key: \" + key + \" for type: \"\n\t\t\t\t\t+ type);\n\t\t}\n\n\t\treturn new EntityImpl(key, type);\n\t}","id":58362,"modified_method":"/**\n     * @see org.jasig.portal.groups.IEntityStore#newInstance(java.lang.String, java.lang.Class)\n     */\n    @SuppressWarnings(\"unchecked\")\n    public IEntity newInstance(String key, Class type) throws GroupsException {\n        if (org.jasig.portal.EntityTypes.getEntityTypeID(type) == null) {\n            throw new GroupsException(\"Invalid group type: \" + type);\n        }\n        return new EntityImpl(key, type);\n    }","commit_id":"f25b7ad97bcb4d4d16555ad8256e29cb901dd7a8","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n\t * @see org.jasig.portal.groups.IEntityGroupStore#updateMembers(org.jasig.portal.groups.IEntityGroup)\n\t */\n\tpublic void updateMembers(IEntityGroup group) throws GroupsException {\n\n\t\t// assume key is fully qualified group name\n\t\tString groupName = group.getLocalKey();\n\n\t\tGcAddMember gcAddMember = new GcAddMember().assignGroupName(groupName);\n\n\t\t@SuppressWarnings(\"unchecked\")\n\t\tIterator<IGroupMember> membersIterator = group.getMembers();\n\n\t\twhile (membersIterator != null && membersIterator.hasNext()) {\n\t\t\tIGroupMember iGroupMember = membersIterator.next();\n\t\t\tEntityIdentifier entityIdentifier = iGroupMember\n\t\t\t\t\t.getEntityIdentifier();\n\n\t\t\tString identifier = entityIdentifier.getKey();\n\n\t\t\tgcAddMember.addSubjectIdentifier(identifier);\n\t\t}\n\t\tgcAddMember.execute();\n\n\t}","id":58363,"modified_method":"/**\n     * @see org.jasig.portal.groups.IEntityGroupStore#updateMembers(org.jasig.portal.groups.IEntityGroup)\n     */\n    public void updateMembers(IEntityGroup group) throws GroupsException {\n\n        // assume key is fully qualified group name\n        String groupName = group.getLocalKey();\n\n        GcAddMember gcAddMember = new GcAddMember().assignGroupName(groupName);\n\n        Iterator<IGroupMember> membersIterator = group.getMembers();\n\n        while (membersIterator != null && membersIterator.hasNext()) {\n            IGroupMember iGroupMember = membersIterator.next();\n            EntityIdentifier entityIdentifier = iGroupMember\n                    .getEntityIdentifier();\n\n            String identifier = entityIdentifier.getKey();\n\n            gcAddMember.addSubjectIdentifier(identifier);\n        }\n        gcAddMember.execute();\n\n    }","commit_id":"f25b7ad97bcb4d4d16555ad8256e29cb901dd7a8","url":"https://github.com/Jasig/uPortal"},{"original_method":"protected void addSnippets(\n\t\tSolrDocument solrDocument, Document document, QueryConfig queryConfig,\n\t\tSet<String> queryTerms,\n\t\tMap<String, Map<String, List<String>>> highlights) {\n\n\t\tif (!queryConfig.isHighlightEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (String highlightFieldName : queryConfig.getHighlightFieldNames()) {\n\t\t\taddSnippets(\n\t\t\t\tsolrDocument, document, queryTerms, highlights,\n\t\t\t\thighlightFieldName, queryConfig.getLocale());\n\t\t}\n\t}","id":58364,"modified_method":"protected void addSnippets(\n\t\tSolrDocument solrDocument, Document document, QueryConfig queryConfig,\n\t\tSet<String> queryTerms, QueryResponse queryResponse) {\n\n\t\tMap<String, Map<String, List<String>>> highlights =\n\t\t\tqueryResponse.getHighlighting();\n\n\t\tif (!queryConfig.isHighlightEnabled()) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (String highlightFieldName : queryConfig.getHighlightFieldNames()) {\n\t\t\taddSnippets(\n\t\t\t\tsolrDocument, document, queryTerms, highlights,\n\t\t\t\thighlightFieldName, queryConfig.getLocale());\n\t\t}\n\t}","commit_id":"e98634462f8fe56cd6d5e30c143f0ea2c6297fdf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected QueryResponse doSearch(\n\t\t\tSearchContext searchContext, Query query, int start, int end,\n\t\t\tboolean count)\n\t\tthrows Exception {\n\n\t\tQueryConfig queryConfig = query.getQueryConfig();\n\n\t\tSolrQuery solrQuery = new SolrQuery();\n\n\t\taddStats(solrQuery, searchContext);\n\n\t\tif (!count) {\n\t\t\taddFacets(solrQuery, searchContext);\n\t\t\taddHighlights(solrQuery, queryConfig);\n\t\t\taddPagination(solrQuery, start, end);\n\t\t\taddSelectedFields(solrQuery, queryConfig);\n\t\t\taddSort(solrQuery, searchContext.getSorts());\n\n\t\t\tsolrQuery.setIncludeScore(queryConfig.isScoreEnabled());\n\t\t}\n\t\telse {\n\t\t\tsolrQuery.setRows(0);\n\t\t}\n\n\t\tString queryString = translateQuery(query, searchContext);\n\n\t\tsolrQuery.setQuery(queryString);\n\n\t\tList<String> filterQueries = new ArrayList<>();\n\n\t\tif (query.getPreBooleanFilter() != null) {\n\t\t\tString filterQuery = _filterTranslator.translate(\n\t\t\t\tquery.getPreBooleanFilter(), searchContext);\n\n\t\t\tfilterQueries.add(filterQuery);\n\t\t}\n\n\t\tif (query.getPostFilter() != null) {\n\t\t\tString filterQuery = _filterTranslator.translate(\n\t\t\t\tquery.getPreBooleanFilter(), searchContext);\n\n\t\t\tfilterQueries.add(filterQuery);\n\t\t}\n\n\t\tif (!filterQueries.isEmpty()) {\n\t\t\tsolrQuery.setFilterQueries(\n\t\t\t\tfilterQueries.toArray(new String[filterQueries.size()]));\n\t\t}\n\n\t\tQueryResponse queryResponse = executeSearchRequest(solrQuery);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\n\t\t\t\t\"The search engine processed \" + solrQuery.getQuery() +\n\t\t\t\t\t\" in \" + queryResponse.getElapsedTime() + \" ms\");\n\t\t}\n\n\t\treturn queryResponse;\n\t}","id":58365,"modified_method":"protected QueryResponse doSearch(\n\t\t\tSearchContext searchContext, Query query, int start, int end,\n\t\t\tboolean count)\n\t\tthrows Exception {\n\n\t\tQueryConfig queryConfig = query.getQueryConfig();\n\n\t\tSolrQuery solrQuery = new SolrQuery();\n\n\t\taddStats(solrQuery, searchContext);\n\n\t\tif (!count) {\n\t\t\taddFacets(solrQuery, searchContext);\n\t\t\taddGroupBy(solrQuery, searchContext, start, end);\n\t\t\taddHighlights(solrQuery, queryConfig);\n\t\t\taddPagination(solrQuery, searchContext, start, end);\n\t\t\taddSelectedFields(solrQuery, queryConfig);\n\t\t\taddSort(solrQuery, searchContext.getSorts());\n\n\t\t\tsolrQuery.setIncludeScore(queryConfig.isScoreEnabled());\n\t\t}\n\t\telse {\n\t\t\tsolrQuery.setRows(0);\n\t\t}\n\n\t\tString queryString = translateQuery(query, searchContext);\n\n\t\tsolrQuery.setQuery(queryString);\n\n\t\tList<String> filterQueries = new ArrayList<>();\n\n\t\tif (query.getPreBooleanFilter() != null) {\n\t\t\tString filterQuery = _filterTranslator.translate(\n\t\t\t\tquery.getPreBooleanFilter(), searchContext);\n\n\t\t\tfilterQueries.add(filterQuery);\n\t\t}\n\n\t\tif (query.getPostFilter() != null) {\n\t\t\tString filterQuery = _filterTranslator.translate(\n\t\t\t\tquery.getPreBooleanFilter(), searchContext);\n\n\t\t\tfilterQueries.add(filterQuery);\n\t\t}\n\n\t\tif (!filterQueries.isEmpty()) {\n\t\t\tsolrQuery.setFilterQueries(\n\t\t\t\tfilterQueries.toArray(new String[filterQueries.size()]));\n\t\t}\n\n\t\tQueryResponse queryResponse = executeSearchRequest(solrQuery);\n\n\t\tif (_log.isInfoEnabled()) {\n\t\t\t_log.info(\n\t\t\t\t\"The search engine processed \" + solrQuery.getQuery() +\n\t\t\t\t\t\" in \" + queryResponse.getElapsedTime() + \" ms\");\n\t\t}\n\n\t\treturn queryResponse;\n\t}","commit_id":"e98634462f8fe56cd6d5e30c143f0ea2c6297fdf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void addPagination(SolrQuery solrQuery, int start, int end) {\n\t\tsolrQuery.setRows(end - start);\n\t\tsolrQuery.setStart(start);\n\t}","id":58366,"modified_method":"protected void addPagination(\n\t\tSolrQuery solrQuery, SearchContext searchContext, int start, int end) {\n\n\t\tGroupBy groupBy = searchContext.getGroupBy();\n\n\t\tif (groupBy != null) {\n\t\t\treturn;\n\t\t}\n\n\t\tsolrQuery.setRows(end - start);\n\t\tsolrQuery.setStart(start);\n\t}","commit_id":"e98634462f8fe56cd6d5e30c143f0ea2c6297fdf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected Hits processResponse(\n\t\tQueryResponse queryResponse, SearchContext searchContext, Query query) {\n\n\t\tlong startTime = System.currentTimeMillis();\n\n\t\tSolrDocumentList solrDocumentList = queryResponse.getResults();\n\n\t\tupdateFacetCollectors(queryResponse, searchContext);\n\n\t\tHits hits = new HitsImpl();\n\n\t\tupdateStatsResults(searchContext, queryResponse, hits);\n\n\t\tList<Document> documents = new ArrayList<>();\n\t\tSet<String> queryTerms = new HashSet<>();\n\t\tList<Float> scores = new ArrayList<>();\n\n\t\tQueryConfig queryConfig = query.getQueryConfig();\n\t\tMap<String, Map<String, List<String>>> highlights =\n\t\t\tqueryResponse.getHighlighting();\n\n\t\tfor (SolrDocument solrDocument : solrDocumentList) {\n\t\t\tDocument document = processSolrDocument(solrDocument, queryConfig);\n\n\t\t\tdocuments.add(document);\n\n\t\t\taddSnippets(\n\t\t\t\tsolrDocument, document, queryConfig, queryTerms, highlights);\n\n\t\t\tfloat score = GetterUtil.getFloat(\n\t\t\t\tString.valueOf(solrDocument.getFieldValue(\"score\")));\n\n\t\t\tscores.add(score);\n\t\t}\n\n\t\thits.setDocs(documents.toArray(new Document[documents.size()]));\n\t\thits.setLength((int)solrDocumentList.getNumFound());\n\t\thits.setQuery(query);\n\t\thits.setQueryTerms(queryTerms.toArray(new String[queryTerms.size()]));\n\t\thits.setScores(ArrayUtil.toFloatArray(scores));\n\t\thits.setSearchTime(queryResponse.getQTime());\n\t\thits.setStart(startTime);\n\n\t\treturn hits;\n\t}","id":58367,"modified_method":"protected Hits processResponse(\n\t\tQueryResponse queryResponse, SearchContext searchContext, Query query) {\n\n\t\tHits hits = new HitsImpl();\n\n\t\tupdateFacetCollectors(queryResponse, searchContext);\n\t\tupdateGroupedHits(queryResponse, searchContext, query, hits);\n\t\tupdateStatsResults(searchContext, queryResponse, hits);\n\n\t\thits.setQuery(query);\n\t\thits.setSearchTime(queryResponse.getQTime());\n\n\t\tprocessSearchHits(\n\t\t\tqueryResponse, queryResponse.getResults(), query, hits);\n\n\t\treturn hits;\n\t}","commit_id":"e98634462f8fe56cd6d5e30c143f0ea2c6297fdf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected Hits doSearchHits(\n\t\t\tSearchContext searchContext, Query query, int start, int end)\n\t\tthrows Exception {\n\n\t\tQueryResponse queryResponse = doSearch(\n\t\t\tsearchContext, query, start, end, false);\n\n\t\tHits hits = processResponse(queryResponse, searchContext, query);\n\n\t\treturn hits;\n\t}","id":58368,"modified_method":"protected Hits doSearchHits(\n\t\t\tSearchContext searchContext, Query query, int start, int end)\n\t\tthrows Exception {\n\n\t\tQueryResponse queryResponse = doSearch(\n\t\t\tsearchContext, query, start, end, false);\n\n\t\treturn processResponse(queryResponse, searchContext, query);\n\t}","commit_id":"e98634462f8fe56cd6d5e30c143f0ea2c6297fdf","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public LogHandlerListAttributeDefinition build() {\n            if (xmlName == null) xmlName = name;\n            if (maxSize < 1) maxSize = Integer.MAX_VALUE;\n            if (propertyName == null) propertyName = name;\n            return new LogHandlerListAttributeDefinition(name, xmlName, propertyName, valueType, allowNull, minSize, maxSize, alternatives, requires, attributeMarshaller, resourceOnly, deprecated, flags);\n        }","id":58369,"modified_method":"public LogHandlerListAttributeDefinition build() {\n            if (xmlName == null) xmlName = name;\n            if (maxSize < 1) maxSize = Integer.MAX_VALUE;\n            if (propertyName == null) propertyName = name;\n            if (attributeMarshaller == null) attributeMarshaller = HandlersAttributeMarshaller.INSTANCE;\n            return new LogHandlerListAttributeDefinition(name, xmlName, propertyName, CommonAttributes.HANDLER, allowNull, minSize, maxSize, alternatives, requires, attributeMarshaller, resourceOnly, deprecated, flags);\n        }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void writeRootLogger(final XMLExtendedStreamWriter writer, final ModelNode node) throws XMLStreamException {\n        writer.writeStartElement(Element.ROOT_LOGGER.getLocalName());\n        writeLevel(writer, node);\n        writeFilter(writer, node);\n        writeHandlers(writer, node);\n        writer.writeEndElement();\n    }","id":58370,"modified_method":"private void writeRootLogger(final XMLExtendedStreamWriter writer, final ModelNode node) throws XMLStreamException {\n        writer.writeStartElement(Element.ROOT_LOGGER.getLocalName());\n        writeCommonLogger(writer, node);\n        writer.writeEndElement();\n    }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void writeLogger(final XMLExtendedStreamWriter writer, String name, final ModelNode node) throws XMLStreamException {\n        writer.writeStartElement(Element.LOGGER.getLocalName());\n        writer.writeAttribute(CATEGORY.getXmlName(), name);\n        USE_PARENT_HANDLERS.marshallAsAttribute(node, writer);\n        writeLevel(writer, node);\n        writeFilter(writer, node);\n        writeHandlers(writer, node);\n        writer.writeEndElement();\n    }","id":58371,"modified_method":"private void writeLogger(final XMLExtendedStreamWriter writer, String name, final ModelNode node) throws XMLStreamException {\n        writer.writeStartElement(Element.LOGGER.getLocalName());\n        writer.writeAttribute(CATEGORY.getXmlName(), name);\n        USE_PARENT_HANDLERS.marshallAsAttribute(node, writer);\n        writeCommonLogger(writer, node);\n        writer.writeEndElement();\n    }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private static void parseFilter(final Namespace namespace, final ModelNode node, final XMLExtendedStreamReader reader) throws XMLStreamException {\n        if (namespace == Namespace.LOGGING_1_0 || namespace == Namespace.LOGGING_1_1) {\n            // No attributes\n            if (reader.getAttributeCount() > 0) {\n                throw unexpectedAttribute(reader, 0);\n            }\n            final StringBuilder filter = new StringBuilder();\n            parseFilterChildren(filter, false, reader);\n            node.get(FILTER_SPEC.getName()).set(filter.toString());\n        } else {\n            FILTER_SPEC.parseAndSetParameter(readStringAttributeElement(reader, VALUE.getName()), node, reader);\n        }\n    }","id":58372,"modified_method":"private static void parseFilter(final Namespace namespace, final ModelNode node, final XMLExtendedStreamReader reader) throws XMLStreamException {\n        if (namespace == Namespace.LOGGING_1_0 || namespace == Namespace.LOGGING_1_1) {\n            // No attributes\n            if (reader.getAttributeCount() > 0) {\n                throw unexpectedAttribute(reader, 0);\n            }\n            final StringBuilder filter = new StringBuilder();\n            parseFilterChildren(filter, false, reader);\n            node.get(FILTER_SPEC.getName()).set(filter.toString());\n        } else {\n            FILTER_SPEC.parseAndSetParameter(readStringAttributeElement(reader, Attribute.VALUE.getLocalName()), node, reader);\n        }\n    }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void writeContent(final XMLExtendedStreamWriter writer, final ModelNode node) throws XMLStreamException {\n\n        if (node.hasDefined(ASYNC_HANDLER)) {\n            final ModelNode handlers = node.get(ASYNC_HANDLER);\n\n            for (Property handlerProp : handlers.asPropertyList()) {\n                final String name = handlerProp.getName();\n                final ModelNode handler = handlerProp.getValue();\n                if (!handler.isDefined()) {\n                    continue;\n                }\n                writeAsynchHandler(writer, handler, name);\n            }\n        }\n        if (node.hasDefined(CONSOLE_HANDLER)) {\n            final ModelNode handlers = node.get(CONSOLE_HANDLER);\n\n            for (Property handlerProp : handlers.asPropertyList()) {\n                final String name = handlerProp.getName();\n                final ModelNode handler = handlerProp.getValue();\n                if (!handler.isDefined()) {\n                    continue;\n                }\n                writeConsoleHandler(writer, handler, name);\n            }\n        }\n        if (node.hasDefined(FILE_HANDLER)) {\n            final ModelNode handlers = node.get(FILE_HANDLER);\n\n            for (Property handlerProp : handlers.asPropertyList()) {\n                final String name = handlerProp.getName();\n                final ModelNode handler = handlerProp.getValue();\n                if (!handler.isDefined()) {\n                    continue;\n                }\n                writeFileHandler(writer, handler, name);\n            }\n        }\n        if (node.hasDefined(CUSTOM_HANDLER)) {\n            final ModelNode handlers = node.get(CUSTOM_HANDLER);\n\n            for (Property handlerProp : handlers.asPropertyList()) {\n                final String name = handlerProp.getName();\n                final ModelNode handler = handlerProp.getValue();\n                if (!handler.isDefined()) {\n                    continue;\n                }\n                writeCustomHandler(writer, handler, name);\n            }\n        }\n        if (node.hasDefined(PERIODIC_ROTATING_FILE_HANDLER)) {\n            final ModelNode handlers = node.get(PERIODIC_ROTATING_FILE_HANDLER);\n\n            for (Property handlerProp : handlers.asPropertyList()) {\n                final String name = handlerProp.getName();\n                final ModelNode handler = handlerProp.getValue();\n                if (!handler.isDefined()) {\n                    continue;\n                }\n                writePeriodicRotatingFileHandler(writer, handler, name);\n            }\n        }\n        if (node.hasDefined(SIZE_ROTATING_FILE_HANDLER)) {\n            final ModelNode handlers = node.get(SIZE_ROTATING_FILE_HANDLER);\n\n            for (Property handlerProp : handlers.asPropertyList()) {\n                final String name = handlerProp.getName();\n                final ModelNode handler = handlerProp.getValue();\n                if (!handler.isDefined()) {\n                    continue;\n                }\n                writeSizeRotatingFileHandler(writer, handler, name);\n            }\n        }\n        if (node.hasDefined(LOGGER)) {\n            for (String name : node.get(LOGGER).keys()) {\n                writeLogger(writer, name, node.get(LOGGER, name));\n            }\n        }\n        if (node.hasDefined(ROOT_LOGGER)) {\n            writeRootLogger(writer, node.get(ROOT_LOGGER, ROOT_LOGGER_ATTRIBUTE_NAME));\n        }\n    }","id":58373,"modified_method":"public void writeContent(final XMLExtendedStreamWriter writer, final ModelNode node) throws XMLStreamException {\n\n        if (node.hasDefined(ASYNC_HANDLER)) {\n            final ModelNode handlers = node.get(ASYNC_HANDLER);\n\n            for (Property handlerProp : handlers.asPropertyList()) {\n                final String name = handlerProp.getName();\n                final ModelNode handler = handlerProp.getValue();\n                if (handler.isDefined()) {\n                    writeAsynchHandler(writer, handler, name);\n                }\n            }\n        }\n        if (node.hasDefined(CONSOLE_HANDLER)) {\n            final ModelNode handlers = node.get(CONSOLE_HANDLER);\n\n            for (Property handlerProp : handlers.asPropertyList()) {\n                final String name = handlerProp.getName();\n                final ModelNode handler = handlerProp.getValue();\n                if (handler.isDefined()) {\n                    writeConsoleHandler(writer, handler, name);\n                }\n            }\n        }\n        if (node.hasDefined(FILE_HANDLER)) {\n            final ModelNode handlers = node.get(FILE_HANDLER);\n\n            for (Property handlerProp : handlers.asPropertyList()) {\n                final String name = handlerProp.getName();\n                final ModelNode handler = handlerProp.getValue();\n                if (handler.isDefined()) {\n                    writeFileHandler(writer, handler, name);\n                }\n            }\n        }\n        if (node.hasDefined(CUSTOM_HANDLER)) {\n            final ModelNode handlers = node.get(CUSTOM_HANDLER);\n\n            for (Property handlerProp : handlers.asPropertyList()) {\n                final String name = handlerProp.getName();\n                final ModelNode handler = handlerProp.getValue();\n                if (handler.isDefined()) {\n                    writeCustomHandler(writer, handler, name);\n                }\n            }\n        }\n        if (node.hasDefined(PERIODIC_ROTATING_FILE_HANDLER)) {\n            final ModelNode handlers = node.get(PERIODIC_ROTATING_FILE_HANDLER);\n\n            for (Property handlerProp : handlers.asPropertyList()) {\n                final String name = handlerProp.getName();\n                final ModelNode handler = handlerProp.getValue();\n                if (handler.isDefined()) {\n                    writePeriodicRotatingFileHandler(writer, handler, name);\n                }\n            }\n        }\n        if (node.hasDefined(SIZE_ROTATING_FILE_HANDLER)) {\n            final ModelNode handlers = node.get(SIZE_ROTATING_FILE_HANDLER);\n\n            for (Property handlerProp : handlers.asPropertyList()) {\n                final String name = handlerProp.getName();\n                final ModelNode handler = handlerProp.getValue();\n                if (handler.isDefined()) {\n                    writeSizeRotatingFileHandler(writer, handler, name);\n                }\n            }\n        }\n        if (node.hasDefined(LOGGER)) {\n            for (String name : node.get(LOGGER).keys()) {\n                writeLogger(writer, name, node.get(LOGGER, name));\n            }\n        }\n        if (node.hasDefined(ROOT_LOGGER)) {\n            writeRootLogger(writer, node.get(ROOT_LOGGER, ROOT_LOGGER_ATTRIBUTE_NAME));\n        }\n    }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void writeAsynchHandler(final XMLExtendedStreamWriter writer, final ModelNode node, final String name) throws XMLStreamException {\n        writer.writeStartElement(Element.ASYNC_HANDLER.getLocalName());\n        writer.writeAttribute(HANDLER_NAME.getXmlName(), name);\n        writeLevel(writer, node);\n        writeFilter(writer, node);\n        writeFormatter(writer, node);\n        writeProperties(writer, node);\n        if (QUEUE_LENGTH.isMarshallable(node)) {\n            writer.writeStartElement(Element.QUEUE_LENGTH.getLocalName());\n            writeAttribute(writer, Attribute.VALUE, node.get(QUEUE_LENGTH.getName()));\n            writer.writeEndElement();\n        }\n        if (OVERFLOW_ACTION.isMarshallable(node)) {\n            writer.writeStartElement(Element.OVERFLOW_ACTION.getLocalName());\n            writer.writeAttribute(Attribute.VALUE.getLocalName(), node.get(OVERFLOW_ACTION.getName()).asString().toLowerCase(Locale.ENGLISH));\n            writer.writeEndElement();\n        }\n        if (SUBHANDLERS.isMarshallable(node)) {\n            final ModelNode handlers = node.get(SUBHANDLERS.getName());\n            writeHandlersContent(writer, Element.SUBHANDLERS, handlers);\n        }\n\n        writer.writeEndElement();\n    }","id":58374,"modified_method":"private void writeAsynchHandler(final XMLExtendedStreamWriter writer, final ModelNode node, final String name) throws XMLStreamException {\n        writer.writeStartElement(Element.ASYNC_HANDLER.getLocalName());\n        writer.writeAttribute(HANDLER_NAME.getXmlName(), name);\n        LEVEL.marshallAsElement(node, writer);\n        FILTER_SPEC.marshallAsElement(node, writer);\n        FORMATTER.marshallAsElement(node, writer);\n        QUEUE_LENGTH.marshallAsElement(node, writer);\n        OVERFLOW_ACTION.marshallAsElement(node, writer);\n        SUBHANDLERS.marshallAsElement(node, writer);\n\n        writer.writeEndElement();\n    }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void writePeriodicRotatingFileHandler(final XMLExtendedStreamWriter writer, final ModelNode node, final String name) throws XMLStreamException {\n        writer.writeStartElement(Element.PERIODIC_ROTATING_FILE_HANDLER.getLocalName());\n        writer.writeAttribute(HANDLER_NAME.getXmlName(), name);\n        AUTOFLUSH.marshallAsAttribute(node, writer);\n        writeLevel(writer, node);\n        writeEncoding(writer, node);\n        writeFilter(writer, node);\n        writeFormatter(writer, node);\n        writeProperties(writer, node);\n        writeFile(writer, node);\n        if (SUFFIX.isMarshallable(node)) {\n            writer.writeStartElement(Element.SUFFIX.getLocalName());\n            writeAttribute(writer, Attribute.VALUE, node.get(SUFFIX.getName()));\n            writer.writeEndElement();\n        }\n        writeAppend(writer, node);\n\n        writer.writeEndElement();\n    }","id":58375,"modified_method":"private void writePeriodicRotatingFileHandler(final XMLExtendedStreamWriter writer, final ModelNode node, final String name) throws XMLStreamException {\n        writer.writeStartElement(Element.PERIODIC_ROTATING_FILE_HANDLER.getLocalName());\n        writer.writeAttribute(HANDLER_NAME.getXmlName(), name);\n        AUTOFLUSH.marshallAsAttribute(node, writer);\n        writeCommonHandler(writer, node);\n        FILE.marshallAsElement(node, writer);\n        SUFFIX.marshallAsElement(node, writer);\n        APPEND.marshallAsElement(node, writer);\n\n        writer.writeEndElement();\n    }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void writeCustomHandler(final XMLExtendedStreamWriter writer, final ModelNode node, final String name)\n            throws XMLStreamException {\n        writer.writeStartElement(Element.CUSTOM_HANDLER.getLocalName());\n        writer.writeAttribute(HANDLER_NAME.getXmlName(), name);\n        CLASS.marshallAsAttribute(node, writer);\n        MODULE.marshallAsAttribute(node, writer);\n        writeLevel(writer, node);\n        writeEncoding(writer, node);\n        writeFilter(writer, node);\n        writeFormatter(writer, node);\n        writeProperties(writer, node);\n\n        writer.writeEndElement();\n    }","id":58376,"modified_method":"private void writeCustomHandler(final XMLExtendedStreamWriter writer, final ModelNode node, final String name)\n            throws XMLStreamException {\n        writer.writeStartElement(Element.CUSTOM_HANDLER.getLocalName());\n        writer.writeAttribute(HANDLER_NAME.getXmlName(), name);\n        CLASS.marshallAsAttribute(node, writer);\n        MODULE.marshallAsAttribute(node, writer);\n        writeCommonHandler(writer, node);\n        PROPERTIES.marshallAsElement(node, writer);\n\n        writer.writeEndElement();\n    }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void writeHandlers(final XMLExtendedStreamWriter writer, final ModelNode node) throws XMLStreamException {\n        if (HANDLERS.isMarshallable(node)) {\n            final ModelNode handlers = node.get(HANDLERS.getName());\n            writeHandlersContent(writer, Element.HANDLERS, handlers);\n        }\n    }","id":58377,"modified_method":"private void writeCommonHandler(final XMLExtendedStreamWriter writer, final ModelNode node) throws XMLStreamException {\n        LEVEL.marshallAsElement(node, writer);\n        ENCODING.marshallAsElement(node, writer);\n        FILTER_SPEC.marshallAsElement(node, writer);\n        FORMATTER.marshallAsElement(node, writer);\n    }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void writeConsoleHandler(final XMLExtendedStreamWriter writer, final ModelNode node, final String name)\n            throws XMLStreamException {\n        writer.writeStartElement(Element.CONSOLE_HANDLER.getLocalName());\n        writer.writeAttribute(HANDLER_NAME.getXmlName(), name);\n        AUTOFLUSH.marshallAsAttribute(node, writer);\n        writeLevel(writer, node);\n        writeEncoding(writer, node);\n        writeFilter(writer, node);\n        writeFormatter(writer, node);\n        writeProperties(writer, node);\n        if (TARGET.isMarshallable(node)) {\n            writer.writeStartElement(Element.TARGET.getLocalName());\n            writeAttribute(writer, Attribute.NAME, node.get(TARGET.getName()));\n            writer.writeEndElement();\n        }\n\n        writer.writeEndElement();\n    }","id":58378,"modified_method":"private void writeConsoleHandler(final XMLExtendedStreamWriter writer, final ModelNode node, final String name)\n            throws XMLStreamException {\n        writer.writeStartElement(Element.CONSOLE_HANDLER.getLocalName());\n        writer.writeAttribute(HANDLER_NAME.getXmlName(), name);\n        AUTOFLUSH.marshallAsAttribute(node, writer);\n        writeCommonHandler(writer, node);\n        TARGET.marshallAsElement(node, writer);\n        writer.writeEndElement();\n    }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void writeSizeRotatingFileHandler(final XMLExtendedStreamWriter writer, final ModelNode node, final String name) throws XMLStreamException {\n        writer.writeStartElement(Element.SIZE_ROTATING_FILE_HANDLER.getLocalName());\n        writer.writeAttribute(HANDLER_NAME.getXmlName(), name);\n        AUTOFLUSH.marshallAsAttribute(node, writer);\n        writeLevel(writer, node);\n        writeEncoding(writer, node);\n        writeFilter(writer, node);\n        writeFormatter(writer, node);\n        writeProperties(writer, node);\n        writeFile(writer, node);\n        if (ROTATE_SIZE.isMarshallable(node)) {\n            writer.writeStartElement(Element.ROTATE_SIZE.getLocalName());\n            writeAttribute(writer, Attribute.VALUE, node.get(ROTATE_SIZE.getName()));\n            writer.writeEndElement();\n        }\n        if (MAX_BACKUP_INDEX.isMarshallable(node)) {\n            writer.writeStartElement(Element.MAX_BACKUP_INDEX.getLocalName());\n            writeAttribute(writer, Attribute.VALUE, node.get(MAX_BACKUP_INDEX.getName()));\n            writer.writeEndElement();\n        }\n        writeAppend(writer, node);\n\n        writer.writeEndElement();\n    }","id":58379,"modified_method":"private void writeSizeRotatingFileHandler(final XMLExtendedStreamWriter writer, final ModelNode node, final String name) throws XMLStreamException {\n        writer.writeStartElement(Element.SIZE_ROTATING_FILE_HANDLER.getLocalName());\n        writer.writeAttribute(HANDLER_NAME.getXmlName(), name);\n        AUTOFLUSH.marshallAsAttribute(node, writer);\n        writeCommonHandler(writer, node);\n        FILE.marshallAsElement(node, writer);\n        ROTATE_SIZE.marshallAsElement(node, writer);\n        MAX_BACKUP_INDEX.marshallAsElement(node, writer);\n        APPEND.marshallAsElement(node, writer);\n\n        writer.writeEndElement();\n    }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void writeFilter(final XMLExtendedStreamWriter writer, final ModelNode node) throws XMLStreamException {\n        if (FILTER_SPEC.isMarshallable(node)) {\n            writer.writeStartElement(FILTER_SPEC.getXmlName());\n            writeAttribute(writer, Attribute.VALUE, node.get(FILTER_SPEC.getName()));\n            writer.writeEndElement();\n        }\n    }","id":58380,"modified_method":"private void writeCommonLogger(final XMLExtendedStreamWriter writer, final ModelNode node) throws XMLStreamException {\n        LEVEL.marshallAsElement(node, writer);\n        FILTER_SPEC.marshallAsElement(node, writer);\n        HANDLERS.marshallAsElement(node, writer);\n    }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"private void writeFileHandler(final XMLExtendedStreamWriter writer, final ModelNode node, final String name) throws XMLStreamException {\n        writer.writeStartElement(Element.FILE_HANDLER.getLocalName());\n        writer.writeAttribute(Attribute.NAME.getLocalName(), name);\n        AUTOFLUSH.marshallAsAttribute(node, writer);\n        writeLevel(writer, node);\n        writeEncoding(writer, node);\n        writeFilter(writer, node);\n        writeFormatter(writer, node);\n        writeProperties(writer, node);\n        writeFile(writer, node);\n        writeAppend(writer, node);\n\n        writer.writeEndElement();\n    }","id":58381,"modified_method":"private void writeFileHandler(final XMLExtendedStreamWriter writer, final ModelNode node, final String name) throws XMLStreamException {\n        writer.writeStartElement(Element.FILE_HANDLER.getLocalName());\n        writer.writeAttribute(Attribute.NAME.getLocalName(), name);\n        AUTOFLUSH.marshallAsAttribute(node, writer);\n        writeCommonHandler(writer, node);\n        FILE.marshallAsElement(node, writer);\n        APPEND.marshallAsElement(node, writer);\n\n        writer.writeEndElement();\n    }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"public ObjectTypeAttributeDefinition build() {\n            if (xmlName == null) { xmlName = name; }\n            return new ObjectTypeAttributeDefinition(name, xmlName, suffix, valueTypes, allowNull, validator, corrector, alternatives, requires, attributeMarshaller, resourceOnly, deprecated, flags);\n        }","id":58382,"modified_method":"public ObjectTypeAttributeDefinition build() {\n            if (xmlName == null) { xmlName = name; }\n            if (attributeMarshaller == null) {\n                attributeMarshaller = new AttributeMarshaller() {\n                    @Override\n                    public void marshallAsElement(AttributeDefinition attribute, ModelNode resourceModel, boolean marshallDefault, XMLStreamWriter writer) throws XMLStreamException {\n                        if (resourceModel.hasDefined(attribute.getName())) {\n                            writer.writeStartElement(attribute.getXmlName());\n                            for (AttributeDefinition valueType : valueTypes) {\n                                for (ModelNode handler : resourceModel.get(attribute.getName()).asList()) {\n                                    valueType.marshallAsElement(handler, writer);\n                                }\n                            }\n                            writer.writeEndElement();\n                        }\n                    }\n                };\n            }\n            return new ObjectTypeAttributeDefinition(name, xmlName, suffix, valueTypes, allowNull, validator, corrector, alternatives, requires, attributeMarshaller, resourceOnly, deprecated, flags);\n        }","commit_id":"852c2527115be4703ddb286abb2609182994141a","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n   * Save the user layout\n   * @param person\n   * @param profileId\n   * @param layoutXML\n   * @throws Exception\n   */\n  public void setUserLayout (IPerson person, int profileId, Document layoutXML, boolean channelsAdded) throws Exception {\n    int userId = person.getID();\n    int layoutId = 0;\n    Connection con = rdbmService.getConnection();\n    try {\n      setAutoCommit(con, false);                // Need an atomic update here\n      Statement stmt = con.createStatement();\n      try {\n        long startTime = System.currentTimeMillis();\n\n        String query = \"SELECT LAYOUT_ID FROM UP_USER_PROFILE WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + query);\n        ResultSet rs = stmt.executeQuery(query);\n        try {\n          rs.next();\n          layoutId = rs.getInt(1);\n        } finally {\n          rs.close();\n        }\n        boolean firstLayout = false;\n        if (layoutId == 0) { // First personal layout for this user/profile\n          layoutId = 1;\n          firstLayout = true;\n        }\n\n        String selectString = \"USER_ID=\" + userId + \" AND LAYOUT_ID=\" + layoutId;\n        String sSql = \"DELETE FROM UP_LAYOUT_PARAM WHERE \" + selectString;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sSql);\n        stmt.executeUpdate(sSql);\n        sSql = \"DELETE FROM UP_LAYOUT_STRUCT WHERE \" + selectString;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sSql);\n        stmt.executeUpdate(sSql);\n        if (DEBUG > 1) {\n          System.err.println(\"--> saving document\");\n          dumpDoc(layoutXML.getFirstChild().getFirstChild(), \"\");\n          System.err.println(\"<--\");\n        }\n        MyPreparedStatement structStmt = new MyPreparedStatement(con,\n          \"INSERT INTO UP_LAYOUT_STRUCT \" +\n          \"(USER_ID, LAYOUT_ID, STRUCT_ID, NEXT_STRUCT_ID, CHLD_STRUCT_ID,EXTERNAL_ID,CHAN_ID,NAME,TYPE,HIDDEN,IMMUTABLE,UNREMOVABLE) \" +\n          \"VALUES (\"+ userId + \",\" + layoutId + \",?,?,?,?,?,?,?,?,?,?)\");\n        try {\n          MyPreparedStatement parmStmt = new MyPreparedStatement(con,\n            \"INSERT INTO UP_LAYOUT_PARAM \" +\n            \"(USER_ID, LAYOUT_ID, STRUCT_ID, STRUCT_PARM_NM, STRUCT_PARM_VAL) \" +\n            \"VALUES (\"+ userId + \",\" + layoutId + \",?,?,?)\");\n          try {\n            int firstStructId = saveStructure(layoutXML.getFirstChild().getFirstChild(), structStmt, parmStmt);\n            sSql = \"UPDATE UP_USER_LAYOUT SET INIT_STRUCT_ID=\" + firstStructId + \" WHERE \" + selectString;\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sSql);\n            stmt.executeUpdate(sSql);\n\n            // Update the last time the user saw the list of available channels\n            if (channelsAdded) {\n              sSql = \"UPDATE UP_USER SET LST_CHAN_UPDT_DT=\" + tsStart + \"'\" +\n                new java.sql.Timestamp(System.currentTimeMillis()).toString()+\"'\" + tsEnd +\n                \" WHERE USER_ID=\" + userId;\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sSql);\n              stmt.executeUpdate(sSql);\n            }\n\n            if (firstLayout) {\n\n              int defaultUserId;\n              int defaultLayoutId;\n              // Have to copy some of data over from the default user\n              String sQuery = \"SELECT USER_DFLT_USR_ID,USER_DFLT_LAY_ID FROM UP_USER WHERE USER_ID=\" + userId;\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sQuery);\n              rs = stmt.executeQuery(sQuery);\n              try {\n                rs.next();\n                defaultUserId = rs.getInt(1);\n                defaultLayoutId = rs.getInt(2);\n              } finally {\n                rs.close();\n              }\n              sQuery = \"UPDATE UP_USER SET CURR_LAY_ID=\" + layoutId + \" WHERE USER_ID=\" + userId;\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sQuery);\n              stmt.executeUpdate(sQuery);\n\n              sQuery = \"UPDATE UP_USER_PROFILE SET LAYOUT_ID=1 WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId;\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sQuery);\n              stmt.executeUpdate(sQuery);\n            }\n            long stopTime = System.currentTimeMillis();\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): Layout document for user \" + userId + \" took \" +\n                (stopTime - startTime) + \" milliseconds to save\");\n          } finally {\n            parmStmt.close();\n          }\n        } finally {\n          structStmt.close();\n        }\n       } finally {\n        stmt.close();\n      }\n      commit(con);\n    } catch (Exception e) {\n      rollback(con);\n      throw  e;\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58383,"modified_method":"/**\n   * Save the user layout\n   * @param person\n   * @param profileId\n   * @param layoutXML\n   * @throws Exception\n   */\n  public void setUserLayout (IPerson person, int profileId, Document layoutXML, boolean channelsAdded) throws Exception {\n    int userId = person.getID();\n    int layoutId = 0;\n    Connection con = RdbmServices.getConnection();\n    try {\n      RdbmServices.setAutoCommit(con, false);                // Need an atomic update here\n      Statement stmt = con.createStatement();\n      try {\n        long startTime = System.currentTimeMillis();\n\n        String query = \"SELECT LAYOUT_ID FROM UP_USER_PROFILE WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + query);\n        ResultSet rs = stmt.executeQuery(query);\n        try {\n          rs.next();\n          layoutId = rs.getInt(1);\n        } finally {\n          rs.close();\n        }\n        boolean firstLayout = false;\n        if (layoutId == 0) { // First personal layout for this user/profile\n          layoutId = 1;\n          firstLayout = true;\n        }\n\n        String selectString = \"USER_ID=\" + userId + \" AND LAYOUT_ID=\" + layoutId;\n        String sSql = \"DELETE FROM UP_LAYOUT_PARAM WHERE \" + selectString;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sSql);\n        stmt.executeUpdate(sSql);\n        sSql = \"DELETE FROM UP_LAYOUT_STRUCT WHERE \" + selectString;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sSql);\n        stmt.executeUpdate(sSql);\n        if (DEBUG > 1) {\n          System.err.println(\"--> saving document\");\n          dumpDoc(layoutXML.getFirstChild().getFirstChild(), \"\");\n          System.err.println(\"<--\");\n        }\n        RdbmServices.PreparedStatement structStmt = new RdbmServices.PreparedStatement(con,\n          \"INSERT INTO UP_LAYOUT_STRUCT \" +\n          \"(USER_ID, LAYOUT_ID, STRUCT_ID, NEXT_STRUCT_ID, CHLD_STRUCT_ID,EXTERNAL_ID,CHAN_ID,NAME,TYPE,HIDDEN,IMMUTABLE,UNREMOVABLE) \" +\n          \"VALUES (\"+ userId + \",\" + layoutId + \",?,?,?,?,?,?,?,?,?,?)\");\n        try {\n          RdbmServices.PreparedStatement parmStmt = new RdbmServices.PreparedStatement(con,\n            \"INSERT INTO UP_LAYOUT_PARAM \" +\n            \"(USER_ID, LAYOUT_ID, STRUCT_ID, STRUCT_PARM_NM, STRUCT_PARM_VAL) \" +\n            \"VALUES (\"+ userId + \",\" + layoutId + \",?,?,?)\");\n          try {\n            int firstStructId = saveStructure(layoutXML.getFirstChild().getFirstChild(), structStmt, parmStmt);\n            sSql = \"UPDATE UP_USER_LAYOUT SET INIT_STRUCT_ID=\" + firstStructId + \" WHERE \" + selectString;\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sSql);\n            stmt.executeUpdate(sSql);\n\n            // Update the last time the user saw the list of available channels\n            if (channelsAdded) {\n              sSql = \"UPDATE UP_USER SET LST_CHAN_UPDT_DT=\" + RdbmServices.sqlTimeStamp() +\n                \" WHERE USER_ID=\" + userId;\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sSql);\n              stmt.executeUpdate(sSql);\n            }\n\n            if (firstLayout) {\n\n              int defaultUserId;\n              int defaultLayoutId;\n              // Have to copy some of data over from the default user\n              String sQuery = \"SELECT USER_DFLT_USR_ID,USER_DFLT_LAY_ID FROM UP_USER WHERE USER_ID=\" + userId;\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sQuery);\n              rs = stmt.executeQuery(sQuery);\n              try {\n                rs.next();\n                defaultUserId = rs.getInt(1);\n                defaultLayoutId = rs.getInt(2);\n              } finally {\n                rs.close();\n              }\n              sQuery = \"UPDATE UP_USER SET CURR_LAY_ID=\" + layoutId + \" WHERE USER_ID=\" + userId;\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sQuery);\n              stmt.executeUpdate(sQuery);\n\n              sQuery = \"UPDATE UP_USER_PROFILE SET LAYOUT_ID=1 WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId;\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sQuery);\n              stmt.executeUpdate(sQuery);\n            }\n            long stopTime = System.currentTimeMillis();\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): Layout document for user \" + userId + \" took \" +\n                (stopTime - startTime) + \" milliseconds to save\");\n          } finally {\n            parmStmt.close();\n          }\n        } finally {\n          structStmt.close();\n        }\n       } finally {\n        stmt.close();\n      }\n      RdbmServices.commit(con);\n    } catch (Exception e) {\n      RdbmServices.rollback(con);\n      throw  e;\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profileId\n   * @param ssup\n   * @exception Exception\n   */\n  public void setStructureStylesheetUserPreferences (IPerson person, int profileId, StructureStylesheetUserPreferences ssup) throws Exception {\n    int userId = person.getID();\n    Connection con = rdbmService.getConnection();\n    try {\n      // Set autocommit false for the connection\n      int stylesheetId = ssup.getStylesheetId();\n      setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        // write out params\n        for (Enumeration e = ssup.getParameterValues().keys(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          // see if the parameter was already there\n          String sQuery = \"SELECT PARAM_VAL FROM UP_SS_USER_PARM WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId\n              + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND PARAM_NAME='\" + pName + \"'\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setStructureStylesheetUserPreferences(): \" + sQuery);\n          ResultSet rs = stmt.executeQuery(sQuery);\n          if (rs.next()) {\n            // update\n            sQuery = \"UPDATE UP_SS_USER_PARM SET PARAM_VAL='\" + ssup.getParameterValue(pName) + \"' WHERE USER_ID=\" + userId\n                + \" AND PROFILE_ID=\" + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND PARAM_NAME='\" + pName\n                + \"'\";\n          }\n          else {\n            // insert\n            sQuery = \"INSERT INTO UP_SS_USER_PARM (USER_ID,PROFILE_ID,SS_ID,SS_TYPE,PARAM_NAME,PARAM_VAL) VALUES (\" + userId\n                + \",\" + profileId + \",\" + stylesheetId + \",1,'\" + pName + \"','\" + ssup.getParameterValue(pName) + \"')\";\n          }\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setStructureStylesheetUserPreferences(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // write out folder attributes\n        for (Enumeration e = ssup.getFolders(); e.hasMoreElements();) {\n          String folderId = (String)e.nextElement();\n          for (Enumeration attre = ssup.getFolderAttributeNames(); attre.hasMoreElements();) {\n            String pName = (String)attre.nextElement();\n            String pValue = ssup.getDefinedFolderAttributeValue(folderId, pName);\n            if (pValue != null) {\n              // store user preferences\n              String sQuery = \"SELECT PARAM_VAL FROM UP_SS_USER_ATTS WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId\n                  + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND STRUCT_ID='\" + folderId.substring(1) + \"' AND PARAM_NAME='\" + pName\n                  + \"' AND PARAM_TYPE=2\";\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setStructureStylesheetUserPreferences(): \" + sQuery);\n              ResultSet rs = stmt.executeQuery(sQuery);\n              if (rs.next()) {\n                // update\n                sQuery = \"UPDATE UP_SS_USER_ATTS SET PARAM_VAL='\" + pValue + \"' WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\"\n                    + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND STRUCT_ID='\" + folderId.substring(1) + \"' AND PARAM_NAME='\"\n                    + pName + \"' AND PARAM_TYPE=2\";\n              }\n              else {\n                // insert\n                sQuery = \"INSERT INTO UP_SS_USER_ATTS (USER_ID,PROFILE_ID,SS_ID,SS_TYPE,STRUCT_ID,PARAM_NAME,PARAM_TYPE,PARAM_VAL) VALUES (\"\n                    + userId + \",\" + profileId + \",\" + stylesheetId + \",1,'\" + folderId.substring(1) + \"','\" + pName + \"',2,'\" + pValue\n                    + \"')\";\n              }\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setStructureStylesheetUserPreferences(): \" + sQuery);\n              stmt.executeUpdate(sQuery);\n            }\n          }\n        }\n        // write out channel attributes\n        for (Enumeration e = ssup.getChannels(); e.hasMoreElements();) {\n          String channelId = (String)e.nextElement();\n          for (Enumeration attre = ssup.getChannelAttributeNames(); attre.hasMoreElements();) {\n            String pName = (String)attre.nextElement();\n            String pValue = ssup.getDefinedChannelAttributeValue(channelId, pName);\n            if (pValue != null) {\n              // store user preferences\n              String sQuery = \"SELECT PARAM_VAL FROM UP_SS_USER_ATTS WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId\n                  + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND STRUCT_ID='\" + channelId.substring(1) + \"' AND PARAM_NAME='\" + pName\n                  + \"' AND PARAM_TYPE=3\";\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setStructureStylesheetUserPreferences(): \" + sQuery);\n              ResultSet rs = stmt.executeQuery(sQuery);\n              if (rs.next()) {\n                // update\n                sQuery = \"UPDATE UP_SS_USER_ATTS SET PARAM_VAL='\" + pValue + \"' WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\"\n                    + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND STRUCT_ID='\" + channelId.substring(1) + \"' AND PARAM_NAME='\"\n                    + pName + \"' AND PARAM_TYPE=3\";\n              }\n              else {\n                // insert\n                sQuery = \"INSERT INTO UP_SS_USER_ATTS (USER_ID,PROFILE_ID,SS_ID,SS_TYPE,STRUCT_ID,PARAM_NAME,PARAM_TYPE,PARAM_VAL) VALUES (\"\n                    + userId + \",\" + profileId + \",\" + stylesheetId + \",1,'\" + channelId.substring(1) + \"','\" + pName + \"',3,'\" + pValue\n                    + \"')\";\n              }\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setStructureStylesheetUserPreferences(): \" + sQuery);\n              stmt.executeUpdate(sQuery);\n            }\n          }\n        }\n        // Commit the transaction\n        commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58384,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profileId\n   * @param ssup\n   * @exception Exception\n   */\n  public void setStructureStylesheetUserPreferences (IPerson person, int profileId, StructureStylesheetUserPreferences ssup) throws Exception {\n    int userId = person.getID();\n    Connection con = RdbmServices.getConnection();\n    try {\n      // Set autocommit false for the connection\n      int stylesheetId = ssup.getStylesheetId();\n      RdbmServices.setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        // write out params\n        for (Enumeration e = ssup.getParameterValues().keys(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          // see if the parameter was already there\n          String sQuery = \"SELECT PARAM_VAL FROM UP_SS_USER_PARM WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId\n              + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND PARAM_NAME='\" + pName + \"'\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setStructureStylesheetUserPreferences(): \" + sQuery);\n          ResultSet rs = stmt.executeQuery(sQuery);\n          if (rs.next()) {\n            // update\n            sQuery = \"UPDATE UP_SS_USER_PARM SET PARAM_VAL='\" + ssup.getParameterValue(pName) + \"' WHERE USER_ID=\" + userId\n                + \" AND PROFILE_ID=\" + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND PARAM_NAME='\" + pName\n                + \"'\";\n          }\n          else {\n            // insert\n            sQuery = \"INSERT INTO UP_SS_USER_PARM (USER_ID,PROFILE_ID,SS_ID,SS_TYPE,PARAM_NAME,PARAM_VAL) VALUES (\" + userId\n                + \",\" + profileId + \",\" + stylesheetId + \",1,'\" + pName + \"','\" + ssup.getParameterValue(pName) + \"')\";\n          }\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setStructureStylesheetUserPreferences(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // write out folder attributes\n        for (Enumeration e = ssup.getFolders(); e.hasMoreElements();) {\n          String folderId = (String)e.nextElement();\n          for (Enumeration attre = ssup.getFolderAttributeNames(); attre.hasMoreElements();) {\n            String pName = (String)attre.nextElement();\n            String pValue = ssup.getDefinedFolderAttributeValue(folderId, pName);\n            if (pValue != null) {\n              // store user preferences\n              String sQuery = \"SELECT PARAM_VAL FROM UP_SS_USER_ATTS WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId\n                  + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND STRUCT_ID='\" + folderId.substring(1) + \"' AND PARAM_NAME='\" + pName\n                  + \"' AND PARAM_TYPE=2\";\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setStructureStylesheetUserPreferences(): \" + sQuery);\n              ResultSet rs = stmt.executeQuery(sQuery);\n              if (rs.next()) {\n                // update\n                sQuery = \"UPDATE UP_SS_USER_ATTS SET PARAM_VAL='\" + pValue + \"' WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\"\n                    + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND STRUCT_ID='\" + folderId.substring(1) + \"' AND PARAM_NAME='\"\n                    + pName + \"' AND PARAM_TYPE=2\";\n              }\n              else {\n                // insert\n                sQuery = \"INSERT INTO UP_SS_USER_ATTS (USER_ID,PROFILE_ID,SS_ID,SS_TYPE,STRUCT_ID,PARAM_NAME,PARAM_TYPE,PARAM_VAL) VALUES (\"\n                    + userId + \",\" + profileId + \",\" + stylesheetId + \",1,'\" + folderId.substring(1) + \"','\" + pName + \"',2,'\" + pValue\n                    + \"')\";\n              }\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setStructureStylesheetUserPreferences(): \" + sQuery);\n              stmt.executeUpdate(sQuery);\n            }\n          }\n        }\n        // write out channel attributes\n        for (Enumeration e = ssup.getChannels(); e.hasMoreElements();) {\n          String channelId = (String)e.nextElement();\n          for (Enumeration attre = ssup.getChannelAttributeNames(); attre.hasMoreElements();) {\n            String pName = (String)attre.nextElement();\n            String pValue = ssup.getDefinedChannelAttributeValue(channelId, pName);\n            if (pValue != null) {\n              // store user preferences\n              String sQuery = \"SELECT PARAM_VAL FROM UP_SS_USER_ATTS WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId\n                  + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND STRUCT_ID='\" + channelId.substring(1) + \"' AND PARAM_NAME='\" + pName\n                  + \"' AND PARAM_TYPE=3\";\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setStructureStylesheetUserPreferences(): \" + sQuery);\n              ResultSet rs = stmt.executeQuery(sQuery);\n              if (rs.next()) {\n                // update\n                sQuery = \"UPDATE UP_SS_USER_ATTS SET PARAM_VAL='\" + pValue + \"' WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\"\n                    + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND STRUCT_ID='\" + channelId.substring(1) + \"' AND PARAM_NAME='\"\n                    + pName + \"' AND PARAM_TYPE=3\";\n              }\n              else {\n                // insert\n                sQuery = \"INSERT INTO UP_SS_USER_ATTS (USER_ID,PROFILE_ID,SS_ID,SS_TYPE,STRUCT_ID,PARAM_NAME,PARAM_TYPE,PARAM_VAL) VALUES (\"\n                    + userId + \",\" + profileId + \",\" + stylesheetId + \",1,'\" + channelId.substring(1) + \"','\" + pName + \"',3,'\" + pValue\n                    + \"')\";\n              }\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setStructureStylesheetUserPreferences(): \" + sQuery);\n              stmt.executeUpdate(sQuery);\n            }\n          }\n        }\n        // Commit the transaction\n        RdbmServices.commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        RdbmServices.rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Registers a NEW theme stylesheet with the database.\n   * @param tsd Stylesheet description object\n   */\n  public Integer addThemeStylesheetDescription (ThemeStylesheetDescription tsd) throws Exception {\n    Connection con = rdbmService.getConnection();\n    try {\n      // Set autocommit false for the connection\n      setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        // we assume that this is a new stylesheet.\n        int id = getIncrementIntegerId(\"UP_SS_THEME\");\n        tsd.setId(id);\n        String sQuery = \"INSERT INTO UP_SS_THEME (SS_ID,SS_NAME,SS_URI,SS_DESCRIPTION_URI,SS_DESCRIPTION_TEXT,STRUCT_SS_ID,SAMPLE_URI,SAMPLE_ICON_URI,MIME_TYPE,DEVICE_TYPE,SERIALIZER_NAME,UP_MODULE_CLASS) VALUES (\"\n            + id + \",'\" + tsd.getStylesheetName() + \"','\" + tsd.getStylesheetURI() + \"','\" + tsd.getStylesheetDescriptionURI()\n            + \"','\" + tsd.getStylesheetWordDescription() + \"',\" + tsd.getStructureStylesheetId() + \",'\" + tsd.getSamplePictureURI()\n            + \"','\" + tsd.getSampleIconURI() + \"','\" + tsd.getMimeType() + \"','\" + tsd.getDeviceType() + \"','\" + tsd.getSerializerName()\n            + \"','\" + tsd.getCustomUserPreferencesManagerClass() + \"')\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // insert all stylesheet params\n        for (Enumeration e = tsd.getStylesheetParameterNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          sQuery = \"INSERT INTO UP_SS_THEME_PARM (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + id +\n              \",'\" + pName + \"','\" + tsd.getStylesheetParameterDefaultValue(pName) + \"','\" + tsd.getStylesheetParameterWordDescription(pName)\n              + \"',1)\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // insert all channel attributes\n        for (Enumeration e = tsd.getChannelAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          sQuery = \"INSERT INTO UP_SS_THEME_PARM (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + id +\n              \",'\" + pName + \"','\" + tsd.getChannelAttributeDefaultValue(pName) + \"','\" + tsd.getChannelAttributeWordDescription(pName)\n              + \"',3)\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // Commit the transaction\n        commit(con);\n        return  new Integer(id);\n      } catch (Exception e) {\n        // Roll back the transaction\n        rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58385,"modified_method":"/**\n   * Registers a NEW theme stylesheet with the database.\n   * @param tsd Stylesheet description object\n   */\n  public Integer addThemeStylesheetDescription (ThemeStylesheetDescription tsd) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    try {\n      // Set autocommit false for the connection\n      RdbmServices.setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        // we assume that this is a new stylesheet.\n        int id = getIncrementIntegerId(\"UP_SS_THEME\");\n        tsd.setId(id);\n        String sQuery = \"INSERT INTO UP_SS_THEME (SS_ID,SS_NAME,SS_URI,SS_DESCRIPTION_URI,SS_DESCRIPTION_TEXT,STRUCT_SS_ID,SAMPLE_URI,SAMPLE_ICON_URI,MIME_TYPE,DEVICE_TYPE,SERIALIZER_NAME,UP_MODULE_CLASS) VALUES (\"\n            + id + \",'\" + tsd.getStylesheetName() + \"','\" + tsd.getStylesheetURI() + \"','\" + tsd.getStylesheetDescriptionURI()\n            + \"','\" + tsd.getStylesheetWordDescription() + \"',\" + tsd.getStructureStylesheetId() + \",'\" + tsd.getSamplePictureURI()\n            + \"','\" + tsd.getSampleIconURI() + \"','\" + tsd.getMimeType() + \"','\" + tsd.getDeviceType() + \"','\" + tsd.getSerializerName()\n            + \"','\" + tsd.getCustomUserPreferencesManagerClass() + \"')\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // insert all stylesheet params\n        for (Enumeration e = tsd.getStylesheetParameterNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          sQuery = \"INSERT INTO UP_SS_THEME_PARM (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + id +\n              \",'\" + pName + \"','\" + tsd.getStylesheetParameterDefaultValue(pName) + \"','\" + tsd.getStylesheetParameterWordDescription(pName)\n              + \"',1)\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // insert all channel attributes\n        for (Enumeration e = tsd.getChannelAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          sQuery = \"INSERT INTO UP_SS_THEME_PARM (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + id +\n              \",'\" + pName + \"','\" + tsd.getChannelAttributeDefaultValue(pName) + \"','\" + tsd.getChannelAttributeWordDescription(pName)\n              + \"',3)\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // Commit the transaction\n        RdbmServices.commit(con);\n        return  new Integer(id);\n      } catch (Exception e) {\n        // Roll back the transaction\n        RdbmServices.rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Obtain a list of theme stylesheet descriptions for a given structure stylesheet\n   * @param structureStylesheetName\n   * @return a map of stylesheet names to  theme stylesheet description objects\n   * @exception Exception\n   */\n  public Hashtable getThemeStylesheetList (int structureStylesheetId) throws Exception {\n    Connection con = rdbmService.getConnection();\n    Hashtable list = new Hashtable();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT SS_ID FROM UP_SS_THEME WHERE STRUCT_SS_ID=\" + structureStylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetList() : \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            ThemeStylesheetDescription tsd = getThemeStylesheetDescription(rs.getInt(\"SS_ID\"));\n            if (tsd != null)\n              list.put(new Integer(tsd.getId()), tsd);\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return  list;\n  }","id":58386,"modified_method":"/**\n   * Obtain a list of theme stylesheet descriptions for a given structure stylesheet\n   * @param structureStylesheetName\n   * @return a map of stylesheet names to  theme stylesheet description objects\n   * @exception Exception\n   */\n  public Hashtable getThemeStylesheetList (int structureStylesheetId) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    Hashtable list = new Hashtable();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT SS_ID FROM UP_SS_THEME WHERE STRUCT_SS_ID=\" + structureStylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetList() : \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            ThemeStylesheetDescription tsd = getThemeStylesheetDescription(rs.getInt(\"SS_ID\"));\n            if (tsd != null)\n              list.put(new Integer(tsd.getId()), tsd);\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return  list;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @return\n   * @exception Exception\n   */\n  public Hashtable getUserProfileList (IPerson person) throws Exception {\n    int userId = person.getID();\n\n    Hashtable pv = new Hashtable();\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT USER_ID, PROFILE_ID, PROFILE_NAME, DESCRIPTION, LAYOUT_ID, STRUCTURE_SS_ID, THEME_SS_ID FROM UP_USER_PROFILE WHERE USER_ID=\"\n            + userId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserProfileList(): \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            UserProfile upl = new UserProfile(rs.getInt(\"PROFILE_ID\"), rs.getString(\"PROFILE_NAME\"), rs.getString(\"DESCRIPTION\"),\n                rs.getInt(\"LAYOUT_ID\"), rs.getInt(\"STRUCTURE_SS_ID\"), rs.getInt(\"THEME_SS_ID\"));\n            pv.put(new Integer(upl.getProfileId()), upl);\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return  pv;\n  }","id":58387,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @return\n   * @exception Exception\n   */\n  public Hashtable getUserProfileList (IPerson person) throws Exception {\n    int userId = person.getID();\n\n    Hashtable pv = new Hashtable();\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT USER_ID, PROFILE_ID, PROFILE_NAME, DESCRIPTION, LAYOUT_ID, STRUCTURE_SS_ID, THEME_SS_ID FROM UP_USER_PROFILE WHERE USER_ID=\"\n            + userId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserProfileList(): \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            UserProfile upl = new UserProfile(rs.getInt(\"PROFILE_ID\"), rs.getString(\"PROFILE_NAME\"), rs.getString(\"DESCRIPTION\"),\n                rs.getInt(\"LAYOUT_ID\"), rs.getInt(\"STRUCTURE_SS_ID\"), rs.getInt(\"THEME_SS_ID\"));\n            pv.put(new Integer(upl.getProfileId()), upl);\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return  pv;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   *\n   * Example Directory Information\n   * Normally directory information would come from a real directory server using\n   * for example, LDAP.  The reference inplementation uses the database for\n   * directory information.\n   */\n  public String[] getUserDirectoryInformation (String username) throws Exception {\n    String[] acct = new String[] {\n      null, null, null\n    };\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String query = \"SELECT FIRST_NAME, LAST_NAME, EMAIL FROM UP_USER, UP_PERSON_DIR \" + \"WHERE UP_USER.USER_ID = UP_PERSON_DIR.USER_ID AND \"\n            + \"UP_USER.USER_NAME = '\" + username + \"'\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserDirectoryInformation(): \" + query);\n        ResultSet rset = stmt.executeQuery(query);\n        try {\n          if (rset.next()) {\n            acct[0] = rset.getString(\"FIRST_NAME\");\n            acct[1] = rset.getString(\"LAST_NAME\");\n            acct[2] = rset.getString(\"EMAIL\");\n          }\n        } finally {\n          rset.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return  acct;\n  }","id":58388,"modified_method":"/**\n   *\n   * Example Directory Information\n   * Normally directory information would come from a real directory server using\n   * for example, LDAP.  The reference inplementation uses the database for\n   * directory information.\n   */\n  public String[] getUserDirectoryInformation (String username) throws Exception {\n    String[] acct = new String[] {\n      null, null, null\n    };\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String query = \"SELECT FIRST_NAME, LAST_NAME, EMAIL FROM UP_USER, UP_PERSON_DIR \" + \"WHERE UP_USER.USER_ID = UP_PERSON_DIR.USER_ID AND \"\n            + \"UP_USER.USER_NAME = '\" + username + \"'\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserDirectoryInformation(): \" + query);\n        ResultSet rset = stmt.executeQuery(query);\n        try {\n          if (rset.next()) {\n            acct[0] = rset.getString(\"FIRST_NAME\");\n            acct[1] = rset.getString(\"LAST_NAME\");\n            acct[2] = rset.getString(\"EMAIL\");\n          }\n        } finally {\n          rset.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return  acct;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profile\n   * @return\n   * @exception Exception\n   */\n  public UserProfile addUserProfile (IPerson person, UserProfile profile) throws Exception {\n    int userId = person.getID();\n    // generate an id for this profile\n    Connection con = rdbmService.getConnection();\n    try {\n      int id = getIncrementIntegerId(\"UP_USER_PROFILE\");\n      profile.setProfileId(id);\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"INSERT INTO UP_USER_PROFILE (USER_ID,PROFILE_ID,PROFILE_NAME,STRUCTURE_SS_ID,THEME_SS_ID,DESCRIPTION) VALUES (\"\n            + userId + \",\" + profile.getProfileId() + \",'\" + profile.getProfileName() + \"',\" + profile.getStructureStylesheetId()\n            + \",\" + profile.getThemeStylesheetId() + \",'\" + profile.getProfileDescription() + \"')\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addUserProfile(): \" + sQuery);\n        stmt.executeUpdate(sQuery);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return  profile;\n  }","id":58389,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profile\n   * @return\n   * @exception Exception\n   */\n  public UserProfile addUserProfile (IPerson person, UserProfile profile) throws Exception {\n    int userId = person.getID();\n    // generate an id for this profile\n    Connection con = RdbmServices.getConnection();\n    try {\n      int id = getIncrementIntegerId(\"UP_USER_PROFILE\");\n      profile.setProfileId(id);\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"INSERT INTO UP_USER_PROFILE (USER_ID,PROFILE_ID,PROFILE_NAME,STRUCTURE_SS_ID,THEME_SS_ID,DESCRIPTION) VALUES (\"\n            + userId + \",\" + profile.getProfileId() + \",'\" + profile.getProfileName() + \"',\" + profile.getStructureStylesheetId()\n            + \",\" + profile.getThemeStylesheetId() + \",'\" + profile.getProfileDescription() + \"')\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addUserProfile(): \" + sQuery);\n        stmt.executeUpdate(sQuery);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return  profile;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Obtain ID for known theme stylesheet name\n   * @param ssName name of the theme stylesheet\n   * @return id or null if no theme matches the name given.\n   */\n  public Integer getThemeStylesheetId (String tsName) throws Exception {\n    Integer id = null;\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT SS_ID FROM UP_SS_THEME WHERE SS_NAME='\" + tsName + \"'\";\n        ResultSet rs = stmt.executeQuery(sQuery);\n        if (rs.next()) {\n          id = new Integer(rs.getInt(\"SS_ID\"));\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return  id;\n  }","id":58390,"modified_method":"/**\n   * Obtain ID for known theme stylesheet name\n   * @param ssName name of the theme stylesheet\n   * @return id or null if no theme matches the name given.\n   */\n  public Integer getThemeStylesheetId (String tsName) throws Exception {\n    Integer id = null;\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT SS_ID FROM UP_SS_THEME WHERE SS_NAME='\" + tsName + \"'\";\n        ResultSet rs = stmt.executeQuery(sQuery);\n        if (rs.next()) {\n          id = new Integer(rs.getInt(\"SS_ID\"));\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return  id;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param tableName\n   * @exception Exception\n   */\n  public synchronized void createCounter (String tableName) throws Exception {\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sInsert = \"INSERT INTO UP_SEQUENCE (SEQUENCE_NAME,SEQUENCE_VALUE/*/) VALUES ('\" + tableName + \"',0)\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::createCounter(): \" + sInsert);\n        stmt.executeUpdate(sInsert);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58391,"modified_method":"/**\n   * put your documentation comment here\n   * @param tableName\n   * @exception Exception\n   */\n  public synchronized void createCounter (String tableName) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sInsert = \"INSERT INTO UP_SEQUENCE (SEQUENCE_NAME,SEQUENCE_VALUE/*/) VALUES ('\" + tableName + \"',0)\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::createCounter(): \" + sInsert);\n        stmt.executeUpdate(sInsert);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param prefix\n   * @return\n   * @exception Exception\n   */\n  protected String getNextStructId (IPerson person, String prefix) throws Exception {\n    int userId = person.getID();\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT NEXT_STRUCT_ID FROM UP_USER WHERE USER_ID=\" + userId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getNextStructId(): \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          rs.next();\n          int currentStructId = rs.getInt(1);\n          int nextStructId = currentStructId + 1;\n          sQuery = \"UPDATE UP_USER SET NEXT_STRUCT_ID=\" + nextStructId + \" WHERE USER_ID=\" + userId + \" AND NEXT_STRUCT_ID=\"\n              + currentStructId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getNextStructId(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n          return  prefix + nextStructId;\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58392,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param prefix\n   * @return\n   * @exception Exception\n   */\n  protected String getNextStructId (IPerson person, String prefix) throws Exception {\n    int userId = person.getID();\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT NEXT_STRUCT_ID FROM UP_USER WHERE USER_ID=\" + userId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getNextStructId(): \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          rs.next();\n          int currentStructId = rs.getInt(1);\n          int nextStructId = currentStructId + 1;\n          sQuery = \"UPDATE UP_USER SET NEXT_STRUCT_ID=\" + nextStructId + \" WHERE USER_ID=\" + userId + \" AND NEXT_STRUCT_ID=\"\n              + currentStructId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getNextStructId(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n          return  prefix + nextStructId;\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"protected static final MyPreparedStatement getChannelPstmt(Connection con) throws SQLException {\n    String sql;\n    sql = \"SELECT UC.CHAN_TITLE,UC.CHAN_DESC,UC.CHAN_CLASS,UC.CHAN_TYPE_ID,UC.CHAN_PUBL_ID,UC.CHAN_APVL_ID,UC.CHAN_PUBL_DT,UC.CHAN_APVL_DT,\"+\n      \"UC.CHAN_TIMEOUT,UC.CHAN_EDITABLE,UC.CHAN_HAS_HELP,UC.CHAN_HAS_ABOUT,UC.CHAN_NAME,UC.CHAN_FNAME\";\n\n    if (supportsOuterJoins) {\n      sql += \",CHAN_PARM_NM, CHAN_PARM_VAL,CHAN_PARM_OVRD,CHAN_PARM_DESC \" + dbStrings.channel;\n    } else {\n      sql += \" FROM UP_CHANNEL UC WHERE\";\n    }\n    sql += \" UC.CHAN_ID=? AND CHAN_APVL_DT IS NOT NULL AND CHAN_APVL_DT <= \" + tsStart + \"'\" +\n      new java.sql.Timestamp(System.currentTimeMillis()).toString() + \"'\" + tsEnd;\n\n    return new MyPreparedStatement(con, sql);\n  }","id":58393,"modified_method":"protected static final RdbmServices.PreparedStatement getChannelPstmt(Connection con) throws SQLException {\n    String sql;\n    sql = \"SELECT UC.CHAN_TITLE,UC.CHAN_DESC,UC.CHAN_CLASS,UC.CHAN_TYPE_ID,UC.CHAN_PUBL_ID,UC.CHAN_APVL_ID,UC.CHAN_PUBL_DT,UC.CHAN_APVL_DT,\"+\n      \"UC.CHAN_TIMEOUT,UC.CHAN_EDITABLE,UC.CHAN_HAS_HELP,UC.CHAN_HAS_ABOUT,UC.CHAN_NAME,UC.CHAN_FNAME\";\n\n    if (supportsOuterJoins) {\n      sql += \",CHAN_PARM_NM, CHAN_PARM_VAL,CHAN_PARM_OVRD,CHAN_PARM_DESC \" + dbStrings.channel;\n    } else {\n      sql += \" FROM UP_CHANNEL UC WHERE\";\n    }\n    sql += \" UC.CHAN_ID=? AND CHAN_APVL_DT IS NOT NULL AND CHAN_APVL_DT <= \" + RdbmServices.sqlTimeStamp();\n\n    return new RdbmServices.PreparedStatement(con, sql);\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"protected static final MyPreparedStatement getChannelParmPstmt(Connection con) throws SQLException {\n    if (supportsOuterJoins) {\n      return null;\n    } else {\n      return new MyPreparedStatement(con, \"SELECT CHAN_PARM_NM, CHAN_PARM_VAL,CHAN_PARM_OVRD,CHAN_PARM_DESC FROM UP_CHANNEL_PARAM WHERE CHAN_ID=?\");\n    }\n  }","id":58394,"modified_method":"protected static final RdbmServices.PreparedStatement getChannelParmPstmt(Connection con) throws SQLException {\n    if (supportsOuterJoins) {\n      return null;\n    } else {\n      return new RdbmServices.PreparedStatement(con, \"SELECT CHAN_PARM_NM, CHAN_PARM_VAL,CHAN_PARM_OVRD,CHAN_PARM_DESC FROM UP_CHANNEL_PARAM WHERE CHAN_ID=?\");\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profileId\n   * @return\n   * @exception Exception\n   */\n  public UserProfile getUserProfileById (IPerson person, int profileId) throws Exception {\n    int userId = person.getID();\n    UserProfile upl = null;\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT USER_ID, PROFILE_ID, PROFILE_NAME, DESCRIPTION, LAYOUT_ID, STRUCTURE_SS_ID, THEME_SS_ID FROM UP_USER_PROFILE WHERE USER_ID=\"\n            + userId + \" AND PROFILE_ID=\" + profileId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserProfileId(): \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          if (rs.next()) {\n            upl = new UserProfile(profileId, rs.getString(\"PROFILE_NAME\"), rs.getString(\"DESCRIPTION\"), rs.getInt(\"LAYOUT_ID\"),\n                rs.getInt(\"STRUCTURE_SS_ID\"), rs.getInt(\"THEME_SS_ID\"));\n          }\n          else {\n            return  null;\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return  upl;\n  }","id":58395,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profileId\n   * @return\n   * @exception Exception\n   */\n  public UserProfile getUserProfileById (IPerson person, int profileId) throws Exception {\n    int userId = person.getID();\n    UserProfile upl = null;\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT USER_ID, PROFILE_ID, PROFILE_NAME, DESCRIPTION, LAYOUT_ID, STRUCTURE_SS_ID, THEME_SS_ID FROM UP_USER_PROFILE WHERE USER_ID=\"\n            + userId + \" AND PROFILE_ID=\" + profileId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserProfileId(): \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          if (rs.next()) {\n            upl = new UserProfile(profileId, rs.getString(\"PROFILE_NAME\"), rs.getString(\"DESCRIPTION\"), rs.getInt(\"LAYOUT_ID\"),\n                rs.getInt(\"STRUCTURE_SS_ID\"), rs.getInt(\"THEME_SS_ID\"));\n          }\n          else {\n            return  null;\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return  upl;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   *   UserPreferences\n   */\n  public int getUserBrowserMapping (IPerson person, String userAgent) throws Exception {\n    int userId = person.getID();\n    int profileId = 0;\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT PROFILE_ID, USER_ID FROM UP_USER_UA_MAP WHERE USER_ID=\" + userId + \" AND USER_AGENT='\" +\n            userAgent + \"'\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserBrowserMapping(): \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          if (rs.next()) {\n            profileId = rs.getInt(\"PROFILE_ID\");\n          }\n          else {\n            return  0;\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return  profileId;\n  }","id":58396,"modified_method":"/**\n   *   UserPreferences\n   */\n  public int getUserBrowserMapping (IPerson person, String userAgent) throws Exception {\n    int userId = person.getID();\n    int profileId = 0;\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT PROFILE_ID, USER_ID FROM UP_USER_UA_MAP WHERE USER_ID=\" + userId + \" AND USER_AGENT='\" +\n            userAgent + \"'\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserBrowserMapping(): \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          if (rs.next()) {\n            profileId = rs.getInt(\"PROFILE_ID\");\n          }\n          else {\n            return  0;\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return  profileId;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param stylesheetName\n   * @exception Exception\n   */\n  public void removeStructureStylesheetDescription (int stylesheetId) throws Exception {\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        // detele all associated theme stylesheets\n        String sQuery = \"SELECT SS_ID FROM UP_SS_THEME WHERE STRUCT_SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeStructureStylesheetDescription() : \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            removeThemeStylesheetDescription(rs.getInt(\"SS_ID\"));\n          }\n        } finally {\n          rs.close();\n        }\n        sQuery = \"DELETE FROM UP_SS_STRUCT WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeStructureStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // delete params\n        sQuery = \"DELETE FROM UP_SS_STRUCT_PAR WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeStructureStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // clean up user preferences\n        // should we do something about profiles ?\n        commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58397,"modified_method":"/**\n   * put your documentation comment here\n   * @param stylesheetName\n   * @exception Exception\n   */\n  public void removeStructureStylesheetDescription (int stylesheetId) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        // detele all associated theme stylesheets\n        String sQuery = \"SELECT SS_ID FROM UP_SS_THEME WHERE STRUCT_SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeStructureStylesheetDescription() : \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            removeThemeStylesheetDescription(rs.getInt(\"SS_ID\"));\n          }\n        } finally {\n          rs.close();\n        }\n        sQuery = \"DELETE FROM UP_SS_STRUCT WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeStructureStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // delete params\n        sQuery = \"DELETE FROM UP_SS_STRUCT_PAR WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeStructureStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // clean up user preferences\n        // should we do something about profiles ?\n        RdbmServices.commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        RdbmServices.rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   *\n   * Authorization\n   *\n   */\n  public String[] getUserAccountInformation (String username) throws Exception {\n    String[] acct = new String[] {\n      null, null, null, null\n    };\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String query = \"SELECT  ENCRPTD_PSWD, FIRST_NAME, LAST_NAME, EMAIL FROM UP_PERSON_DIR WHERE \"\n            + \"USER_NAME = '\" + username + \"'\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserAccountInformation(): \" + query);\n        ResultSet rset = stmt.executeQuery(query);\n        try {\n          if (rset.next()) {\n            acct[0] = rset.getString(\"ENCRPTD_PSWD\");\n            acct[1] = rset.getString(\"FIRST_NAME\");\n            acct[2] = rset.getString(\"LAST_NAME\");\n          }\n        } finally {\n          rset.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return  acct;\n  }","id":58398,"modified_method":"/**\n   *\n   * Authorization\n   *\n   */\n  public String[] getUserAccountInformation (String username) throws Exception {\n    String[] acct = new String[] {\n      null, null, null, null\n    };\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String query = \"SELECT  ENCRPTD_PSWD, FIRST_NAME, LAST_NAME, EMAIL FROM UP_PERSON_DIR WHERE \"\n            + \"USER_NAME = '\" + username + \"'\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserAccountInformation(): \" + query);\n        ResultSet rset = stmt.executeQuery(query);\n        try {\n          if (rset.next()) {\n            acct[0] = rset.getString(\"ENCRPTD_PSWD\");\n            acct[1] = rset.getString(\"FIRST_NAME\");\n            acct[2] = rset.getString(\"LAST_NAME\");\n          }\n        } finally {\n          rset.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return  acct;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param doc\n   * @exception Exception\n   */\n  public void saveBookmarkXML (IPerson person, Document doc) throws Exception {\n    int userId = person.getID();\n    StringWriter outString = new StringWriter();\n    XMLSerializer xsl = new XMLSerializer(outString, new OutputFormat(doc));\n    xsl.serialize(doc);\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement statem = con.createStatement();\n      try {\n        String sQuery = \"UPDATE UPC_BOOKMARKS SET BOOKMARK_XML = '\" + outString.toString() + \"' WHERE PORTAL_USER_ID = \"\n            + userId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::saveBookmarkXML(): \" + sQuery);\n        statem.executeUpdate(sQuery);\n      } finally {\n        statem.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58399,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param doc\n   * @exception Exception\n   */\n  public void saveBookmarkXML (IPerson person, Document doc) throws Exception {\n    int userId = person.getID();\n    StringWriter outString = new StringWriter();\n    XMLSerializer xsl = new XMLSerializer(outString, new OutputFormat(doc));\n    xsl.serialize(doc);\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement statem = con.createStatement();\n      try {\n        String sQuery = \"UPDATE UPC_BOOKMARKS SET BOOKMARK_XML = '\" + outString.toString() + \"' WHERE PORTAL_USER_ID = \"\n            + userId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::saveBookmarkXML(): \" + sQuery);\n        statem.executeUpdate(sQuery);\n      } finally {\n        statem.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param userAgent\n   * @param profileId\n   * @exception Exception\n   */\n  public void setUserBrowserMapping (IPerson person, String userAgent, int profileId) throws Exception {\n    int userId = person.getID();\n    Connection con = rdbmService.getConnection();\n    try {\n      // Set autocommit false for the connection\n      setAutoCommit(con, false);\n      // remove the old mapping and add the new one\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"DELETE FROM UP_USER_UA_MAP WHERE USER_ID=\" + userId + \" AND USER_AGENT='\" + userAgent + \"'\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserBrowserMapping(): \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        sQuery = \"INSERT INTO UP_USER_UA_MAP (USER_ID,USER_AGENT,PROFILE_ID) VALUES (\" + userId + \",'\" + userAgent + \"',\"\n            + profileId + \")\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserBrowserMapping(): \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // Commit the transaction\n        commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58400,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param userAgent\n   * @param profileId\n   * @exception Exception\n   */\n  public void setUserBrowserMapping (IPerson person, String userAgent, int profileId) throws Exception {\n    int userId = person.getID();\n    Connection con = RdbmServices.getConnection();\n    try {\n      // Set autocommit false for the connection\n      RdbmServices.setAutoCommit(con, false);\n      // remove the old mapping and add the new one\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"DELETE FROM UP_USER_UA_MAP WHERE USER_ID=\" + userId + \" AND USER_AGENT='\" + userAgent + \"'\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserBrowserMapping(): \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        sQuery = \"INSERT INTO UP_USER_UA_MAP (USER_ID,USER_AGENT,PROFILE_ID) VALUES (\" + userId + \",'\" + userAgent + \"',\"\n            + profileId + \")\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserBrowserMapping(): \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // Commit the transaction\n        RdbmServices.commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        RdbmServices.rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profile\n   * @exception Exception\n   */\n  public void updateUserProfile (IPerson person, UserProfile profile) throws Exception {\n    int userId = person.getID();\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"UPDATE UP_USER_PROFILE SET THEME_SS_ID=\" + profile.getThemeStylesheetId() + \", STRUCTURE_SS_ID=\"\n            + profile.getStructureStylesheetId() + \", DESCRIPTION='\" + profile.getProfileDescription() + \"', PROFILE_NAME='\"\n            + profile.getProfileName() + \"' WHERE USER_ID = \" + userId + \" AND PROFILE_ID=\" + profile.getProfileId();\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateUserProfile() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58401,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profile\n   * @exception Exception\n   */\n  public void updateUserProfile (IPerson person, UserProfile profile) throws Exception {\n    int userId = person.getID();\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"UPDATE UP_USER_PROFILE SET THEME_SS_ID=\" + profile.getThemeStylesheetId() + \", STRUCTURE_SS_ID=\"\n            + profile.getStructureStylesheetId() + \", DESCRIPTION='\" + profile.getProfileDescription() + \"', PROFILE_NAME='\"\n            + profile.getProfileName() + \"' WHERE USER_ID = \" + userId + \" AND PROFILE_ID=\" + profile.getProfileId();\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateUserProfile() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"public synchronized int getIncrementIntegerId (String tableName) throws Exception {\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT SEQUENCE_VALUE FROM UP_SEQUENCE WHERE SEQUENCE_NAME='\" + tableName + \"'\";\n        for (int i = 0; i < 25; i++) {\n          try {\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getIncrementInteger(): \" + sQuery);\n            ResultSet rs = stmt.executeQuery(sQuery);\n            int origId;\n            int nextId;\n            try {\n              rs.next();\n              origId = rs.getInt(1);\n              nextId = origId + 1;\n            } catch (SQLException e) { // If the query fails, there is no hope in h**k\n              throw new Exception(\"RDBMUserLayoutStore::getIncrementInteger():\" + e);\n            } finally {\n              rs.close();\n            }\n            String sInsert = \"UPDATE UP_SEQUENCE SET SEQUENCE_VALUE=\" + nextId + \" WHERE SEQUENCE_NAME='\" + tableName + \"'\" +\n              \" AND SEQUENCE_VALUE=\" + origId;\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getIncrementInteger(): \" + sInsert);\n            stmt.executeUpdate(sInsert);\n            return  nextId;\n          } catch (SQLException e) {\n            /**\n             * Assume a concurrent update. Try again after some random amount of microseconds.\n             */\n            Thread.sleep(java.lang.Math.round(java.lang.Math.random()*3000 * 1000)); // Retry in up to 3 seconds\n//          Thread.sleep(java.lang.StrictMath.round(java.lang.StrictMath.random()*3000 * 1000)); // Retry in up to 3 seconds\n          }\n        }\n      } finally {\n        stmt.close();\n      }\n    } catch (Exception e) {\n      LogService.instance().log(LogService.ERROR, e);\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    throw new Exception(\"Unable to increment counter for \" + tableName);\n  }","id":58402,"modified_method":"public synchronized int getIncrementIntegerId (String tableName) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT SEQUENCE_VALUE FROM UP_SEQUENCE WHERE SEQUENCE_NAME='\" + tableName + \"'\";\n        for (int i = 0; i < 25; i++) {\n          try {\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getIncrementInteger(): \" + sQuery);\n            ResultSet rs = stmt.executeQuery(sQuery);\n            int origId;\n            int nextId;\n            try {\n              rs.next();\n              origId = rs.getInt(1);\n              nextId = origId + 1;\n            } catch (SQLException e) { // If the query fails, there is no hope in h**k\n              throw new Exception(\"RDBMUserLayoutStore::getIncrementInteger():\" + e);\n            } finally {\n              rs.close();\n            }\n            String sInsert = \"UPDATE UP_SEQUENCE SET SEQUENCE_VALUE=\" + nextId + \" WHERE SEQUENCE_NAME='\" + tableName + \"'\" +\n              \" AND SEQUENCE_VALUE=\" + origId;\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getIncrementInteger(): \" + sInsert);\n            stmt.executeUpdate(sInsert);\n            return  nextId;\n          } catch (SQLException e) {\n            /**\n             * Assume a concurrent update. Try again after some random amount of microseconds.\n             */\n            Thread.sleep(java.lang.Math.round(java.lang.Math.random()*3000 * 1000)); // Retry in up to 3 seconds\n//          Thread.sleep(java.lang.StrictMath.round(java.lang.StrictMath.random()*3000 * 1000)); // Retry in up to 3 seconds\n          }\n        }\n      } finally {\n        stmt.close();\n      }\n    } catch (Exception e) {\n      LogService.instance().log(LogService.ERROR, e);\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    throw new Exception(\"Unable to increment counter for \" + tableName);\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"public Document getChannelRegistryXML (IPerson person) throws SQLException, AuthorizationException {\n    Document doc = new org.apache.xerces.dom.DocumentImpl();\n    Element registry = doc.createElement(\"registry\");\n    doc.appendChild(registry);\n    Connection con = rdbmService.getConnection();\n    try {\n      MyPreparedStatement chanStmt = new MyPreparedStatement(con, \"SELECT CHAN_ID FROM UP_CAT_CHAN WHERE CAT_ID=?\");\n      try {\n        Statement stmt = con.createStatement();\n        try {\n          String userKey = \"\" + person.getID();\n          Class userType = org.jasig.portal.security.IPerson.class;\n          IAuthorizationPrincipal ap = AuthorizationService.instance().newPrincipal(userKey, userType);\n          try {\n            String query = \"SELECT CAT_ID, CAT_TITLE, CAT_DESC FROM UP_CATEGORY WHERE PARENT_CAT_ID IS NULL ORDER BY CAT_TITLE\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getChannelRegistryXML(): \" + query);\n            ResultSet rs = stmt.executeQuery(query);\n            try {\n              while (rs.next()) {\n                int catId = rs.getInt(1);\n                String catTitle = rs.getString(2);\n                String catDesc = rs.getString(3);\n\n                // Top level <category>\n                Element category = doc.createElement(\"category\");\n                category.setAttribute(\"ID\", \"cat\" + catId);\n                category.setAttribute(\"name\", catTitle);\n                category.setAttribute(\"description\", catDesc);\n                ((org.apache.xerces.dom.DocumentImpl)doc).putIdentifier(category.getAttribute(\"ID\"), category);\n                registry.appendChild(category);\n\n                  // Add child categories and channels\n                appendChildCategoriesAndChannels(con, ap, chanStmt, category, catId);\n              }\n            } finally {\n              rs.close();\n            }\n          } finally {\n            // ap.close();\n          }\n        } finally {\n          stmt.close();\n        }\n      } finally {\n        chanStmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return doc;\n  }","id":58403,"modified_method":"public Document getChannelRegistryXML (IPerson person) throws SQLException, AuthorizationException {\n    Document doc = new org.apache.xerces.dom.DocumentImpl();\n    Element registry = doc.createElement(\"registry\");\n    doc.appendChild(registry);\n    Connection con = RdbmServices.getConnection();\n    try {\n      RdbmServices.PreparedStatement chanStmt = new RdbmServices.PreparedStatement(con, \"SELECT CHAN_ID FROM UP_CAT_CHAN WHERE CAT_ID=?\");\n      try {\n        Statement stmt = con.createStatement();\n        try {\n          String userKey = \"\" + person.getID();\n          Class userType = org.jasig.portal.security.IPerson.class;\n          IAuthorizationPrincipal ap = AuthorizationService.instance().newPrincipal(userKey, userType);\n          try {\n            String query = \"SELECT CAT_ID, CAT_TITLE, CAT_DESC FROM UP_CATEGORY WHERE PARENT_CAT_ID IS NULL ORDER BY CAT_TITLE\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getChannelRegistryXML(): \" + query);\n            ResultSet rs = stmt.executeQuery(query);\n            try {\n              while (rs.next()) {\n                int catId = rs.getInt(1);\n                String catTitle = rs.getString(2);\n                String catDesc = rs.getString(3);\n\n                // Top level <category>\n                Element category = doc.createElement(\"category\");\n                category.setAttribute(\"ID\", \"cat\" + catId);\n                category.setAttribute(\"name\", catTitle);\n                category.setAttribute(\"description\", catDesc);\n                ((org.apache.xerces.dom.DocumentImpl)doc).putIdentifier(category.getAttribute(\"ID\"), category);\n                registry.appendChild(category);\n\n                  // Add child categories and channels\n                appendChildCategoriesAndChannels(con, ap, chanStmt, category, catId);\n              }\n            } finally {\n              rs.close();\n            }\n          } finally {\n            // ap.close();\n          }\n        } finally {\n          stmt.close();\n        }\n      } finally {\n        chanStmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return doc;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Publishes a channel.\n   * @param id\n   * @param publisherId\n   * @param doc\n   * @param con\n   * @exception Exception\n   */\n  protected void addChannel (int id, IPerson publisher, Document doc, Connection con) throws SQLException {\n    Element channel = (Element)doc.getFirstChild();\n    // Set autocommit false for the connection\n    setAutoCommit(con, false);\n    Statement stmt = con.createStatement();\n    try {\n      String sqlTitle = sqlEscape(channel.getAttribute(\"title\"));\n      String sqlDescription = sqlEscape(channel.getAttribute(\"description\"));\n      String sqlClass = channel.getAttribute(\"class\");\n      String sqlTypeID = channel.getAttribute(\"typeID\");\n      String sysdate = tsStart + \" '\" + new java.sql.Timestamp(System.currentTimeMillis()).toString() + \"'\" + tsEnd;\n      String sqlTimeout = channel.getAttribute(\"timeout\");\n      String timeout = \"0\";\n      if (sqlTimeout != null && sqlTimeout.trim().length() != 0) {\n        timeout  = sqlTimeout;\n      }\n      String sqlEditable = dbBool(channel.getAttribute(\"editable\"));\n      String sqlHasHelp = dbBool(channel.getAttribute(\"hasHelp\"));\n      String sqlHasAbout = dbBool(channel.getAttribute(\"hasAbout\"));\n      String sqlName = sqlEscape(channel.getAttribute(\"name\"));\n      String sqlFName = sqlEscape(channel.getAttribute(\"fname\"));\n\n      String sQuery = \"SELECT CHAN_ID FROM UP_CHANNEL WHERE CHAN_ID=\" + id;\n      LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sQuery);\n      ResultSet rs = stmt.executeQuery(sQuery);\n\n      // If channel is already there, do an update, otherwise do an insert\n      if (rs.next()) {\n        String sUpdate = \"UPDATE UP_CHANNEL SET \" +\n        \"CHAN_TITLE='\" + sqlTitle + \"', \" +\n        \"CHAN_DESC='\" + sqlDescription + \"', \" +\n        \"CHAN_CLASS='\" + sqlClass + \"', \" +\n        \"CHAN_TYPE_ID=\" + sqlTypeID + \", \" +\n        \"CHAN_PUBL_ID=\" + publisher.getID() + \", \" +\n        \"CHAN_PUBL_DT=\" + sysdate + \", \" +\n        \"CHAN_APVL_ID=NULL, \" +\n        \"CHAN_APVL_DT=NULL, \" +\n        \"CHAN_TIMEOUT=\" + timeout + \", \" +\n        \"CHAN_EDITABLE='\" + sqlEditable + \"', \" +\n        \"CHAN_HAS_HELP='\" + sqlHasHelp + \"', \" +\n        \"CHAN_HAS_ABOUT='\" + sqlHasAbout + \"', \" +\n        \"CHAN_NAME='\" + sqlName + \"', \" +\n        \"CHAN_FNAME='\" + sqlFName + \"' \" +\n        \"WHERE CHAN_ID=\" + id;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sUpdate);\n        stmt.executeUpdate(sUpdate);\n      } else {\n        String sInsert = \"INSERT INTO UP_CHANNEL (CHAN_ID, CHAN_TITLE, CHAN_DESC, CHAN_CLASS, CHAN_TYPE_ID, CHAN_PUBL_ID, CHAN_PUBL_DT,  CHAN_TIMEOUT, \"\n            + \"CHAN_EDITABLE, CHAN_HAS_HELP, CHAN_HAS_ABOUT, CHAN_NAME, CHAN_FNAME) \";\n        sInsert += \"VALUES (\" + id + \", '\" + sqlTitle + \"', '\" + sqlDescription + \"', '\" + sqlClass + \"', \" + sqlTypeID + \", \"\n            + publisher.getID() + \", \" + sysdate + \", \" + timeout\n            + \", '\" + sqlEditable + \"', '\" + sqlHasHelp + \"', '\" + sqlHasAbout\n            + \"', '\" + sqlName + \"', '\" + sqlFName + \"')\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sInsert);\n        stmt.executeUpdate(sInsert);\n      }\n\n      // First delete existing parameters for this channel\n      String sDelete = \"DELETE FROM UP_CHANNEL_PARAM WHERE CHAN_ID=\" + id;\n      LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sDelete);\n      int recordsDeleted = stmt.executeUpdate(sDelete);\n\n      NodeList parameters = channel.getChildNodes();\n      if (parameters != null) {\n        for (int i = 0; i < parameters.getLength(); i++) {\n          if (parameters.item(i).getNodeName().equals(\"parameter\")) {\n            Element parmElement = (Element)parameters.item(i);\n            NamedNodeMap nm = parmElement.getAttributes();\n            String paramName = null;\n            String paramValue = null;\n            String paramOverride = \"NULL\";\n            for (int j = 0; j < nm.getLength(); j++) {\n              Node param = nm.item(j);\n              String nodeName = param.getNodeName();\n              String nodeValue = param.getNodeValue();\n              if (DEBUG > 1) {\n                System.err.println(nodeName + \"=\" + nodeValue);\n              }\n              if (nodeName.equals(\"name\")) {\n                paramName = nodeValue;\n              } else if (nodeName.equals(\"value\")) {\n                paramValue = nodeValue;\n              } else if (nodeName.equals(\"override\") && nodeValue.equals(\"yes\")) {\n                paramOverride = \"'Y'\";\n              }\n            }\n            if (paramName == null && paramValue == null) {\n              throw new RuntimeException(\"Invalid parameter node\");\n            }\n            String sInsert = \"INSERT INTO UP_CHANNEL_PARAM (CHAN_ID, CHAN_PARM_NM, CHAN_PARM_VAL, CHAN_PARM_OVRD) VALUES (\" + id +\n                \",'\" + paramName + \"','\" + paramValue + \"',\" + paramOverride + \")\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sInsert);\n            stmt.executeUpdate(sInsert);\n          }\n        }\n      }\n      // Commit the transaction\n      commit(con);\n      synchronized (channelLock) {\n        if (channelCache.remove(new Integer(id)) != null) {\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): flushed channel \"\n            + id + \" from cache\");\n        }\n      }\n    } catch (SQLException sqle) {\n      rollback(con);\n      throw  sqle;\n    } finally {\n      stmt.close();\n    }\n  }","id":58404,"modified_method":"/**\n   * Publishes a channel.\n   * @param id\n   * @param publisherId\n   * @param doc\n   * @param con\n   * @exception Exception\n   */\n  protected void addChannel (int id, IPerson publisher, Document doc, Connection con) throws SQLException {\n    Element channel = (Element)doc.getFirstChild();\n    // Set autocommit false for the connection\n    RdbmServices.setAutoCommit(con, false);\n    Statement stmt = con.createStatement();\n    try {\n      String sqlTitle = sqlEscape(channel.getAttribute(\"title\"));\n      String sqlDescription = sqlEscape(channel.getAttribute(\"description\"));\n      String sqlClass = channel.getAttribute(\"class\");\n      String sqlTypeID = channel.getAttribute(\"typeID\");\n      String sysdate = RdbmServices.sqlTimeStamp();\n      String sqlTimeout = channel.getAttribute(\"timeout\");\n      String timeout = \"0\";\n      if (sqlTimeout != null && sqlTimeout.trim().length() != 0) {\n        timeout  = sqlTimeout;\n      }\n      String sqlEditable = RdbmServices.dbFlag(xmlBool(channel.getAttribute(\"editable\")));\n      String sqlHasHelp = RdbmServices.dbFlag(xmlBool(channel.getAttribute(\"hasHelp\")));\n      String sqlHasAbout = RdbmServices.dbFlag(xmlBool(channel.getAttribute(\"hasAbout\")));\n      String sqlName = sqlEscape(channel.getAttribute(\"name\"));\n      String sqlFName = sqlEscape(channel.getAttribute(\"fname\"));\n\n      String sQuery = \"SELECT CHAN_ID FROM UP_CHANNEL WHERE CHAN_ID=\" + id;\n      LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sQuery);\n      ResultSet rs = stmt.executeQuery(sQuery);\n\n      // If channel is already there, do an update, otherwise do an insert\n      if (rs.next()) {\n        String sUpdate = \"UPDATE UP_CHANNEL SET \" +\n        \"CHAN_TITLE='\" + sqlTitle + \"', \" +\n        \"CHAN_DESC='\" + sqlDescription + \"', \" +\n        \"CHAN_CLASS='\" + sqlClass + \"', \" +\n        \"CHAN_TYPE_ID=\" + sqlTypeID + \", \" +\n        \"CHAN_PUBL_ID=\" + publisher.getID() + \", \" +\n        \"CHAN_PUBL_DT=\" + sysdate + \", \" +\n        \"CHAN_APVL_ID=NULL, \" +\n        \"CHAN_APVL_DT=NULL, \" +\n        \"CHAN_TIMEOUT=\" + timeout + \", \" +\n        \"CHAN_EDITABLE='\" + sqlEditable + \"', \" +\n        \"CHAN_HAS_HELP='\" + sqlHasHelp + \"', \" +\n        \"CHAN_HAS_ABOUT='\" + sqlHasAbout + \"', \" +\n        \"CHAN_NAME='\" + sqlName + \"', \" +\n        \"CHAN_FNAME='\" + sqlFName + \"' \" +\n        \"WHERE CHAN_ID=\" + id;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sUpdate);\n        stmt.executeUpdate(sUpdate);\n      } else {\n        String sInsert = \"INSERT INTO UP_CHANNEL (CHAN_ID, CHAN_TITLE, CHAN_DESC, CHAN_CLASS, CHAN_TYPE_ID, CHAN_PUBL_ID, CHAN_PUBL_DT,  CHAN_TIMEOUT, \"\n            + \"CHAN_EDITABLE, CHAN_HAS_HELP, CHAN_HAS_ABOUT, CHAN_NAME, CHAN_FNAME) \";\n        sInsert += \"VALUES (\" + id + \", '\" + sqlTitle + \"', '\" + sqlDescription + \"', '\" + sqlClass + \"', \" + sqlTypeID + \", \"\n            + publisher.getID() + \", \" + sysdate + \", \" + timeout\n            + \", '\" + sqlEditable + \"', '\" + sqlHasHelp + \"', '\" + sqlHasAbout\n            + \"', '\" + sqlName + \"', '\" + sqlFName + \"')\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sInsert);\n        stmt.executeUpdate(sInsert);\n      }\n\n      // First delete existing parameters for this channel\n      String sDelete = \"DELETE FROM UP_CHANNEL_PARAM WHERE CHAN_ID=\" + id;\n      LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sDelete);\n      int recordsDeleted = stmt.executeUpdate(sDelete);\n\n      NodeList parameters = channel.getChildNodes();\n      if (parameters != null) {\n        for (int i = 0; i < parameters.getLength(); i++) {\n          if (parameters.item(i).getNodeName().equals(\"parameter\")) {\n            Element parmElement = (Element)parameters.item(i);\n            NamedNodeMap nm = parmElement.getAttributes();\n            String paramName = null;\n            String paramValue = null;\n            String paramOverride = \"NULL\";\n            for (int j = 0; j < nm.getLength(); j++) {\n              Node param = nm.item(j);\n              String nodeName = param.getNodeName();\n              String nodeValue = param.getNodeValue();\n              if (DEBUG > 1) {\n                System.err.println(nodeName + \"=\" + nodeValue);\n              }\n              if (nodeName.equals(\"name\")) {\n                paramName = nodeValue;\n              } else if (nodeName.equals(\"value\")) {\n                paramValue = nodeValue;\n              } else if (nodeName.equals(\"override\") && nodeValue.equals(\"yes\")) {\n                paramOverride = \"'Y'\";\n              }\n            }\n            if (paramName == null && paramValue == null) {\n              throw new RuntimeException(\"Invalid parameter node\");\n            }\n            String sInsert = \"INSERT INTO UP_CHANNEL_PARAM (CHAN_ID, CHAN_PARM_NM, CHAN_PARM_VAL, CHAN_PARM_OVRD) VALUES (\" + id +\n                \",'\" + paramName + \"','\" + paramValue + \"',\" + paramOverride + \")\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sInsert);\n            stmt.executeUpdate(sInsert);\n          }\n        }\n      }\n      // Commit the transaction\n      RdbmServices.commit(con);\n      synchronized (channelLock) {\n        if (channelCache.remove(new Integer(id)) != null) {\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): flushed channel \"\n            + id + \" from cache\");\n        }\n      }\n    } catch (SQLException sqle) {\n      RdbmServices.rollback(con);\n      throw  sqle;\n    } finally {\n      stmt.close();\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   *\n   * CoreStyleSheet\n   *\n   */\n  public void getMimeTypeList (Hashtable list) throws Exception {\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT A.MIME_TYPE, A.MIME_TYPE_DESCRIPTION FROM UP_MIME_TYPE A, UP_SS_MAP B WHERE B.MIME_TYPE=A.MIME_TYPE\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getMimeTypeList() : \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            list.put(rs.getString(\"MIME_TYPE\"), rs.getString(\"MIME_TYPE_DESCRIPTION\"));\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58405,"modified_method":"/**\n   *\n   * CoreStyleSheet\n   *\n   */\n  public void getMimeTypeList (Hashtable list) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT A.MIME_TYPE, A.MIME_TYPE_DESCRIPTION FROM UP_MIME_TYPE A, UP_SS_MAP B WHERE B.MIME_TYPE=A.MIME_TYPE\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getMimeTypeList() : \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            list.put(rs.getString(\"MIME_TYPE\"), rs.getString(\"MIME_TYPE_DESCRIPTION\"));\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profileId\n   * @exception Exception\n   */\n  public void deleteUserProfile (IPerson person, int profileId) throws Exception {\n    int userId = person.getID();\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"DELETE FROM UP_USER_PROFILE WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + Integer.toString(profileId);\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::deleteUserProfile() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58406,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profileId\n   * @exception Exception\n   */\n  public void deleteUserProfile (IPerson person, int profileId) throws Exception {\n    int userId = person.getID();\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"DELETE FROM UP_USER_PROFILE WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + Integer.toString(profileId);\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::deleteUserProfile() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param nodeup\n   * @param stmt\n   * @param userId\n   * @param layoutId\n   * @param structId\n   * @return\n   * @exception java.sql.SQLException\n   */\n  protected final int saveStructure (Node node, MyPreparedStatement structStmt, MyPreparedStatement parmStmt) throws java.sql.SQLException {\n    if (node == null || node.getNodeName().equals(\"parameter\")) { // No more or parameter node\n      return  0;\n    }\n    Element structure = (Element)node;\n    int saveStructId = Integer.parseInt(structure.getAttribute(\"ID\").substring(1));\n    int nextStructId = 0;\n    int childStructId = 0;\n    String sQuery;\n    if (DEBUG > 0) {\n      LogService.instance().log(LogService.DEBUG, \"-->\" + node.getNodeName() + \"@\" + saveStructId);\n    }\n    if (node.hasChildNodes()) {\n      childStructId = saveStructure(node.getFirstChild(), structStmt, parmStmt);\n    }\n    nextStructId = saveStructure(node.getNextSibling(), structStmt, parmStmt);\n    structStmt.clearParameters();\n    structStmt.setInt(1, saveStructId);\n    structStmt.setInt(2, nextStructId);\n    structStmt.setInt(3, childStructId);\n\n    String externalId = structure.getAttribute(\"external_id\");\n    if (externalId != null && externalId.trim().length() > 0) {\n      structStmt.setString(4, externalId.trim());\n    } else {\n      structStmt.setNull(4, java.sql.Types.VARCHAR);\n\n    }\n    if (node.getNodeName().equals(\"channel\")) {\n      int chanId = Integer.parseInt(node.getAttributes().getNamedItem(\"chanID\").getNodeValue());\n      structStmt.setInt(5, chanId);\n      structStmt.setNull(6,java.sql.Types.VARCHAR);\n    }\n    else {\n      structStmt.setNull(5,java.sql.Types.NUMERIC);\n      structStmt.setString(6, sqlEscape(structure.getAttribute(\"name\")));\n    }\n    String structType = structure.getAttribute(\"type\");\n    if (structType.length() > 0) {\n      structStmt.setString(7, structType);\n    } else {\n      structStmt.setNull(7,java.sql.Types.VARCHAR);\n    }\n    structStmt.setString(8, dbBool(structure.getAttribute(\"hidden\")));\n    structStmt.setString(9, dbBool(structure.getAttribute(\"immutable\")));\n    structStmt.setString(10, dbBool(structure.getAttribute(\"unremovable\")));\n    LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::saveStructure(): \" + structStmt);\n    structStmt.executeUpdate();\n\n    NodeList parameters = node.getChildNodes();\n    if (parameters != null) {\n      for (int i = 0; i < parameters.getLength(); i++) {\n        if (parameters.item(i).getNodeName().equals(\"parameter\")) {\n          Element parmElement = (Element)parameters.item(i);\n          NamedNodeMap nm = parmElement.getAttributes();\n          String nodeName = nm.getNamedItem(\"name\").getNodeValue();\n          String nodeValue = nm.getNamedItem(\"value\").getNodeValue();\n\n          Node override = nm.getNamedItem(\"override\");\n          if (DEBUG > 0) {\n            System.err.println(nodeName + \"=\" + nodeValue);\n          }\n          if (override == null || !override.getNodeValue().equals(\"yes\")) {\n            if (DEBUG > 0)\n              System.err.println(\"Not saving channel defined parameter value \" + nodeName);\n          }\n          else {\n            parmStmt.clearParameters();\n            parmStmt.setInt(1, saveStructId);\n            parmStmt.setString(2, nodeName);\n            parmStmt.setString(3, nodeValue);\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::saveStructure(): \" + parmStmt);\n            parmStmt.executeUpdate();\n          }\n        }\n      }\n    }\n    return  saveStructId;\n  }","id":58407,"modified_method":"/**\n   * put your documentation comment here\n   * @param nodeup\n   * @param stmt\n   * @param userId\n   * @param layoutId\n   * @param structId\n   * @return\n   * @exception java.sql.SQLException\n   */\n  protected final int saveStructure (Node node, RdbmServices.PreparedStatement structStmt, RdbmServices.PreparedStatement parmStmt) throws java.sql.SQLException {\n    if (node == null || node.getNodeName().equals(\"parameter\")) { // No more or parameter node\n      return  0;\n    }\n    Element structure = (Element)node;\n    int saveStructId = Integer.parseInt(structure.getAttribute(\"ID\").substring(1));\n    int nextStructId = 0;\n    int childStructId = 0;\n    String sQuery;\n    if (DEBUG > 0) {\n      LogService.instance().log(LogService.DEBUG, \"-->\" + node.getNodeName() + \"@\" + saveStructId);\n    }\n    if (node.hasChildNodes()) {\n      childStructId = saveStructure(node.getFirstChild(), structStmt, parmStmt);\n    }\n    nextStructId = saveStructure(node.getNextSibling(), structStmt, parmStmt);\n    structStmt.clearParameters();\n    structStmt.setInt(1, saveStructId);\n    structStmt.setInt(2, nextStructId);\n    structStmt.setInt(3, childStructId);\n\n    String externalId = structure.getAttribute(\"external_id\");\n    if (externalId != null && externalId.trim().length() > 0) {\n      structStmt.setString(4, externalId.trim());\n    } else {\n      structStmt.setNull(4, java.sql.Types.VARCHAR);\n\n    }\n    if (node.getNodeName().equals(\"channel\")) {\n      int chanId = Integer.parseInt(node.getAttributes().getNamedItem(\"chanID\").getNodeValue());\n      structStmt.setInt(5, chanId);\n      structStmt.setNull(6,java.sql.Types.VARCHAR);\n    }\n    else {\n      structStmt.setNull(5,java.sql.Types.NUMERIC);\n      structStmt.setString(6, sqlEscape(structure.getAttribute(\"name\")));\n    }\n    String structType = structure.getAttribute(\"type\");\n    if (structType.length() > 0) {\n      structStmt.setString(7, structType);\n    } else {\n      structStmt.setNull(7,java.sql.Types.VARCHAR);\n    }\n    structStmt.setString(8, RdbmServices.dbFlag(xmlBool(structure.getAttribute(\"hidden\"))));\n    structStmt.setString(9, RdbmServices.dbFlag(xmlBool(structure.getAttribute(\"immutable\"))));\n    structStmt.setString(10, RdbmServices.dbFlag(xmlBool(structure.getAttribute(\"unremovable\"))));\n    LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::saveStructure(): \" + structStmt);\n    structStmt.executeUpdate();\n\n    NodeList parameters = node.getChildNodes();\n    if (parameters != null) {\n      for (int i = 0; i < parameters.getLength(); i++) {\n        if (parameters.item(i).getNodeName().equals(\"parameter\")) {\n          Element parmElement = (Element)parameters.item(i);\n          NamedNodeMap nm = parmElement.getAttributes();\n          String nodeName = nm.getNamedItem(\"name\").getNodeValue();\n          String nodeValue = nm.getNamedItem(\"value\").getNodeValue();\n\n          Node override = nm.getNamedItem(\"override\");\n          if (DEBUG > 0) {\n            System.err.println(nodeName + \"=\" + nodeValue);\n          }\n          if (override == null || !override.getNodeValue().equals(\"yes\")) {\n            if (DEBUG > 0)\n              System.err.println(\"Not saving channel defined parameter value \" + nodeName);\n          }\n          else {\n            parmStmt.clearParameters();\n            parmStmt.setInt(1, saveStructId);\n            parmStmt.setString(2, nodeName);\n            parmStmt.setString(3, nodeValue);\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::saveStructure(): \" + parmStmt);\n            parmStmt.executeUpdate();\n          }\n        }\n      }\n    }\n    return  saveStructId;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Obtain a list of structure stylesheet descriptions that have stylesheets for a given\n   * mime type.\n   * @param mimeType\n   * @return a mapping from stylesheet names to structure stylesheet description objects\n   */\n  public Hashtable getStructureStylesheetList (String mimeType) throws Exception {\n    Connection con = rdbmService.getConnection();\n    Hashtable list = new Hashtable();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT A.SS_ID FROM UP_SS_STRUCT A, UP_SS_THEME B WHERE B.MIME_TYPE='\" + mimeType + \"' AND B.STRUCT_SS_ID=A.SS_ID\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetList() : \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            StructureStylesheetDescription ssd = getStructureStylesheetDescription(rs.getInt(\"SS_ID\"));\n            if (ssd != null)\n              list.put(new Integer(ssd.getId()), ssd);\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return  list;\n  }","id":58408,"modified_method":"/**\n   * Obtain a list of structure stylesheet descriptions that have stylesheets for a given\n   * mime type.\n   * @param mimeType\n   * @return a mapping from stylesheet names to structure stylesheet description objects\n   */\n  public Hashtable getStructureStylesheetList (String mimeType) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    Hashtable list = new Hashtable();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT A.SS_ID FROM UP_SS_STRUCT A, UP_SS_THEME B WHERE B.MIME_TYPE='\" + mimeType + \"' AND B.STRUCT_SS_ID=A.SS_ID\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetList() : \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            StructureStylesheetDescription ssd = getStructureStylesheetDescription(rs.getInt(\"SS_ID\"));\n            if (ssd != null)\n              list.put(new Integer(ssd.getId()), ssd);\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return  list;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * convert true/false into Y/N for database\n   * @param value to check\n   * @result Y/N\n   */\n  protected static final String dbBool (String value) {\n      return (value != null && value.equals(\"true\") ? \"Y\" : \"N\");\n  }","id":58409,"modified_method":"/**\n   * convert true/false into Y/N for database\n   * @param value to check\n   * @result boolean\n   */\n  protected static final boolean xmlBool (String value) {\n      return (value != null && value.equals(\"true\") ? true : false);\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Get a channel from the cache or the store\n   */\n  protected ChannelDefinition getChannel(int chanId, boolean cacheChannel, MyPreparedStatement pstmtChannel, MyPreparedStatement pstmtChannelParm) throws java.sql.SQLException {\n    Integer chanID = new Integer(chanId);\n    boolean inCache = true;\n    ChannelDefinition channel = (ChannelDefinition)channelCache.get(chanID);\n    if (channel == null) {\n      synchronized (channelLock) {\n        channel = (ChannelDefinition)channelCache.get(chanID);\n        if (channel == null || cacheChannel && channel.refreshMe()) {  // Still undefined or stale, let's get it\n          channel = getChannelDefinition(chanId, pstmtChannel, pstmtChannelParm);\n          inCache = false;\n          if (cacheChannel) {\n            channelCache.put(chanID, channel);\n            if (DEBUG > 1) {\n              System.err.println(\"Cached channel \" + chanId);\n            }\n          }\n        }\n      }\n    }\n\n    if (inCache) {\n      LogService.instance().log(LogService.DEBUG,\n        \"RDBMUserLayoutStore::getChannelDefinition(): Got channel \" + chanId + \" from the cache\");\n    }\n\n    return channel;\n  }","id":58410,"modified_method":"/**\n   * Get a channel from the cache or the store\n   */\n  protected ChannelDefinition getChannel(int chanId, boolean cacheChannel, RdbmServices.PreparedStatement pstmtChannel, RdbmServices.PreparedStatement pstmtChannelParm) throws java.sql.SQLException {\n    Integer chanID = new Integer(chanId);\n    boolean inCache = true;\n    ChannelDefinition channel = (ChannelDefinition)channelCache.get(chanID);\n    if (channel == null) {\n      synchronized (channelLock) {\n        channel = (ChannelDefinition)channelCache.get(chanID);\n        if (channel == null || cacheChannel && channel.refreshMe()) {  // Still undefined or stale, let's get it\n          channel = getChannelDefinition(chanId, pstmtChannel, pstmtChannelParm);\n          inCache = false;\n          if (cacheChannel) {\n            channelCache.put(chanID, channel);\n            if (DEBUG > 1) {\n              System.err.println(\"Cached channel \" + chanId);\n            }\n          }\n        }\n      }\n    }\n\n    if (inCache) {\n      LogService.instance().log(LogService.DEBUG,\n        \"RDBMUserLayoutStore::getChannelDefinition(): Got channel \" + chanId + \" from the cache\");\n    }\n\n    return channel;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Updates an existing structure stylesheet description with a new one. Old stylesheet\n   * description is found based on the Id provided in the parameter structure.\n   * @param ssd new stylesheet description\n   */\n  public void updateThemeStylesheetDescription (ThemeStylesheetDescription tsd) throws Exception {\n    Connection con = rdbmService.getConnection();\n    try {\n      // Set autocommit false for the connection\n      setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        int stylesheetId = tsd.getId();\n        String sQuery = \"UPDATE UP_SS_THEME SET SS_NAME='\" + tsd.getStylesheetName() + \"',SS_URI='\" + tsd.getStylesheetURI()\n            + \"',SS_DESCRIPTION_URI='\" + tsd.getStylesheetDescriptionURI() + \"',SS_DESCRIPTION_TEXT='\" + tsd.getStylesheetWordDescription()\n            + \"' WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateThemeStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // first, see what was there before\n        HashSet oparams = new HashSet();\n        HashSet ocattrs = new HashSet();\n        sQuery = \"SELECT PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE FROM UP_SS_THEME_PARM WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateThemeStylesheetDescription() : \" + sQuery);\n        Statement stmtOld = con.createStatement();\n        ResultSet rsOld = stmtOld.executeQuery(sQuery);\n        try {\n          while (rsOld.next()) {\n            int type = rsOld.getInt(\"TYPE\");\n            if (type == 1) {\n              // stylesheet param\n              String pName = rsOld.getString(\"PARAM_NAME\");\n              oparams.add(pName);\n              if (!tsd.containsParameterName(pName)) {\n                // delete param\n                removeThemeStylesheetParam(stylesheetId, pName, con);\n              }\n              else {\n                // update param\n                sQuery = \"UPDATE UP_SS_THEME_PARM SET PARAM_DEFAULT_VAL='\" + tsd.getStylesheetParameterDefaultValue(pName)\n                    + \"',PARAM_DESCRIPT='\" + tsd.getStylesheetParameterWordDescription(pName) + \"' WHERE SS_ID=\" + stylesheetId\n                    + \" AND PARAM_NAME='\" + pName + \"' AND TYPE=1\";\n                LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateThemeStylesheetDescription() : \" + sQuery);\n                stmt.executeUpdate(sQuery);\n              }\n            }\n            else if (type == 2) {\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getThemeStylesheetDescription() : encountered a folder attribute specified for a theme stylesheet ! DB is corrupt. (stylesheetId=\"\n                  + stylesheetId + \" param_name=\\\"\" + rsOld.getString(\"PARAM_NAME\") + \"\\\" type=\" + rsOld.getInt(\"TYPE\") +\n                  \").\");\n            }\n            else if (type == 3) {\n              // channel attribute\n              String pName = rsOld.getString(\"PARAM_NAME\");\n              ocattrs.add(pName);\n              if (!tsd.containsChannelAttribute(pName)) {\n                // delete channel attribute\n                removeThemeChannelAttribute(stylesheetId, pName, con);\n              }\n              else {\n                // update channel attribute\n                sQuery = \"UPDATE UP_SS_THEME_PARM SET PARAM_DEFAULT_VAL='\" + tsd.getChannelAttributeDefaultValue(pName) +\n                    \"',PARAM_DESCRIPT='\" + tsd.getChannelAttributeWordDescription(pName) + \"' WHERE SS_ID=\" + stylesheetId\n                    + \" AND PARAM_NAME='\" + pName + \"' AND TYPE=3\";\n                LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateThemeStylesheetDescription() : \" + sQuery);\n                stmt.executeUpdate(sQuery);\n              }\n            }\n            else {\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getThemeStylesheetDescription() : encountered param of unknown type! (stylesheetId=\"\n                  + stylesheetId + \" param_name=\\\"\" + rsOld.getString(\"PARAM_NAME\") + \"\\\" type=\" + rsOld.getInt(\"TYPE\") +\n                  \").\");\n            }\n          }\n        } finally {\n          rsOld.close();\n          stmtOld.close();\n        }\n        // look for new attributes/parameters\n        // insert all stylesheet params\n        for (Enumeration e = tsd.getStylesheetParameterNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          if (!oparams.contains(pName)) {\n            sQuery = \"INSERT INTO UP_SS_THEME_PARM (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + stylesheetId\n                + \",'\" + pName + \"','\" + tsd.getStylesheetParameterDefaultValue(pName) + \"','\" + tsd.getStylesheetParameterWordDescription(pName)\n                + \"',1)\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n            stmt.executeUpdate(sQuery);\n          }\n        }\n        // insert all channel attributes\n        for (Enumeration e = tsd.getChannelAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          if (!ocattrs.contains(pName)) {\n            sQuery = \"INSERT INTO UP_SS_THEME_PARM (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + stylesheetId\n                + \",'\" + pName + \"','\" + tsd.getChannelAttributeDefaultValue(pName) + \"','\" + tsd.getChannelAttributeWordDescription(pName)\n                + \"',3)\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n            stmt.executeUpdate(sQuery);\n          }\n        }\n        // Commit the transaction\n        commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58411,"modified_method":"/**\n   * Updates an existing structure stylesheet description with a new one. Old stylesheet\n   * description is found based on the Id provided in the parameter structure.\n   * @param ssd new stylesheet description\n   */\n  public void updateThemeStylesheetDescription (ThemeStylesheetDescription tsd) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    try {\n      // Set autocommit false for the connection\n      RdbmServices.setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        int stylesheetId = tsd.getId();\n        String sQuery = \"UPDATE UP_SS_THEME SET SS_NAME='\" + tsd.getStylesheetName() + \"',SS_URI='\" + tsd.getStylesheetURI()\n            + \"',SS_DESCRIPTION_URI='\" + tsd.getStylesheetDescriptionURI() + \"',SS_DESCRIPTION_TEXT='\" + tsd.getStylesheetWordDescription()\n            + \"' WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateThemeStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // first, see what was there before\n        HashSet oparams = new HashSet();\n        HashSet ocattrs = new HashSet();\n        sQuery = \"SELECT PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE FROM UP_SS_THEME_PARM WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateThemeStylesheetDescription() : \" + sQuery);\n        Statement stmtOld = con.createStatement();\n        ResultSet rsOld = stmtOld.executeQuery(sQuery);\n        try {\n          while (rsOld.next()) {\n            int type = rsOld.getInt(\"TYPE\");\n            if (type == 1) {\n              // stylesheet param\n              String pName = rsOld.getString(\"PARAM_NAME\");\n              oparams.add(pName);\n              if (!tsd.containsParameterName(pName)) {\n                // delete param\n                removeThemeStylesheetParam(stylesheetId, pName, con);\n              }\n              else {\n                // update param\n                sQuery = \"UPDATE UP_SS_THEME_PARM SET PARAM_DEFAULT_VAL='\" + tsd.getStylesheetParameterDefaultValue(pName)\n                    + \"',PARAM_DESCRIPT='\" + tsd.getStylesheetParameterWordDescription(pName) + \"' WHERE SS_ID=\" + stylesheetId\n                    + \" AND PARAM_NAME='\" + pName + \"' AND TYPE=1\";\n                LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateThemeStylesheetDescription() : \" + sQuery);\n                stmt.executeUpdate(sQuery);\n              }\n            }\n            else if (type == 2) {\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getThemeStylesheetDescription() : encountered a folder attribute specified for a theme stylesheet ! DB is corrupt. (stylesheetId=\"\n                  + stylesheetId + \" param_name=\\\"\" + rsOld.getString(\"PARAM_NAME\") + \"\\\" type=\" + rsOld.getInt(\"TYPE\") +\n                  \").\");\n            }\n            else if (type == 3) {\n              // channel attribute\n              String pName = rsOld.getString(\"PARAM_NAME\");\n              ocattrs.add(pName);\n              if (!tsd.containsChannelAttribute(pName)) {\n                // delete channel attribute\n                removeThemeChannelAttribute(stylesheetId, pName, con);\n              }\n              else {\n                // update channel attribute\n                sQuery = \"UPDATE UP_SS_THEME_PARM SET PARAM_DEFAULT_VAL='\" + tsd.getChannelAttributeDefaultValue(pName) +\n                    \"',PARAM_DESCRIPT='\" + tsd.getChannelAttributeWordDescription(pName) + \"' WHERE SS_ID=\" + stylesheetId\n                    + \" AND PARAM_NAME='\" + pName + \"' AND TYPE=3\";\n                LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateThemeStylesheetDescription() : \" + sQuery);\n                stmt.executeUpdate(sQuery);\n              }\n            }\n            else {\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getThemeStylesheetDescription() : encountered param of unknown type! (stylesheetId=\"\n                  + stylesheetId + \" param_name=\\\"\" + rsOld.getString(\"PARAM_NAME\") + \"\\\" type=\" + rsOld.getInt(\"TYPE\") +\n                  \").\");\n            }\n          }\n        } finally {\n          rsOld.close();\n          stmtOld.close();\n        }\n        // look for new attributes/parameters\n        // insert all stylesheet params\n        for (Enumeration e = tsd.getStylesheetParameterNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          if (!oparams.contains(pName)) {\n            sQuery = \"INSERT INTO UP_SS_THEME_PARM (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + stylesheetId\n                + \",'\" + pName + \"','\" + tsd.getStylesheetParameterDefaultValue(pName) + \"','\" + tsd.getStylesheetParameterWordDescription(pName)\n                + \"',1)\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n            stmt.executeUpdate(sQuery);\n          }\n        }\n        // insert all channel attributes\n        for (Enumeration e = tsd.getChannelAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          if (!ocattrs.contains(pName)) {\n            sQuery = \"INSERT INTO UP_SS_THEME_PARM (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + stylesheetId\n                + \",'\" + pName + \"','\" + tsd.getChannelAttributeDefaultValue(pName) + \"','\" + tsd.getChannelAttributeWordDescription(pName)\n                + \"',3)\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n            stmt.executeUpdate(sQuery);\n          }\n        }\n        // Commit the transaction\n        RdbmServices.commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        RdbmServices.rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"public ChannelDefinition(int chanId, String chanTitle, String chanDesc, String chanClass, int chanTypeId, int chanPupblUsrId, int chanApvlId,\n      Timestamp chanPublDt, Timestamp chanApvlDt, int chanTimeout, String chanEditable, String chanHasHelp,\n      String chanHasAbout, String chanName, String chanFName) {\n        this(chanId, chanTitle, chanDesc, chanClass, chanTypeId, chanPupblUsrId, chanApvlId, chanPublDt,  chanApvlDt, chanTimeout,\n              chanEditable!= null && chanEditable.equalsIgnoreCase(\"Y\"),\n              chanHasHelp!= null && chanHasHelp.equalsIgnoreCase(\"Y\"),\n              chanHasAbout!= null && chanHasAbout.equalsIgnoreCase(\"Y\"),\n              chanName, chanFName);\n    }","id":58412,"modified_method":"public ChannelDefinition(int chanId, String chanTitle, String chanDesc, String chanClass, int chanTypeId, int chanPupblUsrId, int chanApvlId,\n      java.sql.Timestamp chanPublDt, java.sql.Timestamp chanApvlDt, int chanTimeout, String chanEditable, String chanHasHelp,\n      String chanHasAbout, String chanName, String chanFName) {\n        this(chanId, chanTitle, chanDesc, chanClass, chanTypeId, chanPupblUsrId, chanApvlId, chanPublDt,  chanApvlDt, chanTimeout,\n              RdbmServices.dbFlag(chanEditable), RdbmServices.dbFlag(chanHasHelp),\n              RdbmServices.dbFlag(chanHasAbout),\n              chanName, chanFName);\n    }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Publishes a channel.\n   * @param id\n   * @param publisher\n   * @param chanXML\n   * @exception java.sql.SQLException\n   */\n  public void addChannel (int id, IPerson publisher, Document chanXML) throws SQLException {\n    Connection con = rdbmService.getConnection();\n    try {\n      addChannel(id, publisher, chanXML, con);\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58413,"modified_method":"/**\n   * Publishes a channel.\n   * @param id\n   * @param publisher\n   * @param chanXML\n   * @exception java.sql.SQLException\n   */\n  public void addChannel (int id, IPerson publisher, Document chanXML) throws SQLException {\n    Connection con = RdbmServices.getConnection();\n    try {\n      addChannel(id, publisher, chanXML, con);\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"public Document getUserLayout (IPerson person, int profileId) throws Exception {\n    int userId = person.getID();\n    int realUserId = userId;\n    Connection con = rdbmService.getConnection();\n    setAutoCommit(con, false);          // May speed things up, can't hurt\n\n    try {\n      DocumentImpl doc = new DocumentImpl();\n      Element root = doc.createElement(\"layout\");\n      Statement stmt = con.createStatement();\n      try {\n        long startTime = System.currentTimeMillis();\n        String subSelectString = \"SELECT LAYOUT_ID FROM UP_USER_PROFILE WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" +\n            profileId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + subSelectString);\n        int layoutId;\n        ResultSet rs = stmt.executeQuery(subSelectString);\n        try {\n          rs.next();\n          layoutId = rs.getInt(1);\n        } finally {\n          rs.close();\n        }\n\n        if (layoutId == 0) { // First time, grab the default layout for this user\n          String sQuery = \"SELECT USER_DFLT_USR_ID, USER_DFLT_LAY_ID FROM UP_USER WHERE USER_ID=\" + userId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + sQuery);\n          rs = stmt.executeQuery(sQuery);\n          try {\n            rs.next();\n            userId = rs.getInt(1);\n            layoutId = rs.getInt(2);\n          } finally {\n            rs.close();\n          }\n\n          // Make sure the next struct id is set in case the user adds a channel\n          sQuery = \"SELECT NEXT_STRUCT_ID FROM UP_USER WHERE USER_ID=\" + userId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sQuery);\n          int nextStructId;\n          rs = stmt.executeQuery(sQuery);\n          try {\n            rs.next();\n            nextStructId = rs.getInt(1);\n          } finally {\n            rs.close();\n          }\n          sQuery = \"UPDATE UP_USER SET NEXT_STRUCT_ID=\" + nextStructId + \" WHERE USER_ID=\" + realUserId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n\n          /* insert row(s) into up_ss_user_atts */\n          sQuery = \"DELETE FROM UP_SS_USER_ATTS WHERE USER_ID=\" + realUserId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n\n          String Insert = \"INSERT INTO UP_SS_USER_ATTS (USER_ID, PROFILE_ID, SS_ID, SS_TYPE, STRUCT_ID, PARAM_NAME, PARAM_TYPE, PARAM_VAL) \"+\n            \" SELECT \"+realUserId+\", USUA.PROFILE_ID, USUA.SS_ID, USUA.SS_TYPE, USUA.STRUCT_ID, USUA.PARAM_NAME, USUA.PARAM_TYPE, USUA.PARAM_VAL \"+\n            \" FROM UP_SS_USER_ATTS USUA WHERE USUA.USER_ID=\"+userId;\n          LogService.log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + Insert);\n          stmt.executeUpdate(Insert);\n\n          commit(con); // Make sure it appears in the store\n        }\n\n        int firstStructId = -1;\n        String sQuery = \"SELECT INIT_STRUCT_ID FROM UP_USER_LAYOUT WHERE USER_ID=\" + userId + \" AND LAYOUT_ID = \" + layoutId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + sQuery);\n        rs = stmt.executeQuery(sQuery);\n        try {\n          rs.next();\n          firstStructId = rs.getInt(1);\n        } finally {\n          rs.close();\n        }\n\n        String sql = \"SELECT ULS.STRUCT_ID,ULS.NEXT_STRUCT_ID,ULS.CHLD_STRUCT_ID,ULS.CHAN_ID,ULS.NAME,ULS.TYPE,ULS.HIDDEN,\"+\n          \"ULS.UNREMOVABLE,ULS.IMMUTABLE\";\n        if (supportsOuterJoins) {\n          sql += \",USP.STRUCT_PARM_NM,USP.STRUCT_PARM_VAL \" + dbStrings.layoutStructure;\n        } else {\n          sql += \" FROM UP_LAYOUT_STRUCT ULS WHERE \";\n        }\n        sql += \" ULS.USER_ID=\" + userId + \" AND ULS.LAYOUT_ID=\" + layoutId + \" ORDER BY ULS.STRUCT_ID\";\n        HashMap layoutStructure = new HashMap();\n        ArrayList chanIds = new ArrayList();\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + sql);\n          StringBuffer structParms = new StringBuffer();\n        rs = stmt.executeQuery(sql);\n        try {\n          int lastStructId = 0;\n          LayoutStructure ls = null;\n          String sepChar = \"\";\n          if (rs.next()) {\n            int structId = rs.getInt(1);\n            if (DEBUG > 1) System.err.println(\"Read layout structrure \" + structId);\n            readLayout: while (true) {\n              int chanId = rs.getInt(4);\n              ls = new LayoutStructure(structId,rs.getInt(2), rs.getInt(3), chanId, rs.getString(7),rs.getString(8),rs.getString(9));\n              layoutStructure.put(new Integer(structId), ls);\n              lastStructId = structId;\n              if (!ls.isChannel()) {\n                ls.addFolderData(rs.getString(5), rs.getString(6));\n              } else {\n                chanIds.add(new Integer(chanId)); // For later\n              }\n              if (supportsOuterJoins) {\n                do {\n                  String name = rs.getString(10);\n                  String value = rs.getString(11); // Oracle JDBC requires us to do this for longs\n                  if (name != null) { // may not be there because of the join\n                    ls.addParameter(name, value);\n                  }\n                  if (!rs.next()) {\n                    break readLayout;\n                  }\n                  structId = rs.getInt(1);\n                } while (structId == lastStructId);\n              } else { // Do second SELECT later on for structure parameters\n                if (ls.isChannel()) {\n                  structParms.append(sepChar + ls.chanId);\n                  sepChar = \",\";\n                }\n                if (rs.next()) {\n                  structId = rs.getInt(1);\n                } else {\n                  break readLayout;\n                }\n              }\n            } // while\n          }\n        } finally {\n          rs.close();\n        }\n\n        /**\n        * We have to retrieve the channel defition after the layout structure\n        * since retrieving the channel data from the DB may interfere with the\n        * layout structure ResultSet (in other words, Oracle is a pain to program for)\n        */\n        if (chanIds.size() > 0) {\n          MyPreparedStatement pstmtChannel = getChannelPstmt(con);\n          try {\n            MyPreparedStatement pstmtChannelParm = getChannelParmPstmt(con);\n            try {\n              // Pre-prime the channel pump\n              for (int i = 0; i < chanIds.size(); i++) {\n                int chanId = ((Integer) chanIds.get(i)).intValue();\n                getChannel(chanId, true, pstmtChannel, pstmtChannelParm);\n                if (DEBUG > 1) {\n                  System.err.println(\"Precached \" + chanId);\n                }\n              }\n            } finally {\n              if (pstmtChannelParm != null) {\n                pstmtChannelParm.close();\n              }\n            }\n          } finally {\n            pstmtChannel.close();\n          }\n          chanIds.clear();\n        }\n\n        if (!supportsOuterJoins) { // Pick up structure parameters\n          sql = \"SELECT STRUCT_ID, STRUCT_PARM_NM,STRUCT_PARM_VAL FROM UP_LAYOUT_PARAM WHERE USER_ID=\" + userId + \" AND LAYOUT_ID=\" + layoutId +\n            \" AND STRUCT_ID IN (\" + structParms.toString() + \") ORDER BY STRUCT_ID\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + sql);\n          rs = stmt.executeQuery(sql);\n          try {\n            if (rs.next()) {\n              int structId = rs.getInt(1);\n              readParm: while(true) {\n                LayoutStructure ls = (LayoutStructure)layoutStructure.get(new Integer(structId));\n                int lastStructId = structId;\n                do {\n                  ls.addParameter(rs.getString(2), rs.getString(3));\n                  if (!rs.next()) {\n                    break readParm;\n                  }\n                } while ((structId = rs.getInt(1)) == lastStructId);\n              }\n            }\n          } finally {\n            rs.close();\n          }\n        }\n\n        if (layoutStructure.size() > 0) { // We have a layout to work with\n\n          //  Replace roles with permissions/groups:\n          // UserInChannelRole uir = new UserInChannelRole(con, realUserId);\n          String userKey = \"\" + realUserId;\n          Class userType = org.jasig.portal.security.IPerson.class;\n          IAuthorizationPrincipal ap = AuthorizationService.instance().newPrincipal(userKey, userType);\n            try {\n            createLayout(layoutStructure, doc, root, firstStructId, ap);\n          } finally {\n            // ap.close(); (?)\n          }\n          layoutStructure.clear();\n\n          long stopTime = System.currentTimeMillis();\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): Layout document for user \" + userId + \" took \" +\n            (stopTime - startTime) + \" milliseconds to create\");\n          doc.appendChild(root);\n          if (DEBUG > 1) {\n            System.err.println(\"--> created document\");\n            dumpDoc(doc, \"\");\n            System.err.println(\"<--\");\n          }\n        }\n      } finally {\n        stmt.close();\n      }\n      return  doc;\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58414,"modified_method":"public Document getUserLayout (IPerson person, int profileId) throws Exception {\n    int userId = person.getID();\n    int realUserId = userId;\n    Connection con = RdbmServices.getConnection();\n    RdbmServices.setAutoCommit(con, false);          // May speed things up, can't hurt\n\n    try {\n      DocumentImpl doc = new DocumentImpl();\n      Element root = doc.createElement(\"layout\");\n      Statement stmt = con.createStatement();\n      try {\n        long startTime = System.currentTimeMillis();\n        String subSelectString = \"SELECT LAYOUT_ID FROM UP_USER_PROFILE WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" +\n            profileId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + subSelectString);\n        int layoutId;\n        ResultSet rs = stmt.executeQuery(subSelectString);\n        try {\n          rs.next();\n          layoutId = rs.getInt(1);\n        } finally {\n          rs.close();\n        }\n\n        if (layoutId == 0) { // First time, grab the default layout for this user\n          String sQuery = \"SELECT USER_DFLT_USR_ID, USER_DFLT_LAY_ID FROM UP_USER WHERE USER_ID=\" + userId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + sQuery);\n          rs = stmt.executeQuery(sQuery);\n          try {\n            rs.next();\n            userId = rs.getInt(1);\n            layoutId = rs.getInt(2);\n          } finally {\n            rs.close();\n          }\n\n          // Make sure the next struct id is set in case the user adds a channel\n          sQuery = \"SELECT NEXT_STRUCT_ID FROM UP_USER WHERE USER_ID=\" + userId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sQuery);\n          int nextStructId;\n          rs = stmt.executeQuery(sQuery);\n          try {\n            rs.next();\n            nextStructId = rs.getInt(1);\n          } finally {\n            rs.close();\n          }\n          sQuery = \"UPDATE UP_USER SET NEXT_STRUCT_ID=\" + nextStructId + \" WHERE USER_ID=\" + realUserId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n\n          /* insert row(s) into up_ss_user_atts */\n          sQuery = \"DELETE FROM UP_SS_USER_ATTS WHERE USER_ID=\" + realUserId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n\n          String Insert = \"INSERT INTO UP_SS_USER_ATTS (USER_ID, PROFILE_ID, SS_ID, SS_TYPE, STRUCT_ID, PARAM_NAME, PARAM_TYPE, PARAM_VAL) \"+\n            \" SELECT \"+realUserId+\", USUA.PROFILE_ID, USUA.SS_ID, USUA.SS_TYPE, USUA.STRUCT_ID, USUA.PARAM_NAME, USUA.PARAM_TYPE, USUA.PARAM_VAL \"+\n            \" FROM UP_SS_USER_ATTS USUA WHERE USUA.USER_ID=\"+userId;\n          LogService.log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserLayout(): \" + Insert);\n          stmt.executeUpdate(Insert);\n\n          RdbmServices.commit(con); // Make sure it appears in the store\n        }\n\n        int firstStructId = -1;\n        String sQuery = \"SELECT INIT_STRUCT_ID FROM UP_USER_LAYOUT WHERE USER_ID=\" + userId + \" AND LAYOUT_ID = \" + layoutId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + sQuery);\n        rs = stmt.executeQuery(sQuery);\n        try {\n          rs.next();\n          firstStructId = rs.getInt(1);\n        } finally {\n          rs.close();\n        }\n\n        String sql = \"SELECT ULS.STRUCT_ID,ULS.NEXT_STRUCT_ID,ULS.CHLD_STRUCT_ID,ULS.CHAN_ID,ULS.NAME,ULS.TYPE,ULS.HIDDEN,\"+\n          \"ULS.UNREMOVABLE,ULS.IMMUTABLE\";\n        if (supportsOuterJoins) {\n          sql += \",USP.STRUCT_PARM_NM,USP.STRUCT_PARM_VAL \" + dbStrings.layoutStructure;\n        } else {\n          sql += \" FROM UP_LAYOUT_STRUCT ULS WHERE \";\n        }\n        sql += \" ULS.USER_ID=\" + userId + \" AND ULS.LAYOUT_ID=\" + layoutId + \" ORDER BY ULS.STRUCT_ID\";\n        HashMap layoutStructure = new HashMap();\n        ArrayList chanIds = new ArrayList();\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + sql);\n          StringBuffer structParms = new StringBuffer();\n        rs = stmt.executeQuery(sql);\n        try {\n          int lastStructId = 0;\n          LayoutStructure ls = null;\n          String sepChar = \"\";\n          if (rs.next()) {\n            int structId = rs.getInt(1);\n            if (DEBUG > 1) System.err.println(\"Read layout structrure \" + structId);\n            readLayout: while (true) {\n              int chanId = rs.getInt(4);\n              ls = new LayoutStructure(structId,rs.getInt(2), rs.getInt(3), chanId, rs.getString(7),rs.getString(8),rs.getString(9));\n              layoutStructure.put(new Integer(structId), ls);\n              lastStructId = structId;\n              if (!ls.isChannel()) {\n                ls.addFolderData(rs.getString(5), rs.getString(6));\n              } else {\n                chanIds.add(new Integer(chanId)); // For later\n              }\n              if (supportsOuterJoins) {\n                do {\n                  String name = rs.getString(10);\n                  String value = rs.getString(11); // Oracle JDBC requires us to do this for longs\n                  if (name != null) { // may not be there because of the join\n                    ls.addParameter(name, value);\n                  }\n                  if (!rs.next()) {\n                    break readLayout;\n                  }\n                  structId = rs.getInt(1);\n                } while (structId == lastStructId);\n              } else { // Do second SELECT later on for structure parameters\n                if (ls.isChannel()) {\n                  structParms.append(sepChar + ls.chanId);\n                  sepChar = \",\";\n                }\n                if (rs.next()) {\n                  structId = rs.getInt(1);\n                } else {\n                  break readLayout;\n                }\n              }\n            } // while\n          }\n        } finally {\n          rs.close();\n        }\n\n        /**\n        * We have to retrieve the channel defition after the layout structure\n        * since retrieving the channel data from the DB may interfere with the\n        * layout structure ResultSet (in other words, Oracle is a pain to program for)\n        */\n        if (chanIds.size() > 0) {\n          RdbmServices.PreparedStatement pstmtChannel = getChannelPstmt(con);\n          try {\n            RdbmServices.PreparedStatement pstmtChannelParm = getChannelParmPstmt(con);\n            try {\n              // Pre-prime the channel pump\n              for (int i = 0; i < chanIds.size(); i++) {\n                int chanId = ((Integer) chanIds.get(i)).intValue();\n                getChannel(chanId, true, pstmtChannel, pstmtChannelParm);\n                if (DEBUG > 1) {\n                  System.err.println(\"Precached \" + chanId);\n                }\n              }\n            } finally {\n              if (pstmtChannelParm != null) {\n                pstmtChannelParm.close();\n              }\n            }\n          } finally {\n            pstmtChannel.close();\n          }\n          chanIds.clear();\n        }\n\n        if (!supportsOuterJoins) { // Pick up structure parameters\n          sql = \"SELECT STRUCT_ID, STRUCT_PARM_NM,STRUCT_PARM_VAL FROM UP_LAYOUT_PARAM WHERE USER_ID=\" + userId + \" AND LAYOUT_ID=\" + layoutId +\n            \" AND STRUCT_ID IN (\" + structParms.toString() + \") ORDER BY STRUCT_ID\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + sql);\n          rs = stmt.executeQuery(sql);\n          try {\n            if (rs.next()) {\n              int structId = rs.getInt(1);\n              readParm: while(true) {\n                LayoutStructure ls = (LayoutStructure)layoutStructure.get(new Integer(structId));\n                int lastStructId = structId;\n                do {\n                  ls.addParameter(rs.getString(2), rs.getString(3));\n                  if (!rs.next()) {\n                    break readParm;\n                  }\n                } while ((structId = rs.getInt(1)) == lastStructId);\n              }\n            }\n          } finally {\n            rs.close();\n          }\n        }\n\n        if (layoutStructure.size() > 0) { // We have a layout to work with\n\n          //  Replace roles with permissions/groups:\n          // UserInChannelRole uir = new UserInChannelRole(con, realUserId);\n          String userKey = \"\" + realUserId;\n          Class userType = org.jasig.portal.security.IPerson.class;\n          IAuthorizationPrincipal ap = AuthorizationService.instance().newPrincipal(userKey, userType);\n            try {\n            createLayout(layoutStructure, doc, root, firstStructId, ap);\n          } finally {\n            // ap.close(); (?)\n          }\n          layoutStructure.clear();\n\n          long stopTime = System.currentTimeMillis();\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): Layout document for user \" + userId + \" took \" +\n            (stopTime - startTime) + \" milliseconds to create\");\n          doc.appendChild(root);\n          if (DEBUG > 1) {\n            System.err.println(\"--> created document\");\n            dumpDoc(doc, \"\");\n            System.err.println(\"<--\");\n          }\n        }\n      } finally {\n        stmt.close();\n      }\n      return  doc;\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profileId\n   * @param stylesheetId\n   * @return\n   * @exception Exception\n   */\n  public ThemeStylesheetUserPreferences getThemeStylesheetUserPreferences (IPerson person, int profileId, int stylesheetId) throws Exception {\n    int userId = person.getID();\n    ThemeStylesheetUserPreferences tsup;\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        // get stylesheet description\n        ThemeStylesheetDescription tsd = getThemeStylesheetDescription(stylesheetId);\n        // get user defined defaults\n        String sQuery = \"SELECT PARAM_NAME, PARAM_VAL FROM UP_SS_USER_PARM WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\"\n            + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=2\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getThemeStylesheetUserPreferences(): \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            // stylesheet param\n            tsd.setStylesheetParameterDefaultValue(rs.getString(1), rs.getString(2));\n            //\t\t\tLogService.instance().log(LogService.DEBUG,\"RDBMUserLayoutStore::getThemeStylesheetUserPreferences() :  read stylesheet param \"+rs.getString(\"PARAM_NAME\")+\"=\\\"\"+rs.getString(\"PARAM_VAL\")+\"\\\"\");\n          }\n        } finally {\n          rs.close();\n        }\n        tsup = new ThemeStylesheetUserPreferences();\n        tsup.setStylesheetId(stylesheetId);\n        // fill stylesheet description with defaults\n        for (Enumeration e = tsd.getStylesheetParameterNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          tsup.putParameterValue(pName, tsd.getStylesheetParameterDefaultValue(pName));\n        }\n        for (Enumeration e = tsd.getChannelAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          tsup.addChannelAttribute(pName, tsd.getChannelAttributeDefaultValue(pName));\n        }\n        // get user preferences\n        sQuery = \"SELECT PARAM_TYPE, PARAM_NAME, PARAM_VAL, ULS.STRUCT_ID, CHAN_ID FROM UP_SS_USER_ATTS UUSA, UP_LAYOUT_STRUCT ULS WHERE UUSA.USER_ID=\" + userId + \" AND PROFILE_ID=\"\n            + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=2 AND UUSA.STRUCT_ID = ULS.STRUCT_ID AND UUSA.USER_ID = ULS.USER_ID\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getThemeStylesheetUserPreferences(): \" + sQuery);\n        rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            int param_type = rs.getInt(1);\n            if (param_type == 1) {\n              // stylesheet param\n              LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getThemeStylesheetUserPreferences() :  stylesheet global params should be specified in the user defaults table ! UP_SS_USER_ATTS is corrupt. (userId=\"\n                  + Integer.toString(userId) + \", profileId=\" + Integer.toString(profileId) + \", stylesheetId=\" + Integer.toString(stylesheetId)\n                  + \", param_name=\\\"\" + rs.getString(2) + \"\\\", param_type=\" + Integer.toString(param_type));\n            }\n            else if (param_type == 2) {\n              // folder attribute\n              LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getThemeStylesheetUserPreferences() :  folder attribute specified for the theme stylesheet! UP_SS_USER_ATTS corrupt. (userId=\"\n                  + Integer.toString(userId) + \", profileId=\" + Integer.toString(profileId) + \", stylesheetId=\" + Integer.toString(stylesheetId)\n                  + \", param_name=\\\"\" + rs.getString(2) + \"\\\", param_type=\" + Integer.toString(param_type));\n            }\n            else if (param_type == 3) {\n              // channel attribute\n              tsup.setChannelAttributeValue(getStructId(rs.getInt(4),rs.getInt(5)), rs.getString(2), rs.getString(3));\n              //LogService.instance().log(LogService.DEBUG,\"RDBMUserLayoutStore::getThemeStylesheetUserPreferences() :  read folder attribute \"+rs.getString(\"PARAM_NAME\")+\"(\"+rs.getString(\"STRUCT_ID\")+\")=\\\"\"+rs.getString(\"PARAM_VAL\")+\"\\\"\");\n            }\n            else {\n              // unknown param type\n              LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getThemeStylesheetUserPreferences() : unknown param type encountered! DB corrupt. (userId=\"\n                  + Integer.toString(userId) + \", profileId=\" + Integer.toString(profileId) + \", stylesheetId=\" + Integer.toString(stylesheetId)\n                  + \", param_name=\\\"\" + rs.getString(2) + \"\\\", param_type=\" + Integer.toString(param_type));\n            }\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return  tsup;\n  }","id":58415,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profileId\n   * @param stylesheetId\n   * @return\n   * @exception Exception\n   */\n  public ThemeStylesheetUserPreferences getThemeStylesheetUserPreferences (IPerson person, int profileId, int stylesheetId) throws Exception {\n    int userId = person.getID();\n    ThemeStylesheetUserPreferences tsup;\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        // get stylesheet description\n        ThemeStylesheetDescription tsd = getThemeStylesheetDescription(stylesheetId);\n        // get user defined defaults\n        String sQuery = \"SELECT PARAM_NAME, PARAM_VAL FROM UP_SS_USER_PARM WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\"\n            + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=2\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getThemeStylesheetUserPreferences(): \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            // stylesheet param\n            tsd.setStylesheetParameterDefaultValue(rs.getString(1), rs.getString(2));\n            //\t\t\tLogService.instance().log(LogService.DEBUG,\"RDBMUserLayoutStore::getThemeStylesheetUserPreferences() :  read stylesheet param \"+rs.getString(\"PARAM_NAME\")+\"=\\\"\"+rs.getString(\"PARAM_VAL\")+\"\\\"\");\n          }\n        } finally {\n          rs.close();\n        }\n        tsup = new ThemeStylesheetUserPreferences();\n        tsup.setStylesheetId(stylesheetId);\n        // fill stylesheet description with defaults\n        for (Enumeration e = tsd.getStylesheetParameterNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          tsup.putParameterValue(pName, tsd.getStylesheetParameterDefaultValue(pName));\n        }\n        for (Enumeration e = tsd.getChannelAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          tsup.addChannelAttribute(pName, tsd.getChannelAttributeDefaultValue(pName));\n        }\n        // get user preferences\n        sQuery = \"SELECT PARAM_TYPE, PARAM_NAME, PARAM_VAL, ULS.STRUCT_ID, CHAN_ID FROM UP_SS_USER_ATTS UUSA, UP_LAYOUT_STRUCT ULS WHERE UUSA.USER_ID=\" + userId + \" AND PROFILE_ID=\"\n            + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=2 AND UUSA.STRUCT_ID = ULS.STRUCT_ID AND UUSA.USER_ID = ULS.USER_ID\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getThemeStylesheetUserPreferences(): \" + sQuery);\n        rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            int param_type = rs.getInt(1);\n            if (param_type == 1) {\n              // stylesheet param\n              LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getThemeStylesheetUserPreferences() :  stylesheet global params should be specified in the user defaults table ! UP_SS_USER_ATTS is corrupt. (userId=\"\n                  + Integer.toString(userId) + \", profileId=\" + Integer.toString(profileId) + \", stylesheetId=\" + Integer.toString(stylesheetId)\n                  + \", param_name=\\\"\" + rs.getString(2) + \"\\\", param_type=\" + Integer.toString(param_type));\n            }\n            else if (param_type == 2) {\n              // folder attribute\n              LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getThemeStylesheetUserPreferences() :  folder attribute specified for the theme stylesheet! UP_SS_USER_ATTS corrupt. (userId=\"\n                  + Integer.toString(userId) + \", profileId=\" + Integer.toString(profileId) + \", stylesheetId=\" + Integer.toString(stylesheetId)\n                  + \", param_name=\\\"\" + rs.getString(2) + \"\\\", param_type=\" + Integer.toString(param_type));\n            }\n            else if (param_type == 3) {\n              // channel attribute\n              tsup.setChannelAttributeValue(getStructId(rs.getInt(4),rs.getInt(5)), rs.getString(2), rs.getString(3));\n              //LogService.instance().log(LogService.DEBUG,\"RDBMUserLayoutStore::getThemeStylesheetUserPreferences() :  read folder attribute \"+rs.getString(\"PARAM_NAME\")+\"(\"+rs.getString(\"STRUCT_ID\")+\")=\\\"\"+rs.getString(\"PARAM_VAL\")+\"\\\"\");\n            }\n            else {\n              // unknown param type\n              LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getThemeStylesheetUserPreferences() : unknown param type encountered! DB corrupt. (userId=\"\n                  + Integer.toString(userId) + \", profileId=\" + Integer.toString(profileId) + \", stylesheetId=\" + Integer.toString(stylesheetId)\n                  + \", param_name=\\\"\" + rs.getString(2) + \"\\\", param_type=\" + Integer.toString(param_type));\n            }\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return  tsup;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Read a channel definition from the data store\n   */\n  protected ChannelDefinition getChannelDefinition (int chanId, MyPreparedStatement pstmtChannel, MyPreparedStatement pstmtChannelParm) throws java.sql.SQLException {\n    ChannelDefinition channel = null;\n\n    pstmtChannel.clearParameters();\n    pstmtChannel.setInt(1, chanId);\n    LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getChannel(): \" + pstmtChannel);\n    ResultSet rs = pstmtChannel.executeQuery();\n    try {\n      if (rs.next()) {\n        channel = new ChannelDefinition(chanId, rs.getString(1), rs.getString(2), rs.getString(3),\n        rs.getInt(4), rs.getInt(5), rs.getInt(6), rs.getTimestamp(7), rs.getTimestamp(8), rs.getInt(9),\n          rs.getString(10), rs.getString(11), rs.getString(12), rs.getString(13),\n          rs.getString(14));\n\n        int dbOffset = 0;\n        if (pstmtChannelParm == null) { // we are using a join statement so no need for a new query\n          dbOffset = 14;\n        } else {\n          rs.close();\n          pstmtChannelParm.clearParameters();\n          pstmtChannelParm.setInt(1, chanId);\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getChannel(): \" + pstmtChannelParm);\n          rs = pstmtChannelParm.executeQuery();\n        }\n        while (true) {\n          if (pstmtChannelParm != null && !rs.next()) {\n            break;\n          }\n          channel.addParameter(rs.getString(dbOffset + 1), rs.getString(dbOffset + 2),rs.getString(dbOffset + 3));\n          if (pstmtChannelParm == null && !rs.next()) {\n            break;\n          }\n        }\n      }\n    } finally {\n      rs.close();\n    }\n\n    LogService.instance().log(LogService.DEBUG,\n      \"RDBMUserLayoutStore::getChannelDefinition(): Read channel \" + chanId + \" from the store\");\n    return  channel;\n  }","id":58416,"modified_method":"/**\n   * Read a channel definition from the data store\n   */\n  protected ChannelDefinition getChannelDefinition (int chanId, RdbmServices.PreparedStatement pstmtChannel, RdbmServices.PreparedStatement pstmtChannelParm) throws java.sql.SQLException {\n    ChannelDefinition channel = null;\n\n    pstmtChannel.clearParameters();\n    pstmtChannel.setInt(1, chanId);\n    LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getChannel(): \" + pstmtChannel);\n    ResultSet rs = pstmtChannel.executeQuery();\n    try {\n      if (rs.next()) {\n        channel = new ChannelDefinition(chanId, rs.getString(1), rs.getString(2), rs.getString(3),\n        rs.getInt(4), rs.getInt(5), rs.getInt(6), rs.getTimestamp(7), rs.getTimestamp(8), rs.getInt(9),\n          rs.getString(10), rs.getString(11), rs.getString(12), rs.getString(13),\n          rs.getString(14));\n\n        int dbOffset = 0;\n        if (pstmtChannelParm == null) { // we are using a join statement so no need for a new query\n          dbOffset = 14;\n        } else {\n          rs.close();\n          pstmtChannelParm.clearParameters();\n          pstmtChannelParm.setInt(1, chanId);\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getChannel(): \" + pstmtChannelParm);\n          rs = pstmtChannelParm.executeQuery();\n        }\n        while (true) {\n          if (pstmtChannelParm != null && !rs.next()) {\n            break;\n          }\n          channel.addParameter(rs.getString(dbOffset + 1), rs.getString(dbOffset + 2),rs.getString(dbOffset + 3));\n          if (pstmtChannelParm == null && !rs.next()) {\n            break;\n          }\n        }\n      }\n    } finally {\n      rs.close();\n    }\n\n    LogService.instance().log(LogService.DEBUG,\n      \"RDBMUserLayoutStore::getChannelDefinition(): Read channel \" + chanId + \" from the store\");\n    return  channel;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Registers a NEW structure stylesheet with the database.\n   * @param tsd Stylesheet description object\n   */\n  public Integer addStructureStylesheetDescription (StructureStylesheetDescription ssd) throws Exception {\n    Connection con = rdbmService.getConnection();\n    try {\n      // Set autocommit false for the connection\n      setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        // we assume that this is a new stylesheet.\n        int id = getIncrementIntegerId(\"UP_SS_STRUCT\");\n        ssd.setId(id);\n        String sQuery = \"INSERT INTO UP_SS_STRUCT (SS_ID,SS_NAME,SS_URI,SS_DESCRIPTION_URI,SS_DESCRIPTION_TEXT) VALUES (\"\n            + id + \",'\" + ssd.getStylesheetName() + \"','\" + ssd.getStylesheetURI() + \"','\" + ssd.getStylesheetDescriptionURI()\n            + \"','\" + ssd.getStylesheetWordDescription() + \"')\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // insert all stylesheet params\n        for (Enumeration e = ssd.getStylesheetParameterNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          sQuery = \"INSERT INTO UP_SS_STRUCT_PAR (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + id\n              + \",'\" + pName + \"','\" + ssd.getStylesheetParameterDefaultValue(pName) + \"','\" + ssd.getStylesheetParameterWordDescription(pName)\n              + \"',1)\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // insert all folder attributes\n        for (Enumeration e = ssd.getFolderAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          sQuery = \"INSERT INTO UP_SS_STRUCT_PAR (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + id\n              + \",'\" + pName + \"','\" + ssd.getFolderAttributeDefaultValue(pName) + \"','\" + ssd.getFolderAttributeWordDescription(pName)\n              + \"',2)\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // insert all channel attributes\n        for (Enumeration e = ssd.getChannelAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          sQuery = \"INSERT INTO UP_SS_STRUCT_PAR (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + id\n              + \",'\" + pName + \"','\" + ssd.getChannelAttributeDefaultValue(pName) + \"','\" + ssd.getChannelAttributeWordDescription(pName)\n              + \"',3)\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // Commit the transaction\n        commit(con);\n        return  new Integer(id);\n      } catch (Exception e) {\n        // Roll back the transaction\n        rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58417,"modified_method":"/**\n   * Registers a NEW structure stylesheet with the database.\n   * @param tsd Stylesheet description object\n   */\n  public Integer addStructureStylesheetDescription (StructureStylesheetDescription ssd) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    try {\n      // Set autocommit false for the connection\n      RdbmServices.setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        // we assume that this is a new stylesheet.\n        int id = getIncrementIntegerId(\"UP_SS_STRUCT\");\n        ssd.setId(id);\n        String sQuery = \"INSERT INTO UP_SS_STRUCT (SS_ID,SS_NAME,SS_URI,SS_DESCRIPTION_URI,SS_DESCRIPTION_TEXT) VALUES (\"\n            + id + \",'\" + ssd.getStylesheetName() + \"','\" + ssd.getStylesheetURI() + \"','\" + ssd.getStylesheetDescriptionURI()\n            + \"','\" + ssd.getStylesheetWordDescription() + \"')\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // insert all stylesheet params\n        for (Enumeration e = ssd.getStylesheetParameterNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          sQuery = \"INSERT INTO UP_SS_STRUCT_PAR (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + id\n              + \",'\" + pName + \"','\" + ssd.getStylesheetParameterDefaultValue(pName) + \"','\" + ssd.getStylesheetParameterWordDescription(pName)\n              + \"',1)\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // insert all folder attributes\n        for (Enumeration e = ssd.getFolderAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          sQuery = \"INSERT INTO UP_SS_STRUCT_PAR (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + id\n              + \",'\" + pName + \"','\" + ssd.getFolderAttributeDefaultValue(pName) + \"','\" + ssd.getFolderAttributeWordDescription(pName)\n              + \"',2)\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // insert all channel attributes\n        for (Enumeration e = ssd.getChannelAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          sQuery = \"INSERT INTO UP_SS_STRUCT_PAR (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" + id\n              + \",'\" + pName + \"','\" + ssd.getChannelAttributeDefaultValue(pName) + \"','\" + ssd.getChannelAttributeWordDescription(pName)\n              + \"',3)\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // Commit the transaction\n        RdbmServices.commit(con);\n        return  new Integer(id);\n      } catch (Exception e) {\n        // Roll back the transaction\n        RdbmServices.rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Obtain theme stylesheet description object for a given theme stylesheet id\n   * @para id id of the theme stylesheet\n   * @return theme stylesheet description\n   */\n  public ThemeStylesheetDescription getThemeStylesheetDescription (int stylesheetId) throws Exception {\n    ThemeStylesheetDescription tsd = null;\n    Connection con = rdbmService.getConnection();\n    Statement stmt = con.createStatement();\n    try {\n      int dbOffset = 0;\n      String sQuery = \"SELECT SS_NAME,SS_URI,SS_DESCRIPTION_URI,SS_DESCRIPTION_TEXT,STRUCT_SS_ID,SAMPLE_ICON_URI,SAMPLE_URI,MIME_TYPE,DEVICE_TYPE,SERIALIZER_NAME,UP_MODULE_CLASS\";\n      if (supportsOuterJoins) {\n        sQuery += \",TYPE,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT \" + dbStrings.themeStylesheet;\n        dbOffset = 11;\n      } else {\n        sQuery += \" FROM UP_SS_THEME UTS WHERE\";\n      }\n      sQuery += \" UTS.SS_ID=\" + stylesheetId;\n      LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getThemeStylesheetDescription(): \" + sQuery);\n      ResultSet rs = stmt.executeQuery(sQuery);\n      try {\n        if (rs.next()) {\n          tsd = new ThemeStylesheetDescription();\n          tsd.setId(stylesheetId);\n          tsd.setStylesheetName(rs.getString(1));\n          tsd.setStylesheetURI(rs.getString(2));\n          tsd.setStylesheetDescriptionURI(rs.getString(3));\n          tsd.setStylesheetWordDescription(rs.getString(4));\n          tsd.setStructureStylesheetId(rs.getInt(5));\n          tsd.setSampleIconURI(rs.getString(6));\n          tsd.setSamplePictureURI(rs.getString(7));\n          tsd.setMimeType(rs.getString(8));\n          tsd.setDeviceType(rs.getString(9));\n          tsd.setSerializerName(rs.getString(10));\n          tsd.setCustomUserPreferencesManagerClass(rs.getString(11));\n        }\n\n        if (!supportsOuterJoins) {\n          rs.close();\n          // retrieve stylesheet params and attributes\n          sQuery = \"SELECT TYPE,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT FROM UP_SS_THEME_PARM WHERE SS_ID=\" + stylesheetId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getThemeStylesheetDescription(): \" + sQuery);\n          rs = stmt.executeQuery(sQuery);\n        }\n        while (true) {\n          if (!supportsOuterJoins && !rs.next()) {\n            break;\n          }\n          int type = rs.getInt(dbOffset + 1);\n          if (rs.wasNull()) {\n            break;\n          }\n          if (type == 1) {\n            // param\n            tsd.addStylesheetParameter(rs.getString(dbOffset + 2), rs.getString(dbOffset + 3), rs.getString(dbOffset + 4));\n          }\n          else if (type == 3) {\n            // channel attribute\n            tsd.addChannelAttribute(rs.getString(dbOffset + 2), rs.getString(dbOffset + 3), rs.getString(dbOffset + 4));\n          }\n          else if (type == 2) {\n            // folder attributes are not allowed here\n            LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getThemeStylesheetDescription() : encountered a folder attribute specified for a theme stylesheet ! Corrupted DB entry. (stylesheetId=\"\n                + stylesheetId + \" param_name=\\\"\" + rs.getString(dbOffset + 2) + \"\\\" type=\" + rs.getInt(dbOffset + 1) + \").\");\n          }\n          else {\n            LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getThemeStylesheetDescription() : encountered param of unknown type! (stylesheetId=\"\n                + stylesheetId + \" param_name=\\\"\" + rs.getString(dbOffset + 2) + \"\\\" type=\" + rs.getInt(dbOffset + 1) + \").\");\n          }\n          if (supportsOuterJoins && !rs.next()) {\n            break;\n          }\n        }\n      } finally {\n        rs.close();\n      }\n    } finally {\n      stmt.close();\n      rdbmService.releaseConnection(con);\n    }\n    return  tsd;\n  }","id":58418,"modified_method":"/**\n   * Obtain theme stylesheet description object for a given theme stylesheet id\n   * @para id id of the theme stylesheet\n   * @return theme stylesheet description\n   */\n  public ThemeStylesheetDescription getThemeStylesheetDescription (int stylesheetId) throws Exception {\n    ThemeStylesheetDescription tsd = null;\n    Connection con = RdbmServices.getConnection();\n    Statement stmt = con.createStatement();\n    try {\n      int dbOffset = 0;\n      String sQuery = \"SELECT SS_NAME,SS_URI,SS_DESCRIPTION_URI,SS_DESCRIPTION_TEXT,STRUCT_SS_ID,SAMPLE_ICON_URI,SAMPLE_URI,MIME_TYPE,DEVICE_TYPE,SERIALIZER_NAME,UP_MODULE_CLASS\";\n      if (supportsOuterJoins) {\n        sQuery += \",TYPE,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT \" + dbStrings.themeStylesheet;\n        dbOffset = 11;\n      } else {\n        sQuery += \" FROM UP_SS_THEME UTS WHERE\";\n      }\n      sQuery += \" UTS.SS_ID=\" + stylesheetId;\n      LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getThemeStylesheetDescription(): \" + sQuery);\n      ResultSet rs = stmt.executeQuery(sQuery);\n      try {\n        if (rs.next()) {\n          tsd = new ThemeStylesheetDescription();\n          tsd.setId(stylesheetId);\n          tsd.setStylesheetName(rs.getString(1));\n          tsd.setStylesheetURI(rs.getString(2));\n          tsd.setStylesheetDescriptionURI(rs.getString(3));\n          tsd.setStylesheetWordDescription(rs.getString(4));\n          tsd.setStructureStylesheetId(rs.getInt(5));\n          tsd.setSampleIconURI(rs.getString(6));\n          tsd.setSamplePictureURI(rs.getString(7));\n          tsd.setMimeType(rs.getString(8));\n          tsd.setDeviceType(rs.getString(9));\n          tsd.setSerializerName(rs.getString(10));\n          tsd.setCustomUserPreferencesManagerClass(rs.getString(11));\n        }\n\n        if (!supportsOuterJoins) {\n          rs.close();\n          // retrieve stylesheet params and attributes\n          sQuery = \"SELECT TYPE,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT FROM UP_SS_THEME_PARM WHERE SS_ID=\" + stylesheetId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getThemeStylesheetDescription(): \" + sQuery);\n          rs = stmt.executeQuery(sQuery);\n        }\n        while (true) {\n          if (!supportsOuterJoins && !rs.next()) {\n            break;\n          }\n          int type = rs.getInt(dbOffset + 1);\n          if (rs.wasNull()) {\n            break;\n          }\n          if (type == 1) {\n            // param\n            tsd.addStylesheetParameter(rs.getString(dbOffset + 2), rs.getString(dbOffset + 3), rs.getString(dbOffset + 4));\n          }\n          else if (type == 3) {\n            // channel attribute\n            tsd.addChannelAttribute(rs.getString(dbOffset + 2), rs.getString(dbOffset + 3), rs.getString(dbOffset + 4));\n          }\n          else if (type == 2) {\n            // folder attributes are not allowed here\n            LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getThemeStylesheetDescription() : encountered a folder attribute specified for a theme stylesheet ! Corrupted DB entry. (stylesheetId=\"\n                + stylesheetId + \" param_name=\\\"\" + rs.getString(dbOffset + 2) + \"\\\" type=\" + rs.getInt(dbOffset + 1) + \").\");\n          }\n          else {\n            LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getThemeStylesheetDescription() : encountered param of unknown type! (stylesheetId=\"\n                + stylesheetId + \" param_name=\\\"\" + rs.getString(dbOffset + 2) + \"\\\" type=\" + rs.getInt(dbOffset + 1) + \").\");\n          }\n          if (supportsOuterJoins && !rs.next()) {\n            break;\n          }\n        }\n      } finally {\n        rs.close();\n      }\n    } finally {\n      stmt.close();\n      RdbmServices.releaseConnection(con);\n    }\n    return  tsd;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profile\n   * @exception Exception\n   */\n  public void setUserProfile (IPerson person, UserProfile profile) throws Exception {\n    int userId = person.getID();\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        // this is ugly, but we have to know wether to do INSERT or UPDATE\n        String sQuery = \"SELECT USER_ID, PROFILE_NAME FROM UP_USER_PROFILE WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\"\n            + profile.getProfileId();\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserProfile() : \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          if (rs.next()) {\n            sQuery = \"UPDATE UP_USER_PROFILE SET THEME_SS_ID=\" + profile.getThemeStylesheetId() + \", STRUCTURE_SS_ID=\" +\n                profile.getStructureStylesheetId() + \", DESCRIPTION='\" + profile.getProfileDescription() + \"', PROFILE_NAME='\"\n                + profile.getProfileName() + \"' WHERE USER_ID = \" + userId + \" AND PROFILE_ID=\" + profile.getProfileId();\n          }\n          else {\n            sQuery = \"INSERT INTO UP_USER_PROFILE (USER_ID,PROFILE_ID,PROFILE_NAME,STRUCTURE_SS_ID,THEME_SS_ID,DESCRIPTION) VALUES (\"\n                + userId + \",\" + profile.getProfileId() + \",'\" + profile.getProfileName() + \"',\" + profile.getStructureStylesheetId()\n                + \",\" + profile.getThemeStylesheetId() + \",'\" + profile.getProfileDescription() + \"')\";\n          }\n        } finally {\n          rs.close();\n        }\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserProfile(): \" + sQuery);\n        stmt.executeUpdate(sQuery);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58419,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profile\n   * @exception Exception\n   */\n  public void setUserProfile (IPerson person, UserProfile profile) throws Exception {\n    int userId = person.getID();\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        // this is ugly, but we have to know wether to do INSERT or UPDATE\n        String sQuery = \"SELECT USER_ID, PROFILE_NAME FROM UP_USER_PROFILE WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\"\n            + profile.getProfileId();\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserProfile() : \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          if (rs.next()) {\n            sQuery = \"UPDATE UP_USER_PROFILE SET THEME_SS_ID=\" + profile.getThemeStylesheetId() + \", STRUCTURE_SS_ID=\" +\n                profile.getStructureStylesheetId() + \", DESCRIPTION='\" + profile.getProfileDescription() + \"', PROFILE_NAME='\"\n                + profile.getProfileName() + \"' WHERE USER_ID = \" + userId + \" AND PROFILE_ID=\" + profile.getProfileId();\n          }\n          else {\n            sQuery = \"INSERT INTO UP_USER_PROFILE (USER_ID,PROFILE_ID,PROFILE_NAME,STRUCTURE_SS_ID,THEME_SS_ID,DESCRIPTION) VALUES (\"\n                + userId + \",\" + profile.getProfileId() + \",'\" + profile.getProfileName() + \"',\" + profile.getStructureStylesheetId()\n                + \",\" + profile.getThemeStylesheetId() + \",'\" + profile.getProfileDescription() + \"')\";\n          }\n        } finally {\n          rs.close();\n        }\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setUserProfile(): \" + sQuery);\n        stmt.executeUpdate(sQuery);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Obtain structure stylesheet description object for a given structure stylesheet id\n   * @para id id of the structure stylesheet\n   * @return structure stylesheet description\n   */\n  public StructureStylesheetDescription getStructureStylesheetDescription (int stylesheetId) throws Exception {\n    StructureStylesheetDescription ssd = null;\n    Connection con = rdbmService.getConnection();\n    Statement stmt = con.createStatement();\n    try {\n      int dbOffset = 0;\n      String sQuery = \"SELECT SS_NAME,SS_URI,SS_DESCRIPTION_URI,SS_DESCRIPTION_TEXT\";\n      if (supportsOuterJoins) {\n        sQuery += \",TYPE,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT \" + dbStrings.structureStylesheet;\n        dbOffset = 4;\n      } else {\n        sQuery += \" FROM UP_SS_STRUCT USS WHERE\";\n      }\n      sQuery += \" USS.SS_ID=\" + stylesheetId;\n\n      LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetDescription(): \" + sQuery);\n      ResultSet rs = stmt.executeQuery(sQuery);\n      try {\n        if (rs.next()) {\n          ssd = new StructureStylesheetDescription();\n          ssd.setId(stylesheetId);\n          ssd.setStylesheetName(rs.getString(1));\n          ssd.setStylesheetURI(rs.getString(2));\n          ssd.setStylesheetDescriptionURI(rs.getString(3));\n          ssd.setStylesheetWordDescription(rs.getString(4));\n        }\n\n        if (!supportsOuterJoins) {\n          rs.close();\n          // retrieve stylesheet params and attributes\n          sQuery = \"SELECT TYPE,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT FROM UP_SS_STRUCT_PAR WHERE SS_ID=\" + stylesheetId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetDescription(): \" + sQuery);\n          rs = stmt.executeQuery(sQuery);\n        }\n\n        while (true) {\n          if (!supportsOuterJoins && !rs.next()) {\n            break;\n          }\n\n          int type = rs.getInt(dbOffset + 1);\n          if (rs.wasNull()){\n            break;\n          }\n          if (type == 1) {\n            // param\n            ssd.addStylesheetParameter(rs.getString(dbOffset + 2), rs.getString(dbOffset + 3), rs.getString(dbOffset + 4));\n          }\n          else if (type == 2) {\n            // folder attribute\n            ssd.addFolderAttribute(rs.getString(dbOffset + 2), rs.getString(dbOffset + 3), rs.getString(dbOffset + 4));\n          }\n          else if (type == 3) {\n            // channel attribute\n            ssd.addChannelAttribute(rs.getString(dbOffset + 2), rs.getString(dbOffset + 3), rs.getString(dbOffset + 4));\n          }\n          else {\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetDescription() : encountered param of unknown type! (stylesheetId=\"\n                + stylesheetId + \" param_name=\\\"\" + rs.getString(dbOffset + 2) + \"\\\" type=\" + rs.getInt(dbOffset + 1) + \").\");\n          }\n          if (supportsOuterJoins && !rs.next()) {\n            break;\n          }\n\n        }\n      } finally {\n        rs.close();\n      }\n    } finally {\n      stmt.close();\n      rdbmService.releaseConnection(con);\n    }\n    return  ssd;\n  }","id":58420,"modified_method":"/**\n   * Obtain structure stylesheet description object for a given structure stylesheet id\n   * @para id id of the structure stylesheet\n   * @return structure stylesheet description\n   */\n  public StructureStylesheetDescription getStructureStylesheetDescription (int stylesheetId) throws Exception {\n    StructureStylesheetDescription ssd = null;\n    Connection con = RdbmServices.getConnection();\n    Statement stmt = con.createStatement();\n    try {\n      int dbOffset = 0;\n      String sQuery = \"SELECT SS_NAME,SS_URI,SS_DESCRIPTION_URI,SS_DESCRIPTION_TEXT\";\n      if (supportsOuterJoins) {\n        sQuery += \",TYPE,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT \" + dbStrings.structureStylesheet;\n        dbOffset = 4;\n      } else {\n        sQuery += \" FROM UP_SS_STRUCT USS WHERE\";\n      }\n      sQuery += \" USS.SS_ID=\" + stylesheetId;\n\n      LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetDescription(): \" + sQuery);\n      ResultSet rs = stmt.executeQuery(sQuery);\n      try {\n        if (rs.next()) {\n          ssd = new StructureStylesheetDescription();\n          ssd.setId(stylesheetId);\n          ssd.setStylesheetName(rs.getString(1));\n          ssd.setStylesheetURI(rs.getString(2));\n          ssd.setStylesheetDescriptionURI(rs.getString(3));\n          ssd.setStylesheetWordDescription(rs.getString(4));\n        }\n\n        if (!supportsOuterJoins) {\n          rs.close();\n          // retrieve stylesheet params and attributes\n          sQuery = \"SELECT TYPE,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT FROM UP_SS_STRUCT_PAR WHERE SS_ID=\" + stylesheetId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetDescription(): \" + sQuery);\n          rs = stmt.executeQuery(sQuery);\n        }\n\n        while (true) {\n          if (!supportsOuterJoins && !rs.next()) {\n            break;\n          }\n\n          int type = rs.getInt(dbOffset + 1);\n          if (rs.wasNull()){\n            break;\n          }\n          if (type == 1) {\n            // param\n            ssd.addStylesheetParameter(rs.getString(dbOffset + 2), rs.getString(dbOffset + 3), rs.getString(dbOffset + 4));\n          }\n          else if (type == 2) {\n            // folder attribute\n            ssd.addFolderAttribute(rs.getString(dbOffset + 2), rs.getString(dbOffset + 3), rs.getString(dbOffset + 4));\n          }\n          else if (type == 3) {\n            // channel attribute\n            ssd.addChannelAttribute(rs.getString(dbOffset + 2), rs.getString(dbOffset + 3), rs.getString(dbOffset + 4));\n          }\n          else {\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetDescription() : encountered param of unknown type! (stylesheetId=\"\n                + stylesheetId + \" param_name=\\\"\" + rs.getString(dbOffset + 2) + \"\\\" type=\" + rs.getInt(dbOffset + 1) + \").\");\n          }\n          if (supportsOuterJoins && !rs.next()) {\n            break;\n          }\n\n        }\n      } finally {\n        rs.close();\n      }\n    } finally {\n      stmt.close();\n      RdbmServices.releaseConnection(con);\n    }\n    return  ssd;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     *\n     */\n    public LayoutStructure(int structId, int nextId,int childId,int chanId, String hidden, String unremovable, String immutable) {\n      this.nextId = nextId;\n      this.childId = childId;\n      this.chanId = chanId;\n      this.structId = structId;\n      this.hidden = hidden != null && hidden.equals(\"Y\");\n      this.immutable = immutable != null && immutable.equals(\"Y\");\n      this.unremovable = unremovable != null && unremovable.equals(\"Y\");\n\n      if (DEBUG > 1) {\n        System.err.println(\"New layout: id=\" + structId + \", next=\" + nextId + \", child=\" + childId +\", chan=\" +chanId);\n      }\n    }","id":58421,"modified_method":"/**\n     *\n     */\n    public LayoutStructure(int structId, int nextId,int childId,int chanId, String hidden, String unremovable, String immutable) {\n      this.nextId = nextId;\n      this.childId = childId;\n      this.chanId = chanId;\n      this.structId = structId;\n      this.hidden = RdbmServices.dbFlag(hidden);\n      this.immutable = RdbmServices.dbFlag(immutable);\n      this.unremovable = RdbmServices.dbFlag(unremovable);\n\n      if (DEBUG > 1) {\n        System.err.println(\"New layout: id=\" + structId + \", next=\" + nextId + \", child=\" + childId +\", chan=\" +chanId);\n      }\n    }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Removes a channel from the channel registry.  The channel\n   * is not actually deleted.  Rather its status as an \"approved\"\n   * channel is revoked.\n   * @param chanID, the ID of the channel to delete\n   * @exception java.sql.SQLException\n   */\n  public void removeChannel (String chanID) throws SQLException {\n    Connection con = rdbmService.getConnection();\n    try {\n      // Set autocommit false for the connection\n      setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        chanID = chanID.startsWith(\"chan\") ? chanID.substring(4) : chanID;\n\n        // Delete channel/category associations\n        //String sDelete = \"DELETE FROM UP_CAT_CHAN WHERE CHAN_ID=\" + chanID;\n        //LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeChannel(): \" + sDelete);\n        //stmt.executeUpdate(sDelete);\n\n        // Delete channel/role associations\n        //sDelete = \"DELETE FROM UP_ROLE_CHAN WHERE CHAN_ID=\" + chanID;\n        //LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeChannel(): \" + sDelete);\n        //stmt.executeUpdate(sDelete);\n\n        // Delete channel.\n        String sUpdate = \"UPDATE UP_CHANNEL SET CHAN_APVL_DT=NULL WHERE CHAN_ID=\" + chanID;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeChannel(): \" + sUpdate);\n        stmt.executeUpdate(sUpdate);\n\n        // Commit the transaction\n        commit(con);\n      } catch (SQLException sqle) {\n        // Roll back the transaction\n        rollback(con);\n        throw sqle;\n      } finally {\n        if (stmt != null)\n          stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58422,"modified_method":"/**\n   * Removes a channel from the channel registry.  The channel\n   * is not actually deleted.  Rather its status as an \"approved\"\n   * channel is revoked.\n   * @param chanID, the ID of the channel to delete\n   * @exception java.sql.SQLException\n   */\n  public void removeChannel (String chanID) throws SQLException {\n    Connection con = RdbmServices.getConnection();\n    try {\n      // Set autocommit false for the connection\n      RdbmServices.setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        chanID = chanID.startsWith(\"chan\") ? chanID.substring(4) : chanID;\n\n        // Delete channel/category associations\n        //String sDelete = \"DELETE FROM UP_CAT_CHAN WHERE CHAN_ID=\" + chanID;\n        //LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeChannel(): \" + sDelete);\n        //stmt.executeUpdate(sDelete);\n\n        // Delete channel/role associations\n        //sDelete = \"DELETE FROM UP_ROLE_CHAN WHERE CHAN_ID=\" + chanID;\n        //LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeChannel(): \" + sDelete);\n        //stmt.executeUpdate(sDelete);\n\n        // Delete channel.\n        String sUpdate = \"UPDATE UP_CHANNEL SET CHAN_APVL_DT=NULL WHERE CHAN_ID=\" + chanID;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeChannel(): \" + sUpdate);\n        stmt.executeUpdate(sUpdate);\n\n        // Commit the transaction\n        RdbmServices.commit(con);\n      } catch (SQLException sqle) {\n        // Roll back the transaction\n        RdbmServices.rollback(con);\n        throw sqle;\n      } finally {\n        if (stmt != null)\n          stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param stylesheetName\n   * @exception Exception\n   */\n  public void removeThemeStylesheetDescription (int stylesheetId) throws Exception {\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"DELETE FROM UP_SS_THEME WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeThemeStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // delete params\n        sQuery = \"DELETE FROM UP_SS_THEME_PARM WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeThemeStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // clean up user preferences\n        sQuery = \"DELETE FROM UP_SS_USER_PARM WHERE SS_ID=\" + stylesheetId + \" AND SS_TYPE=2\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeThemeStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        sQuery = \"DELETE FROM UP_SS_USER_ATTS WHERE SS_ID=\" + stylesheetId + \" AND SS_TYPE=2\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeThemeStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // nuke the profiles as well ?\n        commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58423,"modified_method":"/**\n   * put your documentation comment here\n   * @param stylesheetName\n   * @exception Exception\n   */\n  public void removeThemeStylesheetDescription (int stylesheetId) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"DELETE FROM UP_SS_THEME WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeThemeStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // delete params\n        sQuery = \"DELETE FROM UP_SS_THEME_PARM WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeThemeStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // clean up user preferences\n        sQuery = \"DELETE FROM UP_SS_USER_PARM WHERE SS_ID=\" + stylesheetId + \" AND SS_TYPE=2\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeThemeStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        sQuery = \"DELETE FROM UP_SS_USER_ATTS WHERE SS_ID=\" + stylesheetId + \" AND SS_TYPE=2\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::removeThemeStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // nuke the profiles as well ?\n        RdbmServices.commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        RdbmServices.rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"public ChannelParameter(String name, String value, String override) {\n        this(name, value, override != null && override.equals(\"Y\"));\n      }","id":58424,"modified_method":"public ChannelParameter(String name, String value, String override) {\n        this(name, value, RdbmServices.dbFlag(override));\n      }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"public ChannelDefinition(int chanId, String chanTitle, String chanDesc, String chanClass, int chanTypeId, int chanPupblUsrId, int chanApvlId,\n      Timestamp chanPublDt, Timestamp chanApvlDt, int chanTimeout, boolean chanEditable, boolean chanHasHelp,\n      boolean chanHasAbout, String chanName, String chanFName) {\n\n      this.chanId = chanId;\n      this.chanTitle = chanTitle;\n      this.chanDesc = chanDesc;\n      this.chanClass = chanClass;\n      this.chanTypeId = chanTypeId;\n      this.chanPupblUsrId = chanPupblUsrId;\n      this.chanApvlId = chanApvlId;\n      this.chanPublDt = chanPublDt;\n      this.chanApvlDt = chanApvlDt;\n      this.chanTimeout = chanTimeout;\n      this.chanEditable = chanEditable;\n      this.chanHasHelp = chanHasHelp;\n      this.chanHasAbout = chanHasAbout;\n      this.chanName = chanName;\n      this.chanFName =chanFName;\n      }","id":58425,"modified_method":"public ChannelDefinition(int chanId, String chanTitle, String chanDesc, String chanClass, int chanTypeId, int chanPupblUsrId, int chanApvlId,\n      java.sql.Timestamp chanPublDt, java.sql.Timestamp chanApvlDt, int chanTimeout, boolean chanEditable, boolean chanHasHelp,\n      boolean chanHasAbout, String chanName, String chanFName) {\n\n      this.chanId = chanId;\n      this.chanTitle = chanTitle;\n      this.chanDesc = chanDesc;\n      this.chanClass = chanClass;\n      this.chanTypeId = chanTypeId;\n      this.chanPupblUsrId = chanPupblUsrId;\n      this.chanApvlId = chanApvlId;\n      this.chanPublDt = chanPublDt;\n      this.chanApvlDt = chanApvlDt;\n      this.chanTimeout = chanTimeout;\n      this.chanEditable = chanEditable;\n      this.chanHasHelp = chanHasHelp;\n      this.chanHasAbout = chanHasAbout;\n      this.chanName = chanName;\n      this.chanFName =chanFName;\n      }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Get channel types xml.\n   * It will look something like this:\n   * <p><code>\n   *\n   *<channelTypes>\n   *  <channelType ID=\"0\">\n   *    <class>org.jasig.portal.channels.CImage<\/class>\n   *    <name>Image<\/name>\n   *    <description>Simple channel to display an image with optional\n   *        caption and subcaption<\/description>\n   *    <cpd-uri>webpages/media/org/jasig/portal/channels/CImage/CImage.cpd<\/cpd-uri>\n   *  <\/channelType>\n   *  <channelType ID=\"1\">\n   *    <class>org.jasig.portal.channels.CWebProxy<\/class>\n   *    <name>Web Proxy<\/name>\n   *    <description>Incorporate a dynamic HTML or XML application<\/description>\n   *    <cpd-uri>webpages/media/org/jasig/portal/channels/CWebProxy/CWebProxy.cpd<\/cpd-uri>\n   *  <\/channelType>\n   *<\/channelTypes>\n   *\n   * <\/code><\/p>\n   * @return types, the channel types as a Document\n   * @throws java.sql.SQLException\n   */\n  public Document getChannelTypesXML () throws SQLException {\n    Document doc = new org.apache.xerces.dom.DocumentImpl();\n    Element root = doc.createElement(\"channelTypes\");\n    doc.appendChild(root);\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT TYPE_ID, TYPE, TYPE_NAME, TYPE_DESCR, TYPE_DEF_URI FROM UP_CHAN_TYPE\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getChannelTypesXML(): \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            int ID = rs.getInt(1);\n            String javaClass = rs.getString(2);\n            String name = rs.getString(3);\n            String descr = rs.getString(4);\n            String cpdUri = rs.getString(5);\n\n            // <channelType>\n            Element channelType = doc.createElement(\"channelType\");\n            channelType.setAttribute(\"ID\", String.valueOf(ID));\n\n            Element elem = null;\n\n            // <class>\n            elem = doc.createElement(\"class\");\n            elem.appendChild(doc.createTextNode(javaClass));\n            channelType.appendChild(elem);\n\n            // <name>\n            elem = doc.createElement(\"name\");\n            elem.appendChild(doc.createTextNode(name));\n            channelType.appendChild(elem);\n\n            // <description>\n            elem = doc.createElement(\"description\");\n            elem.appendChild(doc.createTextNode(descr));\n            channelType.appendChild(elem);\n\n            // <cpd-uri>\n            elem = doc.createElement(\"cpd-uri\");\n            elem.appendChild(doc.createTextNode(cpdUri));\n            channelType.appendChild(elem);\n\n            root.appendChild(channelType);\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return doc;\n  }","id":58426,"modified_method":"/**\n   * Get channel types xml.\n   * It will look something like this:\n   * <p><code>\n   *\n   *<channelTypes>\n   *  <channelType ID=\"0\">\n   *    <class>org.jasig.portal.channels.CImage<\/class>\n   *    <name>Image<\/name>\n   *    <description>Simple channel to display an image with optional\n   *        caption and subcaption<\/description>\n   *    <cpd-uri>webpages/media/org/jasig/portal/channels/CImage/CImage.cpd<\/cpd-uri>\n   *  <\/channelType>\n   *  <channelType ID=\"1\">\n   *    <class>org.jasig.portal.channels.CWebProxy<\/class>\n   *    <name>Web Proxy<\/name>\n   *    <description>Incorporate a dynamic HTML or XML application<\/description>\n   *    <cpd-uri>webpages/media/org/jasig/portal/channels/CWebProxy/CWebProxy.cpd<\/cpd-uri>\n   *  <\/channelType>\n   *<\/channelTypes>\n   *\n   * <\/code><\/p>\n   * @return types, the channel types as a Document\n   * @throws java.sql.SQLException\n   */\n  public Document getChannelTypesXML () throws SQLException {\n    Document doc = new org.apache.xerces.dom.DocumentImpl();\n    Element root = doc.createElement(\"channelTypes\");\n    doc.appendChild(root);\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT TYPE_ID, TYPE, TYPE_NAME, TYPE_DESCR, TYPE_DEF_URI FROM UP_CHAN_TYPE\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getChannelTypesXML(): \" + sQuery);\n        ResultSet rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            int ID = rs.getInt(1);\n            String javaClass = rs.getString(2);\n            String name = rs.getString(3);\n            String descr = rs.getString(4);\n            String cpdUri = rs.getString(5);\n\n            // <channelType>\n            Element channelType = doc.createElement(\"channelType\");\n            channelType.setAttribute(\"ID\", String.valueOf(ID));\n\n            Element elem = null;\n\n            // <class>\n            elem = doc.createElement(\"class\");\n            elem.appendChild(doc.createTextNode(javaClass));\n            channelType.appendChild(elem);\n\n            // <name>\n            elem = doc.createElement(\"name\");\n            elem.appendChild(doc.createTextNode(name));\n            channelType.appendChild(elem);\n\n            // <description>\n            elem = doc.createElement(\"description\");\n            elem.appendChild(doc.createTextNode(descr));\n            channelType.appendChild(elem);\n\n            // <cpd-uri>\n            elem = doc.createElement(\"cpd-uri\");\n            elem.appendChild(doc.createTextNode(cpdUri));\n            channelType.appendChild(elem);\n\n            root.appendChild(channelType);\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return doc;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param tableName\n   * @param value\n   * @exception Exception\n   */\n  public synchronized void setCounter (String tableName, int value) throws Exception {\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sUpdate = \"UPDATE UP_SEQUENCE SET SEQUENCE_VALUE=\" + value + \"WHERE SEQUENCE_NAME='\" + tableName + \"'\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setCounter(): \" + sUpdate);\n        stmt.executeUpdate(sUpdate);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58427,"modified_method":"/**\n   * put your documentation comment here\n   * @param tableName\n   * @param value\n   * @exception Exception\n   */\n  public synchronized void setCounter (String tableName, int value) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sUpdate = \"UPDATE UP_SEQUENCE SET SEQUENCE_VALUE=\" + value + \"WHERE SEQUENCE_NAME='\" + tableName + \"'\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setCounter(): \" + sUpdate);\n        stmt.executeUpdate(sUpdate);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Obtain ID for known structure stylesheet name\n   * @param ssName name of the structure stylesheet\n   * @return id or null if no stylesheet matches the name given.\n   */\n  public Integer getStructureStylesheetId (String ssName) throws Exception {\n    Integer id = null;\n    Connection con = rdbmService.getConnection();\n    try {\n      setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT SS_ID FROM UP_SS_STRUCT WHERE SS_NAME='\" + ssName + \"'\";\n        ResultSet rs = stmt.executeQuery(sQuery);\n        if (rs.next()) {\n          id = new Integer(rs.getInt(\"SS_ID\"));\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return  id;\n  }","id":58428,"modified_method":"/**\n   * Obtain ID for known structure stylesheet name\n   * @param ssName name of the structure stylesheet\n   * @return id or null if no stylesheet matches the name given.\n   */\n  public Integer getStructureStylesheetId (String ssName) throws Exception {\n    Integer id = null;\n    Connection con = RdbmServices.getConnection();\n    try {\n      RdbmServices.setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        String sQuery = \"SELECT SS_ID FROM UP_SS_STRUCT WHERE SS_NAME='\" + ssName + \"'\";\n        ResultSet rs = stmt.executeQuery(sQuery);\n        if (rs.next()) {\n          id = new Integer(rs.getInt(\"SS_ID\"));\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return  id;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   *\n   *   ChannelRegistry\n   *\n   */\n  public void addChannel (int id, IPerson publisher, Document chanXML, String catID[]) throws SQLException {\n    Connection con = rdbmService.getConnection();\n    try {\n      addChannel(id, publisher, chanXML, con);\n      // Set autocommit false for the connection\n      setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        // First delete existing categories for this channel\n        String sDelete = \"DELETE FROM UP_CAT_CHAN WHERE CHAN_ID=\" + id;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sDelete);\n        int recordsDeleted = stmt.executeUpdate(sDelete);\n\n        for (int i = 0; i < catID.length; i++) {\n          // Take out \"cat\" prefix if its there\n          String categoryID = catID[i].startsWith(\"cat\") ? catID[i].substring(3) : catID[i];\n\n          String sInsert = \"INSERT INTO UP_CAT_CHAN (CHAN_ID, CAT_ID) VALUES (\" + id + \",\" + categoryID + \")\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sInsert);\n          stmt.executeUpdate(sInsert);\n        }\n        // Commit the transaction\n        commit(con);\n      } catch (SQLException sqle) {\n        // Roll back the transaction\n        rollback(con);\n        throw sqle;\n      } finally {\n        if (stmt != null)\n          stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58429,"modified_method":"/**\n   *\n   *   ChannelRegistry\n   *\n   */\n  public void addChannel (int id, IPerson publisher, Document chanXML, String catID[]) throws SQLException {\n    Connection con = RdbmServices.getConnection();\n    try {\n      addChannel(id, publisher, chanXML, con);\n      // Set autocommit false for the connection\n      RdbmServices.setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        // First delete existing categories for this channel\n        String sDelete = \"DELETE FROM UP_CAT_CHAN WHERE CHAN_ID=\" + id;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sDelete);\n        int recordsDeleted = stmt.executeUpdate(sDelete);\n\n        for (int i = 0; i < catID.length; i++) {\n          // Take out \"cat\" prefix if its there\n          String categoryID = catID[i].startsWith(\"cat\") ? catID[i].substring(3) : catID[i];\n\n          String sInsert = \"INSERT INTO UP_CAT_CHAN (CHAN_ID, CAT_ID) VALUES (\" + id + \",\" + categoryID + \")\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addChannel(): \" + sInsert);\n          stmt.executeUpdate(sInsert);\n        }\n        // Commit the transaction\n        RdbmServices.commit(con);\n      } catch (SQLException sqle) {\n        // Roll back the transaction\n        RdbmServices.rollback(con);\n        throw sqle;\n      } finally {\n        if (stmt != null)\n          stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param chanId\n   * @param approver\n   * @exception Exception\n   */\n  public void approveChannel(int chanId, IPerson approver, java.util.Date approveDate) throws Exception {\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sUpdate = \"UPDATE UP_CHANNEL SET CHAN_APVL_ID = \" + approver.getID() + \", CHAN_APVL_DT = \" +\n        tsStart + \" '\" + new java.sql.Timestamp(approveDate.getTime()).toString() + \"'\" + tsEnd +\n        \" WHERE CHAN_ID = \" + chanId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::approveChannel(): \" + sUpdate);\n        stmt.executeUpdate(sUpdate);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58430,"modified_method":"/**\n   * put your documentation comment here\n   * @param chanId\n   * @param approver\n   * @exception Exception\n   */\n  public void approveChannel(int chanId, IPerson approver, java.util.Date approveDate) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        String sUpdate = \"UPDATE UP_CHANNEL SET CHAN_APVL_ID = \" + approver.getID() +\n        \", CHAN_APVL_DT = \" + RdbmServices.sqlTimeStamp(approveDate) +\n        \" WHERE CHAN_ID = \" + chanId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::approveChannel(): \" + sUpdate);\n        stmt.executeUpdate(sUpdate);\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param con\n   * @param doc\n   * @param chanId\n   * @param idTag\n   * @return\n   * @exception java.sql.SQLException\n   */\n\n  protected Element getChannelNode (int chanId, Connection con, DocumentImpl doc, String idTag) throws java.sql.SQLException {\n    MyPreparedStatement pstmtChannel = getChannelPstmt(con);\n    try {\n      MyPreparedStatement pstmtChannelParm = getChannelParmPstmt(con);\n      try {\n        ChannelDefinition cd = getChannel(chanId, false, pstmtChannel, pstmtChannelParm);\n        if (cd != null) {\n          return cd.getDocument(doc, idTag);\n        } else {\n          return null;\n        }\n      } finally {\n        if (pstmtChannelParm != null) {\n          pstmtChannelParm.close();\n        }\n      }\n    } finally {\n      pstmtChannel.close();\n    }\n  }","id":58431,"modified_method":"/**\n   * put your documentation comment here\n   * @param con\n   * @param doc\n   * @param chanId\n   * @param idTag\n   * @return\n   * @exception java.sql.SQLException\n   */\n\n  protected Element getChannelNode (int chanId, Connection con, DocumentImpl doc, String idTag) throws java.sql.SQLException {\n    RdbmServices.PreparedStatement pstmtChannel = getChannelPstmt(con);\n    try {\n      RdbmServices.PreparedStatement pstmtChannelParm = getChannelParmPstmt(con);\n      try {\n        ChannelDefinition cd = getChannel(chanId, false, pstmtChannel, pstmtChannelParm);\n        if (cd != null) {\n          return cd.getDocument(doc, idTag);\n        } else {\n          return null;\n        }\n      } finally {\n        if (pstmtChannelParm != null) {\n          pstmtChannelParm.close();\n        }\n      }\n    } finally {\n      pstmtChannel.close();\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profileId\n   * @param stylesheetId\n   * @return\n   * @exception Exception\n   */\n  public StructureStylesheetUserPreferences getStructureStylesheetUserPreferences (IPerson person, int profileId, int stylesheetId) throws Exception {\n    int userId = person.getID();\n    StructureStylesheetUserPreferences ssup;\n    Connection con = rdbmService.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        // get stylesheet description\n        StructureStylesheetDescription ssd = getStructureStylesheetDescription(stylesheetId);\n        // get user defined defaults\n        String subSelectString = \"SELECT LAYOUT_ID FROM UP_USER_PROFILE WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" +\n            profileId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + subSelectString);\n        int layoutId;\n        ResultSet rs = stmt.executeQuery(subSelectString);\n        try {\n          rs.next();\n          layoutId = rs.getInt(1);\n        } finally {\n          rs.close();\n        }\n\n        if (layoutId == 0) { // First time, grab the default layout for this user\n          String sQuery = \"SELECT USER_DFLT_USR_ID FROM UP_USER WHERE USER_ID=\" + userId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + sQuery);\n          rs = stmt.executeQuery(sQuery);\n          try {\n            rs.next();\n            userId = rs.getInt(1);\n          } finally {\n            rs.close();\n          }\n        }\n\n        String sQuery = \"SELECT PARAM_NAME, PARAM_VAL FROM UP_SS_USER_PARM WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\"\n            + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetUserPreferences(): \" + sQuery);\n        rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            // stylesheet param\n            ssd.setStylesheetParameterDefaultValue(rs.getString(1), rs.getString(2));\n            //LogService.instance().log(LogService.DEBUG,\"RDBMUserLayoutStore::getStructureStylesheetUserPreferences() :  read stylesheet param \"+rs.getString(\"PARAM_NAME\")+\"=\\\"\"+rs.getString(\"PARAM_VAL\")+\"\\\"\");\n          }\n        } finally {\n          rs.close();\n        }\n        ssup = new StructureStylesheetUserPreferences();\n        ssup.setStylesheetId(stylesheetId);\n        // fill stylesheet description with defaults\n        for (Enumeration e = ssd.getStylesheetParameterNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          ssup.putParameterValue(pName, ssd.getStylesheetParameterDefaultValue(pName));\n        }\n        for (Enumeration e = ssd.getChannelAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          ssup.addChannelAttribute(pName, ssd.getChannelAttributeDefaultValue(pName));\n        }\n        for (Enumeration e = ssd.getFolderAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          ssup.addFolderAttribute(pName, ssd.getFolderAttributeDefaultValue(pName));\n        }\n        // get user preferences\n        sQuery = \"SELECT PARAM_NAME, PARAM_VAL, PARAM_TYPE, ULS.STRUCT_ID, CHAN_ID FROM UP_SS_USER_ATTS UUSA, UP_LAYOUT_STRUCT ULS WHERE UUSA.USER_ID=\" + userId + \" AND PROFILE_ID=\"\n            + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND UUSA.STRUCT_ID = ULS.STRUCT_ID AND UUSA.USER_ID = ULS.USER_ID\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetUserPreferences(): \" + sQuery);\n        rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            int param_type = rs.getInt(3);\n            if (param_type == 1) {\n              // stylesheet param\n              LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getStructureStylesheetUserPreferences() :  stylesheet global params should be specified in the user defaults table ! UP_SS_USER_ATTS is corrupt. (userId=\"\n                  + Integer.toString(userId) + \", profileId=\" + Integer.toString(profileId) + \", stylesheetId=\" + Integer.toString(stylesheetId)\n                  + \", param_name=\\\"\" + rs.getString(1) + \"\\\", param_type=\" + Integer.toString(param_type));\n            }\n            else if (param_type == 2) {\n              // folder attribute\n              ssup.setFolderAttributeValue(getStructId(rs.getInt(4),rs.getInt(5)), rs.getString(1), rs.getString(2));\n              //LogService.instance().log(LogService.DEBUG,\"RDBMUserLayoutStore::getStructureStylesheetUserPreferences() :  read folder attribute \"+rs.getString(\"PARAM_NAME\")+\"(\"+rs.getString(\"STRUCT_ID\")+\")=\\\"\"+rs.getString(\"PARAM_VAL\")+\"\\\"\");\n            }\n            else if (param_type == 3) {\n              // channel attribute\n              ssup.setChannelAttributeValue(getStructId(rs.getInt(4),rs.getInt(5)), rs.getString(1), rs.getString(2));\n              //LogService.instance().log(LogService.DEBUG,\"RDBMUserLayoutStore::getStructureStylesheetUserPreferences() :  read channel attribute \"+rs.getString(\"PARAM_NAME\")+\"(\"+rs.getString(\"STRUCT_ID\")+\")=\\\"\"+rs.getString(\"PARAM_VAL\")+\"\\\"\");\n            }\n            else {\n              // unknown param type\n              LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getStructureStylesheetUserPreferences() : unknown param type encountered! DB corrupt. (userId=\"\n                  + Integer.toString(userId) + \", profileId=\" + Integer.toString(profileId) + \", stylesheetId=\" + Integer.toString(stylesheetId)\n                  + \", param_name=\\\"\" + rs.getString(1) + \"\\\", param_type=\" + Integer.toString(param_type));\n            }\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n    return  ssup;\n  }","id":58432,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profileId\n   * @param stylesheetId\n   * @return\n   * @exception Exception\n   */\n  public StructureStylesheetUserPreferences getStructureStylesheetUserPreferences (IPerson person, int profileId, int stylesheetId) throws Exception {\n    int userId = person.getID();\n    StructureStylesheetUserPreferences ssup;\n    Connection con = RdbmServices.getConnection();\n    try {\n      Statement stmt = con.createStatement();\n      try {\n        // get stylesheet description\n        StructureStylesheetDescription ssd = getStructureStylesheetDescription(stylesheetId);\n        // get user defined defaults\n        String subSelectString = \"SELECT LAYOUT_ID FROM UP_USER_PROFILE WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" +\n            profileId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + subSelectString);\n        int layoutId;\n        ResultSet rs = stmt.executeQuery(subSelectString);\n        try {\n          rs.next();\n          layoutId = rs.getInt(1);\n        } finally {\n          rs.close();\n        }\n\n        if (layoutId == 0) { // First time, grab the default layout for this user\n          String sQuery = \"SELECT USER_DFLT_USR_ID FROM UP_USER WHERE USER_ID=\" + userId;\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getUserLayout(): \" + sQuery);\n          rs = stmt.executeQuery(sQuery);\n          try {\n            rs.next();\n            userId = rs.getInt(1);\n          } finally {\n            rs.close();\n          }\n        }\n\n        String sQuery = \"SELECT PARAM_NAME, PARAM_VAL FROM UP_SS_USER_PARM WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\"\n            + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetUserPreferences(): \" + sQuery);\n        rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            // stylesheet param\n            ssd.setStylesheetParameterDefaultValue(rs.getString(1), rs.getString(2));\n            //LogService.instance().log(LogService.DEBUG,\"RDBMUserLayoutStore::getStructureStylesheetUserPreferences() :  read stylesheet param \"+rs.getString(\"PARAM_NAME\")+\"=\\\"\"+rs.getString(\"PARAM_VAL\")+\"\\\"\");\n          }\n        } finally {\n          rs.close();\n        }\n        ssup = new StructureStylesheetUserPreferences();\n        ssup.setStylesheetId(stylesheetId);\n        // fill stylesheet description with defaults\n        for (Enumeration e = ssd.getStylesheetParameterNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          ssup.putParameterValue(pName, ssd.getStylesheetParameterDefaultValue(pName));\n        }\n        for (Enumeration e = ssd.getChannelAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          ssup.addChannelAttribute(pName, ssd.getChannelAttributeDefaultValue(pName));\n        }\n        for (Enumeration e = ssd.getFolderAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          ssup.addFolderAttribute(pName, ssd.getFolderAttributeDefaultValue(pName));\n        }\n        // get user preferences\n        sQuery = \"SELECT PARAM_NAME, PARAM_VAL, PARAM_TYPE, ULS.STRUCT_ID, CHAN_ID FROM UP_SS_USER_ATTS UUSA, UP_LAYOUT_STRUCT ULS WHERE UUSA.USER_ID=\" + userId + \" AND PROFILE_ID=\"\n            + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=1 AND UUSA.STRUCT_ID = ULS.STRUCT_ID AND UUSA.USER_ID = ULS.USER_ID\";\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetUserPreferences(): \" + sQuery);\n        rs = stmt.executeQuery(sQuery);\n        try {\n          while (rs.next()) {\n            int param_type = rs.getInt(3);\n            if (param_type == 1) {\n              // stylesheet param\n              LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getStructureStylesheetUserPreferences() :  stylesheet global params should be specified in the user defaults table ! UP_SS_USER_ATTS is corrupt. (userId=\"\n                  + Integer.toString(userId) + \", profileId=\" + Integer.toString(profileId) + \", stylesheetId=\" + Integer.toString(stylesheetId)\n                  + \", param_name=\\\"\" + rs.getString(1) + \"\\\", param_type=\" + Integer.toString(param_type));\n            }\n            else if (param_type == 2) {\n              // folder attribute\n              ssup.setFolderAttributeValue(getStructId(rs.getInt(4),rs.getInt(5)), rs.getString(1), rs.getString(2));\n              //LogService.instance().log(LogService.DEBUG,\"RDBMUserLayoutStore::getStructureStylesheetUserPreferences() :  read folder attribute \"+rs.getString(\"PARAM_NAME\")+\"(\"+rs.getString(\"STRUCT_ID\")+\")=\\\"\"+rs.getString(\"PARAM_VAL\")+\"\\\"\");\n            }\n            else if (param_type == 3) {\n              // channel attribute\n              ssup.setChannelAttributeValue(getStructId(rs.getInt(4),rs.getInt(5)), rs.getString(1), rs.getString(2));\n              //LogService.instance().log(LogService.DEBUG,\"RDBMUserLayoutStore::getStructureStylesheetUserPreferences() :  read channel attribute \"+rs.getString(\"PARAM_NAME\")+\"(\"+rs.getString(\"STRUCT_ID\")+\")=\\\"\"+rs.getString(\"PARAM_VAL\")+\"\\\"\");\n            }\n            else {\n              // unknown param type\n              LogService.instance().log(LogService.ERROR, \"RDBMUserLayoutStore::getStructureStylesheetUserPreferences() : unknown param type encountered! DB corrupt. (userId=\"\n                  + Integer.toString(userId) + \", profileId=\" + Integer.toString(profileId) + \", stylesheetId=\" + Integer.toString(stylesheetId)\n                  + \", param_name=\\\"\" + rs.getString(1) + \"\\\", param_type=\" + Integer.toString(param_type));\n            }\n          }\n        } finally {\n          rs.close();\n        }\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n    return  ssup;\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"protected void appendChildCategoriesAndChannels (Connection con, IAuthorizationPrincipal ap, MyPreparedStatement chanStmt, Element category, int catId) throws SQLException, AuthorizationException {\n    Document doc = category.getOwnerDocument();\n    Statement stmt = null;\n    ResultSet rs = null;\n    try {\n      stmt = con.createStatement();\n      String query = \"SELECT CAT_ID, CAT_TITLE, CAT_DESC FROM UP_CATEGORY WHERE PARENT_CAT_ID=\" + catId;\n      LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::appendChildCategoriesAndChannels(): \" + query);\n      rs = stmt.executeQuery(query);\n      while (rs.next()) {\n        int childCatId = rs.getInt(1);\n        String childCatTitle = rs.getString(2);\n        String childCatDesc = rs.getString(3);\n\n        // Child <category>\n        Element childCategory = doc.createElement(\"category\");\n        childCategory.setAttribute(\"ID\", \"cat\" + childCatId);\n        childCategory.setAttribute(\"name\", childCatTitle);\n        childCategory.setAttribute(\"description\", childCatDesc);\n        ((org.apache.xerces.dom.DocumentImpl)doc).putIdentifier(childCategory.getAttribute(\"ID\"), childCategory);\n        category.appendChild(childCategory);\n\n        // Append child categories and channels recursively\n        appendChildCategoriesAndChannels(con, ap, chanStmt, childCategory, childCatId);\n      }\n\n      // Append children channels\n      chanStmt.clearParameters();\n      chanStmt.setInt(1, catId);\n      LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::appendChildCategoriesAndChannels(): \" + chanStmt);\n      rs = chanStmt.executeQuery();\n      try {\n        while (rs.next()) {\n          int chanId = rs.getInt(1);\n          if (ap.canSubscribe(chanId)) {\n            Element channel = getChannelNode (chanId, con, (org.apache.xerces.dom.DocumentImpl)doc, \"chan\" + chanId);\n            if (channel == null) {\n              LogService.instance().log(LogService.WARN, \"RDBMUserLayoutStore::appendChildCategoriesAndChannels(): channel \" + chanId +\n                \" in category \" + catId + \" does not exist in the store\");\n            } else {\n              category.appendChild(channel);\n            }\n          }\n        }\n      } finally {\n        rs.close();\n      }\n    } finally {\n      stmt.close();\n    }\n  }","id":58433,"modified_method":"protected void appendChildCategoriesAndChannels (Connection con, IAuthorizationPrincipal ap, RdbmServices.PreparedStatement chanStmt, Element category, int catId) throws SQLException, AuthorizationException {\n    Document doc = category.getOwnerDocument();\n    Statement stmt = null;\n    ResultSet rs = null;\n    try {\n      stmt = con.createStatement();\n      String query = \"SELECT CAT_ID, CAT_TITLE, CAT_DESC FROM UP_CATEGORY WHERE PARENT_CAT_ID=\" + catId;\n      LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::appendChildCategoriesAndChannels(): \" + query);\n      rs = stmt.executeQuery(query);\n      while (rs.next()) {\n        int childCatId = rs.getInt(1);\n        String childCatTitle = rs.getString(2);\n        String childCatDesc = rs.getString(3);\n\n        // Child <category>\n        Element childCategory = doc.createElement(\"category\");\n        childCategory.setAttribute(\"ID\", \"cat\" + childCatId);\n        childCategory.setAttribute(\"name\", childCatTitle);\n        childCategory.setAttribute(\"description\", childCatDesc);\n        ((org.apache.xerces.dom.DocumentImpl)doc).putIdentifier(childCategory.getAttribute(\"ID\"), childCategory);\n        category.appendChild(childCategory);\n\n        // Append child categories and channels recursively\n        appendChildCategoriesAndChannels(con, ap, chanStmt, childCategory, childCatId);\n      }\n\n      // Append children channels\n      chanStmt.clearParameters();\n      chanStmt.setInt(1, catId);\n      LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::appendChildCategoriesAndChannels(): \" + chanStmt);\n      rs = chanStmt.executeQuery();\n      try {\n        while (rs.next()) {\n          int chanId = rs.getInt(1);\n          if (ap.canSubscribe(chanId)) {\n            Element channel = getChannelNode (chanId, con, (org.apache.xerces.dom.DocumentImpl)doc, \"chan\" + chanId);\n            if (channel == null) {\n              LogService.instance().log(LogService.WARN, \"RDBMUserLayoutStore::appendChildCategoriesAndChannels(): channel \" + chanId +\n                \" in category \" + catId + \" does not exist in the store\");\n            } else {\n              category.appendChild(channel);\n            }\n          }\n        }\n      } finally {\n        rs.close();\n      }\n    } finally {\n      stmt.close();\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profileId\n   * @param tsup\n   * @exception Exception\n   */\n  public void setThemeStylesheetUserPreferences (IPerson person, int profileId, ThemeStylesheetUserPreferences tsup) throws Exception {\n    int userId = person.getID();\n    Connection con = rdbmService.getConnection();\n    try {\n      // Set autocommit false for the connection\n      int stylesheetId = tsup.getStylesheetId();\n      setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        // write out params\n        for (Enumeration e = tsup.getParameterValues().keys(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          // see if the parameter was already there\n          String sQuery = \"SELECT PARAM_VAL FROM UP_SS_USER_PARM WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId\n              + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=2 AND PARAM_NAME='\" + pName + \"'\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setThemeStylesheetUserPreferences(): \" + sQuery);\n          ResultSet rs = stmt.executeQuery(sQuery);\n          if (rs.next()) {\n            // update\n            sQuery = \"UPDATE UP_SS_USER_PARM SET PARAM_VAL='\" + tsup.getParameterValue(pName) + \"' WHERE USER_ID=\" + userId\n                + \" AND PROFILE_ID=\" + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=2 AND PARAM_NAME='\" + pName\n                + \"'\";\n          }\n          else {\n            // insert\n            sQuery = \"INSERT INTO UP_SS_USER_PARM (USER_ID,PROFILE_ID,SS_ID,SS_TYPE,PARAM_NAME,PARAM_VAL) VALUES (\" + userId\n                + \",\" + profileId + \",\" + stylesheetId + \",2,'\" + pName + \"','\" + tsup.getParameterValue(pName) + \"')\";\n          }\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setThemeStylesheetUserPreferences(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // write out channel attributes\n        for (Enumeration e = tsup.getChannels(); e.hasMoreElements();) {\n          String channelId = (String)e.nextElement();\n          for (Enumeration attre = tsup.getChannelAttributeNames(); attre.hasMoreElements();) {\n            String pName = (String)attre.nextElement();\n            String pValue = tsup.getDefinedChannelAttributeValue(channelId, pName);\n            if (pValue != null) {\n              // store user preferences\n              String sQuery = \"SELECT PARAM_VAL FROM UP_SS_USER_ATTS WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId\n                  + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=2 AND STRUCT_ID='\" + channelId.substring(1) + \"' AND PARAM_NAME='\" + pName\n                  + \"' AND PARAM_TYPE=3\";\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setThemeStylesheetUserPreferences(): \" + sQuery);\n              ResultSet rs = stmt.executeQuery(sQuery);\n              if (rs.next()) {\n                // update\n                sQuery = \"UPDATE UP_SS_USER_ATTS SET PARAM_VAL='\" + pValue + \"' WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\"\n                    + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=2 AND STRUCT_ID='\" + channelId.substring(1) + \"' AND PARAM_NAME='\"\n                    + pName + \"' AND PARAM_TYPE=3\";\n              }\n              else {\n                // insert\n                sQuery = \"INSERT INTO UP_SS_USER_ATTS (USER_ID,PROFILE_ID,SS_ID,SS_TYPE,STRUCT_ID,PARAM_NAME,PARAM_TYPE,PARAM_VAL) VALUES (\"\n                    + userId + \",\" + profileId + \",\" + stylesheetId + \",2,'\" + channelId.substring(1) + \"','\" + pName + \"',3,'\" + pValue\n                    + \"')\";\n              }\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setThemeStylesheetUserPreferences(): \" + sQuery);\n              stmt.executeUpdate(sQuery);\n            }\n          }\n        }\n        // Commit the transaction\n        commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58434,"modified_method":"/**\n   * put your documentation comment here\n   * @param person\n   * @param profileId\n   * @param tsup\n   * @exception Exception\n   */\n  public void setThemeStylesheetUserPreferences (IPerson person, int profileId, ThemeStylesheetUserPreferences tsup) throws Exception {\n    int userId = person.getID();\n    Connection con = RdbmServices.getConnection();\n    try {\n      // Set autocommit false for the connection\n      int stylesheetId = tsup.getStylesheetId();\n      RdbmServices.setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        // write out params\n        for (Enumeration e = tsup.getParameterValues().keys(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          // see if the parameter was already there\n          String sQuery = \"SELECT PARAM_VAL FROM UP_SS_USER_PARM WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId\n              + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=2 AND PARAM_NAME='\" + pName + \"'\";\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setThemeStylesheetUserPreferences(): \" + sQuery);\n          ResultSet rs = stmt.executeQuery(sQuery);\n          if (rs.next()) {\n            // update\n            sQuery = \"UPDATE UP_SS_USER_PARM SET PARAM_VAL='\" + tsup.getParameterValue(pName) + \"' WHERE USER_ID=\" + userId\n                + \" AND PROFILE_ID=\" + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=2 AND PARAM_NAME='\" + pName\n                + \"'\";\n          }\n          else {\n            // insert\n            sQuery = \"INSERT INTO UP_SS_USER_PARM (USER_ID,PROFILE_ID,SS_ID,SS_TYPE,PARAM_NAME,PARAM_VAL) VALUES (\" + userId\n                + \",\" + profileId + \",\" + stylesheetId + \",2,'\" + pName + \"','\" + tsup.getParameterValue(pName) + \"')\";\n          }\n          LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setThemeStylesheetUserPreferences(): \" + sQuery);\n          stmt.executeUpdate(sQuery);\n        }\n        // write out channel attributes\n        for (Enumeration e = tsup.getChannels(); e.hasMoreElements();) {\n          String channelId = (String)e.nextElement();\n          for (Enumeration attre = tsup.getChannelAttributeNames(); attre.hasMoreElements();) {\n            String pName = (String)attre.nextElement();\n            String pValue = tsup.getDefinedChannelAttributeValue(channelId, pName);\n            if (pValue != null) {\n              // store user preferences\n              String sQuery = \"SELECT PARAM_VAL FROM UP_SS_USER_ATTS WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\" + profileId\n                  + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=2 AND STRUCT_ID='\" + channelId.substring(1) + \"' AND PARAM_NAME='\" + pName\n                  + \"' AND PARAM_TYPE=3\";\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setThemeStylesheetUserPreferences(): \" + sQuery);\n              ResultSet rs = stmt.executeQuery(sQuery);\n              if (rs.next()) {\n                // update\n                sQuery = \"UPDATE UP_SS_USER_ATTS SET PARAM_VAL='\" + pValue + \"' WHERE USER_ID=\" + userId + \" AND PROFILE_ID=\"\n                    + profileId + \" AND SS_ID=\" + stylesheetId + \" AND SS_TYPE=2 AND STRUCT_ID='\" + channelId.substring(1) + \"' AND PARAM_NAME='\"\n                    + pName + \"' AND PARAM_TYPE=3\";\n              }\n              else {\n                // insert\n                sQuery = \"INSERT INTO UP_SS_USER_ATTS (USER_ID,PROFILE_ID,SS_ID,SS_TYPE,STRUCT_ID,PARAM_NAME,PARAM_TYPE,PARAM_VAL) VALUES (\"\n                    + userId + \",\" + profileId + \",\" + stylesheetId + \",2,'\" + channelId.substring(1) + \"','\" + pName + \"',3,'\" + pValue\n                    + \"')\";\n              }\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::setThemeStylesheetUserPreferences(): \" + sQuery);\n              stmt.executeUpdate(sQuery);\n            }\n          }\n        }\n        // Commit the transaction\n        RdbmServices.commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        RdbmServices.rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Updates an existing structure stylesheet description with a new one. Old stylesheet\n   * description is found based on the Id provided in the parameter structure.\n   * @param ssd new stylesheet description\n   */\n  public void updateStructureStylesheetDescription (StructureStylesheetDescription ssd) throws Exception {\n    Connection con = rdbmService.getConnection();\n    try {\n      // Set autocommit false for the connection\n      setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        int stylesheetId = ssd.getId();\n        String sQuery = \"UPDATE UP_SS_STRUCT SET SS_NAME='\" + ssd.getStylesheetName() + \"',SS_URI='\" + ssd.getStylesheetURI()\n            + \"',SS_DESCRIPTION_URI='\" + ssd.getStylesheetDescriptionURI() + \"',SS_DESCRIPTION_TEXT='\" + ssd.getStylesheetWordDescription()\n            + \"' WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // first, see what was there before\n        HashSet oparams = new HashSet();\n        HashSet ofattrs = new HashSet();\n        HashSet ocattrs = new HashSet();\n        sQuery = \"SELECT PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE FROM UP_SS_STRUCT_PAR WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateStructureStylesheetDescription() : \" + sQuery);\n        Statement stmtOld = con.createStatement();\n        ResultSet rsOld = stmtOld.executeQuery(sQuery);\n        try {\n          while (rsOld.next()) {\n            int type = rsOld.getInt(\"TYPE\");\n            if (type == 1) {\n              // stylesheet param\n              String pName = rsOld.getString(\"PARAM_NAME\");\n              oparams.add(pName);\n              if (!ssd.containsParameterName(pName)) {\n                // delete param\n                removeStructureStylesheetParam(stylesheetId, pName, con);\n              }\n              else {\n                // update param\n                sQuery = \"UPDATE UP_SS_STRUCT_PAR SET PARAM_DEFAULT_VAL='\" + ssd.getStylesheetParameterDefaultValue(pName)\n                    + \"',PARAM_DESCRIPT='\" + ssd.getStylesheetParameterWordDescription(pName) + \"' WHERE SS_ID=\" + stylesheetId\n                    + \" AND PARAM_NAME='\" + pName + \"' AND TYPE=1\";\n                LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateStructureStylesheetDescription() : \" + sQuery);\n                stmt.executeUpdate(sQuery);\n              }\n            }\n            else if (type == 2) {\n              // folder attribute\n              String pName = rsOld.getString(\"PARAM_NAME\");\n              ofattrs.add(pName);\n              if (!ssd.containsFolderAttribute(pName)) {\n                // delete folder attribute\n                removeStructureFolderAttribute(stylesheetId, pName, con);\n              }\n              else {\n                // update folder attribute\n                sQuery = \"UPDATE UP_SS_STRUCT_PAR SET PARAM_DEFAULT_VAL='\" + ssd.getFolderAttributeDefaultValue(pName) +\n                    \"',PARAM_DESCRIPT='\" + ssd.getFolderAttributeWordDescription(pName) + \"' WHERE SS_ID=\" + stylesheetId\n                    + \" AND PARAM_NAME='\" + pName + \"'AND TYPE=2\";\n                LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateStructureStylesheetDescription() : \" + sQuery);\n                stmt.executeUpdate(sQuery);\n              }\n            }\n            else if (type == 3) {\n              // channel attribute\n              String pName = rsOld.getString(\"PARAM_NAME\");\n              ocattrs.add(pName);\n              if (!ssd.containsChannelAttribute(pName)) {\n                // delete channel attribute\n                removeStructureChannelAttribute(stylesheetId, pName, con);\n              }\n              else {\n                // update channel attribute\n                sQuery = \"UPDATE UP_SS_STRUCT_PAR SET PARAM_DEFAULT_VAL='\" + ssd.getChannelAttributeDefaultValue(pName) +\n                    \"',PARAM_DESCRIPT='\" + ssd.getChannelAttributeWordDescription(pName) + \"' WHERE SS_ID=\" + stylesheetId\n                    + \" AND PARAM_NAME='\" + pName + \"' AND TYPE=3\";\n                LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateStructureStylesheetDescription() : \" + sQuery);\n                stmt.executeUpdate(sQuery);\n              }\n            }\n            else {\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetDescription() : encountered param of unknown type! (stylesheetId=\"\n                  + stylesheetId + \" param_name=\\\"\" + rsOld.getString(\"PARAM_NAME\") + \"\\\" type=\" + rsOld.getInt(\"TYPE\") +\n                  \").\");\n            }\n          }\n        } finally {\n          rsOld.close();\n          stmtOld.close();\n        }\n        // look for new attributes/parameters\n        // insert all stylesheet params\n        for (Enumeration e = ssd.getStylesheetParameterNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          if (!oparams.contains(pName)) {\n            sQuery = \"INSERT INTO UP_SS_STRUCT_PAR (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" +\n                stylesheetId + \",'\" + pName + \"','\" + ssd.getStylesheetParameterDefaultValue(pName) + \"','\" + ssd.getStylesheetParameterWordDescription(pName)\n                + \"',1)\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n            stmt.executeUpdate(sQuery);\n          }\n        }\n        // insert all folder attributes\n        for (Enumeration e = ssd.getFolderAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          if (!ofattrs.contains(pName)) {\n            sQuery = \"INSERT INTO UP_SS_STRUCT_PAR (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" +\n                stylesheetId + \",'\" + pName + \"','\" + ssd.getFolderAttributeDefaultValue(pName) + \"','\" + ssd.getFolderAttributeWordDescription(pName)\n                + \"',2)\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n            stmt.executeUpdate(sQuery);\n          }\n        }\n        // insert all channel attributes\n        for (Enumeration e = ssd.getChannelAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          if (!ocattrs.contains(pName)) {\n            sQuery = \"INSERT INTO UP_SS_STRUCT_PAR (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" +\n                stylesheetId + \",'\" + pName + \"','\" + ssd.getChannelAttributeDefaultValue(pName) + \"','\" + ssd.getChannelAttributeWordDescription(pName)\n                + \"',3)\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n            stmt.executeUpdate(sQuery);\n          }\n        }\n        // Commit the transaction\n        commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      rdbmService.releaseConnection(con);\n    }\n  }","id":58435,"modified_method":"/**\n   * Updates an existing structure stylesheet description with a new one. Old stylesheet\n   * description is found based on the Id provided in the parameter structure.\n   * @param ssd new stylesheet description\n   */\n  public void updateStructureStylesheetDescription (StructureStylesheetDescription ssd) throws Exception {\n    Connection con = RdbmServices.getConnection();\n    try {\n      // Set autocommit false for the connection\n      RdbmServices.setAutoCommit(con, false);\n      Statement stmt = con.createStatement();\n      try {\n        int stylesheetId = ssd.getId();\n        String sQuery = \"UPDATE UP_SS_STRUCT SET SS_NAME='\" + ssd.getStylesheetName() + \"',SS_URI='\" + ssd.getStylesheetURI()\n            + \"',SS_DESCRIPTION_URI='\" + ssd.getStylesheetDescriptionURI() + \"',SS_DESCRIPTION_TEXT='\" + ssd.getStylesheetWordDescription()\n            + \"' WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription() : \" + sQuery);\n        stmt.executeUpdate(sQuery);\n        // first, see what was there before\n        HashSet oparams = new HashSet();\n        HashSet ofattrs = new HashSet();\n        HashSet ocattrs = new HashSet();\n        sQuery = \"SELECT PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE FROM UP_SS_STRUCT_PAR WHERE SS_ID=\" + stylesheetId;\n        LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateStructureStylesheetDescription() : \" + sQuery);\n        Statement stmtOld = con.createStatement();\n        ResultSet rsOld = stmtOld.executeQuery(sQuery);\n        try {\n          while (rsOld.next()) {\n            int type = rsOld.getInt(\"TYPE\");\n            if (type == 1) {\n              // stylesheet param\n              String pName = rsOld.getString(\"PARAM_NAME\");\n              oparams.add(pName);\n              if (!ssd.containsParameterName(pName)) {\n                // delete param\n                removeStructureStylesheetParam(stylesheetId, pName, con);\n              }\n              else {\n                // update param\n                sQuery = \"UPDATE UP_SS_STRUCT_PAR SET PARAM_DEFAULT_VAL='\" + ssd.getStylesheetParameterDefaultValue(pName)\n                    + \"',PARAM_DESCRIPT='\" + ssd.getStylesheetParameterWordDescription(pName) + \"' WHERE SS_ID=\" + stylesheetId\n                    + \" AND PARAM_NAME='\" + pName + \"' AND TYPE=1\";\n                LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateStructureStylesheetDescription() : \" + sQuery);\n                stmt.executeUpdate(sQuery);\n              }\n            }\n            else if (type == 2) {\n              // folder attribute\n              String pName = rsOld.getString(\"PARAM_NAME\");\n              ofattrs.add(pName);\n              if (!ssd.containsFolderAttribute(pName)) {\n                // delete folder attribute\n                removeStructureFolderAttribute(stylesheetId, pName, con);\n              }\n              else {\n                // update folder attribute\n                sQuery = \"UPDATE UP_SS_STRUCT_PAR SET PARAM_DEFAULT_VAL='\" + ssd.getFolderAttributeDefaultValue(pName) +\n                    \"',PARAM_DESCRIPT='\" + ssd.getFolderAttributeWordDescription(pName) + \"' WHERE SS_ID=\" + stylesheetId\n                    + \" AND PARAM_NAME='\" + pName + \"'AND TYPE=2\";\n                LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateStructureStylesheetDescription() : \" + sQuery);\n                stmt.executeUpdate(sQuery);\n              }\n            }\n            else if (type == 3) {\n              // channel attribute\n              String pName = rsOld.getString(\"PARAM_NAME\");\n              ocattrs.add(pName);\n              if (!ssd.containsChannelAttribute(pName)) {\n                // delete channel attribute\n                removeStructureChannelAttribute(stylesheetId, pName, con);\n              }\n              else {\n                // update channel attribute\n                sQuery = \"UPDATE UP_SS_STRUCT_PAR SET PARAM_DEFAULT_VAL='\" + ssd.getChannelAttributeDefaultValue(pName) +\n                    \"',PARAM_DESCRIPT='\" + ssd.getChannelAttributeWordDescription(pName) + \"' WHERE SS_ID=\" + stylesheetId\n                    + \" AND PARAM_NAME='\" + pName + \"' AND TYPE=3\";\n                LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::updateStructureStylesheetDescription() : \" + sQuery);\n                stmt.executeUpdate(sQuery);\n              }\n            }\n            else {\n              LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::getStructureStylesheetDescription() : encountered param of unknown type! (stylesheetId=\"\n                  + stylesheetId + \" param_name=\\\"\" + rsOld.getString(\"PARAM_NAME\") + \"\\\" type=\" + rsOld.getInt(\"TYPE\") +\n                  \").\");\n            }\n          }\n        } finally {\n          rsOld.close();\n          stmtOld.close();\n        }\n        // look for new attributes/parameters\n        // insert all stylesheet params\n        for (Enumeration e = ssd.getStylesheetParameterNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          if (!oparams.contains(pName)) {\n            sQuery = \"INSERT INTO UP_SS_STRUCT_PAR (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" +\n                stylesheetId + \",'\" + pName + \"','\" + ssd.getStylesheetParameterDefaultValue(pName) + \"','\" + ssd.getStylesheetParameterWordDescription(pName)\n                + \"',1)\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n            stmt.executeUpdate(sQuery);\n          }\n        }\n        // insert all folder attributes\n        for (Enumeration e = ssd.getFolderAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          if (!ofattrs.contains(pName)) {\n            sQuery = \"INSERT INTO UP_SS_STRUCT_PAR (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" +\n                stylesheetId + \",'\" + pName + \"','\" + ssd.getFolderAttributeDefaultValue(pName) + \"','\" + ssd.getFolderAttributeWordDescription(pName)\n                + \"',2)\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n            stmt.executeUpdate(sQuery);\n          }\n        }\n        // insert all channel attributes\n        for (Enumeration e = ssd.getChannelAttributeNames(); e.hasMoreElements();) {\n          String pName = (String)e.nextElement();\n          if (!ocattrs.contains(pName)) {\n            sQuery = \"INSERT INTO UP_SS_STRUCT_PAR (SS_ID,PARAM_NAME,PARAM_DEFAULT_VAL,PARAM_DESCRIPT,TYPE) VALUES (\" +\n                stylesheetId + \",'\" + pName + \"','\" + ssd.getChannelAttributeDefaultValue(pName) + \"','\" + ssd.getChannelAttributeWordDescription(pName)\n                + \"',3)\";\n            LogService.instance().log(LogService.DEBUG, \"RDBMUserLayoutStore::addThemeStylesheetDescription(): \" + sQuery);\n            stmt.executeUpdate(sQuery);\n          }\n        }\n        // Commit the transaction\n        RdbmServices.commit(con);\n      } catch (Exception e) {\n        // Roll back the transaction\n        RdbmServices.rollback(con);\n        throw  e;\n      } finally {\n        stmt.close();\n      }\n    } finally {\n      RdbmServices.releaseConnection(con);\n    }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n   * Loads the JDBC properties from rdbm.properties file.\n   */\n  protected static void loadProps () {\n    try {\n      if (!bPropsLoaded) {\n        InputStream inStream = RdbmServices.class.getResourceAsStream(\"/properties/rdbm.properties\");\n        Properties jdbcProps = new Properties();\n        jdbcProps.load(inStream);\n        sJdbcDriver = jdbcProps.getProperty(\"jdbcDriver\");\n        sJdbcUrl = jdbcProps.getProperty(\"jdbcUrl\");\n        sJdbcUser = jdbcProps.getProperty(\"jdbcUser\");\n        sJdbcPassword = jdbcProps.getProperty(\"jdbcPassword\");\n        bPropsLoaded = true;\n      }\n    } catch (Exception e) {\n      LogService.instance().log(LogService.ERROR, e);\n    }\n  }","id":58436,"modified_method":"/**\n   * Loads the JDBC properties from rdbm.properties file.\n   */\n  protected static void loadProps () throws Exception {\n      if (!bPropsLoaded) {\n        InputStream inStream = RdbmServices.class.getResourceAsStream(\"/properties/rdbm.properties\");\n        Properties jdbcProps = new Properties();\n        jdbcProps.load(inStream);\n        sJdbcDriver = jdbcProps.getProperty(\"jdbcDriver\");\n        sJdbcUrl = jdbcProps.getProperty(\"jdbcUrl\");\n        sJdbcUser = jdbcProps.getProperty(\"jdbcUser\");\n        sJdbcPassword = jdbcProps.getProperty(\"jdbcPassword\");\n        bPropsLoaded = true;\n      }\n  }","commit_id":"e3b4df7631c54e8731a9047d226b51e46a0bf78e","url":"https://github.com/Jasig/uPortal"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see PluginManager#unload(String)\n     */\n    public void unload(String pluginName)\n    {\n        Plugin plugin = (Plugin) loadedPlugins.remove(pluginName);\n        if (plugin != null) {\n            // remove UI extensions from cache\n            UIExtension[] pluginUIExtensions = plugin.getUIExtensions();\n            for (int i = 0; i < pluginUIExtensions.length; i++) {\n                UIExtension pluginUIExtension = pluginUIExtensions[i];\n                String[] pluginFeatures = pluginUIExtension.getFeatures();\n                Map<String, UIExtension> loadedUIExtensions = getUIExtensions(pluginUIExtension.getRole());\n                for (int j = 0; j < pluginFeatures.length; j++) {\n                    if (pluginUIExtension.equals(loadedUIExtensions.get(pluginFeatures[j]))) {\n                        loadedUIExtensions.remove(pluginFeatures[j]);\n                    }\n                }\n            }\n            plugin.destroy();\n        }\n    }","id":58437,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see PluginManager#unload(String)\n     */\n    public void unload(String pluginName)\n    {\n        Plugin plugin = loadedPlugins.remove(pluginName);\n        if (plugin != null) {\n            // remove UI extensions from cache\n            UIExtension[] pluginUIExtensions = plugin.getUIExtensions();\n            for (int i = 0; i < pluginUIExtensions.length; i++) {\n                UIExtension pluginUIExtension = pluginUIExtensions[i];\n                String[] pluginFeatures = pluginUIExtension.getFeatures();\n                Map<String, UIExtension> loadedUIExtensions = getUIExtensions(pluginUIExtension.getRole());\n                for (int j = 0; j < pluginFeatures.length; j++) {\n                    if (pluginUIExtension.equals(loadedUIExtensions.get(pluginFeatures[j]))) {\n                        loadedUIExtensions.remove(pluginFeatures[j]);\n                    }\n                }\n            }\n            plugin.destroy();\n        }\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Marks the initial line breaks so they are not mistaken as {@link #SPACER}.\n     */\n    protected void markInitialLineBreaks()\n    {\n        Document document = getTextArea().getDocument();\n        NodeList<com.google.gwt.dom.client.Element> brs = document.getBody().getElementsByTagName(BR);\n        for (int i = 0; i < brs.getLength(); i++) {\n            Element br = (Element) brs.getItem(i);\n            // Skip the BRs added by the browser before the document was loaded.\n            if (!br.hasAttribute(\"_moz_dirty\")) {\n                br.setClassName(LINE_BREAK);\n            }\n        }\n    }","id":58438,"modified_method":"/**\n     * Marks the initial line breaks so they are not mistaken as {@link #SPACER}.\n     */\n    protected void markInitialLineBreaks()\n    {\n        Document document = getTextArea().getDocument();\n        NodeList<com.google.gwt.dom.client.Element> brs = document.getBody().getElementsByTagName(BR);\n        for (int i = 0; i < brs.getLength(); i++) {\n            Element br = (Element) brs.getItem(i);\n            // Skip the spaces and the BRs added by the browser before the document was loaded.\n            if (!br.hasAttribute(\"_moz_dirty\") && !SPACER.equals(br.getClassName())) {\n                br.setClassName(LINE_BREAK);\n            }\n        }\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Puts the editor in loading state. While in loading state a spinner will be displayed.\n     * \n     * @param loading {@code true} to enter the loading state, {@code false} to leave the loading state\n     */\n    public void setLoading(boolean loading)\n    {\n        if (loading) {\n            container.addStyleName(WysiwygEditor.STYLE_NAME_LOADING);\n            textArea.addStyleName(WysiwygEditor.STYLE_NAME_INVISIBLE);\n        } else {\n            container.removeStyleName(WysiwygEditor.STYLE_NAME_LOADING);\n            textArea.removeStyleName(WysiwygEditor.STYLE_NAME_INVISIBLE);\n        }\n    }","id":58439,"modified_method":"/**\n     * Puts the editor in loading state. While in loading state a spinner will be displayed.\n     * \n     * @param loading {@code true} to enter the loading state, {@code false} to leave the loading state\n     */\n    public void setLoading(boolean loading)\n    {\n        if (loading) {\n            container.addStyleName(STYLE_NAME_LOADING);\n            textArea.addStyleName(STYLE_NAME_INVISIBLE);\n        } else {\n            container.removeStyleName(STYLE_NAME_LOADING);\n            textArea.removeStyleName(STYLE_NAME_INVISIBLE);\n        }\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Creates a new plain text editor that wraps the given text area element.\n     * \n     * @param textAreaElement the plain HTML text area element to wrap\n     */\n    public PlainTextEditor(TextAreaElement textAreaElement)\n    {\n        textArea = TextArea.wrap(textAreaElement);\n        textArea.setStyleName(\"xPlainTextEditor\");\n\n        container = new FlowPanel();\n        container.add(textArea);\n\n        initWidget(container);\n    }","id":58440,"modified_method":"/**\n     * Creates a new plain text editor that wraps the given text area element.\n     * \n     * @param hook the element replaced by the newly created plain text editor\n     * @param cache the object used to cache the content of the plain text editor\n     */\n    public PlainTextEditor(Element hook, Cache cache)\n    {\n        this.hook = hook;\n        this.cache = cache;\n\n        textArea = new TextArea();\n        textArea.setStyleName(\"xPlainTextEditor\");\n        textArea.setText(cache.get(CACHE_KEY_SOURCE, hook.getPropertyString(PROPERTY_VALUE)));\n        textArea.setHeight(Math.max(hook.getOffsetHeight(), 100) + \"px\");\n        textArea.addBlurHandler(this);\n\n        Window.addWindowClosingHandler(this);\n\n        container = new FlowPanel();\n        container.add(textArea);\n\n        initWidget(container);\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Sends a request to the server to parse and re-render the current content of the given rich text area.\n     * \n     * @param rta the rich text area whose content will be refreshed\n     */\n    private void refresh(final RichTextArea rta)\n    {\n        WysiwygService.Singleton.getInstance().parseAndRender(rta.getHTML(), syntax, new AsyncCallback<String>()\n        {\n            public void onFailure(Throwable caught)\n            {\n                rta.setFocus(true);\n                waiting.getElement().getParentNode().removeChild(waiting.getElement());\n                Console.getInstance().error(caught.getMessage());\n            }\n\n            public void onSuccess(String result)\n            {\n                // Reset the content of the rich text area.\n                rta.getCommandManager().execute(new Command(\"reset\"), result);\n                // Store the initial value of the rich text area in case it is submitted without gaining focus.\n                rta.getCommandManager().execute(SUBMIT, true);\n                // Try to focus the rich text area.\n                rta.setFocus(true);\n                waiting.getElement().getParentNode().removeChild(waiting.getElement());\n            }\n        });\n    }","id":58441,"modified_method":"/**\n     * Sends a request to the server to parse and re-render the current content of the given rich text area.\n     * \n     * @param rta the rich text area whose content will be refreshed\n     */\n    private void refresh(final RichTextArea rta)\n    {\n        WysiwygService.Singleton.getInstance().parseAndRender(rta.getHTML(), syntax, new AsyncCallback<String>()\n        {\n            public void onFailure(Throwable caught)\n            {\n                rta.setFocus(true);\n                waiting.stopLoading();\n                Console.getInstance().error(caught.getMessage());\n            }\n\n            public void onSuccess(String result)\n            {\n                // Reset the content of the rich text area.\n                rta.getCommandManager().execute(new Command(\"reset\"), result);\n                // Store the initial value of the rich text area in case it is submitted without gaining focus.\n                rta.getCommandManager().execute(SUBMIT, true);\n                // Try to focus the rich text area.\n                rta.setFocus(true);\n                waiting.stopLoading();\n            }\n        });\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Creates a new refresh executable.\n     * \n     * @param syntax the syntax used for storing the edited document\n     */\n    public RefreshExecutable(String syntax)\n    {\n        this.syntax = syntax;\n\n        waiting = new FocusPanel();\n        waiting.addStyleName(\"loading\");\n        waiting.getElement().getStyle().setProperty(Style.POSITION, Style.Position.ABSOLUTE);\n    }","id":58442,"modified_method":"/**\n     * Creates a new refresh executable.\n     * \n     * @param syntax the syntax used for storing the edited document\n     */\n    public RefreshExecutable(String syntax)\n    {\n        this.syntax = syntax;\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractExecutable#execute(RichTextArea, String)\n     */\n    public boolean execute(final RichTextArea rta, String param)\n    {\n        // Check if there is a refresh in progress.\n        // NOTE: We don't test the parent but the next sibling because in IE the parent of an orphan node is sometimes a\n        // document fragment, thus not null.\n        if (waiting.getElement().getNextSibling() != null) {\n            return false;\n        }\n\n        // Prevent typing while waiting for the updated content.\n        waiting.getElement().getStyle().setPropertyPx(Style.WIDTH, rta.getOffsetWidth());\n        waiting.getElement().getStyle().setPropertyPx(Style.HEIGHT, rta.getOffsetHeight());\n        rta.getElement().getParentNode().insertBefore(waiting.getElement(), rta.getElement());\n        waiting.setFocus(true);\n\n        // Allow other plug-ins to adjust the content before the refresh by executing a submit command.\n        CommandListener submitListener = new CommandListener()\n        {\n            public boolean onBeforeCommand(CommandManager sender, Command command, String param)\n            {\n                // The refresh is executed just before the submit command is executed.\n                if (SUBMIT.equals(command)) {\n                    refresh(rta);\n                }\n                return false;\n            }\n\n            public void onCommand(CommandManager sender, Command command, String param)\n            {\n                // ignore\n            }\n        };\n        // We add the listener now to be sure it is the last one called, after all the other plug-ins did their job.\n        rta.getCommandManager().addCommandListener(submitListener);\n        if (!rta.getCommandManager().execute(SUBMIT)) {\n            // Send the refresh request even if the submit command failed.\n            refresh(rta);\n        }\n        // We no longer need to lister to the submit command.\n        rta.getCommandManager().removeCommandListener(submitListener);\n\n        return true;\n    }","id":58443,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractExecutable#execute(RichTextArea, String)\n     */\n    public boolean execute(final RichTextArea rta, String param)\n    {\n        // Check if there is a refresh in progress.\n        if (waiting.isLoading()) {\n            return false;\n        }\n\n        // Prevent typing while waiting for the updated content.\n        waiting.startLoading(rta);\n        waiting.setFocus(true);\n\n        // Allow other plug-ins to adjust the content before the refresh by executing a submit command.\n        CommandListener submitListener = new CommandListener()\n        {\n            public boolean onBeforeCommand(CommandManager sender, Command command, String param)\n            {\n                // The refresh is executed just before the submit command is executed.\n                if (SUBMIT.equals(command)) {\n                    refresh(rta);\n                }\n                return false;\n            }\n\n            public void onCommand(CommandManager sender, Command command, String param)\n            {\n                // ignore\n            }\n        };\n        // We add the listener now to be sure it is the last one called, after all the other plug-ins did their job.\n        rta.getCommandManager().addCommandListener(submitListener);\n        if (!rta.getCommandManager().execute(SUBMIT)) {\n            // Send the refresh request even if the submit command failed.\n            refresh(rta);\n        }\n        // We no longer need to lister to the submit command.\n        rta.getCommandManager().removeCommandListener(submitListener);\n\n        return true;\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Set the editor loading state. While in loading state a spinner will be displayed.\n     * \n     * @param loading true to display the editor in loading mode, false to remove the loading mode.\n     */\n    public void setLoading(boolean loading)\n    {\n        if (loading) {\n            container.addStyleName(WysiwygEditor.STYLE_NAME_LOADING);\n            textArea.addStyleName(WysiwygEditor.STYLE_NAME_INVISIBLE);\n        } else {\n            container.removeStyleName(WysiwygEditor.STYLE_NAME_LOADING);\n            textArea.removeStyleName(WysiwygEditor.STYLE_NAME_INVISIBLE);\n        }\n    }","id":58444,"modified_method":"/**\n     * Set the editor loading state. While in loading state a spinner will be displayed.\n     * \n     * @param loading true to display the editor in loading mode, false to remove the loading mode.\n     */\n    public void setLoading(boolean loading)\n    {\n        if (loading) {\n            // NOTE: Setting and then removing visibility:hidden on the rich text area prevents it from being focused.\n            loadingPanel.startLoading(textArea);\n        } else {\n            loadingPanel.stopLoading();\n        }\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see Composite#onLoad()\n     */\n    protected void onLoad()\n    {\n        if (textArea.getBasicFormatter() == null || !(textArea.getBasicFormatter() instanceof HasLoadHandlers)) {\n            // We defer the notification in order to allow the rich text area to complete its initialization.\n            DeferredCommand.addCommand(new Command()\n            {\n                public void execute()\n                {\n                    try {\n                        DomEvent.fireNativeEvent(Document.get().createLoadEvent(), RichTextEditor.this);\n                    } catch (Throwable t) {\n                        Console.getInstance().error(t, RichTextEditor.class.getName(), HasLoadHandlers.class.getName());\n                    }\n                }\n            });\n        }\n    }","id":58445,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see Composite#onLoad()\n     */\n    protected void onLoad()\n    {\n        // This rich text editor has been attached to the document but its rich text area might not be ready yet.\n        setLoading(true);\n\n        if (textArea.getBasicFormatter() == null || !(textArea.getBasicFormatter() instanceof HasLoadHandlers)) {\n            // We defer the notification in order to allow the rich text area to complete its initialization.\n            DeferredCommand.addCommand(new Command()\n            {\n                public void execute()\n                {\n                    try {\n                        DomEvent.fireNativeEvent(Document.get().createLoadEvent(), RichTextEditor.this);\n                    } catch (Throwable t) {\n                        Console.getInstance().error(t, RichTextEditor.class.getName(), HasLoadHandlers.class.getName());\n                    }\n                }\n            });\n        }\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Creates a new rich text editor.\n     */\n    public RichTextEditor()\n    {\n        textArea = new RichTextArea();\n        // Workaround till GWT provides a way to detect when the rich text area has finished loading.\n        if (textArea.getBasicFormatter() != null && textArea.getBasicFormatter() instanceof HasLoadHandlers) {\n            ((HasLoadHandlers) textArea.getBasicFormatter()).addLoadHandler(this);\n        }\n\n        container = new FlowPanel();\n        container.add(textArea);\n        container.addStyleName(\"xRichTextEditor\");\n        initWidget(container);\n    }","id":58446,"modified_method":"/**\n     * Creates a new rich text editor.\n     */\n    public RichTextEditor()\n    {\n        textArea = new RichTextArea();\n        // Workaround till GWT provides a way to detect when the rich text area has finished loading.\n        if (textArea.getBasicFormatter() != null && textArea.getBasicFormatter() instanceof HasLoadHandlers) {\n            ((HasLoadHandlers) textArea.getBasicFormatter()).addLoadHandler(this);\n        }\n\n        loadingPanel = new LoadingPanel();\n        loadingPanel.getElement().getStyle().setProperty(Style.BACKGROUND_COLOR, \"white\");\n\n        container = new FlowPanel();\n        container.add(textArea);\n        container.addStyleName(\"xRichTextEditor\");\n        initWidget(container);\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see Executable#execute(RichTextArea, String)\n     */\n    public boolean execute(RichTextArea rta, String param)\n    {\n        Element field = (Element) Document.get().getElementById(fieldId);\n        if (field != null) {\n            field.setPropertyString(\"value\", rta.getHTML());\n            return true;\n        }\n        return false;\n    }","id":58447,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see Executable#execute(RichTextArea, String)\n     */\n    public boolean execute(RichTextArea rta, String param)\n    {\n        Element field = (Element) Document.get().getElementById(fieldId);\n        if (field != null) {\n            field.setPropertyString(VALUE, rta.getHTML());\n            return true;\n        }\n        return false;\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see Executable#getParameter(RichTextArea)\n     */\n    public String getParameter(RichTextArea rta)\n    {\n        return null;\n    }","id":58448,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see Executable#getParameter(RichTextArea)\n     */\n    public String getParameter(RichTextArea rta)\n    {\n        Element field = (Element) Document.get().getElementById(fieldId);\n        return field != null ? field.getPropertyString(VALUE) : null;\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        if (rootExtension.getFeatures().length > 0) {\n            unhookSubmitEvent(form);\n            form = null;\n            hiddenConfig = null;\n            submitHandler = null;\n            rootExtension.clearFeatures();\n        }\n\n        getTextArea().getCommandManager().removeCommandListener(this);\n\n        super.destroy();\n    }","id":58449,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        if (rootExtension.getFeatures().length > 0) {\n            unhookSubmitEvent(form);\n            form = null;\n            cache = null;\n            hiddenConfig.removeFromParent();\n            hiddenConfig = null;\n            submitHandler = null;\n            rootExtension.clearFeatures();\n        }\n\n        getTextArea().getCommandManager().removeCommandListener(this);\n\n        super.destroy();\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Called when the HTML form hosting the rich text area is submitted.\n     */\n    protected void onSubmit()\n    {\n        // Submit the content of the rich text area only if it is enabled.\n        if (getTextArea().getCommandManager().isExecuted(ENABLE)) {\n            getTextArea().getCommandManager().execute(SUBMIT);\n        }\n    }","id":58450,"modified_method":"/**\n     * Called when the HTML form hosting the rich text area is submitted.\n     */\n    protected void onSubmit()\n    {\n        // Submit the content of the rich text area only if it is enabled.\n        if (getTextArea().isAttached() && getTextArea().isEnabled()) {\n            getTextArea().getCommandManager().execute(SUBMIT);\n            // Cache submitted value.\n            cache.put(CACHE_KEY_CONTENT, getTextArea().getCommandManager().getStringValue(SUBMIT));\n        }\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(Wysiwyg, RichTextArea, Config)\n     */\n    public void init(Wysiwyg wysiwyg, RichTextArea textArea, Config config)\n    {\n        super.init(wysiwyg, textArea, config);\n\n        String hookId = getConfig().getParameter(\"hookId\");\n        getTextArea().getCommandManager().registerCommand(SUBMIT, new SubmitExecutable(hookId));\n        getTextArea().getCommandManager().registerCommand(ENABLE, new EnableExecutable());\n        getTextArea().getCommandManager().registerCommand(new Command(\"reset\"), new ResetExecutable());\n\n        if (getTextArea().getCommandManager().isSupported(SUBMIT)) {\n            Element hook = (Element) Document.get().getElementById(hookId);\n            // See if the hook is inside an HTML form.\n            form = (Element) DOMUtils.getInstance().getFirstAncestor(hook, \"form\");\n            // We don't use hook.hasAttribute because the name attribute appears as unspecified in IE if it has been set\n            // from JavaScript.\n            if (form != null && !StringUtils.isEmpty(hook.getAttribute(NAME_ATTRIBUTE))) {\n                // Put additional hidden data on the HTML form.\n                hiddenConfig = new HiddenConfig();\n                // All the parameters of this hidden configuration will be prefixed with the name of the hook.\n                hiddenConfig.setNameSpace(hook.getAttribute(NAME_ATTRIBUTE));\n                // This flag tells the server that the editor output requires HTML conversion.\n                hiddenConfig.addFlag(REQUIRES_HTML_CONVERSION);\n                // The storage syntax for this rich text area.\n                hiddenConfig.setParameter(SYNTAX, config.getParameter(SYNTAX, DEFAULT_SYNTAX));\n\n                rootExtension.addFeature(SUBMIT.toString(), hiddenConfig);\n                getUIExtensionList().add(rootExtension);\n\n                // Listen to submit event.\n                hookSubmitEvent(form);\n            }\n\n            saveRegistration(getTextArea().addBlurHandler(this));\n            getTextArea().getCommandManager().addCommandListener(this);\n        }\n    }","id":58451,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(Wysiwyg, RichTextArea, Config)\n     */\n    public void init(Wysiwyg wysiwyg, RichTextArea textArea, Config config)\n    {\n        super.init(wysiwyg, textArea, config);\n\n        String hookId = getConfig().getParameter(\"hookId\");\n        getTextArea().getCommandManager().registerCommand(SUBMIT, new SubmitExecutable(hookId));\n        getTextArea().getCommandManager().registerCommand(ENABLE, new EnableExecutable());\n        getTextArea().getCommandManager().registerCommand(RESET, new ResetExecutable());\n\n        if (getTextArea().getCommandManager().isSupported(SUBMIT)) {\n            Element hook = (Element) Document.get().getElementById(hookId);\n            // See if the hook is inside an HTML form.\n            form = (Element) DOMUtils.getInstance().getFirstAncestor(hook, \"form\");\n            // We don't use hook.hasAttribute because the name attribute appears as unspecified in IE if it has been set\n            // from JavaScript.\n            if (form != null && !StringUtils.isEmpty(hook.getAttribute(NAME_ATTRIBUTE))) {\n                // Put additional hidden data on the HTML form.\n                hiddenConfig = new HiddenConfig();\n                // All the parameters of this hidden configuration will be prefixed with the name of the hook.\n                hiddenConfig.setNameSpace(hook.getAttribute(NAME_ATTRIBUTE));\n                // This flag tells the server that the editor output requires HTML conversion.\n                hiddenConfig.addFlag(REQUIRES_HTML_CONVERSION);\n                // The storage syntax for this rich text area.\n                hiddenConfig.setParameter(SYNTAX, config.getParameter(SYNTAX, DEFAULT_SYNTAX));\n\n                rootExtension.addFeature(SUBMIT.toString(), hiddenConfig);\n                getUIExtensionList().add(rootExtension);\n\n                // Listen to submit event.\n                hookSubmitEvent(form);\n            }\n\n            cache = new Cache((Element) Document.get().getElementById(getConfig().getParameter(\"cacheId\", \"\")));\n            String content = cache.get(CACHE_KEY_CONTENT);\n            if (content != null) {\n                getTextArea().getCommandManager().execute(RESET, content);\n            }\n\n            saveRegistration(getTextArea().addBlurHandler(this));\n            saveRegistration(Window.addWindowClosingHandler(this));\n            getTextArea().getCommandManager().addCommandListener(this);\n        }\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get the plain text editor.\n     * \n     * @return The plain text editor, null if it does not exist.\n     */\n    public PlainTextEditor getPlainTextEditor()\n    {\n        return plainTextEditor;\n    }","id":58452,"modified_method":"/**\n     * Get the plain text editor.\n     * \n     * @return The plain text editor, null if it does not exist.\n     */\n    public PlainTextEditor getPlainTextEditor()\n    {\n        return isTabbed() ? (PlainTextEditor) ((TabPanel) ui).getWidget(WIKI_TAB_INDEX) : null;\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Get the rich text editor. Creates it if it does not exist.\n     * \n     * @return The rich text editor.\n     */\n    public RichTextEditor getRichTextEditor()\n    {\n        if (richTextEditor == null) {\n            richTextEditor = new RichTextEditor();\n            richTextEditor.addLoadHandler(this);\n            richTextEditor.getTextArea().addMouseUpHandler(this);\n            richTextEditor.getTextArea().addKeyUpHandler(this);\n            richTextEditor.getTextArea().getCommandManager().addCommandListener(this);\n            IFrameElement.as(richTextEditor.getTextArea().getElement()).setSrc(\n                config.getParameter(\"inputURL\", \"about:blank\"));\n            richTextEditor.getTextArea().setHeight(height);\n\n            richTextEditorWrapper.add(richTextEditor);\n\n            sv = svm.getSyntaxValidator(getConfig().getParameter(\"syntax\", DEFAULT_SYNTAX));\n\n            pm = new DefaultPluginManager(wysiwyg, richTextEditor.getTextArea(), config);\n            pm.setPluginFactoryManager(pfm);\n        }\n        return richTextEditor;\n    }","id":58453,"modified_method":"/**\n     * Get the rich text editor. Creates it if it does not exist.\n     * \n     * @return The rich text editor.\n     */\n    public RichTextEditor getRichTextEditor()\n    {\n        if (richTextEditor == null) {\n            richTextEditor = new RichTextEditor();\n            registrations.add(richTextEditor.addLoadHandler(this));\n            registrations.add(richTextEditor.getTextArea().addMouseUpHandler(this));\n            registrations.add(richTextEditor.getTextArea().addKeyUpHandler(this));\n            richTextEditor.getTextArea().getCommandManager().addCommandListener(this);\n            IFrameElement.as(richTextEditor.getTextArea().getElement()).setSrc(\n                config.getParameter(\"inputURL\", \"about:blank\"));\n            richTextEditor.getTextArea().setHeight(Math.max(getHook().getOffsetHeight(), 100) + \"px\");\n\n            sv = svm.getSyntaxValidator(getConfig().getParameter(\"syntax\", DEFAULT_SYNTAX));\n\n            pm = new DefaultPluginManager(wysiwyg, richTextEditor.getTextArea(), config);\n            pm.setPluginFactoryManager(pfm);\n        }\n        return richTextEditor;\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Build the editor tab panel. This panel contains two tabs, one for the WYSIWYG editor and one for the wiki editor.\n     * \n     * @param defaultIsWysiwyg True if the WYSIWYG editor must be displayed by default.\n     * @return The newly created tab panel.\n     */\n    public TabPanel createTabPanel(boolean defaultIsWysiwyg)\n    {\n        TabPanel tabs = new TabPanel();\n\n        tabs.add(richTextEditorWrapper, Strings.INSTANCE.wysiwyg());\n        tabs.add(plainTextEditor, Strings.INSTANCE.source());\n        tabs.setStyleName(\"xRichTextEditorTabPanel\");\n\n        if (defaultIsWysiwyg) {\n            tabs.selectTab(WYSIWYG_TAB_INDEX);\n        } else {\n            tabs.selectTab(WIKI_TAB_INDEX);\n        }\n\n        tabs.addBeforeSelectionHandler(listener);\n        tabs.addSelectionHandler(listener);\n\n        return tabs;\n    }","id":58454,"modified_method":"/**\n     * Build the editor tab panel. This panel contains two tabs, one for the WYSIWYG editor and one for the source\n     * editor.\n     * \n     * @return the newly created tab panel\n     */\n    public TabPanel createTabPanel()\n    {\n        final Cache cache = new Cache((Element) DOM.getElementById(config.getParameter(\"cacheId\", \"\")).cast());\n        PlainTextEditor plainTextEditor = new PlainTextEditor(getHook(), cache);\n\n        TabPanel tabs = new TabPanel();\n        tabs.add(getRichTextEditor(), Strings.INSTANCE.wysiwyg());\n        tabs.add(plainTextEditor, Strings.INSTANCE.source());\n        tabs.setStyleName(\"xRichTextEditorTabPanel\");\n        tabs.setAnimationEnabled(false);\n\n        final String wysiwygTabName = \"wysiwyg\";\n        final String cacheKeyActiveTextArea = \"editor.activeTextArea\";\n        if (wysiwygTabName.equals(cache.get(cacheKeyActiveTextArea, config.getParameter(\"defaultEditor\")))) {\n            plainTextEditor.getTextArea().setEnabled(false);\n            tabs.selectTab(WYSIWYG_TAB_INDEX);\n        } else {\n            getRichTextEditor().getTextArea().setEnabled(false);\n            tabs.selectTab(WIKI_TAB_INDEX);\n        }\n\n        registrations.add(tabs.addBeforeSelectionHandler(listener));\n        registrations.add(tabs.addSelectionHandler(new SelectionHandler<Integer>()\n        {\n            public void onSelection(SelectionEvent<Integer> event)\n            {\n                // Cache the active text area.\n                cache.put(cacheKeyActiveTextArea, event.getSelectedItem() == WYSIWYG_TAB_INDEX ? wysiwygTabName\n                    : \"source\");\n            }\n        }));\n        registrations.add(tabs.addSelectionHandler(listener));\n\n        return tabs;\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Puts the editor in loading state or get it out of it.\n     * \n     * @param loading {@code true} to put the editor in loading state, {@code false} to get it out of it\n     */\n    protected void setLoading(boolean loading)\n    {\n        if (isTabbed) {\n            getRichTextEditor().setLoading(loading);\n            getPlainTextEditor().setLoading(loading);\n        } else {\n            getRichTextEditor().setLoading(loading);\n        }\n    }","id":58455,"modified_method":"/**\n     * Puts the editor in loading state or get it out of it.\n     * \n     * @param loading {@code true} to put the editor in loading state, {@code false} to get it out of it\n     */\n    protected void setLoading(boolean loading)\n    {\n        if (isTabbed()) {\n            getRichTextEditor().setLoading(loading);\n            getPlainTextEditor().setLoading(loading);\n        } else {\n            getRichTextEditor().setLoading(loading);\n        }\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see LoadHandler#onLoad(LoadEvent)\n     */\n    public void onLoad(LoadEvent event)\n    {\n        if (event.getSource() == richTextEditor) {\n            initRichTextArea();\n            loadPlugins();\n            initEditor();\n            fillMenu();\n            fillToolBar();\n            richTextEditor.getTextArea().getCommandManager().execute(SUBMIT);\n        }\n    }","id":58456,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see LoadHandler#onLoad(LoadEvent)\n     */\n    public void onLoad(LoadEvent event)\n    {\n        if (event.getSource() == richTextEditor) {\n            loadPlugins();\n            initEditor();\n            fillMenu();\n            fillToolBar();\n            richTextEditor.getTextArea().getCommandManager().execute(SUBMIT);\n            richTextEditor.setLoading(false);\n            // Focus the rich text area, if it's enabled, to be sure it has reached design mode.\n            if (richTextEditor.getTextArea().isEnabled()) {\n                richTextEditor.getTextArea().setFocus(true);\n            }\n        }\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see Updatable#canUpdate()\n     */\n    public boolean canUpdate()\n    {\n        return getUI().isAttached();\n    }","id":58457,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see Updatable#canUpdate()\n     */\n    public boolean canUpdate()\n    {\n        // NOTE: Currently only the rich text area triggers updates.\n        return getRichTextEditor().getTextArea().isAttached() && getRichTextEditor().getTextArea().isEnabled();\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Creates a new WYSIWYG editor.\n     * \n     * @param wysiwyg The application context.\n     * @param config The configuration object.\n     * @param svm The syntax validation manager used for enabling or disabling plugin features.\n     * @param pfm The plugin factory manager used to instantiate plugins.\n     */\n    public WysiwygEditor(Wysiwyg wysiwyg, Config config, SyntaxValidatorManager svm, PluginFactoryManager pfm)\n    {\n        this.wysiwyg = wysiwyg;\n        this.config = config;\n        this.svm = svm;\n        this.pfm = pfm;\n\n        TextAreaElement originalTextArea = TextAreaElement.as(DOM.getElementById(config.getParameter(\"hookId\")));\n        height = Math.max(originalTextArea.getOffsetHeight(), 100) + \"px\";\n\n        ui = new FlowPanel();\n        richTextEditorWrapper = new FlowPanel();\n\n        if (Boolean.TRUE.toString().equals(config.getParameter(\"displayTabs\"))) {\n            isTabbed = true;\n            plainTextEditor = new PlainTextEditor(originalTextArea);\n            if (\"wysiwyg\".equals(config.getParameter(\"defaultEditor\"))) {\n                ui.add(createTabPanel(true));\n                // Call the getter to be sure the RichTextEditor is created.\n                getRichTextEditor();\n            } else {\n                ui.add(createTabPanel(false));\n                plainTextEditor.setFocus(true);\n            }\n        } else {\n            isTabbed = false;\n            plainTextEditor = null;\n            originalTextArea.getStyle().setProperty(\"display\", \"none\");\n            // Call the getter to be sure the RichTextEditor is created.\n            getRichTextEditor();\n            ui.add(richTextEditorWrapper);\n        }\n    }","id":58458,"modified_method":"/**\n     * Creates a new WYSIWYG editor.\n     * \n     * @param wysiwyg The application context.\n     * @param config The configuration object.\n     * @param svm The syntax validation manager used for enabling or disabling plugin features.\n     * @param pfm The plugin factory manager used to instantiate plugins.\n     */\n    public WysiwygEditor(Wysiwyg wysiwyg, Config config, SyntaxValidatorManager svm, PluginFactoryManager pfm)\n    {\n        this.wysiwyg = wysiwyg;\n        this.config = config;\n        this.svm = svm;\n        this.pfm = pfm;\n\n        if (isTabbed()) {\n            ui = createTabPanel();\n        } else {\n            ui = getRichTextEditor();\n        }\n\n        // Hide the hook.\n        getHook().getStyle().setProperty(\"display\", \"none\");\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * In a Model-View-Controller architecture the UI represents the View component, while this class represents the\n     * Controller. The model could be considered the DOM document edited.\n     * \n     * @return The editor User Interface main panel.\n     */\n    public FlowPanel getUI()\n    {\n        return ui;\n    }","id":58459,"modified_method":"/**\n     * In a Model-View-Controller architecture the UI represents the View component, while this class represents the\n     * Controller. The model could be considered the DOM document edited.\n     * \n     * @return The editor User Interface main panel.\n     */\n    public Widget getUI()\n    {\n        return ui;\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Creates a new {@link WysiwygEditor} based on the given configuration object.\n     * \n     * @param jsConfig the {@link JavaScriptObject} used to configure the newly created editor\n     */\n    public WysiwygEditorApi(JavaScriptObject jsConfig)\n    {\n        if (!isRichTextEditingSupported()) {\n            return;\n        }\n\n        Config config = new DefaultConfig(jsConfig);\n\n        // Get the element that will be replaced by the WYSIWYG editor.\n        Element hook = DOM.getElementById(config.getParameter(HOOK_ID));\n        if (hook == null) {\n            return;\n        }\n\n        // Prepare the DOM by creating a container for the editor.\n        Element container = DOM.createDiv();\n        String containerId = hook.getId() + \"_container\" + Math.round(Math.random() * 1000);\n        container.setId(containerId);\n        hook.getParentElement().insertBefore(container, hook);\n\n        editor = WysiwygEditorFactory.getInstance().newEditor(config, Wysiwyg.getInstance());\n\n        // Attach the editor to the browser's document.\n        if (Boolean.TRUE.toString().equals(editor.getConfig().getParameter(\"debug\", \"false\"))) {\n            RootPanel.get(containerId).add(new WysiwygEditorDebugger(editor));\n        } else {\n            RootPanel.get(containerId).add(editor.getUI());\n        }\n    }","id":58460,"modified_method":"/**\n     * Creates a new {@link WysiwygEditor} based on the given configuration object.\n     * \n     * @param jsConfig the {@link JavaScriptObject} used to configure the newly created editor\n     */\n    public WysiwygEditorApi(JavaScriptObject jsConfig)\n    {\n        if (!isRichTextEditingSupported()) {\n            return;\n        }\n\n        Config config = new DefaultConfig(jsConfig);\n\n        // Get the element that will be replaced by the WYSIWYG editor.\n        Element hook = DOM.getElementById(config.getParameter(HOOK_ID));\n        if (hook == null) {\n            return;\n        }\n\n        // Prepare the DOM by creating a container for the editor.\n        final Element container = DOM.createDiv();\n        String containerId = hook.getId() + \"_container\" + Math.round(Math.random() * 1000);\n        container.setId(containerId);\n        hook.getParentElement().insertBefore(container, hook);\n\n        editor = WysiwygEditorFactory.getInstance().newEditor(config, Wysiwyg.getInstance());\n\n        // Attach the editor to the browser's document.\n        if (Boolean.TRUE.toString().equals(editor.getConfig().getParameter(\"debug\", \"false\"))) {\n            RootPanel.get(containerId).add(new WysiwygEditorDebugger(editor));\n        } else {\n            RootPanel.get(containerId).add(editor.getUI());\n        }\n\n        // Cleanup when the window is closed. This way the HTML form elements generated on the server preserve their\n        // index and thus can be cached by the browser.\n        Window.addCloseHandler(new CloseHandler<Window>()\n        {\n            public void onClose(CloseEvent<Window> event)\n            {\n                if (editor != null) {\n                    editor.destroy();\n                }\n                if (container.getParentNode() != null) {\n                    container.getParentNode().removeChild(container);\n                }\n            }\n        });\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n         * {@inheritDoc}\n         */\n        public void onSuccess(String result)\n        {\n            editor.setLoading(false);\n            // Disable the rich text area to avoid submitting its content.\n            editor.getRichTextEditor().getTextArea().getCommandManager().execute(WysiwygEditorListener.ENABLE, false);\n            editor.getPlainTextEditor().getTextArea().setText(result);\n        }","id":58461,"modified_method":"/**\n         * {@inheritDoc}\n         */\n        public void onSuccess(String result)\n        {\n            editor.setLoading(false);\n            // Disable the rich text area to avoid submitting its content.\n            editor.getRichTextEditor().getTextArea().getCommandManager().execute(WysiwygEditorListener.ENABLE, false);\n            // Enable the plain text area.\n            editor.getPlainTextEditor().getTextArea().setEnabled(true);\n            editor.getPlainTextEditor().getTextArea().setText(result);\n            editor.getPlainTextEditor().getTextArea().setFocus(true);\n        }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see SelectionHandler#onSelection(SelectionEvent)\n     */\n    public void onSelection(SelectionEvent<Integer> event)\n    {\n        editor.setLoading(true);\n        WysiwygServiceAsync wysiwygService = WysiwygService.Singleton.getInstance();\n        // We test if the RTE textarea is disabled to be sure that the editor is not already being switched.\n        if (event.getSelectedItem() == WysiwygEditor.WYSIWYG_TAB_INDEX\n            && !editor.getRichTextEditor().getTextArea().isEnabled()) {\n            wysiwygService.toHTML(editor.getPlainTextEditor().getTextArea().getText(), editor.getConfig().getParameter(\n                SYNTAX_CONFIG_PARAMETER, WysiwygEditor.DEFAULT_SYNTAX), new SwitchToWysiwygCallback(editor));\n        } else {\n            // We test if the RTE textarea is enabled to be sure that the editor is not already being switched.\n            if (event.getSelectedItem() == WysiwygEditor.WIKI_TAB_INDEX\n                && editor.getRichTextEditor().getTextArea().isEnabled()) {\n                // At this point we should have the HTML, adjusted by plug-ins, in the hidden plain text area.\n                // Make the request to convert the HTML to Wiki syntax.\n                wysiwygService.fromHTML(editor.getPlainTextEditor().getTextArea().getText(),\n                    editor.getConfig().getParameter(SYNTAX_CONFIG_PARAMETER, WysiwygEditor.DEFAULT_SYNTAX),\n                    new SwitchToWikiCallback(editor));\n            }\n        }\n    }","id":58462,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see SelectionHandler#onSelection(SelectionEvent)\n     */\n    public void onSelection(SelectionEvent<Integer> event)\n    {\n        editor.setLoading(true);\n        WysiwygServiceAsync wysiwygService = WysiwygService.Singleton.getInstance();\n        // We test if the rich text area is disabled to be sure that the editor is not already being switched.\n        if (event.getSelectedItem() == WysiwygEditor.WYSIWYG_TAB_INDEX\n            && !editor.getRichTextEditor().getTextArea().isEnabled()) {\n            wysiwygService.toHTML(editor.getPlainTextEditor().getTextArea().getText(), editor.getConfig().getParameter(\n                SYNTAX_CONFIG_PARAMETER, WysiwygEditor.DEFAULT_SYNTAX), new SwitchToWysiwygCallback(editor));\n        } else {\n            // We test if the rich text area is enabled to be sure that the editor is not already being switched.\n            if (event.getSelectedItem() == WysiwygEditor.WIKI_TAB_INDEX\n                && editor.getRichTextEditor().getTextArea().isEnabled()) {\n                // At this point we should have the HTML, adjusted by plug-ins, submitted.\n                // See #onBeforeSelection(BeforeSelectionEvent)\n                // Make the request to convert the HTML to source syntax.\n                wysiwygService.fromHTML(editor.getRichTextEditor().getTextArea().getCommandManager().getStringValue(\n                    SUBMIT), editor.getConfig().getParameter(SYNTAX_CONFIG_PARAMETER, WysiwygEditor.DEFAULT_SYNTAX),\n                    new SwitchToWikiCallback(editor));\n            }\n        }\n    }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n         * {@inheritDoc}\n         */\n        public void onSuccess(String result)\n        {\n            editor.setLoading(false);\n            // Enable the rich text area in order to be able to submit its content.\n            editor.getRichTextEditor().getTextArea().getCommandManager().execute(ENABLE, true);\n            // Reset the content of the rich text area.\n            editor.getRichTextEditor().getTextArea().getCommandManager().execute(new Command(\"reset\"), result);\n            // Store the initial value of the rich text area in case it is submitted without gaining focus.\n            editor.getRichTextEditor().getTextArea().getCommandManager().execute(SUBMIT, true);\n        }","id":58463,"modified_method":"/**\n         * {@inheritDoc}\n         */\n        public void onSuccess(String result)\n        {\n            editor.setLoading(false);\n            // Disable the plain text area.\n            editor.getPlainTextEditor().getTextArea().setEnabled(false);\n            // Enable the rich text area in order to be able to submit its content.\n            editor.getRichTextEditor().getTextArea().getCommandManager().execute(ENABLE, true);\n            // Focus the rich text area.\n            editor.getRichTextEditor().getTextArea().setFocus(true);\n            // Reset the content of the rich text area.\n            editor.getRichTextEditor().getTextArea().getCommandManager().execute(new Command(\"reset\"), result);\n            // Store the initial value of the rich text area in case it is submitted without gaining focus.\n            editor.getRichTextEditor().getTextArea().getCommandManager().execute(SUBMIT, true);\n        }","commit_id":"d4810b67ff748d1a5f77e6d936e2be412a297e0c","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n   protected void onLoad()\n   {\n      super.onLoad();\n\n      tabPanel_.addBeforeSelectionHandler(new BeforeSelectionHandler<Integer>(){\n         public void onBeforeSelection(BeforeSelectionEvent<Integer> event)\n         {\n            if (clearing_)\n               return;\n\n            WorkbenchTab tab = tabs_.get(event.getItem().intValue());\n            tab.onBeforeSelected();\n         }\n      });\n      tabPanel_.addSelectionHandler(new SelectionHandler<Integer>() {\n         public void onSelection(SelectionEvent<Integer> event)\n         {\n            if (clearing_)\n               return;\n\n            WorkbenchTab pane = tabs_.get(event.getSelectedItem().intValue());\n            pane.onSelected();\n         }\n      });\n\n      int selectedIndex = tabPanel_.getSelectedIndex();\n      if (selectedIndex >= 0)\n      {\n         WorkbenchTab tab = tabs_.get(selectedIndex);\n         tab.onBeforeSelected();\n         tab.onSelected();\n      }\n   }","id":58464,"modified_method":"@Override\n   protected void onLoad()\n   {\n      super.onLoad();\n\n      releaseOnUnload_.add(tabPanel_.addBeforeSelectionHandler(new BeforeSelectionHandler<Integer>()\n      {\n         public void onBeforeSelection(BeforeSelectionEvent<Integer> event)\n         {\n            if (clearing_)\n               return;\n\n            WorkbenchTab tab = tabs_.get(event.getItem().intValue());\n            tab.onBeforeSelected();\n         }\n      }));\n      releaseOnUnload_.add(tabPanel_.addSelectionHandler(new SelectionHandler<Integer>()\n      {\n         public void onSelection(SelectionEvent<Integer> event)\n         {\n            if (clearing_)\n               return;\n\n            WorkbenchTab pane = tabs_.get(event.getSelectedItem().intValue());\n            pane.onSelected();\n         }\n      }));\n\n      int selectedIndex = tabPanel_.getSelectedIndex();\n      if (selectedIndex >= 0)\n      {\n         WorkbenchTab tab = tabs_.get(selectedIndex);\n         tab.onBeforeSelected();\n         tab.onSelected();\n      }\n   }","commit_id":"a1e06113fca64b3df5ad3c140103eb98ea4f9c51","url":"https://github.com/rstudio/rstudio"},{"original_method":"@Override\n   protected void onLoad()\n   {\n      super.onLoad();\n\n      tabPanel_.addBeforeSelectionHandler(new BeforeSelectionHandler<Integer>(){\n         public void onBeforeSelection(BeforeSelectionEvent<Integer> event)\n         {\n            if (clearing_)\n               return;\n\n            WorkbenchTab tab = tabs_.get(event.getItem().intValue());\n            tab.onBeforeSelected();\n         }\n      });\n      tabPanel_.addSelectionHandler(new SelectionHandler<Integer>() {\n         public void onSelection(SelectionEvent<Integer> event)\n         {\n            if (clearing_)\n               return;\n\n            WorkbenchTab pane = tabs_.get(event.getSelectedItem().intValue());\n            pane.onSelected();\n         }\n      });\n\n      int selectedIndex = tabPanel_.getSelectedIndex();\n      if (selectedIndex >= 0)\n      {\n         WorkbenchTab tab = tabs_.get(selectedIndex);\n         tab.onBeforeSelected();\n         tab.onSelected();\n      }\n   }","id":58465,"modified_method":"@Override\n   protected void onLoad()\n   {\n      super.onLoad();\n\n      releaseOnUnload_.add(tabPanel_.addBeforeSelectionHandler(new BeforeSelectionHandler<Integer>()\n      {\n         public void onBeforeSelection(BeforeSelectionEvent<Integer> event)\n         {\n            if (clearing_)\n               return;\n\n            WorkbenchTab tab = tabs_.get(event.getItem().intValue());\n            tab.onBeforeSelected();\n         }\n      }));\n      releaseOnUnload_.add(tabPanel_.addSelectionHandler(new SelectionHandler<Integer>()\n      {\n         public void onSelection(SelectionEvent<Integer> event)\n         {\n            if (clearing_)\n               return;\n\n            WorkbenchTab pane = tabs_.get(event.getSelectedItem().intValue());\n            pane.onSelected();\n         }\n      }));\n\n      int selectedIndex = tabPanel_.getSelectedIndex();\n      if (selectedIndex >= 0)\n      {\n         WorkbenchTab tab = tabs_.get(selectedIndex);\n         tab.onBeforeSelected();\n         tab.onSelected();\n      }\n   }","commit_id":"a1bc77fdb31abcde29ccfc756e2c83bba27e77ed","url":"https://github.com/rstudio/rstudio"},{"original_method":"@Test\n  public void testBalancerBandwidth() throws Exception {\n    /* Set bandwidthPerSec to a low value of 1M bps. */\n    conf.setLong(\n        DFSConfigKeys.DFS_DATANODE_BALANCE_BANDWIDTHPERSEC_KEY,\n        DEFAULT_BANDWIDTH);\n\n    /* Create and start cluster */\n    MiniDFSCluster cluster = \n      new MiniDFSCluster.Builder(conf).numDataNodes(NUM_OF_DATANODES).build();\n    try {\n      cluster.waitActive();\n\n      DistributedFileSystem fs = cluster.getFileSystem();\n\n      ArrayList<DataNode> datanodes = cluster.getDataNodes();\n      // Ensure value from the configuration is reflected in the datanodes.\n      assertEquals(DEFAULT_BANDWIDTH, (long) datanodes.get(0).getBalancerBandwidth());\n      assertEquals(DEFAULT_BANDWIDTH, (long) datanodes.get(1).getBalancerBandwidth());\n      ClientDatanodeProtocol dn1Proxy = DFSUtilClient\n          .createClientDatanodeProtocolProxy(datanodes.get(0).getDatanodeId(),\n              conf, 60000, false);\n      ClientDatanodeProtocol dn2Proxy = DFSUtilClient\n          .createClientDatanodeProtocolProxy(datanodes.get(1).getDatanodeId(),\n              conf, 60000, false);\n      DFSAdmin admin = new DFSAdmin(conf);\n      String dn1Address = datanodes.get(0).ipcServer.getListenerAddress()\n          .getHostName() + \":\" + datanodes.get(0).getIpcPort();\n      String dn2Address = datanodes.get(1).ipcServer.getListenerAddress()\n          .getHostName() + \":\" + datanodes.get(1).getIpcPort();\n\n      // verifies the dfsadmin command execution\n      String[] args = new String[] { \"-getBalancerBandwidth\", dn1Address };\n      runGetBalancerBandwidthCmd(admin, args, dn1Proxy, DEFAULT_BANDWIDTH);\n      args = new String[] { \"-getBalancerBandwidth\", dn2Address };\n      runGetBalancerBandwidthCmd(admin, args, dn2Proxy, DEFAULT_BANDWIDTH);\n\n      // Dynamically change balancer bandwidth and ensure the updated value\n      // is reflected on the datanodes.\n      long newBandwidth = 12 * DEFAULT_BANDWIDTH; // 12M bps\n      fs.setBalancerBandwidth(newBandwidth);\n\n      // Give it a few seconds to propogate new the value to the datanodes.\n      try {\n        Thread.sleep(5000);\n      } catch (Exception e) {}\n\n      assertEquals(newBandwidth, (long) datanodes.get(0).getBalancerBandwidth());\n      assertEquals(newBandwidth, (long) datanodes.get(1).getBalancerBandwidth());\n      // verifies the dfsadmin command execution\n      args = new String[] { \"-getBalancerBandwidth\", dn1Address };\n      runGetBalancerBandwidthCmd(admin, args, dn1Proxy, newBandwidth);\n      args = new String[] { \"-getBalancerBandwidth\", dn2Address };\n      runGetBalancerBandwidthCmd(admin, args, dn2Proxy, newBandwidth);\n\n      // Dynamically change balancer bandwidth to 0. Balancer bandwidth on the\n      // datanodes should remain as it was.\n      fs.setBalancerBandwidth(0);\n\n      // Give it a few seconds to propogate new the value to the datanodes.\n      try {\n        Thread.sleep(5000);\n      } catch (Exception e) {}\n\n      assertEquals(newBandwidth, (long) datanodes.get(0).getBalancerBandwidth());\n      assertEquals(newBandwidth, (long) datanodes.get(1).getBalancerBandwidth());\n      // verifies the dfsadmin command execution\n      args = new String[] { \"-getBalancerBandwidth\", dn1Address };\n      runGetBalancerBandwidthCmd(admin, args, dn1Proxy, newBandwidth);\n      args = new String[] { \"-getBalancerBandwidth\", dn2Address };\n      runGetBalancerBandwidthCmd(admin, args, dn2Proxy, newBandwidth);\n    } finally {\n      cluster.shutdown();\n    }\n  }","id":58466,"modified_method":"@Test\n  public void testBalancerBandwidth() throws Exception {\n    /* Set bandwidthPerSec to a low value of 1M bps. */\n    conf.setLong(\n        DFSConfigKeys.DFS_DATANODE_BALANCE_BANDWIDTHPERSEC_KEY,\n        DEFAULT_BANDWIDTH);\n\n    /* Create and start cluster */\n    try (MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf)\n        .numDataNodes(NUM_OF_DATANODES).build()) {\n      cluster.waitActive();\n\n      DistributedFileSystem fs = cluster.getFileSystem();\n\n      ArrayList<DataNode> datanodes = cluster.getDataNodes();\n      // Ensure value from the configuration is reflected in the datanodes.\n      assertEquals(DEFAULT_BANDWIDTH, (long) datanodes.get(0).getBalancerBandwidth());\n      assertEquals(DEFAULT_BANDWIDTH, (long) datanodes.get(1).getBalancerBandwidth());\n      DFSAdmin admin = new DFSAdmin(conf);\n      String dn1Address = datanodes.get(0).ipcServer.getListenerAddress()\n          .getHostName() + \":\" + datanodes.get(0).getIpcPort();\n      String dn2Address = datanodes.get(1).ipcServer.getListenerAddress()\n          .getHostName() + \":\" + datanodes.get(1).getIpcPort();\n\n      // verifies the dfsadmin command execution\n      String[] args = new String[] { \"-getBalancerBandwidth\", dn1Address };\n      runGetBalancerBandwidthCmd(admin, args, DEFAULT_BANDWIDTH);\n      args = new String[] { \"-getBalancerBandwidth\", dn2Address };\n      runGetBalancerBandwidthCmd(admin, args, DEFAULT_BANDWIDTH);\n\n      // Dynamically change balancer bandwidth and ensure the updated value\n      // is reflected on the datanodes.\n      long newBandwidth = 12 * DEFAULT_BANDWIDTH; // 12M bps\n      fs.setBalancerBandwidth(newBandwidth);\n      verifyBalancerBandwidth(datanodes, newBandwidth);\n\n      // verifies the dfsadmin command execution\n      args = new String[] { \"-getBalancerBandwidth\", dn1Address };\n      runGetBalancerBandwidthCmd(admin, args, newBandwidth);\n      args = new String[] { \"-getBalancerBandwidth\", dn2Address };\n      runGetBalancerBandwidthCmd(admin, args, newBandwidth);\n\n      // Dynamically change balancer bandwidth to 0. Balancer bandwidth on the\n      // datanodes should remain as it was.\n      fs.setBalancerBandwidth(0);\n\n      verifyBalancerBandwidth(datanodes, newBandwidth);\n\n      // verifies the dfsadmin command execution\n      args = new String[] { \"-getBalancerBandwidth\", dn1Address };\n      runGetBalancerBandwidthCmd(admin, args, newBandwidth);\n      args = new String[] { \"-getBalancerBandwidth\", dn2Address };\n      runGetBalancerBandwidthCmd(admin, args, newBandwidth);\n    }\n  }","commit_id":"b963818621c200160bb37624f177bdcb059de4eb","url":"https://github.com/apache/hadoop"},{"original_method":"private void runGetBalancerBandwidthCmd(DFSAdmin admin, String[] args,\n      ClientDatanodeProtocol proxy, long expectedBandwidth) throws Exception {\n    PrintStream initialStdOut = System.out;\n    outContent.reset();\n    try {\n      System.setOut(outStream);\n      int exitCode = admin.run(args);\n      assertEquals(\"DFSAdmin should return 0\", 0, exitCode);\n      String bandwidthOutMsg = \"Balancer bandwidth is \" + expectedBandwidth\n          + \" bytes per second.\";\n      String strOut = new String(outContent.toByteArray(), UTF8);\n      assertTrue(\"Wrong balancer bandwidth!\", strOut.contains(bandwidthOutMsg));\n    } finally {\n      System.setOut(initialStdOut);\n    }\n  }","id":58467,"modified_method":"private void runGetBalancerBandwidthCmd(DFSAdmin admin, String[] args,\n      long expectedBandwidth) throws Exception {\n    PrintStream initialStdOut = System.out;\n    outContent.reset();\n    try {\n      System.setOut(outStream);\n      int exitCode = admin.run(args);\n      assertEquals(\"DFSAdmin should return 0\", 0, exitCode);\n      String bandwidthOutMsg = \"Balancer bandwidth is \" + expectedBandwidth\n          + \" bytes per second.\";\n      String strOut = new String(outContent.toByteArray(), UTF8);\n      assertTrue(\"Wrong balancer bandwidth!\", strOut.contains(bandwidthOutMsg));\n    } finally {\n      System.setOut(initialStdOut);\n    }\n  }","commit_id":"b963818621c200160bb37624f177bdcb059de4eb","url":"https://github.com/apache/hadoop"},{"original_method":"public void initialize()\n    {\n        // TODO: configure this from bootstrap or scan lib\n        Set artifacts = new HashSet();\n        artifacts.add( \"classworlds\" );\n        artifacts.add( \"commons-cli\" );\n        artifacts.add( \"commons-validator\" );\n        artifacts.add( \"jline\" );\n        artifacts.add( \"jsch\" );\n        artifacts.add( \"maven-artifact\" );\n        artifacts.add( \"maven-artifact-manager\" );\n        artifacts.add( \"maven-core\" );\n        artifacts.add( \"maven-model\" );\n        artifacts.add( \"maven-monitor\" );\n        artifacts.add( \"maven-plugin-api\" );\n        artifacts.add( \"maven-plugin-descriptor\" );\n        artifacts.add( \"maven-project\" );\n        artifacts.add( \"maven-settings\" );\n        artifacts.add( \"plexus-container-default\" );\n        artifacts.add( \"plexus-input-handler\" );\n        artifacts.add( \"plexus-utils\" );\n        artifacts.add( \"wagon-provider-api\" );\n        artifacts.add( \"wagon-file\" );\n        artifacts.add( \"wagon-http-lightweight\" );\n        artifacts.add( \"wagon-ssh\" );\n        // TODO: remove doxia\n        artifacts.add( \"doxia-core\" );\n        artifacts.add( \"maven-reporting-api\" );\n        artifacts.add( \"oro\" );\n        artifactFilter = new ExclusionSetFilter( artifacts );\n    }","id":58468,"modified_method":"public void initialize()\n    {\n        // TODO: configure this from bootstrap or scan lib\n        Set artifacts = new HashSet();\n        artifacts.add( \"classworlds\" );\n        artifacts.add( \"commons-cli\" );\n        artifacts.add( \"commons-validator\" );\n        artifacts.add( \"jline\" );\n        artifacts.add( \"jsch\" );\n        artifacts.add( \"maven-artifact\" );\n        artifacts.add( \"maven-artifact-manager\" );\n        artifacts.add( \"maven-core\" );\n        artifacts.add( \"maven-model\" );\n        artifacts.add( \"maven-monitor\" );\n        artifacts.add( \"maven-plugin-api\" );\n        artifacts.add( \"maven-plugin-descriptor\" );\n        artifacts.add( \"maven-plugin-mapping\" );\n        artifacts.add( \"maven-plugin-registry\" );\n        artifacts.add( \"maven-project\" );\n        artifacts.add( \"maven-settings\" );\n        artifacts.add( \"plexus-container-default\" );\n        artifacts.add( \"plexus-input-handler\" );\n        artifacts.add( \"plexus-utils\" );\n        artifacts.add( \"wagon-provider-api\" );\n        artifacts.add( \"wagon-file\" );\n        artifacts.add( \"wagon-http-lightweight\" );\n        artifacts.add( \"wagon-ssh\" );\n        // TODO: remove doxia\n        artifacts.add( \"doxia-core\" );\n        artifacts.add( \"maven-reporting-api\" );\n        artifacts.add( \"oro\" );\n        artifactFilter = new ExclusionSetFilter( artifacts );\n    }","commit_id":"11082da5f4fafc00e6a133efa683b636ff92951e","url":"https://github.com/apache/maven"},{"original_method":"private void ensurePluginContainerIsComplete( PluginDescriptor pluginDescriptor, PlexusContainer pluginContainer,\n                                                  MavenProject project, MavenSession session )\n        throws PluginConfigurationException\n    {\n        // if the plugin's already been used once, don't re-do this step...\n        // otherwise, we have to finish resolving the plugin's classpath and start the container.\n        if ( pluginDescriptor.getArtifacts() != null && pluginDescriptor.getArtifacts().size() == 1 )\n        {\n            Artifact pluginArtifact = (Artifact) pluginDescriptor.getArtifacts().get( 0 );\n\n            try\n            {\n                MavenMetadataSource metadataSource = new MavenMetadataSource( mavenProjectBuilder, artifactFactory );\n\n                List remoteRepositories = new ArrayList();\n\n                remoteRepositories.addAll( project.getRemoteArtifactRepositories() );\n                remoteRepositories.addAll( project.getPluginArtifactRepositories() );\n\n                ArtifactRepository localRepository = session.getLocalRepository();\n\n                ResolutionGroup resolutionGroup = metadataSource.retrieve( pluginArtifact, localRepository,\n                                                                           project.getPluginArtifactRepositories() );\n\n                Set dependencies = resolutionGroup.getArtifacts();\n\n                ArtifactResolutionResult result = artifactResolver.resolveTransitively( dependencies, pluginArtifact,\n                                                                                        localRepository,\n                                                                                        remoteRepositories,\n                                                                                        metadataSource,\n                                                                                        artifactFilter );\n\n                Set resolved = result.getArtifacts();\n\n                for ( Iterator it = resolved.iterator(); it.hasNext(); )\n                {\n                    Artifact artifact = (Artifact) it.next();\n\n                    if ( !artifact.equals( pluginArtifact ) )\n                    {\n                        pluginContainer.addJarResource( artifact.getFile() );\n                    }\n                }\n\n                pluginDescriptor.setClassRealm( pluginContainer.getContainerRealm() );\n\n                // TODO: this is probably overkill as it is rarely used - can we use a mojo tag to signal this will be\n                // used or check its configuration? Also, when it is used, perhaps it is more effecient to resolve\n                // everything at once and apply the exclusion filter when constructing the plugin container above.\n                // Check this out with yourkit\n                ArtifactFilter distroProvidedFilter = new InversionArtifactFilter( artifactFilter );\n\n                ArtifactResolutionResult distroProvidedResult = artifactResolver\n                    .resolveTransitively( dependencies, pluginArtifact, localRepository, remoteRepositories,\n                                          metadataSource, distroProvidedFilter );\n\n                Set distroProvided = distroProvidedResult.getArtifacts();\n\n                List unfilteredArtifactList = new ArrayList( resolved.size() + distroProvided.size() );\n\n                unfilteredArtifactList.addAll( resolved );\n                unfilteredArtifactList.addAll( distroProvided );\n\n                pluginDescriptor.setArtifacts( unfilteredArtifactList );\n            }\n            catch ( ArtifactResolutionException e )\n            {\n                throw new PluginConfigurationException( \"Cannot resolve plugin dependencies\", e );\n            }\n            catch ( PlexusContainerException e )\n            {\n                throw new PluginConfigurationException( \"Cannot start plugin container\", e );\n            }\n            catch ( ArtifactMetadataRetrievalException e )\n            {\n                throw new PluginConfigurationException( \"Cannot resolve plugin dependencies\", e );\n            }\n        }\n    }","id":58469,"modified_method":"private void ensurePluginContainerIsComplete( PluginDescriptor pluginDescriptor, PlexusContainer pluginContainer,\n                                                  MavenProject project, MavenSession session )\n        throws PluginConfigurationException\n    {\n        // if the plugin's already been used once, don't re-do this step...\n        // otherwise, we have to finish resolving the plugin's classpath and start the container.\n        if ( pluginDescriptor.getArtifacts() != null && pluginDescriptor.getArtifacts().size() == 1 )\n        {\n            Artifact pluginArtifact = (Artifact) pluginDescriptor.getArtifacts().get( 0 );\n\n            try\n            {\n                MavenMetadataSource metadataSource = new MavenMetadataSource( mavenProjectBuilder, artifactFactory );\n\n                List remoteRepositories = new ArrayList();\n\n                remoteRepositories.addAll( project.getRemoteArtifactRepositories() );\n                remoteRepositories.addAll( project.getPluginArtifactRepositories() );\n\n                ArtifactRepository localRepository = session.getLocalRepository();\n\n                ResolutionGroup resolutionGroup = metadataSource.retrieve( pluginArtifact, localRepository,\n                                                                           project.getPluginArtifactRepositories() );\n\n                Set dependencies = resolutionGroup.getArtifacts();\n\n                ArtifactResolutionResult result = artifactResolver.resolveTransitively( dependencies, pluginArtifact,\n                                                                                        localRepository,\n                                                                                        remoteRepositories,\n                                                                                        metadataSource,\n                                                                                        artifactFilter );\n\n                Set resolved = result.getArtifacts();\n\n                for ( Iterator it = resolved.iterator(); it.hasNext(); )\n                {\n                    Artifact artifact = (Artifact) it.next();\n\n                    if ( !artifact.equals( pluginArtifact ) )\n                    {\n                        pluginContainer.addJarResource( artifact.getFile() );\n                    }\n                }\n\n                pluginDescriptor.setClassRealm( pluginContainer.getContainerRealm() );\n\n                List unresolved = new ArrayList( dependencies );\n                \n                unresolved.removeAll( resolved );\n                \n                resolveCoreArtifacts( unresolved );\n\n                List allResolved = new ArrayList( resolved.size() + unresolved.size() );\n                \n                allResolved.addAll( resolved );\n                allResolved.addAll( unresolved );\n\n                pluginDescriptor.setArtifacts( allResolved );\n            }\n            catch ( ArtifactResolutionException e )\n            {\n                throw new PluginConfigurationException( \"Cannot resolve plugin dependencies\", e );\n            }\n            catch ( PlexusContainerException e )\n            {\n                throw new PluginConfigurationException( \"Cannot start plugin container\", e );\n            }\n            catch ( ArtifactMetadataRetrievalException e )\n            {\n                throw new PluginConfigurationException( \"Cannot resolve plugin dependencies\", e );\n            }\n        }\n    }","commit_id":"11082da5f4fafc00e6a133efa683b636ff92951e","url":"https://github.com/apache/maven"},{"original_method":"private PluginMap readPluginMap( File mappingFile )\n        throws PluginMappingManagementException\n    {\n        if ( mappingFile.exists() )\n        {\n            Reader fileReader = null;\n            try\n            {\n                fileReader = new FileReader( mappingFile );\n\n                PluginMappingXpp3Reader mappingReader = new PluginMappingXpp3Reader();\n\n                return mappingReader.read( fileReader );\n            }\n            catch ( IOException e )\n            {\n                throw new PluginMappingManagementException( \"Cannot read plugin mappings from: \" + mappingFile, e );\n            }\n            catch ( XmlPullParserException e )\n            {\n                throw new PluginMappingManagementException( \"Cannot parse plugin mappings from: \" + mappingFile, e );\n            }\n            finally\n            {\n                IOUtil.close( fileReader );\n            }\n        }\n        else\n        {\n            return null;\n        }\n    }","id":58470,"modified_method":"private PluginMap readPluginMap( File mappingFile )\n        throws PluginMappingManagementException\n    {\n        PluginMap result = null;\n        \n        if ( mappingFile.exists() )\n        {\n            Reader fileReader = null;\n            try\n            {\n                fileReader = new FileReader( mappingFile );\n\n                PluginMappingXpp3Reader mappingReader = new PluginMappingXpp3Reader();\n\n                result = mappingReader.read( fileReader );\n            }\n            catch ( IOException e )\n            {\n                throw new PluginMappingManagementException( \"Cannot read plugin mappings from: \" + mappingFile, e );\n            }\n            catch ( XmlPullParserException e )\n            {\n                throw new PluginMappingManagementException( \"Cannot parse plugin mappings from: \" + mappingFile, e );\n            }\n            finally\n            {\n                IOUtil.close( fileReader );\n            }\n        }\n        \n        return result;\n    }","commit_id":"11082da5f4fafc00e6a133efa683b636ff92951e","url":"https://github.com/apache/maven"},{"original_method":"private File resolveMappingMetadata( String groupId, List pluginRepositories, ArtifactRepository localRepository )\n        throws RepositoryMetadataManagementException\n    {\n        PluginMappingMetadata metadata = new PluginMappingMetadata( groupId );\n\n        RepositoryMetadataManagementException repositoryException = null;\n\n        for ( Iterator repoIterator = pluginRepositories.iterator(); repoIterator.hasNext(); )\n        {\n            ArtifactRepository repository = (ArtifactRepository) repoIterator.next();\n\n            try\n            {\n                repositoryMetadataManager.resolve( metadata, repository, localRepository );\n\n                // reset this to keep it from getting in the way when we succeed but not on first repo...\n                repositoryException = null;\n\n                break;\n            }\n            catch ( RepositoryMetadataManagementException e )\n            {\n                repositoryException = e;\n            }\n        }\n\n        if ( repositoryException != null )\n        {\n            throw repositoryException;\n        }\n\n        return metadata.getFile();\n    }","id":58471,"modified_method":"private File resolveMappingMetadata( String groupId, List pluginRepositories, ArtifactRepository localRepository )\n        throws RepositoryMetadataManagementException\n    {\n        PluginMappingMetadata metadata = new PluginMappingMetadata( groupId );\n\n        RepositoryMetadataManagementException repositoryException = null;\n\n        for ( Iterator repoIterator = pluginRepositories.iterator(); repoIterator.hasNext(); )\n        {\n            ArtifactRepository repository = (ArtifactRepository) repoIterator.next();\n\n            try\n            {\n                repositoryMetadataManager.resolve( metadata, repository, localRepository );\n\n                // reset this to keep it from getting in the way when we succeed but not on first repo...\n                repositoryException = null;\n\n                File metadataFile = metadata.getFile();\n                \n                if ( metadataFile != null && metadataFile.exists() )\n                {\n                    break;\n                }\n            }\n            catch ( InvalidRepositoryMetadataException e )\n            {\n                repositoryMetadataManager.purgeLocalCopy( metadata, localRepository );\n            }\n            catch ( RepositoryMetadataManagementException e )\n            {\n                repositoryException = e;\n            }\n        }\n\n        if ( repositoryException != null )\n        {\n            throw repositoryException;\n        }\n\n        return metadata.getFile();\n    }","commit_id":"11082da5f4fafc00e6a133efa683b636ff92951e","url":"https://github.com/apache/maven"},{"original_method":"public void resolve( RepositoryMetadata metadata, ArtifactRepository remote, ArtifactRepository local )\n        throws RepositoryMetadataManagementException\n    {\n        File metadataFile = (File) cachedMetadata.get( metadata.getRepositoryPath() );\n\n        if ( metadataFile == null )\n        {\n            metadataFile = constructLocalRepositoryFile( metadata, local );\n\n            if ( !metadataFile.exists() && remote != null )\n            {\n                try\n                {\n                    File tempMetadataFile = File.createTempFile( \"plugins.xml\", null );\n\n                    try\n                    {\n                        wagonManager.getRepositoryMetadata( metadata, remote, tempMetadataFile );\n\n                        if ( !metadataFile.exists()\n                            || ( metadataFile.lastModified() <= tempMetadataFile.lastModified() ) )\n                        {\n                            if ( !tempMetadataFile.renameTo( metadataFile ) )\n                            {\n                                FileUtils.copyFile( tempMetadataFile, metadataFile );\n\n                                tempMetadataFile.delete();\n                            }\n                        }\n                    }\n                    catch ( ResourceDoesNotExistException e )\n                    {\n                        if ( !metadataFile.exists() )\n                        {\n                            throw new RepositoryMetadataManagementException( metadata,\n                                                                             \"Remote repository metadata not found.\", e );\n                        }\n                        else\n                        {\n                            String message = \"Cannot find \" + metadata + \" in remote repository - Using local copy.\";\n\n                            getLogger().info( message );\n\n                            getLogger().debug( message, e );\n                        }\n                    }\n                }\n                catch ( TransferFailedException e )\n                {\n                    throw new RepositoryMetadataManagementException( metadata,\n                                                                     \"Failed to download repository metadata.\", e );\n                }\n                catch ( IOException e )\n                {\n                    throw new RepositoryMetadataManagementException(\n                                                                     metadata,\n                                                                     \"Error constructing temporary metadata download file.\",\n                                                                     e );\n                }\n            }\n            else\n            {\n                getLogger().info( \"Using local copy of \" + metadata + \" from: \" + metadataFile );\n            }\n\n            metadata.setFile( metadataFile );\n        }\n    }","id":58472,"modified_method":"public void resolve( RepositoryMetadata metadata, ArtifactRepository remote, ArtifactRepository local )\n        throws RepositoryMetadataManagementException\n    {\n        File metadataFile = (File) cachedMetadata.get( metadata.getRepositoryPath() );\n\n        if ( metadataFile == null )\n        {\n            metadataFile = constructLocalRepositoryFile( metadata, local );\n\n            if ( !metadataFile.exists() && remote != null )\n            {\n                try\n                {\n                    try\n                    {\n                        wagonManager.getRepositoryMetadata( metadata, remote, metadataFile );\n                    }\n                    catch ( ResourceDoesNotExistException e )\n                    {\n                        if ( !metadataFile.exists() )\n                        {\n                            throw new RepositoryMetadataManagementException( metadata,\n                                                                             \"Remote repository metadata not found.\", e );\n                        }\n                        else\n                        {\n                            String message = \"Cannot find \" + metadata + \" in remote repository - Using local copy.\";\n\n                            getLogger().info( message );\n\n                            getLogger().debug( message, e );\n                        }\n                    }\n                }\n                catch ( TransferFailedException e )\n                {\n                    throw new RepositoryMetadataManagementException( metadata,\n                                                                     \"Failed to download repository metadata.\", e );\n                }\n            }\n            else\n            {\n                getLogger().info( \"Using local copy of \" + metadata + \" from: \" + metadataFile );\n            }\n\n            if ( metadataFile.exists() )\n            {\n                if ( !verifyFileNotEmpty( metadataFile ) )\n                {\n                    throw new InvalidRepositoryMetadataException( metadata, \"Metadata located in file: \" + metadataFile + \" appears to be corrupt (file is empty). DOWNLOAD FAILED.\" );\n                }\n                \n                cachedMetadata.put( metadata.getRepositoryPath(), metadataFile );\n            }\n        }\n        \n        metadata.setFile( metadataFile );\n    }","commit_id":"11082da5f4fafc00e6a133efa683b636ff92951e","url":"https://github.com/apache/maven"},{"original_method":"private ModelReader buildProject( String basedir, String projectId, ClassLoader classLoader,\n                                      List surefireDependencies, Repository localRepository )\n        throws Exception\n    {\n        System.out.println( \"Building project in \" + basedir );\n\n        ModelReader reader = new ModelReader( downloader, true );\n\n        reader.parse( new File( basedir, \"pom.xml\" ) );\n\n        String sources = new File( basedir, SOURCES ).getAbsolutePath();\n\n        String resources = new File( basedir, RESOURCES ).getAbsolutePath();\n\n        String classes = new File( basedir, CLASSES ).getAbsolutePath();\n\n        String testSources = new File( basedir, TEST_SOURCES ).getAbsolutePath();\n\n        String testResources = new File( basedir, TEST_RESOURCES ).getAbsolutePath();\n\n        String testClasses = new File( basedir, TEST_CLASSES ).getAbsolutePath();\n\n        String generatedSources = new File( basedir, GENERATED_SOURCES ).getAbsolutePath();\n\n        File buildDirFile = new File( basedir, BUILD_DIR );\n        String buildDir = buildDirFile.getAbsolutePath();\n\n        // clean\n        System.out.println( \"Cleaning \" + buildDirFile + \"...\" );\n        FileUtils.forceDelete( buildDirFile );\n\n        if ( online )\n        {\n            System.out.println( \"Downloading project dependencies ...\" );\n\n            downloader.downloadDependencies( reader.getDependencies() );\n        }\n\n        // ----------------------------------------------------------------------\n        // Generating sources\n        // ----------------------------------------------------------------------\n\n        File base = new File( basedir );\n\n        String modelFileName = (String) MODELLO_MODEL_FILES.get( projectId );\n\n        File model = null;\n        if ( modelFileName != null && modelFileName.trim().length() > 0 )\n        {\n            model = new File( base, modelFileName );\n        }\n\n        if ( model != null && model.exists() )\n        {\n            System.out.println( \"Model exists!\" );\n\n            String modelVersion = (String) MODELLO_TARGET_VERSIONS.get( projectId );\n            if ( modelVersion == null || modelVersion.trim().length() < 1 )\n            {\n                System.out.println( \"No model version configured. Using \\'1.0.0\\'...\" );\n                modelVersion = \"1.0.0\";\n            }\n\n            File generatedSourcesDirectory = new File( basedir, GENERATED_SOURCES );\n\n            if ( !generatedSourcesDirectory.exists() )\n            {\n                generatedSourcesDirectory.mkdirs();\n            }\n\n            File generatedDocsDirectory = new File( basedir, GENERATED_DOCS );\n\n            if ( !generatedDocsDirectory.exists() )\n            {\n                generatedDocsDirectory.mkdirs();\n            }\n\n            System.out.println(\n                \"Generating model bindings for version \\'\" + modelVersion + \"\\' in project: \" + projectId );\n\n            generateSources( model.getAbsolutePath(), \"java\", generatedSources, modelVersion, \"false\", classLoader );\n            generateSources( model.getAbsolutePath(), \"xpp3-reader\", generatedSources, modelVersion, \"false\",\n                             classLoader );\n            generateSources( model.getAbsolutePath(), \"xpp3-writer\", generatedSources, modelVersion, \"false\",\n                             classLoader );\n        }\n\n        // ----------------------------------------------------------------------\n        // Standard compile\n        // ----------------------------------------------------------------------\n\n        System.out.println( \"Compiling sources ...\" );\n\n        if ( new File( generatedSources ).exists() )\n        {\n            compile( reader.getDependencies(), sources, classes, null, generatedSources, Dependency.SCOPE_COMPILE,\n                     localRepository );\n        }\n        else\n        {\n            compile( reader.getDependencies(), sources, classes, null, null, Dependency.SCOPE_COMPILE,\n                     localRepository );\n        }\n\n        // ----------------------------------------------------------------------\n        // Plugin descriptor generation\n        // ----------------------------------------------------------------------\n\n        if ( reader.getPackaging().equals( \"maven-plugin\" ) )\n        {\n            System.out.println( \"Generating maven plugin descriptor ...\" );\n\n            generatePluginDescriptor( sources, new File( classes, \"META-INF/maven\" ).getAbsolutePath(),\n                                      new File( basedir, \"pom.xml\" ).getAbsolutePath(), classLoader, localRepository );\n        }\n\n        // ----------------------------------------------------------------------\n        // Standard resources\n        // ----------------------------------------------------------------------\n\n        System.out.println( \"Packaging resources ...\" );\n\n        copyResources( resources, classes );\n\n        // ----------------------------------------------------------------------\n        // Test compile\n        // ----------------------------------------------------------------------\n\n        System.out.println( \"Compiling test sources ...\" );\n\n        Collection testDependencies = new ArrayList( reader.getDependencies() );\n\n        compile( testDependencies, testSources, testClasses, classes, null, Dependency.SCOPE_TEST, localRepository );\n\n        // ----------------------------------------------------------------------\n        // Test resources\n        // ----------------------------------------------------------------------\n\n        System.out.println( \"Packaging test resources ...\" );\n\n        copyResources( testResources, testClasses );\n\n        // ----------------------------------------------------------------------\n        // Run tests\n        // ----------------------------------------------------------------------\n\n        runTests( basedir, classes, testClasses, reader, surefireDependencies, localRepository );\n\n        // ----------------------------------------------------------------------\n        // Create JAR\n        // ----------------------------------------------------------------------\n\n        createJar( classes, buildDir, reader );\n\n        installPom( basedir, localRepository, reader );\n\n        install( basedir, localRepository, reader, reader.getPackaging() );\n\n        return reader;\n    }","id":58473,"modified_method":"private ModelReader buildProject( String basedir, String projectId, ClassLoader classLoader,\n                                      List surefireDependencies, Repository localRepository )\n        throws Exception\n    {\n        System.out.println( \"Building project in \" + basedir );\n\n        ModelReader reader = new ModelReader( downloader, true );\n\n        reader.parse( new File( basedir, \"pom.xml\" ) );\n\n        String sources = new File( basedir, SOURCES ).getAbsolutePath();\n\n        String resources = new File( basedir, RESOURCES ).getAbsolutePath();\n\n        String classes = new File( basedir, CLASSES ).getAbsolutePath();\n\n        String testSources = new File( basedir, TEST_SOURCES ).getAbsolutePath();\n\n        String testResources = new File( basedir, TEST_RESOURCES ).getAbsolutePath();\n\n        String testClasses = new File( basedir, TEST_CLASSES ).getAbsolutePath();\n\n        String generatedSources = new File( basedir, GENERATED_SOURCES ).getAbsolutePath();\n\n        File buildDirFile = new File( basedir, BUILD_DIR );\n        String buildDir = buildDirFile.getAbsolutePath();\n\n        // clean\n        System.out.println( \"Cleaning \" + buildDirFile + \"...\" );\n        FileUtils.forceDelete( buildDirFile );\n\n        if ( online )\n        {\n            System.out.println( \"Downloading project dependencies ...\" );\n\n            downloader.downloadDependencies( reader.getDependencies() );\n        }\n\n        // ----------------------------------------------------------------------\n        // Generating sources\n        // ----------------------------------------------------------------------\n\n        File base = new File( basedir );\n\n        String modelFileName = (String) MODELLO_MODEL_FILES.get( projectId );\n\n        File model = null;\n        if ( modelFileName != null && modelFileName.trim().length() > 0 )\n        {\n            model = new File( base, modelFileName );\n        }\n\n        if ( model != null && model.exists() )\n        {\n            System.out.println( \"Model exists!\" );\n\n            String modelVersion = (String) MODELLO_TARGET_VERSIONS.get( projectId );\n            if ( modelVersion == null || modelVersion.trim().length() < 1 )\n            {\n                System.out.println( \"No model version configured. Using \\'1.0.0\\'...\" );\n                modelVersion = \"1.0.0\";\n            }\n\n            File generatedSourcesDirectory = new File( basedir, GENERATED_SOURCES );\n\n            if ( !generatedSourcesDirectory.exists() )\n            {\n                generatedSourcesDirectory.mkdirs();\n            }\n\n            File generatedDocsDirectory = new File( basedir, GENERATED_DOCS );\n\n            if ( !generatedDocsDirectory.exists() )\n            {\n                generatedDocsDirectory.mkdirs();\n            }\n\n            System.out.println(\n                \"Generating model bindings for version \\'\" + modelVersion + \"\\' in project: \" + projectId );\n\n            generateSources( model.getAbsolutePath(), \"java\", generatedSources, modelVersion, \"false\", classLoader );\n            generateSources( model.getAbsolutePath(), \"xpp3-reader\", generatedSources, modelVersion, \"false\",\n                             classLoader );\n            generateSources( model.getAbsolutePath(), \"xpp3-writer\", generatedSources, modelVersion, \"false\",\n                             classLoader );\n        }\n\n        // ----------------------------------------------------------------------\n        // Standard compile\n        // ----------------------------------------------------------------------\n\n        System.out.println( \"Compiling sources ...\" );\n\n        if ( new File( generatedSources ).exists() )\n        {\n            compile( reader.getDependencies(), sources, classes, null, generatedSources, Dependency.SCOPE_COMPILE,\n                     localRepository );\n        }\n        else\n        {\n            compile( reader.getDependencies(), sources, classes, null, null, Dependency.SCOPE_COMPILE,\n                     localRepository );\n        }\n\n        // ----------------------------------------------------------------------\n        // Plugin descriptor generation\n        // ----------------------------------------------------------------------\n\n        if ( reader.getPackaging().equals( \"maven-plugin\" ) )\n        {\n            System.out.println( \"Generating maven plugin descriptor ...\" );\n\n            generatePluginDescriptor( sources, new File( classes, \"META-INF/maven\" ).getAbsolutePath(),\n                                      new File( basedir, \"pom.xml\" ).getAbsolutePath(), classLoader, localRepository );\n        }\n\n        // ----------------------------------------------------------------------\n        // Standard resources\n        // ----------------------------------------------------------------------\n\n        System.out.println( \"Packaging resources ...\" );\n\n        copyResources( resources, classes );\n\n        // ----------------------------------------------------------------------\n        // Test compile\n        // ----------------------------------------------------------------------\n\n        System.out.println( \"Compiling test sources ...\" );\n\n        Collection testDependencies = new ArrayList( reader.getDependencies() );\n\n        compile( testDependencies, testSources, testClasses, classes, null, Dependency.SCOPE_TEST, localRepository );\n\n        // ----------------------------------------------------------------------\n        // Test resources\n        // ----------------------------------------------------------------------\n\n        System.out.println( \"Packaging test resources ...\" );\n\n        copyResources( testResources, testClasses );\n\n        // ----------------------------------------------------------------------\n        // Run tests\n        // ----------------------------------------------------------------------\n\n        runTests( basedir, classes, testClasses, reader, surefireDependencies, localRepository );\n\n        // ----------------------------------------------------------------------\n        // Create JAR\n        // ----------------------------------------------------------------------\n\n        createJar( new File( basedir, \"pom.xml\" ), classes, buildDir, reader );\n\n        installPom( basedir, localRepository, reader );\n\n        install( basedir, localRepository, reader, reader.getPackaging() );\n\n        return reader;\n    }","commit_id":"11082da5f4fafc00e6a133efa683b636ff92951e","url":"https://github.com/apache/maven"},{"original_method":"private void createJar( String classes, String buildDir, ModelReader reader )\n        throws Exception\n    {\n        JarMojo jarMojo = new JarMojo();\n\n        String artifactId = reader.getArtifactId();\n\n        String version = reader.getVersion();\n\n        // ----------------------------------------------------------------------\n        // Create pom.properties file\n        // ----------------------------------------------------------------------\n\n        Properties p = new Properties();\n\n        p.setProperty( \"groupId\", reader.getGroupId() );\n\n        p.setProperty( \"artifactId\", reader.getArtifactId() );\n\n        p.setProperty( \"version\", reader.getVersion() );\n\n        File pomPropertiesDir = new File( new File( classes ),\n                                          \"META-INF/maven/\" + reader.getGroupId() + \"/\" + reader.getArtifactId() );\n\n        pomPropertiesDir.mkdirs();\n\n        File pomPropertiesFile = new File( pomPropertiesDir, \"pom.properties\" );\n\n        OutputStream os = new FileOutputStream( pomPropertiesFile );\n\n        p.store( os, \"Generated by Maven\" );\n\n        os.close(); // stream is flushed but not closed by Properties.store()\n\n        //TODO: Add pom.xml\n        jarMojo.execute( new File( classes ), buildDir, artifactId + \"-\" + version );\n    }","id":58474,"modified_method":"private void createJar( File pomFile, String classes, String buildDir, ModelReader reader )\n        throws Exception\n    {\n        JarMojo jarMojo = new JarMojo();\n\n        String artifactId = reader.getArtifactId();\n\n        String version = reader.getVersion();\n\n        // ----------------------------------------------------------------------\n        // Create pom.properties file\n        // ----------------------------------------------------------------------\n\n        Properties p = new Properties();\n\n        p.setProperty( \"groupId\", reader.getGroupId() );\n\n        p.setProperty( \"artifactId\", reader.getArtifactId() );\n\n        p.setProperty( \"version\", reader.getVersion() );\n\n        File pomPropertiesDir = new File( new File( classes ),\n                                          \"META-INF/maven/\" + reader.getGroupId() + \"/\" + reader.getArtifactId() );\n\n        pomPropertiesDir.mkdirs();\n\n        File pomPropertiesFile = new File( pomPropertiesDir, \"pom.properties\" );\n\n        OutputStream os = new FileOutputStream( pomPropertiesFile );\n\n        p.store( os, \"Generated by Maven\" );\n\n        os.close(); // stream is flushed but not closed by Properties.store()\n        \n        FileUtils.copyFile( pomFile, new File( pomPropertiesDir, \"pom.xml\" ) );\n\n        jarMojo.execute( new File( classes ), buildDir, artifactId + \"-\" + version );\n    }","commit_id":"11082da5f4fafc00e6a133efa683b636ff92951e","url":"https://github.com/apache/maven"},{"original_method":"public void execute()\n        throws MojoExecutionException\n    {\n        RepositoryMetadata metadata = new PluginMappingMetadata( getProject().getGroupId() );\n        \n        ArtifactRepository distributionRepository = getProject().getDistributionManagementArtifactRepository();\n        \n        if ( distributionRepository == null )\n        {\n            throw new MojoExecutionException( \"No distribution repository specified. You must specify a <distributionManagement/> section with a valid <repository/> specified within.\" );\n        }\n\n        try\n        {\n            getRepositoryMetadataManager().resolve( metadata, distributionRepository, getLocalRepository() );\n\n            updatePluginMap( metadata );\n\n            getRepositoryMetadataManager().deploy( metadata, distributionRepository );\n        }\n        catch ( RepositoryMetadataManagementException e )\n        {\n            throw new MojoExecutionException( \"Failed to install \" + metadata, e );\n        }\n    }","id":58475,"modified_method":"public void execute()\n        throws MojoExecutionException\n    {\n        RepositoryMetadata metadata = new PluginMappingMetadata( getProject().getGroupId() );\n        \n        ArtifactRepository distributionRepository = getProject().getDistributionManagementArtifactRepository();\n        \n        if ( distributionRepository == null )\n        {\n            throw new MojoExecutionException( \"No distribution repository specified. You must specify a <distributionManagement/> section with a valid <repository/> specified within.\" );\n        }\n\n        try\n        {\n            getRepositoryMetadataManager().resolve( metadata, distributionRepository, getLocalRepository() );\n\n            boolean shouldUpdate = updatePluginMap( metadata );\n\n            if ( shouldUpdate )\n            {\n                getRepositoryMetadataManager().deploy( metadata, distributionRepository );\n            }\n        }\n        catch ( RepositoryMetadataManagementException e )\n        {\n            throw new MojoExecutionException( \"Failed to install \" + metadata, e );\n        }\n    }","commit_id":"11082da5f4fafc00e6a133efa683b636ff92951e","url":"https://github.com/apache/maven"},{"original_method":"public void execute()\n        throws MojoExecutionException\n    {\n        RepositoryMetadata metadata = new PluginMappingMetadata( getProject().getGroupId() );\n        \n        try\n        {\n            getRepositoryMetadataManager().resolveLocally( metadata, getLocalRepository() );\n            \n            updatePluginMap( metadata );\n\n            getRepositoryMetadataManager().install( metadata, getLocalRepository() );\n        }\n        catch ( RepositoryMetadataManagementException e )\n        {\n            throw new MojoExecutionException( \"Failed to install \" + metadata, e );\n        }\n    }","id":58476,"modified_method":"public void execute()\n        throws MojoExecutionException\n    {\n        RepositoryMetadata metadata = new PluginMappingMetadata( getProject().getGroupId() );\n        \n        try\n        {\n            try\n            {\n                getRepositoryMetadataManager().resolveLocally( metadata, getLocalRepository() );\n            }\n            catch ( InvalidRepositoryMetadataException e )\n            {\n                getRepositoryMetadataManager().purgeLocalCopy( metadata, getLocalRepository() );\n            }\n            \n            boolean shouldUpdate = updatePluginMap( metadata );\n\n            if ( shouldUpdate )\n            {\n                getRepositoryMetadataManager().install( metadata, getLocalRepository() );\n            }\n        }\n        catch ( RepositoryMetadataManagementException e )\n        {\n            throw new MojoExecutionException( \"Failed to install \" + metadata, e );\n        }\n    }","commit_id":"11082da5f4fafc00e6a133efa683b636ff92951e","url":"https://github.com/apache/maven"},{"original_method":"public RepositoryMetadataManagementException( RepositoryMetadata metadata, String message )\n    {\n        super( \"Failed to resolve repository metadata: \" + metadata + \".\" );\n        \n        this.metadata = metadata;\n    }","id":58477,"modified_method":"public RepositoryMetadataManagementException( RepositoryMetadata metadata, String message )\n    {\n        super( \"Failed to resolve repository metadata: \" + metadata + \".\\n\\nOriginal message: \" + message );\n        \n        this.metadata = metadata;\n    }","commit_id":"11082da5f4fafc00e6a133efa683b636ff92951e","url":"https://github.com/apache/maven"},{"original_method":"public RepositoryMetadataManagementException( RepositoryMetadata metadata, String message, Throwable cause )\n    {\n        super( \"Failed to resolve repository metadata: \" + metadata + \". Error was: \" + cause.getMessage(), cause );\n        \n        this.metadata = metadata;\n    }","id":58478,"modified_method":"public RepositoryMetadataManagementException( RepositoryMetadata metadata, String message, Throwable cause )\n    {\n        super( \"Failed to resolve repository metadata: \" + metadata + \".\\n\\nOriginal message: \" + message + \"\\n\\nError was: \" + cause.getMessage(), cause );\n        \n        this.metadata = metadata;\n    }","commit_id":"11082da5f4fafc00e6a133efa683b636ff92951e","url":"https://github.com/apache/maven"},{"original_method":"public void execute()\n        throws MojoExecutionException\n    {\n        RepositoryMetadata metadata = new PluginMappingMetadata( getProject().getGroupId() );\n        \n        ArtifactRepository distributionRepository = getProject().getDistributionManagementArtifactRepository();\n        \n        if ( distributionRepository == null )\n        {\n            throw new MojoExecutionException( \"No distribution repository specified. You must specify a <distributionManagement/> section with a valid <repository/> specified within.\" );\n        }\n\n        try\n        {\n            getRepositoryMetadataManager().resolve( metadata, distributionRepository, getLocalRepository() );\n\n            updatePluginMap( metadata );\n\n            getRepositoryMetadataManager().deploy( metadata, distributionRepository );\n        }\n        catch ( RepositoryMetadataManagementException e )\n        {\n            throw new MojoExecutionException( \"Failed to install \" + metadata, e );\n        }\n    }","id":58479,"modified_method":"public void execute()\n        throws MojoExecutionException\n    {\n        RepositoryMetadata metadata = new PluginMappingMetadata( getProject().getGroupId() );\n        \n        ArtifactRepository distributionRepository = getProject().getDistributionManagementArtifactRepository();\n        \n        if ( distributionRepository == null )\n        {\n            throw new MojoExecutionException( \"No distribution repository specified. You must specify a <distributionManagement/> section with a valid <repository/> specified within.\" );\n        }\n\n        try\n        {\n            getRepositoryMetadataManager().resolve( metadata, distributionRepository, getLocalRepository() );\n\n            boolean shouldUpdate = updatePluginMap( metadata );\n\n            if ( shouldUpdate )\n            {\n                getRepositoryMetadataManager().deploy( metadata, distributionRepository );\n            }\n        }\n        catch ( RepositoryMetadataManagementException e )\n        {\n            throw new MojoExecutionException( \"Failed to install \" + metadata, e );\n        }\n    }","commit_id":"aa55635ca71b0dbd894df668bb37a709c20464a9","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void execute()\n        throws MojoExecutionException\n    {\n        RepositoryMetadata metadata = new PluginMappingMetadata( getProject().getGroupId() );\n        \n        try\n        {\n            getRepositoryMetadataManager().resolveLocally( metadata, getLocalRepository() );\n            \n            updatePluginMap( metadata );\n\n            getRepositoryMetadataManager().install( metadata, getLocalRepository() );\n        }\n        catch ( RepositoryMetadataManagementException e )\n        {\n            throw new MojoExecutionException( \"Failed to install \" + metadata, e );\n        }\n    }","id":58480,"modified_method":"public void execute()\n        throws MojoExecutionException\n    {\n        RepositoryMetadata metadata = new PluginMappingMetadata( getProject().getGroupId() );\n        \n        try\n        {\n            try\n            {\n                getRepositoryMetadataManager().resolveLocally( metadata, getLocalRepository() );\n            }\n            catch ( InvalidRepositoryMetadataException e )\n            {\n                getRepositoryMetadataManager().purgeLocalCopy( metadata, getLocalRepository() );\n            }\n            \n            boolean shouldUpdate = updatePluginMap( metadata );\n\n            if ( shouldUpdate )\n            {\n                getRepositoryMetadataManager().install( metadata, getLocalRepository() );\n            }\n        }\n        catch ( RepositoryMetadataManagementException e )\n        {\n            throw new MojoExecutionException( \"Failed to install \" + metadata, e );\n        }\n    }","commit_id":"aa55635ca71b0dbd894df668bb37a709c20464a9","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Retrieves a substate (or partial state) from the target.\n     * @param target State provider. If null, coordinator is used\n     * @param state_id The ID of the substate. If null, the entire state will be transferred\n     * @param timeout the number of milliseconds to wait for the operation to complete successfully. 0 waits until\n     * the state has been received\n     * @return\n     * @throws ChannelNotConnectedException\n     * @throws ChannelClosedException\n     */\n    public boolean getState(Address target, String state_id, long timeout) throws ChannelNotConnectedException, ChannelClosedException {\n        return getState(target, state_id, timeout, true);\n    }","id":58481,"modified_method":"/**\n     * Retrieves a substate (or partial state) indicated by state_id from the target member.\n     * <p>\n     * \n     * State transfer is initiated by invoking getState on this channel, state\n     * receiver, and sending a GET_STATE message to a target member - state\n     * provider. State provider passes GET_STATE message to application that is\n     * using the state provider channel which in turn provides an application\n     * state to a state receiver. Upon successful installation of a state at\n     * state receiver this method returns true.\n     * \n     * \n     * @param target\n     *                State provider. If null, coordinator is used\n     * @param state_id\n     *                The ID of the substate. If null, the entire state will be\n     *                transferred\n     * @param timeout\n     *                the number of milliseconds to wait for the operation to\n     *                complete successfully. 0 waits until the state has been\n     *                received\n     *                    \n     * @see ExtendedMessageListener#getState(OutputStream)\n     * @see ExtendedMessageListener#setState(InputStream)\n     * @see MessageListener#getState()\n     * @see MessageListener#setState(byte[])\n     * \n     * \n     * @return true if state transfer was successful, false otherwise\n     * @throws ChannelNotConnectedException\n     *                 if channel was not connected at the time state retrieval\n     *                 was initiated\n     * @throws ChannelClosedException\n     *                 if channel was closed at the time state retrieval was\n     *                 initiated\n     * @throws IllegalStateException\n     *                 if one of state transfer protocols is not present in this\n     *                 channel\n     * @throws IllegalStateException\n     *                 if flush is used in this channel and cluster could not be\n     *                 flushed\n     */\n    public boolean getState(Address target, String state_id, long timeout) throws ChannelNotConnectedException, ChannelClosedException {\n        return getState(target, state_id, timeout, true);\n    }","commit_id":"c56c456667fbd62a23a34b8c9b7c8a89ee284bf7","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Retrieves the current group state. Sends GET_STATE event down to STATE_TRANSFER layer.\n     * Blocks until STATE_TRANSFER sends up a GET_STATE_OK event or until <code>timeout<\/code>\n     * milliseconds have elapsed. The argument of GET_STATE_OK should be a single object.\n     * @param target the target member to receive the state from. if null, state is retrieved from coordinator\n     * @param timeout the number of milliseconds to wait for the operation to complete successfully. 0 waits until\n     * the state has been received\n     * @return true of the state was received, false if the operation timed out\n     */\n    public boolean getState(Address target, long timeout) throws ChannelNotConnectedException, ChannelClosedException {\n        return getState(target,null,timeout);\n    }","id":58482,"modified_method":"/**\n     * Retrieves a full state from the target member.\n     * <p>\n     * \n     * State transfer is initiated by invoking getState on this channel, state\n     * receiver, and sending a GET_STATE message to a target member - state\n     * provider. State provider passes GET_STATE message to application that is\n     * using the state provider channel which in turn provides an application\n     * state to a state receiver. Upon successful installation of a state at\n     * state receiver this method returns true.\n     * \n     * \n     * @param target\n     *                State provider. If null, coordinator is used\n     * @param state_id\n     *                The ID of the substate. If null, the entire state will be\n     *                transferred\n     * @param timeout\n     *                the number of milliseconds to wait for the operation to\n     *                complete successfully. 0 waits until the state has been\n     *                received  \n     * \n     * @see ExtendedMessageListener#getState(OutputStream)\n     * @see ExtendedMessageListener#setState(InputStream)\n     * @see MessageListener#getState()\n     * @see MessageListener#setState(byte[])\n     * \n     * \n     * @return true if state transfer was successful, false otherwise\n     * @throws ChannelNotConnectedException\n     *                 if channel was not connected at the time state retrieval\n     *                 was initiated\n     * @throws ChannelClosedException\n     *                 if channel was closed at the time state retrieval was\n     *                 initiated\n     * @throws IllegalStateException\n     *                 if one of state transfer protocols is not present in this\n     *                 channel\n     * @throws IllegalStateException\n     *                 if flush is used in this channel and cluster could not be\n     *                 flushed\n     */\n    public boolean getState(Address target, long timeout) throws ChannelNotConnectedException, ChannelClosedException {\n        return getState(target,null,timeout);\n    }","commit_id":"c56c456667fbd62a23a34b8c9b7c8a89ee284bf7","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Retrieves a substate (or partial state) from the target.\n     * @param target State provider. If null, coordinator is used\n     * @param state_id The ID of the substate. If null, the entire state will be transferred\n     * @param timeout the number of milliseconds to wait for the operation to complete successfully. 0 waits until\n     * the state has been received\n     * @return\n     * @throws ChannelNotConnectedException\n     * @throws ChannelClosedException\n     */\n    public boolean getState(Address target, String state_id, long timeout,boolean useFlushIfPresent) throws ChannelNotConnectedException, ChannelClosedException {\n        checkClosedOrNotConnected();\n        if(!state_transfer_supported) {\n            throw new IllegalStateException(\"fetching state will fail as state transfer is not supported. \"\n                    + \"Add one of the STATE_TRANSFER protocols to your protocol configuration\");\n        }\n        \n        if(target == null)\n            target=determineCoordinator();\n        if(target != null && local_addr != null && target.equals(local_addr)) {\n            if(log.isTraceEnabled())\n                log.trace(\"cannot get state from myself (\" + target + \"): probably the first member\");\n            return false;\n        }\n\n        \n        StateTransferInfo state_info=new StateTransferInfo(target, state_id, timeout);\n        boolean initiateFlush = flushSupported() && useFlushIfPresent;\n        \n        if(initiateFlush)\n            startFlush(false);\n\n        state_promise.reset();\n        down(new Event(Event.GET_STATE, state_info));\n        Boolean b=state_promise.getResult(state_info.timeout);\n        \n        if(initiateFlush)\n            stopFlush();\n        \n        boolean state_transfer_successfull = b != null && b.booleanValue();\n        if(!state_transfer_successfull)\n            down(new Event(Event.RESUME_STABLE));\n        return state_transfer_successfull;\n    }","id":58483,"modified_method":"/**\n     * Retrieves a substate (or partial state) indicated by state_id from the target member.\n     * <p>\n     * \n     * State transfer is initiated by invoking getState on this channel, state\n     * receiver, and sending a GET_STATE message to a target member - state\n     * provider. State provider passes GET_STATE message to application that is\n     * using the state provider channel which in turn provides an application\n     * state to a state receiver. Upon successful installation of a state at\n     * state receiver this method returns true.\n     * \n     * \n     * @param target\n     *                State provider. If null, coordinator is used\n     * @param state_id\n     *                The ID of the substate. If null, the entire state will be\n     *                transferred\n     * @param timeout\n     *                the number of milliseconds to wait for the operation to\n     *                complete successfully. 0 waits until the state has been\n     *                received\n     * @param useFlushIfPresent\n     *                whether channel should be flushed prior to state retrieval\n     * \n     * @see ExtendedMessageListener#getState(OutputStream)\n     * @see ExtendedMessageListener#setState(InputStream)\n     * @see MessageListener#getState()\n     * @see MessageListener#setState(byte[])\n     * \n     * \n     * @return true if state transfer was successful, false otherwise\n     * @throws ChannelNotConnectedException\n     *                 if channel was not connected at the time state retrieval\n     *                 was initiated\n     * @throws ChannelClosedException\n     *                 if channel was closed at the time state retrieval was\n     *                 initiated\n     * @throws IllegalStateException\n     *                 if one of state transfer protocols is not present in this\n     *                 channel\n     * @throws IllegalStateException\n     *                 if flush is used in this channel and cluster could not be\n     *                 flushed\n     */    \n    public boolean getState(Address target, String state_id, long timeout,boolean useFlushIfPresent) throws ChannelNotConnectedException, ChannelClosedException {\n        checkClosedOrNotConnected();\n        if(!state_transfer_supported) {\n            throw new IllegalStateException(\"fetching state will fail as state transfer is not supported. \"\n                    + \"Add one of the STATE_TRANSFER protocols to your protocol configuration\");\n        }\n        \n        if(target == null)\n            target=determineCoordinator();\n        if(target != null && local_addr != null && target.equals(local_addr)) {\n            if(log.isTraceEnabled())\n                log.trace(\"cannot get state from myself (\" + target + \"): probably the first member\");\n            return false;\n        }\n              \n        boolean initiateFlush = flushSupported() && useFlushIfPresent;\n        \n        if(initiateFlush){\n            boolean successfulFlush = startFlush(false);\n            //http://jira.jboss.com/jira/browse/JGRP-759\n            if(!successfulFlush){\n                throw new IllegalStateException(\"Could not flush the cluster and proceed with state retrieaval\");\n            }\n        }\n\n        state_promise.reset();\n        StateTransferInfo state_info=new StateTransferInfo(target, state_id, timeout);\n        down(new Event(Event.GET_STATE, state_info));\n        Boolean b=state_promise.getResult(state_info.timeout);\n        \n        if(initiateFlush)\n            stopFlush();\n        \n        boolean state_transfer_successfull = b != null && b.booleanValue();\n        if(!state_transfer_successfull)\n            down(new Event(Event.RESUME_STABLE));\n        return state_transfer_successfull;\n    }","commit_id":"c56c456667fbd62a23a34b8c9b7c8a89ee284bf7","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Retrieves a substate (or partial state) from the target.\n     * @param target State provider. If null, coordinator is used\n     * @param state_id The ID of the substate. If null, the entire state will be transferred\n     * @param timeout the number of milliseconds to wait for the operation to complete successfully. 0 waits until\n     * the state has been received\n     * @return\n     * @throws ChannelNotConnectedException\n     * @throws ChannelClosedException\n     */\n    public boolean getState(Address target, String state_id, long timeout,boolean useFlushIfPresent) throws ChannelNotConnectedException, ChannelClosedException {\n        checkClosedOrNotConnected();\n        if(!state_transfer_supported) {\n            throw new IllegalStateException(\"fetching state will fail as state transfer is not supported. \"\n                    + \"Add one of the STATE_TRANSFER protocols to your protocol configuration\");\n        }\n        \n        if(target == null)\n            target=determineCoordinator();\n        if(target != null && local_addr != null && target.equals(local_addr)) {\n            if(log.isTraceEnabled())\n                log.trace(\"cannot get state from myself (\" + target + \"): probably the first member\");\n            return false;\n        }\n\n        \n        StateTransferInfo state_info=new StateTransferInfo(target, state_id, timeout);\n        boolean initiateFlush = flushSupported() && useFlushIfPresent;\n        \n        if(initiateFlush)\n            startFlush(false);\n\n        state_promise.reset();\n        down(new Event(Event.GET_STATE, state_info));\n        Boolean b=state_promise.getResult(state_info.timeout);\n        \n        if(initiateFlush)\n            stopFlush();\n        \n        boolean state_transfer_successfull = b != null && b.booleanValue();\n        if(!state_transfer_successfull)\n            down(new Event(Event.RESUME_STABLE));\n        return state_transfer_successfull;\n    }","id":58484,"modified_method":"/**\n     * Retrieves a substate (or partial state) indicated by state_id from the target member.\n     * <p>\n     * \n     * State transfer is initiated by invoking getState on this channel, state\n     * receiver, and sending a GET_STATE message to a target member - state\n     * provider. State provider passes GET_STATE message to application that is\n     * using the state provider channel which in turn provides an application\n     * state to a state receiver. Upon successful installation of a state at\n     * state receiver this method returns true.\n     * \n     * \n     * @param target\n     *                State provider. If null, coordinator is used\n     * @param state_id\n     *                The ID of the substate. If null, the entire state will be\n     *                transferred\n     * @param timeout\n     *                the number of milliseconds to wait for the operation to\n     *                complete successfully. 0 waits until the state has been\n     *                received\n     * @param useFlushIfPresent\n     *                whether channel should be flushed prior to state retrieval\n     * \n     * @see ExtendedMessageListener#getState(OutputStream)\n     * @see ExtendedMessageListener#setState(InputStream)\n     * @see MessageListener#getState()\n     * @see MessageListener#setState(byte[])\n     * \n     * \n     * @return true if state transfer was successful, false otherwise\n     * @throws ChannelNotConnectedException\n     *                 if channel was not connected at the time state retrieval\n     *                 was initiated\n     * @throws ChannelClosedException\n     *                 if channel was closed at the time state retrieval was\n     *                 initiated\n     * @throws IllegalStateException\n     *                 if one of state transfer protocols is not present in this\n     *                 channel\n     * @throws IllegalStateException\n     *                 if flush is used in this channel and cluster could not be\n     *                 flushed\n     */    \n    public boolean getState(Address target, String state_id, long timeout,boolean useFlushIfPresent) throws ChannelNotConnectedException, ChannelClosedException {\n        checkClosedOrNotConnected();\n        if(!state_transfer_supported) {\n            throw new IllegalStateException(\"fetching state will fail as state transfer is not supported. \"\n                    + \"Add one of the STATE_TRANSFER protocols to your protocol configuration\");\n        }\n        \n        if(target == null)\n            target=determineCoordinator();\n        if(target != null && local_addr != null && target.equals(local_addr)) {\n            if(log.isTraceEnabled())\n                log.trace(\"cannot get state from myself (\" + target + \"): probably the first member\");\n            return false;\n        }\n              \n        boolean initiateFlush = flushSupported() && useFlushIfPresent;\n        \n        if(initiateFlush){\n            boolean successfulFlush = startFlush(false);\n            //http://jira.jboss.com/jira/browse/JGRP-759\n            if(!successfulFlush){\n                throw new IllegalStateException(\"Could not flush the cluster and proceed with state retrieaval\");\n            }\n        }\n\n        state_promise.reset();\n        StateTransferInfo state_info=new StateTransferInfo(target, state_id, timeout);\n        down(new Event(Event.GET_STATE, state_info));\n        Boolean b=state_promise.getResult(state_info.timeout);\n        \n        if(initiateFlush)\n            stopFlush();\n        \n        boolean state_transfer_successfull = b != null && b.booleanValue();\n        if(!state_transfer_successfull)\n            down(new Event(Event.RESUME_STABLE));\n        return state_transfer_successfull;\n    }","commit_id":"67cba9d93cc549b1646cad589eabe6fc1e606ab4","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Retrieves the current group state. Sends GET_STATE event down to STATE_TRANSFER layer.\n     * Blocks until STATE_TRANSFER sends up a GET_STATE_OK event or until <code>timeout<\/code>\n     * milliseconds have elapsed. The argument of GET_STATE_OK should be a single object.\n     * @param target the target member to receive the state from. if null, state is retrieved from coordinator\n     * @param timeout the number of milliseconds to wait for the operation to complete successfully. 0 waits until\n     * the state has been received\n     * @return true of the state was received, false if the operation timed out\n     */\n    public boolean getState(Address target, long timeout) throws ChannelNotConnectedException, ChannelClosedException {\n        return getState(target,null,timeout);\n    }","id":58485,"modified_method":"/**\n     * Retrieves a full state from the target member.\n     * <p>\n     * \n     * State transfer is initiated by invoking getState on this channel, state\n     * receiver, and sending a GET_STATE message to a target member - state\n     * provider. State provider passes GET_STATE message to application that is\n     * using the state provider channel which in turn provides an application\n     * state to a state receiver. Upon successful installation of a state at\n     * state receiver this method returns true.\n     * \n     * \n     * @param target\n     *                State provider. If null, coordinator is used\n     * @param state_id\n     *                The ID of the substate. If null, the entire state will be\n     *                transferred\n     * @param timeout\n     *                the number of milliseconds to wait for the operation to\n     *                complete successfully. 0 waits until the state has been\n     *                received  \n     * \n     * @see ExtendedMessageListener#getState(OutputStream)\n     * @see ExtendedMessageListener#setState(InputStream)\n     * @see MessageListener#getState()\n     * @see MessageListener#setState(byte[])\n     * \n     * \n     * @return true if state transfer was successful, false otherwise\n     * @throws ChannelNotConnectedException\n     *                 if channel was not connected at the time state retrieval\n     *                 was initiated\n     * @throws ChannelClosedException\n     *                 if channel was closed at the time state retrieval was\n     *                 initiated\n     * @throws IllegalStateException\n     *                 if one of state transfer protocols is not present in this\n     *                 channel\n     * @throws IllegalStateException\n     *                 if flush is used in this channel and cluster could not be\n     *                 flushed\n     */\n    public boolean getState(Address target, long timeout) throws ChannelNotConnectedException, ChannelClosedException {\n        return getState(target,null,timeout);\n    }","commit_id":"67cba9d93cc549b1646cad589eabe6fc1e606ab4","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Retrieves a substate (or partial state) from the target.\n     * @param target State provider. If null, coordinator is used\n     * @param state_id The ID of the substate. If null, the entire state will be transferred\n     * @param timeout the number of milliseconds to wait for the operation to complete successfully. 0 waits until\n     * the state has been received\n     * @return\n     * @throws ChannelNotConnectedException\n     * @throws ChannelClosedException\n     */\n    public boolean getState(Address target, String state_id, long timeout) throws ChannelNotConnectedException, ChannelClosedException {\n        return getState(target, state_id, timeout, true);\n    }","id":58486,"modified_method":"/**\n     * Retrieves a substate (or partial state) indicated by state_id from the target member.\n     * <p>\n     * \n     * State transfer is initiated by invoking getState on this channel, state\n     * receiver, and sending a GET_STATE message to a target member - state\n     * provider. State provider passes GET_STATE message to application that is\n     * using the state provider channel which in turn provides an application\n     * state to a state receiver. Upon successful installation of a state at\n     * state receiver this method returns true.\n     * \n     * \n     * @param target\n     *                State provider. If null, coordinator is used\n     * @param state_id\n     *                The ID of the substate. If null, the entire state will be\n     *                transferred\n     * @param timeout\n     *                the number of milliseconds to wait for the operation to\n     *                complete successfully. 0 waits until the state has been\n     *                received\n     *                    \n     * @see ExtendedMessageListener#getState(OutputStream)\n     * @see ExtendedMessageListener#setState(InputStream)\n     * @see MessageListener#getState()\n     * @see MessageListener#setState(byte[])\n     * \n     * \n     * @return true if state transfer was successful, false otherwise\n     * @throws ChannelNotConnectedException\n     *                 if channel was not connected at the time state retrieval\n     *                 was initiated\n     * @throws ChannelClosedException\n     *                 if channel was closed at the time state retrieval was\n     *                 initiated\n     * @throws IllegalStateException\n     *                 if one of state transfer protocols is not present in this\n     *                 channel\n     * @throws IllegalStateException\n     *                 if flush is used in this channel and cluster could not be\n     *                 flushed\n     */\n    public boolean getState(Address target, String state_id, long timeout) throws ChannelNotConnectedException, ChannelClosedException {\n        return getState(target, state_id, timeout, true);\n    }","commit_id":"67cba9d93cc549b1646cad589eabe6fc1e606ab4","url":"https://github.com/belaban/JGroups"},{"original_method":"public void handleMembershipChange(Collection<Request> requests) {\n        boolean joinAndStateTransferInitiated=false;\n        Collection<Address> new_mbrs=new LinkedHashSet<Address>(requests.size());\n        Collection<Address> suspected_mbrs=new LinkedHashSet<Address>(requests.size());\n        Collection<Address> leaving_mbrs=new LinkedHashSet<Address>(requests.size());\n\n        for(Request req: requests) {\n            switch(req.type) {\n                case Request.JOIN:\n                    new_mbrs.add(req.mbr);\n                    break;\n                case Request.JOIN_WITH_STATE_TRANSFER:\n                    new_mbrs.add(req.mbr);\n                    joinAndStateTransferInitiated=true;\n                    break;\n                case Request.LEAVE:\n                    if(req.suspected)\n                        suspected_mbrs.add(req.mbr);\n                    else\n                        leaving_mbrs.add(req.mbr);\n                    break;\n                case Request.SUSPECT:\n                    suspected_mbrs.add(req.mbr);\n                    break;\n            }\n        }\n\n        new_mbrs.remove(gms.local_addr); // remove myself - cannot join myself (already joined)        \n\n        if(gms.view_id == null) {\n            // we're probably not the coord anymore (we just left ourselves), let someone else do it\n            // (client will retry when it doesn't get a response)\n            if(log.isDebugEnabled())\n                log.debug(\"gms.view_id is null, I'm not the coordinator anymore (leaving=\" + leaving +\n                        \"); the new coordinator will handle the leave request\");\n            return;\n        }\n\n        Vector<Address> current_members=gms.members.getMembers();\n        leaving_mbrs.retainAll(current_members); // remove all elements of leaving_mbrs which are not current members\n        if(suspected_mbrs.remove(gms.local_addr)) {\n            if(log.isWarnEnabled()) log.warn(\"I am the coord and I'm being suspected -- will probably leave shortly\");\n        }\n        suspected_mbrs.retainAll(current_members); // remove all elements of suspected_mbrs which are not current members\n\n        // for the members that have already joined, return the current digest and membership\n        for(Iterator<Address> it=new_mbrs.iterator(); it.hasNext();) {\n            Address mbr=it.next();\n            if(gms.members.contains(mbr)) { // already joined: return current digest and membership\n                JoinRsp join_rsp;\n                if(gms.reject_join_from_existing_member) {\n                    join_rsp=new JoinRsp(\"member \" + mbr + \" is already part of the group, JOIN request is rejected\");\n                }\n                else {\n                    if(log.isWarnEnabled())\n                        log.warn(mbr + \" already present; returning existing view \" + gms.view);\n                    join_rsp=new JoinRsp(new View(gms.view_id, gms.members.getMembers()), gms.getDigest());\n                }\n                gms.sendJoinResponse(join_rsp, mbr);\n                it.remove();\n            }\n        }\n\n        if(new_mbrs.isEmpty() && leaving_mbrs.isEmpty() && suspected_mbrs.isEmpty()) {\n            if(log.isTraceEnabled())\n                log.trace(\"found no members to add or remove, will not create new view\");\n            return;\n        }\n        \n        View new_view=gms.getNextView(new_mbrs, leaving_mbrs, suspected_mbrs);\n        gms.up(new Event(Event.PREPARE_VIEW,new_view));\n        gms.down(new Event(Event.PREPARE_VIEW,new_view));\n        \n        if(log.isDebugEnabled())\n            log.debug(\"new=\" + new_mbrs + \", suspected=\" + suspected_mbrs + \", leaving=\" + leaving_mbrs +\n                    \", new view: \" + new_view);\n             \n        JoinRsp join_rsp=null;\n        boolean hasJoiningMembers=!new_mbrs.isEmpty();\n        try {            \n            gms.startFlush(new_view);\n            \n            // we cannot garbage collect during joining a new member *if* we're the only member\n            // Example: {A}, B joins, after returning JoinRsp to B, A garbage collects messages higher than those\n            // in the digest returned to the client, so the client will *not* be able to ask for retransmission\n            // of those messages if he misses them            \n            if(hasJoiningMembers) {\n                gms.getDownProtocol().down(new Event(Event.SUSPEND_STABLE, MAX_SUSPEND_TIMEOUT));\n                Digest tmp=gms.getDigest(); // get existing digest\n                MutableDigest join_digest=null;\n                if(tmp == null){\n                    log.error(\"received null digest from GET_DIGEST: will cause JOIN to fail\");\n                }\n                else {\n                    // create a new digest, which contains the new member\n                    join_digest=new MutableDigest(tmp.size() + new_mbrs.size());\n                    join_digest.add(tmp); // add the existing digest to the new one\n                    for(Address member:new_mbrs)\n                        join_digest.add(member, 0, 0); // ... and add the new members. their first seqno will be 1\n                }\n                join_rsp=new JoinRsp(new_view, join_digest != null? join_digest.copy() : null);\n            }\n\n            sendLeaveResponses(leaving_mbrs); // no-op if no leaving members                            \n            gms.castViewChangeWithDest(new_view, null,join_rsp,new_mbrs);                      \n        }\n        finally {\n            if(hasJoiningMembers)\n                gms.getDownProtocol().down(new Event(Event.RESUME_STABLE));\n            if(!joinAndStateTransferInitiated)\n                gms.stopFlush();\n            if(leaving) {\n                gms.initState(); // in case connect() is called again\n            }\n        }\n    }","id":58487,"modified_method":"public void handleMembershipChange(Collection<Request> requests) {\n        boolean joinAndStateTransferInitiated=false;\n        Collection<Address> new_mbrs=new LinkedHashSet<Address>(requests.size());\n        Collection<Address> suspected_mbrs=new LinkedHashSet<Address>(requests.size());\n        Collection<Address> leaving_mbrs=new LinkedHashSet<Address>(requests.size());\n\n        for(Request req: requests) {\n            switch(req.type) {\n                case Request.JOIN:\n                    new_mbrs.add(req.mbr);\n                    break;\n                case Request.JOIN_WITH_STATE_TRANSFER:\n                    new_mbrs.add(req.mbr);\n                    joinAndStateTransferInitiated=true;\n                    break;\n                case Request.LEAVE:\n                    if(req.suspected)\n                        suspected_mbrs.add(req.mbr);\n                    else\n                        leaving_mbrs.add(req.mbr);\n                    break;\n                case Request.SUSPECT:\n                    suspected_mbrs.add(req.mbr);\n                    break;\n            }\n        }\n\n        new_mbrs.remove(gms.local_addr); // remove myself - cannot join myself (already joined)        \n\n        if(gms.view_id == null) {\n            // we're probably not the coord anymore (we just left ourselves), let someone else do it\n            // (client will retry when it doesn't get a response)\n            if(log.isDebugEnabled())\n                log.debug(\"gms.view_id is null, I'm not the coordinator anymore (leaving=\" + leaving +\n                        \"); the new coordinator will handle the leave request\");\n            return;\n        }\n\n        Vector<Address> current_members=gms.members.getMembers();\n        leaving_mbrs.retainAll(current_members); // remove all elements of leaving_mbrs which are not current members\n        if(suspected_mbrs.remove(gms.local_addr)) {\n            if(log.isWarnEnabled()) log.warn(\"I am the coord and I'm being suspected -- will probably leave shortly\");\n        }\n        suspected_mbrs.retainAll(current_members); // remove all elements of suspected_mbrs which are not current members\n\n        // for the members that have already joined, return the current digest and membership\n        for(Iterator<Address> it=new_mbrs.iterator(); it.hasNext();) {\n            Address mbr=it.next();\n            if(gms.members.contains(mbr)) { // already joined: return current digest and membership\n                JoinRsp join_rsp;\n                if(gms.reject_join_from_existing_member) {\n                    join_rsp=new JoinRsp(\"member \" + mbr + \" is already part of the group, JOIN request is rejected\");\n                }\n                else {\n                    if(log.isWarnEnabled())\n                        log.warn(mbr + \" already present; returning existing view \" + gms.view);\n                    join_rsp=new JoinRsp(new View(gms.view_id, gms.members.getMembers()), gms.getDigest());\n                }\n                gms.sendJoinResponse(join_rsp, mbr);\n                it.remove();\n            }\n        }\n\n        if(new_mbrs.isEmpty() && leaving_mbrs.isEmpty() && suspected_mbrs.isEmpty()) {\n            if(log.isTraceEnabled())\n                log.trace(\"found no members to add or remove, will not create new view\");\n            return;\n        }\n        \n        View new_view=gms.getNextView(new_mbrs, leaving_mbrs, suspected_mbrs);\n        gms.up(new Event(Event.PREPARE_VIEW,new_view));\n        gms.down(new Event(Event.PREPARE_VIEW,new_view));\n        \n        if(log.isDebugEnabled())\n            log.debug(\"new=\" + new_mbrs + \", suspected=\" + suspected_mbrs + \", leaving=\" + leaving_mbrs +\n                    \", new view: \" + new_view);\n             \n        JoinRsp join_rsp=null;\n        boolean hasJoiningMembers=!new_mbrs.isEmpty();\n        try {            \n            boolean successfulFlush = gms.startFlush(new_view);\n            if(!successfulFlush && hasJoiningMembers){\n                //see http://jira.jboss.org/jira/browse/JGRP-759\n                //We should NOT send back a join response if the flush fails. \n                //The joiner should block until the previous FLUSH completed\n                //we still have to send potential leave responses\n                sendLeaveResponses(leaving_mbrs); \n                //but let the joining client timeout and send another join request\n                return;\n            }\n            \n            // we cannot garbage collect during joining a new member *if* we're the only member\n            // Example: {A}, B joins, after returning JoinRsp to B, A garbage collects messages higher than those\n            // in the digest returned to the client, so the client will *not* be able to ask for retransmission\n            // of those messages if he misses them            \n            if(hasJoiningMembers) {\n                gms.getDownProtocol().down(new Event(Event.SUSPEND_STABLE, MAX_SUSPEND_TIMEOUT));\n                Digest tmp=gms.getDigest(); // get existing digest\n                MutableDigest join_digest=null;\n                if(tmp == null){\n                    log.error(\"received null digest from GET_DIGEST: will cause JOIN to fail\");\n                }\n                else {\n                    // create a new digest, which contains the new member\n                    join_digest=new MutableDigest(tmp.size() + new_mbrs.size());\n                    join_digest.add(tmp); // add the existing digest to the new one\n                    for(Address member:new_mbrs)\n                        join_digest.add(member, 0, 0); // ... and add the new members. their first seqno will be 1\n                }\n                join_rsp=new JoinRsp(new_view, join_digest != null? join_digest.copy() : null);\n            }\n\n            sendLeaveResponses(leaving_mbrs); // no-op if no leaving members                            \n            gms.castViewChangeWithDest(new_view, null,join_rsp,new_mbrs);                      \n        }\n        finally {\n            if(hasJoiningMembers)\n                gms.getDownProtocol().down(new Event(Event.RESUME_STABLE));\n            if(!joinAndStateTransferInitiated)\n                gms.stopFlush();\n            if(leaving) {\n                gms.initState(); // in case connect() is called again\n            }\n        }\n    }","commit_id":"a0babaf2a45380df3457dfe20cadbac6c3cbbed5","url":"https://github.com/belaban/JGroups"},{"original_method":"private void onFlushCompleted(Address address, Digest digest) {\n        boolean flushCompleted = false;\n        Message msg = null;\n        boolean needsReconciliationPhase = false;\n        synchronized(sharedLock){\n            flushCompletedMap.put(address, digest);\n            if(flushCompletedMap.size() >= flushMembers.size()){\n                flushCompleted = flushCompletedMap.keySet().containsAll(flushMembers);\n            }\n\n            if(log.isDebugEnabled())\n                log.debug(\"At \" + localAddress\n                          + \" FLUSH_COMPLETED from \"\n                          + address\n                          + \",completed \"\n                          + flushCompleted\n                          + \",flushCompleted \"\n                          + flushCompletedMap.keySet());\n\n            needsReconciliationPhase = enable_reconciliation && flushCompleted\n                                       && hasVirtualSynchronyGaps();\n            if(needsReconciliationPhase){\n\n                Digest d = findHighestSequences();\n                msg = new Message();\n                msg.setFlag(Message.OOB);\n                FlushHeader fh = new FlushHeader(FlushHeader.FLUSH_RECONCILE,\n                                                 currentViewId(),\n                                                 flushMembers);\n                reconcileOks.clear();\n                fh.addDigest(d);\n                msg.putHeader(getName(), fh);\n\n                if(log.isTraceEnabled())\n                    log.trace(\"Reconciling flush mebers due to virtual synchrony gap, digest is \" + d\n                              + \" flush members are \"\n                              + flushMembers);\n\n                flushCompletedMap.clear();\n            }\n        }\n        if(needsReconciliationPhase){\n            down_prot.down(new Event(Event.MSG, msg));\n        }else if(flushCompleted){\n            flush_promise.setResult(Boolean.TRUE);\n            if(log.isDebugEnabled())\n                log.debug(\"All FLUSH_COMPLETED received at \" + localAddress);\n        }\n    }","id":58488,"modified_method":"private void onFlushCompleted(Address address, Digest digest) {        \n        Message msg = null;\n        boolean needsReconciliationPhase = false;\n        synchronized(sharedLock){\n            flushCompletedMap.put(address, digest);\n            if(flushCompletedMap.size() >= flushMembers.size()){\n                flushCompleted = flushCompletedMap.keySet().containsAll(flushMembers);\n            }\n\n            if(log.isDebugEnabled())\n                log.debug(\"At \" + localAddress\n                          + \" FLUSH_COMPLETED from \"\n                          + address\n                          + \",completed \"\n                          + flushCompleted\n                          + \",flushCompleted \"\n                          + flushCompletedMap.keySet());\n\n            needsReconciliationPhase = enable_reconciliation && flushCompleted\n                                       && hasVirtualSynchronyGaps();\n            if(needsReconciliationPhase){\n\n                Digest d = findHighestSequences();\n                msg = new Message();\n                msg.setFlag(Message.OOB);\n                FlushHeader fh = new FlushHeader(FlushHeader.FLUSH_RECONCILE,\n                                                 currentViewId(),\n                                                 flushMembers);\n                reconcileOks.clear();\n                fh.addDigest(d);\n                msg.putHeader(getName(), fh);\n\n                if(log.isTraceEnabled())\n                    log.trace(\"Reconciling flush mebers due to virtual synchrony gap, digest is \" + d\n                              + \" flush members are \"\n                              + flushMembers);\n\n                flushCompletedMap.clear();\n            } else if (flushCompleted){\n                flushCompletedMap.clear();\n            }\n        }\n        if(needsReconciliationPhase){\n            down_prot.down(new Event(Event.MSG, msg));\n        }else if(flushCompleted){\n            flush_promise.setResult(Boolean.TRUE);\n            if(log.isDebugEnabled())\n                log.debug(\"All FLUSH_COMPLETED received at \" + localAddress);\n        }\n    }","commit_id":"a0babaf2a45380df3457dfe20cadbac6c3cbbed5","url":"https://github.com/belaban/JGroups"},{"original_method":"private void onStopFlush() {        \n        if(stats){\n            long stopFlushTime = System.currentTimeMillis();\n            totalTimeInFlush += (stopFlushTime - startFlushTime);\n            if(numberOfFlushes > 0){\n                averageFlushDuration = totalTimeInFlush / (double) numberOfFlushes;\n            }\n        }\n                            \n        synchronized(sharedLock){                     \n            flushCompletedMap.clear();                     \n            flushMembers.clear();\n            suspected.clear();\n            flushCoordinator = null;\n            allowMessagesToPassUp = true;\n        }\n\n        if(log.isDebugEnabled())\n            log.debug(\"At \" + localAddress\n                      + \" received STOP_FLUSH, unblocking FLUSH.down() and sending UNBLOCK up\");\n\n        synchronized(blockMutex){\n            isBlockingFlushDown = false;\n            blockMutex.notifyAll();\n        }\n                \n        if(sentUnblock.compareAndSet(false,true)){\n            //ensures that we do not repeat unblock event            \n            sendUnBlockUpToChannel();                  \n        }                \n        flushInProgress.set(false);\n    }","id":58489,"modified_method":"private void onStopFlush() {        \n        if(stats){\n            long stopFlushTime = System.currentTimeMillis();\n            totalTimeInFlush += (stopFlushTime - startFlushTime);\n            if(numberOfFlushes > 0){\n                averageFlushDuration = totalTimeInFlush / (double) numberOfFlushes;\n            }\n        }\n                            \n        synchronized(sharedLock){                     \n            flushCompletedMap.clear();                     \n            flushMembers.clear();\n            suspected.clear();\n            flushCoordinator = null;\n            allowMessagesToPassUp = true;\n            flushCompleted = false;\n        }\n\n        if(log.isDebugEnabled())\n            log.debug(\"At \" + localAddress\n                      + \" received STOP_FLUSH, unblocking FLUSH.down() and sending UNBLOCK up\");\n\n        synchronized(blockMutex){\n            isBlockingFlushDown = false;\n            blockMutex.notifyAll();\n        }\n                \n        if(sentUnblock.compareAndSet(false,true)){\n            //ensures that we do not repeat unblock event            \n            sendUnBlockUpToChannel();                  \n        }                \n        flushInProgress.set(false);\n    }","commit_id":"a0babaf2a45380df3457dfe20cadbac6c3cbbed5","url":"https://github.com/belaban/JGroups"},{"original_method":"private void onStartFlush(Address flushStarter, FlushHeader fh) {                           \n        if(stats){\n            startFlushTime = System.currentTimeMillis();\n            numberOfFlushes += 1;\n        }        \n        synchronized(sharedLock){\n            flushCoordinator = flushStarter;\n            flushMembers.clear();\n            if(fh.flushParticipants != null){\n                flushMembers.addAll(fh.flushParticipants);\n            }\n            flushMembers.removeAll(suspected);            \n        }\n        \n        if(sentBlock.compareAndSet(false, true)){\n            //ensures that we do not repeat block event\n            //and that we do not send block event to non participants            \n            sendBlockUpToChannel();            \n            synchronized(blockMutex){\n                isBlockingFlushDown = true;\n            }\n        }\n        else{\n            if(log.isDebugEnabled())\n                log.debug(\"Received START_FLUSH at \" + localAddress + \" but not sending BLOCK up\");\n        }                        \n            \n        Digest digest = (Digest) down_prot.down(new Event(Event.GET_DIGEST));\n        FlushHeader fhr = new FlushHeader(FlushHeader.FLUSH_COMPLETED, fh.viewID);\n        fhr.addDigest(digest);            \n        \n        Message msg = new Message(flushStarter);\n        msg.putHeader(getName(), fhr);\n        down_prot.down(new Event(Event.MSG, msg));\n        if(log.isDebugEnabled())\n            log.debug(\"Received START_FLUSH at \" + localAddress\n                      + \" responded with FLUSH_COMPLETED\");\n              \n    }","id":58490,"modified_method":"private void onStartFlush(Address flushStarter, FlushHeader fh) {                           \n        if(stats){\n            startFlushTime = System.currentTimeMillis();\n            numberOfFlushes += 1;\n        }        \n        synchronized(sharedLock){\n            flushCoordinator = flushStarter;\n            flushMembers.clear();\n            if(fh.flushParticipants != null){\n                flushMembers.addAll(fh.flushParticipants);\n            }\n            flushMembers.removeAll(suspected);            \n        }\n        \n        if(sentBlock.compareAndSet(false, true)){\n            //ensures that we do not repeat block event\n            //and that we do not send block event to non participants            \n            sendBlockUpToChannel();            \n            synchronized(blockMutex){\n                isBlockingFlushDown = true;\n            }\n        }\n        else{\n            if(log.isDebugEnabled())\n                log.debug(\"Received START_FLUSH at \" + localAddress + \" but not sending BLOCK up\");\n        }                        \n            \n        Digest digest = (Digest) down_prot.down(new Event(Event.GET_DIGEST));\n        FlushHeader fhr = new FlushHeader(FlushHeader.FLUSH_COMPLETED, fh.viewID);\n        fhr.addDigest(digest);            \n        \n        Message msg = new Message(flushStarter);\n        msg.putHeader(getName(), fhr);\n        down_prot.down(new Event(Event.MSG, msg));\n        if(log.isDebugEnabled())\n            log.debug(\"Received START_FLUSH at \" + localAddress\n                      + \" responded with FLUSH_COMPLETED to \" + flushStarter );\n              \n    }","commit_id":"a0babaf2a45380df3457dfe20cadbac6c3cbbed5","url":"https://github.com/belaban/JGroups"},{"original_method":"private void handleStartFlush(Message msg, FlushHeader fh) {                \n        Address flushRequester = msg.getSrc();\n        Address abortFlushCoordinator = null;\n        Address proceedFlushCoordinator = null;        \n        \n        boolean proceed = flushInProgress.compareAndSet(false, true);\n        boolean sendRejectFlushMessage = false;\n        synchronized (sharedLock) {                               \n            if(proceed){\n                flushCoordinator = flushRequester;\n            }else{\n                if(flushCoordinator != null){\n                    if(flushRequester.compareTo(flushCoordinator) < 0){                                                           \n                        abortFlushCoordinator = flushCoordinator;\n                        flushCoordinator = flushRequester;\n                        proceedFlushCoordinator = flushRequester; \n                        sendRejectFlushMessage = true;\n                    }else if(flushRequester.compareTo(flushCoordinator) > 0){                                        \n                        abortFlushCoordinator = flushRequester;\n                        proceedFlushCoordinator = flushCoordinator;\n                        sendRejectFlushMessage = true;\n                    }else{                    \n                        if(log.isDebugEnabled()){\n                            log.debug(\"Rejecting flush at \" + localAddress + \", previous flush has to finish first\");\n                        } \n                        abortFlushCoordinator = flushRequester;\n                        proceedFlushCoordinator = flushCoordinator;\n                        sendRejectFlushMessage = false;\n                    }\n                }else{\n                    return;\n                }\n            }\n        }\n        if(proceed){          \n            onStartFlush(flushRequester, fh);\n        } else{  \n            if(log.isDebugEnabled()){\n                log.debug(\"Rejecting flush at \" + localAddress\n                          + \" to flush requester \"\n                          + abortFlushCoordinator\n                          + \" coordinator is \"\n                          + proceedFlushCoordinator);\n            }            \n            if(sendRejectFlushMessage){\n                rejectFlush(fh.viewID, abortFlushCoordinator);\n            }\n            onStartFlush(proceedFlushCoordinator, fh);\n        }\n    }","id":58491,"modified_method":"private void handleStartFlush(Message msg, FlushHeader fh) {                \n        Address flushRequester = msg.getSrc();\n        Address abortFlushCoordinator = null;\n        Address proceedFlushCoordinator = null;        \n        \n        boolean proceed = flushInProgress.compareAndSet(false, true);        \n        synchronized (sharedLock) {                               \n            if(proceed){\n                flushCoordinator = flushRequester;\n            }else{                \n                if(flushCoordinator != null){                    \n                    if(flushCompleted){\n                        abortFlushCoordinator = flushRequester;\n                    }\n                    else if(flushRequester.compareTo(flushCoordinator) < 0){                                                           \n                        abortFlushCoordinator = flushCoordinator;\n                        flushCoordinator = flushRequester;\n                        proceedFlushCoordinator = flushRequester;                         \n                    }else if(flushRequester.compareTo(flushCoordinator) > 0){                                        \n                        abortFlushCoordinator = flushRequester;\n                        proceedFlushCoordinator = flushCoordinator;                        \n                    }else{                    \n                        if(log.isDebugEnabled()){\n                            log.debug(\"Rejecting flush at \" + localAddress + \", previous flush has to finish first\");\n                        } \n                        abortFlushCoordinator = flushRequester;                                             \n                    }\n                }else{\n                    return;\n                }\n            }\n        }\n        if(proceed){          \n            onStartFlush(flushRequester, fh);\n        } else{  \n            if(log.isDebugEnabled()){\n                log.debug(\"Rejecting flush at \" + localAddress\n                          + \" to flush requester \"\n                          + abortFlushCoordinator\n                          + \" coordinator is \"\n                          + proceedFlushCoordinator);\n            }                        \n            rejectFlush(fh.viewID, abortFlushCoordinator);    \n            if(proceedFlushCoordinator != null)\n                onStartFlush(proceedFlushCoordinator, fh);\n        }\n    }","commit_id":"a0babaf2a45380df3457dfe20cadbac6c3cbbed5","url":"https://github.com/belaban/JGroups"},{"original_method":"public void handleMembershipChange(Collection<Request> requests) {\n        boolean joinAndStateTransferInitiated=false;\n        Collection<Address> new_mbrs=new LinkedHashSet<Address>(requests.size());\n        Collection<Address> suspected_mbrs=new LinkedHashSet<Address>(requests.size());\n        Collection<Address> leaving_mbrs=new LinkedHashSet<Address>(requests.size());\n\n        for(Request req: requests) {\n            switch(req.type) {\n                case Request.JOIN:\n                    new_mbrs.add(req.mbr);\n                    break;\n                case Request.JOIN_WITH_STATE_TRANSFER:\n                    new_mbrs.add(req.mbr);\n                    joinAndStateTransferInitiated=true;\n                    break;\n                case Request.LEAVE:\n                    if(req.suspected)\n                        suspected_mbrs.add(req.mbr);\n                    else\n                        leaving_mbrs.add(req.mbr);\n                    break;\n                case Request.SUSPECT:\n                    suspected_mbrs.add(req.mbr);\n                    break;\n            }\n        }\n\n        new_mbrs.remove(gms.local_addr); // remove myself - cannot join myself (already joined)        \n\n        if(gms.view_id == null) {\n            // we're probably not the coord anymore (we just left ourselves), let someone else do it\n            // (client will retry when it doesn't get a response)\n            if(log.isDebugEnabled())\n                log.debug(\"gms.view_id is null, I'm not the coordinator anymore (leaving=\" + leaving +\n                        \"); the new coordinator will handle the leave request\");\n            return;\n        }\n\n        Vector<Address> current_members=gms.members.getMembers();\n        leaving_mbrs.retainAll(current_members); // remove all elements of leaving_mbrs which are not current members\n        if(suspected_mbrs.remove(gms.local_addr)) {\n            if(log.isWarnEnabled()) log.warn(\"I am the coord and I'm being suspected -- will probably leave shortly\");\n        }\n        suspected_mbrs.retainAll(current_members); // remove all elements of suspected_mbrs which are not current members\n\n        // for the members that have already joined, return the current digest and membership\n        for(Iterator<Address> it=new_mbrs.iterator(); it.hasNext();) {\n            Address mbr=it.next();\n            if(gms.members.contains(mbr)) { // already joined: return current digest and membership\n                JoinRsp join_rsp;\n                if(gms.reject_join_from_existing_member) {\n                    join_rsp=new JoinRsp(\"member \" + mbr + \" is already part of the group, JOIN request is rejected\");\n                }\n                else {\n                    if(log.isWarnEnabled())\n                        log.warn(mbr + \" already present; returning existing view \" + gms.view);\n                    join_rsp=new JoinRsp(new View(gms.view_id, gms.members.getMembers()), gms.getDigest());\n                }\n                gms.sendJoinResponse(join_rsp, mbr);\n                it.remove();\n            }\n        }\n\n        if(new_mbrs.isEmpty() && leaving_mbrs.isEmpty() && suspected_mbrs.isEmpty()) {\n            if(log.isTraceEnabled())\n                log.trace(\"found no members to add or remove, will not create new view\");\n            return;\n        }\n        \n        View new_view=gms.getNextView(new_mbrs, leaving_mbrs, suspected_mbrs);\n        gms.up(new Event(Event.PREPARE_VIEW,new_view));\n        gms.down(new Event(Event.PREPARE_VIEW,new_view));\n        \n        if(log.isDebugEnabled())\n            log.debug(\"new=\" + new_mbrs + \", suspected=\" + suspected_mbrs + \", leaving=\" + leaving_mbrs +\n                    \", new view: \" + new_view);\n             \n        JoinRsp join_rsp=null;\n        boolean hasJoiningMembers=!new_mbrs.isEmpty();\n        try {            \n            gms.startFlush(new_view);\n            \n            // we cannot garbage collect during joining a new member *if* we're the only member\n            // Example: {A}, B joins, after returning JoinRsp to B, A garbage collects messages higher than those\n            // in the digest returned to the client, so the client will *not* be able to ask for retransmission\n            // of those messages if he misses them            \n            if(hasJoiningMembers) {\n                gms.getDownProtocol().down(new Event(Event.SUSPEND_STABLE, MAX_SUSPEND_TIMEOUT));\n                Digest tmp=gms.getDigest(); // get existing digest\n                MutableDigest join_digest=null;\n                if(tmp == null){\n                    log.error(\"received null digest from GET_DIGEST: will cause JOIN to fail\");\n                }\n                else {\n                    // create a new digest, which contains the new member\n                    join_digest=new MutableDigest(tmp.size() + new_mbrs.size());\n                    join_digest.add(tmp); // add the existing digest to the new one\n                    for(Address member:new_mbrs)\n                        join_digest.add(member, 0, 0); // ... and add the new members. their first seqno will be 1\n                }\n                join_rsp=new JoinRsp(new_view, join_digest != null? join_digest.copy() : null);\n            }\n\n            sendLeaveResponses(leaving_mbrs); // no-op if no leaving members                            \n            gms.castViewChangeWithDest(new_view, null,join_rsp,new_mbrs);                      \n        }\n        finally {\n            if(hasJoiningMembers)\n                gms.getDownProtocol().down(new Event(Event.RESUME_STABLE));\n            if(!joinAndStateTransferInitiated)\n                gms.stopFlush();\n            if(leaving) {\n                gms.initState(); // in case connect() is called again\n            }\n        }\n    }","id":58492,"modified_method":"public void handleMembershipChange(Collection<Request> requests) {\n        boolean joinAndStateTransferInitiated=false;\n        Collection<Address> new_mbrs=new LinkedHashSet<Address>(requests.size());\n        Collection<Address> suspected_mbrs=new LinkedHashSet<Address>(requests.size());\n        Collection<Address> leaving_mbrs=new LinkedHashSet<Address>(requests.size());\n\n        for(Request req: requests) {\n            switch(req.type) {\n                case Request.JOIN:\n                    new_mbrs.add(req.mbr);\n                    break;\n                case Request.JOIN_WITH_STATE_TRANSFER:\n                    new_mbrs.add(req.mbr);\n                    joinAndStateTransferInitiated=true;\n                    break;\n                case Request.LEAVE:\n                    if(req.suspected)\n                        suspected_mbrs.add(req.mbr);\n                    else\n                        leaving_mbrs.add(req.mbr);\n                    break;\n                case Request.SUSPECT:\n                    suspected_mbrs.add(req.mbr);\n                    break;\n            }\n        }\n\n        new_mbrs.remove(gms.local_addr); // remove myself - cannot join myself (already joined)        \n\n        if(gms.view_id == null) {\n            // we're probably not the coord anymore (we just left ourselves), let someone else do it\n            // (client will retry when it doesn't get a response)\n            if(log.isDebugEnabled())\n                log.debug(\"gms.view_id is null, I'm not the coordinator anymore (leaving=\" + leaving +\n                        \"); the new coordinator will handle the leave request\");\n            return;\n        }\n\n        Vector<Address> current_members=gms.members.getMembers();\n        leaving_mbrs.retainAll(current_members); // remove all elements of leaving_mbrs which are not current members\n        if(suspected_mbrs.remove(gms.local_addr)) {\n            if(log.isWarnEnabled()) log.warn(\"I am the coord and I'm being suspected -- will probably leave shortly\");\n        }\n        suspected_mbrs.retainAll(current_members); // remove all elements of suspected_mbrs which are not current members\n\n        // for the members that have already joined, return the current digest and membership\n        for(Iterator<Address> it=new_mbrs.iterator(); it.hasNext();) {\n            Address mbr=it.next();\n            if(gms.members.contains(mbr)) { // already joined: return current digest and membership\n                JoinRsp join_rsp;\n                if(gms.reject_join_from_existing_member) {\n                    join_rsp=new JoinRsp(\"member \" + mbr + \" is already part of the group, JOIN request is rejected\");\n                }\n                else {\n                    if(log.isWarnEnabled())\n                        log.warn(mbr + \" already present; returning existing view \" + gms.view);\n                    join_rsp=new JoinRsp(new View(gms.view_id, gms.members.getMembers()), gms.getDigest());\n                }\n                gms.sendJoinResponse(join_rsp, mbr);\n                it.remove();\n            }\n        }\n\n        if(new_mbrs.isEmpty() && leaving_mbrs.isEmpty() && suspected_mbrs.isEmpty()) {\n            if(log.isTraceEnabled())\n                log.trace(\"found no members to add or remove, will not create new view\");\n            return;\n        }\n        \n        View new_view=gms.getNextView(new_mbrs, leaving_mbrs, suspected_mbrs);\n        gms.up(new Event(Event.PREPARE_VIEW,new_view));\n        gms.down(new Event(Event.PREPARE_VIEW,new_view));\n        \n        if(log.isDebugEnabled())\n            log.debug(\"new=\" + new_mbrs + \", suspected=\" + suspected_mbrs + \", leaving=\" + leaving_mbrs +\n                    \", new view: \" + new_view);\n             \n        JoinRsp join_rsp=null;\n        boolean hasJoiningMembers=!new_mbrs.isEmpty();\n        try {            \n            boolean successfulFlush = gms.startFlush(new_view);\n            if(!successfulFlush && hasJoiningMembers){\n                //see http://jira.jboss.org/jira/browse/JGRP-759\n                //We should NOT send back a join response if the flush fails. \n                //The joiner should block until the previous FLUSH completed\n                //we still have to send potential leave responses\n                sendLeaveResponses(leaving_mbrs); \n                //but let the joining client timeout and send another join request\n                return;\n            }\n            \n            // we cannot garbage collect during joining a new member *if* we're the only member\n            // Example: {A}, B joins, after returning JoinRsp to B, A garbage collects messages higher than those\n            // in the digest returned to the client, so the client will *not* be able to ask for retransmission\n            // of those messages if he misses them            \n            if(hasJoiningMembers) {\n                gms.getDownProtocol().down(new Event(Event.SUSPEND_STABLE, MAX_SUSPEND_TIMEOUT));\n                Digest tmp=gms.getDigest(); // get existing digest\n                MutableDigest join_digest=null;\n                if(tmp == null){\n                    log.error(\"received null digest from GET_DIGEST: will cause JOIN to fail\");\n                }\n                else {\n                    // create a new digest, which contains the new member\n                    join_digest=new MutableDigest(tmp.size() + new_mbrs.size());\n                    join_digest.add(tmp); // add the existing digest to the new one\n                    for(Address member:new_mbrs)\n                        join_digest.add(member, 0, 0); // ... and add the new members. their first seqno will be 1\n                }\n                join_rsp=new JoinRsp(new_view, join_digest != null? join_digest.copy() : null);\n            }\n\n            sendLeaveResponses(leaving_mbrs); // no-op if no leaving members                            \n            gms.castViewChangeWithDest(new_view, null,join_rsp,new_mbrs);                      \n        }\n        finally {\n            if(hasJoiningMembers)\n                gms.getDownProtocol().down(new Event(Event.RESUME_STABLE));\n            if(!joinAndStateTransferInitiated)\n                gms.stopFlush();\n            if(leaving) {\n                gms.initState(); // in case connect() is called again\n            }\n        }\n    }","commit_id":"db17e32c107bcd2d822d79cf5fdd4573cf7c709a","url":"https://github.com/belaban/JGroups"},{"original_method":"private void onFlushCompleted(Address address, Digest digest) {\n        boolean flushCompleted = false;\n        Message msg = null;\n        boolean needsReconciliationPhase = false;\n        synchronized(sharedLock){\n            flushCompletedMap.put(address, digest);\n            if(flushCompletedMap.size() >= flushMembers.size()){\n                flushCompleted = flushCompletedMap.keySet().containsAll(flushMembers);\n            }\n\n            if(log.isDebugEnabled())\n                log.debug(\"At \" + localAddress\n                          + \" FLUSH_COMPLETED from \"\n                          + address\n                          + \",completed \"\n                          + flushCompleted\n                          + \",flushCompleted \"\n                          + flushCompletedMap.keySet());\n\n            needsReconciliationPhase = enable_reconciliation && flushCompleted\n                                       && hasVirtualSynchronyGaps();\n            if(needsReconciliationPhase){\n\n                Digest d = findHighestSequences();\n                msg = new Message();\n                msg.setFlag(Message.OOB);\n                FlushHeader fh = new FlushHeader(FlushHeader.FLUSH_RECONCILE,\n                                                 currentViewId(),\n                                                 flushMembers);\n                reconcileOks.clear();\n                fh.addDigest(d);\n                msg.putHeader(getName(), fh);\n\n                if(log.isTraceEnabled())\n                    log.trace(\"Reconciling flush mebers due to virtual synchrony gap, digest is \" + d\n                              + \" flush members are \"\n                              + flushMembers);\n\n                flushCompletedMap.clear();\n            }\n        }\n        if(needsReconciliationPhase){\n            down_prot.down(new Event(Event.MSG, msg));\n        }else if(flushCompleted){\n            flush_promise.setResult(Boolean.TRUE);\n            if(log.isDebugEnabled())\n                log.debug(\"All FLUSH_COMPLETED received at \" + localAddress);\n        }\n    }","id":58493,"modified_method":"private void onFlushCompleted(Address address, Digest digest) {        \n        Message msg = null;\n        boolean needsReconciliationPhase = false;\n        synchronized(sharedLock){\n            flushCompletedMap.put(address, digest);\n            if(flushCompletedMap.size() >= flushMembers.size()){\n                flushCompleted = flushCompletedMap.keySet().containsAll(flushMembers);\n            }\n\n            if(log.isDebugEnabled())\n                log.debug(\"At \" + localAddress\n                          + \" FLUSH_COMPLETED from \"\n                          + address\n                          + \",completed \"\n                          + flushCompleted\n                          + \",flushCompleted \"\n                          + flushCompletedMap.keySet());\n\n            needsReconciliationPhase = enable_reconciliation && flushCompleted\n                                       && hasVirtualSynchronyGaps();\n            if(needsReconciliationPhase){\n\n                Digest d = findHighestSequences();\n                msg = new Message();\n                msg.setFlag(Message.OOB);\n                FlushHeader fh = new FlushHeader(FlushHeader.FLUSH_RECONCILE,\n                                                 currentViewId(),\n                                                 flushMembers);\n                reconcileOks.clear();\n                fh.addDigest(d);\n                msg.putHeader(getName(), fh);\n\n                if(log.isTraceEnabled())\n                    log.trace(\"Reconciling flush mebers due to virtual synchrony gap, digest is \" + d\n                              + \" flush members are \"\n                              + flushMembers);\n\n                flushCompletedMap.clear();\n            } else if (flushCompleted){\n                flushCompletedMap.clear();\n            }\n        }\n        if(needsReconciliationPhase){\n            down_prot.down(new Event(Event.MSG, msg));\n        }else if(flushCompleted){\n            flush_promise.setResult(Boolean.TRUE);\n            if(log.isDebugEnabled())\n                log.debug(\"All FLUSH_COMPLETED received at \" + localAddress);\n        }\n    }","commit_id":"db17e32c107bcd2d822d79cf5fdd4573cf7c709a","url":"https://github.com/belaban/JGroups"},{"original_method":"private void onStartFlush(Address flushStarter, FlushHeader fh) {                           \n        if(stats){\n            startFlushTime = System.currentTimeMillis();\n            numberOfFlushes += 1;\n        }        \n        synchronized(sharedLock){\n            flushCoordinator = flushStarter;\n            flushMembers.clear();\n            if(fh.flushParticipants != null){\n                flushMembers.addAll(fh.flushParticipants);\n            }\n            flushMembers.removeAll(suspected);            \n        }\n        \n        if(sentBlock.compareAndSet(false, true)){\n            //ensures that we do not repeat block event\n            //and that we do not send block event to non participants            \n            sendBlockUpToChannel();            \n            synchronized(blockMutex){\n                isBlockingFlushDown = true;\n            }\n        }\n        else{\n            if(log.isDebugEnabled())\n                log.debug(\"Received START_FLUSH at \" + localAddress + \" but not sending BLOCK up\");\n        }                        \n            \n        Digest digest = (Digest) down_prot.down(new Event(Event.GET_DIGEST));\n        FlushHeader fhr = new FlushHeader(FlushHeader.FLUSH_COMPLETED, fh.viewID);\n        fhr.addDigest(digest);            \n        \n        Message msg = new Message(flushStarter);\n        msg.putHeader(getName(), fhr);\n        down_prot.down(new Event(Event.MSG, msg));\n        if(log.isDebugEnabled())\n            log.debug(\"Received START_FLUSH at \" + localAddress\n                      + \" responded with FLUSH_COMPLETED\");\n              \n    }","id":58494,"modified_method":"private void onStartFlush(Address flushStarter, FlushHeader fh) {                           \n        if(stats){\n            startFlushTime = System.currentTimeMillis();\n            numberOfFlushes += 1;\n        }        \n        synchronized(sharedLock){\n            flushCoordinator = flushStarter;\n            flushMembers.clear();\n            if(fh.flushParticipants != null){\n                flushMembers.addAll(fh.flushParticipants);\n            }\n            flushMembers.removeAll(suspected);            \n        }\n        \n        if(sentBlock.compareAndSet(false, true)){\n            //ensures that we do not repeat block event\n            //and that we do not send block event to non participants            \n            sendBlockUpToChannel();            \n            synchronized(blockMutex){\n                isBlockingFlushDown = true;\n            }\n        }\n        else{\n            if(log.isDebugEnabled())\n                log.debug(\"Received START_FLUSH at \" + localAddress + \" but not sending BLOCK up\");\n        }                        \n            \n        Digest digest = (Digest) down_prot.down(new Event(Event.GET_DIGEST));\n        FlushHeader fhr = new FlushHeader(FlushHeader.FLUSH_COMPLETED, fh.viewID);\n        fhr.addDigest(digest);            \n        \n        Message msg = new Message(flushStarter);\n        msg.putHeader(getName(), fhr);\n        down_prot.down(new Event(Event.MSG, msg));\n        if(log.isDebugEnabled())\n            log.debug(\"Received START_FLUSH at \" + localAddress\n                      + \" responded with FLUSH_COMPLETED to \" + flushStarter );\n              \n    }","commit_id":"db17e32c107bcd2d822d79cf5fdd4573cf7c709a","url":"https://github.com/belaban/JGroups"},{"original_method":"private void onStopFlush() {        \n        if(stats){\n            long stopFlushTime = System.currentTimeMillis();\n            totalTimeInFlush += (stopFlushTime - startFlushTime);\n            if(numberOfFlushes > 0){\n                averageFlushDuration = totalTimeInFlush / (double) numberOfFlushes;\n            }\n        }\n                            \n        synchronized(sharedLock){                     \n            flushCompletedMap.clear();                     \n            flushMembers.clear();\n            suspected.clear();\n            flushCoordinator = null;\n            allowMessagesToPassUp = true;\n        }\n\n        if(log.isDebugEnabled())\n            log.debug(\"At \" + localAddress\n                      + \" received STOP_FLUSH, unblocking FLUSH.down() and sending UNBLOCK up\");\n\n        synchronized(blockMutex){\n            isBlockingFlushDown = false;\n            blockMutex.notifyAll();\n        }\n                \n        if(sentUnblock.compareAndSet(false,true)){\n            //ensures that we do not repeat unblock event            \n            sendUnBlockUpToChannel();                  \n        }                \n        flushInProgress.set(false);\n    }","id":58495,"modified_method":"private void onStopFlush() {        \n        if(stats){\n            long stopFlushTime = System.currentTimeMillis();\n            totalTimeInFlush += (stopFlushTime - startFlushTime);\n            if(numberOfFlushes > 0){\n                averageFlushDuration = totalTimeInFlush / (double) numberOfFlushes;\n            }\n        }\n                            \n        synchronized(sharedLock){                     \n            flushCompletedMap.clear();                     \n            flushMembers.clear();\n            suspected.clear();\n            flushCoordinator = null;\n            allowMessagesToPassUp = true;\n            flushCompleted = false;\n        }\n\n        if(log.isDebugEnabled())\n            log.debug(\"At \" + localAddress\n                      + \" received STOP_FLUSH, unblocking FLUSH.down() and sending UNBLOCK up\");\n\n        synchronized(blockMutex){\n            isBlockingFlushDown = false;\n            blockMutex.notifyAll();\n        }\n                \n        if(sentUnblock.compareAndSet(false,true)){\n            //ensures that we do not repeat unblock event            \n            sendUnBlockUpToChannel();                  \n        }                \n        flushInProgress.set(false);\n    }","commit_id":"db17e32c107bcd2d822d79cf5fdd4573cf7c709a","url":"https://github.com/belaban/JGroups"},{"original_method":"private void handleStartFlush(Message msg, FlushHeader fh) {                \n        Address flushRequester = msg.getSrc();\n        Address abortFlushCoordinator = null;\n        Address proceedFlushCoordinator = null;        \n        \n        boolean proceed = flushInProgress.compareAndSet(false, true);\n        boolean sendRejectFlushMessage = false;\n        synchronized (sharedLock) {                               \n            if(proceed){\n                flushCoordinator = flushRequester;\n            }else{\n                if(flushCoordinator != null){\n                    if(flushRequester.compareTo(flushCoordinator) < 0){                                                           \n                        abortFlushCoordinator = flushCoordinator;\n                        flushCoordinator = flushRequester;\n                        proceedFlushCoordinator = flushRequester; \n                        sendRejectFlushMessage = true;\n                    }else if(flushRequester.compareTo(flushCoordinator) > 0){                                        \n                        abortFlushCoordinator = flushRequester;\n                        proceedFlushCoordinator = flushCoordinator;\n                        sendRejectFlushMessage = true;\n                    }else{                    \n                        if(log.isDebugEnabled()){\n                            log.debug(\"Rejecting flush at \" + localAddress + \", previous flush has to finish first\");\n                        } \n                        abortFlushCoordinator = flushRequester;\n                        proceedFlushCoordinator = flushCoordinator;\n                        sendRejectFlushMessage = false;\n                    }\n                }else{\n                    return;\n                }\n            }\n        }\n        if(proceed){          \n            onStartFlush(flushRequester, fh);\n        } else{  \n            if(log.isDebugEnabled()){\n                log.debug(\"Rejecting flush at \" + localAddress\n                          + \" to flush requester \"\n                          + abortFlushCoordinator\n                          + \" coordinator is \"\n                          + proceedFlushCoordinator);\n            }            \n            if(sendRejectFlushMessage){\n                rejectFlush(fh.viewID, abortFlushCoordinator);\n            }\n            onStartFlush(proceedFlushCoordinator, fh);\n        }\n    }","id":58496,"modified_method":"private void handleStartFlush(Message msg, FlushHeader fh) {                \n        Address flushRequester = msg.getSrc();\n        Address abortFlushCoordinator = null;\n        Address proceedFlushCoordinator = null;        \n        \n        boolean proceed = flushInProgress.compareAndSet(false, true);        \n        synchronized (sharedLock) {                               \n            if(proceed){\n                flushCoordinator = flushRequester;\n            }else{                \n                if(flushCoordinator != null){                    \n                    if(flushCompleted){\n                        abortFlushCoordinator = flushRequester;\n                    }\n                    else if(flushRequester.compareTo(flushCoordinator) < 0){                                                           \n                        abortFlushCoordinator = flushCoordinator;\n                        flushCoordinator = flushRequester;\n                        proceedFlushCoordinator = flushRequester;                         \n                    }else if(flushRequester.compareTo(flushCoordinator) > 0){                                        \n                        abortFlushCoordinator = flushRequester;\n                        proceedFlushCoordinator = flushCoordinator;                        \n                    }else{                    \n                        if(log.isDebugEnabled()){\n                            log.debug(\"Rejecting flush at \" + localAddress + \", previous flush has to finish first\");\n                        } \n                        abortFlushCoordinator = flushRequester;                                             \n                    }\n                }else{\n                    return;\n                }\n            }\n        }\n        if(proceed){          \n            onStartFlush(flushRequester, fh);\n        } else{  \n            if(log.isDebugEnabled()){\n                log.debug(\"Rejecting flush at \" + localAddress\n                          + \" to flush requester \"\n                          + abortFlushCoordinator\n                          + \" coordinator is \"\n                          + proceedFlushCoordinator);\n            }                        \n            rejectFlush(fh.viewID, abortFlushCoordinator);    \n            if(proceedFlushCoordinator != null)\n                onStartFlush(proceedFlushCoordinator, fh);\n        }\n    }","commit_id":"db17e32c107bcd2d822d79cf5fdd4573cf7c709a","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\r\n     * Starts the addrbook plug-in.\r\n     *\r\n     * @param bundleContext the <tt>BundleContext<\/tt> in which the addrbook\r\n     * plug-in is to be started\r\n     * @throws Exception if anything goes wrong while starting the addrbook\r\n     * plug-in\r\n     * @see BundleActivator#start(BundleContext)\r\n     */\r\n    public void start(BundleContext bundleContext)\r\n        throws Exception\r\n    {\r\n        String cssClassName;\r\n\r\n        if (OSUtils.IS_WINDOWS)\r\n        {\r\n            cssClassName\r\n                = \"net.java.sip.communicator.plugin.addrbook\"\r\n                    + \".msoutlook.MsOutlookAddrBookContactSourceService\";\r\n        }\r\n        else if (OSUtils.IS_MAC)\r\n        {\r\n            cssClassName\r\n                = \"net.java.sip.communicator.plugin.addrbook\"\r\n                    + \".macosx.MacOSXAddrBookContactSourceService\";\r\n        }\r\n        else\r\n            return;\r\n\r\n        try\r\n        {\r\n            css\r\n                = (ContactSourceService)\r\n                    Class.forName(cssClassName).newInstance();\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            logger.error(\"Failed to instantiate \" + cssClassName, ex);\r\n            return;\r\n        }\r\n        try\r\n        {\r\n            cssServiceRegistration\r\n                = bundleContext.registerService(\r\n                        ContactSourceService.class.getName(),\r\n                        css,\r\n                        null);\r\n        }\r\n        finally\r\n        {\r\n            if (cssServiceRegistration == null)\r\n            {\r\n                if (css instanceof AsyncContactSourceService)\r\n                    ((AsyncContactSourceService) css).stop();\r\n                css = null;\r\n            }\r\n        }\r\n    }","id":58497,"modified_method":"/**\r\n     * Starts the addrbook plug-in.\r\n     *\r\n     * @param bundleContext the <tt>BundleContext<\/tt> in which the addrbook\r\n     * plug-in is to be started\r\n     * @throws Exception if anything goes wrong while starting the addrbook\r\n     * plug-in\r\n     * @see BundleActivator#start(BundleContext)\r\n     */\r\n    public void start(BundleContext bundleContext)\r\n        throws Exception\r\n    {\r\n        AddrBookActivator.bundleContext = bundleContext;\r\n\r\n        bundleContext.registerService(\r\n                PhoneNumberI18nService.class.getName(),\r\n                new PhoneNumberI18nServiceImpl(),\r\n                null);\r\n\r\n        /* Register the ContactSourceService implementation (if any). */\r\n        String cssClassName;\r\n\r\n        if (OSUtils.IS_WINDOWS)\r\n        {\r\n            cssClassName\r\n                = \"net.java.sip.communicator.plugin.addrbook\"\r\n                    + \".msoutlook.MsOutlookAddrBookContactSourceService\";\r\n        }\r\n        else if (OSUtils.IS_MAC)\r\n        {\r\n            cssClassName\r\n                = \"net.java.sip.communicator.plugin.addrbook\"\r\n                    + \".macosx.MacOSXAddrBookContactSourceService\";\r\n        }\r\n        else\r\n            return;\r\n\r\n        try\r\n        {\r\n            css\r\n                = (ContactSourceService)\r\n                    Class.forName(cssClassName).newInstance();\r\n        }\r\n        catch (Exception ex)\r\n        {\r\n            logger.error(\"Failed to instantiate \" + cssClassName, ex);\r\n            return;\r\n        }\r\n        try\r\n        {\r\n            cssServiceRegistration\r\n                = bundleContext.registerService(\r\n                        ContactSourceService.class.getName(),\r\n                        css,\r\n                        null);\r\n        }\r\n        finally\r\n        {\r\n            if (cssServiceRegistration == null)\r\n            {\r\n                if (css instanceof AsyncContactSourceService)\r\n                    ((AsyncContactSourceService) css).stop();\r\n                css = null;\r\n            }\r\n        }\r\n    }","commit_id":"e9b0db5a09539277490785d76c9db62aec6f2d6b","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Gets the <tt>contactDetails<\/tt> to be set on a <tt>SourceContact<\/tt>\r\n     * which is to represent an <tt>ABPerson<\/tt> specified by the values of its\r\n     * {@link #ABPERSON_PROPERTIES}.\r\n     *\r\n     * @param values the values of the <tt>ABPERSON_PROPERTIES<\/tt> which\r\n     * represent the <tt>ABPerson<\/tt> to get the <tt>contactDetails<\/tt> of\r\n     * @return the <tt>contactDetails<\/tt> to be set on a <tt>SourceContact<\/tt>\r\n     * which is to represent the <tt>ABPerson<\/tt> specified by <tt>values<\/tt>\r\n     */\r\n    private List<ContactDetail> getContactDetails(Object[] values)\r\n    {\r\n        List<ContactDetail> contactDetails = new LinkedList<ContactDetail>();\r\n\r\n        for (int i = 0; i < CONTACT_DETAIL_PROPERTY_INDEXES.length; i++)\r\n        {\r\n            int property = CONTACT_DETAIL_PROPERTY_INDEXES[i];\r\n            Object value = values[property];\r\n\r\n            if (value instanceof String)\r\n            {\r\n                String stringValue = (String) value;\r\n\r\n                if (stringValue.length() != 0)\r\n                {\r\n                    contactDetails.add(\r\n                            setCapabilities(\r\n                                    new ContactDetail(stringValue),\r\n                                    property));\r\n                }\r\n            }\r\n            else if (value instanceof Object[])\r\n            {\r\n                for (Object subValue : (Object[]) value)\r\n                {\r\n                    if (subValue instanceof String)\r\n                    {\r\n                        String stringSubValue = (String) subValue;\r\n\r\n                        if (stringSubValue.length() != 0)\r\n                        {\r\n                            contactDetails.add(\r\n                                    setCapabilities(\r\n                                            new ContactDetail(stringSubValue),\r\n                                            property));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return contactDetails;\r\n    }","id":58498,"modified_method":"/**\r\n     * Gets the <tt>contactDetails<\/tt> to be set on a <tt>SourceContact<\/tt>\r\n     * which is to represent an <tt>ABPerson<\/tt> specified by the values of its\r\n     * {@link #ABPERSON_PROPERTIES}.\r\n     *\r\n     * @param values the values of the <tt>ABPERSON_PROPERTIES<\/tt> which\r\n     * represent the <tt>ABPerson<\/tt> to get the <tt>contactDetails<\/tt> of\r\n     * @return the <tt>contactDetails<\/tt> to be set on a <tt>SourceContact<\/tt>\r\n     * which is to represent the <tt>ABPerson<\/tt> specified by <tt>values<\/tt>\r\n     */\r\n    private List<ContactDetail> getContactDetails(Object[] values)\r\n    {\r\n        List<ContactDetail> contactDetails = new LinkedList<ContactDetail>();\r\n\r\n        for (int i = 0; i < CONTACT_DETAIL_PROPERTY_INDEXES.length; i++)\r\n        {\r\n            int property = CONTACT_DETAIL_PROPERTY_INDEXES[i];\r\n            Object value = values[property];\r\n\r\n            if (value instanceof String)\r\n            {\r\n                String stringValue = (String) value;\r\n\r\n                if (stringValue.length() != 0)\r\n                {\r\n                    if (kABPhoneProperty == property)\r\n                        stringValue = normalizePhoneNumber(stringValue);\r\n\r\n                    contactDetails.add(\r\n                            setCapabilities(\r\n                                    new ContactDetail(stringValue),\r\n                                    property));\r\n                }\r\n            }\r\n            else if (value instanceof Object[])\r\n            {\r\n                for (Object subValue : (Object[]) value)\r\n                {\r\n                    if (subValue instanceof String)\r\n                    {\r\n                        String stringSubValue = (String) subValue;\r\n\r\n                        if (stringSubValue.length() != 0)\r\n                        {\r\n                            if (kABPhoneProperty == property)\r\n                            {\r\n                                stringSubValue\r\n                                    = normalizePhoneNumber(stringSubValue);\r\n                            }\r\n\r\n                            contactDetails.add(\r\n                                    setCapabilities(\r\n                                            new ContactDetail(stringSubValue),\r\n                                            property));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return contactDetails;\r\n    }","commit_id":"e9b0db5a09539277490785d76c9db62aec6f2d6b","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Determines whether an <tt>ABPerson<\/tt> represented by the values of its\r\n     * {@link #ABPERSON_PROPERTIES} matches {@link #query}.\r\n     * \r\n     * @param values the values of the <tt>ABPERSON_PROPERTIES<\/tt> which\r\n     * represent the <tt>ABPerson<\/tt> to be determined whether it matches\r\n     * <tt>query<\/tt>\r\n     * @return <tt>true<\/tt> if the <tt>ABPerson<\/tt> represented by the\r\n     * specified <tt>values<\/tt> matches <tt>query<\/tt>; otherwise,\r\n     * <tt>false<\/tt>\r\n     */\r\n    private boolean matches(Object[] values)\r\n    {\r\n        for (Object value : values)\r\n        {\r\n            if (value instanceof String)\r\n            {\r\n                if (query.matcher((String) value).find())\r\n                    return true;\r\n            }\r\n            else if (value instanceof Object[])\r\n            {\r\n                for (Object subValue : (Object[]) value)\r\n                {\r\n                    if ((subValue instanceof String)\r\n                            && query.matcher((String) subValue).find())\r\n                        return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }","id":58499,"modified_method":"/**\r\n     * Determines whether an <tt>ABPerson<\/tt> represented by the values of its\r\n     * {@link #ABPERSON_PROPERTIES} matches {@link #query}.\r\n     * \r\n     * @param values the values of the <tt>ABPERSON_PROPERTIES<\/tt> which\r\n     * represent the <tt>ABPerson<\/tt> to be determined whether it matches\r\n     * <tt>query<\/tt>\r\n     * @return <tt>true<\/tt> if the <tt>ABPerson<\/tt> represented by the\r\n     * specified <tt>values<\/tt> matches <tt>query<\/tt>; otherwise,\r\n     * <tt>false<\/tt>\r\n     */\r\n    private boolean matches(Object[] values)\r\n    {\r\n        int property = 0;\r\n\r\n        for (Object value : values)\r\n        {\r\n            if (value instanceof String)\r\n            {\r\n                if (matches(property, (String) value))\r\n                    return true;\r\n            }\r\n            else if (value instanceof Object[])\r\n            {\r\n                for (Object subValue : (Object[]) value)\r\n                {\r\n                    if ((subValue instanceof String)\r\n                            && matches(property, (String) subValue))\r\n                        return true;\r\n                }\r\n            }\r\n            property++;\r\n        }\r\n        return false;\r\n    }","commit_id":"e9b0db5a09539277490785d76c9db62aec6f2d6b","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Notifies this <tt>MsOutlookAddrBookContactQuery<\/tt> about a specific\r\n     * <tt>MAPI_MAILUSER<\/tt>.\r\n     *\r\n     * @param iUnknown a pointer to an <tt>IUnknown<\/tt> instance for the\r\n     * <tt>MAPI_MAILUSER<\/tt> to notify about\r\n     * @return <tt>true<\/tt> if this <tt>MsOutlookAddrBookContactQuery<\/tt>\r\n     * is to continue being called; otherwise, <tt>false<\/tt>\r\n     * @throws MsOutlookMAPIHResultException if anything goes wrong while\r\n     * getting the properties of the specified <tt>MAPI_MAILUSER<\/tt>\r\n     */\r\n    private boolean onMailUser(long iUnknown)\r\n        throws MsOutlookMAPIHResultException\r\n    {\r\n        Object[] props\r\n            = IMAPIProp_GetProps(\r\n                    iUnknown,\r\n                    MAPI_MAILUSER_PROP_IDS,\r\n                    MAPI_UNICODE);\r\n        long objType\r\n            = (props[PR_OBJECT_TYPE] instanceof Long)\r\n                ? ((Long) props[PR_OBJECT_TYPE]).longValue()\r\n                : 0;\r\n\r\n        /*\r\n         * If we have results from the Contacts folder(s), don't read from the\r\n         * Address Book because there may be duplicates.\r\n         */\r\n        if ((MAPI_MAILUSER == objType) && (mapiMessageCount != 0))\r\n            return false;\r\n\r\n        boolean matches = false;\r\n\r\n        for (Object prop : props)\r\n        {\r\n            if ((prop instanceof String) && query.matcher((String) prop).find())\r\n            {\r\n                matches = true;\r\n                break;\r\n            }\r\n        }\r\n        if (matches)\r\n        {\r\n            List<Class<? extends OperationSet>> supportedOpSets\r\n                = new ArrayList<Class<? extends OperationSet>>(1);\r\n\r\n            supportedOpSets.add(OperationSetBasicTelephony.class);\r\n\r\n            List<ContactDetail> contactDetails\r\n                = new LinkedList<ContactDetail>();\r\n\r\n            for (int i = 0; i < CONTACT_DETAIL_PROP_INDEXES.length; i++)\r\n            {\r\n                Object prop = props[CONTACT_DETAIL_PROP_INDEXES[i]];\r\n\r\n                if (prop instanceof String)\r\n                {\r\n                    String stringProp = (String) prop;\r\n\r\n                    if (stringProp.length() != 0)\r\n                    {\r\n                        ContactDetail contactDetail\r\n                            = new ContactDetail(stringProp);\r\n\r\n                        contactDetail.setSupportedOpSets(supportedOpSets);\r\n                        contactDetails.add(contactDetail);\r\n                    }\r\n                }\r\n            }\r\n\r\n            AddrBookSourceContact sourceContact\r\n                = new AddrBookSourceContact(\r\n                        getContactSource(),\r\n                        (String) props[PR_DISPLAY_NAME],\r\n                        contactDetails);\r\n\r\n            if (MAPI_MESSAGE == objType)\r\n            {\r\n                ++mapiMessageCount;\r\n\r\n                try\r\n                {\r\n                    Object[] images\r\n                        = IMAPIProp_GetProps(\r\n                                iUnknown,\r\n                                new long[] { PR_ATTACHMENT_CONTACTPHOTO },\r\n                                0);\r\n                    Object image = images[0];\r\n\r\n                    if (image instanceof byte[])\r\n                        sourceContact.setImage((byte[]) image);\r\n                }\r\n                catch (MsOutlookMAPIHResultException ex)\r\n                {\r\n                    // Ignore it, the image isn't as vital as the SourceContact.\r\n                }\r\n            }\r\n\r\n            addQueryResult(sourceContact);\r\n        }\r\n        return (getStatus() == QUERY_IN_PROGRESS);\r\n    }","id":58500,"modified_method":"/**\r\n     * Notifies this <tt>MsOutlookAddrBookContactQuery<\/tt> about a specific\r\n     * <tt>MAPI_MAILUSER<\/tt>.\r\n     *\r\n     * @param iUnknown a pointer to an <tt>IUnknown<\/tt> instance for the\r\n     * <tt>MAPI_MAILUSER<\/tt> to notify about\r\n     * @return <tt>true<\/tt> if this <tt>MsOutlookAddrBookContactQuery<\/tt>\r\n     * is to continue being called; otherwise, <tt>false<\/tt>\r\n     * @throws MsOutlookMAPIHResultException if anything goes wrong while\r\n     * getting the properties of the specified <tt>MAPI_MAILUSER<\/tt>\r\n     */\r\n    private boolean onMailUser(long iUnknown)\r\n        throws MsOutlookMAPIHResultException\r\n    {\r\n        Object[] props\r\n            = IMAPIProp_GetProps(\r\n                    iUnknown,\r\n                    MAPI_MAILUSER_PROP_IDS,\r\n                    MAPI_UNICODE);\r\n        long objType\r\n            = (props[PR_OBJECT_TYPE] instanceof Long)\r\n                ? ((Long) props[PR_OBJECT_TYPE]).longValue()\r\n                : 0;\r\n\r\n        /*\r\n         * If we have results from the Contacts folder(s), don't read from the\r\n         * Address Book because there may be duplicates.\r\n         */\r\n        if ((MAPI_MAILUSER == objType) && (mapiMessageCount != 0))\r\n            return false;\r\n\r\n        int propIndex = 0;\r\n        boolean matches = false;\r\n\r\n        for (Object prop : props)\r\n        {\r\n            if ((prop instanceof String)\r\n                    && (query.matcher((String) prop).find()\r\n                            || (isPhoneNumber(propIndex)\r\n                                    && query\r\n                                            .matcher(\r\n                                                    normalizePhoneNumber(\r\n                                                            (String) prop))\r\n                                                .find())))\r\n            {\r\n                matches = true;\r\n                break;\r\n            }\r\n            propIndex++;\r\n        }\r\n        if (matches)\r\n        {\r\n            List<Class<? extends OperationSet>> supportedOpSets\r\n                = new ArrayList<Class<? extends OperationSet>>(1);\r\n\r\n            supportedOpSets.add(OperationSetBasicTelephony.class);\r\n\r\n            List<ContactDetail> contactDetails\r\n                = new LinkedList<ContactDetail>();\r\n\r\n            for (int i = 0; i < CONTACT_DETAIL_PROP_INDEXES.length; i++)\r\n            {\r\n                propIndex = CONTACT_DETAIL_PROP_INDEXES[i];\r\n\r\n                Object prop = props[propIndex];\r\n\r\n                if (prop instanceof String)\r\n                {\r\n                    String stringProp = (String) prop;\r\n\r\n                    if (stringProp.length() != 0)\r\n                    {\r\n                        if (isPhoneNumber(propIndex))\r\n                            stringProp = normalizePhoneNumber(stringProp);\r\n\r\n                        ContactDetail contactDetail\r\n                            = new ContactDetail(stringProp);\r\n\r\n                        contactDetail.setSupportedOpSets(supportedOpSets);\r\n                        contactDetails.add(contactDetail);\r\n                    }\r\n                }\r\n            }\r\n\r\n            AddrBookSourceContact sourceContact\r\n                = new AddrBookSourceContact(\r\n                        getContactSource(),\r\n                        (String) props[PR_DISPLAY_NAME],\r\n                        contactDetails);\r\n\r\n            if (MAPI_MESSAGE == objType)\r\n            {\r\n                ++mapiMessageCount;\r\n\r\n                try\r\n                {\r\n                    Object[] images\r\n                        = IMAPIProp_GetProps(\r\n                                iUnknown,\r\n                                new long[] { PR_ATTACHMENT_CONTACTPHOTO },\r\n                                0);\r\n                    Object image = images[0];\r\n\r\n                    if (image instanceof byte[])\r\n                        sourceContact.setImage((byte[]) image);\r\n                }\r\n                catch (MsOutlookMAPIHResultException ex)\r\n                {\r\n                    // Ignore it, the image isn't as vital as the SourceContact.\r\n                }\r\n            }\r\n\r\n            addQueryResult(sourceContact);\r\n        }\r\n        return (getStatus() == QUERY_IN_PROGRESS);\r\n    }","commit_id":"e9b0db5a09539277490785d76c9db62aec6f2d6b","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Determines whether a specific <tt>ABPerson<\/tt> property with a specific\r\n     * <tt>value<\/tt> matches the {@link #query} of this\r\n     * <tt>AsyncContactQuery<\/tt>.\r\n     *\r\n     * @param property the <tt>ABPerson<\/tt> property to check\r\n     * @param value the value of the <tt>property<\/tt> to check\r\n     * @return <tt>true<\/tt> if the specified <tt>value<\/tt> of the specified\r\n     * <tt>property<\/tt> matches the <tt>query<\/tt> of this\r\n     * <tt>AsyncContactQuery<\/tt>; otherwise, <tt>false<\/tt>\r\n     */\r\n    private boolean matches(int property, String value)\r\n    {\r\n        return\r\n            query.matcher(value).find()\r\n                    || ((kABPhoneProperty == property)\r\n                            && query\r\n                                    .matcher(normalizePhoneNumber(value))\r\n                                        .find());\r\n    }","id":58501,"modified_method":"/**\r\n     * Determines whether a specific <tt>ABPerson<\/tt> property with a specific\r\n     * <tt>value<\/tt> matches the {@link #query} of this\r\n     * <tt>AsyncContactQuery<\/tt>.\r\n     *\r\n     * @param property the <tt>ABPerson<\/tt> property to check\r\n     * @param value the value of the <tt>property<\/tt> to check\r\n     * @return <tt>true<\/tt> if the specified <tt>value<\/tt> of the specified\r\n     * <tt>property<\/tt> matches the <tt>query<\/tt> of this\r\n     * <tt>AsyncContactQuery<\/tt>; otherwise, <tt>false<\/tt>\r\n     */\r\n    private boolean matches(int property, String value)\r\n    {\r\n        return\r\n            query.matcher(value).find()\r\n                || ((kABPhoneProperty == property) && phoneNumberMatches(value));\r\n    }","commit_id":"c42acf53e0187a9a98dc95e12612d0338b7f0a54","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Notifies this <tt>MsOutlookAddrBookContactQuery<\/tt> about a specific\r\n     * <tt>MAPI_MAILUSER<\/tt>.\r\n     *\r\n     * @param iUnknown a pointer to an <tt>IUnknown<\/tt> instance for the\r\n     * <tt>MAPI_MAILUSER<\/tt> to notify about\r\n     * @return <tt>true<\/tt> if this <tt>MsOutlookAddrBookContactQuery<\/tt>\r\n     * is to continue being called; otherwise, <tt>false<\/tt>\r\n     * @throws MsOutlookMAPIHResultException if anything goes wrong while\r\n     * getting the properties of the specified <tt>MAPI_MAILUSER<\/tt>\r\n     */\r\n    private boolean onMailUser(long iUnknown)\r\n        throws MsOutlookMAPIHResultException\r\n    {\r\n        Object[] props\r\n            = IMAPIProp_GetProps(\r\n                    iUnknown,\r\n                    MAPI_MAILUSER_PROP_IDS,\r\n                    MAPI_UNICODE);\r\n        long objType\r\n            = (props[PR_OBJECT_TYPE] instanceof Long)\r\n                ? ((Long) props[PR_OBJECT_TYPE]).longValue()\r\n                : 0;\r\n\r\n        /*\r\n         * If we have results from the Contacts folder(s), don't read from the\r\n         * Address Book because there may be duplicates.\r\n         */\r\n        if ((MAPI_MAILUSER == objType) && (mapiMessageCount != 0))\r\n            return false;\r\n\r\n        int propIndex = 0;\r\n        boolean matches = false;\r\n\r\n        for (Object prop : props)\r\n        {\r\n            if ((prop instanceof String)\r\n                    && (query.matcher((String) prop).find()\r\n                            || (isPhoneNumber(propIndex)\r\n                                    && query\r\n                                            .matcher(\r\n                                                    normalizePhoneNumber(\r\n                                                            (String) prop))\r\n                                                .find())))\r\n            {\r\n                matches = true;\r\n                break;\r\n            }\r\n            propIndex++;\r\n        }\r\n        if (matches)\r\n        {\r\n            List<Class<? extends OperationSet>> supportedOpSets\r\n                = new ArrayList<Class<? extends OperationSet>>(1);\r\n\r\n            supportedOpSets.add(OperationSetBasicTelephony.class);\r\n\r\n            List<ContactDetail> contactDetails\r\n                = new LinkedList<ContactDetail>();\r\n\r\n            for (int i = 0; i < CONTACT_DETAIL_PROP_INDEXES.length; i++)\r\n            {\r\n                propIndex = CONTACT_DETAIL_PROP_INDEXES[i];\r\n\r\n                Object prop = props[propIndex];\r\n\r\n                if (prop instanceof String)\r\n                {\r\n                    String stringProp = (String) prop;\r\n\r\n                    if (stringProp.length() != 0)\r\n                    {\r\n                        if (isPhoneNumber(propIndex))\r\n                            stringProp = normalizePhoneNumber(stringProp);\r\n\r\n                        ContactDetail contactDetail\r\n                            = new ContactDetail(stringProp);\r\n\r\n                        contactDetail.setSupportedOpSets(supportedOpSets);\r\n                        contactDetails.add(contactDetail);\r\n                    }\r\n                }\r\n            }\r\n\r\n            AddrBookSourceContact sourceContact\r\n                = new AddrBookSourceContact(\r\n                        getContactSource(),\r\n                        (String) props[PR_DISPLAY_NAME],\r\n                        contactDetails);\r\n\r\n            if (MAPI_MESSAGE == objType)\r\n            {\r\n                ++mapiMessageCount;\r\n\r\n                try\r\n                {\r\n                    Object[] images\r\n                        = IMAPIProp_GetProps(\r\n                                iUnknown,\r\n                                new long[] { PR_ATTACHMENT_CONTACTPHOTO },\r\n                                0);\r\n                    Object image = images[0];\r\n\r\n                    if (image instanceof byte[])\r\n                        sourceContact.setImage((byte[]) image);\r\n                }\r\n                catch (MsOutlookMAPIHResultException ex)\r\n                {\r\n                    // Ignore it, the image isn't as vital as the SourceContact.\r\n                }\r\n            }\r\n\r\n            addQueryResult(sourceContact);\r\n        }\r\n        return (getStatus() == QUERY_IN_PROGRESS);\r\n    }","id":58502,"modified_method":"/**\r\n     * Notifies this <tt>MsOutlookAddrBookContactQuery<\/tt> about a specific\r\n     * <tt>MAPI_MAILUSER<\/tt>.\r\n     *\r\n     * @param iUnknown a pointer to an <tt>IUnknown<\/tt> instance for the\r\n     * <tt>MAPI_MAILUSER<\/tt> to notify about\r\n     * @return <tt>true<\/tt> if this <tt>MsOutlookAddrBookContactQuery<\/tt>\r\n     * is to continue being called; otherwise, <tt>false<\/tt>\r\n     * @throws MsOutlookMAPIHResultException if anything goes wrong while\r\n     * getting the properties of the specified <tt>MAPI_MAILUSER<\/tt>\r\n     */\r\n    private boolean onMailUser(long iUnknown)\r\n        throws MsOutlookMAPIHResultException\r\n    {\r\n        Object[] props\r\n            = IMAPIProp_GetProps(\r\n                    iUnknown,\r\n                    MAPI_MAILUSER_PROP_IDS,\r\n                    MAPI_UNICODE);\r\n        long objType\r\n            = (props[PR_OBJECT_TYPE] instanceof Long)\r\n                ? ((Long) props[PR_OBJECT_TYPE]).longValue()\r\n                : 0;\r\n\r\n        /*\r\n         * If we have results from the Contacts folder(s), don't read from the\r\n         * Address Book because there may be duplicates.\r\n         */\r\n        if ((MAPI_MAILUSER == objType) && (mapiMessageCount != 0))\r\n            return false;\r\n\r\n        int propIndex = 0;\r\n        boolean matches = false;\r\n\r\n        for (Object prop : props)\r\n        {\r\n            if ((prop instanceof String) && matches(propIndex, (String) prop))\r\n            {\r\n                matches = true;\r\n                break;\r\n            }\r\n            propIndex++;\r\n        }\r\n        if (matches)\r\n        {\r\n            List<Class<? extends OperationSet>> supportedOpSets\r\n                = new ArrayList<Class<? extends OperationSet>>(1);\r\n\r\n            supportedOpSets.add(OperationSetBasicTelephony.class);\r\n\r\n            List<ContactDetail> contactDetails\r\n                = new LinkedList<ContactDetail>();\r\n\r\n            for (int i = 0; i < CONTACT_DETAIL_PROP_INDEXES.length; i++)\r\n            {\r\n                propIndex = CONTACT_DETAIL_PROP_INDEXES[i];\r\n\r\n                Object prop = props[propIndex];\r\n\r\n                if (prop instanceof String)\r\n                {\r\n                    String stringProp = (String) prop;\r\n\r\n                    if (stringProp.length() != 0)\r\n                    {\r\n                        if (isPhoneNumber(propIndex))\r\n                            stringProp = normalizePhoneNumber(stringProp);\r\n\r\n                        ContactDetail contactDetail\r\n                            = new ContactDetail(stringProp);\r\n\r\n                        contactDetail.setSupportedOpSets(supportedOpSets);\r\n                        contactDetails.add(contactDetail);\r\n                    }\r\n                }\r\n            }\r\n\r\n            AddrBookSourceContact sourceContact\r\n                = new AddrBookSourceContact(\r\n                        getContactSource(),\r\n                        (String) props[PR_DISPLAY_NAME],\r\n                        contactDetails);\r\n\r\n            if (MAPI_MESSAGE == objType)\r\n            {\r\n                ++mapiMessageCount;\r\n\r\n                try\r\n                {\r\n                    Object[] images\r\n                        = IMAPIProp_GetProps(\r\n                                iUnknown,\r\n                                new long[] { PR_ATTACHMENT_CONTACTPHOTO },\r\n                                0);\r\n                    Object image = images[0];\r\n\r\n                    if (image instanceof byte[])\r\n                        sourceContact.setImage((byte[]) image);\r\n                }\r\n                catch (MsOutlookMAPIHResultException ex)\r\n                {\r\n                    // Ignore it, the image isn't as vital as the SourceContact.\r\n                }\r\n            }\r\n\r\n            addQueryResult(sourceContact);\r\n        }\r\n        return (getStatus() == QUERY_IN_PROGRESS);\r\n    }","commit_id":"c42acf53e0187a9a98dc95e12612d0338b7f0a54","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates the cache for the given entity name and the given keypath. No\n     * timeout value is used.\n     */\n    public ERXEnterpriseObjectCache(Class c, String keyPath) {\n       this(entityNameForClass(c), keyPath);\n    }","id":58503,"modified_method":"/**\n     * Creates the cache for the given entity name and the given keypath. No\n     * timeout value is used.\n     * @param c \n     * @param keyPath \n     */\n    public ERXEnterpriseObjectCache(Class c, String keyPath) {\n       this(entityNameForClass(c), keyPath);\n    }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Returns the objects to cache initially.\n     * @param ec\n     */\n    protected NSArray<T> initialObjects(EOEditingContext ec) {\n        NSArray objects = EOUtilities.objectsForEntityNamed(ec, entityName());\n        return objects;\n    }","id":58504,"modified_method":"/**\n     * Returns the objects to cache initially.\n     * @param ec\n     * @return \n     */\n    protected NSArray<T> initialObjects(EOEditingContext ec) {\n        NSArray objects = EOUtilities.objectsForEntityNamed(ec, entityName());\n        return objects;\n    }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Add an object to the cache with the given key. The object\n     * can be null.\n     * @param eo\n     */\n    public void addObjectForKey(T eo, Object key) {\n        EOGlobalID gid = NO_GID_MARKER;\n        if(eo != null) {\n            gid = eo.editingContext().globalIDForObject(eo);\n        }\n        cache().put(key, gid);\n    }","id":58505,"modified_method":"/**\n     * Add an object to the cache with the given key. The object\n     * can be null.\n     * @param eo\n     * @param key \n     */\n    public void addObjectForKey(T eo, Object key) {\n    \tif (_qualifier == null || _qualifier.evaluateWithObject(eo)) {\n\t        EOGlobalID gid = NO_GID_MARKER;\n\t        if(eo != null) {\n\t            gid = eo.editingContext().globalIDForObject(eo);\n\t        }\n\t        cache().put(key, gid);\n    \t}\n    }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * The key path which should get used for the key of the cache.\n     */\n    protected String keyPath() {\n        return _keyPath;\n    }","id":58506,"modified_method":"/**\n     * The key path which should get used for the key of the cache.\n     * @return \n     */\n    protected String keyPath() {\n        return _keyPath;\n    }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Retrieves an EO that matches the given key or null if no match \n     * is in the cache.\n     * @param ec editing context to get the object into\n     * @param key key value under which the object is registered \n     */\n    public T objectsForKey(EOEditingContext ec, Object key) {\n        Map cache = cache();\n        EOGlobalID gid = (EOGlobalID) cache.get(key);\n        if(gid == NO_GID_MARKER) {\n            return null;\n        } else if(gid == null) {\n            handleUnsuccessfullQueryForKey(key);\n            gid = (EOGlobalID) cache.get(key);\n            if(gid == NO_GID_MARKER) {\n                return null;\n            } else if(gid == null) {\n               return null;\n            }\n        }\n        T eo = (T) ec.faultForGlobalID(gid, ec);\n        return eo;\n    }","id":58507,"modified_method":"/**\n     * Retrieves an EO that matches the given key or null if no match \n     * is in the cache.\n     * @param ec editing context to get the object into\n     * @param key key value under which the object is registered \n     * @return \n     */\n    public T objectsForKey(EOEditingContext ec, Object key) {\n        Map cache = cache();\n        EOGlobalID gid = (EOGlobalID) cache.get(key);\n        if(gid == NO_GID_MARKER) {\n            return null;\n        } else if(gid == null) {\n            handleUnsuccessfullQueryForKey(key);\n            gid = (EOGlobalID) cache.get(key);\n            if(gid == NO_GID_MARKER) {\n                return null;\n            } else if(gid == null) {\n               return null;\n            }\n        }\n        T eo = (T) ec.faultForGlobalID(gid, ec);\n        return eo;\n    }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Called when a query hasn't found an entry in the cache. This\n     * implementation puts a not-found marker in the cache so\n     * the next query will return null. You could override this\n     * method to create an EO with sensible default values and\n     * call {@link #addObject(EOEnterpriseObject)} on it.\n     * @param key\n     */\n    protected void handleUnsuccessfullQueryForKey(Object key) {\n        cache().put(key, NO_GID_MARKER);\n    }","id":58508,"modified_method":"/**\n     * Called when a query hasn't found an entry in the cache. This\n     * implementation puts a not-found marker in the cache so\n     * the next query will return null. You could override this\n     * method to create an EO with sensible default values and\n     * call {@link #addObject(EOEnterpriseObject)} on it.\n     * @param key\n     */\n    protected void handleUnsuccessfullQueryForKey(Object key) {\n    \tif (!_fetchInitialValues) {\n            ERXEC ec = (ERXEC)ERXEC.newEditingContext();\n            ec.setCoalesceAutoLocks(false);\n        \tec.lock();\n        \ttry {\n        \t\ttry {\n        \t\t\tT eo = (T) EOUtilities.objectMatchingKeyAndValue(ec, _entityName, _keyPath, key);\n        \t\t\taddObject(eo);\n        \t\t}\n        \t\tcatch (EOObjectNotAvailableException e) {\n            \t\tcache().put(key, NO_GID_MARKER);\n        \t\t}\n        \t}\n        \tfinally {\n        \t\tec.unlock();\n        \t\tec.dispose();\n        \t}\n    \t}\n    \telse {\n    \t\tcache().put(key, NO_GID_MARKER);\n    \t}\n    }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Helper to check if an array of EOs contains the handled entity. \n     * @param eos\n     */\n    private boolean hadRelevantChanges(NSDictionary dict, String key) {\n        NSArray eos = (NSArray) dict.objectForKey(key);\n        for (Enumeration enumeration = eos.objectEnumerator(); enumeration.hasMoreElements();) {\n            EOEnterpriseObject eo = (EOEnterpriseObject) enumeration.nextElement();\n            if(eo.entityName().equals(entityName())) {\n                return true;\n            }\n        }\n        return false;\n    }","id":58509,"modified_method":"/**\n     * Helper to check if an array of EOs contains the handled entity. \n     * @param dict \n     * @param key \n     * @param eos\n     * @return \n     */\n    private NSArray<T> relevantChanges(NSDictionary dict, String key) {\n    \tNSMutableArray<T> releventEOs = null;\n        NSArray<EOEnterpriseObject> eos = (NSArray<EOEnterpriseObject>) dict.objectForKey(key);\n        for (Enumeration enumeration = eos.objectEnumerator(); enumeration.hasMoreElements();) {\n            EOEnterpriseObject eo = (EOEnterpriseObject) enumeration.nextElement();\n            if(eo.entityName().equals(entityName())) {\n            \tif (releventEOs == null) {\n            \t\treleventEOs = new NSMutableArray();\n            \t}\n            \treleventEOs.addObject((T)eo);\n            }\n        }\n        return releventEOs;\n    }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"private static String entityNameForClass(Class c) {\n    \tEOEditingContext ec = ERXEC.newEditingContext();\n    \tec.lock();\n    \ttry {\n    \t\tEOEntity entity = EOUtilities.entityForClass(ec, c);\n    \t\tif(entity != null) {\n    \t\t\treturn entity.name();\n    \t\t}\n    \t\treturn null;\n    \t} finally {\n    \t\tec.unlock();\n    \t}\n    }","id":58510,"modified_method":"private static String entityNameForClass(Class c) {\n        ERXEC ec = (ERXEC)ERXEC.newEditingContext();\n        ec.setCoalesceAutoLocks(false);\n    \tec.lock();\n    \ttry {\n    \t\tEOEntity entity = EOUtilities.entityForClass(ec, c);\n    \t\tif(entity != null) {\n    \t\t\treturn entity.name();\n    \t\t}\n    \t\treturn null;\n    \t} finally {\n    \t\tec.unlock();\n    \t\tec.dispose();\n    \t}\n    }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Returns the backing cache. If the cache is to old, it is cleared first.\n     */\n    protected synchronized Map cache() {\n        long now = System.currentTimeMillis();\n        if(_timeout > 0L && (now - _timeout) > _fetchTime) {\n            reset();\n        }\n        if(_cache == null) {\n            _cache = Collections.synchronizedMap(new HashMap()); \n            EOEditingContext ec = ERXEC.newEditingContext();\n            ec.lock();\n            try {\n                NSArray objects = initialObjects(ec);\n                for (Enumeration enumeration = objects.objectEnumerator(); enumeration.hasMoreElements();) {\n                    T eo = (T) enumeration.nextElement();\n                    addObject(eo);\n                }\n            } finally {\n                ec.unlock();\n            }\n            _fetchTime = System.currentTimeMillis();\n        }\n        return _cache;\n    }","id":58511,"modified_method":"/**\n     * Returns the backing cache. If the cache is to old, it is cleared first.\n     * @return \n     */\n    protected synchronized Map<Object, EOGlobalID> cache() {\n        long now = System.currentTimeMillis();\n        if(_timeout > 0L && (now - _timeout) > _fetchTime) {\n            reset();\n        }\n        if(_cache == null) {\n            _cache = Collections.synchronizedMap(new HashMap());\n            if (_fetchInitialValues) {\n\t            ERXEC ec = (ERXEC)ERXEC.newEditingContext();\n\t            ec.setCoalesceAutoLocks(false);\n\t            ec.lock();\n\t            try {\n\t                NSArray objects = initialObjects(ec);\n\t                for (Enumeration enumeration = objects.objectEnumerator(); enumeration.hasMoreElements();) {\n\t                    T eo = (T) enumeration.nextElement();\n\t                    addObject(eo);\n\t                }\n\t            } finally {\n\t                ec.unlock();\n\t                ec.dispose();\n\t            }\n            }\n            _fetchTime = System.currentTimeMillis();\n        }\n        return _cache;\n    }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Retrieves an EO that matches the given key or null if no match \n     * is in the cache.\n     * @param ec editing context to get the object into\n     * @param key key value under which the object is registered \n     */\n    public T objectForKey(EOEditingContext ec, Object key) {\n        Map cache = cache();\n        EOGlobalID gid = (EOGlobalID) cache.get(key);\n        if(gid == NO_GID_MARKER) {\n            return null;\n        } else if(gid == null) {\n            handleUnsuccessfullQueryForKey(key);\n            gid = (EOGlobalID) cache.get(key);\n            if(gid == NO_GID_MARKER) {\n                return null;\n            } else if(gid == null) {\n               return null;\n            }\n        }\n        T eo = (T) ec.faultForGlobalID(gid, ec);\n        return eo;\n    }","id":58512,"modified_method":"/**\n     * Retrieves an EO that matches the given key or null if no match \n     * is in the cache.\n     * @param ec editing context to get the object into\n     * @param key key value under which the object is registered \n     * @return \n     */\n    public T objectForKey(EOEditingContext ec, Object key) {\n        Map cache = cache();\n        EOGlobalID gid = (EOGlobalID) cache.get(key);\n        if(gid == NO_GID_MARKER) {\n            return null;\n        } else if(gid == null) {\n            handleUnsuccessfullQueryForKey(key);\n            gid = (EOGlobalID) cache.get(key);\n            if(gid == NO_GID_MARKER) {\n                return null;\n            } else if(gid == null) {\n               return null;\n            }\n        }\n        T eo = (T) ec.faultForGlobalID(gid, ec);\n        return eo;\n    }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Creates the cache for the given entity, keypath and timeout value in milliseconds.\n     * @param entityName\n     * @param keyPath\n     * @param timeout\n     */\n    public ERXEnterpriseObjectCache(String entityName, String keyPath, long timeout) {\n        _entityName = entityName;\n        _keyPath = keyPath;\n        _timeout = timeout;\n        registerForNotifications();\n    }","id":58513,"modified_method":"/**\n     * Creates the cache for the given entity, keypath and timeout value in milliseconds.\n     * @param entityName\n     * @param keyPath\n     * @param qualifier\n     * @param timeout\n     */\n    public ERXEnterpriseObjectCache(String entityName, String keyPath, long timeout) {\n    \tthis(entityName, keyPath, null, timeout);\n    }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n     * Handler for the editingContextDidSaveChanges notification. Calls reset if\n     * and object of the given entity were changed.\n     * @param n\n     */\n    public void editingContextDidSaveChanges(NSNotification n) {\n        EOEditingContext ec = (EOEditingContext) n.object();\n        if(ec.parentObjectStore() instanceof EOObjectStoreCoordinator) {\n            if(!hadRelevantChanges(n.userInfo(), EOEditingContext.InsertedKey)) {\n                if(!hadRelevantChanges(n.userInfo(), EOEditingContext.UpdatedKey)) {\n                    if(!hadRelevantChanges(n.userInfo(), EOEditingContext.DeletedKey)) {\n                        return;\n                    }\n                }\n            }\n            reset();\n        }\n    }","id":58514,"modified_method":"/**\n     * Handler for the editingContextDidSaveChanges notification. Calls reset if\n     * and object of the given entity were changed.\n     * @param n\n     */\n    public void editingContextDidSaveChanges(NSNotification n) {\n        EOEditingContext ec = (EOEditingContext) n.object();\n        if(ec.parentObjectStore() instanceof EOObjectStoreCoordinator) {\n        \tNSArray<T> releventsInsertedEOs = relevantChanges(n.userInfo(), EOEditingContext.InsertedKey);\n        \tNSArray<T> releventsUpdatedEOs = relevantChanges(n.userInfo(), EOEditingContext.UpdatedKey);\n        \tNSArray<T> releventsDeletedEOs = relevantChanges(n.userInfo(), EOEditingContext.DeletedKey);\n        \tMap<Object, EOGlobalID> cache = cache();\n        \tsynchronized (cache) { \n\t        \tif (releventsInsertedEOs != null) {\n\t        \t\tfor (T eo : releventsInsertedEOs) {\n\t        \t\t\taddObject(eo);\n\t        \t\t}\n\t        \t}\n\t        \tif (releventsUpdatedEOs != null) {\n\t        \t\tfor (T eo : releventsUpdatedEOs) {\n\t        \t\t\tupdateObject(eo);\n\t        \t\t}\n\t        \t}\n\t        \tif (releventsDeletedEOs != null) {\n\t        \t\tfor (T eo : releventsDeletedEOs) {\n\t        \t\t\tremoveObject(eo);\n\t        \t\t}\n\t        \t}\n        \t}\n        }\n    }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"public static Test suite() {\n    TestSuite suite = new TestSuite();\n    suite.addTestSuite(ERXExpiringCacheTestCase.class);\n    suite.addTestSuite(ERXGenericRecordUpdateInverseRelationshipsTest.class);\n    suite.addTestSuite(ERXObjectStoreCoordinatorSynchronizerTestCase.class);\n    return suite;\n  }","id":58515,"modified_method":"public static Test suite() {\n    TestSuite suite = new TestSuite();\n    suite.addTestSuite(ERXEnterpriseObjectCacheTestCase.class);\n    suite.addTestSuite(ERXExpiringCacheTestCase.class);\n    suite.addTestSuite(ERXGenericRecordUpdateInverseRelationshipsTest.class);\n    suite.addTestSuite(ERXObjectStoreCoordinatorSynchronizerTestCase.class);\n    return suite;\n  }","commit_id":"66f8c5e48ff7177f185d3457dfb1cccc8986d8a7","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Override\n    public void invoke(Request request, Response response)\n        throws IOException, ServletException {\n\n        if (!getEnabled() || rules == null || rules.length == 0) {\n            getNext().invoke(request, response);\n            return;\n        }\n\n        if (invoked.get() == Boolean.TRUE) {\n            try {\n                getNext().invoke(request, response);\n            } finally {\n                invoked.set(null);\n            }\n            return;\n        }\n\n        try {\n\n            Resolver resolver = new ResolverImpl(request);\n\n            invoked.set(Boolean.TRUE);\n\n            // As long as MB isn't a char sequence or affiliated, this has to be\n            // converted to a string\n            MessageBytes urlMB = context ? request.getRequestPathMB() : request.getDecodedRequestURIMB();\n            urlMB.toChars();\n            CharSequence url = urlMB.getCharChunk();\n            CharSequence host = request.getServerName();\n            boolean rewritten = false;\n            boolean done = false;\n            for (int i = 0; i < rules.length; i++) {\n                RewriteRule rule = rules[i];\n                CharSequence test = (rule.isHost()) ? host : url;\n                CharSequence newtest = rule.evaluate(test, resolver);\n                if (newtest != null && !test.equals(newtest.toString())) {\n                    if (container.getLogger().isDebugEnabled()) {\n                        container.getLogger().debug(\"Rewrote \" + test + \" as \" + newtest\n                                + \" with rule pattern \" + rule.getPatternString());\n                    }\n                    if (rule.isHost()) {\n                        host = newtest;\n                    } else {\n                        url = newtest;\n                    }\n                    rewritten = true;\n                }\n\n                // Final reply\n\n                // - forbidden\n                if (rule.isForbidden() && newtest != null) {\n                    response.sendError(HttpServletResponse.SC_FORBIDDEN);\n                    done = true;\n                    break;\n                }\n                // - gone\n                if (rule.isGone() && newtest != null) {\n                    response.sendError(HttpServletResponse.SC_GONE);\n                    done = true;\n                    break;\n                }\n                // - redirect (code)\n                if (rule.isRedirect() && newtest != null) {\n                    // append the query string to the url if there is one and it hasn't been rewritten\n                    String queryString = request.getQueryString();\n                    StringBuffer urlString = new StringBuffer(url);\n                    if (queryString != null && queryString.length() > 0) {\n                        int index = urlString.indexOf(\"?\");\n                        if (index != -1) {\n                            // if qsa is specified append the query\n                            if (rule.isQsappend()) {\n                                urlString.append('&');\n                                urlString.append(queryString);\n                            }\n                            // if the ? is the last character delete it, its only purpose was to\n                            // prevent the rewrite module from appending the query string\n                            else if (index == urlString.length() - 1) {\n                                urlString.deleteCharAt(index);\n                            }\n                        } else {\n                            urlString.append('?');\n                            urlString.append(queryString);\n                        }\n                    }\n                    // Insert the context if\n                    // 1. this valve is associated with a context\n                    // 2. the url starts with a leading slash\n                    // 3. the url isn't absolute\n                    if (context && urlString.charAt(0) == '/' && !hasScheme(urlString)) {\n                        urlString.insert(0, request.getContext().getEncodedPath());\n                    }\n                    response.sendRedirect(urlString.toString());\n                    response.setStatus(rule.getRedirectCode());\n                    done = true;\n                    break;\n                }\n\n                // Reply modification\n\n                // - cookie\n                if (rule.isCookie() && newtest != null) {\n                    Cookie cookie = new Cookie(rule.getCookieName(),\n                            rule.getCookieResult());\n                    cookie.setDomain(rule.getCookieDomain());\n                    cookie.setMaxAge(rule.getCookieLifetime());\n                    cookie.setPath(rule.getCookiePath());\n                    cookie.setSecure(rule.isCookieSecure());\n                    cookie.setHttpOnly(rule.isCookieHttpOnly());\n                    response.addCookie(cookie);\n                }\n                // - env (note: this sets a request attribute)\n                if (rule.isEnv() && newtest != null) {\n                    for (int j = 0; j < rule.getEnvSize(); j++) {\n                        request.setAttribute(rule.getEnvName(j), rule.getEnvResult(j));\n                    }\n                }\n                // - content type (note: this will not force the content type, use a filter\n                //   to do that)\n                if (rule.isType() && newtest != null) {\n                    request.setContentType(rule.getTypeValue());\n                }\n                // - qsappend\n                if (rule.isQsappend() && newtest != null) {\n                    String queryString = request.getQueryString();\n                    String urlString = url.toString();\n                    if (urlString.indexOf('?') != -1 && queryString != null) {\n                        url = urlString + \"&\" + queryString;\n                    }\n                }\n\n                // Control flow processing\n\n                // - chain (skip remaining chained rules if this one does not match)\n                if (rule.isChain() && newtest == null) {\n                    for (int j = i; j < rules.length; j++) {\n                        if (!rules[j].isChain()) {\n                            i = j;\n                            break;\n                        }\n                    }\n                    continue;\n                }\n                // - last (stop rewriting here)\n                if (rule.isLast() && newtest != null) {\n                    break;\n                }\n                // - next (redo again)\n                if (rule.isNext() && newtest != null) {\n                    i = 0;\n                    continue;\n                }\n                // - skip (n rules)\n                if (newtest != null) {\n                    i += rule.getSkip();\n                }\n\n            }\n\n            if (rewritten) {\n                if (!done) {\n                    // See if we need to replace the query string\n                    String urlString = url.toString();\n                    String queryString = null;\n                    int queryIndex = urlString.indexOf('?');\n                    if (queryIndex != -1) {\n                        queryString = urlString.substring(queryIndex+1);\n                        urlString = urlString.substring(0, queryIndex);\n                    }\n                    // Set the new 'original' URI\n                    String contextPath = null;\n                    if (context) {\n                        contextPath = request.getContextPath();\n                    }\n                    request.getCoyoteRequest().requestURI().setString(null);\n                    CharChunk chunk = request.getCoyoteRequest().requestURI().getCharChunk();\n                    chunk.recycle();\n                    if (context) {\n                        chunk.append(contextPath);\n                    }\n                    chunk.append(URLEncoder.DEFAULT.encode(urlString));\n                    request.getCoyoteRequest().requestURI().toChars();\n                    // Decoded and normalized URI\n                    request.getCoyoteRequest().decodedURI().setString(null);\n                    chunk = request.getCoyoteRequest().decodedURI().getCharChunk();\n                    chunk.recycle();\n                    if (context) {\n                        chunk.append(contextPath);\n                    }\n                    chunk.append(RequestUtil.normalize(urlString));\n                    request.getCoyoteRequest().decodedURI().toChars();\n                    // Set the new Query if there is one\n                    if (queryString != null) {\n                        request.getCoyoteRequest().queryString().setString(null);\n                        chunk = request.getCoyoteRequest().queryString().getCharChunk();\n                        chunk.recycle();\n                        chunk.append(queryString);\n                        request.getCoyoteRequest().queryString().toChars();\n                    }\n                    // Set the new host if it changed\n                    if (!host.equals(request.getServerName())) {\n                        request.getCoyoteRequest().serverName().setString(null);\n                        chunk = request.getCoyoteRequest().serverName().getCharChunk();\n                        chunk.recycle();\n                        chunk.append(host.toString());\n                        request.getCoyoteRequest().serverName().toChars();\n                    }\n                    request.getMappingData().recycle();\n                    // Reinvoke the whole request recursively\n                    try {\n                        request.getConnector().getProtocolHandler().getAdapter().service\n                        (request.getCoyoteRequest(), response.getCoyoteResponse());\n                    } catch (Exception e) {\n                        // This doesn't actually happen in the Catalina adapter implementation\n                    }\n                }\n            } else {\n                getNext().invoke(request, response);\n            }\n\n        } finally {\n            invoked.set(null);\n        }\n\n    }","id":58516,"modified_method":"@Override\n    public void invoke(Request request, Response response)\n        throws IOException, ServletException {\n\n        if (!getEnabled() || rules == null || rules.length == 0) {\n            getNext().invoke(request, response);\n            return;\n        }\n\n        if (invoked.get() == Boolean.TRUE) {\n            try {\n                getNext().invoke(request, response);\n            } finally {\n                invoked.set(null);\n            }\n            return;\n        }\n\n        try {\n\n            Resolver resolver = new ResolverImpl(request);\n\n            invoked.set(Boolean.TRUE);\n\n            // As long as MB isn't a char sequence or affiliated, this has to be\n            // converted to a string\n            MessageBytes urlMB = context ? request.getRequestPathMB() : request.getDecodedRequestURIMB();\n            urlMB.toChars();\n            CharSequence url = urlMB.getCharChunk();\n            CharSequence host = request.getServerName();\n            boolean rewritten = false;\n            boolean done = false;\n            for (int i = 0; i < rules.length; i++) {\n                RewriteRule rule = rules[i];\n                CharSequence test = (rule.isHost()) ? host : url;\n                CharSequence newtest = rule.evaluate(test, resolver);\n                if (newtest != null && !test.equals(newtest.toString())) {\n                    if (container.getLogger().isDebugEnabled()) {\n                        container.getLogger().debug(\"Rewrote \" + test + \" as \" + newtest\n                                + \" with rule pattern \" + rule.getPatternString());\n                    }\n                    if (rule.isHost()) {\n                        host = newtest;\n                    } else {\n                        url = newtest;\n                    }\n                    rewritten = true;\n                }\n\n                // Final reply\n\n                // - forbidden\n                if (rule.isForbidden() && newtest != null) {\n                    response.sendError(HttpServletResponse.SC_FORBIDDEN);\n                    done = true;\n                    break;\n                }\n                // - gone\n                if (rule.isGone() && newtest != null) {\n                    response.sendError(HttpServletResponse.SC_GONE);\n                    done = true;\n                    break;\n                }\n                // - redirect (code)\n                if (rule.isRedirect() && newtest != null) {\n                    // append the query string to the url if there is one and it hasn't been rewritten\n                    String queryString = request.getQueryString();\n                    StringBuffer urlString = new StringBuffer(url);\n                    if (queryString != null && queryString.length() > 0) {\n                        int index = urlString.indexOf(\"?\");\n                        if (index != -1) {\n                            // if qsa is specified append the query\n                            if (rule.isQsappend()) {\n                                urlString.append('&');\n                                urlString.append(queryString);\n                            }\n                            // if the ? is the last character delete it, its only purpose was to\n                            // prevent the rewrite module from appending the query string\n                            else if (index == urlString.length() - 1) {\n                                urlString.deleteCharAt(index);\n                            }\n                        } else {\n                            urlString.append('?');\n                            urlString.append(queryString);\n                        }\n                    }\n                    // Insert the context if\n                    // 1. this valve is associated with a context\n                    // 2. the url starts with a leading slash\n                    // 3. the url isn't absolute\n                    if (context && urlString.charAt(0) == '/' && !hasScheme(urlString)) {\n                        urlString.insert(0, request.getContext().getEncodedPath());\n                    }\n                    response.sendRedirect(urlString.toString());\n                    response.setStatus(rule.getRedirectCode());\n                    done = true;\n                    break;\n                }\n\n                // Reply modification\n\n                // - cookie\n                if (rule.isCookie() && newtest != null) {\n                    Cookie cookie = new Cookie(rule.getCookieName(),\n                            rule.getCookieResult());\n                    cookie.setDomain(rule.getCookieDomain());\n                    cookie.setMaxAge(rule.getCookieLifetime());\n                    cookie.setPath(rule.getCookiePath());\n                    cookie.setSecure(rule.isCookieSecure());\n                    cookie.setHttpOnly(rule.isCookieHttpOnly());\n                    response.addCookie(cookie);\n                }\n                // - env (note: this sets a request attribute)\n                if (rule.isEnv() && newtest != null) {\n                    for (int j = 0; j < rule.getEnvSize(); j++) {\n                        request.setAttribute(rule.getEnvName(j), rule.getEnvResult(j));\n                    }\n                }\n                // - content type (note: this will not force the content type, use a filter\n                //   to do that)\n                if (rule.isType() && newtest != null) {\n                    request.setContentType(rule.getTypeValue());\n                }\n                // - qsappend\n                if (rule.isQsappend() && newtest != null) {\n                    String queryString = request.getQueryString();\n                    String urlString = url.toString();\n                    if (urlString.indexOf('?') != -1 && queryString != null) {\n                        url = urlString + \"&\" + queryString;\n                    }\n                }\n\n                // Control flow processing\n\n                // - chain (skip remaining chained rules if this one does not match)\n                if (rule.isChain() && newtest == null) {\n                    for (int j = i; j < rules.length; j++) {\n                        if (!rules[j].isChain()) {\n                            i = j;\n                            break;\n                        }\n                    }\n                    continue;\n                }\n                // - last (stop rewriting here)\n                if (rule.isLast() && newtest != null) {\n                    break;\n                }\n                // - next (redo again)\n                if (rule.isNext() && newtest != null) {\n                    i = 0;\n                    continue;\n                }\n                // - skip (n rules)\n                if (newtest != null) {\n                    i += rule.getSkip();\n                }\n\n            }\n\n            if (rewritten) {\n                if (!done) {\n                    // See if we need to replace the query string\n                    String urlString = url.toString();\n                    String queryString = null;\n                    int queryIndex = urlString.indexOf('?');\n                    if (queryIndex != -1) {\n                        queryString = urlString.substring(queryIndex+1);\n                        urlString = urlString.substring(0, queryIndex);\n                    }\n                    // Set the new 'original' URI\n                    String contextPath = null;\n                    if (context) {\n                        contextPath = request.getContextPath();\n                    }\n                    request.getCoyoteRequest().requestURI().setString(null);\n                    CharChunk chunk = request.getCoyoteRequest().requestURI().getCharChunk();\n                    chunk.recycle();\n                    if (context) {\n                        chunk.append(contextPath);\n                    }\n                    chunk.append(URLEncoder.DEFAULT.encode(urlString));\n                    request.getCoyoteRequest().requestURI().toChars();\n                    // Decoded and normalized URI\n                    request.getCoyoteRequest().decodedURI().setString(null);\n                    chunk = request.getCoyoteRequest().decodedURI().getCharChunk();\n                    chunk.recycle();\n                    if (context) {\n                        chunk.append(contextPath);\n                    }\n                    chunk.append(RequestUtil.normalize(urlString));\n                    request.getCoyoteRequest().decodedURI().toChars();\n                    // Set the new Query if there is one\n                    if (queryString != null) {\n                        request.getCoyoteRequest().queryString().setString(null);\n                        chunk = request.getCoyoteRequest().queryString().getCharChunk();\n                        chunk.recycle();\n                        chunk.append(queryString);\n                        request.getCoyoteRequest().queryString().toChars();\n                    }\n                    // Set the new host if it changed\n                    if (!host.equals(request.getServerName())) {\n                        request.getCoyoteRequest().serverName().setString(null);\n                        chunk = request.getCoyoteRequest().serverName().getCharChunk();\n                        chunk.recycle();\n                        chunk.append(host.toString());\n                        request.getCoyoteRequest().serverName().toChars();\n                    }\n                    request.getMappingData().recycle();\n                    // Reinvoke the whole request recursively\n                    try {\n                        Connector connector = request.getConnector();\n                        if (!connector.getProtocolHandler().getAdapter().prepare(\n                                request.getCoyoteRequest(), response.getCoyoteResponse())) {\n                            return;\n                        }\n                        Pipeline pipeline = connector.getService().getContainer().getPipeline();\n                        request.setAsyncSupported(pipeline.isAsyncSupported());\n                        pipeline.getFirst().invoke(request, response);\n                    } catch (Exception e) {\n                        // This doesn't actually happen in the Catalina adapter implementation\n                    }\n                }\n            } else {\n                getNext().invoke(request, response);\n            }\n\n        } finally {\n            invoked.set(null);\n        }\n\n    }","commit_id":"1d442a735cc3fd793030d05a0f8b9bbe71cb16cf","url":"https://github.com/apache/tomcat"},{"original_method":"/**\n     * This factory method will parse a line formed like:\n     *\n     * Example:\n     *  RewriteCond %{REMOTE_HOST}  ^host1.*  [OR]\n     *\n     * @param line\n     */\n    public static Object parse(String line) {\n        StringTokenizer tokenizer = new StringTokenizer(line);\n        if (tokenizer.hasMoreTokens()) {\n            String token = tokenizer.nextToken();\n            if (token.equals(\"RewriteCond\")) {\n                // RewriteCond TestString CondPattern [Flags]\n                RewriteCond condition = new RewriteCond();\n                if (tokenizer.countTokens() < 2) {\n                    throw new IllegalArgumentException(\"Invalid line: \" + line);\n                }\n                condition.setTestString(tokenizer.nextToken());\n                condition.setCondPattern(tokenizer.nextToken());\n                if (tokenizer.hasMoreTokens()) {\n                    String flags = tokenizer.nextToken();\n                    if (flags.startsWith(\"[\") && flags.endsWith(\"]\")) {\n                        flags = flags.substring(1, flags.length() - 1);\n                    }\n                    StringTokenizer flagsTokenizer = new StringTokenizer(flags, \",\");\n                    while (flagsTokenizer.hasMoreElements()) {\n                        parseCondFlag(line, condition, flagsTokenizer.nextToken());\n                    }\n                }\n                return condition;\n            } else if (token.equals(\"RewriteRule\")) {\n                // RewriteRule Pattern Substitution [Flags]\n                RewriteRule rule = new RewriteRule();\n                if (tokenizer.countTokens() < 2) {\n                    throw new IllegalArgumentException(\"Invalid line: \" + line);\n                }\n                rule.setPatternString(tokenizer.nextToken());\n                rule.setSubstitutionString(tokenizer.nextToken());\n                if (tokenizer.hasMoreTokens()) {\n                    String flags = tokenizer.nextToken();\n                    if (flags.startsWith(\"[\") && flags.endsWith(\"]\")) {\n                        flags = flags.substring(1, flags.length() - 1);\n                    }\n                    StringTokenizer flagsTokenizer = new StringTokenizer(flags, \",\");\n                    while (flagsTokenizer.hasMoreElements()) {\n                        parseRuleFlag(line, rule, flagsTokenizer.nextToken());\n                    }\n                }\n                return rule;\n            } else if (token.equals(\"RewriteMap\")) {\n                // RewriteMap name rewriteMapClassName whateverOptionalParameterInWhateverFormat\n                if (tokenizer.countTokens() < 2) {\n                    throw new IllegalArgumentException(\"Invalid line: \" + line);\n                }\n                String name = tokenizer.nextToken();\n                String rewriteMapClassName = tokenizer.nextToken();\n                RewriteMap map = null;\n                try {\n                    map = (RewriteMap) (Class.forName(rewriteMapClassName).newInstance());\n                } catch (Exception e) {\n                    throw new IllegalArgumentException(\"Invalid map className: \" + line);\n                }\n                if (tokenizer.hasMoreTokens()) {\n                    map.setParameters(tokenizer.nextToken());\n                }\n                Object[] result = new Object[2];\n                result[0] = name;\n                result[1] = map;\n                return result;\n            } else if (token.startsWith(\"#\")) {\n                // it's a comment, ignore it\n            } else {\n                throw new IllegalArgumentException(\"Invalid line: \" + line);\n            }\n        }\n        return null;\n    }","id":58517,"modified_method":"/**\n     * This factory method will parse a line formed like:\n     *\n     * Example:\n     *  RewriteCond %{REMOTE_HOST}  ^host1.*  [OR]\n     *\n     * @param line A line from the rewrite configuration\n     *\n     * @return The condition, rule or map resulting from parsing the line\n     */\n    public static Object parse(String line) {\n        StringTokenizer tokenizer = new StringTokenizer(line);\n        if (tokenizer.hasMoreTokens()) {\n            String token = tokenizer.nextToken();\n            if (token.equals(\"RewriteCond\")) {\n                // RewriteCond TestString CondPattern [Flags]\n                RewriteCond condition = new RewriteCond();\n                if (tokenizer.countTokens() < 2) {\n                    throw new IllegalArgumentException(\"Invalid line: \" + line);\n                }\n                condition.setTestString(tokenizer.nextToken());\n                condition.setCondPattern(tokenizer.nextToken());\n                if (tokenizer.hasMoreTokens()) {\n                    String flags = tokenizer.nextToken();\n                    if (flags.startsWith(\"[\") && flags.endsWith(\"]\")) {\n                        flags = flags.substring(1, flags.length() - 1);\n                    }\n                    StringTokenizer flagsTokenizer = new StringTokenizer(flags, \",\");\n                    while (flagsTokenizer.hasMoreElements()) {\n                        parseCondFlag(line, condition, flagsTokenizer.nextToken());\n                    }\n                }\n                return condition;\n            } else if (token.equals(\"RewriteRule\")) {\n                // RewriteRule Pattern Substitution [Flags]\n                RewriteRule rule = new RewriteRule();\n                if (tokenizer.countTokens() < 2) {\n                    throw new IllegalArgumentException(\"Invalid line: \" + line);\n                }\n                rule.setPatternString(tokenizer.nextToken());\n                rule.setSubstitutionString(tokenizer.nextToken());\n                if (tokenizer.hasMoreTokens()) {\n                    String flags = tokenizer.nextToken();\n                    if (flags.startsWith(\"[\") && flags.endsWith(\"]\")) {\n                        flags = flags.substring(1, flags.length() - 1);\n                    }\n                    StringTokenizer flagsTokenizer = new StringTokenizer(flags, \",\");\n                    while (flagsTokenizer.hasMoreElements()) {\n                        parseRuleFlag(line, rule, flagsTokenizer.nextToken());\n                    }\n                }\n                return rule;\n            } else if (token.equals(\"RewriteMap\")) {\n                // RewriteMap name rewriteMapClassName whateverOptionalParameterInWhateverFormat\n                if (tokenizer.countTokens() < 2) {\n                    throw new IllegalArgumentException(\"Invalid line: \" + line);\n                }\n                String name = tokenizer.nextToken();\n                String rewriteMapClassName = tokenizer.nextToken();\n                RewriteMap map = null;\n                try {\n                    map = (RewriteMap) (Class.forName(rewriteMapClassName).newInstance());\n                } catch (Exception e) {\n                    throw new IllegalArgumentException(\"Invalid map className: \" + line);\n                }\n                if (tokenizer.hasMoreTokens()) {\n                    map.setParameters(tokenizer.nextToken());\n                }\n                Object[] result = new Object[2];\n                result[0] = name;\n                result[1] = map;\n                return result;\n            } else if (token.startsWith(\"#\")) {\n                // it's a comment, ignore it\n            } else {\n                throw new IllegalArgumentException(\"Invalid line: \" + line);\n            }\n        }\n        return null;\n    }","commit_id":"1d442a735cc3fd793030d05a0f8b9bbe71cb16cf","url":"https://github.com/apache/tomcat"},{"original_method":"public boolean isReady() {\n        if (coyoteResponse.getWriteListener() == null) {\n            throw new IllegalStateException(\"not in non blocking mode.\");\n        }\n        AtomicBoolean isReady = new AtomicBoolean(true);\n        coyoteResponse.action(ActionCode.NB_WRITE_INTEREST, isReady);\n        return isReady.get();\n    }","id":58518,"modified_method":"public boolean isReady() {\n        if (coyoteResponse.getWriteListener() == null) {\n            throw new IllegalStateException(\"not in non blocking mode.\");\n        }\n        // Assume write is not possible\n        AtomicBoolean isReady = new AtomicBoolean(false);\n        coyoteResponse.action(ActionCode.NB_WRITE_INTEREST, isReady);\n        return isReady.get();\n    }","commit_id":"04a01622595a97478cbc7728408158fc763483d1","url":"https://github.com/apache/tomcat"},{"original_method":"@Test\n    public void testNonBlockingRead() throws Exception {\n        // Configure a context with digest auth and a single protected resource\n        Tomcat tomcat = getTomcatInstance();\n        // Must have a real docBase - just use temp\n        StandardContext ctx = (StandardContext) tomcat.addContext(\"\", System.getProperty(\"java.io.tmpdir\"));\n\n        NBReadServlet servlet = new NBReadServlet();\n        String servletName = NBReadServlet.class.getName();\n        Tomcat.addServlet(ctx, servletName, servlet);\n        ctx.addServletMapping(\"/\", servletName);\n\n        tomcat.start();\n\n        Map<String, List<String>> resHeaders = new HashMap<>();\n        int rc = postUrl(true, new DataWriter(500), \"http://localhost:\" + getPort() + \"/\", new ByteChunk(),\n                resHeaders, null);\n        Assert.assertEquals(HttpServletResponse.SC_OK, rc);\n    }","id":58519,"modified_method":"@Test\n    public void testNonBlockingRead() throws Exception {\n        Tomcat tomcat = getTomcatInstance();\n\n        // TODO Faking non-blocking reads is not yet implemented for BIO.\n        if (tomcat.getConnector().getProtocolHandlerClassName().equals(\n                \"org.apache.coyote.http11.Http11Protocol\")) {\n            return;\n        }\n\n        // TODO Non-blocking reads are not yet implemented for APR.\n        if (tomcat.getConnector().getProtocolHandlerClassName().equals(\n                \"org.apache.coyote.http11.Http11AprProtocol\")) {\n            return;\n        }\n\n        // Must have a real docBase - just use temp\n        StandardContext ctx = (StandardContext) tomcat.addContext(\"\", System.getProperty(\"java.io.tmpdir\"));\n\n        NBReadServlet servlet = new NBReadServlet();\n        String servletName = NBReadServlet.class.getName();\n        Tomcat.addServlet(ctx, servletName, servlet);\n        ctx.addServletMapping(\"/\", servletName);\n\n        tomcat.start();\n\n        Map<String, List<String>> resHeaders = new HashMap<>();\n        int rc = postUrl(true, new DataWriter(500), \"http://localhost:\" + getPort() + \"/\", new ByteChunk(),\n                resHeaders, null);\n        Assert.assertEquals(HttpServletResponse.SC_OK, rc);\n    }","commit_id":"04a01622595a97478cbc7728408158fc763483d1","url":"https://github.com/apache/tomcat"},{"original_method":"@Test\n    public void testNonBlockingWriteError() throws Exception {\n        String bind = \"localhost\";\n        // Configure a context with digest auth and a single protected resource\n        Tomcat tomcat = getTomcatInstance();\n        // Must have a real docBase - just use temp\n        StandardContext ctx = (StandardContext) tomcat.addContext(\"\", System.getProperty(\"java.io.tmpdir\"));\n\n        NBWriteServlet servlet = new NBWriteServlet();\n        String servletName = NBWriteServlet.class.getName();\n        Tomcat.addServlet(ctx, servletName, servlet);\n        ctx.addServletMapping(\"/\", servletName);\n        tomcat.getConnector().setProperty(\"socket.txBufSize\", \"1024\");\n        tomcat.getConnector().setProperty(\"address\", bind);\n        System.out.println(tomcat.getConnector().getProperty(\"address\"));\n        tomcat.start();\n\n        Map<String, List<String>> resHeaders = new HashMap<>();\n        ByteChunk slowReader = new ByteChunk();\n        slowReader.setLimit(1); // FIXME BUFFER IS BROKEN, 0 doesn't work\n        slowReader.setByteOutputChannel(new ByteOutputChannel() {\n            long counter = 0;\n            long delta = 0;\n\n            @Override\n            public void realWriteBytes(byte[] cbuf, int off, int len) throws IOException {\n                try {\n                    if (len == 0)\n                        return;\n                    counter += len;\n                    delta += len;\n                    if (counter > bytesToDownload) {\n                        System.out.println(\"ERROR Downloaded more than expected ERROR\");\n                    } else if (counter == bytesToDownload) {\n                        System.out.println(\"Download complete(\" + bytesToDownload + \" bytes)\");\n                        // } else if (counter > (1966086)) {\n                        // System.out.println(\"Download almost complete, missing bytes (\"+counter+\")\");\n                    } else if (delta > (bytesToDownload / 16)) {\n                        System.out.println(\"Read \" + counter + \" bytes.\");\n                        delta = 0;\n                        Thread.sleep(500);\n                    }\n                } catch (Exception x) {\n                    throw new IOException(x);\n                }\n            }\n        });\n        int rc = postUrlWithDisconnect(true, new DataWriter(0), \"http://\" + bind + \":\" + getPort() + \"/\", resHeaders,\n                null);\n        slowReader.flushBuffer();\n        Assert.assertEquals(HttpServletResponse.SC_OK, rc);\n        try {\n            //allow the listeners to finish up\n            Thread.sleep(1000);\n        } catch (Exception e) {\n        }\n        Assert.assertTrue(\"Error listener should have been invoked.\", servlet.wlistener.onErrorInvoked);\n\n    }","id":58520,"modified_method":"@Test\n    public void testNonBlockingWriteError() throws Exception {\n        Tomcat tomcat = getTomcatInstance();\n\n        // Not applicable to BIO. This test does not start a new thread for the\n        // write so with BIO all the writes happen in the service() mehtod just\n        // like blocking IO.\n        if (tomcat.getConnector().getProtocolHandlerClassName().equals(\n                \"org.apache.coyote.http11.Http11Protocol\")) {\n            return;\n        }\n\n        // TODO Non-blocking reads are not yet implemented for APR so this test\n        // will not pass.\n        if (tomcat.getConnector().getProtocolHandlerClassName().equals(\n                \"org.apache.coyote.http11.Http11AprProtocol\")) {\n            return;\n        }\n\n        // Must have a real docBase - just use temp\n        StandardContext ctx = (StandardContext) tomcat.addContext(\"\", System.getProperty(\"java.io.tmpdir\"));\n\n        NBWriteServlet servlet = new NBWriteServlet();\n        String servletName = NBWriteServlet.class.getName();\n        Tomcat.addServlet(ctx, servletName, servlet);\n        ctx.addServletMapping(\"/\", servletName);\n        tomcat.getConnector().setProperty(\"socket.txBufSize\", \"1024\");\n        tomcat.start();\n\n        Map<String, List<String>> resHeaders = new HashMap<>();\n        ByteChunk slowReader = new ByteChunk();\n        slowReader.setLimit(1); // FIXME BUFFER IS BROKEN, 0 doesn't work\n        slowReader.setByteOutputChannel(new ByteOutputChannel() {\n            long counter = 0;\n            long delta = 0;\n\n            @Override\n            public void realWriteBytes(byte[] cbuf, int off, int len) throws IOException {\n                try {\n                    if (len == 0)\n                        return;\n                    counter += len;\n                    delta += len;\n                    if (counter > bytesToDownload) {\n                        System.out.println(\"ERROR Downloaded more than expected ERROR\");\n                    } else if (counter == bytesToDownload) {\n                        System.out.println(\"Download complete(\" + bytesToDownload + \" bytes)\");\n                        // } else if (counter > (1966086)) {\n                        // System.out.println(\"Download almost complete, missing bytes (\"+counter+\")\");\n                    } else if (delta > (bytesToDownload / 16)) {\n                        System.out.println(\"Read \" + counter + \" bytes.\");\n                        delta = 0;\n                        Thread.sleep(500);\n                    }\n                } catch (Exception x) {\n                    throw new IOException(x);\n                }\n            }\n        });\n        int rc = postUrlWithDisconnect(true, new DataWriter(0), \"http://localhost:\" + getPort() + \"/\", resHeaders,\n                null);\n        slowReader.flushBuffer();\n        Assert.assertEquals(HttpServletResponse.SC_OK, rc);\n        try {\n            //allow the listeners to finish up\n            Thread.sleep(1000);\n        } catch (Exception e) {\n        }\n        Assert.assertTrue(\"Error listener should have been invoked.\", servlet.wlistener.onErrorInvoked);\n    }","commit_id":"04a01622595a97478cbc7728408158fc763483d1","url":"https://github.com/apache/tomcat"},{"original_method":"@Test\n    public void testNonBlockingWrite() throws Exception {\n        String bind = \"localhost\";\n        // Configure a context with digest auth and a single protected resource\n        Tomcat tomcat = getTomcatInstance();\n        // Must have a real docBase - just use temp\n        StandardContext ctx = (StandardContext) tomcat.addContext(\"\", System.getProperty(\"java.io.tmpdir\"));\n\n        NBWriteServlet servlet = new NBWriteServlet();\n        String servletName = NBWriteServlet.class.getName();\n        Tomcat.addServlet(ctx, servletName, servlet);\n        ctx.addServletMapping(\"/\", servletName);\n        tomcat.getConnector().setProperty(\"socket.txBufSize\", \"1024\");\n        tomcat.getConnector().setProperty(\"address\", bind);\n        System.out.println(tomcat.getConnector().getProperty(\"address\"));\n        tomcat.start();\n\n        Map<String, List<String>> resHeaders = new HashMap<>();\n        ByteChunk slowReader = new ByteChunk();\n        slowReader.setLimit(1); // FIXME BUFFER IS BROKEN, 0 doesn't work\n        slowReader.setByteOutputChannel(new ByteOutputChannel() {\n            long counter = 0;\n            long delta = 0;\n\n            @Override\n            public void realWriteBytes(byte[] cbuf, int off, int len) throws IOException {\n                try {\n                    if (len == 0)\n                        return;\n                    counter += len;\n                    delta += len;\n                    if (counter > bytesToDownload) {\n                        System.out.println(\"ERROR Downloaded more than expected ERROR\");\n                    } else if (counter == bytesToDownload) {\n                        System.out.println(\"Download complete(\" + bytesToDownload + \" bytes)\");\n                        // } else if (counter > (1966086)) {\n                        // System.out.println(\"Download almost complete, missing bytes (\"+counter+\")\");\n                    } else if (delta > (bytesToDownload / 16)) {\n                        System.out.println(\"Read \" + counter + \" bytes.\");\n                        delta = 0;\n                        Thread.sleep(500);\n                    }\n                } catch (Exception x) {\n                    throw new IOException(x);\n                }\n            }\n        });\n        int rc = postUrl(true, new DataWriter(0), \"http://\" + bind + \":\" + getPort() + \"/\", slowReader, resHeaders,\n                null);\n        slowReader.flushBuffer();\n        Assert.assertEquals(HttpServletResponse.SC_OK, rc);\n    }","id":58521,"modified_method":"@Test\n    public void testNonBlockingWrite() throws Exception {\n        Tomcat tomcat = getTomcatInstance();\n        // Must have a real docBase - just use temp\n        StandardContext ctx = (StandardContext) tomcat.addContext(\"\", System.getProperty(\"java.io.tmpdir\"));\n\n        NBWriteServlet servlet = new NBWriteServlet();\n        String servletName = NBWriteServlet.class.getName();\n        Tomcat.addServlet(ctx, servletName, servlet);\n        ctx.addServletMapping(\"/\", servletName);\n        tomcat.getConnector().setProperty(\"socket.txBufSize\", \"1024\");\n        tomcat.start();\n\n        Map<String, List<String>> resHeaders = new HashMap<>();\n        ByteChunk slowReader = new ByteChunk();\n        slowReader.setLimit(1); // FIXME BUFFER IS BROKEN, 0 doesn't work\n        slowReader.setByteOutputChannel(new ByteOutputChannel() {\n            long counter = 0;\n            long delta = 0;\n\n            @Override\n            public void realWriteBytes(byte[] cbuf, int off, int len) throws IOException {\n                try {\n                    if (len == 0)\n                        return;\n                    counter += len;\n                    delta += len;\n                    if (counter > bytesToDownload) {\n                        System.out.println(\"ERROR Downloaded more than expected ERROR\");\n                    } else if (counter == bytesToDownload) {\n                        System.out.println(\"Download complete(\" + bytesToDownload + \" bytes)\");\n                        // } else if (counter > (1966086)) {\n                        // System.out.println(\"Download almost complete, missing bytes (\"+counter+\")\");\n                    } else if (delta > (bytesToDownload / 16)) {\n                        System.out.println(\"Read \" + counter + \" bytes.\");\n                        delta = 0;\n                        Thread.sleep(500);\n                    }\n                } catch (Exception x) {\n                    throw new IOException(x);\n                }\n            }\n        });\n        int rc = postUrl(true, new DataWriter(0), \"http://localhost:\" + getPort() + \"/\", slowReader, resHeaders,\n                null);\n        slowReader.flushBuffer();\n        Assert.assertEquals(HttpServletResponse.SC_OK, rc);\n    }","commit_id":"04a01622595a97478cbc7728408158fc763483d1","url":"https://github.com/apache/tomcat"},{"original_method":"@Override\n  public void fillCommandLineParameters(@NotNull ParametersList commandLineParameters, @NotNull SelectedBundle[] bundlesToInstall) {\n    commandLineParameters.add(\"--p=\" + getOsgiFrameworkName().toLowerCase());\n    commandLineParameters.add(\"--nologo=true\");\n\n    // Use the selected version if specified.\n    FrameworkInstanceDefinition definition = getRunConfiguration().getInstanceToUse();\n    String version = null;\n    if (definition != null) {\n      version = definition.getVersion();\n    }\n    if (version != null && version.length() > 0) {\n      commandLineParameters.add(\"--v=\" + version);\n    }\n\n    for (SelectedBundle bundle : bundlesToInstall) {\n      String prefix = CachingBundleInfoProvider.isExploded(bundle.getBundleUrl()) ? \"scan-bundle:\" : \"\";\n      if (bundle.isStartAfterInstallation() && !CachingBundleInfoProvider.isFragmentBundle(bundle.getBundleUrl())) {\n        int bundleStartLevel = bundle.isDefaultStartLevel() ? getRunConfiguration().getDefaultStartLevel() : bundle.getStartLevel();\n        commandLineParameters.add(prefix + bundle.getBundleUrl() + \"@\" + bundleStartLevel);\n      }\n      else {\n        if (CachingBundleInfoProvider.isFragmentBundle(bundle.getBundleUrl())) {\n          commandLineParameters.add(prefix + bundle.getBundleUrl() + \"@nostart\");\n        }\n        else {\n          commandLineParameters.add(prefix + bundle.getBundleUrl());\n        }\n      }\n    }\n\n    P frameworkProperties = getFrameworkProperties();\n    String bootDelegation = frameworkProperties.getBootDelegation();\n    if (bootDelegation != null && !(bootDelegation.trim().length() == 0)) {\n      commandLineParameters.add(\"--bd=\" + bootDelegation);\n    }\n\n    String systemPackages = frameworkProperties.getSystemPackages();\n    if (systemPackages != null && !(systemPackages.trim().length() == 0)) {\n      commandLineParameters.add(\"--sp=\" + systemPackages);\n    }\n\n    int startLevel = getFrameworkStartLevel(bundlesToInstall);\n    commandLineParameters.add(\"--sl=\" + startLevel);\n\n    int defaultStartLevel = getRunConfiguration().getDefaultStartLevel();\n    commandLineParameters.add(\"--bsl=\" + defaultStartLevel);\n\n    if (frameworkProperties.isDebugMode()) {\n      commandLineParameters.add(\"--log=DEBUG\");\n    }\n\n    if (frameworkProperties.isStartConsole()) {\n      commandLineParameters.add(\"--console\");\n    }\n    else {\n      commandLineParameters.add(\"--noConsole\");\n    }\n\n    commandLineParameters.add(\"--executor=inProcess\");\n    commandLineParameters.add(\"--keepOriginalUrls\");\n    commandLineParameters.add(\"--skipInvalidBundles\");\n\n    String additionalProgramParams = getRunConfiguration().getProgramParameters();\n    if (!StringUtil.isEmptyOrSpaces(additionalProgramParams)) {\n      commandLineParameters.addParametersString(additionalProgramParams);\n    }\n  }","id":58522,"modified_method":"@Override\n  public void fillCommandLineParameters(@NotNull ParametersList commandLineParameters, @NotNull SelectedBundle[] bundlesToInstall) {\n    commandLineParameters.add(\"--p=\" + getOsgiFrameworkName().toLowerCase());\n    commandLineParameters.add(\"--nologo=true\");\n\n    // Use the selected version if specified.\n    FrameworkInstanceDefinition definition = getRunConfiguration().getInstanceToUse();\n    String version = null;\n    if (definition != null) {\n      version = definition.getVersion();\n    }\n    if (!StringUtil.isEmptyOrSpaces(version)) {\n      commandLineParameters.add(\"--v=\" + version);\n    }\n\n    for (SelectedBundle bundle : bundlesToInstall) {\n      String bundleUrl = bundle.getBundleUrl();\n      String prefix = CachingBundleInfoProvider.isExploded(bundleUrl) ? \"scan-bundle:\" : \"\";\n      if (bundle.isStartAfterInstallation() && !CachingBundleInfoProvider.isFragmentBundle(bundleUrl)) {\n        int bundleStartLevel = bundle.isDefaultStartLevel() ? getRunConfiguration().getDefaultStartLevel() : bundle.getStartLevel();\n        commandLineParameters.add(prefix + bundleUrl + \"@\" + bundleStartLevel);\n      }\n      else {\n        if (CachingBundleInfoProvider.isFragmentBundle(bundleUrl)) {\n          commandLineParameters.add(prefix + bundleUrl + \"@nostart\");\n        }\n        else {\n          commandLineParameters.add(prefix + bundleUrl);\n        }\n      }\n    }\n\n    P frameworkProperties = getFrameworkProperties();\n    String bootDelegation = frameworkProperties.getBootDelegation();\n    if (bootDelegation != null && !(bootDelegation.trim().length() == 0)) {\n      commandLineParameters.add(\"--bd=\" + bootDelegation);\n    }\n\n    String systemPackages = frameworkProperties.getSystemPackages();\n    if (systemPackages != null && !(systemPackages.trim().length() == 0)) {\n      commandLineParameters.add(\"--sp=\" + systemPackages);\n    }\n\n    int startLevel = getFrameworkStartLevel(bundlesToInstall);\n    commandLineParameters.add(\"--sl=\" + startLevel);\n\n    int defaultStartLevel = getRunConfiguration().getDefaultStartLevel();\n    commandLineParameters.add(\"--bsl=\" + defaultStartLevel);\n\n    if (frameworkProperties.isDebugMode()) {\n      commandLineParameters.add(\"--log=DEBUG\");\n    }\n\n    if (frameworkProperties.isStartConsole()) {\n      commandLineParameters.add(\"--console\");\n    }\n    else {\n      commandLineParameters.add(\"--noConsole\");\n    }\n\n    commandLineParameters.add(\"--executor=inProcess\");\n    commandLineParameters.add(\"--keepOriginalUrls\");\n    commandLineParameters.add(\"--skipInvalidBundles\");\n\n    String additionalProgramParams = getRunConfiguration().getProgramParameters();\n    if (!StringUtil.isEmptyOrSpaces(additionalProgramParams)) {\n      commandLineParameters.addParametersString(additionalProgramParams);\n    }\n  }","commit_id":"a943190119a377ac1eafbcab1de08458c53c312b","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"@NotNull\n    protected Map<String, String> getSystemProperties(@NotNull SelectedBundle[] bundlesToInstall,\n                                                      @NotNull ConciergeRunProperties runProperties) {\n        Map<String, String> props = new HashMap<String, String>();\n        int level = 0;\n        for (SelectedBundle bundle : bundlesToInstall) {\n            int startLevel = bundle.getStartLevel();\n            level = Math.max(level, startLevel);\n            String installBundles = props.get(\"osgi.auto.install\");\n            installBundles = installBundles != null ? installBundles + \" \" + bundle.getBundleUrl() : bundle.getBundleUrl();\n\n            String startBundles = props.get(\"osgi.auto.start\");\n            if (bundle.isStartAfterInstallation() && !CachingBundleInfoProvider.isFragmentBundle(bundle.getBundleUrl())) {\n                startBundles = startBundles != null ? startBundles + \" \" + bundle.getBundleUrl() : bundle.getBundleUrl();\n            }\n            if (installBundles != null) {\n                props.put(\"osgi.auto.install\", installBundles);\n            }\n            if (startBundles != null) {\n                props.put(\"osgi.auto.start\", startBundles);\n            }\n        }\n\n        props.put(\"osgi.startlevel.framework\", String.valueOf(level));\n        // http://concierge.sourceforge.net/properties.html\n        props.put(\"osgi.init\", \"true\");\n\n        // setup the framework storage directory.\n        props.put(\"ch.ethz.iks.concierge.storage\", getFrameworkDirCanonicalPath());\n\n        // show errors, otherwise the user will be going crazy...\n        if (runProperties.isDebugMode()) {\n            props.put(\"ch.ethz.iks.concierge.debug\", \"true\");\n        }\n\n        return props;\n    }","id":58523,"modified_method":"@NotNull\n    protected Map<String, String> getSystemProperties(@NotNull SelectedBundle[] bundlesToInstall,\n                                                      @NotNull ConciergeRunProperties runProperties) {\n        Map<String, String> props = new HashMap<String, String>();\n        int level = 0;\n        for (SelectedBundle bundle : bundlesToInstall) {\n            int startLevel = bundle.getStartLevel();\n            level = Math.max(level, startLevel);\n            String installBundles = props.get(\"osgi.auto.install\");\n            String bundleUrl = bundle.getBundleUrl();\n            if (bundleUrl != null) {\n                bundleUrl = bundleUrl.replaceAll(\" \", \"%20\");\n            }\n            installBundles = installBundles != null ? installBundles + \" \" + bundleUrl : bundleUrl;\n\n            String startBundles = props.get(\"osgi.auto.start\");\n            if (bundle.isStartAfterInstallation() && !CachingBundleInfoProvider.isFragmentBundle(bundleUrl)) {\n                startBundles = startBundles != null ? startBundles + \" \" + bundleUrl : bundleUrl;\n            }\n            if (installBundles != null) {\n                props.put(\"osgi.auto.install\", installBundles);\n            }\n            if (startBundles != null) {\n                props.put(\"osgi.auto.start\", startBundles);\n            }\n        }\n\n        props.put(\"osgi.startlevel.framework\", String.valueOf(level));\n        // http://concierge.sourceforge.net/properties.html\n        props.put(\"osgi.init\", \"true\");\n\n        // setup the framework storage directory.\n        props.put(\"ch.ethz.iks.concierge.storage\", getFrameworkDirCanonicalPath());\n\n        // show errors, otherwise the user will be going crazy...\n        if (runProperties.isDebugMode()) {\n            props.put(\"ch.ethz.iks.concierge.debug\", \"true\");\n        }\n\n        return props;\n    }","commit_id":"b21ddc332875b9e10fe81199d485010613c9ad41","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"private void fillMiscProperties(Properties properties) {\n        FrameworkInstanceDefinition frameworkInstance = getFrameworkInstance();\n        String osgiInstallArea;\n        try {\n            osgiInstallArea = createFileURL(new File(frameworkInstance.getBaseFolder()).toURI().toURL().toString());\n        } catch (MalformedURLException e) {\n            throw new RuntimeException(e);\n        }\n        properties.put(\"osgi.install.area\", osgiInstallArea);\n        properties.put(\"osgi.configuration.cascaded\", \"false\");\n    }","id":58524,"modified_method":"private void fillMiscProperties(Properties properties) {\n        FrameworkInstanceDefinition frameworkInstance = getFrameworkInstance();\n        String osgiInstallArea;\n        try {\n            osgiInstallArea = createFileURL(new File(frameworkInstance.getBaseFolder()).toURL().toString());\n        } catch (MalformedURLException e) {\n            throw new RuntimeException(e);\n        }\n        properties.put(\"osgi.install.area\", osgiInstallArea);\n        properties.put(\"osgi.configuration.cascaded\", \"false\");\n    }","commit_id":"b21ddc332875b9e10fe81199d485010613c9ad41","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"protected void runCustomInstallationSteps(@NotNull SelectedBundle[] bundlesToInstall,\n                                              @NotNull FelixRunProperties runProperties) {\n        Properties props = new Properties();\n        try {\n            String resourceName = \"/\" + getClass().getPackage().getName().replace('.', '/') + \"/config.properties\";\n            props.load(getClass().getResourceAsStream(resourceName));\n            // enrich with bundles to install\n            int level = 0;\n            for (SelectedBundle bundle : bundlesToInstall) {\n                int startLevel = bundle.getStartLevel();\n                level = Math.max(level, startLevel);\n                // XXX: this is not exactly resource conserving...\n                String installBundles = (String) props.get(\"felix.auto.install.\" + startLevel);\n                installBundles = installBundles != null ? installBundles + \" \" + bundle.getBundleUrl() : bundle.getBundleUrl();\n\n                String startBundles = (String) props.get(\"felix.auto.start.\" + startLevel);\n                if (bundle.isStartAfterInstallation() && !CachingBundleInfoProvider.isFragmentBundle(bundle.getBundleUrl())) {\n                    startBundles = startBundles != null ? startBundles + \" \" + bundle.getBundleUrl() : bundle.getBundleUrl();\n                }\n\n                if (installBundles != null) {\n                    props.put(\"felix.auto.install.\" + startLevel, installBundles);\n                }\n                if (startBundles != null) {\n                    props.put(\"felix.auto.start.\" + startLevel, startBundles);\n                }\n            }\n            if (runProperties.isDebugMode()) {\n                props.put(\"felix.log.level\", \"4\");\n            } else {\n                props.put(\"felix.log.level\", \"1\");\n            }\n\n            String systemPackages = runProperties.getSystemPackages();\n            if (systemPackages != null && !(systemPackages.trim().length() == 0)) {\n                String pkg = props.getProperty(\"org.osgi.framework.system.packages\") + \",\" + systemPackages;\n                props.setProperty(\"org.osgi.framework.system.packages\", pkg);\n            }\n            String bootDelegation = runProperties.getBootDelegation();\n            if (bootDelegation != null && !(bootDelegation.trim().length() == 0)) {\n                props.setProperty(\"org.osgi.framework.bootdelegation\", bootDelegation);\n            }\n\n            props.put(\"felix.startlevel.framework\", String.valueOf(level));\n            props.store(new FileOutputStream(getPropertiesFile()), \"\");\n        }\n        catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }","id":58525,"modified_method":"protected void runCustomInstallationSteps(@NotNull SelectedBundle[] bundlesToInstall,\n                                              @NotNull FelixRunProperties runProperties) {\n        Properties props = new Properties();\n        try {\n            String resourceName = \"/\" + getClass().getPackage().getName().replace('.', '/') + \"/config.properties\";\n            props.load(getClass().getResourceAsStream(resourceName));\n            // enrich with bundles to install\n            int level = 0;\n            for (SelectedBundle bundle : bundlesToInstall) {\n                int startLevel = bundle.getStartLevel();\n                level = Math.max(level, startLevel);\n                // XXX: this is not exactly resource conserving...\n                String installBundles = (String) props.get(\"felix.auto.install.\" + startLevel);\n                String bundleUrl = bundle.getBundleUrl();\n                if (bundleUrl != null) {\n                    bundleUrl = bundleUrl.replaceAll(\" \", \"%20\");\n                }\n                installBundles = installBundles != null ? installBundles + \" \" + bundleUrl : bundleUrl;\n\n                String startBundles = (String) props.get(\"felix.auto.start.\" + startLevel);\n                if (bundle.isStartAfterInstallation() && !CachingBundleInfoProvider.isFragmentBundle(bundleUrl)) {\n                    startBundles = startBundles != null ? startBundles + \" \" + bundleUrl : bundleUrl;\n                }\n\n                if (installBundles != null) {\n                    props.put(\"felix.auto.install.\" + startLevel, installBundles);\n                }\n                if (startBundles != null) {\n                    props.put(\"felix.auto.start.\" + startLevel, startBundles);\n                }\n            }\n            if (runProperties.isDebugMode()) {\n                props.put(\"felix.log.level\", \"4\");\n            } else {\n                props.put(\"felix.log.level\", \"1\");\n            }\n\n            String systemPackages = runProperties.getSystemPackages();\n            if (systemPackages != null && !(systemPackages.trim().length() == 0)) {\n                String pkg = props.getProperty(\"org.osgi.framework.system.packages\") + \",\" + systemPackages;\n                props.setProperty(\"org.osgi.framework.system.packages\", pkg);\n            }\n            String bootDelegation = runProperties.getBootDelegation();\n            if (bootDelegation != null && !(bootDelegation.trim().length() == 0)) {\n                props.setProperty(\"org.osgi.framework.bootdelegation\", bootDelegation);\n            }\n\n            props.put(\"felix.startlevel.framework\", String.valueOf(level));\n            props.store(new FileOutputStream(getPropertiesFile()), \"\");\n        }\n        catch (IOException e) {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"b21ddc332875b9e10fe81199d485010613c9ad41","url":"https://github.com/JetBrains/intellij-plugins"},{"original_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testGridCacheQueryExample() throws Exception {\n        CacheQueryExample.main(EMPTY_ARGS);\n    }","id":58526,"modified_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testGridCacheQueryExample() throws Exception {\n        try (Grid g = GridGainEx.start(\"examples/config/example-cache.xml\", \"grid1\")) {\n            CacheQueryExample.main(EMPTY_ARGS);\n            CacheQueryExample.main(EMPTY_ARGS);\n            CacheQueryExample.main(EMPTY_ARGS);\n        }\n    }","commit_id":"a38449621dc0d272d32e449886e057c4f6f53e62","url":"https://github.com/apache/ignite"},{"original_method":"Jcr(Oak oak) {\n        this.oak = oak;\n\n        with(new InitialContent());\n\n        with(JcrConflictHandler.JCR_CONFLICT_HANDLER);\n        with(new DefaultTypeEditor());\n        with(new VersionHook());\n\n        with(new SecurityProviderImpl());\n\n        with(new NameValidatorProvider());\n        with(new NamespaceValidatorProvider());\n        with(new TypeValidatorProvider());\n        with(new RegistrationValidatorProvider());\n        with(new ConflictValidatorProvider());\n\n        with(new Property2IndexHookProvider());\n\n        with(new Property2IndexProvider());\n        with(new NodeTypeIndexProvider());\n    }","id":58527,"modified_method":"public Jcr(Oak oak) {\n        this.oak = oak;\n\n        with(new InitialContent());\n\n        with(JcrConflictHandler.JCR_CONFLICT_HANDLER);\n        with(new DefaultTypeEditor());\n        with(new VersionHook());\n\n        with(new SecurityProviderImpl());\n\n        with(new NameValidatorProvider());\n        with(new NamespaceValidatorProvider());\n        with(new TypeValidatorProvider());\n        with(new RegistrationValidatorProvider());\n        with(new ConflictValidatorProvider());\n\n        with(new Property2IndexHookProvider());\n\n        with(new Property2IndexProvider());\n        with(new NodeTypeIndexProvider());\n    }","commit_id":"0d916bf2e39aad2522a2d1592c7c1b41aeaf6db6","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"public static void main(String[] args) throws Exception {\n        printProductInfo();\n\n        if (args.length > 0 && \"mk\".equals(args[0])) {\n            String[] newArgs = new String[args.length - 1];\n            System.arraycopy(args, 1, newArgs, 0, newArgs.length);\n            MicroKernelServer.main(newArgs);\n        } else {\n            HttpServer httpServer = new HttpServer(URI, args);\n            httpServer.start();\n        }\n    }","id":58528,"modified_method":"public static void main(String[] args) throws Exception {\n        printProductInfo();\n\n        String command = \"server\";\n        if (args.length > 0) {\n            command = args[0];\n            String[] tail = new String[args.length - 1];\n            System.arraycopy(args, 1, tail, 0, tail.length);\n            args = tail;\n        }\n        if (\"mk\".equals(command)) {\n            MicroKernelServer.main(args);\n        } else if (\"benchmark\".equals(command)){\n            Benchmark.main(args);\n        } else if (\"server\".equals(command)){\n            HttpServer httpServer = new HttpServer(URI, args);\n            httpServer.start();\n        } else {\n            System.err.println(\"Unknown command: \" + command);\n            System.exit(1);\n        }\n    }","commit_id":"0d916bf2e39aad2522a2d1592c7c1b41aeaf6db6","url":"https://github.com/apache/jackrabbit-oak"},{"original_method":"/** user should set -Dfindbugs.launchUI=0 for textui,\n\t *  or -Dfindbugs.launchUI=1 for the original swing gui.\n\t *  Any other value (or the absense of any value) will\n\t *  not change the default behavior, which is to launch\n\t *  the newer \"gui2\" on systems that support it.\n\t *  \n\t * @return 0, 1, or 2 (or possibly another user-set int value)\n\t */\n\tpublic static int getLaunchProperty() {\n\t\tString s = System.getProperty(\"findbugs.launchUI\", \"2\");\n\t\ttry {\n\t\t\treturn Integer.parseInt(s);\n\t\t} catch (NumberFormatException nfe) {\n\t\t\treturn 2;\n\t\t}\n\t}","id":58529,"modified_method":"/** user should set -Dfindbugs.launchUI=0 for textui,\n\t *  or -Dfindbugs.launchUI=1 for the original swing gui.\n\t * -Dfindbugs.launchUI=version runs the ShowVersion main() method.\n\t * -Dfindbugs.launchUI=help runs the ShowHelp main() method.\n\t *  Any other value (or the absense of any value) will\n\t *  not change the default behavior, which is to launch\n\t *  the newer \"gui2\" on systems that support it.\n\t *  \n\t * @return 0, 1, 2, SHOW_VERSION, SHOW_HELP, or possibly another user-set int value\n\t */\n\tpublic static int getLaunchProperty() {\n\t\tString s = System.getProperty(\"findbugs.launchUI\", \"2\");\n\t\t\n\t\tif (s.equals(\"help\")) {\n\t\t\treturn SHOW_HELP;\n\t\t}\n\t\t\n\t\tif (s.equals(\"version\")) {\n\t\t\treturn SHOW_VERSION;\n\t\t}\n\t\t\n\t\ttry {\n\t\t\treturn Integer.parseInt(s);\n\t\t} catch (NumberFormatException nfe) {\n\t\t\treturn 2;\n\t\t}\n\t}","commit_id":"a239f5a2aa9d1b59d478eef37d9dc7f502c6e0be","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public static void main(String args[]) throws Exception {\n\t\tint launchProperty = getLaunchProperty();\n\t\t// Sanity-check the loaded BCEL classes\n\t\tif(!CheckBcel.check()) {\n\t\t\tSystem.exit(1);\n\t\t}\n\t\tif (GraphicsEnvironment.isHeadless() || launchProperty == 0)\n\t\t\tFindBugs2.main(args);\n\t\telse {\n\t\t\tString version = System.getProperty(\"java.version\");\n\n\t\t\tClass<?> launchClass = null;\n\t\t\tif (\"1.5\".compareTo(version) <= 0) try {\n\t\t\t\tlaunchClass = Class.forName(\"edu.umd.cs.findbugs.gui2.Driver\", false,\n\t\t\t\t\t\tLaunchAppropriateUI.class.getClassLoader());\n\t\t\t} catch (ClassNotFoundException e) {\n\t\t\t\tassert true;\n\t\t\t}\n\t\t\tif (launchClass == null || launchProperty == 1) \n\t\t\t\tlaunchClass = edu.umd.cs.findbugs.gui.FindBugsFrame.class;\n\n\t\t\tMethod mainMethod = launchClass.getMethod(\"main\", args.getClass());\n\t\t\tmainMethod.invoke(null, (Object) args);\n\t\t}\n\t}","id":58530,"modified_method":"public static void main(String args[]) throws Exception {\n\t\tint launchProperty = getLaunchProperty();\n\t\t// Sanity-check the loaded BCEL classes\n\t\tif(!CheckBcel.check()) {\n\t\t\tSystem.exit(1);\n\t\t}\n\t\tif (GraphicsEnvironment.isHeadless() || launchProperty == 0) {\n\t\t\tFindBugs2.main(args);\n\t\t} else if (launchProperty == SHOW_HELP) {\n\t\t\tShowHelp.main(args);\n\t\t} else if (launchProperty == SHOW_VERSION) {\n\t\t\tVersion.main(new String[]{\"-release\"});\n\t\t} else {\n\t\t\tString version = System.getProperty(\"java.version\");\n\n\t\t\tClass<?> launchClass = null;\n\t\t\tif (\"1.5\".compareTo(version) <= 0) try {\n\t\t\t\tlaunchClass = Class.forName(\"edu.umd.cs.findbugs.gui2.Driver\", false,\n\t\t\t\t\t\tLaunchAppropriateUI.class.getClassLoader());\n\t\t\t} catch (ClassNotFoundException e) {\n\t\t\t\tassert true;\n\t\t\t}\n\t\t\tif (launchClass == null || launchProperty == 1) \n\t\t\t\tlaunchClass = edu.umd.cs.findbugs.gui.FindBugsFrame.class;\n\n\t\t\tMethod mainMethod = launchClass.getMethod(\"main\", args.getClass());\n\t\t\tmainMethod.invoke(null, (Object) args);\n\t\t}\n\t}","commit_id":"a239f5a2aa9d1b59d478eef37d9dc7f502c6e0be","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"private static String[] splitLines(final String out) {\n    List<String> result = new ArrayList<String>();\n    final String[] lines = out.split(\"\\n\");\n    for (String line : lines) {\n      if (line.length() > 0 && !line.contains(\"*sys-package-mgr*\")) {\n        result.add(line);\n      }\n    }\n    return result.toArray(new String[result.size()]);\n  }","id":58531,"modified_method":"private static String[] splitLines(final String out) {\n    List<String> result = new ArrayList<String>();\n    final String[] lines = StringUtil.convertLineSeparators(out).split(\"\\n\");\n    for (String line : lines) {\n      if (line.length() > 0 && !line.contains(\"*sys-package-mgr*\")) {\n        result.add(line);\n      }\n    }\n    return result.toArray(new String[result.size()]);\n  }","commit_id":"0108c25bf2618adf85683215f962a90264944ccc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testFile() throws ExecutionException {\n    final File testDir = new File(PathManager.getHomePath(), \"plugins/python/testData/testRunner/tests\");\n    File testFile = new File(testDir, \"unittest1.py\");\n    String[] result = runUTRunner(testDir.getPath(), testFile.getPath());\n    assertEquals(6, result.length);\n    assertEquals(\"##teamcity[testCount count='2']\", result [0]);\n    assertEquals(\"##teamcity[testStarted location='python_uttestid://unittest1.BadTest.test_fails' name='test_fails (unittest1.BadTest)']\", result[1]);\n    assertTrue(result [2], result[2].startsWith(\"##teamcity[testFailed name='test_fails (unittest1.BadTest)' details=\"));\n  }","id":58532,"modified_method":"public void testFile() throws ExecutionException {\n    final File testDir = new File(PathManager.getHomePath(), \"plugins/python/testData/testRunner/tests\");\n    File testFile = new File(testDir, \"unittest1.py\");\n    String[] result = runUTRunner(testDir.getPath(), testFile.getPath());\n    assertEquals(6, result.length);\n    assertEquals(\"##teamcity[testCount count='2']\", result [0]);\n    assertEquals(\"##teamcity[testStarted location='python_uttestid://unittest1.BadTest.test_fails' name='test_fails (unittest1.BadTest)']\", result[1]);\n    assertTrue(result [2], result[2].startsWith(\"##teamcity[testFailed\") && result [2].contains(\"name='test_fails (unittest1.BadTest)'\"));\n  }","commit_id":"0108c25bf2618adf85683215f962a90264944ccc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static Output runJython(String workDir, String pythonPath, String... args) throws ExecutionException {\n    final SimpleJavaSdkType sdkType = new SimpleJavaSdkType();\n    final Sdk ideaJdk = sdkType.createJdk(\"tmp\", SystemProperties.getJavaHome());\n    SimpleJavaParameters parameters = new SimpleJavaParameters();\n    parameters.setJdk(ideaJdk);\n    parameters.setMainClass(\"org.python.util.jython\");\n\n    File jythonJar = new File(PathManager.getHomePath(), \"plugins/python/lib/jython.jar\");\n    parameters.getClassPath().add(jythonJar.getPath());\n\n    parameters.getProgramParametersList().add(\"-Dpython.path=\" + pythonPath + \";\" + workDir);\n    parameters.getProgramParametersList().addAll(args);\n    parameters.setWorkingDirectory(workDir);\n\n    final StringBuilder stdout = new StringBuilder();\n    final StringBuilder stderr = new StringBuilder();\n\n    final GeneralCommandLine commandLine = JdkUtil.setupJVMCommandLine(sdkType.getVMExecutablePath(ideaJdk), parameters, false);\n    final OSProcessHandler processHandler = new OSProcessHandler(commandLine.createProcess(), commandLine.getCommandLineString()) {\n      @Override\n      public void notifyTextAvailable(String text, Key outputType) {\n        if (outputType == ProcessOutputTypes.STDOUT) {\n          stdout.append(text);\n        }\n        else if (outputType == ProcessOutputTypes.STDERR) {\n          stderr.append(text);\n        }\n      }\n    };\n    processHandler.startNotify();\n    processHandler.waitFor();\n\n    return new Output(StringUtil.convertLineSeparators(stdout.toString(), \"\\n\"),\n      StringUtil.convertLineSeparators(stderr.toString(), \"\\n\"));\n  }","id":58533,"modified_method":"private static ProcessOutput runJython(String workDir, String pythonPath, String... args) throws ExecutionException {\n    final SimpleJavaSdkType sdkType = new SimpleJavaSdkType();\n    final Sdk ideaJdk = sdkType.createJdk(\"tmp\", SystemProperties.getJavaHome());\n    SimpleJavaParameters parameters = new SimpleJavaParameters();\n    parameters.setJdk(ideaJdk);\n    parameters.setMainClass(\"org.python.util.jython\");\n\n    File jythonJar = new File(PathManager.getHomePath(), \"plugins/python/lib/jython.jar\");\n    parameters.getClassPath().add(jythonJar.getPath());\n\n    parameters.getProgramParametersList().add(\"-Dpython.path=\" + pythonPath + \";\" + workDir);\n    parameters.getProgramParametersList().addAll(args);\n    parameters.setWorkingDirectory(workDir);\n\n    final GeneralCommandLine commandLine = JdkUtil.setupJVMCommandLine(sdkType.getVMExecutablePath(ideaJdk), parameters, false);\n    final CapturingProcessHandler processHandler = new CapturingProcessHandler(commandLine.createProcess());\n    return processHandler.runProcess();\n  }","commit_id":"0108c25bf2618adf85683215f962a90264944ccc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String[] runUTRunner(String workDir, String... args) throws ExecutionException {\n    File helpersDir = new File(PathManager.getHomePath(), \"plugins/python/helpers\");\n    File utRunner = new File(helpersDir, \"pycharm/utrunner.py\");\n    List<String> allArgs = new ArrayList<String>();\n    allArgs.add(utRunner.getPath());\n    Collections.addAll(allArgs, args);\n    final Output output = runJython(workDir, helpersDir.getPath(), allArgs.toArray(new String[allArgs.size()]));\n    assertEquals(output.stderr, 0, splitLines(output.stderr).length);\n    return splitLines(output.stdout);\n  }","id":58534,"modified_method":"private static String[] runUTRunner(String workDir, String... args) throws ExecutionException {\n    File helpersDir = new File(PathManager.getHomePath(), \"plugins/python/helpers\");\n    File utRunner = new File(helpersDir, \"pycharm/utrunner.py\");\n    List<String> allArgs = new ArrayList<String>();\n    allArgs.add(utRunner.getPath());\n    Collections.addAll(allArgs, args);\n    final ProcessOutput output = runJython(workDir, helpersDir.getPath(), allArgs.toArray(new String[allArgs.size()]));\n    assertEquals(output.getStderr(), 0, splitLines(output.getStderr()).length);\n    return splitLines(output.getStdout());\n  }","commit_id":"0108c25bf2618adf85683215f962a90264944ccc","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void runInProcess(CompileContext compileContext, OutputItemsCollector collector, VirtualFile outputDir, File kotlinHome, File scriptFile) {\n        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n        PrintStream out = new PrintStream(outputStream);\n\n        int rc = execInProcess(kotlinHome, outputDir, scriptFile, out, compileContext);\n\n        ProcessAdapter listener = createProcessListener(compileContext, collector);\n\n        BufferedReader reader = new BufferedReader(new StringReader(outputStream.toString()));\n        while (true) {\n            try {\n                String line = reader.readLine();\n                if (line == null) break;\n                listener.onTextAvailable(new ProcessEvent(NullProcessHandler.INSTANCE, line + \"\\n\"), ProcessOutputTypes.STDERR);\n            } catch (IOException e) {\n                // Can't be\n                throw new IllegalStateException(e);\n            }\n        }\n\n        ProcessEvent termintationEvent = new ProcessEvent(NullProcessHandler.INSTANCE, rc);\n        listener.processWillTerminate(termintationEvent, false);\n        listener.processTerminated(termintationEvent);\n    }","id":58535,"modified_method":"private void runInProcess(final CompileContext compileContext, OutputItemsCollector collector, VirtualFile outputDir, File kotlinHome, File scriptFile) {\n        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n        PrintStream out = new PrintStream(outputStream);\n\n        int exitCode = execInProcess(kotlinHome, outputDir, scriptFile, out, compileContext);\n\n        BufferedReader reader = new BufferedReader(new StringReader(outputStream.toString()));\n        parseCompilerMessagesFromReader(compileContext, reader);\n        handleProcessTermination(exitCode, compileContext);\n    }","commit_id":"2693fc1130ad0a9d1f32f68e3d48671078fcf34c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"private static void runOutOfProcess(CompileContext compileContext, OutputItemsCollector collector, VirtualFile outputDir, File kotlinHome, File scriptFile) {\n        final SimpleJavaParameters params = new SimpleJavaParameters();\n        params.setJdk(new SimpleJavaSdkType().createJdk(\"tmp\", SystemProperties.getJavaHome()));\n        params.setMainClass(\"org.jetbrains.jet.cli.KotlinCompiler\");\n        params.getProgramParametersList().add(\"-module\", scriptFile.getAbsolutePath());\n        params.getProgramParametersList().add(\"-output\", path(outputDir));\n        params.getProgramParametersList().add(\"-tags\");\n        params.getProgramParametersList().add(\"-verbose\");\n\n        for (File jar : kompilerClasspath(kotlinHome, compileContext)) {\n            params.getClassPath().add(jar);\n        }\n\n        params.getVMParametersList().addParametersString(\"-Djava.awt.headless=true -Xmx512m\");\n//        params.getVMParametersList().addParametersString(\"-agentlib:yjpagent=sampling\");\n\n        Sdk sdk = params.getJdk();\n\n        final GeneralCommandLine commandLine = JdkUtil.setupJVMCommandLine(\n                ((JavaSdkType) sdk.getSdkType()).getVMExecutablePath(sdk), params, false);\n        \n        compileContext.addMessage(INFORMATION, \"Invoking out-of-process compiler with arguments: \" + commandLine, \"\", -1, -1);\n        \n        try {\n            final OSProcessHandler processHandler = new OSProcessHandler(commandLine.createProcess(), commandLine.getCommandLineString()) {\n              @Override\n              public Charset getCharset() {\n                return commandLine.getCharset();\n              }\n            };\n\n            ProcessAdapter processListener = createProcessListener(compileContext, collector);\n            processHandler.addProcessListener(processListener);\n\n            processHandler.startNotify();\n            processHandler.waitFor();\n        } catch (Exception e) {\n            compileContext.addMessage(ERROR, \"[Internal Error] \" + e.getLocalizedMessage(), \"\", -1, -1);\n            return;\n        }\n    }","id":58536,"modified_method":"private static void runOutOfProcess(final CompileContext compileContext, OutputItemsCollector collector, VirtualFile outputDir, File kotlinHome, File scriptFile) {\n        final SimpleJavaParameters params = new SimpleJavaParameters();\n        params.setJdk(new SimpleJavaSdkType().createJdk(\"tmp\", SystemProperties.getJavaHome()));\n        params.setMainClass(\"org.jetbrains.jet.cli.KotlinCompiler\");\n        params.getProgramParametersList().add(\"-module\", scriptFile.getAbsolutePath());\n        params.getProgramParametersList().add(\"-output\", path(outputDir));\n        params.getProgramParametersList().add(\"-tags\");\n        params.getProgramParametersList().add(\"-verbose\");\n\n        for (File jar : kompilerClasspath(kotlinHome, compileContext)) {\n            params.getClassPath().add(jar);\n        }\n\n        params.getVMParametersList().addParametersString(\"-Djava.awt.headless=true -Xmx512m\");\n//        params.getVMParametersList().addParametersString(\"-agentlib:yjpagent=sampling\");\n\n        Sdk sdk = params.getJdk();\n\n        final GeneralCommandLine commandLine = JdkUtil.setupJVMCommandLine(\n                ((JavaSdkType) sdk.getSdkType()).getVMExecutablePath(sdk), params, false);\n        \n        compileContext.addMessage(INFORMATION, \"Invoking out-of-process compiler with arguments: \" + commandLine, \"\", -1, -1);\n        \n        try {\n            Process process = commandLine.createProcess();\n            final InputStream err = process.getErrorStream();\n            final InputStream out = process.getInputStream();\n\n            ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n                @Override\n                public void run() {\n                    parseCompilerMessagesFromReader(compileContext, new InputStreamReader(out));\n                }\n            });\n\n            ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        FileUtil.loadBytes(err);\n                    }\n                    catch (IOException e) {\n                        // Don't care\n                    }\n                }\n            });\n\n            process.waitFor();\n            handleProcessTermination(process.exitValue(), compileContext);\n        }\n        catch (Exception e) {\n            compileContext.addMessage(ERROR, \"[Internal Error] \" + e.getLocalizedMessage(), \"\", -1, -1);\n            return;\n        }\n    }","commit_id":"2693fc1130ad0a9d1f32f68e3d48671078fcf34c","url":"https://github.com/JetBrains/kotlin"},{"original_method":"protected void setRunnerPath(GeneralCommandLine commandLine) throws ExecutionException {\n    String interpreterPath = myConfig.getInterpreterPath();\n    if (interpreterPath == null) {\n      throw new ExecutionException(\"Cannot find Python interpreter for this run configuration\");\n    }\n    commandLine.setExePath(interpreterPath);\n  }","id":58537,"modified_method":"protected void setRunnerPath(GeneralCommandLine commandLine) throws ExecutionException {\n    String interpreterPath = getInterpreterPath();\n    commandLine.setExePath(interpreterPath);\n  }","commit_id":"ea6470a4d060c9032858415cd3a1eb4226525796","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Patches the command line parameters applying patchers from first to last, and then runs it.\n   * @param patchers any number of patchers; any patcher may be null, and the whole argument may be null.\n   * @return handler of the started process\n   * @throws ExecutionException\n   */\n  protected ColoredProcessHandler startProcess(CommandLinePatcher... patchers) throws ExecutionException {\n    GeneralCommandLine commandLine = generateCommandLine();\n    if (patchers != null) {\n      for (CommandLinePatcher patcher: patchers) {\n        if (patcher != null) patcher.patchCommandLine(commandLine);\n      }\n    }\n\n    final ColoredProcessHandler processHandler = new ColoredProcessHandler(commandLine.createProcess(), commandLine.getCommandLineString());\n    ProcessTerminatedListener.attach(processHandler);\n    return processHandler;\n  }","id":58538,"modified_method":"/**\n   * Patches the command line parameters applying patchers from first to last, and then runs it.\n   * @param patchers any number of patchers; any patcher may be null, and the whole argument may be null.\n   * @return handler of the started process\n   * @throws ExecutionException\n   */\n  protected ColoredProcessHandler startProcess(CommandLinePatcher... patchers) throws ExecutionException {\n    GeneralCommandLine commandLine = generateCommandLine();\n    if (patchers != null) {\n      for (CommandLinePatcher patcher: patchers) {\n        if (patcher != null) patcher.patchCommandLine(commandLine);\n      }\n    }\n\n    final ColoredProcessHandler processHandler = createProcess(commandLine.createProcess(), commandLine);\n    ProcessTerminatedListener.attach(processHandler);\n    return processHandler;\n  }","commit_id":"ea6470a4d060c9032858415cd3a1eb4226525796","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\tprivate void setPropertyValue(PropertyTokenHolder tokens, PropertyValue pv) throws BeansException {\n\t\tString propertyName = tokens.canonicalName;\n\t\tString actualName = tokens.actualName;\n\n\t\tif (tokens.keys != null) {\n\t\t\t// Apply indexes and map keys: fetch value for all keys but the last one.\n\t\t\tPropertyTokenHolder getterTokens = new PropertyTokenHolder();\n\t\t\tgetterTokens.canonicalName = tokens.canonicalName;\n\t\t\tgetterTokens.actualName = tokens.actualName;\n\t\t\tgetterTokens.keys = new String[tokens.keys.length - 1];\n\t\t\tSystem.arraycopy(tokens.keys, 0, getterTokens.keys, 0, tokens.keys.length - 1);\n\t\t\tObject propValue;\n\t\t\ttry {\n\t\t\t\tpropValue = getPropertyValue(getterTokens);\n\t\t\t}\n\t\t\tcatch (NotReadablePropertyException ex) {\n\t\t\t\tthrow new NotWritablePropertyException(getRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\"Cannot access indexed value in property referenced \" +\n\t\t\t\t\t\t\"in indexed property path '\" + propertyName + \"'\", ex);\n\t\t\t}\n\t\t\t// Set value for last key.\n\t\t\tString key = tokens.keys[tokens.keys.length - 1];\n\t\t\tif (propValue == null) {\n\t\t\t\t// null map value case\n\t\t\t\tif (isAutoGrowNestedPaths()) {\n\t\t\t\t\t// TODO: cleanup, this is pretty hacky\n\t\t\t\t\tint lastKeyIndex = tokens.canonicalName.lastIndexOf('[');\n\t\t\t\t\tgetterTokens.canonicalName = tokens.canonicalName.substring(0, lastKeyIndex);\n\t\t\t\t\tpropValue = setDefaultValue(getterTokens);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new NullValueInNestedPathException(getRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\t\"Cannot access indexed value in property referenced \" +\n\t\t\t\t\t\t\t\"in indexed property path '\" + propertyName + \"': returned null\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (propValue.getClass().isArray()) {\n\t\t\t\tPropertyDescriptor pd = getCachedIntrospectionResults().getPropertyDescriptor(actualName);\n\t\t\t\tClass<?> requiredType = propValue.getClass().getComponentType();\n\t\t\t\tint arrayIndex = Integer.parseInt(key);\n\t\t\t\tObject oldValue = null;\n\t\t\t\ttry {\n\t\t\t\t\tif (isExtractOldValueForEditor() && arrayIndex < Array.getLength(propValue)) {\n\t\t\t\t\t\toldValue = Array.get(propValue, arrayIndex);\n\t\t\t\t\t}\n\t\t\t\t\tObject convertedValue = convertIfNecessary(propertyName, oldValue, pv.getValue(),\n\t\t\t\t\t\t\trequiredType, TypeDescriptor.nested(property(pd), tokens.keys.length));\n\t\t\t\t\tint length = Array.getLength(propValue);\n\t\t\t\t\tif (arrayIndex >= length && arrayIndex < this.autoGrowCollectionLimit) {\n\t\t\t\t\t\tClass<?> componentType = propValue.getClass().getComponentType();\n\t\t\t\t\t\tObject newArray = Array.newInstance(componentType, arrayIndex + 1);\n\t\t\t\t\t\tSystem.arraycopy(propValue, 0, newArray, 0, length);\n\t\t\t\t\t\tsetPropertyValue(actualName, newArray);\n\t\t\t\t\t\tpropValue = getPropertyValue(actualName);\n\t\t\t\t\t}\n\t\t\t\t\tArray.set(propValue, arrayIndex, convertedValue);\n\t\t\t\t}\n\t\t\t\tcatch (IndexOutOfBoundsException ex) {\n\t\t\t\t\tthrow new InvalidPropertyException(getRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\t\"Invalid array index in property path '\" + propertyName + \"'\", ex);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (propValue instanceof List) {\n\t\t\t\tPropertyDescriptor pd = getCachedIntrospectionResults().getPropertyDescriptor(actualName);\n\t\t\t\tClass<?> requiredType = GenericCollectionTypeResolver.getCollectionReturnType(\n\t\t\t\t\t\tpd.getReadMethod(), tokens.keys.length);\n\t\t\t\tList<Object> list = (List<Object>) propValue;\n\t\t\t\tint index = Integer.parseInt(key);\n\t\t\t\tObject oldValue = null;\n\t\t\t\tif (isExtractOldValueForEditor() && index < list.size()) {\n\t\t\t\t\toldValue = list.get(index);\n\t\t\t\t}\n\t\t\t\tObject convertedValue = convertIfNecessary(propertyName, oldValue, pv.getValue(),\n\t\t\t\t\t\trequiredType, TypeDescriptor.nested(property(pd), tokens.keys.length));\n\t\t\t\tint size = list.size();\n\t\t\t\tif (index >= size && index < this.autoGrowCollectionLimit) {\n\t\t\t\t\tfor (int i = size; i < index; i++) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlist.add(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (NullPointerException ex) {\n\t\t\t\t\t\t\tthrow new InvalidPropertyException(getRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\t\t\t\"Cannot set element with index \" + index + \" in List of size \" +\n\t\t\t\t\t\t\t\t\tsize + \", accessed using property path '\" + propertyName +\n\t\t\t\t\t\t\t\t\t\"': List does not support filling up gaps with null elements\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlist.add(convertedValue);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlist.set(index, convertedValue);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (IndexOutOfBoundsException ex) {\n\t\t\t\t\t\tthrow new InvalidPropertyException(getRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\t\t\"Invalid list index in property path '\" + propertyName + \"'\", ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (propValue instanceof Map) {\n\t\t\t\tPropertyDescriptor pd = getCachedIntrospectionResults().getPropertyDescriptor(actualName);\n\t\t\t\tClass<?> mapKeyType = GenericCollectionTypeResolver.getMapKeyReturnType(\n\t\t\t\t\t\tpd.getReadMethod(), tokens.keys.length);\n\t\t\t\tClass<?> mapValueType = GenericCollectionTypeResolver.getMapValueReturnType(\n\t\t\t\t\t\tpd.getReadMethod(), tokens.keys.length);\n\t\t\t\tMap<Object, Object> map = (Map<Object, Object>) propValue;\n\t\t\t\t// IMPORTANT: Do not pass full property name in here - property editors\n\t\t\t\t// must not kick in for map keys but rather only for map values.\n\t\t\t\tTypeDescriptor typeDescriptor = TypeDescriptor.valueOf(mapKeyType);\n\t\t\t\tObject convertedMapKey = convertIfNecessary(null, null, key, mapKeyType, typeDescriptor);\n\t\t\t\tObject oldValue = null;\n\t\t\t\tif (isExtractOldValueForEditor()) {\n\t\t\t\t\toldValue = map.get(convertedMapKey);\n\t\t\t\t}\n\t\t\t\t// Pass full property name and old value in here, since we want full\n\t\t\t\t// conversion ability for map values.\n\t\t\t\tObject convertedMapValue = convertIfNecessary(propertyName, oldValue, pv.getValue(),\n\t\t\t\t\t\tmapValueType, TypeDescriptor.nested(property(pd), tokens.keys.length));\n\t\t\t\tmap.put(convertedMapKey, convertedMapValue);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new InvalidPropertyException(getRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\"Property referenced in indexed property path '\" + propertyName +\n\t\t\t\t\t\t\"' is neither an array nor a List nor a Map; returned value was [\" + propValue + \"]\");\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tPropertyDescriptor pd = pv.resolvedDescriptor;\n\t\t\tif (pd == null || !pd.getWriteMethod().getDeclaringClass().isInstance(this.object)) {\n\t\t\t\tpd = getCachedIntrospectionResults().getPropertyDescriptor(actualName);\n\t\t\t\tif (pd == null || pd.getWriteMethod() == null) {\n\t\t\t\t\tif (pv.isOptional()) {\n\t\t\t\t\t\tlogger.debug(\"Ignoring optional value for property '\" + actualName +\n\t\t\t\t\t\t\t\t\"' - property not found on bean class [\" + getRootClass().getName() + \"]\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tPropertyMatches matches = PropertyMatches.forProperty(propertyName, getRootClass());\n\t\t\t\t\t\tthrow new NotWritablePropertyException(\n\t\t\t\t\t\t\t\tgetRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\t\tmatches.buildErrorMessage(), matches.getPossibleMatches());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpv.getOriginalPropertyValue().resolvedDescriptor = pd;\n\t\t\t}\n\n\t\t\tObject oldValue = null;\n\t\t\ttry {\n\t\t\t\tObject originalValue = pv.getValue();\n\t\t\t\tObject valueToApply = originalValue;\n\t\t\t\tif (!Boolean.FALSE.equals(pv.conversionNecessary)) {\n\t\t\t\t\tif (pv.isConverted()) {\n\t\t\t\t\t\tvalueToApply = pv.getConvertedValue();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (isExtractOldValueForEditor() && pd.getReadMethod() != null) {\n\t\t\t\t\t\t\tfinal Method readMethod = pd.getReadMethod();\n\t\t\t\t\t\t\tif (!Modifier.isPublic(readMethod.getDeclaringClass().getModifiers()) &&\n\t\t\t\t\t\t\t\t\t!readMethod.isAccessible()) {\n\t\t\t\t\t\t\t\tif (System.getSecurityManager()!= null) {\n\t\t\t\t\t\t\t\t\tAccessController.doPrivileged(new PrivilegedAction<Object>() {\n\t\t\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\t\t\tpublic Object run() {\n\t\t\t\t\t\t\t\t\t\t\treadMethod.setAccessible(true);\n\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\treadMethod.setAccessible(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (System.getSecurityManager() != null) {\n\t\t\t\t\t\t\t\t\toldValue = AccessController.doPrivileged(new PrivilegedExceptionAction<Object>() {\n\t\t\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\t\t\tpublic Object run() throws Exception {\n\t\t\t\t\t\t\t\t\t\t\treturn readMethod.invoke(object);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, acc);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\toldValue = readMethod.invoke(object);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (Exception ex) {\n\t\t\t\t\t\t\t\tif (ex instanceof PrivilegedActionException) {\n\t\t\t\t\t\t\t\t\tex = ((PrivilegedActionException) ex).getException();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\t\t\t\t\tlogger.debug(\"Could not read previous value of property '\" +\n\t\t\t\t\t\t\t\t\t\t\tthis.nestedPath + propertyName + \"'\", ex);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalueToApply = convertForProperty(\n\t\t\t\t\t\t\t\tpropertyName, oldValue, originalValue, new TypeDescriptor(property(pd)));\n\t\t\t\t\t}\n\t\t\t\t\tpv.getOriginalPropertyValue().conversionNecessary = (valueToApply != originalValue);\n\t\t\t\t}\n\t\t\t\tfinal Method writeMethod = (pd instanceof GenericTypeAwarePropertyDescriptor ?\n\t\t\t\t\t\t((GenericTypeAwarePropertyDescriptor) pd).getWriteMethodForActualAccess() :\n\t\t\t\t\t\tpd.getWriteMethod());\n\t\t\t\tif (!Modifier.isPublic(writeMethod.getDeclaringClass().getModifiers()) && !writeMethod.isAccessible()) {\n\t\t\t\t\tif (System.getSecurityManager()!= null) {\n\t\t\t\t\t\tAccessController.doPrivileged(new PrivilegedAction<Object>() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic Object run() {\n\t\t\t\t\t\t\t\twriteMethod.setAccessible(true);\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twriteMethod.setAccessible(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfinal Object value = valueToApply;\n\t\t\t\tif (System.getSecurityManager() != null) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tAccessController.doPrivileged(new PrivilegedExceptionAction<Object>() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic Object run() throws Exception {\n\t\t\t\t\t\t\t\twriteMethod.invoke(object, value);\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, acc);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (PrivilegedActionException ex) {\n\t\t\t\t\t\tthrow ex.getException();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twriteMethod.invoke(this.object, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (TypeMismatchException ex) {\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t\tcatch (InvocationTargetException ex) {\n\t\t\t\tPropertyChangeEvent propertyChangeEvent =\n\t\t\t\t\t\tnew PropertyChangeEvent(this.rootObject, this.nestedPath + propertyName, oldValue, pv.getValue());\n\t\t\t\tif (ex.getTargetException() instanceof ClassCastException) {\n\t\t\t\t\tthrow new TypeMismatchException(propertyChangeEvent, pd.getPropertyType(), ex.getTargetException());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new MethodInvocationException(propertyChangeEvent, ex.getTargetException());\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tPropertyChangeEvent pce =\n\t\t\t\t\t\tnew PropertyChangeEvent(this.rootObject, this.nestedPath + propertyName, oldValue, pv.getValue());\n\t\t\t\tthrow new MethodInvocationException(pce, ex);\n\t\t\t}\n\t\t}\n\t}","id":58539,"modified_method":"@SuppressWarnings(\"unchecked\")\n\tprivate void setPropertyValue(PropertyTokenHolder tokens, PropertyValue pv) throws BeansException {\n\t\tString propertyName = tokens.canonicalName;\n\t\tString actualName = tokens.actualName;\n\n\t\tif (tokens.keys != null) {\n\t\t\t// Apply indexes and map keys: fetch value for all keys but the last one.\n\t\t\tPropertyTokenHolder getterTokens = new PropertyTokenHolder();\n\t\t\tgetterTokens.canonicalName = tokens.canonicalName;\n\t\t\tgetterTokens.actualName = tokens.actualName;\n\t\t\tgetterTokens.keys = new String[tokens.keys.length - 1];\n\t\t\tSystem.arraycopy(tokens.keys, 0, getterTokens.keys, 0, tokens.keys.length - 1);\n\t\t\tObject propValue;\n\t\t\ttry {\n\t\t\t\tpropValue = getPropertyValue(getterTokens);\n\t\t\t}\n\t\t\tcatch (NotReadablePropertyException ex) {\n\t\t\t\tthrow new NotWritablePropertyException(getRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\"Cannot access indexed value in property referenced \" +\n\t\t\t\t\t\t\"in indexed property path '\" + propertyName + \"'\", ex);\n\t\t\t}\n\t\t\t// Set value for last key.\n\t\t\tString key = tokens.keys[tokens.keys.length - 1];\n\t\t\tif (propValue == null) {\n\t\t\t\t// null map value case\n\t\t\t\tif (isAutoGrowNestedPaths()) {\n\t\t\t\t\t// TODO: cleanup, this is pretty hacky\n\t\t\t\t\tint lastKeyIndex = tokens.canonicalName.lastIndexOf('[');\n\t\t\t\t\tgetterTokens.canonicalName = tokens.canonicalName.substring(0, lastKeyIndex);\n\t\t\t\t\tpropValue = setDefaultValue(getterTokens);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new NullValueInNestedPathException(getRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\t\"Cannot access indexed value in property referenced \" +\n\t\t\t\t\t\t\t\"in indexed property path '\" + propertyName + \"': returned null\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (propValue.getClass().isArray()) {\n\t\t\t\tPropertyDescriptor pd = getCachedIntrospectionResults().getPropertyDescriptor(actualName);\n\t\t\t\tClass<?> requiredType = propValue.getClass().getComponentType();\n\t\t\t\tint arrayIndex = Integer.parseInt(key);\n\t\t\t\tObject oldValue = null;\n\t\t\t\ttry {\n\t\t\t\t\tif (isExtractOldValueForEditor() && arrayIndex < Array.getLength(propValue)) {\n\t\t\t\t\t\toldValue = Array.get(propValue, arrayIndex);\n\t\t\t\t\t}\n\t\t\t\t\tObject convertedValue = convertIfNecessary(propertyName, oldValue, pv.getValue(),\n\t\t\t\t\t\t\trequiredType, TypeDescriptor.nested(property(pd), tokens.keys.length));\n\t\t\t\t\tint length = Array.getLength(propValue);\n\t\t\t\t\tif (arrayIndex >= length && arrayIndex < this.autoGrowCollectionLimit) {\n\t\t\t\t\t\tClass<?> componentType = propValue.getClass().getComponentType();\n\t\t\t\t\t\tObject newArray = Array.newInstance(componentType, arrayIndex + 1);\n\t\t\t\t\t\tSystem.arraycopy(propValue, 0, newArray, 0, length);\n\t\t\t\t\t\tsetPropertyValue(actualName, newArray);\n\t\t\t\t\t\tpropValue = getPropertyValue(actualName);\n\t\t\t\t\t}\n\t\t\t\t\tArray.set(propValue, arrayIndex, convertedValue);\n\t\t\t\t}\n\t\t\t\tcatch (IndexOutOfBoundsException ex) {\n\t\t\t\t\tthrow new InvalidPropertyException(getRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\t\"Invalid array index in property path '\" + propertyName + \"'\", ex);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (propValue instanceof List) {\n\t\t\t\tPropertyDescriptor pd = getCachedIntrospectionResults().getPropertyDescriptor(actualName);\n\t\t\t\tClass<?> requiredType = GenericCollectionTypeResolver.getCollectionReturnType(\n\t\t\t\t\t\tpd.getReadMethod(), tokens.keys.length);\n\t\t\t\tList<Object> list = (List<Object>) propValue;\n\t\t\t\tint index = Integer.parseInt(key);\n\t\t\t\tObject oldValue = null;\n\t\t\t\tif (isExtractOldValueForEditor() && index < list.size()) {\n\t\t\t\t\toldValue = list.get(index);\n\t\t\t\t}\n\t\t\t\tObject convertedValue = convertIfNecessary(propertyName, oldValue, pv.getValue(),\n\t\t\t\t\t\trequiredType, TypeDescriptor.nested(property(pd), tokens.keys.length));\n\t\t\t\tint size = list.size();\n\t\t\t\tif (index >= size && index < this.autoGrowCollectionLimit) {\n\t\t\t\t\tfor (int i = size; i < index; i++) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tlist.add(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (NullPointerException ex) {\n\t\t\t\t\t\t\tthrow new InvalidPropertyException(getRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\t\t\t\"Cannot set element with index \" + index + \" in List of size \" +\n\t\t\t\t\t\t\t\t\tsize + \", accessed using property path '\" + propertyName +\n\t\t\t\t\t\t\t\t\t\"': List does not support filling up gaps with null elements\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlist.add(convertedValue);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlist.set(index, convertedValue);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (IndexOutOfBoundsException ex) {\n\t\t\t\t\t\tthrow new InvalidPropertyException(getRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\t\t\"Invalid list index in property path '\" + propertyName + \"'\", ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (propValue instanceof Map) {\n\t\t\t\tPropertyDescriptor pd = getCachedIntrospectionResults().getPropertyDescriptor(actualName);\n\t\t\t\tClass<?> mapKeyType = GenericCollectionTypeResolver.getMapKeyReturnType(\n\t\t\t\t\t\tpd.getReadMethod(), tokens.keys.length);\n\t\t\t\tClass<?> mapValueType = GenericCollectionTypeResolver.getMapValueReturnType(\n\t\t\t\t\t\tpd.getReadMethod(), tokens.keys.length);\n\t\t\t\tMap<Object, Object> map = (Map<Object, Object>) propValue;\n\t\t\t\t// IMPORTANT: Do not pass full property name in here - property editors\n\t\t\t\t// must not kick in for map keys but rather only for map values.\n\t\t\t\tTypeDescriptor typeDescriptor = TypeDescriptor.valueOf(mapKeyType);\n\t\t\t\tObject convertedMapKey = convertIfNecessary(null, null, key, mapKeyType, typeDescriptor);\n\t\t\t\tObject oldValue = null;\n\t\t\t\tif (isExtractOldValueForEditor()) {\n\t\t\t\t\toldValue = map.get(convertedMapKey);\n\t\t\t\t}\n\t\t\t\t// Pass full property name and old value in here, since we want full\n\t\t\t\t// conversion ability for map values.\n\t\t\t\tObject convertedMapValue = convertIfNecessary(propertyName, oldValue, pv.getValue(),\n\t\t\t\t\t\tmapValueType, TypeDescriptor.nested(property(pd), tokens.keys.length));\n\t\t\t\tmap.put(convertedMapKey, convertedMapValue);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new InvalidPropertyException(getRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\"Property referenced in indexed property path '\" + propertyName +\n\t\t\t\t\t\t\"' is neither an array nor a List nor a Map; returned value was [\" + propValue + \"]\");\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tPropertyDescriptor pd = pv.resolvedDescriptor;\n\t\t\tif (pd == null || !pd.getWriteMethod().getDeclaringClass().isInstance(this.object)) {\n\t\t\t\tpd = getCachedIntrospectionResults().getPropertyDescriptor(actualName);\n\t\t\t\tif (pd == null || pd.getWriteMethod() == null) {\n\t\t\t\t\tif (pv.isOptional()) {\n\t\t\t\t\t\tlogger.debug(\"Ignoring optional value for property '\" + actualName +\n\t\t\t\t\t\t\t\t\"' - property not found on bean class [\" + getRootClass().getName() + \"]\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tPropertyMatches matches = PropertyMatches.forProperty(propertyName, getRootClass());\n\t\t\t\t\t\tthrow new NotWritablePropertyException(\n\t\t\t\t\t\t\t\tgetRootClass(), this.nestedPath + propertyName,\n\t\t\t\t\t\t\t\tmatches.buildErrorMessage(), matches.getPossibleMatches());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpv.getOriginalPropertyValue().resolvedDescriptor = pd;\n\t\t\t}\n\n\t\t\tObject oldValue = null;\n\t\t\ttry {\n\t\t\t\tObject originalValue = pv.getValue();\n\t\t\t\tObject valueToApply = originalValue;\n\t\t\t\tif (!Boolean.FALSE.equals(pv.conversionNecessary)) {\n\t\t\t\t\tif (pv.isConverted()) {\n\t\t\t\t\t\tvalueToApply = pv.getConvertedValue();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (isExtractOldValueForEditor() && pd.getReadMethod() != null) {\n\t\t\t\t\t\t\tfinal Method readMethod = pd.getReadMethod();\n\t\t\t\t\t\t\tif (!Modifier.isPublic(readMethod.getDeclaringClass().getModifiers()) &&\n\t\t\t\t\t\t\t\t\t!readMethod.isAccessible()) {\n\t\t\t\t\t\t\t\tif (System.getSecurityManager()!= null) {\n\t\t\t\t\t\t\t\t\tAccessController.doPrivileged(new PrivilegedAction<Object>() {\n\t\t\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\t\t\tpublic Object run() {\n\t\t\t\t\t\t\t\t\t\t\treadMethod.setAccessible(true);\n\t\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\treadMethod.setAccessible(true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tif (System.getSecurityManager() != null) {\n\t\t\t\t\t\t\t\t\toldValue = AccessController.doPrivileged(new PrivilegedExceptionAction<Object>() {\n\t\t\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\t\t\tpublic Object run() throws Exception {\n\t\t\t\t\t\t\t\t\t\t\treturn readMethod.invoke(object);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, acc);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\toldValue = readMethod.invoke(object);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcatch (Exception ex) {\n\t\t\t\t\t\t\t\tif (ex instanceof PrivilegedActionException) {\n\t\t\t\t\t\t\t\t\tex = ((PrivilegedActionException) ex).getException();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\t\t\t\t\t\tlogger.debug(\"Could not read previous value of property '\" +\n\t\t\t\t\t\t\t\t\t\t\tthis.nestedPath + propertyName + \"'\", ex);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalueToApply = convertForProperty(\n\t\t\t\t\t\t\t\tpropertyName, oldValue, originalValue, new TypeDescriptor(property(pd)));\n\t\t\t\t\t}\n\t\t\t\t\tpv.getOriginalPropertyValue().conversionNecessary = (valueToApply != originalValue);\n\t\t\t\t}\n\t\t\t\tfinal Method writeMethod = (pd instanceof GenericTypeAwarePropertyDescriptor ?\n\t\t\t\t\t\t((GenericTypeAwarePropertyDescriptor) pd).getWriteMethodForActualAccess() :\n\t\t\t\t\t\tpd.getWriteMethod());\n\t\t\t\tif (!Modifier.isPublic(writeMethod.getDeclaringClass().getModifiers()) && !writeMethod.isAccessible()) {\n\t\t\t\t\tif (System.getSecurityManager()!= null) {\n\t\t\t\t\t\tAccessController.doPrivileged(new PrivilegedAction<Object>() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic Object run() {\n\t\t\t\t\t\t\t\twriteMethod.setAccessible(true);\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twriteMethod.setAccessible(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfinal Object value = valueToApply;\n\t\t\t\tif (System.getSecurityManager() != null) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tAccessController.doPrivileged(new PrivilegedExceptionAction<Object>() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic Object run() throws Exception {\n\t\t\t\t\t\t\t\twriteMethod.invoke(object, value);\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, acc);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (PrivilegedActionException ex) {\n\t\t\t\t\t\tthrow ex.getException();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twriteMethod.invoke(this.object, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (TypeMismatchException ex) {\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t\tcatch (InvocationTargetException ex) {\n\t\t\t\tPropertyChangeEvent propertyChangeEvent =\n\t\t\t\t\t\tnew PropertyChangeEvent(this.rootObject, this.nestedPath + propertyName, oldValue, pv.getValue());\n\t\t\t\tif (ex.getTargetException() instanceof ClassCastException) {\n\t\t\t\t\tthrow new TypeMismatchException(propertyChangeEvent, pd.getPropertyType(), ex.getTargetException());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tThrowable cause = ex.getTargetException();\n\t\t\t\t\tif (cause instanceof UndeclaredThrowableException) {\n\t\t\t\t\t\t// May happen e.g. with Groovy-generated methods\n\t\t\t\t\t\tcause = cause.getCause();\n\t\t\t\t\t}\n\t\t\t\t\tthrow new MethodInvocationException(propertyChangeEvent, cause);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tPropertyChangeEvent pce =\n\t\t\t\t\t\tnew PropertyChangeEvent(this.rootObject, this.nestedPath + propertyName, oldValue, pv.getValue());\n\t\t\t\tthrow new MethodInvocationException(pce, ex);\n\t\t\t}\n\t\t}\n\t}","commit_id":"595cdf05e962299c19c34bbfb370316636d074f2","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Create a refreshable proxy for the given AOP TargetSource.\n\t * @param ts the refreshable TargetSource\n\t * @param interfaces the proxy interfaces (may be {@code null} to\n\t * indicate proxying of all interfaces implemented by the target class)\n\t * @return the generated proxy\n\t * @see RefreshableScriptTargetSource\n\t */\n\tprotected Object createRefreshableProxy(TargetSource ts, Class<?>[] interfaces, boolean proxyTargetClass) {\n\t\tProxyFactory proxyFactory = new ProxyFactory();\n\t\tproxyFactory.setTargetSource(ts);\n\t\tClassLoader classLoader = this.beanClassLoader;\n\n\t\tif (interfaces == null) {\n\t\t\tinterfaces = ClassUtils.getAllInterfacesForClass(ts.getTargetClass(), this.beanClassLoader);\n\t\t}\n\t\tproxyFactory.setInterfaces(interfaces);\n\t\tif (proxyTargetClass) {\n\t\t\tclassLoader = null;  // force use of Class.getClassLoader()\n\t\t\tproxyFactory.setProxyTargetClass(proxyTargetClass);\n\t\t}\n\n\t\tDelegatingIntroductionInterceptor introduction = new DelegatingIntroductionInterceptor(ts);\n\t\tintroduction.suppressInterface(TargetSource.class);\n\t\tproxyFactory.addAdvice(introduction);\n\n\t\treturn proxyFactory.getProxy(classLoader);\n\t}","id":58540,"modified_method":"/**\n\t * Create a refreshable proxy for the given AOP TargetSource.\n\t * @param ts the refreshable TargetSource\n\t * @param interfaces the proxy interfaces (may be {@code null} to\n\t * indicate proxying of all interfaces implemented by the target class)\n\t * @return the generated proxy\n\t * @see RefreshableScriptTargetSource\n\t */\n\tprotected Object createRefreshableProxy(TargetSource ts, Class<?>[] interfaces, boolean proxyTargetClass) {\n\t\tProxyFactory proxyFactory = new ProxyFactory();\n\t\tproxyFactory.setTargetSource(ts);\n\t\tClassLoader classLoader = this.beanClassLoader;\n\n\t\tif (interfaces == null) {\n\t\t\tinterfaces = ClassUtils.getAllInterfacesForClass(ts.getTargetClass(), this.beanClassLoader);\n\t\t}\n\t\tproxyFactory.setInterfaces(interfaces);\n\t\tif (proxyTargetClass) {\n\t\t\tclassLoader = null;  // force use of Class.getClassLoader()\n\t\t\tproxyFactory.setProxyTargetClass(true);\n\t\t}\n\n\t\tDelegatingIntroductionInterceptor introduction = new DelegatingIntroductionInterceptor(ts);\n\t\tintroduction.suppressInterface(TargetSource.class);\n\t\tproxyFactory.addAdvice(introduction);\n\n\t\treturn proxyFactory.getProxy(classLoader);\n\t}","commit_id":"595cdf05e962299c19c34bbfb370316636d074f2","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public Object invoke(MethodInvocation invocation) throws Throwable {\n\t\tif (this.burlapProxy == null) {\n\t\t\tthrow new IllegalStateException(\"BurlapClientInterceptor is not properly initialized - \" +\n\t\t\t\t\t\"invoke 'prepare' before attempting any operations\");\n\t\t}\n\n\t\tClassLoader originalClassLoader = overrideThreadContextClassLoader();\n\t\ttry {\n\t\t\treturn invocation.getMethod().invoke(this.burlapProxy, invocation.getArguments());\n\t\t}\n\t\tcatch (InvocationTargetException ex) {\n\t\t\tif (ex.getTargetException() instanceof BurlapRuntimeException) {\n\t\t\t\tBurlapRuntimeException bre = (BurlapRuntimeException) ex.getTargetException();\n\t\t\t\tThrowable rootCause = (bre.getRootCause() != null ? bre.getRootCause() : bre);\n\t\t\t\tthrow convertBurlapAccessException(rootCause);\n\t\t\t}\n\t\t\telse if (ex.getTargetException() instanceof UndeclaredThrowableException) {\n\t\t\t\tUndeclaredThrowableException utex = (UndeclaredThrowableException) ex.getTargetException();\n\t\t\t\tthrow convertBurlapAccessException(utex.getUndeclaredThrowable());\n\t\t\t}\n\t\t\tthrow ex.getTargetException();\n\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\tthrow new RemoteProxyFailureException(\n\t\t\t\t\t\"Failed to invoke Burlap proxy for remote service [\" + getServiceUrl() + \"]\", ex);\n\t\t}\n\t\tfinally {\n\t\t\tresetThreadContextClassLoader(originalClassLoader);\n\t\t}\n\t}","id":58541,"modified_method":"public Object invoke(MethodInvocation invocation) throws Throwable {\n\t\tif (this.burlapProxy == null) {\n\t\t\tthrow new IllegalStateException(\"BurlapClientInterceptor is not properly initialized - \" +\n\t\t\t\t\t\"invoke 'prepare' before attempting any operations\");\n\t\t}\n\n\t\tClassLoader originalClassLoader = overrideThreadContextClassLoader();\n\t\ttry {\n\t\t\treturn invocation.getMethod().invoke(this.burlapProxy, invocation.getArguments());\n\t\t}\n\t\tcatch (InvocationTargetException ex) {\n\t\t\tThrowable targetEx = ex.getTargetException();\n\t\t\tif (targetEx instanceof BurlapRuntimeException) {\n\t\t\t\tThrowable cause = targetEx.getCause();\n\t\t\t\tthrow convertBurlapAccessException(cause != null ? cause : targetEx);\n\t\t\t}\n\t\t\telse if (targetEx instanceof UndeclaredThrowableException) {\n\t\t\t\tUndeclaredThrowableException utex = (UndeclaredThrowableException) targetEx;\n\t\t\t\tthrow convertBurlapAccessException(utex.getUndeclaredThrowable());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow targetEx;\n\t\t\t}\n\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\tthrow new RemoteProxyFailureException(\n\t\t\t\t\t\"Failed to invoke Burlap proxy for remote service [\" + getServiceUrl() + \"]\", ex);\n\t\t}\n\t\tfinally {\n\t\t\tresetThreadContextClassLoader(originalClassLoader);\n\t\t}\n\t}","commit_id":"64bf3b74b5c4eba445b6d283022aa4a84b457789","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public Object invoke(MethodInvocation invocation) throws Throwable {\n\t\tif (this.hessianProxy == null) {\n\t\t\tthrow new IllegalStateException(\"HessianClientInterceptor is not properly initialized - \" +\n\t\t\t\t\t\"invoke 'prepare' before attempting any operations\");\n\t\t}\n\n\t\tClassLoader originalClassLoader = overrideThreadContextClassLoader();\n\t\ttry {\n\t\t\treturn invocation.getMethod().invoke(this.hessianProxy, invocation.getArguments());\n\t\t}\n\t\tcatch (InvocationTargetException ex) {\n\t\t\tif (ex.getTargetException() instanceof HessianRuntimeException) {\n\t\t\t\tHessianRuntimeException hre = (HessianRuntimeException) ex.getTargetException();\n\t\t\t\tThrowable rootCause = (hre.getRootCause() != null ? hre.getRootCause() : hre);\n\t\t\t\tthrow convertHessianAccessException(rootCause);\n\t\t\t}\n\t\t\telse if (ex.getTargetException() instanceof UndeclaredThrowableException) {\n\t\t\t\tUndeclaredThrowableException utex = (UndeclaredThrowableException) ex.getTargetException();\n\t\t\t\tthrow convertHessianAccessException(utex.getUndeclaredThrowable());\n\t\t\t}\n\t\t\tthrow ex.getTargetException();\n\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\tthrow new RemoteProxyFailureException(\n\t\t\t\t\t\"Failed to invoke Hessian proxy for remote service [\" + getServiceUrl() + \"]\", ex);\n\t\t}\n\t\tfinally {\n\t\t\tresetThreadContextClassLoader(originalClassLoader);\n\t\t}\n\t}","id":58542,"modified_method":"public Object invoke(MethodInvocation invocation) throws Throwable {\n\t\tif (this.hessianProxy == null) {\n\t\t\tthrow new IllegalStateException(\"HessianClientInterceptor is not properly initialized - \" +\n\t\t\t\t\t\"invoke 'prepare' before attempting any operations\");\n\t\t}\n\n\t\tClassLoader originalClassLoader = overrideThreadContextClassLoader();\n\t\ttry {\n\t\t\treturn invocation.getMethod().invoke(this.hessianProxy, invocation.getArguments());\n\t\t}\n\t\tcatch (InvocationTargetException ex) {\n\t\t\tThrowable targetEx = ex.getTargetException();\n\t\t\tif (targetEx instanceof HessianConnectionException) {\n\t\t\t\tthrow convertHessianAccessException(targetEx);\n\t\t\t}\n\t\t\telse if (targetEx instanceof HessianException || targetEx instanceof HessianRuntimeException) {\n\t\t\t\tThrowable cause = targetEx.getCause();\n\t\t\t\tthrow convertHessianAccessException(cause != null ? cause : targetEx);\n\t\t\t}\n\t\t\telse if (targetEx instanceof UndeclaredThrowableException) {\n\t\t\t\tUndeclaredThrowableException utex = (UndeclaredThrowableException) targetEx;\n\t\t\t\tthrow convertHessianAccessException(utex.getUndeclaredThrowable());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow targetEx;\n\t\t\t}\n\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\tthrow new RemoteProxyFailureException(\n\t\t\t\t\t\"Failed to invoke Hessian proxy for remote service [\" + getServiceUrl() + \"]\", ex);\n\t\t}\n\t\tfinally {\n\t\t\tresetThreadContextClassLoader(originalClassLoader);\n\t\t}\n\t}","commit_id":"64bf3b74b5c4eba445b6d283022aa4a84b457789","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Convert the given Hessian access exception to an appropriate\n\t * Spring RemoteAccessException.\n\t * @param ex the exception to convert\n\t * @return the RemoteAccessException to throw\n\t */\n\tprotected RemoteAccessException convertHessianAccessException(Throwable ex) {\n\t\tif (ex instanceof ConnectException) {\n\t\t\treturn new RemoteConnectFailureException(\n\t\t\t\t\t\"Cannot connect to Hessian remote service at [\" + getServiceUrl() + \"]\", ex);\n\t\t}\n\t\telse {\n\t\t\treturn new RemoteAccessException(\n\t\t\t    \"Cannot access Hessian remote service at [\" + getServiceUrl() + \"]\", ex);\n\t\t}\n\t}","id":58543,"modified_method":"/**\n\t * Convert the given Hessian access exception to an appropriate\n\t * Spring RemoteAccessException.\n\t * @param ex the exception to convert\n\t * @return the RemoteAccessException to throw\n\t */\n\tprotected RemoteAccessException convertHessianAccessException(Throwable ex) {\n\t\tif (ex instanceof HessianConnectionException || ex instanceof ConnectException) {\n\t\t\treturn new RemoteConnectFailureException(\n\t\t\t\t\t\"Cannot connect to Hessian remote service at [\" + getServiceUrl() + \"]\", ex);\n\t\t}\n\t\telse {\n\t\t\treturn new RemoteAccessException(\n\t\t\t    \"Cannot access Hessian remote service at [\" + getServiceUrl() + \"]\", ex);\n\t\t}\n\t}","commit_id":"64bf3b74b5c4eba445b6d283022aa4a84b457789","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Add a file to this request. The parameter name from the multipart\n\t * form is taken from the {@link org.springframework.web.multipart.MultipartFile#getName()}.\n\t * @param file multipart file to be added\n\t */\n\tpublic void addFile(MultipartFile file) {\n\t\tAssert.notNull(file, \"MultipartFile must not be null\");\n\t\tthis.multipartFiles.add(file.getName(), file);\n\t}","id":58544,"modified_method":"/**\n\t * Add a file to this request. The parameter name from the multipart\n\t * form is taken from the {@link MultipartFile#getName()}.\n\t * @param file multipart file to be added\n\t */\n\tpublic void addFile(MultipartFile file) {\n\t\tAssert.notNull(file, \"MultipartFile must not be null\");\n\t\tthis.multipartFiles.add(file.getName(), file);\n\t}","commit_id":"5b0448c609b1d176ac124834392a0603d6bf7a59","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public Iterator<String> getFileNames() {\r\n\t\treturn getFileMap().keySet().iterator();\r\n\t}","id":58545,"modified_method":"public Iterator<String> getFileNames() {\r\n\t\treturn this.multipartFiles.keySet().iterator();\r\n\t}","commit_id":"5b0448c609b1d176ac124834392a0603d6bf7a59","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public MultiValueMap<String, MultipartFile> getMultiFileMap() {\r\n\t\treturn new LinkedMultiValueMap<String, MultipartFile>(Collections.unmodifiableMap(this.multipartFiles));\r\n\t}","id":58546,"modified_method":"public MultiValueMap<String, MultipartFile> getMultiFileMap() {\r\n\t\treturn new LinkedMultiValueMap<String, MultipartFile>(this.multipartFiles);\r\n\t}","commit_id":"5b0448c609b1d176ac124834392a0603d6bf7a59","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public Map<String, MultipartFile> getFileMap() {\r\n\t\treturn Collections.unmodifiableMap(this.multipartFiles.toSingleValueMap());\r\n\t}","id":58547,"modified_method":"public Map<String, MultipartFile> getFileMap() {\r\n\t\treturn this.multipartFiles.toSingleValueMap();\r\n\t}","commit_id":"5b0448c609b1d176ac124834392a0603d6bf7a59","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public Map<String, MultipartFile> getFileMap() {\n\t\treturn Collections.unmodifiableMap(this.multipartFiles.toSingleValueMap());\n\t}","id":58548,"modified_method":"public Map<String, MultipartFile> getFileMap() {\n\t\treturn this.multipartFiles.toSingleValueMap();\n\t}","commit_id":"1841b14b21d0240952afc2a29cd1235be85a6cca","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public Iterator<String> getFileNames() {\n\t\treturn getFileMap().keySet().iterator();\n\t}","id":58549,"modified_method":"public Iterator<String> getFileNames() {\n\t\treturn this.multipartFiles.keySet().iterator();\n\t}","commit_id":"1841b14b21d0240952afc2a29cd1235be85a6cca","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public MultiValueMap<String, MultipartFile> getMultiFileMap() {\n\t\treturn new LinkedMultiValueMap<String, MultipartFile>(Collections.unmodifiableMap(this.multipartFiles));\n\t}","id":58550,"modified_method":"public MultiValueMap<String, MultipartFile> getMultiFileMap() {\n\t\treturn new LinkedMultiValueMap<String, MultipartFile>(this.multipartFiles);\n\t}","commit_id":"1841b14b21d0240952afc2a29cd1235be85a6cca","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public Iterator<String> getFileNames() {\n\t\treturn getFileMap().keySet().iterator();\n\t}","id":58551,"modified_method":"public Iterator<String> getFileNames() {\n\t\treturn this.multipartFiles.keySet().iterator();\n\t}","commit_id":"1841b14b21d0240952afc2a29cd1235be85a6cca","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public MultiValueMap<String, MultipartFile> getMultiFileMap() {\n\t\treturn new LinkedMultiValueMap<String, MultipartFile>(Collections.unmodifiableMap(this.multipartFiles));\t\t \n\t}","id":58552,"modified_method":"public MultiValueMap<String, MultipartFile> getMultiFileMap() {\n\t\treturn new LinkedMultiValueMap<String, MultipartFile>(this.multipartFiles);\n\t}","commit_id":"1841b14b21d0240952afc2a29cd1235be85a6cca","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public Map<String, MultipartFile> getFileMap() {\n\t\treturn Collections.unmodifiableMap(this.multipartFiles.toSingleValueMap());\n\t}","id":58553,"modified_method":"public Map<String, MultipartFile> getFileMap() {\n\t\treturn this.multipartFiles.toSingleValueMap();\n\t}","commit_id":"1841b14b21d0240952afc2a29cd1235be85a6cca","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public MultiValueMap<String, MultipartFile> getMultiFileMap() {\n\t\treturn new LinkedMultiValueMap<String, MultipartFile>(Collections.unmodifiableMap(this.multipartFiles));\n\t}","id":58554,"modified_method":"public MultiValueMap<String, MultipartFile> getMultiFileMap() {\n\t\treturn new LinkedMultiValueMap<String, MultipartFile>(this.multipartFiles);\n\t}","commit_id":"1841b14b21d0240952afc2a29cd1235be85a6cca","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public Iterator<String> getFileNames() {\n\t\treturn getFileMap().keySet().iterator();\n\t}","id":58555,"modified_method":"public Iterator<String> getFileNames() {\n\t\treturn this.multipartFiles.keySet().iterator();\n\t}","commit_id":"1841b14b21d0240952afc2a29cd1235be85a6cca","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public Map<String, MultipartFile> getFileMap() {\n\t\treturn Collections.unmodifiableMap(this.multipartFiles.toSingleValueMap());\n\t}","id":58556,"modified_method":"public Map<String, MultipartFile> getFileMap() {\n\t\treturn this.multipartFiles.toSingleValueMap();\n\t}","commit_id":"1841b14b21d0240952afc2a29cd1235be85a6cca","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"public int getMinorVersion() {\r\n\t\treturn minorVersion;\r\n\t}","id":58557,"modified_method":"public int getMinorVersion() {\r\n\t\treturn this.minorVersion;\r\n\t}","commit_id":"1841b14b21d0240952afc2a29cd1235be85a6cca","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n  protected void executeDDLUpdates() throws AmbariException, SQLException {\n    // needs to be executed first\n    renameSequenceValueColumnName();\n\n    String dbType = getDbType();\n    List<DBColumnInfo> columns;\n\n    // add group and members tables\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"group_id\", Integer.class, 1, null, false));\n    columns.add(new DBColumnInfo(\"principal_id\", Integer.class, 1, null, false));\n    columns.add(new DBColumnInfo(\"group_name\", String.class, 255, null, false));\n    columns.add(new DBColumnInfo(\"ldap_group\", Integer.class, 1, 0, false));\n    dbAccessor.createTable(\"groups\", columns, \"group_id\");\n\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"member_id\", Integer.class, 1, null, false));\n    columns.add(new DBColumnInfo(\"group_id\", Integer.class, 1, null, false));\n    columns.add(new DBColumnInfo(\"user_id\", Integer.class, 1, null, false));\n    dbAccessor.createTable(\"members\", columns, \"member_id\");\n\n    // add admin tables and initial values prior to adding referencing columns on existing tables\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"principal_type_id\", Integer.class, 1, null,\n        false));\n    columns.add(new DBColumnInfo(\"principal_type_name\", String.class, null,\n        null, false));\n\n    dbAccessor.createTable(\"adminprincipaltype\", columns, \"principal_type_id\");\n\n    dbAccessor.insertRow(\"adminprincipaltype\", new String[]{\"principal_type_id\", \"principal_type_name\"}, new String[]{\"1\", \"'USER'\"}, true);\n    dbAccessor.insertRow(\"adminprincipaltype\", new String[]{\"principal_type_id\", \"principal_type_name\"}, new String[]{\"2\", \"'GROUP'\"}, true);\n\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"principal_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"principal_type_id\", Integer.class, 1, null,\n        false));\n\n    dbAccessor.createTable(\"adminprincipal\", columns, \"principal_id\");\n\n    dbAccessor.insertRow(\"adminprincipal\", new String[]{\"principal_id\", \"principal_type_id\"}, new String[]{\"1\", \"1\"}, true);\n\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"resource_type_id\", Integer.class, 1, null,\n        false));\n    columns.add(new DBColumnInfo(\"resource_type_name\", String.class, null,\n        null, false));\n\n    dbAccessor.createTable(\"adminresourcetype\", columns, \"resource_type_id\");\n\n    dbAccessor.insertRow(\"adminresourcetype\", new String[]{\"resource_type_id\", \"resource_type_name\"}, new String[]{\"1\", \"'AMBARI'\"}, true);\n    dbAccessor.insertRow(\"adminresourcetype\", new String[]{\"resource_type_id\", \"resource_type_name\"}, new String[]{\"2\", \"'CLUSTER'\"}, true);\n    dbAccessor.insertRow(\"adminresourcetype\", new String[]{\"resource_type_id\", \"resource_type_name\"}, new String[]{\"3\", \"'VIEW'\"}, true);\n\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"resource_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"resource_type_id\", Integer.class, 1, null,\n        false));\n\n    dbAccessor.createTable(\"adminresource\", columns, \"resource_id\");\n\n    dbAccessor.insertRow(\"adminresource\", new String[]{\"resource_id\", \"resource_type_id\"}, new String[]{\"1\", \"1\"}, true);\n\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"permission_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"permission_name\", String.class, null, null,\n        false));\n    columns.add(new DBColumnInfo(\"resource_type_id\", Integer.class, 1, null,\n        false));\n\n    dbAccessor.createTable(\"adminpermission\", columns, \"permission_id\");\n\n    dbAccessor.insertRow(\"adminpermission\", new String[]{\"permission_id\", \"permission_name\", \"resource_type_id\"}, new String[]{\"1\", \"'AMBARI.ADMIN'\", \"1\"}, true);\n    dbAccessor.insertRow(\"adminpermission\", new String[]{\"permission_id\", \"permission_name\", \"resource_type_id\"}, new String[]{\"2\", \"'CLUSTER.READ'\", \"2\"}, true);\n    dbAccessor.insertRow(\"adminpermission\", new String[]{\"permission_id\", \"permission_name\", \"resource_type_id\"}, new String[]{\"3\", \"'CLUSTER.OPERATE'\", \"2\"}, true);\n    dbAccessor.insertRow(\"adminpermission\", new String[]{\"permission_id\", \"permission_name\", \"resource_type_id\"}, new String[]{\"4\", \"'VIEW.USE'\", \"3\"}, true);\n\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"privilege_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"permission_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"resource_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"principal_id\", Long.class, null, null, false));\n\n    dbAccessor.createTable(\"adminprivilege\", columns, \"privilege_id\");\n\n    dbAccessor.insertRow(\"adminprivilege\", new String[]{\"privilege_id\", \"permission_id\", \"resource_id\", \"principal_id\"}, new String[]{\"1\", \"1\", \"1\", \"1\"}, true);\n\n    if (dbType.equals(Configuration.ORACLE_DB_NAME)) {\n      dbAccessor.executeQuery(\"ALTER TABLE clusterconfig ADD config_attributes CLOB NULL\");\n    } else {\n      DBColumnInfo clusterConfigAttributesColumn = new DBColumnInfo(\n          \"config_attributes\", String.class, 32000, null, true);\n      dbAccessor.addColumn(\"clusterconfig\", clusterConfigAttributesColumn);\n    }\n\n    // Add columns\n    dbAccessor.addColumn(\"viewmain\", new DBColumnInfo(\"mask\",\n      String.class, 255, null, true));\n    dbAccessor.addColumn(\"viewmain\", new DBColumnInfo(\"system_view\",\n        Character.class, 1, null, true));\n    dbAccessor.addColumn(\"viewmain\", new DBColumnInfo(\"resource_type_id\",\n        Integer.class, 1, 1, false));\n    dbAccessor.addColumn(\"viewmain\", new DBColumnInfo(\"description\",\n        String.class, 2048, null, true));\n    dbAccessor.addColumn(\"viewparameter\", new DBColumnInfo(\"masked\",\n      Character.class, 1, null, true));\n    dbAccessor.addColumn(\"users\", new DBColumnInfo(\"active\",\n      Integer.class, 1, 1, false));\n    dbAccessor.addColumn(\"users\", new DBColumnInfo(\"principal_id\",\n        Long.class, 1, 1, false));\n    dbAccessor.addColumn(\"viewinstance\", new DBColumnInfo(\"resource_id\",\n        Long.class, 1, 1, false));\n    dbAccessor.addColumn(\"viewinstance\", new DBColumnInfo(\"xml_driven\",\n        Character.class, 1, null, true));\n    dbAccessor.addColumn(\"clusters\", new DBColumnInfo(\"resource_id\",\n        Long.class, 1, 1, false));\n\n    dbAccessor.addColumn(\"host_role_command\", new DBColumnInfo(\"output_log\",\n        String.class, 255, null, true));\n\n    dbAccessor.addColumn(\"stage\", new DBColumnInfo(\"command_params\",\n      byte[].class, null, null, true));\n    dbAccessor.addColumn(\"stage\", new DBColumnInfo(\"host_params\",\n      byte[].class, null, null, true));\n\n    dbAccessor.addColumn(\"host_role_command\", new DBColumnInfo(\"error_log\",\n        String.class, 255, null, true));\n\n    addAlertingFrameworkDDL();\n\n    // Exclusive requests changes\n    dbAccessor.addColumn(\"request\", new DBColumnInfo(\n            \"exclusive_execution\", Integer.class, 1, 0, false));\n\n    //service config versions changes\n\n    //remove old artifacts (for versions <=1.4.1) which depend on tables changed\n    //actually these had to be dropped in UC150, but some of tables were never used, and others were just cleared\n    if (dbAccessor.tableExists(\"componentconfigmapping\")) {\n      dbAccessor.dropTable(\"componentconfigmapping\");\n    }\n    if (dbAccessor.tableExists(\"hostcomponentconfigmapping\")) {\n      dbAccessor.dropTable(\"hostcomponentconfigmapping\");\n    }\n    if (dbAccessor.tableExists(\"hcdesiredconfigmapping\")) {\n      dbAccessor.dropTable(\"hcdesiredconfigmapping\");\n    }\n    if (dbAccessor.tableExists(\"serviceconfigmapping\")) {\n      dbAccessor.dropTable(\"serviceconfigmapping\");\n    }\n\n    dbAccessor.dropConstraint(\"confgroupclusterconfigmapping\", \"FK_confg\");\n\n    if (Configuration.ORACLE_DB_NAME.equals(dbType)\n      || Configuration.MYSQL_DB_NAME.equals(dbType)\n      || Configuration.DERBY_DB_NAME.equals(dbType)) {\n      dbAccessor.executeQuery(\"ALTER TABLE clusterconfig DROP PRIMARY KEY\", true);\n    } else if (Configuration.POSTGRES_DB_NAME.equals(dbType)) {\n      dbAccessor.executeQuery(\"ALTER TABLE clusterconfig DROP CONSTRAINT clusterconfig_pkey CASCADE\", true);\n    }\n\n    dbAccessor.addColumn(\"clusterconfig\", new DBColumnInfo(\"config_id\", Long.class, null, null, true));\n\n    if (Configuration.ORACLE_DB_NAME.equals(dbType)) {\n      //sequence looks to be simpler than rownum\n      if (dbAccessor.tableHasData(\"clusterconfig\")) {\n        dbAccessor.executeQuery(\"CREATE SEQUENCE TEMP_SEQ \" +\n          \"  START WITH 1 \" +\n          \"  MAXVALUE 999999999999999999999999999 \" +\n          \"  MINVALUE 1 \" +\n          \"  NOCYCLE \" +\n          \"  NOCACHE \" +\n          \"  NOORDER\");\n        dbAccessor.executeQuery(\"UPDATE clusterconfig SET config_id = TEMP_SEQ.NEXTVAL\");\n        dbAccessor.dropSequence(\"TEMP_SEQ\");\n      }\n    } else if (Configuration.MYSQL_DB_NAME.equals(dbType)) {\n      if (dbAccessor.tableHasData(\"clusterconfig\")) {\n        dbAccessor.executeQuery(\"UPDATE clusterconfig \" +\n          \"SET config_id = (SELECT @a := @a + 1 FROM (SELECT @a := 1) s)\");\n      }\n    } else if (Configuration.POSTGRES_DB_NAME.equals(dbType)) {\n      if (dbAccessor.tableHasData(\"clusterconfig\")) {\n        //window functions like row_number were added in 8.4, workaround for earlier versions (redhat/centos 5)\n        dbAccessor.executeQuery(\"CREATE SEQUENCE temp_seq START WITH 1\");\n        dbAccessor.executeQuery(\"UPDATE clusterconfig SET config_id = nextval('temp_seq')\");\n        dbAccessor.dropSequence(\"temp_seq\");\n      }\n    }\n\n    // alter view tables description columns size\n    if (dbType.equals(Configuration.ORACLE_DB_NAME) ||\n        dbType.equals(Configuration.MYSQL_DB_NAME)) {\n      dbAccessor.executeQuery(\"ALTER TABLE viewinstance MODIFY description VARCHAR(2048)\");\n      dbAccessor.executeQuery(\"ALTER TABLE viewparameter MODIFY description VARCHAR(2048)\");\n    } else if (Configuration.POSTGRES_DB_NAME.equals(dbType)) {\n      dbAccessor.executeQuery(\"ALTER TABLE viewinstance ALTER COLUMN description TYPE VARCHAR(2048)\");\n      dbAccessor.executeQuery(\"ALTER TABLE viewparameter ALTER COLUMN description TYPE VARCHAR(2048)\");\n    } else if (dbType.equals(Configuration.DERBY_DB_NAME)) {\n      dbAccessor.executeQuery(\"ALTER TABLE viewinstance ALTER COLUMN description SET DATA TYPE VARCHAR(2048)\");\n      dbAccessor.executeQuery(\"ALTER TABLE viewparameter ALTER COLUMN description SET DATA TYPE VARCHAR(2048)\");\n    }\n\n    //upgrade unit test workaround\n    if (Configuration.DERBY_DB_NAME.equals(dbType)) {\n      dbAccessor.executeQuery(\"ALTER TABLE clusterconfig ALTER COLUMN config_id DEFAULT 0\");\n      dbAccessor.executeQuery(\"ALTER TABLE clusterconfig ALTER COLUMN config_id NOT NULL\");\n    }\n\n    dbAccessor.executeQuery(\"ALTER TABLE clusterconfig ADD PRIMARY KEY (config_id)\");\n\n    //fill version column\n    dbAccessor.addColumn(\"clusterconfig\", new DBColumnInfo(\"version\", Long.class, null));\n\n    populateConfigVersions();\n\n    dbAccessor.setNullable(\"clusterconfig\", new DBColumnInfo(\"version\", Long.class, null), false);\n\n    dbAccessor.executeQuery(\"ALTER TABLE clusterconfig ADD CONSTRAINT UQ_config_type_tag UNIQUE (cluster_id, type_name, version_tag)\", true);\n    dbAccessor.executeQuery(\"ALTER TABLE clusterconfig ADD CONSTRAINT UQ_config_type_version UNIQUE (cluster_id, type_name, version)\", true);\n\n    dbAccessor.alterColumn(\"clusterconfig\", new DBColumnInfo(\"config_data\", char[].class, null, null, false));\n    dbAccessor.alterColumn(\"blueprint_configuration\", new DBColumnInfo(\"config_data\", char[].class, null, null, false));\n    dbAccessor.alterColumn(\"hostgroup_configuration\", new DBColumnInfo(\"config_data\", char[].class, null, null, false));\n\n    columns.clear();\n    columns.add(new DBColumnInfo(\"service_config_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"cluster_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"service_name\", String.class, null, null, false));\n    columns.add(new DBColumnInfo(\"version\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"create_timestamp\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"user_name\", String.class, null, \"_db\", false));\n    columns.add(new DBColumnInfo(\"note\", char[].class, null, null, true));\n    columns.add(new DBColumnInfo(\"group_id\", Long.class, null, null, true));\n    dbAccessor.createTable(\"serviceconfig\", columns, \"service_config_id\");\n\n    columns.clear();\n    columns.add(new DBColumnInfo(\"service_config_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"hostname\", String.class, 255, null, false));\n    dbAccessor.createTable(\"serviceconfighosts\", columns, \"service_config_id\", \"hostname\");\n\n    dbAccessor.executeQuery(\"ALTER TABLE serviceconfig ADD CONSTRAINT UQ_scv_service_version UNIQUE (cluster_id, service_name, version)\", true);\n\n    columns.clear();\n    columns.add(new DBColumnInfo(\"service_config_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"config_id\", Long.class, null, null, false));\n    dbAccessor.createTable(\"serviceconfigmapping\", columns, \"service_config_id\", \"config_id\");\n\n    dbAccessor.addFKConstraint(\"confgroupclusterconfigmapping\", \"FK_confg\",\n      new String[]{\"cluster_id\", \"config_type\", \"version_tag\"}, \"clusterconfig\",\n      new String[]{\"cluster_id\", \"type_name\", \"version_tag\"}, true);\n\n    dbAccessor.addFKConstraint(\"serviceconfighosts\", \"FK_scvhosts_scv\",\n      new String[]{\"service_config_id\"}, \"serviceconfig\",\n      new String[]{\"service_config_id\"}, true);\n\n    dbAccessor.addColumn(\"configgroup\", new DBColumnInfo(\"service_name\", String.class, 255));\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('alert_definition_id_seq', 0)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('alert_group_id_seq', 0)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('alert_target_id_seq', 0)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('alert_history_id_seq', 0)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('alert_notice_id_seq', 0)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('alert_current_id_seq', 0)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('group_id_seq', 1)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('member_id_seq', 1)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('resource_type_id_seq', 4)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('resource_id_seq', 2)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('principal_type_id_seq', 3)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('principal_id_seq', 2)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('permission_id_seq', 5)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('privilege_id_seq', 1)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('service_config_id_seq', 1)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('service_config_application_id_seq', 1)\", false);\n\n    long count = 1;\n    ResultSet resultSet = null;\n    try {\n      resultSet = dbAccessor.executeSelect(\"SELECT count(*) FROM clusterconfig\");\n      if (resultSet.next()) {\n        count = resultSet.getLong(1) + 2;\n      }\n    } finally {\n      if (resultSet != null) {\n        resultSet.close();\n      }\n    }\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('config_id_seq', \" + count + \")\", false);\n\n    dbAccessor.addFKConstraint(\"users\", \"FK_users_principal_id\", \"principal_id\", \"adminprincipal\", \"principal_id\", true);\n    dbAccessor.addFKConstraint(\"clusters\", \"FK_clusters_resource_id\", \"resource_id\", \"adminresource\", \"resource_id\", true);\n    dbAccessor.addFKConstraint(\"viewinstance\", \"FK_viewinstance_resource_id\", \"resource_id\", \"adminresource\", \"resource_id\", true);\n    dbAccessor.addFKConstraint(\"adminresource\", \"FK_resource_resource_type_id\", \"resource_type_id\", \"adminresourcetype\", \"resource_type_id\", true);\n    dbAccessor.addFKConstraint(\"adminprincipal\", \"FK_principal_principal_type_id\", \"principal_type_id\", \"adminprincipaltype\", \"principal_type_id\", true);\n    dbAccessor.addFKConstraint(\"adminpermission\", \"FK_permission_resource_type_id\", \"resource_type_id\", \"adminresourcetype\", \"resource_type_id\", true);\n    dbAccessor.addFKConstraint(\"adminprivilege\", \"FK_privilege_permission_id\", \"permission_id\", \"adminpermission\", \"permission_id\", true);\n    dbAccessor.addFKConstraint(\"adminprivilege\", \"FK_privilege_resource_id\", \"resource_id\", \"adminresource\", \"resource_id\", true);\n\n    dbAccessor.addFKConstraint(\"groups\", \"FK_groups_principal_id\", \"principal_id\", \"adminprincipal\", \"principal_id\", true);\n    dbAccessor.addFKConstraint(\"members\", \"FK_members_user_id\", \"user_id\", \"users\", \"user_id\", true);\n    dbAccessor.addFKConstraint(\"members\", \"FK_members_group_id\", \"group_id\", \"groups\", \"group_id\", true);\n\n    dbAccessor.executeQuery(\"ALTER TABLE groups ADD CONSTRAINT UNQ_groups_0 UNIQUE (group_name, ldap_group)\");\n    dbAccessor.executeQuery(\"ALTER TABLE members ADD CONSTRAINT UNQ_members_0 UNIQUE (group_id, user_id)\");\n    dbAccessor.executeQuery(\"ALTER TABLE adminpermission ADD CONSTRAINT UQ_perm_name_resource_type_id UNIQUE (permission_name, resource_type_id)\");\n  }","id":58558,"modified_method":"@Override\n  protected void executeDDLUpdates() throws AmbariException, SQLException {\n    // needs to be executed first\n    renameSequenceValueColumnName();\n\n    String dbType = getDbType();\n    List<DBColumnInfo> columns;\n\n    // add group and members tables\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"group_id\", Integer.class, 1, null, false));\n    columns.add(new DBColumnInfo(\"principal_id\", Integer.class, 1, null, false));\n    columns.add(new DBColumnInfo(\"group_name\", String.class, 255, null, false));\n    columns.add(new DBColumnInfo(\"ldap_group\", Integer.class, 1, 0, false));\n    dbAccessor.createTable(\"groups\", columns, \"group_id\");\n\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"member_id\", Integer.class, 1, null, false));\n    columns.add(new DBColumnInfo(\"group_id\", Integer.class, 1, null, false));\n    columns.add(new DBColumnInfo(\"user_id\", Integer.class, 1, null, false));\n    dbAccessor.createTable(\"members\", columns, \"member_id\");\n\n    // add admin tables and initial values prior to adding referencing columns on existing tables\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"principal_type_id\", Integer.class, 1, null,\n        false));\n    columns.add(new DBColumnInfo(\"principal_type_name\", String.class, null,\n        null, false));\n\n    dbAccessor.createTable(\"adminprincipaltype\", columns, \"principal_type_id\");\n\n    dbAccessor.insertRow(\"adminprincipaltype\", new String[]{\"principal_type_id\", \"principal_type_name\"}, new String[]{\"1\", \"'USER'\"}, true);\n    dbAccessor.insertRow(\"adminprincipaltype\", new String[]{\"principal_type_id\", \"principal_type_name\"}, new String[]{\"2\", \"'GROUP'\"}, true);\n\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"principal_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"principal_type_id\", Integer.class, 1, null,\n        false));\n\n    dbAccessor.createTable(\"adminprincipal\", columns, \"principal_id\");\n\n    dbAccessor.insertRow(\"adminprincipal\", new String[]{\"principal_id\", \"principal_type_id\"}, new String[]{\"1\", \"1\"}, true);\n\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"resource_type_id\", Integer.class, 1, null,\n        false));\n    columns.add(new DBColumnInfo(\"resource_type_name\", String.class, null,\n        null, false));\n\n    dbAccessor.createTable(\"adminresourcetype\", columns, \"resource_type_id\");\n\n    dbAccessor.insertRow(\"adminresourcetype\", new String[]{\"resource_type_id\", \"resource_type_name\"}, new String[]{\"1\", \"'AMBARI'\"}, true);\n    dbAccessor.insertRow(\"adminresourcetype\", new String[]{\"resource_type_id\", \"resource_type_name\"}, new String[]{\"2\", \"'CLUSTER'\"}, true);\n    dbAccessor.insertRow(\"adminresourcetype\", new String[]{\"resource_type_id\", \"resource_type_name\"}, new String[]{\"3\", \"'VIEW'\"}, true);\n\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"resource_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"resource_type_id\", Integer.class, 1, null,\n        false));\n\n    dbAccessor.createTable(\"adminresource\", columns, \"resource_id\");\n\n    dbAccessor.insertRow(\"adminresource\", new String[]{\"resource_id\", \"resource_type_id\"}, new String[]{\"1\", \"1\"}, true);\n\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"permission_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"permission_name\", String.class, null, null,\n        false));\n    columns.add(new DBColumnInfo(\"resource_type_id\", Integer.class, 1, null,\n        false));\n\n    dbAccessor.createTable(\"adminpermission\", columns, \"permission_id\");\n\n    dbAccessor.insertRow(\"adminpermission\", new String[]{\"permission_id\", \"permission_name\", \"resource_type_id\"}, new String[]{\"1\", \"'AMBARI.ADMIN'\", \"1\"}, true);\n    dbAccessor.insertRow(\"adminpermission\", new String[]{\"permission_id\", \"permission_name\", \"resource_type_id\"}, new String[]{\"2\", \"'CLUSTER.READ'\", \"2\"}, true);\n    dbAccessor.insertRow(\"adminpermission\", new String[]{\"permission_id\", \"permission_name\", \"resource_type_id\"}, new String[]{\"3\", \"'CLUSTER.OPERATE'\", \"2\"}, true);\n    dbAccessor.insertRow(\"adminpermission\", new String[]{\"permission_id\", \"permission_name\", \"resource_type_id\"}, new String[]{\"4\", \"'VIEW.USE'\", \"3\"}, true);\n\n    columns = new ArrayList<DBColumnInfo>();\n    columns.add(new DBColumnInfo(\"privilege_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"permission_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"resource_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"principal_id\", Long.class, null, null, false));\n\n    dbAccessor.createTable(\"adminprivilege\", columns, \"privilege_id\");\n\n    dbAccessor.insertRow(\"adminprivilege\", new String[]{\"privilege_id\", \"permission_id\", \"resource_id\", \"principal_id\"}, new String[]{\"1\", \"1\", \"1\", \"1\"}, true);\n\n    if (dbType.equals(Configuration.ORACLE_DB_NAME)) {\n      dbAccessor.executeQuery(\"ALTER TABLE clusterconfig ADD config_attributes CLOB NULL\");\n    } else {\n      DBColumnInfo clusterConfigAttributesColumn = new DBColumnInfo(\n          \"config_attributes\", String.class, 32000, null, true);\n      dbAccessor.addColumn(\"clusterconfig\", clusterConfigAttributesColumn);\n    }\n\n    // Add columns\n    dbAccessor.addColumn(\"viewmain\", new DBColumnInfo(\"mask\",\n      String.class, 255, null, true));\n    dbAccessor.addColumn(\"viewmain\", new DBColumnInfo(\"system_view\",\n        Character.class, 1, null, true));\n    dbAccessor.addColumn(\"viewmain\", new DBColumnInfo(\"resource_type_id\",\n        Integer.class, 1, 1, false));\n    dbAccessor.addColumn(\"viewmain\", new DBColumnInfo(\"description\",\n        String.class, 2048, null, true));\n    dbAccessor.addColumn(\"viewparameter\", new DBColumnInfo(\"masked\",\n      Character.class, 1, null, true));\n    dbAccessor.addColumn(\"users\", new DBColumnInfo(\"active\",\n      Integer.class, 1, 1, false));\n    dbAccessor.addColumn(\"users\", new DBColumnInfo(\"principal_id\",\n        Long.class, 1, 1, false));\n    dbAccessor.addColumn(\"viewinstance\", new DBColumnInfo(\"resource_id\",\n        Long.class, 1, 1, false));\n    dbAccessor.addColumn(\"viewinstance\", new DBColumnInfo(\"xml_driven\",\n        Character.class, 1, null, true));\n    dbAccessor.addColumn(\"clusters\", new DBColumnInfo(\"resource_id\",\n        Long.class, 1, 1, false));\n\n    dbAccessor.addColumn(\"host_role_command\", new DBColumnInfo(\"output_log\",\n        String.class, 255, null, true));\n\n    dbAccessor.addColumn(\"stage\", new DBColumnInfo(\"command_params\",\n      byte[].class, null, null, true));\n    dbAccessor.addColumn(\"stage\", new DBColumnInfo(\"host_params\",\n      byte[].class, null, null, true));\n\n    dbAccessor.addColumn(\"host_role_command\", new DBColumnInfo(\"error_log\",\n        String.class, 255, null, true));\n\n    addAlertingFrameworkDDL();\n\n    // Exclusive requests changes\n    dbAccessor.addColumn(\"request\", new DBColumnInfo(\n            \"exclusive_execution\", Integer.class, 1, 0, false));\n\n    //service config versions changes\n\n    //remove old artifacts (for versions <=1.4.1) which depend on tables changed\n    //actually these had to be dropped in UC150, but some of tables were never used, and others were just cleared\n    if (dbAccessor.tableExists(\"componentconfigmapping\")) {\n      dbAccessor.dropTable(\"componentconfigmapping\");\n    }\n    if (dbAccessor.tableExists(\"hostcomponentconfigmapping\")) {\n      dbAccessor.dropTable(\"hostcomponentconfigmapping\");\n    }\n    if (dbAccessor.tableExists(\"hcdesiredconfigmapping\")) {\n      dbAccessor.dropTable(\"hcdesiredconfigmapping\");\n    }\n    if (dbAccessor.tableExists(\"serviceconfigmapping\")) {\n      dbAccessor.dropTable(\"serviceconfigmapping\");\n    }\n\n    dbAccessor.dropConstraint(\"confgroupclusterconfigmapping\", \"FK_confg\");\n\n    if (Configuration.ORACLE_DB_NAME.equals(dbType)\n      || Configuration.MYSQL_DB_NAME.equals(dbType)\n      || Configuration.DERBY_DB_NAME.equals(dbType)) {\n      dbAccessor.executeQuery(\"ALTER TABLE clusterconfig DROP PRIMARY KEY\", true);\n    } else if (Configuration.POSTGRES_DB_NAME.equals(dbType)) {\n      dbAccessor.executeQuery(\"ALTER TABLE clusterconfig DROP CONSTRAINT clusterconfig_pkey CASCADE\", true);\n    }\n\n    dbAccessor.addColumn(\"clusterconfig\", new DBColumnInfo(\"config_id\", Long.class, null, null, true));\n\n    if (Configuration.ORACLE_DB_NAME.equals(dbType)) {\n      //sequence looks to be simpler than rownum\n      if (dbAccessor.tableHasData(\"clusterconfig\")) {\n        dbAccessor.executeQuery(\"CREATE SEQUENCE TEMP_SEQ \" +\n          \"  START WITH 1 \" +\n          \"  MAXVALUE 999999999999999999999999999 \" +\n          \"  MINVALUE 1 \" +\n          \"  NOCYCLE \" +\n          \"  NOCACHE \" +\n          \"  NOORDER\");\n        dbAccessor.executeQuery(\"UPDATE clusterconfig SET config_id = TEMP_SEQ.NEXTVAL\");\n        dbAccessor.dropSequence(\"TEMP_SEQ\");\n      }\n    } else if (Configuration.MYSQL_DB_NAME.equals(dbType)) {\n      if (dbAccessor.tableHasData(\"clusterconfig\")) {\n        dbAccessor.executeQuery(\"UPDATE clusterconfig \" +\n          \"SET config_id = (SELECT @a := @a + 1 FROM (SELECT @a := 1) s)\");\n      }\n    } else if (Configuration.POSTGRES_DB_NAME.equals(dbType)) {\n      if (dbAccessor.tableHasData(\"clusterconfig\")) {\n        //window functions like row_number were added in 8.4, workaround for earlier versions (redhat/centos 5)\n        dbAccessor.executeQuery(\"CREATE SEQUENCE temp_seq START WITH 1\");\n        dbAccessor.executeQuery(\"UPDATE clusterconfig SET config_id = nextval('temp_seq')\");\n        dbAccessor.dropSequence(\"temp_seq\");\n      }\n    }\n\n    // alter view tables description columns size\n    if (dbType.equals(Configuration.ORACLE_DB_NAME) ||\n        dbType.equals(Configuration.MYSQL_DB_NAME)) {\n      dbAccessor.executeQuery(\"ALTER TABLE viewinstance MODIFY description VARCHAR(2048)\");\n      dbAccessor.executeQuery(\"ALTER TABLE viewparameter MODIFY description VARCHAR(2048)\");\n    } else if (Configuration.POSTGRES_DB_NAME.equals(dbType)) {\n      dbAccessor.executeQuery(\"ALTER TABLE viewinstance ALTER COLUMN description TYPE VARCHAR(2048)\");\n      dbAccessor.executeQuery(\"ALTER TABLE viewparameter ALTER COLUMN description TYPE VARCHAR(2048)\");\n    } else if (dbType.equals(Configuration.DERBY_DB_NAME)) {\n      dbAccessor.executeQuery(\"ALTER TABLE viewinstance ALTER COLUMN description SET DATA TYPE VARCHAR(2048)\");\n      dbAccessor.executeQuery(\"ALTER TABLE viewparameter ALTER COLUMN description SET DATA TYPE VARCHAR(2048)\");\n    }\n\n    //upgrade unit test workaround\n    if (Configuration.DERBY_DB_NAME.equals(dbType)) {\n      dbAccessor.executeQuery(\"ALTER TABLE clusterconfig ALTER COLUMN config_id DEFAULT 0\");\n      dbAccessor.executeQuery(\"ALTER TABLE clusterconfig ALTER COLUMN config_id NOT NULL\");\n    }\n\n    dbAccessor.executeQuery(\"ALTER TABLE clusterconfig ADD PRIMARY KEY (config_id)\");\n\n    //fill version column\n    dbAccessor.addColumn(\"clusterconfig\", new DBColumnInfo(\"version\", Long.class, null));\n\n    populateConfigVersions();\n\n    dbAccessor.setNullable(\"clusterconfig\", new DBColumnInfo(\"version\", Long.class, null), false);\n\n    dbAccessor.executeQuery(\"ALTER TABLE clusterconfig ADD CONSTRAINT UQ_config_type_tag UNIQUE (cluster_id, type_name, version_tag)\", true);\n    dbAccessor.executeQuery(\"ALTER TABLE clusterconfig ADD CONSTRAINT UQ_config_type_version UNIQUE (cluster_id, type_name, version)\", true);\n\n    if (!Configuration.ORACLE_DB_NAME.equals(dbType)) {\n      dbAccessor.alterColumn(\"clusterconfig\", new DBColumnInfo(\"config_data\", char[].class, null, null, false));\n      dbAccessor.alterColumn(\"blueprint_configuration\", new DBColumnInfo(\"config_data\", char[].class, null, null, false));\n      dbAccessor.alterColumn(\"hostgroup_configuration\", new DBColumnInfo(\"config_data\", char[].class, null, null, false));\n    }\n\n    columns.clear();\n    columns.add(new DBColumnInfo(\"service_config_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"cluster_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"service_name\", String.class, null, null, false));\n    columns.add(new DBColumnInfo(\"version\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"create_timestamp\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"user_name\", String.class, null, \"_db\", false));\n    columns.add(new DBColumnInfo(\"note\", char[].class, null, null, true));\n    columns.add(new DBColumnInfo(\"group_id\", Long.class, null, null, true));\n    dbAccessor.createTable(\"serviceconfig\", columns, \"service_config_id\");\n\n    columns.clear();\n    columns.add(new DBColumnInfo(\"service_config_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"hostname\", String.class, 255, null, false));\n    dbAccessor.createTable(\"serviceconfighosts\", columns, \"service_config_id\", \"hostname\");\n\n    dbAccessor.executeQuery(\"ALTER TABLE serviceconfig ADD CONSTRAINT UQ_scv_service_version UNIQUE (cluster_id, service_name, version)\", true);\n\n    columns.clear();\n    columns.add(new DBColumnInfo(\"service_config_id\", Long.class, null, null, false));\n    columns.add(new DBColumnInfo(\"config_id\", Long.class, null, null, false));\n    dbAccessor.createTable(\"serviceconfigmapping\", columns, \"service_config_id\", \"config_id\");\n\n    dbAccessor.addFKConstraint(\"confgroupclusterconfigmapping\", \"FK_confg\",\n      new String[]{\"cluster_id\", \"config_type\", \"version_tag\"}, \"clusterconfig\",\n      new String[]{\"cluster_id\", \"type_name\", \"version_tag\"}, true);\n\n    dbAccessor.addFKConstraint(\"serviceconfighosts\", \"FK_scvhosts_scv\",\n      new String[]{\"service_config_id\"}, \"serviceconfig\",\n      new String[]{\"service_config_id\"}, true);\n\n    dbAccessor.addColumn(\"configgroup\", new DBColumnInfo(\"service_name\", String.class, 255));\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('alert_definition_id_seq', 0)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('alert_group_id_seq', 0)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('alert_target_id_seq', 0)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('alert_history_id_seq', 0)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('alert_notice_id_seq', 0)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('alert_current_id_seq', 0)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('group_id_seq', 1)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('member_id_seq', 1)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('resource_type_id_seq', 4)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('resource_id_seq', 2)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('principal_type_id_seq', 3)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('principal_id_seq', 2)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('permission_id_seq', 5)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('privilege_id_seq', 1)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('service_config_id_seq', 1)\", false);\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('service_config_application_id_seq', 1)\", false);\n\n    long count = 1;\n    ResultSet resultSet = null;\n    try {\n      resultSet = dbAccessor.executeSelect(\"SELECT count(*) FROM clusterconfig\");\n      if (resultSet.next()) {\n        count = resultSet.getLong(1) + 2;\n      }\n    } finally {\n      if (resultSet != null) {\n        resultSet.close();\n      }\n    }\n\n    dbAccessor.executeQuery(\"INSERT INTO ambari_sequences(sequence_name, sequence_value) VALUES('config_id_seq', \" + count + \")\", false);\n\n    dbAccessor.addFKConstraint(\"users\", \"FK_users_principal_id\", \"principal_id\", \"adminprincipal\", \"principal_id\", true);\n    dbAccessor.addFKConstraint(\"clusters\", \"FK_clusters_resource_id\", \"resource_id\", \"adminresource\", \"resource_id\", true);\n    dbAccessor.addFKConstraint(\"viewinstance\", \"FK_viewinstance_resource_id\", \"resource_id\", \"adminresource\", \"resource_id\", true);\n    dbAccessor.addFKConstraint(\"adminresource\", \"FK_resource_resource_type_id\", \"resource_type_id\", \"adminresourcetype\", \"resource_type_id\", true);\n    dbAccessor.addFKConstraint(\"adminprincipal\", \"FK_principal_principal_type_id\", \"principal_type_id\", \"adminprincipaltype\", \"principal_type_id\", true);\n    dbAccessor.addFKConstraint(\"adminpermission\", \"FK_permission_resource_type_id\", \"resource_type_id\", \"adminresourcetype\", \"resource_type_id\", true);\n    dbAccessor.addFKConstraint(\"adminprivilege\", \"FK_privilege_permission_id\", \"permission_id\", \"adminpermission\", \"permission_id\", true);\n    dbAccessor.addFKConstraint(\"adminprivilege\", \"FK_privilege_resource_id\", \"resource_id\", \"adminresource\", \"resource_id\", true);\n\n    dbAccessor.addFKConstraint(\"groups\", \"FK_groups_principal_id\", \"principal_id\", \"adminprincipal\", \"principal_id\", true);\n    dbAccessor.addFKConstraint(\"members\", \"FK_members_user_id\", \"user_id\", \"users\", \"user_id\", true);\n    dbAccessor.addFKConstraint(\"members\", \"FK_members_group_id\", \"group_id\", \"groups\", \"group_id\", true);\n\n    dbAccessor.executeQuery(\"ALTER TABLE groups ADD CONSTRAINT UNQ_groups_0 UNIQUE (group_name, ldap_group)\");\n    dbAccessor.executeQuery(\"ALTER TABLE members ADD CONSTRAINT UNQ_members_0 UNIQUE (group_id, user_id)\");\n    dbAccessor.executeQuery(\"ALTER TABLE adminpermission ADD CONSTRAINT UQ_perm_name_resource_type_id UNIQUE (permission_name, resource_type_id)\");\n  }","commit_id":"2a4f67ae9cb56e9132956bc0fffecdc6779677ea","url":"https://github.com/apache/ambari"},{"original_method":"@Override protected void queryArgumentValueSet(Argument arg, java.util.Properties inputArgs) {\n    super.queryArgumentValueSet(arg, inputArgs);\n    if(arg._name.equals(\"initial_weight_scale\") &&\n            (initial_weight_distribution == InitialWeightDistribution.UniformAdaptive)\n            ) {\n      arg.disable(\"Using sqrt(6 / (# units + # units of previous layer)) for Uniform distribution.\", inputArgs);\n    }\n    if(arg._name.equals(\"loss\") && !classification) {\n      arg.disable(\"Using MeanSquare loss for regression.\", inputArgs);\n      loss = Loss.MeanSquare;\n    }\n    if(arg._name.equals(\"classification_stop\") && !classification) {\n      arg.disable(\"Only for classification.\", inputArgs);\n    }\n    if(arg._name.equals(\"regression_stop\") && classification) {\n      arg.disable(\"Only for regression.\", inputArgs);\n    }\n    if (arg._name.equals(\"score_validation_samples\") && validation == null) {\n      arg.disable(\"Only if a validation set is specified.\", inputArgs);\n    }\n    if (arg._name.equals(\"loss\") || arg._name.equals(\"max_w2\") || arg._name.equals(\"warmup_samples\")\n            || arg._name.equals(\"score_training_samples\")\n            || arg._name.equals(\"score_validation_samples\")\n            || arg._name.equals(\"initial_weight_distribution\")\n            || arg._name.equals(\"initial_weight_scale\")\n            || arg._name.equals(\"score_interval\")\n            || arg._name.equals(\"diagnostics\")\n            || arg._name.equals(\"rate_decay\")\n            || arg._name.equals(\"mini_batch\")\n            || arg._name.equals(\"fast_mode\")\n            || arg._name.equals(\"ignore_const_cols\")\n            || arg._name.equals(\"shuffle_training_data\")\n            || arg._name.equals(\"nesterov_accelerated_gradient\") || arg._name.equals(\"classification_stop\")\n            || arg._name.equals(\"regression_stop\")\n            || arg._name.equals(\"quiet_mode\")\n            ) {\n      if (!expert_mode) arg.disable(\"Only in expert mode.\", inputArgs);\n    }\n  }","id":58559,"modified_method":"@Override protected void queryArgumentValueSet(Argument arg, java.util.Properties inputArgs) {\n    super.queryArgumentValueSet(arg, inputArgs);\n    if(arg._name.equals(\"initial_weight_scale\") &&\n            (initial_weight_distribution == InitialWeightDistribution.UniformAdaptive)\n            ) {\n      arg.disable(\"Using sqrt(6 / (# units + # units of previous layer)) for Uniform distribution.\", inputArgs);\n    }\n    if(arg._name.equals(\"loss\") && !classification) {\n      arg.disable(\"Using MeanSquare loss for regression.\", inputArgs);\n      loss = Loss.MeanSquare;\n    }\n    if(arg._name.equals(\"classification_stop\") && !classification) {\n      arg.disable(\"Only for classification.\", inputArgs);\n    }\n    if(arg._name.equals(\"regression_stop\") && classification) {\n      arg.disable(\"Only for regression.\", inputArgs);\n    }\n    if (arg._name.equals(\"score_validation_samples\") && validation == null) {\n      arg.disable(\"Only if a validation set is specified.\", inputArgs);\n    }\n    if (arg._name.equals(\"loss\") || arg._name.equals(\"max_w2\") || arg._name.equals(\"warmup_samples\")\n            || arg._name.equals(\"score_training_samples\")\n            || arg._name.equals(\"score_validation_samples\")\n            || arg._name.equals(\"initial_weight_distribution\")\n            || arg._name.equals(\"initial_weight_scale\")\n            || arg._name.equals(\"score_interval\")\n            || arg._name.equals(\"diagnostics\")\n            || arg._name.equals(\"rate_decay\")\n            || arg._name.equals(\"mini_batch\")\n            || arg._name.equals(\"fast_mode\")\n            || arg._name.equals(\"ignore_const_cols\")\n            || arg._name.equals(\"force_load_balance\")\n            || arg._name.equals(\"shuffle_training_data\")\n            || arg._name.equals(\"nesterov_accelerated_gradient\")\n            || arg._name.equals(\"classification_stop\")\n            || arg._name.equals(\"regression_stop\")\n            || arg._name.equals(\"quiet_mode\")\n            ) {\n      if (!expert_mode) arg.disable(\"Only in expert mode.\", inputArgs);\n    }\n  }","commit_id":"7bbde3eb03deaec82bc311a24e514f43e2eb6693","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public final NNModel initModel() {\n    checkParams();\n    lock_data();\n    final Frame train = FrameTask.DataInfo.prepareFrame(source, response, ignored_cols, classification, ignore_const_cols);\n    final DataInfo dinfo = new FrameTask.DataInfo(train, 1, true, !classification);\n    final NNModel model = new NNModel(dest(), self(), source._key, dinfo, this);\n    unlock_data();\n    model.model_info().initializeMembers();\n    return model;\n  }","id":58560,"modified_method":"public final NNModel initModel() {\n    try {\n      lock_data();\n      checkParams();\n      final Frame train = FrameTask.DataInfo.prepareFrame(source, response, ignored_cols, classification, ignore_const_cols);\n      final DataInfo dinfo = new FrameTask.DataInfo(train, 1, true, !classification);\n      final NNModel model = new NNModel(dest(), self(), source._key, dinfo, this);\n      model.model_info().initializeMembers();\n      return model;\n    }\n    finally {\n      unlock_data();\n    }\n  }","commit_id":"7bbde3eb03deaec82bc311a24e514f43e2eb6693","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public final NNModel buildModel(NNModel model) {\n    lock_data();\n    logStart();\n    Log.info(\"Number of chunks of the training data: \" + source.anyVec().nChunks());\n    if (validation != null)\n      Log.info(\"Number of chunks of the validation data: \" + validation.anyVec().nChunks());\n    if (model == null) {\n      model = UKV.get(dest());\n    }\n    model.write_lock(self());\n    if (!quiet_mode) Log.info(\"Initial model:\\n\" + model.model_info());\n\n    final long model_size = model.model_info().size();\n    Log.info(\"Number of model parameters (weights/biases): \" + String.format(\"%,d\", model_size));\n    Log.info(\"Memory usage of the model: \" + String.format(\"%.2f\", (double)model_size*Float.SIZE / (1<<23)) + \" MB.\");\n\n    final Frame train = model.model_info().data_info()._adaptedFrame;\n    Frame trainScoreFrame = sampleFrame(train, score_training_samples, seed);\n\n    Frame[] valid_adapted = null;\n    Frame valid = null;\n    Frame validScoreFrame = null;\n    if (validation != null) {\n      valid_adapted = model.adapt(validation, false);\n      valid = valid_adapted[0];\n      validScoreFrame = valid != validation ? sampleFrame(valid, score_validation_samples, seed+1) : null;\n    }\n\n    if (mini_batch > train.numRows()) {\n      Log.warn(\"Setting mini_batch (\" + mini_batch\n              + \") to the number of rows of the training data (\" + (mini_batch=train.numRows()) + \").\");\n    }\n    // determines the number of rows processed during NNTask, affects synchronization (happens at the end of each NNTask)\n    final float sync_fraction = mini_batch == 0l ? 1.0f : (float)mini_batch / train.numRows();\n\n    Log.info(\"Starting to train the Neural Net model.\");\n    long timeStart = System.currentTimeMillis();\n\n    //main loop\n    do model.set_model_info(new NNTask(model.model_info(), true /*train*/, sync_fraction).doAll(train).model_info());\n    while (model.doScoring(trainScoreFrame, validScoreFrame, timeStart, self()));\n    model.unlock(self());\n\n    //clean up\n    if (validScoreFrame != null && validScoreFrame != valid) validScoreFrame.delete();\n    if (trainScoreFrame != null && trainScoreFrame != train) trainScoreFrame.delete();\n    if (validation != null) valid_adapted[1].delete(); //just deleted the adapted frames for validation\n//    if (_newsource != null && _newsource != source) _newsource.delete();\n    unlock_data();\n    Log.info(\"Finished training the Neural Net model.\");\n    return model;\n  }","id":58561,"modified_method":"public final NNModel buildModel(NNModel model) {\n    Frame[] valid_adapted = null;\n    Frame valid = null, validScoreFrame = null;\n    Frame train = null, trainScoreFrame = null;\n    try {\n      lock_data();\n      logStart();\n      if (model == null) {\n        model = UKV.get(dest());\n      }\n      model.write_lock(self());\n      final long model_size = model.model_info().size();\n      Log.info(\"Number of model parameters (weights/biases): \" + String.format(\"%,d\", model_size));\n      Log.info(\"Memory usage of the model: \" + String.format(\"%.2f\", (double)model_size*Float.SIZE / (1<<23)) + \" MB.\");\n      train = reBalance(model.model_info().data_info()._adaptedFrame, seed);\n      trainScoreFrame = sampleFrame(train, score_training_samples, seed);\n      Log.info(\"Number of chunks of the training data: \" + train.anyVec().nChunks());\n      if (validation != null) {\n        valid_adapted = model.adapt(validation, false);\n        valid = reBalance(valid_adapted[0], seed+1);\n        validScoreFrame = sampleFrame(valid, score_validation_samples, seed+1);\n        Log.info(\"Number of chunks of the validation data: \" + valid.anyVec().nChunks());\n      }\n      if (mini_batch > train.numRows()) {\n        Log.warn(\"Setting mini_batch (\" + mini_batch\n                + \") to the number of rows of the training data (\" + (mini_batch=train.numRows()) + \").\");\n      }\n      // determines the number of rows processed during NNTask, affects synchronization (happens at the end of each NNTask)\n      final float sync_fraction = mini_batch == 0l ? 1.0f : (float)mini_batch / train.numRows();\n\n      if (!quiet_mode) Log.info(\"Initial model:\\n\" + model.model_info());\n\n      Log.info(\"Starting to train the Neural Net model.\");\n      long timeStart = System.currentTimeMillis();\n\n      //main loop\n      long iter = 0;\n      Frame newtrain = new Frame(train);\n      do {\n        model.set_model_info(new NNTask(model.model_info(), sync_fraction).doAll(newtrain).model_info());\n        if (++iter % 10 != 0 && shuffle_training_data) {\n          Frame newtrain2 = reBalance(newtrain, seed+iter);\n          if (newtrain != newtrain2) {\n            newtrain.delete();\n            newtrain = newtrain2;\n            trainScoreFrame = sampleFrame(newtrain, score_training_samples, seed+iter+0xDADDAAAA);\n          }\n        }\n      }\n      while (model.doScoring(trainScoreFrame, validScoreFrame, timeStart, self()));\n\n      Log.info(\"Finished training the Neural Net model.\");\n      return model;\n    }\n    finally {\n      model.unlock(self());\n      //clean up\n      if (validScoreFrame != null && validScoreFrame != valid) validScoreFrame.delete();\n      if (trainScoreFrame != null && trainScoreFrame != train) trainScoreFrame.delete();\n      if (validation != null) valid_adapted[1].delete(); //just deleted the adapted frames for validation\n//    if (_newsource != null && _newsource != source) _newsource.delete();\n      unlock_data();\n    }\n  }","commit_id":"7bbde3eb03deaec82bc311a24e514f43e2eb6693","url":"https://github.com/h2oai/h2o-2"},{"original_method":"private NNTask(NNModel.NNModelInfo input, boolean training, float fraction, H2OCountedCompleter cmp){\n    super(input.job(),input.data_info(),cmp);\n    _training=training;\n    _input=input;\n    _useFraction=fraction;\n    _shuffle = _input.get_params().shuffle_training_data;\n    assert(_output == null);\n  }","id":58562,"modified_method":"private NNTask(NNModel.NNModelInfo input, float fraction, H2OCountedCompleter cmp){\n    super(input.job(),input.data_info(),cmp);\n    _training=true;\n    _input=input;\n    _useFraction=fraction;\n    _shuffle = _input.get_params().shuffle_training_data;\n    assert(_output == null);\n  }","commit_id":"7bbde3eb03deaec82bc311a24e514f43e2eb6693","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public NNTask(NNModel.NNModelInfo input, boolean training, float fraction){this(input,training,fraction,null);}","id":58563,"modified_method":"public NNTask(NNModel.NNModelInfo input, float fraction){this(input,fraction,null);}","commit_id":"7bbde3eb03deaec82bc311a24e514f43e2eb6693","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Test public void compare() throws Exception {\n    NN.Activation[] activations = {\n            NN.Activation.Maxout,\n            NN.Activation.MaxoutWithDropout,\n            NN.Activation.RectifierWithDropout,\n            NN.Activation.Tanh,\n            NN.Activation.Rectifier,\n            NN.Activation.TanhWithDropout\n    };\n    NN.Loss[] losses = {\n            NN.Loss.MeanSquare,\n            NN.Loss.CrossEntropy\n    };\n    NN.InitialWeightDistribution[] dists = {\n            NN.InitialWeightDistribution.Normal,\n            NN.InitialWeightDistribution.Uniform,\n            NN.InitialWeightDistribution.UniformAdaptive\n    };\n    double[] initial_weight_scales = {\n            1e-3 + 1e-2 * new Random().nextFloat()\n    };\n    double[] holdout_ratios = {\n            0.7 + 0.2 * new Random().nextFloat()\n    };\n    int[][] hiddens = {\n            {1},\n            {1+new Random().nextInt(50)},\n            {17,13},\n            {20,10,5}\n    };\n    double[] rates = {\n            0.005 + 1e-2 * new Random().nextFloat()\n    };\n    int[] epochs = {\n            5 + new Random().nextInt(5)\n    };\n    double[] input_dropouts = {\n            0,\n            new Random().nextFloat() * 0.5\n    };\n\n    double p0 = 0.5 * new Random().nextFloat();\n    long pR = 1000 + new Random().nextInt(1000);\n    double p1 = 0.5 + 0.49 * new Random().nextFloat();\n    double l1 = 1e-5 * new Random().nextFloat();\n    double l2 = 1e-5 * new Random().nextFloat();\n    double max_w2 = new Random().nextInt(50);\n    double rate_annealing = 1e-7 + new Random().nextFloat() * 1e-6;\n\n\n\n    boolean threaded = false;\n    int num_repeats = 1;\n\n    // TODO: test that NN and NeuralNet agree for Mnist dataset\n//    String[] files = { \"smalldata/mnist/train.csv\" };\n//    hiddens = new int[][]{ {50,50} };\n//    threaded = true;\n//    num_repeats = 5;\n\n    // TODO: test that NN and NeuralNet agree for covtype dataset\n//    String[] files = { \"smalldata/covtype/covtype.20k.data.my\" };\n//    hiddens = new int[][]{ {100,100} };\n//    epochs = new int[]{ 50 };\n//    threaded = true;\n//    num_repeats = 2;\n\n    String[] files = { \"smalldata/iris/iris.csv\", \"smalldata/neural/two_spiral.data\" };\n\n    for (NN.Activation activation : activations) {\n      for (NN.Loss loss : losses) {\n        for (NN.InitialWeightDistribution dist : dists) {\n          for (double scale : initial_weight_scales) {\n            for (double holdout_ratio : holdout_ratios) {\n              for (double input_dropout : input_dropouts) {\n                for (int[] hidden : hiddens) {\n                  for (int epoch : epochs) {\n                    for (double rate : rates) {\n                      for (String file : files) {\n                        double reftrainerr=0, trainerr=0;\n                        double reftesterr=0, testerr=0;\n                        double[] a = new double[hidden.length+2];\n                        double[] b = new double[hidden.length+2];\n                        double[] ba = new double[hidden.length+2];\n                        double[] bb = new double[hidden.length+2];\n                        long numweights = 0, numbiases = 0;\n                        for (int repeat = 0; repeat < num_repeats; ++repeat) {\n                          long seed = new Random().nextLong();\n                          Log.info(\"\");\n                          Log.info(\"STARTING.\");\n                          Log.info(\"Running with \" + activation.name() + \" activation function and \" + loss.name() + \" loss function.\");\n                          Log.info(\"Initialization with \" + dist.name() + \" distribution and \" + scale + \" scale, holdout ratio \" + holdout_ratio);\n                          Log.info(\"Using seed \" + seed);\n\n                          Key kfile = NFSFileVec.make(find_test_file(file));\n                          Frame frame = ParseDataset2.parse(Key.make(), new Key[]{kfile});\n\n                          _train = sampleFrame(frame, (long)(frame.numRows()*holdout_ratio), seed);\n                          _test = sampleFrame(frame, (long)(frame.numRows()*(1-holdout_ratio)), seed+1);\n\n                          // Train new NN\n                          Neurons[] neurons;\n                          NNModel mymodel;\n                          {\n                            NN p = new NN();\n                            p.source = (Frame)_train.clone();\n                            p.response = _train.lastVec();\n                            p.ignored_cols = null;\n                            p.seed = seed;\n                            p.hidden = hidden;\n                            p.rate = rate;\n                            p.activation = activation;\n                            p.max_w2 = max_w2;\n                            p.epochs = epoch;\n                            p.input_dropout_ratio = input_dropout;\n                            p.rate_annealing = rate_annealing;\n                            p.loss = loss;\n                            p.l1 = l1;\n                            p.l2 = l2;\n                            p.momentum_start = p0;\n                            p.momentum_ramp = pR;\n                            p.momentum_stable = p1;\n                            p.initial_weight_distribution = dist;\n                            p.initial_weight_scale = scale;\n                            p.classification = true;\n                            p.diagnostics = true;\n                            p.validation = null;\n                            p.quiet_mode = true;\n                            p.fast_mode = true; //same as old NeuralNet code\n                            p.mini_batch = 0; //sync once per period\n                            p.ignore_const_cols = false; //same as old NeuralNet code\n                            p.shuffle_training_data = false; //same as old NeuralNet code\n                            p.nesterov_accelerated_gradient = true; //same as old NeuralNet code\n                            p.classification_stop = -1; //don't stop early -> need to compare against old NeuralNet code, which doesn't stop either\n                            p.exec();\n\n                            mymodel = UKV.get(p.dest());\n                            neurons = NNTask.makeNeuronsForTesting(mymodel.model_info());\n                          }\n\n                          // Reference: NeuralNet\n                          Layer[] ls;\n                          NeuralNetModel refmodel;\n                          NeuralNet p = new NeuralNet();\n                          {\n                            Vec[] data = Utils.remove(_train.vecs(), _train.vecs().length - 1);\n                            Vec labels = _train.lastVec();\n\n                            p.seed = seed;\n                            p.hidden = hidden;\n                            p.rate = rate;\n                            p.max_w2 = max_w2;\n                            p.epochs = epoch;\n                            p.input_dropout_ratio = input_dropout;\n                            p.rate_annealing = rate_annealing;\n                            p.l1 = l1;\n                            p.l2 = l2;\n                            p.momentum_start = p0;\n                            p.momentum_ramp = pR;\n                            p.momentum_stable = p1;\n                            if (dist == NN.InitialWeightDistribution.Normal) p.initial_weight_distribution = InitialWeightDistribution.Normal;\n                            else if (dist == NN.InitialWeightDistribution.Uniform) p.initial_weight_distribution = InitialWeightDistribution.Uniform;\n                            else if (dist == NN.InitialWeightDistribution.UniformAdaptive) p.initial_weight_distribution = InitialWeightDistribution.UniformAdaptive;\n                            p.initial_weight_scale = scale;\n                            p.diagnostics = true;\n                            p.classification = true;\n                            if (loss == NN.Loss.MeanSquare) p.loss = Loss.MeanSquare;\n                            else if (loss == NN.Loss.CrossEntropy) p.loss = Loss.CrossEntropy;\n\n                            ls = new Layer[hidden.length+2];\n                            ls[0] = new Layer.VecsInput(data, null);\n                            for (int i=0; i<hidden.length; ++i) {\n                              if (activation == NN.Activation.Tanh) {\n                                p.activation = NeuralNet.Activation.Tanh;\n                                ls[1+i] = new Layer.Tanh(hidden[i]);\n                              } else if (activation == NN.Activation.TanhWithDropout) {\n                                p.activation = Activation.TanhWithDropout;\n                                ls[1+i] = new Layer.TanhDropout(hidden[i]);\n                              } else if (activation == NN.Activation.Rectifier) {\n                                p.activation = Activation.Rectifier;\n                                ls[1+i] = new Layer.Rectifier(hidden[i]);\n                              } else if (activation == NN.Activation.RectifierWithDropout) {\n                                p.activation = Activation.RectifierWithDropout;\n                                ls[1+i] = new Layer.RectifierDropout(hidden[i]);\n                              } else if (activation == NN.Activation.Maxout) {\n                                p.activation = Activation.Maxout;\n                                ls[1+i] = new Layer.Maxout(hidden[i]);\n                              } else if (activation == NN.Activation.MaxoutWithDropout) {\n                                p.activation = Activation.MaxoutWithDropout;\n                                ls[1+i] = new Layer.MaxoutDropout(hidden[i]);\n                              }\n                            }\n                            ls[ls.length-1] = new Layer.VecSoftmax(labels, null);\n                            for (int i = 0; i < ls.length; i++) {\n                              ls[i].init(ls, i, p);\n                            }\n                            Trainer trainer;\n                            if (threaded)\n                              trainer = new Trainer.Threaded(ls, p.epochs, null, -1);\n                            else\n                              trainer = new Trainer.Direct(ls, p.epochs, null);\n                            trainer.start();\n                            trainer.join();\n\n                            refmodel = new NeuralNetModel(null, null, _train, ls, p);\n                          }\n\n\n                          /**\n                           * Compare MEAN weights and biases in hidden and output layer\n                           */\n                          for (int n=1; n<ls.length; ++n) {\n                            Neurons l = neurons[n];\n                            Layer ref = ls[n];\n                            for (int o = 0; o < l._a.length; o++) {\n                              for (int i = 0; i < l._previous._a.length; i++) {\n                                a[n] += ref._w[o * l._previous._a.length + i];\n                                b[n] += l._w[o * l._previous._a.length + i];\n                                numweights++;\n                              }\n                              ba[n] += ref._b[o];\n                              bb[n] += l._b[o];\n                              numbiases++;\n                            }\n                          }\n\n                          /**\n                           * Compare predictions\n                           * Note: Reference and H2O each do their internal data normalization,\n                           * so we must use their \"own\" test data, which is assumed to be created correctly.\n                           */\n                          // NN scoring\n                          {\n                            Frame fpreds = mymodel.score(_train); //[0] is label, [1]...[4] are the probabilities\n                            water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();\n                            CM.actual = _train;\n                            CM.vactual = _train.lastVec();\n                            CM.predict = fpreds;\n                            CM.vpredict = fpreds.vecs()[0];\n                            CM.serve();\n                            StringBuilder sb = new StringBuilder();\n                            trainerr += CM.toASCII(sb);\n                            for (String s : sb.toString().split(\"\\n\")) Log.info(s);\n                            fpreds.delete();\n\n                            Frame fpreds2 = mymodel.score(_test); //[0] is label, [1]...[4] are the probabilities\n                            CM = new water.api.ConfusionMatrix();\n                            CM.actual = _test;\n                            CM.vactual = _test.lastVec();\n                            CM.predict = fpreds2;\n                            CM.vpredict = fpreds2.vecs()[0];\n                            CM.serve();\n                            sb = new StringBuilder();\n                            testerr += CM.toASCII(sb);\n                            for (String s : sb.toString().split(\"\\n\")) Log.info(s);\n                            fpreds2.delete();\n                          }\n                          // NeuralNet scoring\n                          {\n                            Log.info(\"\\nNeuralNet Scoring:\");\n                            //training set\n                            NeuralNet.Errors train = NeuralNet.eval(ls, 0, null);\n                            reftrainerr += train.classification;\n\n                            //test set\n                            final Frame[] adapted = refmodel.adapt(_test, false);\n                            Vec[] data = Utils.remove(_test.vecs(), _test.vecs().length - 1);\n                            Vec labels = _test.vecs()[_test.vecs().length - 1];\n                            Layer.VecsInput input = (Layer.VecsInput) ls[0];\n                            input.vecs = data;\n                            input._len = data[0].length();\n                            ((Layer.VecSoftmax) ls[ls.length-1]).vec = labels;\n                            long [][] cm;\n                            int classes = ls[ls.length - 1].units; //WARNING: only works if training set is large enough to have all classes\n                            cm = new long[classes][classes];\n                            NeuralNet.Errors test = NeuralNet.eval(ls, 0, cm);\n                            Log.info(\"\\nNeuralNet Confusion Matrix:\");\n                            Log.info(new ConfusionMatrix(cm).toString());\n                            reftesterr += test.classification;\n                            adapted[1].delete();\n                          }\n\n                          // cleanup\n                          mymodel.delete();\n                          refmodel.delete();\n                          _train.delete();\n                          _test.delete();\n                          frame.delete();\n                        }\n                        trainerr /= (double)num_repeats;\n                        reftrainerr /= (double)num_repeats;\n                        testerr /= (double)num_repeats;\n                        reftesterr /= (double)num_repeats;\n\n                        /**\n                         * Tolerances\n                         */\n                        final double abseps = threaded ? 1e-2 : 1e-13;\n                        final double releps = threaded ? 1e-2 : 1e-13;\n\n                        // training set scoring\n                        Log.info(\"NeuralNet train error \" + reftrainerr);\n                        Log.info(\"NN        train error \" + trainerr);\n                        compareVal(reftrainerr, trainerr, abseps, releps);\n                        // test set scoring\n                        Log.info(\"NeuralNet test error \" + reftesterr);\n                        Log.info(\"NN        test error \" + testerr);\n                        compareVal(reftrainerr, trainerr, abseps, releps);\n\n                        // mean weights/biases\n                        for (int n=1; n<hidden.length+2; ++n) {\n                          Log.info(\"NeuralNet mean weight for layer \" + n + \": \" + a[n]/numweights);\n                          Log.info(\"NN        mean weight for layer \" + n + \": \" + b[n]/numweights);\n                          Log.info(\"NeuralNet mean bias for layer \" + n + \": \" + ba[n]/numbiases);\n                          Log.info(\"NN        mean bias for layer \" + n + \": \" + bb[n]/numbiases);\n                          compareVal(a[n]/numweights, b[n]/numweights, abseps, releps);\n                          compareVal(ba[n]/numbiases, bb[n]/numbiases, abseps, releps);\n                        }\n\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }","id":58564,"modified_method":"@Test public void compare() throws Exception {\n    NN.Activation[] activations = {\n            NN.Activation.Maxout,\n            NN.Activation.MaxoutWithDropout,\n            NN.Activation.RectifierWithDropout,\n            NN.Activation.Tanh,\n            NN.Activation.Rectifier,\n            NN.Activation.TanhWithDropout\n    };\n    NN.Loss[] losses = {\n            NN.Loss.MeanSquare,\n            NN.Loss.CrossEntropy\n    };\n    NN.InitialWeightDistribution[] dists = {\n            NN.InitialWeightDistribution.Normal,\n            NN.InitialWeightDistribution.Uniform,\n            NN.InitialWeightDistribution.UniformAdaptive\n    };\n    double[] initial_weight_scales = {\n            1e-3 + 1e-2 * new Random().nextFloat()\n    };\n    double[] holdout_ratios = {\n            0.7 + 0.2 * new Random().nextFloat()\n    };\n    int[][] hiddens = {\n            {1},\n            {1+new Random().nextInt(50)},\n            {17,13},\n            {20,10,5}\n    };\n    double[] rates = {\n            0.005 + 1e-2 * new Random().nextFloat()\n    };\n    int[] epochs = {\n            5 + new Random().nextInt(5)\n    };\n    double[] input_dropouts = {\n            0,\n            new Random().nextFloat() * 0.5\n    };\n\n    double p0 = 0.5 * new Random().nextFloat();\n    long pR = 1000 + new Random().nextInt(1000);\n    double p1 = 0.5 + 0.49 * new Random().nextFloat();\n    double l1 = 1e-5 * new Random().nextFloat();\n    double l2 = 1e-5 * new Random().nextFloat();\n    double max_w2 = new Random().nextInt(50);\n    double rate_annealing = 1e-7 + new Random().nextFloat() * 1e-6;\n\n\n\n    boolean threaded = false;\n    int num_repeats = 1;\n\n    // TODO: test that NN and NeuralNet agree for Mnist dataset\n//    String[] files = { \"smalldata/mnist/train.csv\" };\n//    hiddens = new int[][]{ {50,50} };\n//    threaded = true;\n//    num_repeats = 5;\n\n    // TODO: test that NN and NeuralNet agree for covtype dataset\n//    String[] files = { \"smalldata/covtype/covtype.20k.data.my\" };\n//    hiddens = new int[][]{ {100,100} };\n//    epochs = new int[]{ 50 };\n//    threaded = true;\n//    num_repeats = 2;\n\n    String[] files = { \"smalldata/iris/iris.csv\", \"smalldata/neural/two_spiral.data\" };\n\n    for (NN.Activation activation : activations) {\n      for (NN.Loss loss : losses) {\n        for (NN.InitialWeightDistribution dist : dists) {\n          for (double scale : initial_weight_scales) {\n            for (double holdout_ratio : holdout_ratios) {\n              for (double input_dropout : input_dropouts) {\n                for (int[] hidden : hiddens) {\n                  for (int epoch : epochs) {\n                    for (double rate : rates) {\n                      for (String file : files) {\n                        double reftrainerr=0, trainerr=0;\n                        double reftesterr=0, testerr=0;\n                        double[] a = new double[hidden.length+2];\n                        double[] b = new double[hidden.length+2];\n                        double[] ba = new double[hidden.length+2];\n                        double[] bb = new double[hidden.length+2];\n                        long numweights = 0, numbiases = 0;\n                        for (int repeat = 0; repeat < num_repeats; ++repeat) {\n                          long seed = new Random().nextLong();\n                          Log.info(\"\");\n                          Log.info(\"STARTING.\");\n                          Log.info(\"Running with \" + activation.name() + \" activation function and \" + loss.name() + \" loss function.\");\n                          Log.info(\"Initialization with \" + dist.name() + \" distribution and \" + scale + \" scale, holdout ratio \" + holdout_ratio);\n                          Log.info(\"Using seed \" + seed);\n\n                          Key kfile = NFSFileVec.make(find_test_file(file));\n                          Frame frame = ParseDataset2.parse(Key.make(), new Key[]{kfile});\n\n                          _train = sampleFrame(frame, (long)(frame.numRows()*holdout_ratio), seed);\n                          _test = sampleFrame(frame, (long)(frame.numRows()*(1-holdout_ratio)), seed+1);\n\n                          // Train new NN\n                          Neurons[] neurons;\n                          NNModel mymodel;\n                          {\n                            NN p = new NN();\n                            p.source = (Frame)_train.clone();\n                            p.response = _train.lastVec();\n                            p.ignored_cols = null;\n                            p.seed = seed;\n                            p.hidden = hidden;\n                            p.rate = rate;\n                            p.activation = activation;\n                            p.max_w2 = max_w2;\n                            p.epochs = epoch;\n                            p.input_dropout_ratio = input_dropout;\n                            p.rate_annealing = rate_annealing;\n                            p.loss = loss;\n                            p.l1 = l1;\n                            p.l2 = l2;\n                            p.momentum_start = p0;\n                            p.momentum_ramp = pR;\n                            p.momentum_stable = p1;\n                            p.initial_weight_distribution = dist;\n                            p.initial_weight_scale = scale;\n                            p.classification = true;\n                            p.diagnostics = true;\n                            p.validation = null;\n                            p.quiet_mode = true;\n                            p.fast_mode = true; //same as old NeuralNet code\n                            p.mini_batch = 0; //sync once per period\n                            p.ignore_const_cols = false; //same as old NeuralNet code\n                            p.shuffle_training_data = false; //same as old NeuralNet code\n                            p.nesterov_accelerated_gradient = true; //same as old NeuralNet code\n                            p.classification_stop = -1; //don't stop early -> need to compare against old NeuralNet code, which doesn't stop either\n                            p.force_load_balance = false; //keep 1 chunk for reproducibility\n                            p.exec();\n\n                            mymodel = UKV.get(p.dest());\n                            neurons = NNTask.makeNeuronsForTesting(mymodel.model_info());\n                          }\n\n                          // Reference: NeuralNet\n                          Layer[] ls;\n                          NeuralNetModel refmodel;\n                          NeuralNet p = new NeuralNet();\n                          {\n                            Vec[] data = Utils.remove(_train.vecs(), _train.vecs().length - 1);\n                            Vec labels = _train.lastVec();\n\n                            p.seed = seed;\n                            p.hidden = hidden;\n                            p.rate = rate;\n                            p.max_w2 = max_w2;\n                            p.epochs = epoch;\n                            p.input_dropout_ratio = input_dropout;\n                            p.rate_annealing = rate_annealing;\n                            p.l1 = l1;\n                            p.l2 = l2;\n                            p.momentum_start = p0;\n                            p.momentum_ramp = pR;\n                            p.momentum_stable = p1;\n                            if (dist == NN.InitialWeightDistribution.Normal) p.initial_weight_distribution = InitialWeightDistribution.Normal;\n                            else if (dist == NN.InitialWeightDistribution.Uniform) p.initial_weight_distribution = InitialWeightDistribution.Uniform;\n                            else if (dist == NN.InitialWeightDistribution.UniformAdaptive) p.initial_weight_distribution = InitialWeightDistribution.UniformAdaptive;\n                            p.initial_weight_scale = scale;\n                            p.diagnostics = true;\n                            p.classification = true;\n                            if (loss == NN.Loss.MeanSquare) p.loss = Loss.MeanSquare;\n                            else if (loss == NN.Loss.CrossEntropy) p.loss = Loss.CrossEntropy;\n\n                            ls = new Layer[hidden.length+2];\n                            ls[0] = new Layer.VecsInput(data, null);\n                            for (int i=0; i<hidden.length; ++i) {\n                              if (activation == NN.Activation.Tanh) {\n                                p.activation = NeuralNet.Activation.Tanh;\n                                ls[1+i] = new Layer.Tanh(hidden[i]);\n                              } else if (activation == NN.Activation.TanhWithDropout) {\n                                p.activation = Activation.TanhWithDropout;\n                                ls[1+i] = new Layer.TanhDropout(hidden[i]);\n                              } else if (activation == NN.Activation.Rectifier) {\n                                p.activation = Activation.Rectifier;\n                                ls[1+i] = new Layer.Rectifier(hidden[i]);\n                              } else if (activation == NN.Activation.RectifierWithDropout) {\n                                p.activation = Activation.RectifierWithDropout;\n                                ls[1+i] = new Layer.RectifierDropout(hidden[i]);\n                              } else if (activation == NN.Activation.Maxout) {\n                                p.activation = Activation.Maxout;\n                                ls[1+i] = new Layer.Maxout(hidden[i]);\n                              } else if (activation == NN.Activation.MaxoutWithDropout) {\n                                p.activation = Activation.MaxoutWithDropout;\n                                ls[1+i] = new Layer.MaxoutDropout(hidden[i]);\n                              }\n                            }\n                            ls[ls.length-1] = new Layer.VecSoftmax(labels, null);\n                            for (int i = 0; i < ls.length; i++) {\n                              ls[i].init(ls, i, p);\n                            }\n                            Trainer trainer;\n                            if (threaded)\n                              trainer = new Trainer.Threaded(ls, p.epochs, null, -1);\n                            else\n                              trainer = new Trainer.Direct(ls, p.epochs, null);\n                            trainer.start();\n                            trainer.join();\n\n                            refmodel = new NeuralNetModel(null, null, _train, ls, p);\n                          }\n\n\n                          /**\n                           * Compare MEAN weights and biases in hidden and output layer\n                           */\n                          for (int n=1; n<ls.length; ++n) {\n                            Neurons l = neurons[n];\n                            Layer ref = ls[n];\n                            for (int o = 0; o < l._a.length; o++) {\n                              for (int i = 0; i < l._previous._a.length; i++) {\n                                a[n] += ref._w[o * l._previous._a.length + i];\n                                b[n] += l._w[o * l._previous._a.length + i];\n                                numweights++;\n                              }\n                              ba[n] += ref._b[o];\n                              bb[n] += l._b[o];\n                              numbiases++;\n                            }\n                          }\n\n                          /**\n                           * Compare predictions\n                           * Note: Reference and H2O each do their internal data normalization,\n                           * so we must use their \"own\" test data, which is assumed to be created correctly.\n                           */\n                          // NN scoring\n                          {\n                            Frame fpreds = mymodel.score(_train); //[0] is label, [1]...[4] are the probabilities\n                            water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();\n                            CM.actual = _train;\n                            CM.vactual = _train.lastVec();\n                            CM.predict = fpreds;\n                            CM.vpredict = fpreds.vecs()[0];\n                            CM.serve();\n                            StringBuilder sb = new StringBuilder();\n                            trainerr += CM.toASCII(sb);\n                            for (String s : sb.toString().split(\"\\n\")) Log.info(s);\n                            fpreds.delete();\n\n                            Frame fpreds2 = mymodel.score(_test); //[0] is label, [1]...[4] are the probabilities\n                            CM = new water.api.ConfusionMatrix();\n                            CM.actual = _test;\n                            CM.vactual = _test.lastVec();\n                            CM.predict = fpreds2;\n                            CM.vpredict = fpreds2.vecs()[0];\n                            CM.serve();\n                            sb = new StringBuilder();\n                            testerr += CM.toASCII(sb);\n                            for (String s : sb.toString().split(\"\\n\")) Log.info(s);\n                            fpreds2.delete();\n                          }\n                          // NeuralNet scoring\n                          {\n                            Log.info(\"\\nNeuralNet Scoring:\");\n                            //training set\n                            NeuralNet.Errors train = NeuralNet.eval(ls, 0, null);\n                            reftrainerr += train.classification;\n\n                            //test set\n                            final Frame[] adapted = refmodel.adapt(_test, false);\n                            Vec[] data = Utils.remove(_test.vecs(), _test.vecs().length - 1);\n                            Vec labels = _test.vecs()[_test.vecs().length - 1];\n                            Layer.VecsInput input = (Layer.VecsInput) ls[0];\n                            input.vecs = data;\n                            input._len = data[0].length();\n                            ((Layer.VecSoftmax) ls[ls.length-1]).vec = labels;\n                            long [][] cm;\n                            int classes = ls[ls.length - 1].units; //WARNING: only works if training set is large enough to have all classes\n                            cm = new long[classes][classes];\n                            NeuralNet.Errors test = NeuralNet.eval(ls, 0, cm);\n                            Log.info(\"\\nNeuralNet Confusion Matrix:\");\n                            Log.info(new ConfusionMatrix(cm).toString());\n                            reftesterr += test.classification;\n                            adapted[1].delete();\n                          }\n\n                          // cleanup\n                          mymodel.delete();\n                          refmodel.delete();\n                          _train.delete();\n                          _test.delete();\n                          frame.delete();\n                        }\n                        trainerr /= (double)num_repeats;\n                        reftrainerr /= (double)num_repeats;\n                        testerr /= (double)num_repeats;\n                        reftesterr /= (double)num_repeats;\n\n                        /**\n                         * Tolerances\n                         */\n                        final double abseps = threaded ? 1e-2 : 1e-13;\n                        final double releps = threaded ? 1e-2 : 1e-13;\n\n                        // training set scoring\n                        Log.info(\"NeuralNet train error \" + reftrainerr);\n                        Log.info(\"NN        train error \" + trainerr);\n                        compareVal(reftrainerr, trainerr, abseps, releps);\n                        // test set scoring\n                        Log.info(\"NeuralNet test error \" + reftesterr);\n                        Log.info(\"NN        test error \" + testerr);\n                        compareVal(reftrainerr, trainerr, abseps, releps);\n\n                        // mean weights/biases\n                        for (int n=1; n<hidden.length+2; ++n) {\n                          Log.info(\"NeuralNet mean weight for layer \" + n + \": \" + a[n]/numweights);\n                          Log.info(\"NN        mean weight for layer \" + n + \": \" + b[n]/numweights);\n                          Log.info(\"NeuralNet mean bias for layer \" + n + \": \" + ba[n]/numbiases);\n                          Log.info(\"NN        mean bias for layer \" + n + \": \" + bb[n]/numbiases);\n                          compareVal(a[n]/numweights, b[n]/numweights, abseps, releps);\n                          compareVal(ba[n]/numbiases, bb[n]/numbiases, abseps, releps);\n                        }\n\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }","commit_id":"7bbde3eb03deaec82bc311a24e514f43e2eb6693","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Test public void compare() throws Exception {\n\n    for (int repeat = 0; repeat < 1; ++repeat) {\n      // Testing different things\n      // Note: Microsoft reference implementation is only for Tanh + MSE, rectifier and MCE are implemented by 0xdata (trivial).\n      // Note: Initial weight distributions are copied, but what is tested is the stability behavior.\n\n      NN.Activation[] activations = { NN.Activation.Tanh, NN.Activation.Rectifier };\n      NN.Loss[] losses = { NN.Loss.MeanSquare, NN.Loss.CrossEntropy };\n      NN.InitialWeightDistribution[] dists = {\n//              NN.InitialWeightDistribution.Normal,\n//              NN.InitialWeightDistribution.Uniform,\n              NN.InitialWeightDistribution.UniformAdaptive\n      };\n      double[] initial_weight_scales = { 1e-4 + new Random().nextDouble() };\n      double[] holdout_ratios = { 0.1 + new Random().nextDouble() * 0.8 };\n      double[] momenta = { new Random().nextDouble() * 0.99 };\n      int[] hiddens = { 1, new Random().nextInt(50) };\n      int[] epochs = { 1, new Random().nextInt(50) };\n      double[] rates = { 0.01, 1e-5 + new Random().nextDouble() * .1 };\n\n      int num_runs = 0;\n      for (NN.Activation activation : activations) {\n        for (NN.Loss loss : losses) {\n          for (NN.InitialWeightDistribution dist : dists) {\n            for (double scale : initial_weight_scales) {\n              for (double holdout_ratio : holdout_ratios) {\n                for (double momentum : momenta) {\n                  for (int hidden : hiddens) {\n                    for (int epoch : epochs) {\n                      for (double rate : rates) {\n                        long seed = new Random().nextLong();\n                        Log.info(\"\");\n                        Log.info(\"STARTING.\");\n                        Log.info(\"Running with \" + activation.name() + \" activation function and \" + loss.name() + \" loss function.\");\n                        Log.info(\"Initialization with \" + dist.name() + \" distribution and \" + scale + \" scale, holdout ratio \" + holdout_ratio);\n                        Log.info(\"Using \" + hidden + \" hidden layers and momentum: \" + momentum);\n                        Log.info(\"Using seed \" + seed);\n\n                        Key file = NFSFileVec.make(find_test_file(PATH));\n                        Frame frame = ParseDataset2.parse(Key.make(\"iris_nn2\"), new Key[] { file });\n\n                        Frame fr = null;\n                        NN p;\n                        Random rand;\n\n                        int trial = 0;\n                        FrameTask.DataInfo dinfo;\n                        do {\n                          Log.info(\"Trial #\" + ++trial);\n                          if (_train != null) _train.delete();\n                          if (_test != null) _test.delete();\n                          if (fr != null) fr.delete();\n\n                          rand = Utils.getDeterRNG(seed);\n\n                          double[][] rows = new double[(int) frame.numRows()][frame.numCols()];\n                          String[] names = new String[frame.numCols()];\n                          for( int c = 0; c < frame.numCols(); c++ ) {\n                            names[c] = \"ColumnName\" + c;\n                            for( int r = 0; r < frame.numRows(); r++ )\n                              rows[r][c] = frame.vecs()[c].at(r);\n                          }\n\n                          for( int i = rows.length - 1; i >= 0; i-- ) {\n                            int shuffle = rand.nextInt(i + 1);\n                            double[] row = rows[shuffle];\n                            rows[shuffle] = rows[i];\n                            rows[i] = row;\n                          }\n\n                          int limit = (int) (frame.numRows() * holdout_ratio);\n                          _train = frame(names, Utils.subarray(rows, 0, limit));\n                          _test = frame(names, Utils.subarray(rows, limit, (int) frame.numRows() - limit));\n\n                          p = new NN();\n                          p.source = _train;\n                          p.response = _train.lastVec();\n                          p.ignored_cols = null;\n                          p.ignore_const_cols = true;\n                          fr = FrameTask.DataInfo.prepareFrame(p.source, p.response, p.ignored_cols, true, p.ignore_const_cols);\n                          dinfo = new FrameTask.DataInfo(fr, 1, true);\n                        }\n                        // must have all output classes in training data (since that's what the reference implementation has hardcoded)\n                        while (dinfo._adaptedFrame.lastVec().domain().length < 3);\n\n                        // use the same seed for the reference implementation\n                        NeuralNetMLPReference2 ref = new NeuralNetMLPReference2();\n                        ref.init(activation, Utils.getDeterRNG(seed), holdout_ratio, hidden);\n\n                        p.seed = seed;\n                        p.hidden = new int[]{hidden};\n                        p.rate = rate / (1 - momentum); //adapt to (1-m) correction that's done inside (only for constant momentum!)\n                        p.activation = activation;\n                        p.max_w2 = Double.MAX_VALUE;\n                        p.epochs = epoch;\n                        p.input_dropout_ratio = 0;\n                        p.rate_annealing = 0; //do not change - not implemented in reference\n                        p.l1 = 0;\n                        p.loss = loss;\n                        p.l2 = 0;\n                        p.momentum_stable = momentum; //reference only supports constant momentum\n                        p.momentum_start = p.momentum_stable; //do not change - not implemented in reference\n                        p.momentum_ramp = 0; //do not change - not implemented in reference\n                        p.initial_weight_distribution = dist;\n                        p.initial_weight_scale = scale;\n                        p.classification = true;\n                        p.diagnostics = true;\n                        p.validation = null;\n                        p.quiet_mode = true;\n                        p.fast_mode = false; //to be the same as reference\n//                      p.fast_mode = true; //to be the same as old NeuralNet code\n                        p.nesterov_accelerated_gradient = false; //to be the same as reference\n//                        p.nesterov_accelerated_gradient = true; //to be the same as old NeuralNet code\n                        p.mini_batch = 0; //sync once per period\n                        p.ignore_const_cols = false;\n                        p.shuffle_training_data = false;\n                        p.classification_stop = -1; //don't stop early -> need to compare against reference, which doesn't stop either\n                        NNModel mymodel = p.initModel(); //randomize weights, but don't start training yet\n\n                        Neurons[] neurons = NNTask.makeNeuronsForTraining(mymodel.model_info());\n\n                        // use the same random weights for the reference implementation\n                        Neurons l = neurons[1];\n                        for( int o = 0; o < l._a.length; o++ ) {\n                          for( int i = 0; i < l._previous._a.length; i++ ) {\n//                          System.out.println(\"initial weight[\" + o + \"]=\" + l._w[o * l._previous._a.length + i]);\n                            ref._nn.ihWeights[i][o] = l._w[o * l._previous._a.length + i];\n                          }\n                          ref._nn.hBiases[o] = l._b[o];\n//                        System.out.println(\"initial bias[\" + o + \"]=\" + l._b[o]);\n                        }\n                        l = neurons[2];\n                        for( int o = 0; o < l._a.length; o++ ) {\n                          for( int i = 0; i < l._previous._a.length; i++ ) {\n//                          System.out.println(\"initial weight[\" + o + \"]=\" + l._w[o * l._previous._a.length + i]);\n                            ref._nn.hoWeights[i][o] = l._w[o * l._previous._a.length + i];\n                          }\n                          ref._nn.oBiases[o] = l._b[o];\n//                        System.out.println(\"initial bias[\" + o + \"]=\" + l._b[o]);\n                        }\n\n                        // Train the Reference\n                        ref.train((int)p.epochs, rate, p.momentum_stable, loss);\n\n                        // Train H2O\n                        mymodel = p.buildModel(mymodel);\n\n                        /**\n                         * Tolerances (super tight -> expect the same double/float precision math inside both algos)\n                         */\n                        final double abseps = 1e-13;\n                        final double releps = 1e-13;\n\n                        /**\n                         * Compare weights and biases in hidden layer\n                         */\n                        neurons = NNTask.makeNeuronsForTesting(mymodel.model_info()); //link the weights to the neurons, for easy access\n                        l = neurons[1];\n                        for( int o = 0; o < l._a.length; o++ ) {\n                          for( int i = 0; i < l._previous._a.length; i++ ) {\n                            double a = ref._nn.ihWeights[i][o];\n                            double b = l._w[o * l._previous._a.length + i];\n                            compareVal(a, b, abseps, releps);\n//                          System.out.println(\"weight[\" + o + \"]=\" + b);\n                          }\n                          double ba = ref._nn.hBiases[o];\n                          double bb = l._b[o];\n                          compareVal(ba, bb, abseps, releps);\n                        }\n                        Log.info(\"Weights and biases for hidden layer: PASS\");\n\n                        /**\n                         * Compare weights and biases for output layer\n                         */\n                        l = neurons[2];\n                        for( int o = 0; o < l._a.length; o++ ) {\n                          for( int i = 0; i < l._previous._a.length; i++ ) {\n                            double a = ref._nn.hoWeights[i][o];\n                            double b = l._w[o * l._previous._a.length + i];\n                            compareVal(a, b, abseps, releps);\n                          }\n                          double ba = ref._nn.oBiases[o];\n                          double bb = l._b[o];\n                          compareVal(ba, bb, abseps, releps);\n                        }\n                        Log.info(\"Weights and biases for output layer: PASS\");\n\n                        /**\n                         * Compare predictions\n                         * Note: Reference and H2O each do their internal data normalization,\n                         * so we must use their \"own\" test data, which is assumed to be created correctly.\n                         */\n                        // H2O predictions\n                        Frame fpreds = mymodel.score(_test); //[0] is label, [1]...[4] are the probabilities\n\n                        for (int i=0; i<_test.numRows(); ++i) {\n                          // Reference predictions\n                          double[] xValues = new double[neurons[0]._a.length];\n                          System.arraycopy(ref._testData[i], 0, xValues, 0, xValues.length);\n                          double[] ref_preds = ref._nn.ComputeOutputs(xValues);\n\n                          // find the label\n                          // do the same as H2O here (compare float values and break ties based on row number)\n                          float[] preds = new float[ref_preds.length+1];\n                          for (int j=0; j<ref_preds.length; ++j) preds[j+1] = (float)ref_preds[j];\n                          preds[0] = Model.getPrediction(preds, i);\n\n                          // compare predicted label\n                          Assert.assertTrue(preds[0] == (int) fpreds.vecs()[0].at(i));\n                          // compare predicted probabilities\n                          for (int j=0; j<ref_preds.length; ++j) {\n                            compareVal((float)(ref_preds[j]), fpreds.vecs()[1+j].at(i), abseps, releps);\n                          }\n                        }\n                        fpreds.delete();\n                        Log.info(\"Predicted values: PASS\");\n\n                        /**\n                         * Compare (self-reported) scoring\n                         */\n                        final double trainErr = ref._nn.Accuracy(ref._trainData);\n                        final double testErr = ref._nn.Accuracy(ref._testData);\n                        final double myTrainErr = mymodel.calcError(_train, \"Final training error:\", true, null);\n                        final double myTestErr = mymodel.calcError(_test,  \"Final testing error:\",  true, null);\n                        Log.info(\"H2O  training error : \" + myTrainErr*100 + \"%, test error: \" + myTestErr*100 + \"%\");\n                        Log.info(\"REF  training error : \" + trainErr*100 + \"%, test error: \" + testErr*100 + \"%\");\n                        compareVal(trainErr, myTrainErr, abseps, releps);\n                        compareVal(testErr,  myTestErr,  abseps, releps);\n                        Log.info(\"Scoring: PASS\");\n\n                        // cleanup\n                        mymodel.delete();\n                        _train.delete();\n                        _test.delete();\n                        frame.delete();\n                        fr.delete();\n                        p.delete();\n\n                        num_runs++;\n                        Log.info(\"Parameters combination \" + num_runs + \": PASS\");\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }","id":58565,"modified_method":"@Test public void compare() throws Exception {\n\n    for (int repeat = 0; repeat < 1; ++repeat) {\n      // Testing different things\n      // Note: Microsoft reference implementation is only for Tanh + MSE, rectifier and MCE are implemented by 0xdata (trivial).\n      // Note: Initial weight distributions are copied, but what is tested is the stability behavior.\n\n      NN.Activation[] activations = { NN.Activation.Tanh, NN.Activation.Rectifier };\n      NN.Loss[] losses = { NN.Loss.MeanSquare, NN.Loss.CrossEntropy };\n      NN.InitialWeightDistribution[] dists = {\n//              NN.InitialWeightDistribution.Normal,\n//              NN.InitialWeightDistribution.Uniform,\n              NN.InitialWeightDistribution.UniformAdaptive\n      };\n      double[] initial_weight_scales = { 1e-4 + new Random().nextDouble() };\n      double[] holdout_ratios = { 0.1 + new Random().nextDouble() * 0.8 };\n      double[] momenta = { new Random().nextDouble() * 0.99 };\n      int[] hiddens = { 1, new Random().nextInt(50) };\n      int[] epochs = { 1, new Random().nextInt(50) };\n      double[] rates = { 0.01, 1e-5 + new Random().nextDouble() * .1 };\n\n      int num_runs = 0;\n      for (NN.Activation activation : activations) {\n        for (NN.Loss loss : losses) {\n          for (NN.InitialWeightDistribution dist : dists) {\n            for (double scale : initial_weight_scales) {\n              for (double holdout_ratio : holdout_ratios) {\n                for (double momentum : momenta) {\n                  for (int hidden : hiddens) {\n                    for (int epoch : epochs) {\n                      for (double rate : rates) {\n                        long seed = new Random().nextLong();\n                        Log.info(\"\");\n                        Log.info(\"STARTING.\");\n                        Log.info(\"Running with \" + activation.name() + \" activation function and \" + loss.name() + \" loss function.\");\n                        Log.info(\"Initialization with \" + dist.name() + \" distribution and \" + scale + \" scale, holdout ratio \" + holdout_ratio);\n                        Log.info(\"Using \" + hidden + \" hidden layers and momentum: \" + momentum);\n                        Log.info(\"Using seed \" + seed);\n\n                        Key file = NFSFileVec.make(find_test_file(PATH));\n                        Frame frame = ParseDataset2.parse(Key.make(\"iris_nn2\"), new Key[] { file });\n\n                        Frame fr = null;\n                        NN p;\n                        Random rand;\n\n                        int trial = 0;\n                        FrameTask.DataInfo dinfo;\n                        do {\n                          Log.info(\"Trial #\" + ++trial);\n                          if (_train != null) _train.delete();\n                          if (_test != null) _test.delete();\n                          if (fr != null) fr.delete();\n\n                          rand = Utils.getDeterRNG(seed);\n\n                          double[][] rows = new double[(int) frame.numRows()][frame.numCols()];\n                          String[] names = new String[frame.numCols()];\n                          for( int c = 0; c < frame.numCols(); c++ ) {\n                            names[c] = \"ColumnName\" + c;\n                            for( int r = 0; r < frame.numRows(); r++ )\n                              rows[r][c] = frame.vecs()[c].at(r);\n                          }\n\n                          for( int i = rows.length - 1; i >= 0; i-- ) {\n                            int shuffle = rand.nextInt(i + 1);\n                            double[] row = rows[shuffle];\n                            rows[shuffle] = rows[i];\n                            rows[i] = row;\n                          }\n\n                          int limit = (int) (frame.numRows() * holdout_ratio);\n                          _train = frame(names, Utils.subarray(rows, 0, limit));\n                          _test = frame(names, Utils.subarray(rows, limit, (int) frame.numRows() - limit));\n\n                          p = new NN();\n                          p.source = _train;\n                          p.response = _train.lastVec();\n                          p.ignored_cols = null;\n                          p.ignore_const_cols = true;\n                          fr = FrameTask.DataInfo.prepareFrame(p.source, p.response, p.ignored_cols, true, p.ignore_const_cols);\n                          dinfo = new FrameTask.DataInfo(fr, 1, true);\n                        }\n                        // must have all output classes in training data (since that's what the reference implementation has hardcoded)\n                        while (dinfo._adaptedFrame.lastVec().domain().length < 3);\n\n                        // use the same seed for the reference implementation\n                        NeuralNetMLPReference2 ref = new NeuralNetMLPReference2();\n                        ref.init(activation, Utils.getDeterRNG(seed), holdout_ratio, hidden);\n\n                        p.seed = seed;\n                        p.hidden = new int[]{hidden};\n                        p.rate = rate / (1 - momentum); //adapt to (1-m) correction that's done inside (only for constant momentum!)\n                        p.activation = activation;\n                        p.max_w2 = Double.MAX_VALUE;\n                        p.epochs = epoch;\n                        p.input_dropout_ratio = 0;\n                        p.rate_annealing = 0; //do not change - not implemented in reference\n                        p.l1 = 0;\n                        p.loss = loss;\n                        p.l2 = 0;\n                        p.momentum_stable = momentum; //reference only supports constant momentum\n                        p.momentum_start = p.momentum_stable; //do not change - not implemented in reference\n                        p.momentum_ramp = 0; //do not change - not implemented in reference\n                        p.initial_weight_distribution = dist;\n                        p.initial_weight_scale = scale;\n                        p.classification = true;\n                        p.diagnostics = true;\n                        p.validation = null;\n                        p.quiet_mode = true;\n                        p.fast_mode = false; //to be the same as reference\n//                      p.fast_mode = true; //to be the same as old NeuralNet code\n                        p.nesterov_accelerated_gradient = false; //to be the same as reference\n//                        p.nesterov_accelerated_gradient = true; //to be the same as old NeuralNet code\n                        p.mini_batch = 0; //sync once per period\n                        p.ignore_const_cols = false;\n                        p.shuffle_training_data = false;\n                        p.classification_stop = -1; //don't stop early -> need to compare against reference, which doesn't stop either\n                        p.force_load_balance = false; //keep just 1 chunk for reproducibility\n                        NNModel mymodel = p.initModel(); //randomize weights, but don't start training yet\n\n                        Neurons[] neurons = NNTask.makeNeuronsForTraining(mymodel.model_info());\n\n                        // use the same random weights for the reference implementation\n                        Neurons l = neurons[1];\n                        for( int o = 0; o < l._a.length; o++ ) {\n                          for( int i = 0; i < l._previous._a.length; i++ ) {\n//                          System.out.println(\"initial weight[\" + o + \"]=\" + l._w[o * l._previous._a.length + i]);\n                            ref._nn.ihWeights[i][o] = l._w[o * l._previous._a.length + i];\n                          }\n                          ref._nn.hBiases[o] = l._b[o];\n//                        System.out.println(\"initial bias[\" + o + \"]=\" + l._b[o]);\n                        }\n                        l = neurons[2];\n                        for( int o = 0; o < l._a.length; o++ ) {\n                          for( int i = 0; i < l._previous._a.length; i++ ) {\n//                          System.out.println(\"initial weight[\" + o + \"]=\" + l._w[o * l._previous._a.length + i]);\n                            ref._nn.hoWeights[i][o] = l._w[o * l._previous._a.length + i];\n                          }\n                          ref._nn.oBiases[o] = l._b[o];\n//                        System.out.println(\"initial bias[\" + o + \"]=\" + l._b[o]);\n                        }\n\n                        // Train the Reference\n                        ref.train((int)p.epochs, rate, p.momentum_stable, loss);\n\n                        // Train H2O\n                        mymodel = p.buildModel(mymodel);\n\n                        /**\n                         * Tolerances (super tight -> expect the same double/float precision math inside both algos)\n                         */\n                        final double abseps = 1e-13;\n                        final double releps = 1e-13;\n\n                        /**\n                         * Compare weights and biases in hidden layer\n                         */\n                        neurons = NNTask.makeNeuronsForTesting(mymodel.model_info()); //link the weights to the neurons, for easy access\n                        l = neurons[1];\n                        for( int o = 0; o < l._a.length; o++ ) {\n                          for( int i = 0; i < l._previous._a.length; i++ ) {\n                            double a = ref._nn.ihWeights[i][o];\n                            double b = l._w[o * l._previous._a.length + i];\n                            compareVal(a, b, abseps, releps);\n//                          System.out.println(\"weight[\" + o + \"]=\" + b);\n                          }\n                          double ba = ref._nn.hBiases[o];\n                          double bb = l._b[o];\n                          compareVal(ba, bb, abseps, releps);\n                        }\n                        Log.info(\"Weights and biases for hidden layer: PASS\");\n\n                        /**\n                         * Compare weights and biases for output layer\n                         */\n                        l = neurons[2];\n                        for( int o = 0; o < l._a.length; o++ ) {\n                          for( int i = 0; i < l._previous._a.length; i++ ) {\n                            double a = ref._nn.hoWeights[i][o];\n                            double b = l._w[o * l._previous._a.length + i];\n                            compareVal(a, b, abseps, releps);\n                          }\n                          double ba = ref._nn.oBiases[o];\n                          double bb = l._b[o];\n                          compareVal(ba, bb, abseps, releps);\n                        }\n                        Log.info(\"Weights and biases for output layer: PASS\");\n\n                        /**\n                         * Compare predictions\n                         * Note: Reference and H2O each do their internal data normalization,\n                         * so we must use their \"own\" test data, which is assumed to be created correctly.\n                         */\n                        // H2O predictions\n                        Frame fpreds = mymodel.score(_test); //[0] is label, [1]...[4] are the probabilities\n\n                        for (int i=0; i<_test.numRows(); ++i) {\n                          // Reference predictions\n                          double[] xValues = new double[neurons[0]._a.length];\n                          System.arraycopy(ref._testData[i], 0, xValues, 0, xValues.length);\n                          double[] ref_preds = ref._nn.ComputeOutputs(xValues);\n\n                          // find the label\n                          // do the same as H2O here (compare float values and break ties based on row number)\n                          float[] preds = new float[ref_preds.length+1];\n                          for (int j=0; j<ref_preds.length; ++j) preds[j+1] = (float)ref_preds[j];\n                          preds[0] = Model.getPrediction(preds, i);\n\n                          // compare predicted label\n                          Assert.assertTrue(preds[0] == (int) fpreds.vecs()[0].at(i));\n                          // compare predicted probabilities\n                          for (int j=0; j<ref_preds.length; ++j) {\n                            compareVal((float)(ref_preds[j]), fpreds.vecs()[1+j].at(i), abseps, releps);\n                          }\n                        }\n                        fpreds.delete();\n                        Log.info(\"Predicted values: PASS\");\n\n                        /**\n                         * Compare (self-reported) scoring\n                         */\n                        final double trainErr = ref._nn.Accuracy(ref._trainData);\n                        final double testErr = ref._nn.Accuracy(ref._testData);\n                        final double myTrainErr = mymodel.calcError(_train, \"Final training error:\", true, null);\n                        final double myTestErr = mymodel.calcError(_test,  \"Final testing error:\",  true, null);\n                        Log.info(\"H2O  training error : \" + myTrainErr*100 + \"%, test error: \" + myTestErr*100 + \"%\");\n                        Log.info(\"REF  training error : \" + trainErr*100 + \"%, test error: \" + testErr*100 + \"%\");\n                        compareVal(trainErr, myTrainErr, abseps, releps);\n                        compareVal(testErr,  myTestErr,  abseps, releps);\n                        Log.info(\"Scoring: PASS\");\n\n                        // cleanup\n                        mymodel.delete();\n                        _train.delete();\n                        _test.delete();\n                        frame.delete();\n                        fr.delete();\n                        p.delete();\n\n                        num_runs++;\n                        Log.info(\"Parameters combination \" + num_runs + \": PASS\");\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }","commit_id":"7bbde3eb03deaec82bc311a24e514f43e2eb6693","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override protected JobState exec() {\n    Log.info(\"Parsing data.\");\n    //long seed = 0xC0FFEE;\n    long seed = new Random().nextLong();\n    double fraction = 1.0;\n    Frame trainf = sampleFrame(TestUtil.parseFromH2OFolder(\"smalldata/mnist/train10x.csv\"), (long)(600000*fraction), seed);\n//    Frame trainf = sampleFrame(TestUtil.parseFromH2OFolder(\"smalldata/mnist/train.csv\"), (long)(60000*fraction), seed);\n    Frame testf = sampleFrame(TestUtil.parseFromH2OFolder(\"smalldata/mnist/test.csv\"), (long)(10000*fraction), seed+1);\n    Log.info(\"Done.\");\n\n    NN p = new NN();\n    // Hinton parameters -> should lead to ~1 % test error after a few dozen million samples\n    p.seed = seed;\n    p.hidden = new int[]{1024,1024,2048};\n//    p.hidden = new int[]{128,128,256};\n    p.rate = 0.01;\n    p.rate_annealing = 1e-6;\n    p.activation = NN.Activation.RectifierWithDropout;\n    p.loss = NN.Loss.CrossEntropy;\n    p.input_dropout_ratio = 0.2;\n    p.max_w2 = 15;\n    p.epochs = 10;\n    p.l1 = 1e-5;\n    p.l2 = 0;\n    p.momentum_start = 0.5;\n    p.momentum_ramp = 1800000;\n    p.momentum_stable = 0.99;\n    p.initial_weight_distribution = NN.InitialWeightDistribution.UniformAdaptive;\n//    p.initial_weight_scale = 0.01\n    p.classification = true;\n    p.diagnostics = true;\n    p.expert_mode = true;\n    p.score_training_samples = 1000;\n    p.score_validation_samples = 10000;\n    p.validation = testf;\n    p.source = trainf;\n    p.response = trainf.lastVec();\n    p.ignored_cols = null;\n    p.mini_batch = 60000;\n    p.score_interval = 600;\n\n    p.fast_mode = true; //to match old NeuralNet behavior\n    p.ignore_const_cols = true;\n    p.shuffle_training_data = true;\n    return p.exec();\n  }","id":58566,"modified_method":"@Override protected JobState exec() {\n    Log.info(\"Parsing data.\");\n    //long seed = 0xC0FFEE;\n    long seed = new Random().nextLong();\n    double fraction = 1.0;\n//    Frame trainf = sampleFrame(TestUtil.parseFromH2OFolder(\"smalldata/mnist/train10x.csv\"), (long)(600000*fraction), seed);\n    Frame trainf = sampleFrame(TestUtil.parseFromH2OFolder(\"smalldata/mnist/train.csv.gz\"), (long)(60000*fraction), seed);\n    Frame testf = sampleFrame(TestUtil.parseFromH2OFolder(\"smalldata/mnist/test.csv.gz\"), (long)(10000*fraction), seed+1);\n    Log.info(\"Done.\");\n\n    NN p = new NN();\n    // Hinton parameters -> should lead to ~1 % test error after a few dozen million samples\n    p.seed = seed;\n    p.hidden = new int[]{1024,1024,2048};\n//    p.hidden = new int[]{128,128,256};\n    p.rate = 0.01;\n    p.rate_annealing = 1e-6;\n    p.activation = NN.Activation.RectifierWithDropout;\n    p.loss = NN.Loss.CrossEntropy;\n    p.input_dropout_ratio = 0.2;\n    p.max_w2 = 15;\n    p.epochs = 10000;\n    p.l1 = 1e-5;\n    p.l2 = 0;\n    p.momentum_start = 0.5;\n    p.momentum_ramp = 1800000;\n    p.momentum_stable = 0.99;\n    p.initial_weight_distribution = NN.InitialWeightDistribution.UniformAdaptive;\n//    p.initial_weight_scale = 0.01\n    p.classification = true;\n    p.diagnostics = true;\n    p.expert_mode = true;\n    p.score_training_samples = 1000;\n    p.score_validation_samples = 10000;\n    p.validation = testf;\n    p.source = trainf;\n    p.response = trainf.lastVec();\n    p.ignored_cols = null;\n    p.mini_batch = 240000;\n    p.score_interval = 60;\n\n    p.fast_mode = true; //to match old NeuralNet behavior\n    p.ignore_const_cols = true;\n    p.shuffle_training_data = false;\n    p.force_load_balance = true;\n    p.quiet_mode = false;\n    return p.exec();\n  }","commit_id":"7bbde3eb03deaec82bc311a24e514f43e2eb6693","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public static void main(String[] args) throws Exception {\n    Class job = NeuralNetMnist2.class;\n//    samples.launchers.CloudLocal.launch(job, 1);\n//    samples.launchers.CloudProcess.launch(job, 4);\n    //samples.launchers.CloudConnect.launch(job, \"localhost:54321\");\n//    samples.launchers.CloudRemote.launchIPs(job, \"192.168.1.171\", \"192.168.1.172\", \"192.168.1.173\", \"192.168.1.174\", \"192.168.1.175\");\n    samples.launchers.CloudRemote.launchIPs(job, \"192.168.1.161\", \"192.168.1.162\", \"192.168.1.163\", \"192.168.1.164\");\n//    samples.launchers.CloudRemote.launchIPs(job, \"192.168.1.161\", \"192.168.1.162\");\n//    samples.launchers.CloudRemote.launchIPs(job, \"192.168.1.161\");\n//    samples.launchers.CloudRemote.launchEC2(job, 4);\n  }","id":58567,"modified_method":"public static void main(String[] args) throws Exception {\n    Class job = NeuralNetMnist2.class;\n//    samples.launchers.CloudLocal.launch(job, 1);\n//    samples.launchers.CloudProcess.launch(job, 4);\n    //samples.launchers.CloudConnect.launch(job, \"localhost:54321\");\n//    samples.launchers.CloudRemote.launchIPs(job, \"192.168.1.171\", \"192.168.1.172\", \"192.168.1.173\", \"192.168.1.174\", \"192.168.1.175\");\n//    samples.launchers.CloudRemote.launchIPs(job, \"192.168.1.161\", \"192.168.1.162\", \"192.168.1.163\", \"192.168.1.164\");\n    samples.launchers.CloudRemote.launchIPs(job, \"192.168.1.161\", \"192.168.1.162\", \"192.168.1.164\");\n//    samples.launchers.CloudRemote.launchIPs(job, \"192.168.1.162\", \"192.168.1.164\");\n//    samples.launchers.CloudRemote.launchIPs(job, \"192.168.1.162\");\n//    samples.launchers.CloudRemote.launchEC2(job, 4);\n  }","commit_id":"7bbde3eb03deaec82bc311a24e514f43e2eb6693","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Test public void run() {\n    Key file = NFSFileVec.make(find_test_file(\"smalldata/neural/two_spiral.data\"));\n    Frame frame = ParseDataset2.parse(Key.make(), new Key[]{file});\n\n    Key dest = Key.make(\"spirals2\");\n\n    // build the model\n    {\n      NN p = new NN();\n      p.seed = 7401699394609084302l;\n      p.rate = 0.007;\n      p.rate_annealing = 0;\n      p.epochs = 11000;\n      p.hidden = new int[]{100};\n      p.activation = NN.Activation.Tanh;\n      p.max_w2 = Double.MAX_VALUE;\n      p.l1 = 0;\n      p.l2 = 0;\n      p.momentum_start = 0;\n      p.momentum_ramp = 0;\n      p.momentum_stable = 0;\n      p.initial_weight_distribution = NN.InitialWeightDistribution.Normal;\n      p.initial_weight_scale = 2.5;\n      p.loss = NN.Loss.CrossEntropy;\n      p.source = frame;\n      p.response = frame.lastVec();\n      p.validation = null;\n      p.score_interval = 10;\n      p.ignored_cols = null;\n      p.mini_batch = 0; //sync once per period\n      p.quiet_mode = true;\n      p.fast_mode = true; //same as old NeuralNet code\n      p.ignore_const_cols = false; //same as old NeuralNet code\n      p.shuffle_training_data = false; //same as old NeuralNet code\n      p.nesterov_accelerated_gradient = true; //same as old NeuralNet code\n      p.classification = true;\n      p.diagnostics = true;\n      p.expert_mode = true;\n      p.score_training_samples = 1000;\n      p.score_validation_samples = 10000;\n      p.destination_key = dest;\n      p.exec();\n    }\n\n    // score and check result\n    {\n      NNModel mymodel = UKV.get(dest); //this actually *requires* frame to also still be in UKV (because of DataInfo...)\n      Frame pred = mymodel.score(frame);\n      water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();\n      CM.actual = frame;\n      CM.vactual = frame.lastVec();\n      CM.predict = pred;\n      CM.vpredict = pred.vecs()[0];\n      CM.serve();\n      StringBuilder sb = new StringBuilder();\n      double error = CM.toASCII(sb);\n      Log.info(sb);\n      if (error != 0) {\n        Assert.fail(\"Classification error is not 0, but \" + error + \".\");\n      }\n      pred.delete();\n      mymodel.delete();\n    }\n\n    frame.delete();\n  }","id":58568,"modified_method":"@Test public void run() {\n    Key file = NFSFileVec.make(find_test_file(\"smalldata/neural/two_spiral.data\"));\n    Frame frame = ParseDataset2.parse(Key.make(), new Key[]{file});\n\n    Key dest = Key.make(\"spirals2\");\n\n    // build the model\n    {\n      NN p = new NN();\n      p.seed = new Random().nextLong();\n      p.rate = 0.007;\n      p.rate_annealing = 0;\n      p.epochs = 20000;\n      p.hidden = new int[]{100};\n      p.activation = NN.Activation.Tanh;\n      p.max_w2 = Double.MAX_VALUE;\n      p.l1 = 0;\n      p.l2 = 0;\n      p.momentum_start = 0;\n      p.momentum_ramp = 0;\n      p.momentum_stable = 0;\n      p.initial_weight_distribution = NN.InitialWeightDistribution.Normal;\n      p.initial_weight_scale = 2.5;\n      p.loss = NN.Loss.CrossEntropy;\n      p.source = frame;\n      p.response = frame.lastVec();\n      p.validation = null;\n      p.score_interval = 10;\n      p.ignored_cols = null;\n      p.mini_batch = 0; //sync once per period\n      p.quiet_mode = true;\n      p.fast_mode = true;\n      p.ignore_const_cols = true;\n      p.nesterov_accelerated_gradient = true;\n      p.classification = true;\n      p.diagnostics = true;\n      p.expert_mode = true;\n      p.score_training_samples = 1000;\n      p.score_validation_samples = 10000;\n      p.shuffle_training_data = true;\n      p.force_load_balance = true; //make it multi-threaded\n      p.destination_key = dest;\n      p.exec();\n    }\n\n    // score and check result\n    {\n      NNModel mymodel = UKV.get(dest); //this actually *requires* frame to also still be in UKV (because of DataInfo...)\n      Frame pred = mymodel.score(frame);\n      water.api.ConfusionMatrix CM = new water.api.ConfusionMatrix();\n      CM.actual = frame;\n      CM.vactual = frame.lastVec();\n      CM.predict = pred;\n      CM.vpredict = pred.vecs()[0];\n      CM.serve();\n      StringBuilder sb = new StringBuilder();\n      double error = CM.toASCII(sb);\n      Log.info(sb);\n      if (error != 0) {\n        Assert.fail(\"Classification error is not 0, but \" + error + \".\");\n      }\n      pred.delete();\n      mymodel.delete();\n    }\n\n    frame.delete();\n  }","commit_id":"7bbde3eb03deaec82bc311a24e514f43e2eb6693","url":"https://github.com/h2oai/h2o-2"},{"original_method":"/**\n\t * Interpolate usage based upon the fraction of the usage in some period which falls within\n\t * report boundaries. \n\t */\n\tprivate static Double interpolate(long repBegin, long repEnd, long perBegin, long perEnd, Double currValue)\n\t{\n\t\tif (currValue==null) return null;\n\t\t\n\t\tfinal double periodDuration = (perEnd-perBegin);\n\t\tdouble factor = 0d;\n\t\tif (perEnd <= repBegin || perBegin >= repEnd) {\n\t\t\t//Period falls completely outside of report, on either end\n\t\t\tfactor = 0d;\n\t\t} else if (perBegin < repBegin && perEnd <= repEnd) {\n\t\t\t//Period begin comes before report begin but period end lies within it\n\t\t\tfactor = ((double)perEnd-repBegin)/periodDuration;\n\t\t} else if (perBegin >= repBegin && perEnd >= repEnd) {\n\t\t\t//Period begin lies within report but period end comes after it\n\t\t\t factor = ((double)repEnd-perBegin)/periodDuration;\n\t\t} else if (perBegin >= repBegin && perEnd <= repEnd) {\n\t\t\t//Period falls entirely within report\n\t\t\tfactor = 1d;\n\t\t} else if (repBegin >= perBegin && repEnd <= perEnd) {\n\t\t\t//Report falls entirely within period (<15 second report?)\n\t\t\tfactor = ((double)(repBegin-perBegin)+(perEnd-repEnd))/periodDuration;\n\t\t} else {\n\t\t\tthrow new IllegalStateException(\"impossible boundary condition\");\n\t\t}\n\n\t\tif (factor < 0 || factor > 1) throw new IllegalStateException(\"factor<0 || factor>1\");\n\t\t\n//\t\tlog.debug(String.format(\"remainingFactor, report:%d-%d (%d), period:%d-%d (%d), factor:%f\",\n//\t\t\t\trepBegin, repEnd, repEnd-repBegin, perBegin, perEnd, perEnd-perBegin, factor));\n\n\t\treturn currValue*factor;\n\t}","id":58569,"modified_method":"/**\n\t * Interpolate usage based upon the fraction of the usage in some period which falls within\n\t * report boundaries. \n\t */\n\tprivate static Double interpolate(long repBegin, long repEnd, long perBegin, long perEnd, Double currValue)\n\t{\n\t\tif (currValue==null) return null;\n\t\t\n\t\tfinal double periodDuration = (perEnd-perBegin);\n\t\tdouble factor = 0d;\n\t\tif (perEnd <= repBegin || perBegin >= repEnd) {\n\t\t\t//Period falls completely outside of report, on either end\n\t\t\tfactor = 0d;\n\t\t} else if (perBegin < repBegin && perEnd <= repEnd) {\n\t\t\t//Period begin comes before report begin but period end lies within it\n\t\t\tfactor = ((double)perEnd-repBegin)/periodDuration;\n\t\t} else if (perBegin >= repBegin && perEnd >= repEnd) {\n\t\t\t//Period begin lies within report but period end comes after it\n\t\t\t factor = ((double)repEnd-perBegin)/periodDuration;\n\t\t} else if (perBegin >= repBegin && perEnd <= repEnd) {\n\t\t\t//Period falls entirely within report\n\t\t\tfactor = 1d;\n\t\t} else if (repBegin >= perBegin && repEnd <= perEnd) {\n\t\t\t//Report falls entirely within period\n\t\t\tfactor = ((double)(repEnd-repBegin))/periodDuration;\n\t\t} else {\n\t\t\tthrow new IllegalStateException(\"impossible boundary condition\");\n\t\t}\n\n\t\tif (factor < 0 || factor > 1) throw new IllegalStateException(\"factor<0 || factor>1\");\n\t\t\n//\t\tlog.debug(String.format(\"remainingFactor, report:%d-%d (%d), period:%d-%d (%d), factor:%f\",\n//\t\t\t\trepBegin, repEnd, repEnd-repBegin, perBegin, perEnd, perEnd-perBegin, factor));\n\n\t\treturn currValue*factor;\n\t}","commit_id":"057b5b5df4c71ee912e9d30099b8af60150d5309","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic ReportArtEntity generateReportArt(ReportArtEntity report)\n\t{\n\t\tlog.debug(\"GENERATING REPORT ART\");\n\n\t\t/* Create super-tree of availZones, clusters, accounts, users, and instances;\n\t\t * and create a Map of the instance usage nodes at the bottom.\n\t\t */\n\t\tMap<String,InstanceUsageArtEntity> usageEntities = new HashMap<String,InstanceUsageArtEntity>();\n\t\tIterator<ReportingInstanceCreateEvent> createEventIterator = getInstanceCreateEventIterator();\n\t\twhile (createEventIterator.hasNext()) {\n\t\t\tReportingInstanceCreateEvent createEvent = createEventIterator.next();\n\n\t\t\tif (! report.getZones().containsKey(createEvent.getAvailabilityZone())) {\n\t\t\t\treport.getZones().put(createEvent.getAvailabilityZone(), new AvailabilityZoneArtEntity());\n\t\t\t}\n\t\t\tAvailabilityZoneArtEntity zone = report.getZones().get(createEvent.getAvailabilityZone());\n\t\t\t\n\t\t\tReportingUser reportingUser = getUserById(createEvent.getUserId());\n\t\t\tif (reportingUser==null) {\n\t\t\t\tlog.error(\"No user corresponding to event:\" + createEvent.getUserId());\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tReportingAccount reportingAccount = getAccountById(reportingUser.getAccountId());\n\t\t\tif (reportingAccount==null) {\n\t\t\t\tlog.error(\"No account corresponding to user:\" + reportingUser.getAccountId());\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (! zone.getAccounts().containsKey(reportingAccount.getName())) {\n\t\t\t\tzone.getAccounts().put(reportingAccount.getName(), new AccountArtEntity());\n\t\t\t}\n\t\t\tAccountArtEntity account = zone.getAccounts().get(reportingAccount.getName());\n\t\t\tif (! account.getUsers().containsKey(reportingUser.getName())) {\n\t\t\t\taccount.getUsers().put(reportingUser.getName(), new UserArtEntity());\n\t\t\t}\n\t\t\tUserArtEntity user = account.getUsers().get(reportingUser.getName());\n\t\t\tif (! user.getInstances().containsKey(createEvent.getUuid())) {\n\t\t\t\tuser.getInstances().put(createEvent.getUuid(), new InstanceArtEntity(createEvent.getInstanceType(), createEvent.getInstanceId()));\n\t\t\t}\n\t\t\tInstanceArtEntity instance = user.getInstances().get(createEvent.getUuid());\n\t\t\tinstance.getUsage().addInstanceCnt(1);\n\t\t\tusageEntities.put(createEvent.getUuid(), instance.getUsage());\n\t\t}\n\n\t\t\n\t\t\n\t\t/* Scan through instance usage and update instance usage nodes. Also,\n\t\t * find start and end times.\n\t\t */\n\t\tMap<UsageEventKey,ReportingInstanceUsageEvent> lastEvents =\n\t\t\tnew HashMap<UsageEventKey,ReportingInstanceUsageEvent>();\n\t\tMap<String,StartEndTimes> startEndTimes =\n\t\t\tnew HashMap<String,StartEndTimes>();\n\t\tfinal Iterator<ReportingInstanceUsageEvent> usageEventIterator = getInstanceUsageEventIterator();\n\t\twhile (usageEventIterator.hasNext()) {\n\t\t\tfinal ReportingInstanceUsageEvent usageEvent = usageEventIterator.next();\n\n\t\t\t/* Update instance start and end times */\n\t\t\tif (! startEndTimes.containsKey(usageEvent.getUuid())) {\n\t\t\t\tstartEndTimes.put(usageEvent.getUuid(),\n\t\t\t\t\tnew StartEndTimes(usageEvent.getTimestampMs(), usageEvent.getTimestampMs()));\n\t\t\t} else {\n\t\t\t\tStartEndTimes seTime = startEndTimes.get(usageEvent.getUuid());\n\t\t\t\tseTime.setStartTime(Math.min(seTime.getStartTime(), usageEvent.getTimestampMs()));\n\t\t\t\tseTime.setEndTime(Math.max(seTime.getEndTime(), usageEvent.getTimestampMs()));\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t/* Grab last event for this metric/dim combo, and usage entity to update */\n\t\t\tUsageEventKey key = new UsageEventKey(usageEvent.getUuid(), usageEvent.getMetric(),\n\t\t\t\t\tusageEvent.getDimension());\n\t\t\tif (! lastEvents.containsKey(key)) {\n\t\t\t\tlastEvents.put(key, usageEvent);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tReportingInstanceUsageEvent lastEvent = lastEvents.get(key);\n\t\t\tif (! usageEntities.containsKey(usageEvent.getUuid())) {\n\t\t\t\tlog.error(\"usage event without corresponding instance:\" + usageEvent.getUuid());\n\t\t\t\tcontinue;\t\t\t\t\n\t\t\t}\n\t\t\tInstanceUsageArtEntity usage = usageEntities.get(usageEvent.getUuid());\n\t\t\tString metric = usageEvent.getMetric();\n\t\t\tString dim    = usageEvent.getDimension();\n\t\t\tif (usageEvent.getValue()==null || lastEvent.getValue()==null) {\n\t\t\t\tlog.debug(\"Null metric values shouldn't occur\");\n\t\t\t\tcontinue;\n\t\t\t}\n\n\n\t\t\t/* We sometimes miss events here. Last event is dropped. Last event is last event for this metric/dim combo?? */\n\n\t\t\t/* Update metrics in usage */\n\t\t\tDouble value = null;\n\t\t\t/* Subtract last usage from this usage because all these statistics are CUMULATIVE.\t */\n\t\t\tif (usageEvent.getValue()!=null && lastEvent.getValue()!=null) {\n\t\t\t\tvalue = usageEvent.getValue() - lastEvent.getValue();\n\t\t\t} else if (usageEvent.getValue()!=null) {\n\t\t\t\tvalue = usageEvent.getValue();\n\t\t\t}\n\t\t\tDouble valueMB = (value==null) ? null : value/1024/1024; //don't bitshift a double\n\n\t\t\tif (metric.equals(METRIC_NET_IN_BYTES) && dim.equals(DIM_TOTAL)) {\n\t\t\t\tusage.addNetTotalInMegs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB).longValue());\n\t\t\t} else if (metric.equals(METRIC_NET_OUT_BYTES) && dim.equals(DIM_TOTAL)) {\n\t\t\t\tusage.addNetTotalOutMegs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB).longValue());\n\t\t\t} else if (metric.equals(METRIC_NET_IN_BYTES)  && dim.equals(DIM_INTERNAL)) {\n\t\t\t\tusage.addNetInternalInMegs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB).longValue());\n\t\t\t} else if (metric.equals(METRIC_NET_OUT_BYTES) && dim.equals(DIM_INTERNAL)) {\n\t\t\t\tusage.addNetTotalInMegs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB).longValue());\n\t\t\t} else if (metric.equals(METRIC_DISK_IN_BYTES) && (dim.equals(DIM_ROOT)||dim.startsWith(DIM_EPHEMERAL))) {\n\t\t\t\tusage.addDiskInMegs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB).longValue());\n\t\t\t} else if (metric.equals(METRIC_DISK_OUT_BYTES) && (dim.equals(DIM_ROOT)||dim.startsWith(DIM_EPHEMERAL))) {\n\t\t\t\tusage.addDiskOutMegs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB).longValue());\n\t\t\t} else if (metric.equals(METRIC_CPU_USAGE_MS) && (dim.equals(DIM_DEFAULT))) {\n\t\t\t\tusage.addCpuUtilizationMs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), value).longValue());\n\t\t\t} else {\n\t\t\t\tlog.debug(\"Unrecognized metric for report:\" + metric + \"/\" + dim);\n\t\t\t}\n\n\t\t\tlastEvents.put(key, usageEvent);\n  \t\t} //while \n\n\t\t\n\t\t/* Update durations of all instances\n\t\t */\n\t\tfor (String uuid: startEndTimes.keySet()) {\n\t\t\tStartEndTimes seTime = startEndTimes.get(uuid);\n\t\t\tif (usageEntities.containsKey(uuid)) {\n\t\t\t\tlong durationMs = DurationCalculator.boundDuration(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tseTime.getStartTime(), seTime.getEndTime());\n\t\t\t\tusageEntities.get(uuid).setDurationMs(durationMs);\n\t\t\t} else {\n\t\t\t\tlog.error(\"startEndTime without corresponding instance:\" + uuid);\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t/* Perform totals and summations\n\t\t */\n\t\tfor (String zoneName : report.getZones().keySet()) {\n\t\t\tAvailabilityZoneArtEntity zone = report.getZones().get(zoneName);\n\t\t\tUsageTotalsArtEntity zoneUsage = zone.getUsageTotals();\n\t\t\tfor (String accountName : zone.getAccounts().keySet()) {\n\t\t\t\tAccountArtEntity account = zone.getAccounts().get(accountName);\n\t\t\t\tUsageTotalsArtEntity accountUsage = account.getUsageTotals();\n\t\t\t\tfor (String userName : account.getUsers().keySet()) {\n\t\t\t\t\tUserArtEntity user = account.getUsers().get(userName);\n\t\t\t\t\tUsageTotalsArtEntity userUsage = user.getUsageTotals();\n\t\t\t\t\tfor (String instanceUuid : user.getInstances().keySet()) {\n\t\t\t\t\t\tInstanceArtEntity instance = user.getInstances().get(instanceUuid);\n\t\t\t\t\t\tupdateUsageTotals(userUsage, instance);\n\t\t\t\t\t\tupdateUsageTotals(accountUsage, instance);\n\t\t\t\t\t\tupdateUsageTotals(zoneUsage, instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn report;\n\t}","id":58570,"modified_method":"@Override\n\tpublic ReportArtEntity generateReportArt(ReportArtEntity report)\n\t{\n\t\tlog.debug(\"GENERATING REPORT ART\");\n\n\t\t/* Create super-tree of availZones, clusters, accounts, users, and instances;\n\t\t * and create a Map of the instance usage nodes at the bottom.\n\t\t */\n\t\tfinal Map<String,InstanceUsageArtEntity> usageEntities = Maps.newHashMap();\n\t\tfinal Iterator<ReportingInstanceCreateEvent> createEventIterator = getInstanceCreateEventIterator();\n\t\twhile (createEventIterator.hasNext()) {\n\t\t\tfinal ReportingInstanceCreateEvent createEvent = createEventIterator.next();\n\t\t\tif ( createEvent.getTimestampMs() > report.getEndMs() ) {\n\t\t\t\tbreak; // end of relevant events\n\t\t\t}\n\n\t\t\tif (! report.getZones().containsKey(createEvent.getAvailabilityZone())) {\n\t\t\t\treport.getZones().put(createEvent.getAvailabilityZone(), new AvailabilityZoneArtEntity());\n\t\t\t}\n\t\t\tfinal AvailabilityZoneArtEntity zone = report.getZones().get( createEvent.getAvailabilityZone() );\n\t\t\t\n\t\t\tfinal ReportingUser reportingUser = getUserById( createEvent.getUserId() );\n\t\t\tif (reportingUser==null) {\n\t\t\t\tlog.error(\"No user corresponding to event:\" + createEvent.getUserId());\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfinal ReportingAccount reportingAccount = getAccountById(reportingUser.getAccountId());\n\t\t\tif (reportingAccount==null) {\n\t\t\t\tlog.error(\"No account corresponding to user:\" + reportingUser.getAccountId());\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (! zone.getAccounts().containsKey(reportingAccount.getName())) {\n\t\t\t\tzone.getAccounts().put(reportingAccount.getName(), new AccountArtEntity());\n\t\t\t}\n\t\t\tfinal AccountArtEntity account = zone.getAccounts().get(reportingAccount.getName());\n\t\t\tif (! account.getUsers().containsKey(reportingUser.getName())) {\n\t\t\t\taccount.getUsers().put(reportingUser.getName(), new UserArtEntity());\n\t\t\t}\n\t\t\tfinal UserArtEntity user = account.getUsers().get(reportingUser.getName());\n\t\t\tif (! user.getInstances().containsKey(createEvent.getUuid())) {\n\t\t\t\tuser.getInstances().put(createEvent.getUuid(), new InstanceArtEntity(createEvent.getInstanceType(), createEvent.getInstanceId()));\n\t\t\t}\n\t\t\tfinal InstanceArtEntity instance = user.getInstances().get(createEvent.getUuid());\n\t\t\tinstance.getUsage().addInstanceCnt(1);\n\t\t\tusageEntities.put(createEvent.getUuid(), instance.getUsage());\n\t\t}\n\n\t\t\n\t\t\n\t\t/* Scan through instance usage and update instance usage nodes. Also,\n\t\t * find start and end times.\n\t\t */\n\t\tfinal Map<UsageEventKey,ReportingInstanceUsageEvent> lastEvents = Maps.newHashMap();\n\t\tfinal Map<String,StartEndTimes> startEndTimes = Maps.newHashMap();\n\t\tfinal Iterator<ReportingInstanceUsageEvent> usageEventIterator = getInstanceUsageEventIterator();\n\t\twhile (usageEventIterator.hasNext()) {\n\t\t\tfinal ReportingInstanceUsageEvent usageEvent = usageEventIterator.next();\n\t\t\tif ( usageEvent.getTimestampMs() > (report.getEndMs() + TimeUnit.HOURS.toMillis(12)) ) {\n\t\t\t\tbreak; // end of relevant events, we go beyond the end of the report period for interpolation\n\t\t\t}\n\n\t\t\t/* Update instance start and end times */\n\t\t\tif (! startEndTimes.containsKey(usageEvent.getUuid())) {\n\t\t\t\tstartEndTimes.put(usageEvent.getUuid(),\n\t\t\t\t\tnew StartEndTimes(usageEvent.getTimestampMs(), usageEvent.getTimestampMs()));\n\t\t\t} else {\n\t\t\t\tStartEndTimes seTime = startEndTimes.get(usageEvent.getUuid());\n\t\t\t\tseTime.setStartTime(Math.min(seTime.getStartTime(), usageEvent.getTimestampMs()));\n\t\t\t\tseTime.setEndTime(Math.max(seTime.getEndTime(), usageEvent.getTimestampMs()));\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t/* Grab last event for this metric/dim combo, and usage entity to update */\n\t\t\tfinal UsageEventKey key = new UsageEventKey(usageEvent.getUuid(), usageEvent.getMetric(),\n\t\t\t\t\tusageEvent.getDimension());\n\t\t\tif (! lastEvents.containsKey(key)) {\n\t\t\t\tlastEvents.put(key, usageEvent);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfinal ReportingInstanceUsageEvent lastEvent = lastEvents.get(key);\n\t\t\tif (! usageEntities.containsKey(usageEvent.getUuid())) {\n\t\t\t\tlog.error(\"usage event without corresponding instance:\" + usageEvent.getUuid());\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfinal InstanceUsageArtEntity usage = usageEntities.get(usageEvent.getUuid());\n\t\t\tfinal String metric = usageEvent.getMetric();\n\t\t\tfinal String dim    = usageEvent.getDimension();\n\t\t\tif (usageEvent.getValue()==null || lastEvent.getValue()==null) {\n\t\t\t\tlog.debug(\"Null metric values shouldn't occur\");\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t/* We sometimes miss events here. Last event is dropped. Last event is last event for this metric/dim combo?? */\n\n\t\t\t/* Update metrics in usage */\n\t\t\tif ( usageEvent.getValue() == null ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t/* Subtract last usage from this usage because all these statistics are CUMULATIVE.\t */\n\t\t\tfinal Double value = usageEvent.getValue() - Objects.firstNonNull( lastEvent.getValue(), 0d );\n\t\t\tfinal Double valueMB = value/1024/1024; //don't bitshift a double\n\n\t\t\tif (metric.equals(METRIC_NET_IN_BYTES) && dim.equals(DIM_TOTAL)) {\n\t\t\t\tusage.addNetTotalInMegs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB).longValue());\n\t\t\t} else if (metric.equals(METRIC_NET_OUT_BYTES) && dim.equals(DIM_TOTAL)) {\n\t\t\t\tusage.addNetTotalOutMegs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB).longValue());\n\t\t\t} else if (metric.equals(METRIC_DISK_IN_BYTES)) {\n\t\t\t\tusage.addDiskReadMegs( interpolate( report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB ).longValue() );\n\t\t\t} else if (metric.equals(METRIC_DISK_OUT_BYTES)) {\n\t\t\t\tusage.addDiskWriteMegs( interpolate( report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), valueMB ).longValue() );\n\t\t\t} else if (metric.equals(METRIC_DISK_READ_OPS)) {\n\t\t\t\tusage.addDiskReadOps( interpolate( report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), value ).longValue() );\n\t\t\t} else if (metric.equals(METRIC_DISK_WRITE_OPS)) {\n\t\t\t\tusage.addDiskWriteOps( interpolate( report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), value ).longValue() );\n\t\t\t} else if (metric.equals(METRIC_VOLUME_READ)) {\n\t\t\t\tusage.addDiskReadTime( interpolate( report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), value ).longValue() );\n\t\t\t} else if (metric.equals(METRIC_VOLUME_WRITE)) {\n\t\t\t\tusage.addDiskWriteTime( interpolate( report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), value ).longValue() );\n\t\t\t} else if (metric.equals(METRIC_CPU_USAGE_MS) && (dim.equals(DIM_DEFAULT))) {\n\t\t\t\tusage.addCpuUtilizationMs(interpolate(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tlastEvent.getTimestampMs(), usageEvent.getTimestampMs(), value).longValue());\n\t\t\t} else {\n\t\t\t\tlog.debug(\"Unrecognized metric for report:\" + metric + \"/\" + dim);\n\t\t\t}\n\n\t\t\tlastEvents.put(key, usageEvent);\n\t\t} //while\n\n\t\t/* Remove any instances with no usage in report period\n\t\t */\n\t\tfinal Set<String> zonesToRemove = Sets.newHashSet();\n\t\tfor ( final Map.Entry<String,AvailabilityZoneArtEntity> zoneEntry : report.getZones().entrySet() ) {\n\t\t\tfinal Set<String> accountsToRemove = Sets.newHashSet();\n\t\t\tfor ( final Map.Entry<String,AccountArtEntity> accountEntry : zoneEntry.getValue().getAccounts().entrySet() ) {\n\t\t\t\tfinal Set<String> usersToRemove = Sets.newHashSet();\n\t\t\t\tfor ( final Map.Entry<String,UserArtEntity> userEntry : accountEntry.getValue().getUsers().entrySet() ) {\n\t\t\t\t\tfinal Set<String> instancesToRemove = Sets.newHashSet();\n\t\t\t\t\tfor ( final Map.Entry<String,InstanceArtEntity> instanceEntry : userEntry.getValue().getInstances().entrySet() ) {\n\t\t\t\t\t\tif ( instanceEntry.getValue().getUsage().isEmpty() ) {\n\t\t\t\t\t\t\tinstancesToRemove.add( instanceEntry.getKey() );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tremoveAndTrackEmpty( userEntry.getValue().getInstances(), instancesToRemove, usersToRemove, userEntry.getKey() );\n\t\t\t\t}\n\t\t\t\tremoveAndTrackEmpty( accountEntry.getValue().getUsers(), usersToRemove, accountsToRemove, accountEntry.getKey() );\n\t\t\t}\n\t\t\tremoveAndTrackEmpty( zoneEntry.getValue().getAccounts(), accountsToRemove, zonesToRemove, zoneEntry.getKey() );\n\t\t}\n\t\treport.getZones().keySet().removeAll( zonesToRemove );\n\n\t\t/* Update durations of all instances\n\t\t */\n\t\tfor (String uuid: startEndTimes.keySet()) {\n\t\t\tfinal StartEndTimes seTime = startEndTimes.get(uuid);\n\t\t\tif (usageEntities.containsKey(uuid)) {\n\t\t\t\tlong durationMs = DurationCalculator.boundDuration(report.getBeginMs(), report.getEndMs(),\n\t\t\t\t\t\tseTime.getStartTime(), seTime.getEndTime());\n\t\t\t\tusageEntities.get(uuid).setDurationMs(durationMs);\n\t\t\t} else {\n\t\t\t\tlog.error(\"startEndTime without corresponding instance:\" + uuid);\n\t\t\t}\n\t\t}\n\n\t\t/* Perform totals and summations\n\t\t */\n\t\tfor ( final AvailabilityZoneArtEntity zone : report.getZones().values() ) {\n\t\t\tfinal UsageTotalsArtEntity zoneUsage = zone.getUsageTotals();\n\t\t\tfor ( final AccountArtEntity account : zone.getAccounts().values() ) {\n\t\t\t\tfinal UsageTotalsArtEntity accountUsage = account.getUsageTotals();\n\t\t\t\tfor ( final UserArtEntity user : account.getUsers().values() ) {\n\t\t\t\t\tfinal UsageTotalsArtEntity userUsage = user.getUsageTotals();\n\t\t\t\t\tfor ( final InstanceArtEntity instance : user.getInstances().values() ) {\n\t\t\t\t\t\tupdateUsageTotals(userUsage, instance);\n\t\t\t\t\t\tupdateUsageTotals(accountUsage, instance);\n\t\t\t\t\t\tupdateUsageTotals(zoneUsage, instance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn report;\n\t}","commit_id":"057b5b5df4c71ee912e9d30099b8af60150d5309","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static void updateUsageTotals(UsageTotalsArtEntity totals, InstanceArtEntity instance)\n\t{\n\t\tInstanceUsageArtEntity totalEntity = totals.getInstanceTotals();\n\t\tInstanceUsageArtEntity usage = instance.getUsage();\n\t\t\n\t\t/* Update metrics */\n\t\ttotalEntity.addDurationMs(usage.getDurationMs());\n\t\ttotalEntity.addCpuUtilizationMs(usage.getCpuUtilizationMs());\n\t\ttotalEntity.addDiskInMegs(totalEntity.getDiskInMegs());\n\t\ttotalEntity.addDiskOutMegs(usage.getDiskOutMegs());\n\t\ttotalEntity.addNetTotalInMegs(usage.getNetTotalInMegs());\n\t\ttotalEntity.addNetTotalOutMegs(usage.getNetTotalOutMegs());\n\t\ttotalEntity.addNetInternalInMegs(usage.getNetInternalInMegs());\n\t\ttotalEntity.addNetInternalOutMegs(usage.getNetInternalOutMegs());\n\t\ttotalEntity.addInstanceCnt(1);\n\t\t\n\t\t/* Update total running time and type count for this instance type */\n\t\tMap<String,InstanceUsageArtEntity> typeTotals = totals.getTypeTotals();\n\t\tif (!typeTotals.containsKey(instance.getInstanceType().toLowerCase())) {\n\t\t\ttypeTotals.put(instance.getInstanceType().toLowerCase(),\n\t\t\t\t\tnew InstanceUsageArtEntity());\n\t\t}\n\t\tInstanceUsageArtEntity typeTotal =\n\t\t\ttypeTotals.get(instance.getInstanceType().toLowerCase());\n\t\t\n\t\ttypeTotal.addInstanceCnt(1);\n\t\ttypeTotal.addDurationMs(totalEntity.getDurationMs());\n\t\t\n\t}","id":58571,"modified_method":"private static void updateUsageTotals(UsageTotalsArtEntity totals, InstanceArtEntity instance)\n\t{\n\t\tfinal InstanceUsageArtEntity totalEntity = totals.getInstanceTotals();\n\t\tfinal InstanceUsageArtEntity usage = instance.getUsage();\n\t\t\n\t\t/* Update metrics */\n\t\taddUsage( totalEntity, usage );\n\t\t\n\t\t/* Update total running time and type count for this instance type */\n\t\tfinal Map<String,InstanceUsageArtEntity> typeTotals = totals.getTypeTotals();\n\t\tif (!typeTotals.containsKey(instance.getInstanceType().toLowerCase())) {  //TODO:STEVE: why is this lower cased?\n\t\t\ttypeTotals.put(instance.getInstanceType().toLowerCase(),\n\t\t\t\t\tnew InstanceUsageArtEntity());\n\t\t}\n\t\tfinal InstanceUsageArtEntity typeTotal =\n\t\t\ttypeTotals.get(instance.getInstanceType().toLowerCase());\n\n\t\taddUsage( typeTotal, usage );\n\t}","commit_id":"057b5b5df4c71ee912e9d30099b8af60150d5309","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void render(ReportArtEntity report, OutputStream os, Units units)\n\t\tthrows IOException\n\t{        \n        doc.setWriter(new OutputStreamWriter(os));\n        \n        doc.open();\n        doc.textLine(\"Instance Report\", 1);\n        doc.textLine(\"Begin:\" + new Date(report.getBeginMs()).toString(), 4);\n        doc.textLine(\"End:\" + new Date(report.getEndMs()).toString(), 4);\n        doc.textLine(\"Resource Usage Section\", 3);\n        doc.tableOpen();\n        doc.newRow().addEmptyValCols(5)\n        \t\t.addValCol(\"Net Internal \" + units.getSizeUnit(), 2, \"center\")\n        \t\t.addValCol(\"Net Total \" + units.getSizeUnit(), 2, \"center\")\n        \t\t.addValCol(\"Disk \" + units.getSizeUnit(), 2, \"center\");\n        doc.newRow().addValCol(\"InstanceId\")\n        \t\t.addValCol(\"Type\").addValCol(\"#\").addValCol(\"Time\").addValCol(\"CpuUsage%\")\n        \t\t.addValCol(\"In\").addValCol(\"Out\").addValCol(\"In\").addValCol(\"Out\").addValCol(\"In\")\n        \t\t.addValCol(\"Out\");\n        for(String zoneName : report.getZones().keySet()) {\n        \tAvailabilityZoneArtEntity zone = report.getZones().get(zoneName);\n            doc.newRow().addLabelCol(0, \"Zone: \" + zoneName)\n            \t\t.addValCol(\"cumul.\")\n            \t\t.addValCol(\"cumul.\");\n            addUsageCols(doc, zone.getUsageTotals().getInstanceTotals(), units);\n            for (String accountName: zone.getAccounts().keySet()) {\n              \tAccountArtEntity account = zone.getAccounts().get(accountName);\n                doc.newRow().addLabelCol(1, \"Account: \" + accountName)\n                   \t\t.addValCol(\"cumul.\")\n                   \t\t.addValCol(\"cumul.\");\n                addUsageCols(doc, account.getUsageTotals().getInstanceTotals(),units);\n                for (String userName: account.getUsers().keySet()) {\n                   \tUserArtEntity user = account.getUsers().get(userName);\n                    doc.newRow().addLabelCol(2, \"User: \" + userName)\n                       \t\t.addValCol(\"cumul.\")\n                       \t\t.addValCol(\"cumul.\");\n                    addUsageCols(doc, user.getUsageTotals().getInstanceTotals(),units);\n                    for (String instanceUuid: user.getInstances().keySet()) {\n                       \tInstanceArtEntity instance = user.getInstances().get(instanceUuid);\n                       \tdoc.newRow().addValCol(instance.getInstanceId())\n                       \t\t\t.addValCol(instance.getInstanceType());\n                       \taddUsageCols(doc, instance.getUsage(), units);\n                    }\n                }\n            }\n        }\n        doc.tableClose();\n\n        doc.textLine(\"Instance Running Times Section\", 3);\n        \n        doc.tableOpen();\n        doc.newRow()\n        \t\t.addValCol(\"m1.Small\", 2, \"center\")\n        \t\t.addValCol(\"c1.Medium\", 2, \"center\")\n        \t\t.addValCol(\"m1.Large\", 2, \"center\")\n        \t\t.addValCol(\"c1.Large\", 2, \"center\")\n        \t\t.addValCol(\"m1.XLarge\", 2, \"center\");\n        doc.newRow()\n        \t\t.addValCol(\"num\", 1, \"center\").addValCol(\"time\", 1, \"center\")\n        \t\t.addValCol(\"num\", 1, \"center\").addValCol(\"time\", 1, \"center\")\n        \t\t.addValCol(\"num\", 1, \"center\").addValCol(\"time\", 1, \"center\")\n        \t\t.addValCol(\"num\", 1, \"center\").addValCol(\"time\", 1, \"center\")\n        \t\t.addValCol(\"num\", 1, \"center\").addValCol(\"time\", 1, \"center\");\n        for(String zoneName : report.getZones().keySet()) {\n        \tAvailabilityZoneArtEntity zone = report.getZones().get(zoneName);\n            doc.newRow().addLabelCol(0, \"Zone: \" + zoneName);\n            \taddTimeCols(doc, zone.getUsageTotals(), units);\n            for (String accountName: zone.getAccounts().keySet()) {\n               \tAccountArtEntity account = zone.getAccounts().get(accountName);\n                doc.newRow().addLabelCol(1, \"Account: \" + accountName);\n                addTimeCols(doc, account.getUsageTotals(),units);\n                for (String userName: account.getUsers().keySet()) {\n                \tUserArtEntity user = account.getUsers().get(userName);\n                    doc.newRow().addLabelCol(2, \"User: \" + userName);\n                    addTimeCols(doc, user.getUsageTotals(),units);\n                }\n            }\n        }\n        doc.tableClose();\n        doc.close();\n\t}","id":58572,"modified_method":"@Override\n  public void render( final ReportArtEntity report,\n                      final OutputStream os,\n                      final Units units ) throws IOException\n  {\n        doc.setWriter(new OutputStreamWriter(os));\n\n        doc.open();\n        doc.textLine(\"Instance Report\", 1);\n        doc.textLine(\"Begin:\" + new Date(report.getBeginMs()).toString(), 4);\n        doc.textLine(\"End:\" + new Date(report.getEndMs()).toString(), 4);\n        doc.textLine(\"Resource Usage Section\", 3);\n        doc.tableOpen();\n        doc.newRow().addEmptyValCols(5)\n            .addValCol(\"Net Total \" + units.getSizeUnit(), 2, \"center\")\n            .addValCol(\"Disk \" + units.getSizeUnit(), 2, \"center\")\n            .addValCol(\"Disk IOPS\", 2, \"center\")\n            .addValCol(\"Disk Time\", 2, \"center\");\n        doc.newRow().addValCol(\"InstanceId\")\n            .addValCol(\"Type\").addValCol(\"#\").addValCol(\"Time\").addValCol(\"CpuUsage%\")\n            .addValCol(\"In\").addValCol(\"Out\").addValCol(\"In\").addValCol(\"Out\")\n            .addValCol(\"Read\").addValCol(\"Write\")\n            .addValCol(\"Read\").addValCol(\"Write\")\n            .addValCol(\"Read\").addValCol(\"Write\");\n        for( final String zoneName : report.getZones().keySet() ) {\n          final AvailabilityZoneArtEntity zone = report.getZones().get(zoneName);\n            doc.newRow().addLabelCol(0, \"Zone: \" + zoneName)\n                .addValCol(\"cumul.\")\n                .addValCol(\"cumul.\");\n            addUsageCols(doc, zone.getUsageTotals().getInstanceTotals(), units);\n            for (String accountName: zone.getAccounts().keySet()) {\n                AccountArtEntity account = zone.getAccounts().get(accountName);\n                doc.newRow().addLabelCol(1, \"Account: \" + accountName)\n                      .addValCol(\"cumul.\")\n                      .addValCol(\"cumul.\");\n                addUsageCols(doc, account.getUsageTotals().getInstanceTotals(),units);\n                for (String userName: account.getUsers().keySet()) {\n                    UserArtEntity user = account.getUsers().get(userName);\n                    doc.newRow().addLabelCol(2, \"User: \" + userName)\n                          .addValCol(\"cumul.\")\n                          .addValCol(\"cumul.\");\n                    addUsageCols(doc, user.getUsageTotals().getInstanceTotals(),units);\n                    for (String instanceUuid: user.getInstances().keySet()) {\n                        InstanceArtEntity instance = user.getInstances().get(instanceUuid);\n                        doc.newRow().addValCol(instance.getInstanceId())\n                            .addValCol(instance.getInstanceType());\n                        addUsageCols(doc, instance.getUsage(), units);\n                    }\n                }\n            }\n        }\n        doc.tableClose();\n\n        doc.textLine(\"Instance Running Times Section\", 3);\n\n        doc.tableOpen();\n        doc.newRow()\n            .addValCol(\"m1.Small\", 2, \"center\")\n            .addValCol(\"c1.Medium\", 2, \"center\")\n            .addValCol(\"m1.Large\", 2, \"center\")\n            .addValCol(\"c1.Large\", 2, \"center\")\n            .addValCol(\"m1.XLarge\", 2, \"center\");\n        doc.newRow()\n            .addValCol(\"num\", 1, \"center\").addValCol(\"time\", 1, \"center\")\n            .addValCol(\"num\", 1, \"center\").addValCol(\"time\", 1, \"center\")\n            .addValCol(\"num\", 1, \"center\").addValCol(\"time\", 1, \"center\")\n            .addValCol(\"num\", 1, \"center\").addValCol(\"time\", 1, \"center\")\n            .addValCol(\"num\", 1, \"center\").addValCol(\"time\", 1, \"center\");\n        for(String zoneName : report.getZones().keySet()) {\n          AvailabilityZoneArtEntity zone = report.getZones().get(zoneName);\n            doc.newRow().addLabelCol(0, \"Zone: \" + zoneName);\n              addTimeCols(doc, zone.getUsageTotals(), units);\n            for (String accountName: zone.getAccounts().keySet()) {\n                AccountArtEntity account = zone.getAccounts().get(accountName);\n                doc.newRow().addLabelCol(1, \"Account: \" + accountName);\n                addTimeCols(doc, account.getUsageTotals(),units);\n                for (String userName: account.getUsers().keySet()) {\n                  UserArtEntity user = account.getUsers().get(userName);\n                    doc.newRow().addLabelCol(2, \"User: \" + userName);\n                    addTimeCols(doc, user.getUsageTotals(),units);\n                }\n            }\n        }\n        doc.tableClose();\n        doc.close();\n  }","commit_id":"057b5b5df4c71ee912e9d30099b8af60150d5309","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static Document addTimeCols(Document doc, UsageTotalsArtEntity totals, Units units)\n\t\tthrows IOException\n\t{\n\t\tMap<String,InstanceUsageArtEntity> typeTotals = totals.getTypeTotals();\n\t\tfor (String type : new String[] {\"m1.small\", \"c1.medium\", \"m1.large\", \"c1.large\", \"m1.xlarge\"}) {\n\t\t\tif (typeTotals.containsKey(type)) {\n\t\t\t\tdoc.addValCol((long)typeTotals.get(type).getInstanceCnt());\n\t\t\t\tdoc.addValCol(UnitUtil.convertTime(typeTotals.get(type).getDurationMs(), TimeUnit.MS, units.getTimeUnit()));\t\t\t\t\n\t\t\t} else {\n\t\t\t\tdoc.addValCol(\"(null)\");\n\t\t\t\tdoc.addValCol(\"(null)\");\n\t\t\t}\n\t\t}\n\t\treturn doc;\n\t}","id":58573,"modified_method":"public static Document addTimeCols(Document doc, UsageTotalsArtEntity totals, Units units)\n    throws IOException\n  {\n    final Map<String,InstanceUsageArtEntity> typeTotals = totals.getTypeTotals();\n    for (String type : new String[] {\"m1.small\", \"c1.medium\", \"m1.large\", \"c1.large\", \"m1.xlarge\"}) { //TODO:STEVE should not be hard coded\n      if (typeTotals.containsKey(type)) {\n        doc.addValCol((long)typeTotals.get(type).getInstanceCnt());\n        doc.addValCol(UnitUtil.convertTime(typeTotals.get(type).getDurationMs(), TimeUnit.MS, units.getTimeUnit()));\n      } else {\n        doc.addValCol(\"(null)\");\n        doc.addValCol(\"(null)\");\n      }\n    }\n    return doc;\n  }","commit_id":"057b5b5df4c71ee912e9d30099b8af60150d5309","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static Document addUsageCols(Document doc, InstanceUsageArtEntity entity, Units units)\n\t\tthrows IOException\n\t{\n\t\tdoc.addValCol((long)entity.getInstanceCnt());\n\t\tdoc.addValCol(UnitUtil.convertTime(entity.getDurationMs(), TimeUnit.MS, units.getTimeUnit()));\n\t\tdoc.addValCol((entity.getCpuUtilizationMs()==null)?null:((double)entity.getCpuUtilizationMs()/(double)entity.getDurationMs()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getNetInternalInMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getNetInternalOutMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getNetTotalInMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getNetTotalOutMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getDiskInMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getDiskOutMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\treturn doc;\n\t}","id":58574,"modified_method":"public static Document addUsageCols( final Document doc,\n                                       final InstanceUsageArtEntity entity,\n                                       final Units units )\n    throws IOException\n  {\n    doc.addValCol((long)entity.getInstanceCnt());\n    doc.addValCol(UnitUtil.convertTime(entity.getDurationMs(), TimeUnit.MS, units.getTimeUnit()));\n    doc.addValCol(entity.getCpuUtilizationMs()==null?null:((double)entity.getCpuUtilizationMs()/(double)entity.getDurationMs()));\n    doc.addValCol(UnitUtil.convertSize(entity.getNetTotalInMegs(), SizeUnit.MB, units.getSizeUnit()));\n    doc.addValCol(UnitUtil.convertSize(entity.getNetTotalOutMegs(), SizeUnit.MB, units.getSizeUnit()));\n    doc.addValCol(UnitUtil.convertSize(entity.getDiskReadMegs(), SizeUnit.MB, units.getSizeUnit()));\n    doc.addValCol(UnitUtil.convertSize(entity.getDiskWriteMegs(), SizeUnit.MB, units.getSizeUnit()));\n    doc.addValCol(entity.getDiskReadOps()==null?null:entity.getDiskReadOps()/(entity.getDurationMs()/1000));\n    doc.addValCol(entity.getDiskWriteOps()==null?null:entity.getDiskWriteOps()/(entity.getDurationMs()/1000));\n    doc.addValCol(UnitUtil.convertTime(entity.getDiskReadTime(), TimeUnit.MS, TimeUnit.SECS)); //TODO:STEVE: how should this be represented?\n    doc.addValCol(UnitUtil.convertTime(entity.getDiskWriteTime(), TimeUnit.MS, TimeUnit.SECS));\n\n    return doc;\n  }","commit_id":"057b5b5df4c71ee912e9d30099b8af60150d5309","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void addDiskOutMegs(Long diskOutMegs)\n\t{\n\t\tthis.diskOutMegs = plus(this.diskOutMegs, diskOutMegs);\n\t}","id":58575,"modified_method":"public void addDiskWriteMegs( Long diskWriteMegs )\n\t{\n\t\tthis.diskWriteMegs = plus(this.diskWriteMegs, diskWriteMegs);\n\t}","commit_id":"057b5b5df4c71ee912e9d30099b8af60150d5309","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private static Long plus(Long a, Long b)\n\t{\n\t\tif (a!=null && b!=null) {\n\t\t\treturn a.longValue()+b.longValue();\n\t\t} else if (a!=null) {\n\t\t\treturn a.longValue();\n\t\t} else if (b!=null) {\n\t\t\treturn b.longValue();\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}","id":58576,"modified_method":"private static Long plus(Long a, Long b)\n\t{\n\t\tif (a!=null || b!=null) {\n\t\t\treturn Objects.firstNonNull(a, 0L) + Objects.firstNonNull(b, 0L);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}","commit_id":"057b5b5df4c71ee912e9d30099b8af60150d5309","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void addDiskInMegs(Long diskInMegs)\n\t{\n\t\tthis.diskInMegs = plus(this.diskInMegs, diskInMegs);\n\t}","id":58577,"modified_method":"public void addDiskReadMegs( Long diskReadMegs )\n\t{\n\t\tthis.diskReadMegs = plus(this.diskReadMegs, diskReadMegs);\n\t}","commit_id":"057b5b5df4c71ee912e9d30099b8af60150d5309","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public Long getDiskInMegs()\n\t{\n\t\treturn diskInMegs;\n\t}","id":58578,"modified_method":"public Long getDiskReadMegs()\n\t{\n\t\treturn diskReadMegs;\n\t}","commit_id":"057b5b5df4c71ee912e9d30099b8af60150d5309","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public Long getDiskOutMegs()\n\t{\n\t\treturn diskOutMegs;\n\t}","id":58579,"modified_method":"public Long getDiskWriteMegs()\n\t{\n\t\treturn diskWriteMegs;\n\t}","commit_id":"057b5b5df4c71ee912e9d30099b8af60150d5309","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public void addNetTotalOutMegs(Long netExternalOutMegs)\n\t{\n\t\tthis.netTotalOutMegs = plus(this.netTotalOutMegs, netTotalOutMegs);\n\t}","id":58580,"modified_method":"public void addNetTotalOutMegs(Long netTotalOutMegs)\n\t{\n\t\tthis.netTotalOutMegs = plus(this.netTotalOutMegs, netTotalOutMegs);\n\t}","commit_id":"057b5b5df4c71ee912e9d30099b8af60150d5309","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@ExposedCommand\n\tpublic static void generateFalseData()\n\t{\n\t\tlog.debug(\" ----> GENERATING FALSE DATA\");\n\t\t\n\n\t\t/* Generate every combination of zones, clusters, accounts, and users */\n\t\tint uniqueUserId = 0;\n\t\tint uniqueAccountId = 0;\n\t\tint uniqueClusterId = 0;\n\t\tfor (int availZoneNum = 0; availZoneNum<NUM_AVAIL_ZONE; availZoneNum++) {\n\t\t\tString availZone = \"zone-\" + availZoneNum;\n\t\t\tfor (int clusterNum=0; clusterNum<NUM_CLUSTERS_PER_ZONE; clusterNum++) {\n\t\t\t\tuniqueClusterId++;\n\t\t\t\tString cluster = \"cluster-\" + uniqueClusterId;\n\t\t\t\tfor (int accountNum=0; accountNum<NUM_ACCOUNTS_PER_CLUSTER; accountNum++) {\n\t\t\t\t\tuniqueAccountId++;\n\t\t\t\t\tString accountId = \"acct-\" + uniqueAccountId;\n\t\t\t\t\tString accountName = \"account-\" + uniqueAccountId;\n\t\t\t\t\tReportingAccountCrud.getInstance().createOrUpdateAccount(accountId, accountName);\n\t\t\t\t\tfor (int userNum=0; userNum<NUM_USERS_PER_ACCOUNT; userNum++) {\n\t\t\t\t\t\tlog.debug(String.format(\"Generating usage for user %d\\n\", userNum));\n\t\t\t\t\t\tString user = \"user-\" + userNum;\n\t\t\t\t\t\tuniqueUserId++;\n\t\t\t\t\t\tList<Attachment> attachments = new ArrayList<Attachment>();\n\n\t\t\t\t\t\t/* For every zone/cluster/account/user combination, generate instances,\n\t\t\t\t\t\t * volumes, IPs, buckets, and objects. \n\t\t\t\t\t\t * Also generate usage.\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\tString userId = \"u-\" + uniqueUserId;\n\t\t\t\t\t\tString userName = \"user-\" + uniqueUserId;\n\t\t\t\t\t\tReportingUserCrud.getInstance().createOrUpdateUser(userId, accountId, userName);\n\n\t\t\t\t\t\t/* These uuids must not overlap as we want the userNum/uuidNum combo to be\n\t\t\t\t\t\t * unique here. We need to know the full range of every instance, volume,\n\t\t\t\t\t\t * snapshot, ip, and object uuids generated so far, for each user, in order\n\t\t\t\t\t\t * to generate usage later. As a result we must have non-overlapping start\n\t\t\t\t\t\t * values for each of them.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tlong instanceUuidNum   = INSTANCE_UUID_START;\n\t\t\t\t\t\tlong volumeUuidNum     = VOLUME_UUID_START;\n\t\t\t\t\t\tlong elasticIpUuidNum  = ELASTIC_IP_UUID_START;\n\t\t\t\t\t\tlong snapshotUuidNum   = SNAPSHOT_UUID_START;\n\t\t\t\t\t\tlong bucketUuidNum     = BUCKET_UUID_START;\n\t\t\t\t\t\tlong objectUuidNum     = OBJECT_UUID_START;\n\n\t\t\t\t\t\tString instanceUuid  = \"(none)\";\n\t\t\t\t\t\tString volumeUuid    = \"(none)\";\n\t\t\t\t\t\tString elasticIpUuid = \"(none)\";\n\t\t\t\t\t\tString bucketName    = \"(none)\";\n\t\t\t\t\t\tint createdInstanceNum = 0;\n\t\t\t\t\t\tfor (int periodNum=0; periodNum<NUM_PERIODS; periodNum++) {\n\t\t\t\t\t\t\tlog.debug(String.format(\" Generating usage for period %d\\n\", periodNum));\n\t\t\t\t\t\t\tlong timeMs = START_TIME + (PERIOD_DURATION*periodNum);\n\n\t\t\t\t\t\t\t/* Create a fake instance, a fake volume, and a fake elastic IP if they should be created in this period. */\n\t\t\t\t\t\t\tif (periodNum % NUM_PERIODS_PER_ENTITY == 0) {\n\t\t\t\t\t\t\t\t/* cycle thru instance types */\n\t\t\t\t\t\t\t\tint typeNum = createdInstanceNum%FalseInstanceType.values().length;\n\t\t\t\t\t\t\t\tFalseInstanceType type = FalseInstanceType.values()[typeNum];\n\t\t\t\t\t\t\t\tinstanceUuid = String.format(UUID_FORMAT, uniqueUserId, instanceUuidNum++);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating instance uuid %s\\n\", instanceUuid));\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertCreateEvent(instanceUuid,\n\t\t\t\t\t\t\t\t\t\t(\"i-\" + userNum + \"-\" + periodNum), timeMs, type.toString(), userId, availZone);\n\t\t\t\t\t\t\t\tcreatedInstanceNum++;\n\n\t\t\t\t\t\t\t\tvolumeUuid = String.format(UUID_FORMAT, uniqueUserId, volumeUuidNum++);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating volume uuid %s\\n\", volumeUuid));\n\t\t\t\t\t\t\t\tReportingVolumeEventStore.getInstance().insertCreateEvent(volumeUuid, (\"vol-\" + userNum + \"-\" + periodNum),\n\t\t\t\t\t\t\t\t\t\ttimeMs, userId, availZone, VOLUME_SIZE);\n\n\t\t\t\t\t\t\t\telasticIpUuid = String.format(UUID_FORMAT, uniqueUserId, elasticIpUuidNum++);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating elastic ip uuid %s\\n\", elasticIpUuid));\n\t\t\t\t\t\t\t\tString ip = String.format(\"%d.%d.%d.%d\",\n\t\t\t\t\t\t\t\t\t\t(userNum >> 8) % 256,\n\t\t\t\t\t\t\t\t\t\tuserNum % 256,\n\t\t\t\t\t\t\t\t\t\t(periodNum >> 8) % 256,\n\t\t\t\t\t\t\t\t\t\tperiodNum % 256);\n\t\t\t\t\t\t\t\tReportingElasticIpEventStore.getInstance().insertCreateEvent(elasticIpUuid, timeMs, userId, ip);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Create a fake snapshot if one should be created in this period. */\n\t\t\t\t\t\t\tif (periodNum % NUM_PERIODS_PER_SNAPSHOT == 0) {\n\t\t\t\t\t\t\t\tString uuid = String.format(UUID_FORMAT, uniqueUserId, snapshotUuidNum++);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating snapshot uuid %s\\n\", uuid));\n\t\t\t\t\t\t\t\tReportingVolumeSnapshotEventStore.getInstance().insertCreateEvent(uuid,\n\t\t\t\t\t\t\t\t\t\tvolumeUuid, (\"snap-\" + userNum + \"-\" + periodNum),\n\t\t\t\t\t\t\t\t\t\ttimeMs, userId, SNAPSHOT_SIZE);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/* Create a fake bucket if one should be created in this period. */\n\t\t\t\t\t\t\tif (periodNum % NUM_PERIODS_PER_BUCKET == 0) {\n\t\t\t\t\t\t\t\tbucketName = \"bucket-\" + bucketUuidNum++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Create a fake object if one should be created in this period. */\n\t\t\t\t\t\t\tif (periodNum % NUM_PERIODS_PER_OBJECT == 0) {\n\t\t\t\t\t\t\t\tString uuid = String.format(UUID_FORMAT, uniqueUserId, objectUuidNum++);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating object uuid %s\\n\", uuid));\n\t\t\t\t\t\t\t\tfor (int i=0; i<NUM_VERSIONS_PER_OBJECT; i++) {\n\t\t\t\t\t\t\t\t\tReportingS3ObjectEventStore.getInstance().insertS3ObjectCreateEvent(bucketName, uuid, \"0\",\n\t\t\t\t\t\t\t\t\t\tOBJECT_SIZE, timeMs, userId);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\n\n\t\t\t\t\t\t\t/* Generate instance usage in this period for every instance running from before */\n\t\t\t\t\t\t\tdouble oneMB = 1024d*11024d;\n\t\t\t\t\t\t\tfor (long i=INSTANCE_UUID_START; i<instanceUuidNum-2; i++) {\n\t\t\t\t\t\t\t\tString uuid = String.format(UUID_FORMAT, uniqueUserId, i);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating instance usage uuid %s\\n\", uuid));\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"NetworkIn\", 0L, \"total\", oneMB*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"NetworkIn\", 0L, \"internal\", oneMB*2*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"NetworkOut\", 0L, \"total\", oneMB*3*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"NetworkOut\", 0L, \"internal\", oneMB*4*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"DiskReadBytes\", 0L, \"root\", oneMB*5*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"DiskWriteBytes\", 0L, \"root\", oneMB*6*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"DiskReadBytes\", 0L, \"ephemeral0\", oneMB*7*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"DiskWriteBytes\", 0L, \"ephemeral0\", oneMB*8*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"VolumeTotalReadTime\", 0L, \"vda\", 100000d*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"VolumeTotalWriteTime\", 0L, \"vda\", 200000d*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"CPUUtilization\", 0L, \"default\", (double)(PERIOD_DURATION/2)*periodNum);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Generate volume usage in this period for every volume that was created before */\n\t\t\t\t\t\t\tfor (long i=VOLUME_UUID_START; i<volumeUuidNum-2; i++) {\n\t\t\t\t\t\t\t\tString uuid = String.format(UUID_FORMAT, uniqueUserId, i);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating volume usage uuid %s\\n\", uuid));\n\t\t\t\t\t\t\t\tReportingVolumeEventStore.getInstance().insertUsageEvent(uuid, timeMs,\n\t\t\t\t\t\t\t\t\t\tVOLUME_CUMULATIVE_READ_PER_PERIOD,\n\t\t\t\t\t\t\t\t\t\tVOLUME_CUMULATIVE_WRITTEN_PER_PERIOD);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Generate object usage in this period for every object that was created before */\n\t\t\t\t\t\t\tfor (long i=OBJECT_UUID_START; i<objectUuidNum-2; i++) {\n\t\t\t\t\t\t\t\tString uuid = String.format(UUID_FORMAT, uniqueUserId, i);\n\t\t\t\t\t\t\t\t//TODO: divide by zero here\n\t\t\t\t\t\t\t\tlong bucketNum = i/(NUM_PERIODS_PER_BUCKET/NUM_PERIODS_PER_OBJECT);\n\t\t\t\t\t\t\t\tbucketName = String.format(UUID_FORMAT, uniqueUserId, bucketNum);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating object usage, bucket uuid %s, object uuid %s\\n\", bucketName, uuid));\n\t\t\t\t\t\t\t\tReportingS3ObjectEventStore.getInstance().insertS3ObjectUsageEvent(\n\t\t\t\t\t\t\t\t\t\tbucketName,\tuuid, \"0\", OBJECT_SIZE, timeMs, userId );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Attach Volumes and Elastic IPs to Instances */\n\t\t\t\t\t\t\tReportingVolumeEventStore.getInstance().insertAttachEvent(volumeUuid, instanceUuid, VOLUME_SIZE, timeMs);\n\t\t\t\t\t\t\tReportingElasticIpEventStore.getInstance().insertAttachEvent(elasticIpUuid, instanceUuid, timeMs);\n\t\t\t\t\t\t\tlog.debug(String.format(\"  Attaching volume %s and ip %s to instance %s\\n\", volumeUuid, elasticIpUuid, instanceUuid));\n\t\t\t\t\t\t\tattachments.add(new Attachment(instanceUuid, volumeUuid, elasticIpUuid));\n\n\t\t\t\t\t\t\t/* Detach old Volumes and Elastic IPs from old Instances */\n\t\t\t\t\t\t\tif (attachments.size() >= ATTACH_PERIODS_DURATION) {\n\t\t\t\t\t\t\t\tAttachment attachment = attachments.remove(0);\n\t\t\t\t\t\t\t\tReportingVolumeEventStore.getInstance().insertDetachEvent(attachment.getVolumeUuid(),\n\t\t\t\t\t\t\t\t\t\tattachment.getInstanceUuid(), VOLUME_SIZE, timeMs);\n\t\t\t\t\t\t\t\tReportingElasticIpEventStore.getInstance().insertDetachEvent(attachment.getElasticIpUuid(),\n\t\t\t\t\t\t\t\t\t\tattachment.getInstanceUuid(), timeMs);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Detaching volume %s and ip %s to instance %s\\n\",\n\t\t\t\t\t\t\t\t\t\tattachment.getVolumeUuid(), attachment.getElasticIpUuid(), attachment.getInstanceUuid()));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\n\t\t}\n\t}","id":58581,"modified_method":"@ExposedCommand\n\tpublic static void generateFalseData()\n\t{\n\t\tlog.debug(\" ----> GENERATING FALSE DATA\");\n\t\t\n\n\t\t/* Generate every combination of zones, clusters, accounts, and users */\n\t\tint uniqueUserId = 0;\n\t\tint uniqueAccountId = 0;\n\t\tint uniqueClusterId = 0;\n\t\tfor (int availZoneNum = 0; availZoneNum<NUM_AVAIL_ZONE; availZoneNum++) {\n\t\t\tString availZone = \"zone-\" + availZoneNum;\n\t\t\tfor (int clusterNum=0; clusterNum<NUM_CLUSTERS_PER_ZONE; clusterNum++) {\n\t\t\t\tuniqueClusterId++;\n\t\t\t\tString cluster = \"cluster-\" + uniqueClusterId;\n\t\t\t\tfor (int accountNum=0; accountNum<NUM_ACCOUNTS_PER_CLUSTER; accountNum++) {\n\t\t\t\t\tuniqueAccountId++;\n\t\t\t\t\tString accountId = \"acct-\" + uniqueAccountId;\n\t\t\t\t\tString accountName = \"account-\" + uniqueAccountId;\n\t\t\t\t\tReportingAccountCrud.getInstance().createOrUpdateAccount(accountId, accountName);\n\t\t\t\t\tfor (int userNum=0; userNum<NUM_USERS_PER_ACCOUNT; userNum++) {\n\t\t\t\t\t\tlog.debug(String.format(\"Generating usage for user %d\\n\", userNum));\n\t\t\t\t\t\tString user = \"user-\" + userNum;\n\t\t\t\t\t\tuniqueUserId++;\n\t\t\t\t\t\tList<Attachment> attachments = new ArrayList<Attachment>();\n\n\t\t\t\t\t\t/* For every zone/cluster/account/user combination, generate instances,\n\t\t\t\t\t\t * volumes, IPs, buckets, and objects. \n\t\t\t\t\t\t * Also generate usage.\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\tString userId = \"u-\" + uniqueUserId;\n\t\t\t\t\t\tString userName = \"user-\" + uniqueUserId;\n\t\t\t\t\t\tReportingUserCrud.getInstance().createOrUpdateUser(userId, accountId, userName);\n\n\t\t\t\t\t\t/* These uuids must not overlap as we want the userNum/uuidNum combo to be\n\t\t\t\t\t\t * unique here. We need to know the full range of every instance, volume,\n\t\t\t\t\t\t * snapshot, ip, and object uuids generated so far, for each user, in order\n\t\t\t\t\t\t * to generate usage later. As a result we must have non-overlapping start\n\t\t\t\t\t\t * values for each of them.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tlong instanceUuidNum   = INSTANCE_UUID_START;\n\t\t\t\t\t\tlong volumeUuidNum     = VOLUME_UUID_START;\n\t\t\t\t\t\tlong elasticIpUuidNum  = ELASTIC_IP_UUID_START;\n\t\t\t\t\t\tlong snapshotUuidNum   = SNAPSHOT_UUID_START;\n\t\t\t\t\t\tlong bucketUuidNum     = BUCKET_UUID_START;\n\t\t\t\t\t\tlong objectUuidNum     = OBJECT_UUID_START;\n\n\t\t\t\t\t\tString instanceUuid  = \"(none)\";\n\t\t\t\t\t\tString volumeUuid    = \"(none)\";\n\t\t\t\t\t\tString elasticIpUuid = \"(none)\";\n\t\t\t\t\t\tString bucketName    = \"(none)\";\n\t\t\t\t\t\tint createdInstanceNum = 0;\n\t\t\t\t\t\tfor (int periodNum=0; periodNum<NUM_PERIODS; periodNum++) {\n\t\t\t\t\t\t\tlog.debug(String.format(\" Generating usage for period %d\\n\", periodNum));\n\t\t\t\t\t\t\tlong timeMs = START_TIME + (PERIOD_DURATION*periodNum);\n\n\t\t\t\t\t\t\t/* Create a fake instance, a fake volume, and a fake elastic IP if they should be created in this period. */\n\t\t\t\t\t\t\tif (periodNum % NUM_PERIODS_PER_ENTITY == 0) {\n\t\t\t\t\t\t\t\t/* cycle thru instance types */\n\t\t\t\t\t\t\t\tint typeNum = createdInstanceNum%FalseInstanceType.values().length;\n\t\t\t\t\t\t\t\tFalseInstanceType type = FalseInstanceType.values()[typeNum];\n\t\t\t\t\t\t\t\tinstanceUuid = String.format(UUID_FORMAT, uniqueUserId, instanceUuidNum++);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating instance uuid %s\\n\", instanceUuid));\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertCreateEvent(instanceUuid,\n\t\t\t\t\t\t\t\t\t\t(\"i-\" + userNum + \"-\" + periodNum), timeMs, type.toString(), userId, availZone);\n\t\t\t\t\t\t\t\tcreatedInstanceNum++;\n\n\t\t\t\t\t\t\t\tvolumeUuid = String.format(UUID_FORMAT, uniqueUserId, volumeUuidNum++);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating volume uuid %s\\n\", volumeUuid));\n\t\t\t\t\t\t\t\tReportingVolumeEventStore.getInstance().insertCreateEvent(volumeUuid, (\"vol-\" + userNum + \"-\" + periodNum),\n\t\t\t\t\t\t\t\t\t\ttimeMs, userId, availZone, VOLUME_SIZE);\n\n\t\t\t\t\t\t\t\telasticIpUuid = String.format(UUID_FORMAT, uniqueUserId, elasticIpUuidNum++);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating elastic ip uuid %s\\n\", elasticIpUuid));\n\t\t\t\t\t\t\t\tString ip = String.format(\"%d.%d.%d.%d\",\n\t\t\t\t\t\t\t\t\t\t(userNum >> 8) % 256,\n\t\t\t\t\t\t\t\t\t\tuserNum % 256,\n\t\t\t\t\t\t\t\t\t\t(periodNum >> 8) % 256,\n\t\t\t\t\t\t\t\t\t\tperiodNum % 256);\n\t\t\t\t\t\t\t\tReportingElasticIpEventStore.getInstance().insertCreateEvent(elasticIpUuid, timeMs, userId, ip);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Create a fake snapshot if one should be created in this period. */\n\t\t\t\t\t\t\tif (periodNum % NUM_PERIODS_PER_SNAPSHOT == 0) {\n\t\t\t\t\t\t\t\tString uuid = String.format(UUID_FORMAT, uniqueUserId, snapshotUuidNum++);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating snapshot uuid %s\\n\", uuid));\n\t\t\t\t\t\t\t\tReportingVolumeSnapshotEventStore.getInstance().insertCreateEvent(uuid,\n\t\t\t\t\t\t\t\t\t\tvolumeUuid, (\"snap-\" + userNum + \"-\" + periodNum),\n\t\t\t\t\t\t\t\t\t\ttimeMs, userId, SNAPSHOT_SIZE);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/* Create a fake bucket if one should be created in this period. */\n\t\t\t\t\t\t\tif (periodNum % NUM_PERIODS_PER_BUCKET == 0) {\n\t\t\t\t\t\t\t\tbucketName = \"bucket-\" + bucketUuidNum++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Create a fake object if one should be created in this period. */\n\t\t\t\t\t\t\tif (periodNum % NUM_PERIODS_PER_OBJECT == 0) {\n\t\t\t\t\t\t\t\tString uuid = String.format(UUID_FORMAT, uniqueUserId, objectUuidNum++);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating object uuid %s\\n\", uuid));\n\t\t\t\t\t\t\t\tfor (int i=0; i<NUM_VERSIONS_PER_OBJECT; i++) {\n\t\t\t\t\t\t\t\t\tReportingS3ObjectEventStore.getInstance().insertS3ObjectCreateEvent(bucketName, uuid, \"0\",\n\t\t\t\t\t\t\t\t\t\tOBJECT_SIZE, timeMs, userId);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\n\n\t\t\t\t\t\t\t/* Generate instance usage in this period for every instance running from before */\n\t\t\t\t\t\t\tdouble oneMB = 1024d*11024d;\n\t\t\t\t\t\t\tfor (long i=INSTANCE_UUID_START; i<instanceUuidNum-2; i++) {\n\t\t\t\t\t\t\t\tString uuid = String.format(UUID_FORMAT, uniqueUserId, i);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating instance usage uuid %s\\n\", uuid));\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"NetworkIn\", 0L, \"total\", oneMB*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"NetworkIn\", 0L, \"internal\", oneMB*2*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"NetworkOut\", 0L, \"total\", oneMB*3*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"NetworkOut\", 0L, \"internal\", oneMB*4*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"DiskReadBytes\", 0L, \"root\", oneMB*5*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"DiskWriteBytes\", 0L, \"root\", oneMB*6*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"DiskReadBytes\", 0L, \"ephemeral0\", oneMB*7*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"DiskWriteBytes\", 0L, \"ephemeral0\", oneMB*8*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"VolumeTotalReadTime\", 0L, \"vda\", 100000d*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"VolumeTotalWriteTime\", 0L, \"vda\", 200000d*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"DiskReadOps\", 0L, \"vda\", 100000d*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"DiskWriteOps\", 0L, \"vda\", 200000d*periodNum);\n\t\t\t\t\t\t\t\tReportingInstanceEventStore.getInstance().insertUsageEvent(uuid,\n\t\t\t\t\t\t\t\t\t\ttimeMs, \"CPUUtilization\", 0L, \"default\", (double)(PERIOD_DURATION/2)*periodNum);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Generate volume usage in this period for every volume that was created before */\n\t\t\t\t\t\t\tfor (long i=VOLUME_UUID_START; i<volumeUuidNum-2; i++) {\n\t\t\t\t\t\t\t\tString uuid = String.format(UUID_FORMAT, uniqueUserId, i);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating volume usage uuid %s\\n\", uuid));\n\t\t\t\t\t\t\t\tReportingVolumeEventStore.getInstance().insertUsageEvent(uuid, timeMs,\n\t\t\t\t\t\t\t\t\t\tVOLUME_CUMULATIVE_READ_PER_PERIOD,\n\t\t\t\t\t\t\t\t\t\tVOLUME_CUMULATIVE_WRITTEN_PER_PERIOD);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Generate object usage in this period for every object that was created before */\n\t\t\t\t\t\t\tfor (long i=OBJECT_UUID_START; i<objectUuidNum-2; i++) {\n\t\t\t\t\t\t\t\tString uuid = String.format(UUID_FORMAT, uniqueUserId, i);\n\t\t\t\t\t\t\t\t//TODO: divide by zero here\n\t\t\t\t\t\t\t\tlong bucketNum = i/(NUM_PERIODS_PER_BUCKET/NUM_PERIODS_PER_OBJECT);\n\t\t\t\t\t\t\t\tbucketName = String.format(UUID_FORMAT, uniqueUserId, bucketNum);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Generating object usage, bucket uuid %s, object uuid %s\\n\", bucketName, uuid));\n\t\t\t\t\t\t\t\tReportingS3ObjectEventStore.getInstance().insertS3ObjectUsageEvent(\n\t\t\t\t\t\t\t\t\t\tbucketName,\tuuid, \"0\", OBJECT_SIZE, timeMs, userId );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t/* Attach Volumes and Elastic IPs to Instances */\n\t\t\t\t\t\t\tReportingVolumeEventStore.getInstance().insertAttachEvent(volumeUuid, instanceUuid, VOLUME_SIZE, timeMs);\n\t\t\t\t\t\t\tReportingElasticIpEventStore.getInstance().insertAttachEvent(elasticIpUuid, instanceUuid, timeMs);\n\t\t\t\t\t\t\tlog.debug(String.format(\"  Attaching volume %s and ip %s to instance %s\\n\", volumeUuid, elasticIpUuid, instanceUuid));\n\t\t\t\t\t\t\tattachments.add(new Attachment(instanceUuid, volumeUuid, elasticIpUuid));\n\n\t\t\t\t\t\t\t/* Detach old Volumes and Elastic IPs from old Instances */\n\t\t\t\t\t\t\tif (attachments.size() >= ATTACH_PERIODS_DURATION) {\n\t\t\t\t\t\t\t\tAttachment attachment = attachments.remove(0);\n\t\t\t\t\t\t\t\tReportingVolumeEventStore.getInstance().insertDetachEvent(attachment.getVolumeUuid(),\n\t\t\t\t\t\t\t\t\t\tattachment.getInstanceUuid(), VOLUME_SIZE, timeMs);\n\t\t\t\t\t\t\t\tReportingElasticIpEventStore.getInstance().insertDetachEvent(attachment.getElasticIpUuid(),\n\t\t\t\t\t\t\t\t\t\tattachment.getInstanceUuid(), timeMs);\n\t\t\t\t\t\t\t\tlog.debug(String.format(\"  Detaching volume %s and ip %s to instance %s\\n\",\n\t\t\t\t\t\t\t\t\t\tattachment.getVolumeUuid(), attachment.getElasticIpUuid(), attachment.getInstanceUuid()));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\n\t\t}\n\t}","commit_id":"5f1091ca3a9b0ae0f8ab5672e1b101afc6e3cf85","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic Document addValCol(Double val)\n\t\tthrows IOException\n    {\n        return addCol((val==null)?null:String.format(\"%3.1f\", val), VALUE_WIDTH, 1, \"center\");\n    }","id":58582,"modified_method":"@Override\n\tpublic Document addValCol(Double val)\n\t\tthrows IOException\n    {\n        return addCol((val==null)?\"-\":String.format(\"%3.1f\", val), VALUE_WIDTH, 1, \"center\");\n    }","commit_id":"5f1091ca3a9b0ae0f8ab5672e1b101afc6e3cf85","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic Document addValCol(Long val)\n\t\tthrows IOException\n    {\n        return addCol((val==null)?null:val.toString(), VALUE_WIDTH, 1, \"center\");\n    }","id":58583,"modified_method":"@Override\n\tpublic Document addValCol(Long val)\n\t\tthrows IOException\n    {\n        return addCol((val==null)?\"-\":val.toString(), VALUE_WIDTH, 1, \"center\");\n    }","commit_id":"5f1091ca3a9b0ae0f8ab5672e1b101afc6e3cf85","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public ReportArtEntity generateReportArt(final ReportArtEntity report)\n\t{\n\t\tlog.debug(\"GENERATING REPORT ART\");\n\n\t\t/* Create super-tree of availZones, clusters, accounts, users, and instances;\n\t\t * and create a Map of the instance usage nodes at the bottom.\n\t\t */\n\t\tfinal Map<String,InstanceUsageArtEntity> usageEntities = new HashMap<String,InstanceUsageArtEntity>();\n\t\tfinal Map<String, Long> instanceStartTimes = new HashMap<String, Long>();\n\n        foreachInstanceCreateEvent( report.getEndMs(), new Predicate<ReportingInstanceCreateEvent>() {\n            @Override\n            public boolean apply( final ReportingInstanceCreateEvent createEvent ) {\n\n            \tif (! report.getZones().containsKey(createEvent.getAvailabilityZone())) {\n            \t\treport.getZones().put(createEvent.getAvailabilityZone(), new AvailabilityZoneArtEntity());\n            \t}\n            \tAvailabilityZoneArtEntity zone = report.getZones().get(createEvent.getAvailabilityZone());\n\n            \tReportingUser reportingUser = ReportingUserDao.getInstance().getReportingUser(createEvent.getUserId());\n            \tif (reportingUser==null) {\n            \t\tlog.error(\"No user corresponding to event:\" + createEvent.getUserId());\n            \t}\n            \tReportingAccount reportingAccount = ReportingAccountDao.getInstance()\n            \t\t\t\t\t\t\t\t\t\t.getReportingAccount(reportingUser.getAccountId());\n            \tif (reportingAccount==null) {\n            \t\tlog.error(\"No account corresponding to user:\" + reportingUser.getAccountId());\n            \t}\n            \tif (! zone.getAccounts().containsKey(reportingAccount.getName())) {\n            \t\tzone.getAccounts().put(reportingAccount.getName(), new AccountArtEntity());\n            \t}\n            \tAccountArtEntity account = zone.getAccounts().get(reportingAccount.getName());\n            \tif (! account.getUsers().containsKey(reportingUser.getName())) {\n            \t\taccount.getUsers().put(reportingUser.getName(), new UserArtEntity());\n            \t}\n            \tUserArtEntity user = account.getUsers().get(reportingUser.getName());\n            \tif (! user.getInstances().containsKey(createEvent.getUuid())) {\n            \t\tuser.getInstances().put(createEvent.getUuid(), new InstanceArtEntity(createEvent.getInstanceType(),\n            \t\t\t\tcreateEvent.getInstanceId()));\n            \t}\n            \tInstanceArtEntity instance = user.getInstances().get(createEvent.getUuid());\n            \tinstance.getUsage().addInstanceCnt(1);\n            \tusageEntities.put(createEvent.getUuid(), instance.getUsage());\n            \tinstanceStartTimes.put(createEvent.getUuid(), createEvent.getTimestampMs());\n            \treturn true;            \n            }\n        } );\n\n\n        /* Scan through events in order, and update the total usage in the instance usage art entity, for each\n         * uuid/metric/dimension combo. Metric values are cumulative, so we must subtract each from the last.\n         * For this reason, we must retain previous values of each uuid/metric/dim combo. We must also retain\n         * the earliest and latest times for each combo, to update the duration.\n         */\n\t\tfinal Map<InstanceMetricDimensionKey, MetricPrevData> prevDataMap =\n\t\t\tnew HashMap<InstanceMetricDimensionKey, MetricPrevData>();\n        foreachInstanceUsageEvent( report.getBeginMs()-USAGE_SEARCH_PERIOD,\n        \t\treport.getEndMs()+USAGE_SEARCH_PERIOD,\n        \t\tnew Predicate<ReportingInstanceUsageEvent>() {\n            @Override\n            public boolean apply( final ReportingInstanceUsageEvent event ) {\n\n            \tfinal InstanceMetricDimensionKey key =\n            \t\tnew InstanceMetricDimensionKey(event.getUuid(), event.getMetric(),\n            \t\t\t\tevent.getDimension());\n            \tfinal long eventMs = event.getTimestampMs();\n        \t\tif (event.getValue()==null) return true;\n        \t\tfinal InstanceUsageArtEntity usageEntity = usageEntities.get(event.getUuid());\n        \t\tif (usageEntity==null) return true;\n\n        \t\tif (!prevDataMap.containsKey(key)) {\n        \t\t\t/* No prior value. Use usage from instance creation to present */\n            \t\tif (instanceStartTimes.containsKey(event.getUuid())) {\n            \t\t\t//Equivalent to inserting a zero-usage event at instance creation time\n            \t\t\tDouble fractionalVal = fractionalUsage(report.getBeginMs(), report.getEndMs(),\n            \t\t\t\t\tinstanceStartTimes.get(event.getUuid()), eventMs, event.getValue());\n        \t\t\t\taddMetricValueToUsageEntity(usageEntity, event.getMetric(), event.getDimension(),\n        \t\t\t\t\t\tfractionalVal);\n            \t\t}\n        \t\t\tprevDataMap.put(key, new MetricPrevData(eventMs, eventMs, event.getValue()));\n        \t\t} else {\n        \t\t\t/* Previous value exists */\n                \tfinal MetricPrevData prevData = prevDataMap.get(key);\n        \t\t\n            \t\t/* We have a period (firstMs to now); update the instance duration if necessary */\n        \t\t\tusageEntity.setDurationMs(Math.max(usageEntity.getDurationMs(),\n\t\t\t\t\t\t\toverlap(report.getBeginMs(), report.getEndMs(), prevData.firstMs, eventMs)));        \t\t\t\n\n        \t\t\tif (prevData.lastVal < event.getValue()) {\n        \t\t\t\t/* SENSOR RESET; we lost data; just take whatever amount greater than 0 */\n        \t\t\t\tDouble fractionalVal = fractionalUsage(report.getBeginMs(), report.getEndMs(),\n        \t\t\t\t\t\tprevData.lastMs, eventMs, event.getValue());        \t\t\t\t\n        \t\t\t\taddMetricValueToUsageEntity(usageEntity, event.getMetric(), event.getDimension(),\n        \t\t\t\t\t\tfractionalVal);\n        \t\t\t} else {\n        \t\t\t\t/* Increase total by val minus lastVal */\n        \t\t\t\tDouble fractionalVal = fractionalUsage(report.getBeginMs(), report.getEndMs(),\n        \t\t\t\t\t\tprevData.lastMs, eventMs, event.getValue()-prevData.lastVal);\n        \t\t\t\taddMetricValueToUsageEntity(usageEntity, event.getMetric(), event.getDimension(),\n        \t\t\t\t\t\tfractionalVal);\n        \t\t\t}\n        \t\t\tprevDataMap.put(key, new MetricPrevData(prevData.firstMs, eventMs, event.getValue()));\n        \t\t}\n            \treturn true;\n            }\n        } );\n\n\t\t\n\t\t/* Perform totals and summations\n\t\t */\n        for ( final AvailabilityZoneArtEntity zone : report.getZones().values() ) {\n            final UsageTotalsArtEntity zoneUsage = zone.getUsageTotals();\n            for ( final AccountArtEntity account : zone.getAccounts().values() ) {\n                final UsageTotalsArtEntity accountUsage = account.getUsageTotals();\n                for ( final UserArtEntity user : account.getUsers().values() ) {\n                    final UsageTotalsArtEntity userUsage = user.getUsageTotals();\n                    for ( final InstanceArtEntity instance : user.getInstances().values() ) {\n                        updateUsageTotals(userUsage, instance);\n                        updateUsageTotals(accountUsage, instance);\n                        updateUsageTotals(zoneUsage, instance);\n                    }\n                }\n            }\n        }\n\t\t\n\t\treturn report;\n\t}","id":58584,"modified_method":"public ReportArtEntity generateReportArt(final ReportArtEntity report)\n\t{\n\t\tlog.debug(\"GENERATING REPORT ART\");\n\n\t\t/* Create super-tree of availZones, clusters, accounts, users, and instances;\n\t\t * and create a Map of the instance usage nodes at the bottom.\n\t\t */\n\t\tfinal Map<String,InstanceUsageArtEntity> usageEntities = new HashMap<String,InstanceUsageArtEntity>();\n\t\tfinal Map<String, Long> instanceStartTimes = new HashMap<String, Long>();\n\n        foreachInstanceCreateEvent( report.getEndMs(), new Predicate<ReportingInstanceCreateEvent>() {\n            @Override\n            public boolean apply( final ReportingInstanceCreateEvent createEvent ) {\n\n            \tif (! report.getZones().containsKey(createEvent.getAvailabilityZone())) {\n            \t\treport.getZones().put(createEvent.getAvailabilityZone(), new AvailabilityZoneArtEntity());\n            \t}\n            \tAvailabilityZoneArtEntity zone = report.getZones().get(createEvent.getAvailabilityZone());\n\n            \tReportingUser reportingUser = ReportingUserDao.getInstance().getReportingUser(createEvent.getUserId());\n            \tif (reportingUser==null) {\n            \t\tlog.error(\"No user corresponding to event:\" + createEvent.getUserId());\n            \t}\n            \tReportingAccount reportingAccount = ReportingAccountDao.getInstance()\n            \t\t\t\t\t\t\t\t\t\t.getReportingAccount(reportingUser.getAccountId());\n            \tif (reportingAccount==null) {\n            \t\tlog.error(\"No account corresponding to user:\" + reportingUser.getAccountId());\n            \t}\n            \tif (! zone.getAccounts().containsKey(reportingAccount.getName())) {\n            \t\tzone.getAccounts().put(reportingAccount.getName(), new AccountArtEntity());\n            \t}\n            \tAccountArtEntity account = zone.getAccounts().get(reportingAccount.getName());\n            \tif (! account.getUsers().containsKey(reportingUser.getName())) {\n            \t\taccount.getUsers().put(reportingUser.getName(), new UserArtEntity());\n            \t}\n            \tUserArtEntity user = account.getUsers().get(reportingUser.getName());\n            \tif (! user.getInstances().containsKey(createEvent.getUuid())) {\n            \t\tuser.getInstances().put(createEvent.getUuid(), new InstanceArtEntity(createEvent.getInstanceType(),\n            \t\t\t\tcreateEvent.getInstanceId()));\n            \t}\n            \tInstanceArtEntity instance = user.getInstances().get(createEvent.getUuid());\n            \tinstance.getUsage().addInstanceCnt(1);\n            \tusageEntities.put(createEvent.getUuid(), instance.getUsage());\n            \tinstanceStartTimes.put(createEvent.getUuid(), createEvent.getTimestampMs());\n            \treturn true;            \n            }\n        } );\n\n\n        /* Scan through events in order, and update the total usage in the instance usage art entity, for each\n         * uuid/metric/dimension combo. Metric values are cumulative, so we must subtract each from the last.\n         * For this reason, we must retain previous values of each uuid/metric/dim combo. We must also retain\n         * the earliest and latest times for each combo, to update the duration.\n         */\n\t\tfinal Map<InstanceMetricDimensionKey, MetricPrevData> prevDataMap =\n\t\t\tnew HashMap<InstanceMetricDimensionKey, MetricPrevData>();\n        foreachInstanceUsageEvent( report.getBeginMs()-USAGE_SEARCH_PERIOD,\n        \t\treport.getEndMs()+USAGE_SEARCH_PERIOD,\n        \t\tnew Predicate<ReportingInstanceUsageEvent>() {\n            @Override\n            public boolean apply( final ReportingInstanceUsageEvent event ) {\n\n            \tfinal InstanceMetricDimensionKey key =\n            \t\tnew InstanceMetricDimensionKey(event.getUuid(), event.getMetric(),\n            \t\t\t\tevent.getDimension());\n            \tfinal long eventMs = event.getTimestampMs();\n        \t\tif (event.getValue()==null) return true;\n        \t\tfinal InstanceUsageArtEntity usageEntity = usageEntities.get(event.getUuid());\n        \t\tif (usageEntity==null) return true;\n\n        \t\tif (!prevDataMap.containsKey(key)) {\n        \t\t\t/* No prior value. Use usage from instance creation to present */\n            \t\tif (instanceStartTimes.containsKey(event.getUuid())) {\n            \t\t\t//Equivalent to inserting a zero-usage event at instance creation time\n            \t\t\tDouble fractionalVal = fractionalUsage(report.getBeginMs(), report.getEndMs(),\n            \t\t\t\t\tinstanceStartTimes.get(event.getUuid()), eventMs, event.getValue());\n        \t\t\t\taddMetricValueToUsageEntity(usageEntity, event.getMetric(), event.getDimension(),\n        \t\t\t\t\t\tfractionalVal);\n            \t\t}\n        \t\t\tprevDataMap.put(key, new MetricPrevData(eventMs, eventMs, event.getValue()));\n        \t\t} else {\n        \t\t\t/* Previous value exists */\n                \tfinal MetricPrevData prevData = prevDataMap.get(key);\n        \t\t\n            \t\t/* We have a period (firstMs to now); update the instance duration if necessary */\n        \t\t\tusageEntity.setDurationMs(Math.max(usageEntity.getDurationMs(),\n\t\t\t\t\t\t\toverlap(report.getBeginMs(), report.getEndMs(), prevData.firstMs, eventMs)));        \t\t\t\n\n        \t\t\tif (event.getValue() < prevData.lastVal) {\n        \t\t\t\t/* SENSOR RESET; we lost data; just take whatever amount greater than 0 */\n        \t\t\t\tDouble fractionalVal = fractionalUsage(report.getBeginMs(), report.getEndMs(),\n        \t\t\t\t\t\tprevData.lastMs, eventMs, event.getValue());        \t\t\t\t\n        \t\t\t\taddMetricValueToUsageEntity(usageEntity, event.getMetric(), event.getDimension(),\n        \t\t\t\t\t\tfractionalVal);\n        \t\t\t} else {\n        \t\t\t\t/* Increase total by val minus lastVal */\n        \t\t\t\tDouble fractionalVal = fractionalUsage(report.getBeginMs(), report.getEndMs(),\n        \t\t\t\t\t\tprevData.lastMs, eventMs, event.getValue()-prevData.lastVal);\n        \t\t\t\tlog.debug(String.format(\"event time:%d-%d report:%d-%d uuid:%s metric:%s dim:%s val:%f lastVal:%f fraction:%f\",\n        \t\t\t\t\t\tprevData.lastMs, eventMs, report.getBeginMs(), report.getEndMs(), event.getUuid(), event.getMetric(),\n        \t\t\t\t\t\tevent.getDimension(), event.getValue(), prevData.lastVal, fractionalVal));\n        \t\t\t\taddMetricValueToUsageEntity(usageEntity, event.getMetric(), event.getDimension(),\n        \t\t\t\t\t\tfractionalVal);\n        \t\t\t}\n        \t\t\tprevDataMap.put(key, new MetricPrevData(prevData.firstMs, eventMs, event.getValue()));\n        \t\t}\n            \treturn true;\n            }\n        } );\n\n\t\t\n\t\t/* Perform totals and summations\n\t\t */\n        for ( final AvailabilityZoneArtEntity zone : report.getZones().values() ) {\n            final UsageTotalsArtEntity zoneUsage = zone.getUsageTotals();\n            for ( final AccountArtEntity account : zone.getAccounts().values() ) {\n                final UsageTotalsArtEntity accountUsage = account.getUsageTotals();\n                for ( final UserArtEntity user : account.getUsers().values() ) {\n                    final UsageTotalsArtEntity userUsage = user.getUsageTotals();\n                    for ( final InstanceArtEntity instance : user.getInstances().values() ) {\n                        updateUsageTotals(userUsage, instance);\n                        updateUsageTotals(accountUsage, instance);\n                        updateUsageTotals(zoneUsage, instance);\n                    }\n                }\n            }\n        }\n\t\t\n\t\treturn report;\n\t}","commit_id":"5f1091ca3a9b0ae0f8ab5672e1b101afc6e3cf85","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"@Override\n\tpublic void render( final ReportArtEntity report, final OutputStream os,\n\t\t\t\t\t\tfinal Units units ) throws IOException\n\t{\n\t\tdoc.setWriter(new OutputStreamWriter(os));\n\n\t\tdoc.open();\n\t\tdoc.textLine(\"Instance Report\", 1);\n\t\tdoc.textLine(\"Begin:\" + new Date(report.getBeginMs()).toString(), 4);\n\t\tdoc.textLine(\"End:\" + new Date(report.getEndMs()).toString(), 4);\n\t\tdoc.textLine(\"Resource Usage Section\", 3);\n\t\tdoc.tableOpen();\n\t\tdoc.newRow().addEmptyValCols(5)\n\t\t\t\t.addValCol(\"Net Total \" + units.getSizeUnit(), 2, \"center\")\n\t\t\t\t.addValCol(\"Disk \" + units.getSizeUnit(), 2, \"center\")\n\t\t\t\t.addValCol(\"Disk IOPS\", 2, \"center\")\n\t\t\t\t.addValCol(\"Disk Time\", 2, \"center\");\n\t\tdoc.newRow().addValCol(\"InstanceId\")\n\t\t\t\t.addValCol(\"Type\").addValCol(\"#\").addValCol(units.getTimeUnit().toString()).addValCol(\"CpuUsage%\")\n\t\t\t\t.addValCol(\"In\").addValCol(\"Out\")\n\t\t\t\t.addValCol(\"Read\").addValCol(\"Write\")\n\t\t\t\t.addValCol(\"Read\").addValCol(\"Write\")\n\t\t\t\t.addValCol(\"Read\").addValCol(\"Write\");\n\t\tfor( final String zoneName : report.getZones().keySet() ) {\n\t\t\tfinal AvailabilityZoneArtEntity zone = report.getZones().get(zoneName);\n\t\t\tdoc.newRow().addLabelCol(0, \"Zone: \" + zoneName)\n\t\t\t\t\t.addValCol(\"cumul.\")\n\t\t\t\t\t.addValCol(\"cumul.\");\n\t\t\taddUsageCols(doc, zone.getUsageTotals().getInstanceTotals(), units);\n\t\t\tfor (String accountName: zone.getAccounts().keySet()) {\n\t\t\t\tAccountArtEntity account = zone.getAccounts().get(accountName);\n\t\t\t\tdoc.newRow().addLabelCol(1, \"Account: \" + accountName)\n\t\t\t\t\t\t.addValCol(\"cumul.\")\n\t\t\t\t\t\t.addValCol(\"cumul.\");\n\t\t\t\taddUsageCols(doc, account.getUsageTotals().getInstanceTotals(),units);\n\t\t\t\tfor (String userName: account.getUsers().keySet()) {\n\t\t\t\t\tUserArtEntity user = account.getUsers().get(userName);\n\t\t\t\t\tdoc.newRow().addLabelCol(2, \"User: \" + userName)\n\t\t\t\t\t\t\t.addValCol(\"cumul.\")\n\t\t\t\t\t\t\t.addValCol(\"cumul.\");\n\t\t\t\t\taddUsageCols(doc, user.getUsageTotals().getInstanceTotals(),units);\n\t\t\t\t\tfor (String instanceUuid: user.getInstances().keySet()) {\n\t\t\t\t\t\tInstanceArtEntity instance = user.getInstances().get(instanceUuid);\n\t\t\t\t\t\tdoc.newRow().addValCol(instance.getInstanceId())\n\t\t\t\t\t\t\t\t.addValCol(instance.getInstanceType());\n\t\t\t\t\t\taddUsageCols(doc, instance.getUsage(), units);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.tableClose();\n\n\t\tdoc.textLine(\"Instance Running Times Section\", 3);\n\n\t\tdoc.tableOpen();\n\t\tdoc.newRow()\n\t\t\t\t.addValCol(\"m1.small\", 2, \"center\")\n\t\t\t\t.addValCol(\"c1.medium\", 2, \"center\")\n\t\t\t\t.addValCol(\"m1.large\", 2, \"center\")\n\t\t\t\t.addValCol(\"c1.large\", 2, \"center\")\n\t\t\t\t.addValCol(\"m1.xlarge\", 2, \"center\");\n\t\tdoc.newRow()\n\t\t\t\t.addValCol(\"num\", 1, \"center\").addValCol(units.getTimeUnit().toString(), 1, \"center\")\n\t\t\t\t.addValCol(\"num\", 1, \"center\").addValCol(units.getTimeUnit().toString(), 1, \"center\")\n\t\t\t\t.addValCol(\"num\", 1, \"center\").addValCol(units.getTimeUnit().toString(), 1, \"center\")\n\t\t\t\t.addValCol(\"num\", 1, \"center\").addValCol(units.getTimeUnit().toString(), 1, \"center\")\n\t\t\t\t.addValCol(\"num\", 1, \"center\").addValCol(units.getTimeUnit().toString(), 1, \"center\");\n\t\tfor(String zoneName : report.getZones().keySet()) {\n\t\t\tAvailabilityZoneArtEntity zone = report.getZones().get(zoneName);\n\t\t\tdoc.newRow().addLabelCol(0, \"Zone: \" + zoneName);\n\t\t\taddTimeCols(doc, zone.getUsageTotals(), units);\n\t\t\tfor (String accountName: zone.getAccounts().keySet()) {\n\t\t\t\tAccountArtEntity account = zone.getAccounts().get(accountName);\n\t\t\t\tdoc.newRow().addLabelCol(1, \"Account: \" + accountName);\n\t\t\t\taddTimeCols(doc, account.getUsageTotals(),units);\n\t\t\t\tfor (String userName: account.getUsers().keySet()) {\n\t\t\t\t\tUserArtEntity user = account.getUsers().get(userName);\n\t\t\t\t\tdoc.newRow().addLabelCol(2, \"User: \" + userName);\n\t\t\t\t\taddTimeCols(doc, user.getUsageTotals(),units);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.tableClose();\n\t\tdoc.close();\n\t}","id":58585,"modified_method":"@Override\n\tpublic void render( final ReportArtEntity report, final OutputStream os,\n\t\t\t\t\t\tfinal Units units ) throws IOException\n\t{\n\t\tdoc.setWriter(new OutputStreamWriter(os));\n\n\t\tdoc.open();\n\t\tdoc.textLine(\"Instance Report\", 1);\n\t\tdoc.textLine(\"Begin:\" + new Date(report.getBeginMs()).toString(), 4);\n\t\tdoc.textLine(\"End:\" + new Date(report.getEndMs()).toString(), 4);\n\t\tdoc.textLine(\"Resource Usage Section\", 3);\n\t\tdoc.tableOpen();\n\t\tdoc.newRow().addEmptyValCols(5)\n\t\t\t\t.addValCol(\"Net Total \" + units.getSizeUnit(), 2, \"center\")\n\t\t\t\t.addValCol(\"Disk \" + units.getSizeUnit(), 2, \"center\")\n\t\t\t\t.addValCol(\"Disk IOPS (M)\", 2, \"center\")\n\t\t\t\t.addValCol(\"Disk Time (\" + TimeUnit.values()[units.getTimeUnit().ordinal()-1] + \")\", 2, \"center\");\n\t\tdoc.newRow().addValCol(\"InstanceId\")\n\t\t\t\t.addValCol(\"Type\").addValCol(\"#\").addValCol(units.getTimeUnit().toString()).addValCol(\"CpuUsage%\")\n\t\t\t\t.addValCol(\"In\").addValCol(\"Out\")\n\t\t\t\t.addValCol(\"Read\").addValCol(\"Write\")\n\t\t\t\t.addValCol(\"Read\").addValCol(\"Write\")\n\t\t\t\t.addValCol(\"Read\").addValCol(\"Write\");\n\t\tfor( final String zoneName : report.getZones().keySet() ) {\n\t\t\tfinal AvailabilityZoneArtEntity zone = report.getZones().get(zoneName);\n\t\t\tdoc.newRow().addLabelCol(0, \"Zone: \" + zoneName)\n\t\t\t\t\t.addValCol(\"cumul.\")\n\t\t\t\t\t.addValCol(\"cumul.\");\n\t\t\taddUsageCols(doc, zone.getUsageTotals().getInstanceTotals(), units);\n\t\t\tfor (String accountName: zone.getAccounts().keySet()) {\n\t\t\t\tAccountArtEntity account = zone.getAccounts().get(accountName);\n\t\t\t\tdoc.newRow().addLabelCol(1, \"Account: \" + accountName)\n\t\t\t\t\t\t.addValCol(\"cumul.\")\n\t\t\t\t\t\t.addValCol(\"cumul.\");\n\t\t\t\taddUsageCols(doc, account.getUsageTotals().getInstanceTotals(),units);\n\t\t\t\tfor (String userName: account.getUsers().keySet()) {\n\t\t\t\t\tUserArtEntity user = account.getUsers().get(userName);\n\t\t\t\t\tdoc.newRow().addLabelCol(2, \"User: \" + userName)\n\t\t\t\t\t\t\t.addValCol(\"cumul.\")\n\t\t\t\t\t\t\t.addValCol(\"cumul.\");\n\t\t\t\t\taddUsageCols(doc, user.getUsageTotals().getInstanceTotals(),units);\n\t\t\t\t\tfor (String instanceUuid: user.getInstances().keySet()) {\n\t\t\t\t\t\tInstanceArtEntity instance = user.getInstances().get(instanceUuid);\n\t\t\t\t\t\tdoc.newRow().addValCol(instance.getInstanceId())\n\t\t\t\t\t\t\t\t.addValCol(instance.getInstanceType());\n\t\t\t\t\t\taddUsageCols(doc, instance.getUsage(), units);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.tableClose();\n\n\t\tdoc.textLine(\"Instance Running Times Section\", 3);\n\n\t\tdoc.tableOpen();\n\t\tdoc.newRow()\n\t\t\t\t.addValCol(\"m1.small\", 2, \"center\")\n\t\t\t\t.addValCol(\"c1.medium\", 2, \"center\")\n\t\t\t\t.addValCol(\"m1.large\", 2, \"center\")\n\t\t\t\t.addValCol(\"c1.large\", 2, \"center\")\n\t\t\t\t.addValCol(\"m1.xlarge\", 2, \"center\");\n\t\tdoc.newRow()\n\t\t\t\t.addValCol(\"num\", 1, \"center\").addValCol(units.getTimeUnit().toString(), 1, \"center\")\n\t\t\t\t.addValCol(\"num\", 1, \"center\").addValCol(units.getTimeUnit().toString(), 1, \"center\")\n\t\t\t\t.addValCol(\"num\", 1, \"center\").addValCol(units.getTimeUnit().toString(), 1, \"center\")\n\t\t\t\t.addValCol(\"num\", 1, \"center\").addValCol(units.getTimeUnit().toString(), 1, \"center\")\n\t\t\t\t.addValCol(\"num\", 1, \"center\").addValCol(units.getTimeUnit().toString(), 1, \"center\");\n\t\tfor(String zoneName : report.getZones().keySet()) {\n\t\t\tAvailabilityZoneArtEntity zone = report.getZones().get(zoneName);\n\t\t\tdoc.newRow().addLabelCol(0, \"Zone: \" + zoneName);\n\t\t\taddTimeCols(doc, zone.getUsageTotals(), units);\n\t\t\tfor (String accountName: zone.getAccounts().keySet()) {\n\t\t\t\tAccountArtEntity account = zone.getAccounts().get(accountName);\n\t\t\t\tdoc.newRow().addLabelCol(1, \"Account: \" + accountName);\n\t\t\t\taddTimeCols(doc, account.getUsageTotals(),units);\n\t\t\t\tfor (String userName: account.getUsers().keySet()) {\n\t\t\t\t\tUserArtEntity user = account.getUsers().get(userName);\n\t\t\t\t\tdoc.newRow().addLabelCol(2, \"User: \" + userName);\n\t\t\t\t\taddTimeCols(doc, user.getUsageTotals(),units);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.tableClose();\n\t\tdoc.close();\n\t}","commit_id":"5f1091ca3a9b0ae0f8ab5672e1b101afc6e3cf85","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"public static Document addUsageCols( final Document doc,\n\t\t\t\tfinal InstanceUsageArtEntity entity,\n\t\t\t\tfinal Units units )\n\t\t\tthrows IOException\n\t{\n\t\tdoc.addValCol((long)entity.getInstanceCnt());\n\t\tdoc.addValCol(UnitUtil.convertTime(entity.getDurationMs(), TimeUnit.MS, units.getTimeUnit()));\n\t\tdoc.addValCol(entity.getCpuUtilizationMs()==null?null:((double)entity.getCpuUtilizationMs()/(double)entity.getDurationMs()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getNetTotalInMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getNetTotalOutMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getDiskReadMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getDiskWriteMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(entity.getDiskReadOps());\n\t\tdoc.addValCol(entity.getDiskWriteOps());\n\t\tdoc.addValCol(UnitUtil.convertTime(entity.getDiskReadTime(), TimeUnit.MS, TimeUnit.SECS));\n\t\tdoc.addValCol(UnitUtil.convertTime(entity.getDiskWriteTime(), TimeUnit.MS, TimeUnit.SECS));\n\n\t\treturn doc;\n\t}","id":58586,"modified_method":"public static Document addUsageCols( final Document doc,\n\t\t\t\tfinal InstanceUsageArtEntity entity,\n\t\t\t\tfinal Units units )\n\t\t\tthrows IOException\n\t{\n\t\tdoc.addValCol((long)entity.getInstanceCnt());\n\t\tdoc.addValCol(UnitUtil.convertTime(entity.getDurationMs(), TimeUnit.MS, units.getTimeUnit()));\n\t\tif (entity.getDurationMs()>0) {\n\t\t\tdoc.addValCol(entity.getCpuUtilizationMs()==null?null:((double)entity.getCpuUtilizationMs()/(double)entity.getDurationMs()));\t\t\t\n\t\t} else {\n\t\t\tdoc.addValCol(0d); //Doesn't work if you divide by zero\n\t\t}\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getNetTotalInMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getNetTotalOutMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getDiskReadMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(UnitUtil.convertSize(entity.getDiskWriteMegs(), SizeUnit.MB, units.getSizeUnit()));\n\t\tdoc.addValCol(entity.getDiskReadOps()/1000000); //TODO: do something about this\n\t\tdoc.addValCol(entity.getDiskWriteOps()/1000000);\n\t\tdoc.addValCol(UnitUtil.convertTime(entity.getDiskReadTime(), TimeUnit.MS, TimeUnit.values()[units.getTimeUnit().ordinal()-1]));\n\t\tdoc.addValCol(UnitUtil.convertTime(entity.getDiskWriteTime(), TimeUnit.MS, TimeUnit.values()[units.getTimeUnit().ordinal()-1]));\n\n\t\treturn doc;\n\t}","commit_id":"5f1091ca3a9b0ae0f8ab5672e1b101afc6e3cf85","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"/**\n     *\n     * @param tablesNode\n     */\n    private void parseTables(VoltXMLElement tablesNode) {\n        Set<Table> visited = new HashSet<Table>(tableList);\n\n        // temp restriction on number of outer joins\n        int tableCount = 0;\n        for (VoltXMLElement node : tablesNode.children) {\n            if (node.name.equalsIgnoreCase(\"tablescan\")) {\n\n                String tableName = node.attributes.get(\"table\");\n                Table table = getTableFromDB(tableName);\n\n                assert(table != null);\n\n                if( visited.contains( table)) {\n                    throw new PlanningErrorException(\"VoltDB does not support self joins, consider using views instead\");\n                } else {\n                    visited.add(table);\n                }\n\n                parseTable(node);\n\n                ++tableCount;\n                if (joinTree.m_hasOuterJoin && tableCount > 2) {\n                    throw new PlanningErrorException(\"VoltDB does not support outer joins with more than two tables involved\");\n                }\n            }\n        }\n    }","id":58587,"modified_method":"/**\n     *\n     * @param tablesNode\n     */\n    private void parseTables(VoltXMLElement tablesNode) {\n        Set<Table> visited = new HashSet<Table>(tableList);\n\n        // temp restriction on number of outer joins\n        int tableCount = 0;\n        for (VoltXMLElement node : tablesNode.children) {\n            if (node.name.equalsIgnoreCase(\"tablescan\")) {\n\n                String tableName = node.attributes.get(\"table\");\n                Table table = getTableFromDB(tableName);\n\n                assert(table != null);\n\n                if( visited.contains( table)) {\n                    throw new PlanningErrorException(\"VoltDB does not support self joins, consider using views instead\");\n                } else {\n                    visited.add(table);\n                }\n\n                parseTable(node);\n\n                ++tableCount;\n                if (joinTree.m_hasOuterJoin && tableCount > 2) {\n                    throw new PlanningErrorException(\"VoltDB does not support outer joins with more than two tables involved\");\n                }\n            }\n        }\n        // Once the join tree is build set isReplicated flag for each node\n        joinTree.setReplicatedFlag();\n    }","commit_id":"22a6b79687d1bc15faf7c98df347bc7bdf09cdd1","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Specialization for all inner join.\n     *\n     * @param joinOrder An array of tables in the join order.\n     */\n    private void generateMorePlansForInnerJoinOrder(JoinTree joinTree, boolean deferSendReceivePair) {\n        assert(joinTree.m_joinOrder != null);\n        assert(m_plans.size() == 0);\n\n        // compute the reasonable access paths for all tables\n        //HashMap<Table, ArrayList<Index[]>> accessPathOptions = generateAccessPathsForEachTable(joinOrder);\n        // compute all combinations of access paths for this particular join order\n        ArrayList<AccessPath[]> listOfAccessPathCombos = generateAllAccessPathCombinationsForJoinOrder(joinTree.m_joinOrder);\n\n        // for each access path\n        for (AccessPath[] accessPath : listOfAccessPathCombos) {\n            // get a plan\n            AbstractPlanNode scanPlan = getSelectSubPlanForAccessPath(joinTree.m_joinOrder, accessPath, deferSendReceivePair);\n            m_plans.add(scanPlan);\n        }\n    }","id":58588,"modified_method":"/**\n     * Specialization for all inner join.\n     *\n     * @param joinOrder An array of tables in the join order.\n     */\n    private void generateMorePlansForInnerJoinOrder(JoinTree joinTree) {\n        assert(joinTree.m_joinOrder != null);\n        assert(m_plans.size() == 0);\n\n        // compute the reasonable access paths for all tables\n        //HashMap<Table, ArrayList<Index[]>> accessPathOptions = generateAccessPathsForEachTable(joinOrder);\n        // compute all combinations of access paths for this particular join order\n        ArrayList<AccessPath[]> listOfAccessPathCombos = generateAllAccessPathCombinationsForJoinOrder(joinTree.m_joinOrder);\n\n        // for each access path\n        for (AccessPath[] accessPath : listOfAccessPathCombos) {\n            // get a plan\n            AbstractPlanNode scanPlan = getSelectSubPlanForAccessPath(joinTree.m_joinOrder, accessPath);\n            m_plans.add(scanPlan);\n        }\n    }","commit_id":"22a6b79687d1bc15faf7c98df347bc7bdf09cdd1","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * generate all possible access paths for all nodes in the tree.\n     *\n     * @param parentNode A parent node to the node to generate paths to.\n     * @param childNode A node to generate paths to.\n     */\n    private void generateAccessPaths(JoinNode parentNode, JoinNode childNode) {\n        assert(childNode != null);\n        if (childNode.m_leftNode != null) {\n            generateAccessPaths(childNode, childNode.m_leftNode);\n        }\n        if (childNode.m_rightNode != null) {\n            generateAccessPaths(childNode, childNode.m_rightNode);\n        }\n        // The join and filter expressions are kept at the parent node\n        // 1- The OUTER-only join conditions - Testing the outer-only conditions COULD be considered as an\n        // optimal first step to processing each outer tuple - PreJoin predicate for NLJ or NLIJ\n        // 2 -The INNER-only and INNER_OUTER join conditions are used for finding a matching inner tuple(s) for a\n        // given outer tuple. Index and end-Index expressions for NLIJ and join predicate for NLJ.\n        // 3 -The OUTER-only filter conditions. - Can be pushed down to pre-qualify the outer tuples before they enter\n        // the join - Where condition for the left child\n        // 4. The INNER-only and INNER_OUTER where conditions are used for filtering joined tuples. -\n        // Post join predicate for NLIJ and NLJ\n        // Possible optimization - if INNER-only condition is NULL-rejecting (inner_tuple is NOT NULL or\n        // inner_tuple > 0) it can be pushed down as a filter expression to the inner child\n        if (parentNode != null) {\n            if (parentNode.m_leftNode == childNode) {\n                // This is the outer table which can have the naive access path and possible index path(s)\n                // Optimizations - outer-table-only where expressions can be pushed down to the child node\n                // to pre-qualify the outer tuples before they enter the join.\n                childNode.m_accessPaths.addAll(getRelevantAccessPathsForTable(childNode.m_table, null,parentNode.m_whereOuterList));\n            } else {\n                assert(parentNode.m_rightNode == childNode);\n                // This is the inner node\n                // Inner and Inner-Outer join expressions are associated with the inner node access path\n                ArrayList<AbstractExpression> joinExprList = new ArrayList<AbstractExpression>();\n                joinExprList.addAll(parentNode.m_joinInnerList);\n                joinExprList.addAll(parentNode.m_joinInnerOuterList);\n                // If inner table is non-replicated the join node will be the NLJ and not the NLIJ unless\n                // the left child is also non-replicated. If the join is not going to be a NLIJ,\n                // the inner node won't be inlined which means that we can't use join expressions\n                // for index access (they will be pushed down to the\n                // IndexScanNode instead of staying at the NL level)\n                boolean canNLIJ = false;\n                if (childNode.m_table != null) {\n                        if (childNode.m_table.getIsreplicated() || (parentNode.m_leftNode.m_table != null &&\n                                !parentNode.m_leftNode.m_table.getIsreplicated())) {\n                            canNLIJ = true;\n                        }\n                }\n                if (canNLIJ) {\n                    // The inner table can have multiple index access paths plus the naive one\n                    childNode.m_accessPaths.addAll(getRelevantAccessPathsForTable(childNode.m_table, joinExprList, null));\n                } else {\n                    // The inner node can have only a naive path\n                    childNode.m_accessPaths.add(getRelevantNaivePathForTable(joinExprList, null));\n                }\n            }\n        } else {\n            childNode.m_accessPaths.add(getRelevantNaivePathForTable(null, null));\n        }\n        assert(childNode.m_accessPaths.size() > 0);\n   }","id":58589,"modified_method":"/**\n     * generate all possible access paths for all nodes in the tree.\n     *\n     * @param parentNode A parent node to the node to generate paths to.\n     * @param childNode A node to generate paths to.\n     */\n    private void generateAccessPaths(JoinNode parentNode, JoinNode childNode) {\n        assert(childNode != null);\n        if (childNode.m_leftNode != null) {\n            generateAccessPaths(childNode, childNode.m_leftNode);\n        }\n        if (childNode.m_rightNode != null) {\n            generateAccessPaths(childNode, childNode.m_rightNode);\n        }\n        // The join and filter expressions are kept at the parent node\n        // 1- The OUTER-only join conditions - Testing the outer-only conditions COULD be considered as an\n        // optimal first step to processing each outer tuple - PreJoin predicate for NLJ or NLIJ\n        // 2 -The INNER-only and INNER_OUTER join conditions are used for finding a matching inner tuple(s) for a\n        // given outer tuple. Index and end-Index expressions for NLIJ and join predicate for NLJ.\n        // 3 -The OUTER-only filter conditions. - Can be pushed down to pre-qualify the outer tuples before they enter\n        // the join - Where condition for the left child\n        // 4. The INNER-only and INNER_OUTER where conditions are used for filtering joined tuples. -\n        // Post join predicate for NLIJ and NLJ\n        // Possible optimization - if INNER-only condition is NULL-rejecting (inner_tuple is NOT NULL or\n        // inner_tuple > 0) it can be pushed down as a filter expression to the inner child\n        if (parentNode != null) {\n            if (parentNode.m_leftNode == childNode) {\n                // This is the outer table which can have the naive access path and possible index path(s)\n                // Optimizations - outer-table-only where expressions can be pushed down to the child node\n                // to pre-qualify the outer tuples before they enter the join.\n                if (childNode.m_table != null) {\n                    childNode.m_accessPaths.addAll(getRelevantAccessPathsForTable(childNode.m_table, null,parentNode.m_whereOuterList));\n                } else {\n                    childNode.m_accessPaths.add(getRelevantNaivePathForTable(null, parentNode.m_whereOuterList));\n                }\n            } else {\n                assert(parentNode.m_rightNode == childNode);\n                // This is the inner node\n                childNode.m_accessPaths.addAll(getRelevantAccessPathsForInnerNode(parentNode, childNode));\n            }\n        } else {\n            childNode.m_accessPaths.add(getRelevantNaivePathForTable(null, null));\n        }\n        assert(childNode.m_accessPaths.size() > 0);\n   }","commit_id":"22a6b79687d1bc15faf7c98df347bc7bdf09cdd1","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Given a specific join order, compute all possible sub-plan-graphs for that\n     * join order and add them to the deque of plans. If this doesn't add plans,\n     * it doesn't mean no more plans can be generated. It's possible that the\n     * particular join order it got had no reasonable plans.\n     *\n     * @param joinOrder An array of tables in the join order.\n     */\n    private void generateMorePlansForJoinOrder(JoinTree joinTree) {\n        // In a multi-fragment plan that contains a join,\n        // is it better to send partitioned tuples and join them on the coordinator\n        // or is it better to join them before sending?\n        // On the assumption that joined rows are wider (taking more bandwidth per row),\n        // we would want to send and then join if joined rows were one-to-one, but if\n        // There is a special case -- a join of more than one partitioned table on their partition keys,\n        // when that join must happen first -- the send/receive protocol only allows sending a single\n        // intermediate result table per statement.\n        // In a join of multiple partitioned tables and one or more replicated tables, it is theoretically\n        // possible to do the partitioned table join, and then the send/receive, and then the replicated\n        // table join.\n        // Deciding whether to defer the send/receive to after a join in other cases requires a complex\n        // trade-off involving the following considerations:\n        //  - Deferring send/recieve typically involves transmitting wider rows (more bandwidth per row).\n        //  - Deferring send/recieve may either increase or decrease bandwidth requirements depending on whether\n        //    the join has a net filtering effect on rows (in a one-to-\"averages-fewer-than-one\" relationship)\n        //    or a net multiplication effect (in a one-to-many relationship).\n        //  - Deferring send/recieve increases shared processing across nodes\n        //    -- less single-threaded post-processing on the single aggregator.\n        // For now, for simplicity, we only defer the send/receive when required, but when required, we\n        // go all the way and defer to after even the replicated joins.\n\n        boolean deferSendReceivePair = m_partitioning.getCountOfPartitionedTables() > 1;\n\n        if (m_parsedStmt.joinTree.m_hasOuterJoin == false) {\n            generateMorePlansForInnerJoinOrder(joinTree, deferSendReceivePair);\n        } else {\n            generateMorePlansForOuterJoinOrder(joinTree, deferSendReceivePair);\n        }\n    }","id":58590,"modified_method":"/**\n     * Given a specific join order, compute all possible sub-plan-graphs for that\n     * join order and add them to the deque of plans. If this doesn't add plans,\n     * it doesn't mean no more plans can be generated. It's possible that the\n     * particular join order it got had no reasonable plans.\n     *\n     * @param joinOrder An array of tables in the join order.\n     */\n    private void generateMorePlansForJoinOrder(JoinTree joinTree) {\n        if (m_parsedStmt.joinTree.m_hasOuterJoin == false) {\n            generateMorePlansForInnerJoinOrder(joinTree);\n        } else {\n            generateMorePlansForOuterJoinOrder(joinTree);\n        }\n    }","commit_id":"22a6b79687d1bc15faf7c98df347bc7bdf09cdd1","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Specialization for the outer join.\n     *\n     * @param joinTree A join tree.\n     */\n    private void generateMorePlansForOuterJoinOrder(JoinTree joinTree, boolean deferSendReceivePair) {\n        JoinNode joinNode = joinTree.m_root;\n        assert(joinNode != null);\n\n        // generate the access paths for all nodes\n        generateAccessPaths(null, joinTree.m_root);\n\n        List<JoinNode> nodes = joinNode.generateJoinOrder();\n        generateSubPlanForJoinNodeRecursively(joinNode, nodes, deferSendReceivePair);\n    }","id":58591,"modified_method":"/**\n     * Specialization for the outer join.\n     *\n     * @param joinTree A join tree.\n     */\n    private void generateMorePlansForOuterJoinOrder(JoinTree joinTree) {\n        JoinNode joinNode = joinTree.m_root;\n        assert(joinNode != null);\n\n        // generate the access paths for all nodes\n        generateAccessPaths(null, joinTree.m_root);\n\n        List<JoinNode> nodes = joinNode.generateJoinOrder();\n        generateSubPlanForJoinNodeRecursively(joinNode, nodes);\n    }","commit_id":"22a6b79687d1bc15faf7c98df347bc7bdf09cdd1","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * generate all possible plans for the tree.\n     *\n     * @param rootNode The root node for the whole join tree.\n     * @param nodes The node list to iterate over.\n     * @param deferSendReceivePair\n     */\n    private void generateSubPlanForJoinNodeRecursively(JoinNode rootNode, List<JoinNode> nodes, boolean deferSendReceivePair) {\n        assert(nodes.size() > 0);\n        JoinNode joinNode = nodes.get(0);\n        if (nodes.size() == 1) {\n            for (AccessPath path : joinNode.m_accessPaths) {\n                joinNode.m_currentAccessPath = path;\n                AbstractPlanNode plan = getSelectSubPlanForJoinNode(rootNode, deferSendReceivePair);\n                m_plans.add(plan);\n            }\n        } else {\n            for (AccessPath path : joinNode.m_accessPaths) {\n                joinNode.m_currentAccessPath = path;\n                generateSubPlanForJoinNodeRecursively(rootNode, nodes.subList(1, nodes.size()), deferSendReceivePair);\n            }\n        }\n    }","id":58592,"modified_method":"/**\n     * generate all possible plans for the tree.\n     *\n     * @param rootNode The root node for the whole join tree.\n     * @param nodes The node list to iterate over.\n     */\n    private void generateSubPlanForJoinNodeRecursively(JoinNode rootNode, List<JoinNode> nodes) {\n        assert(nodes.size() > 0);\n        JoinNode joinNode = nodes.get(0);\n        if (nodes.size() == 1) {\n            for (AccessPath path : joinNode.m_accessPaths) {\n                joinNode.m_currentAccessPath = path;\n                AbstractPlanNode plan = getSelectSubPlanForJoinNode(rootNode);\n                /*\n                 * If the access plan for the table in the join order was for a\n                 * distributed table scan there will be a send/receive pair at the top.\n                 */\n                if (m_partitioning.getCountOfPartitionedTables() > 1 && m_partitioning.requiresTwoFragments()) {\n                    plan = addSendReceivePair(plan);\n                }\n\n                m_plans.add(plan);\n            }\n        } else {\n            for (AccessPath path : joinNode.m_accessPaths) {\n                joinNode.m_currentAccessPath = path;\n                generateSubPlanForJoinNodeRecursively(rootNode, nodes.subList(1, nodes.size()));\n            }\n        }\n    }","commit_id":"22a6b79687d1bc15faf7c98df347bc7bdf09cdd1","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Given a specific join order and access path set for that join order, construct the plan\n     * that gives the right tuples. This method is the meat of sub-plan-graph generation, but all\n     * of the smarts are probably done by now, so this is just boring actual construction.\n     * In case of all participant tables are joined on respective partition keys generation of\n     * Send/Received node pair is suppressed.\n     *\n     * @param joinOrder An array of tables in a specific join order.\n     * @param accessPath An array of access paths that match with the input tables.\n     * @param supressSendReceivePair indicator whether to suppress intermediate Send/Receive pairs or not\n     * @return A completed plan-sub-graph that should match the correct tuples from the\n     * correct tables.\n     */\n    protected AbstractPlanNode getSelectSubPlanForAccessPathsIterative(Table[] joinOrder, AccessPath[] accessPath, boolean deferSendReceivePair) {\n        AbstractPlanNode resultPlan = null;\n        for (int at = joinOrder.length-1; at >= 0; --at) {\n            AbstractPlanNode scanPlan = getAccessPlanForTable(joinOrder[at], accessPath[at]);\n            if (resultPlan == null) {\n                resultPlan = scanPlan;\n            } else {\n                /*\n                 * The optimizations (nestloop, nestloopindex) that follow don't care\n                 * about the send/receive pair. Send in the IndexScanPlanNode or\n                 * ScanPlanNode for them to work on.\n                 */\n                resultPlan = getSelectSubPlanForAccessPathStep(accessPath[at], resultPlan, scanPlan);\n            }\n            /*\n             * If the access plan for the table in the join order was for a\n             * distributed table scan there will be a send/receive pair at the top.\n             */\n            if (deferSendReceivePair || !m_partitioning.requiresTwoFragments() || joinOrder[at].getIsreplicated()) {\n                continue;\n            }\n            resultPlan = addSendReceivePair(resultPlan);\n        }\n        return resultPlan;\n    }","id":58593,"modified_method":"/**\n     * Given a specific join order and access path set for that join order, construct the plan\n     * that gives the right tuples. This method is the meat of sub-plan-graph generation, but all\n     * of the smarts are probably done by now, so this is just boring actual construction.\n     * In case of all participant tables are joined on respective partition keys generation of\n     * Send/Received node pair is suppressed.\n     *\n     * @param joinOrder An array of tables in a specific join order.\n     * @param accessPath An array of access paths that match with the input tables.\n     * @return A completed plan-sub-graph that should match the correct tuples from the\n     * correct tables.\n     */\n    protected AbstractPlanNode getSelectSubPlanForAccessPathsIterative(Table[] joinOrder, AccessPath[] accessPath) {\n        AbstractPlanNode resultPlan = null;\n        for (int at = joinOrder.length-1; at >= 0; --at) {\n            AbstractPlanNode scanPlan = getAccessPlanForTable(joinOrder[at], accessPath[at]);\n            if (resultPlan == null) {\n                resultPlan = scanPlan;\n            } else {\n                /*\n                 * The optimizations (nestloop, nestloopindex) that follow don't care\n                 * about the send/receive pair. Send in the IndexScanPlanNode or\n                 * ScanPlanNode for them to work on.\n                 */\n                resultPlan = getSelectSubPlanForAccessPathStep(accessPath[at], resultPlan, scanPlan);\n            }\n            /*\n             * If the access plan for the table in the join order was for a\n             * distributed table scan there will be a send/receive pair at the top.\n             */\n            if (canDeferSendReceivePairForNode(joinOrder[at].getIsreplicated())) {\n                continue;\n            }\n            resultPlan = addSendReceivePair(resultPlan);\n        }\n        return resultPlan;\n    }","commit_id":"22a6b79687d1bc15faf7c98df347bc7bdf09cdd1","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Given a specific join order and access path set for that join order, construct the plan\n     * that gives the right tuples. This method is the meat of sub-plan-graph generation, but all\n     * of the smarts are probably done by now, so this is just boring actual construction.\n     *\n     * @param joinOrder An array of tables in a specific join order.\n     * @param accessPath An array of access paths that match with the input tables.\n     * @param suppressSendReceivePair A flag preventing the usual injection of Receive and Send nodes above scans of non-replicated tables.\n     * @return A completed plan-sub-graph that should match the correct tuples from the\n     * correct tables.\n     */\n    private AbstractPlanNode getSelectSubPlanForAccessPath(Table[] joinOrder, AccessPath[] accessPath, boolean deferSendReceivePair) {\n\n        // do the actual work\n        AbstractPlanNode retv = getSelectSubPlanForAccessPathsIterative(joinOrder, accessPath, deferSendReceivePair);\n        // If there is a multi-partition statement on one or more partitioned Tables\n        // and the pre-join Send/Receive nodes were suppressed,\n        // they need to come into play \"post-join\".\n        if (deferSendReceivePair && m_partitioning.requiresTwoFragments()) {\n            retv = addSendReceivePair(retv);\n        }\n        return retv;\n    }","id":58594,"modified_method":"/**\n     * Given a specific join order and access path set for that join order, construct the plan\n     * that gives the right tuples. This method is the meat of sub-plan-graph generation, but all\n     * of the smarts are probably done by now, so this is just boring actual construction.\n     *\n     * @param joinOrder An array of tables in a specific join order.\n     * @param accessPath An array of access paths that match with the input tables.\n     * @return A completed plan-sub-graph that should match the correct tuples from the\n     * correct tables.\n     */\n    private AbstractPlanNode getSelectSubPlanForAccessPath(Table[] joinOrder, AccessPath[] accessPath) {\n\n        // do the actual work\n        AbstractPlanNode retv = getSelectSubPlanForAccessPathsIterative(joinOrder, accessPath);\n        // If there is a multi-partition statement on one or more partitioned Tables\n        // and the pre-join Send/Receive nodes were suppressed,\n        // they need to come into play \"post-join\".\n        if (m_partitioning.getCountOfPartitionedTables() > 1 && m_partitioning.requiresTwoFragments()) {\n            retv = addSendReceivePair(retv);\n        }\n        return retv;\n    }","commit_id":"22a6b79687d1bc15faf7c98df347bc7bdf09cdd1","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Given a specific join node and access path set for inner and outer tables, construct the plan\n     * that gives the right tuples.\n     *\n     * @param joinNode The join node to build the plan for.\n     * @param deferSendReceivePair A flag preventing the usual injection of Receive and Send nodes above scans of non-replicated tables.\n     * @return A completed plan-sub-graph that should match the correct tuples from the\n     * correct tables.\n     */\n    private AbstractPlanNode getSelectSubPlanForJoinNode(JoinNode joinNode, boolean deferSendReceivePair) {\n        assert(joinNode != null);\n        if (joinNode.m_table != null) {\n            // End of recursion\n            Table joinOrder[] = new Table[1];\n            AccessPath accessPath[] = new AccessPath[1];\n            joinOrder[0] = joinNode.m_table;\n            accessPath[0] = joinNode.m_currentAccessPath;\n            return getSelectSubPlanForAccessPathsIterative(joinOrder, accessPath, deferSendReceivePair);\n        } else {\n            assert(joinNode.m_leftNode != null && joinNode.m_rightNode != null);\n            // Outer node\n            AbstractPlanNode outerScanPlan = getSelectSubPlanForJoinNode(joinNode.m_leftNode, deferSendReceivePair);\n\n            // Inner Node\n            AbstractPlanNode innerScanPlan = getSelectSubPlanForJoinNode(joinNode.m_rightNode, deferSendReceivePair);\n\n            // Join Node\n            AbstractPlanNode resultPlan = getSelectSubPlanForOuterAccessPathStep(joinNode, outerScanPlan, innerScanPlan);\n            /*\n             * If the access plan for the table in the join order was for a\n             * distributed table scan there will be a send/receive pair at the top.\n             */\n            if (deferSendReceivePair && m_partitioning.requiresTwoFragments()) {\n                resultPlan = addSendReceivePair(resultPlan);\n            }\n            return resultPlan;\n        }\n    }","id":58595,"modified_method":"/**\n     * Given a specific join node and access path set for inner and outer tables, construct the plan\n     * that gives the right tuples.\n     *\n     * @param joinNode The join node to build the plan for.\n     * @return A completed plan-sub-graph that should match the correct tuples from the\n     * correct tables.\n     */\n    private AbstractPlanNode getSelectSubPlanForJoinNode(JoinNode joinNode) {\n        assert(joinNode != null);\n        if (joinNode.m_table != null) {\n            // End of recursion\n            Table joinOrder[] = new Table[1];\n            AccessPath accessPath[] = new AccessPath[1];\n            joinOrder[0] = joinNode.m_table;\n            accessPath[0] = joinNode.m_currentAccessPath;\n            return getSelectSubPlanForAccessPathsIterative(joinOrder, accessPath);\n        } else {\n            assert(joinNode.m_leftNode != null && joinNode.m_rightNode != null);\n            // Outer node\n            AbstractPlanNode outerScanPlan = getSelectSubPlanForJoinNode(joinNode.m_leftNode);\n\n            // Inner Node\n            AbstractPlanNode innerScanPlan = getSelectSubPlanForJoinNode(joinNode.m_rightNode);\n\n            // Join Node\n            return getSelectSubPlanForOuterAccessPathStep(joinNode, outerScanPlan, innerScanPlan);\n        }\n    }","commit_id":"22a6b79687d1bc15faf7c98df347bc7bdf09cdd1","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testDistrebutedIndexJoinConditions() {\n        List<AbstractPlanNode> lpn =  aide.compile(\"select *  FROM P2 RIGHT JOIN R3 ON R3.A = P2.A AND P2.A < 0 WHERE P2.A IS NULL\", 0, false, null);\n        assertTrue(lpn.size() == 2);\n        AbstractPlanNode n = lpn.get(0).getChild(0).getChild(0);\n        assertTrue(n instanceof NestLoopPlanNode);\n        assertTrue(((NestLoopPlanNode) n).getJoinType() == JoinType.LEFT);\n        assertTrue(((NestLoopPlanNode) n).getJoinPredicate() != null);\n        assertTrue(((NestLoopPlanNode) n).getWherePredicate() != null);\n        AbstractPlanNode c = n.getChild(0);\n        assertTrue(c instanceof SeqScanPlanNode);\n        c = n.getChild(1);\n        assertTrue(c instanceof ReceivePlanNode);\n        n = lpn.get(1).getChild(0);\n        assertTrue(n instanceof SeqScanPlanNode);\n        assertTrue(((SeqScanPlanNode) n).getPredicate() == null);\n\n        lpn = aide.compile(\"select *  FROM P2 RIGHT JOIN P3 ON P3.A = P2.A AND P2.A < 0 WHERE P2.A IS NULL\", 0, false, null);\n        assertTrue(lpn.size() == 2);\n        n = lpn.get(1).getChild(0);\n        assertTrue(n instanceof NestLoopIndexPlanNode);\n        assertTrue(((NestLoopIndexPlanNode) n).getJoinType() == JoinType.LEFT);\n        assertTrue(((NestLoopIndexPlanNode) n).getJoinPredicate() == null);\n        assertTrue(((NestLoopIndexPlanNode) n).getWherePredicate() != null);\n        AbstractExpression w = ((NestLoopIndexPlanNode) n).getWherePredicate();\n        assertTrue(w.getExpressionType() == ExpressionType.OPERATOR_IS_NULL);\n        IndexScanPlanNode indexScan = (IndexScanPlanNode)n.getInlinePlanNode(PlanNodeType.INDEXSCAN);\n        assertTrue(indexScan.getLookupType().equals(IndexLookupType.EQ));\n        assertTrue(indexScan.getEndExpression().getExpressionType() == ExpressionType.COMPARE_EQUAL);\n        w = indexScan.getPredicate();\n        assertTrue(w != null);\n        assertTrue(w.getExpressionType() == ExpressionType.COMPARE_LESSTHAN);\n    }","id":58596,"modified_method":"public void testDistrebutedIndexJoinConditions() {\n        List<AbstractPlanNode> lpn =  aide.compile(\"select *  FROM P2 RIGHT JOIN R3 ON R3.A = P2.A AND P2.A < 0 AND P2.E > 3 WHERE P2.A IS NULL\", 0, false, null);\n        assertTrue(lpn.size() == 2);\n        AbstractPlanNode n = lpn.get(0).getChild(0).getChild(0);\n        assertTrue(n instanceof NestLoopPlanNode);\n        assertTrue(((NestLoopPlanNode) n).getJoinType() == JoinType.LEFT);\n        assertTrue(((NestLoopPlanNode) n).getJoinPredicate() != null);\n        assertTrue(((NestLoopPlanNode) n).getWherePredicate() != null);\n        AbstractPlanNode c = n.getChild(0);\n        assertTrue(c instanceof SeqScanPlanNode);\n        c = n.getChild(1);\n        assertTrue(c instanceof ReceivePlanNode);\n        n = lpn.get(1).getChild(0);\n        assertTrue(n instanceof IndexScanPlanNode);\n        IndexScanPlanNode in = (IndexScanPlanNode) n;\n        assertTrue(in.getPredicate() != null);\n        assertTrue(in.getPredicate().getExpressionType() == ExpressionType.COMPARE_GREATERTHAN);\n        assertTrue(in.getLookupType().equals(IndexLookupType.GTE));\n\n        lpn = aide.compile(\"select *  FROM P2 RIGHT JOIN P3 ON P3.A = P2.A AND P2.A < 0 WHERE P2.A IS NULL\", 0, false, null);\n        assertTrue(lpn.size() == 2);\n        n = lpn.get(1).getChild(0);\n        assertTrue(n instanceof NestLoopIndexPlanNode);\n        assertTrue(((NestLoopIndexPlanNode) n).getJoinType() == JoinType.LEFT);\n        assertTrue(((NestLoopIndexPlanNode) n).getJoinPredicate() == null);\n        assertTrue(((NestLoopIndexPlanNode) n).getWherePredicate() != null);\n        AbstractExpression w = ((NestLoopIndexPlanNode) n).getWherePredicate();\n        assertTrue(w.getExpressionType() == ExpressionType.OPERATOR_IS_NULL);\n        IndexScanPlanNode indexScan = (IndexScanPlanNode)n.getInlinePlanNode(PlanNodeType.INDEXSCAN);\n        assertTrue(indexScan.getLookupType().equals(IndexLookupType.EQ));\n        assertTrue(indexScan.getEndExpression().getExpressionType() == ExpressionType.COMPARE_EQUAL);\n        w = indexScan.getPredicate();\n        assertTrue(w != null);\n        assertTrue(w.getExpressionType() == ExpressionType.COMPARE_LESSTHAN);\n    }","commit_id":"22a6b79687d1bc15faf7c98df347bc7bdf09cdd1","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testIndexOuterJoinConditions() {\n        AbstractPlanNode pn = compile(\"select * FROM R2 LEFT JOIN R3 ON R3.A = R2.A AND R3.C > 0 AND R2.A < 6\", 0, false, null);\n        AbstractPlanNode n = pn.getChild(0).getChild(0);\n        assertTrue(n instanceof NestLoopIndexPlanNode);\n        assertTrue(((NestLoopIndexPlanNode) n).getJoinType() == JoinType.LEFT);\n        assertTrue(((NestLoopIndexPlanNode) n).getPreJoinPredicate() != null);\n        AbstractExpression p = ((NestLoopIndexPlanNode) n).getPreJoinPredicate();\n        assertTrue(p.getExpressionType().equals(ExpressionType.COMPARE_LESSTHAN));\n        assertTrue(((NestLoopIndexPlanNode) n).getJoinPredicate() == null);\n        assertTrue(((NestLoopIndexPlanNode) n).getWherePredicate() == null);\n        IndexScanPlanNode indexScan = (IndexScanPlanNode)n.getInlinePlanNode(PlanNodeType.INDEXSCAN);\n        assertTrue(indexScan.getLookupType().equals(IndexLookupType.EQ));\n        assertTrue(indexScan.getEndExpression().getExpressionType() == ExpressionType.COMPARE_EQUAL);\n        assertTrue(indexScan.getPredicate().getExpressionType() == ExpressionType.COMPARE_GREATERTHAN);\n        AbstractPlanNode seqScan = (SeqScanPlanNode) n.getChild(0);\n        assertTrue(seqScan instanceof SeqScanPlanNode);\n        assertTrue(((SeqScanPlanNode)seqScan).getPredicate() == null);\n\n        pn = compile(\"select * FROM R2 LEFT JOIN R3 ON R3.A = R2.A WHERE R3.A IS NULL AND R2.A > 3 AND (R2.A < 6 OR R3.C IS NULL)\", 0, false, null);\n        n = pn.getChild(0).getChild(0);\n        assertTrue(n instanceof NestLoopIndexPlanNode);\n        assertTrue(((NestLoopIndexPlanNode) n).getJoinType() == JoinType.LEFT);\n        assertTrue(((NestLoopIndexPlanNode) n).getPreJoinPredicate() == null);\n        assertTrue(((NestLoopIndexPlanNode) n).getJoinPredicate() == null);\n        assertTrue(((NestLoopIndexPlanNode) n).getWherePredicate() != null);\n        AbstractExpression w = ((NestLoopIndexPlanNode) n).getWherePredicate();\n        assertTrue(w.getExpressionType() == ExpressionType.CONJUNCTION_AND);\n        assertTrue(w.getRight().getExpressionType() == ExpressionType.OPERATOR_IS_NULL);\n        assertTrue(w.getLeft().getExpressionType() == ExpressionType.CONJUNCTION_OR);\n        indexScan = (IndexScanPlanNode)n.getInlinePlanNode(PlanNodeType.INDEXSCAN);\n        assertTrue(indexScan.getLookupType().equals(IndexLookupType.EQ));\n        assertTrue(indexScan.getEndExpression().getExpressionType() == ExpressionType.COMPARE_EQUAL);\n        seqScan = (SeqScanPlanNode) n.getChild(0);\n        assertTrue(seqScan instanceof SeqScanPlanNode);\n        assertTrue(((SeqScanPlanNode)seqScan).getPredicate().getExpressionType().equals(ExpressionType.COMPARE_GREATERTHAN));\n\n        pn = compile(\"select * FROM R3 LEFT JOIN R2 ON R3.A = R2.A WHERE R3.A > 3\", 0, false, null);\n        n = pn.getChild(0).getChild(0);\n        assertTrue(n instanceof NestLoopPlanNode);\n        NestLoopPlanNode nl = (NestLoopPlanNode) n;\n        assertTrue(nl.getJoinType() == JoinType.LEFT);\n        AbstractPlanNode outerScan = n.getChild(0);\n        assertTrue(outerScan instanceof IndexScanPlanNode);\n        indexScan = (IndexScanPlanNode) outerScan;\n        assertTrue(indexScan.getLookupType().equals(IndexLookupType.GT));\n\n    }","id":58597,"modified_method":"public void testIndexOuterJoinConditions() {\n        AbstractPlanNode pn = compile(\"select * FROM R2 LEFT JOIN R3 ON R3.A = R2.A AND R3.C > 0 AND R2.A < 6\", 0, false, null);\n        AbstractPlanNode n = pn.getChild(0).getChild(0);\n        assertTrue(n instanceof NestLoopIndexPlanNode);\n        assertTrue(((NestLoopIndexPlanNode) n).getJoinType() == JoinType.LEFT);\n        assertTrue(((NestLoopIndexPlanNode) n).getPreJoinPredicate() != null);\n        AbstractExpression p = ((NestLoopIndexPlanNode) n).getPreJoinPredicate();\n        assertTrue(p.getExpressionType().equals(ExpressionType.COMPARE_LESSTHAN));\n        assertTrue(((NestLoopIndexPlanNode) n).getJoinPredicate() == null);\n        assertTrue(((NestLoopIndexPlanNode) n).getWherePredicate() == null);\n        IndexScanPlanNode indexScan = (IndexScanPlanNode)n.getInlinePlanNode(PlanNodeType.INDEXSCAN);\n        assertTrue(indexScan.getLookupType().equals(IndexLookupType.EQ));\n        assertTrue(indexScan.getEndExpression().getExpressionType() == ExpressionType.COMPARE_EQUAL);\n        assertTrue(indexScan.getPredicate().getExpressionType() == ExpressionType.COMPARE_GREATERTHAN);\n        AbstractPlanNode seqScan = (SeqScanPlanNode) n.getChild(0);\n        assertTrue(seqScan instanceof SeqScanPlanNode);\n        assertTrue(((SeqScanPlanNode)seqScan).getPredicate() == null);\n\n        pn = compile(\"select * FROM R2 LEFT JOIN R3 ON R3.A = R2.A WHERE R3.A IS NULL AND R2.A > 3 AND (R2.A < 6 OR R3.C IS NULL)\", 0, false, null);\n        n = pn.getChild(0).getChild(0);\n        assertTrue(n instanceof NestLoopIndexPlanNode);\n        assertTrue(((NestLoopIndexPlanNode) n).getJoinType() == JoinType.LEFT);\n        assertTrue(((NestLoopIndexPlanNode) n).getPreJoinPredicate() == null);\n        assertTrue(((NestLoopIndexPlanNode) n).getJoinPredicate() == null);\n        assertTrue(((NestLoopIndexPlanNode) n).getWherePredicate() != null);\n        AbstractExpression w = ((NestLoopIndexPlanNode) n).getWherePredicate();\n        assertTrue(w.getExpressionType() == ExpressionType.CONJUNCTION_AND);\n        assertTrue(w.getRight().getExpressionType() == ExpressionType.OPERATOR_IS_NULL);\n        assertTrue(w.getLeft().getExpressionType() == ExpressionType.CONJUNCTION_OR);\n        indexScan = (IndexScanPlanNode)n.getInlinePlanNode(PlanNodeType.INDEXSCAN);\n        assertTrue(indexScan.getLookupType().equals(IndexLookupType.EQ));\n        assertTrue(indexScan.getEndExpression().getExpressionType() == ExpressionType.COMPARE_EQUAL);\n        seqScan = (SeqScanPlanNode) n.getChild(0);\n        assertTrue(seqScan instanceof SeqScanPlanNode);\n        assertTrue(((SeqScanPlanNode)seqScan).getPredicate().getExpressionType().equals(ExpressionType.COMPARE_GREATERTHAN));\n\n        pn = compile(\"select * FROM R3 LEFT JOIN R2 ON R3.A = R2.A WHERE R3.A > 3 AND R3.C < 0\", 0, false, null);\n        n = pn.getChild(0).getChild(0);\n        assertTrue(n instanceof NestLoopPlanNode);\n        NestLoopPlanNode nl = (NestLoopPlanNode) n;\n        assertTrue(nl.getJoinType() == JoinType.LEFT);\n        AbstractPlanNode outerScan = n.getChild(0);\n        assertTrue(outerScan instanceof IndexScanPlanNode);\n        indexScan = (IndexScanPlanNode) outerScan;\n        assertTrue(indexScan.getLookupType().equals(IndexLookupType.GT));\n        assertTrue(indexScan.getPredicate() != null);\n        assertTrue(indexScan.getPredicate().getExpressionType() == ExpressionType.COMPARE_LESSTHAN);\n\n    }","commit_id":"22a6b79687d1bc15faf7c98df347bc7bdf09cdd1","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Analyze outer join expressions\n     */\n    void analyzeOuterJoinExpressions(JoinNode joinNode) {\n        assert (joinNode != null);\n        assert(joinNode.m_leftNode != null && joinNode.m_rightNode != null);\n        if (joinNode.m_leftNode.m_table == null) {\n            // The left node is not the leaf. Descend there\n            analyzeOuterJoinExpressions(joinNode.m_leftNode);\n        }\n        if (joinNode.m_rightNode.m_table == null) {\n            // The right node is not the leaf. Descend there\n            analyzeOuterJoinExpressions(joinNode.m_rightNode);\n        }\n\n        // At this moment all RIGHT joins are already converted to the LEFT ones\n        assert (joinNode.m_joinType == JoinType.LEFT || joinNode.m_joinType == JoinType.INNER);\n\n        ArrayList<AbstractExpression> joinList = new ArrayList<AbstractExpression>();\n        ArrayList<AbstractExpression> whereList = new ArrayList<AbstractExpression>();\n\n        joinList.addAll(ExpressionUtil.uncombineAny(joinNode.m_rightNode.m_joinExpr));\n        joinList.addAll(ExpressionUtil.uncombineAny(joinNode.m_leftNode.m_joinExpr));\n        joinList.addAll(ExpressionUtil.uncombineAny(joinNode.m_joinExpr));\n\n        whereList.addAll(ExpressionUtil.uncombineAny(joinNode.m_leftNode.m_whereExpr));\n        whereList.addAll(ExpressionUtil.uncombineAny(joinNode.m_rightNode.m_whereExpr));\n        whereList.addAll(ExpressionUtil.uncombineAny(joinNode.m_whereExpr));\n\n\n        Collection<Table> innerTables = joinNode.m_rightNode.generateTableJoinOrder();\n        Collection<Table> outerTables = joinNode.m_leftNode.generateTableJoinOrder();\n\n        // Classify join expressions into the following categories:\n        // 1. The OUTER-only join conditions. If any are false for a given outer tuple,\n        // then NO inner tuples should match it (and it can automatically get null-padded by the join\n        // without even considering the inner table). Testing the outer-only conditions\n        // COULD be considered as an optimal first step to processing each outer tuple\n        // 2. The INNER-only join conditions apply to the inner tuples (even prior to considering any outer tuple).\n        // if true for a given inner tuple, the condition has no effect, if false,\n        // it prevents the inner tuple from matching ANY outer tuple,\n        // In case of multi-tables join, they could be pushed down to a child node if this node is a join itself\n        // 3. The two-sided expressions that get evaluated on each combination of outer and inner tuple\n        // and either accept or reject that particular combination.\n        // 4. The TVE expressions where neither inner nor outer tables are involved. This is not possible\n        // for the currently supported two table joins but could change if number of tables > 2\n        classifyOuterJoinExpressions(joinList, outerTables, innerTables,  joinNode.m_joinOuterList,\n                joinNode.m_joinInnerList, joinNode.m_joinInnerOuterList);\n\n        // Apply implied transitive constant filter to join expressions\n        // outer.partkey = ? and outer.partkey = inner.partkey is equivalent to\n        // outer.partkey = ? and inner.partkey = ?\n        applyTransitiveEquivalence(joinNode.m_joinInnerList,\n                joinNode.m_joinOuterList, joinNode.m_joinInnerOuterList);\n\n        // Classify where expressions into the following categories:\n        // 1. The OUTER-only filter conditions. If any are false for a given outer tuple,\n        // nothing in the join processing of that outer tuple will get it past this filter,\n        // so it makes sense to \"push this filter down\" to pre-qualify the outer tuples before they enter the join.\n        // 2. The INNER-only join conditions. If these conditions reject NULL inner tuple it make sense to\n        // move them \"up\" to the join conditions, otherwise they must remain post-join conditions\n        // to preserve outer join semantic\n        // 3. The two-sided expressions. Same as the inner only conditions.\n        // 4. The TVE expressions where neither inner nor outer tables are involved. Same as for the join expressions\n        classifyOuterJoinExpressions(whereList, outerTables, innerTables,  joinNode.m_whereOuterList,\n                joinNode.m_whereInnerList, joinNode.m_whereInnerOuterList);\n\n        // Apply implied transitive constant filter to where expressions\n        applyTransitiveEquivalence(joinNode.m_whereInnerList,\n                joinNode.m_whereOuterList, joinNode.m_whereInnerOuterList);\n\n        // In case of multi-table joins certain expressions could be pushed down to the children\n        // to improve join performance.\n        reclassifyExpressions(joinNode);\n    }","id":58598,"modified_method":"/**\n     * Analyze outer join expressions\n     */\n    void analyzeOuterJoinExpressions(JoinNode joinNode) {\n        assert (joinNode != null);\n        if (joinNode.m_table != null) {\n            // Leaf node. Simply uncombine expressions and move them to the inner lists\n            // The expressions will be classified later at the join node level.\n            // If this is a single table select then classification is not required.\n            assert(joinNode.m_leftNode == null && joinNode.m_rightNode == null);\n            joinNode.m_joinInnerList.addAll(ExpressionUtil.uncombineAny(joinNode.m_joinExpr));\n            joinNode.m_whereInnerList.addAll(ExpressionUtil.uncombineAny(joinNode.m_whereExpr));\n            return;\n        }\n\n        assert(joinNode.m_leftNode != null && joinNode.m_rightNode != null);\n        analyzeOuterJoinExpressions(joinNode.m_leftNode);\n        analyzeOuterJoinExpressions(joinNode.m_rightNode);\n\n        // At this moment all RIGHT joins are already converted to the LEFT ones\n        assert (joinNode.m_joinType == JoinType.LEFT || joinNode.m_joinType == JoinType.INNER);\n\n        ArrayList<AbstractExpression> joinList = new ArrayList<AbstractExpression>();\n        ArrayList<AbstractExpression> whereList = new ArrayList<AbstractExpression>();\n\n        // Collect children's and node's own join expressions\n        joinList.addAll(ExpressionUtil.uncombineAny(joinNode.m_joinExpr));\n        joinList.addAll(joinNode.m_rightNode.m_joinInnerList);\n        joinList.addAll(joinNode.m_leftNode.m_joinInnerList);\n        joinNode.m_rightNode.m_joinInnerList.clear();\n        joinNode.m_leftNode.m_joinInnerList.clear();\n\n        // Collect children's and node's own where expressions\n        whereList.addAll(ExpressionUtil.uncombineAny(joinNode.m_whereExpr));\n        whereList.addAll(joinNode.m_rightNode.m_whereInnerList);\n        whereList.addAll(joinNode.m_leftNode.m_whereInnerList);\n        joinNode.m_rightNode.m_whereInnerList.clear();\n        joinNode.m_leftNode.m_whereInnerList.clear();\n\n\n        Collection<Table> innerTables = joinNode.m_rightNode.generateTableJoinOrder();\n        Collection<Table> outerTables = joinNode.m_leftNode.generateTableJoinOrder();\n\n        // Classify join expressions into the following categories:\n        // 1. The OUTER-only join conditions. If any are false for a given outer tuple,\n        // then NO inner tuples should match it (and it can automatically get null-padded by the join\n        // without even considering the inner table). Testing the outer-only conditions\n        // COULD be considered as an optimal first step to processing each outer tuple\n        // 2. The INNER-only join conditions apply to the inner tuples (even prior to considering any outer tuple).\n        // if true for a given inner tuple, the condition has no effect, if false,\n        // it prevents the inner tuple from matching ANY outer tuple,\n        // In case of multi-tables join, they could be pushed down to a child node if this node is a join itself\n        // 3. The two-sided expressions that get evaluated on each combination of outer and inner tuple\n        // and either accept or reject that particular combination.\n        // 4. The TVE expressions where neither inner nor outer tables are involved. This is not possible\n        // for the currently supported two table joins but could change if number of tables > 2\n        classifyOuterJoinExpressions(joinList, outerTables, innerTables,  joinNode.m_joinOuterList,\n                joinNode.m_joinInnerList, joinNode.m_joinInnerOuterList);\n\n        // Apply implied transitive constant filter to join expressions\n        // outer.partkey = ? and outer.partkey = inner.partkey is equivalent to\n        // outer.partkey = ? and inner.partkey = ?\n        applyTransitiveEquivalence(joinNode.m_joinInnerList,\n                joinNode.m_joinOuterList, joinNode.m_joinInnerOuterList);\n\n        // Classify where expressions into the following categories:\n        // 1. The OUTER-only filter conditions. If any are false for a given outer tuple,\n        // nothing in the join processing of that outer tuple will get it past this filter,\n        // so it makes sense to \"push this filter down\" to pre-qualify the outer tuples before they enter the join.\n        // 2. The INNER-only join conditions. If these conditions reject NULL inner tuple it make sense to\n        // move them \"up\" to the join conditions, otherwise they must remain post-join conditions\n        // to preserve outer join semantic\n        // 3. The two-sided expressions. Same as the inner only conditions.\n        // 4. The TVE expressions where neither inner nor outer tables are involved. Same as for the join expressions\n        classifyOuterJoinExpressions(whereList, outerTables, innerTables,  joinNode.m_whereOuterList,\n                joinNode.m_whereInnerList, joinNode.m_whereInnerOuterList);\n\n        // Apply implied transitive constant filter to where expressions\n        applyTransitiveEquivalence(joinNode.m_whereInnerList,\n                joinNode.m_whereOuterList, joinNode.m_whereInnerOuterList);\n\n        // In case of multi-table joins certain expressions could be pushed down to the children\n        // to improve join performance.\n        reclassifyExpressions(joinNode);\n    }","commit_id":"a4391c3869d190035dbe4a98ca572618204e858a","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Given a specific join node and access path set for inner and outer tables, construct the plan\n     * that gives the right tuples.\n     *\n     * @param joinNode The join node to build the plan for.\n     * @return A completed plan-sub-graph that should match the correct tuples from the\n     * correct tables.\n     */\n    private AbstractPlanNode getSelectSubPlanForJoinNode(JoinNode joinNode) {\n        assert(joinNode != null);\n        if (joinNode.m_table != null) {\n            // End of recursion\n            AbstractPlanNode scanNode = getAccessPlanForTable(joinNode.m_table, joinNode.m_currentAccessPath);\n            if (!joinNode.m_table.getIsreplicated() && !canDeferSendReceivePairForNode()) {\n                scanNode = addSendReceivePair(scanNode);\n            }\n            return scanNode;\n        } else {\n            assert(joinNode.m_leftNode != null && joinNode.m_rightNode != null);\n            // Outer node\n            AbstractPlanNode outerScanPlan = getSelectSubPlanForJoinNode(joinNode.m_leftNode);\n\n            // Inner Node.\n            AbstractPlanNode innerScanPlan = getSelectSubPlanForJoinNode(joinNode.m_rightNode);\n\n            // Join Node\n            return getSelectSubPlanForOuterAccessPathStep(joinNode, outerScanPlan, innerScanPlan);\n        }\n    }","id":58599,"modified_method":"/**\n     * Given a specific join node and access path set for inner and outer tables, construct the plan\n     * that gives the right tuples.\n     *\n     * @param joinNode The join node to build the plan for.\n     * @param isInnerNode. True if the joinNode is an inner node in the join\n     * @return A completed plan-sub-graph that should match the correct tuples from the\n     * correct tables.\n     */\n    private AbstractPlanNode getSelectSubPlanForJoinNode(JoinNode joinNode, boolean isInnerNode) {\n        assert(joinNode != null);\n        if (joinNode.m_table != null) {\n            // End of recursion\n            AbstractPlanNode scanNode = getAccessPlanForTable(joinNode.m_table, joinNode.m_currentAccessPath);\n            // Add the send/receive pair to the outer table if required.\n            // For the inner node the pair will be added above the parent join node to give it a chance\n            // to build an NLIJ/inlinde IndexScan plan\n            if (!isInnerNode && !joinNode.m_table.getIsreplicated() && !canDeferSendReceivePairForNode()) {\n                scanNode = addSendReceivePair(scanNode);\n            }\n            return scanNode;\n        } else {\n            assert(joinNode.m_leftNode != null && joinNode.m_rightNode != null);\n            // Outer node\n            AbstractPlanNode outerScanPlan = getSelectSubPlanForJoinNode(joinNode.m_leftNode, false);\n\n            // Inner Node.\n            AbstractPlanNode innerScanPlan = getSelectSubPlanForJoinNode(joinNode.m_rightNode, true);\n\n            // Join Node\n            AbstractPlanNode joinPlan = getSelectSubPlanForOuterAccessPathStep(joinNode, outerScanPlan, innerScanPlan);\n            // if the inner node represents a partitioned table we may need to add a send/receive pair\n            if (joinNode.m_rightNode.m_table != null && !joinNode.m_rightNode.m_table.getIsreplicated() && !canDeferSendReceivePairForNode()) {\n                joinPlan = addSendReceivePair(joinPlan);\n            }\n            return joinPlan;\n        }\n    }","commit_id":"a4391c3869d190035dbe4a98ca572618204e858a","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * generate all possible plans for the tree.\n     *\n     * @param rootNode The root node for the whole join tree.\n     * @param nodes The node list to iterate over.\n     */\n    private void generateSubPlanForJoinNodeRecursively(JoinNode rootNode, List<JoinNode> nodes) {\n        assert(nodes.size() > 0);\n        JoinNode joinNode = nodes.get(0);\n        if (nodes.size() == 1) {\n            for (AccessPath path : joinNode.m_accessPaths) {\n                joinNode.m_currentAccessPath = path;\n                AbstractPlanNode plan = getSelectSubPlanForJoinNode(rootNode);\n                /*\n                 * If the access plan for the table in the join order was for a\n                 * distributed table scan there will be a send/receive pair at the top.\n                 */\n                if (m_partitioning.getCountOfPartitionedTables() > 1 && m_partitioning.requiresTwoFragments()) {\n                    plan = addSendReceivePair(plan);\n                }\n\n                m_plans.add(plan);\n            }\n        } else {\n            for (AccessPath path : joinNode.m_accessPaths) {\n                joinNode.m_currentAccessPath = path;\n                generateSubPlanForJoinNodeRecursively(rootNode, nodes.subList(1, nodes.size()));\n            }\n        }\n    }","id":58600,"modified_method":"/**\n     * generate all possible plans for the tree.\n     *\n     * @param rootNode The root node for the whole join tree.\n     * @param nodes The node list to iterate over.\n     */\n    private void generateSubPlanForJoinNodeRecursively(JoinNode rootNode, List<JoinNode> nodes) {\n        assert(nodes.size() > 0);\n        JoinNode joinNode = nodes.get(0);\n        if (nodes.size() == 1) {\n            for (AccessPath path : joinNode.m_accessPaths) {\n                joinNode.m_currentAccessPath = path;\n                AbstractPlanNode plan = getSelectSubPlanForJoinNode(rootNode, false);\n                /*\n                 * If the access plan for the table in the join order was for a\n                 * distributed table scan there will be a send/receive pair at the top.\n                 */\n                if (m_partitioning.getCountOfPartitionedTables() > 1 && m_partitioning.requiresTwoFragments()) {\n                    plan = addSendReceivePair(plan);\n                }\n\n                m_plans.add(plan);\n            }\n        } else {\n            for (AccessPath path : joinNode.m_accessPaths) {\n                joinNode.m_currentAccessPath = path;\n                generateSubPlanForJoinNodeRecursively(rootNode, nodes.subList(1, nodes.size()));\n            }\n        }\n    }","commit_id":"a4391c3869d190035dbe4a98ca572618204e858a","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Generate all possible access paths for an inner node in an outer join.\n     * The set of potential index expressions depends whether the inner node can be inlined\n     * with the NLIJ or not. In the former case, inner and inner-outer join expressions can\n     * be considered for the index access. In the latter, only inner join expressions qualifies.\n     *\n     * @param joinNode the join node\n     * @param innerNode the inner node\n     * @return List of valid access paths\n     */\n    protected List<AccessPath> getRelevantAccessPathsForInnerNode(JoinNode joinNode, JoinNode innerNode) {\n        // In case of inner join WHERE and JOIN expressions can be merged\n        if (joinNode.m_joinType == JoinType.INNER) {\n            joinNode.m_joinInnerOuterList.addAll(joinNode.m_whereInnerOuterList);\n            joinNode.m_whereInnerOuterList.clear();\n            joinNode.m_joinInnerList.addAll(joinNode.m_whereInnerList);\n            joinNode.m_whereInnerList.clear();\n        }\n        if (innerNode.m_table == null) {\n            // The inner node is a join node itself. Only naive access path is possible\n            ArrayList<AccessPath> accessPaths = new ArrayList<AccessPath>();\n            accessPaths.add(getRelevantNaivePathForTable(joinNode.m_joinInnerOuterList, joinNode.m_joinInnerList));\n            return accessPaths;\n        }\n\n        // The inner table can have multiple index access paths based on\n        // inner and inner-outer join expressions plus the naive one.\n\n        // If the inner table is partitioned and the outer node is replicated,\n        // the join node will be NLJ and not NLIJ, even for an index access path.\n        if (innerNode.m_table.getIsreplicated() || canDeferSendReceivePairForNode()) {\n            // This case can support either NLIJ -- assuming joinNode.m_joinInnerOuterList\n            // is non-empty AND at least ONE of its clauses can be leveraged in the IndexScan\n            // -- or NLJ, otherwise.\n            return getRelevantAccessPathsForTable(innerNode.m_table,\n                                                  joinNode.m_joinInnerOuterList,\n                                                  joinNode.m_joinInnerList,\n                                                  null);\n        }\n\n        // Only NLJ is supported in this case.\n        // If the join is NLJ, the inner node won't be inlined\n        // which means that it can't use inner-outer join expressions\n        // -- they must be set aside to be processed within the NLJ.\n        return getRelevantAccessPathsForTable(innerNode.m_table,\n                                              null,\n                                              joinNode.m_joinInnerList,\n                                              joinNode.m_joinInnerOuterList);\n    }","id":58601,"modified_method":"/**\n     * Generate all possible access paths for an inner node in an outer join.\n     * The set of potential index expressions depends whether the inner node can be inlined\n     * with the NLIJ or not. In the former case, inner and inner-outer join expressions can\n     * be considered for the index access. In the latter, only inner join expressions qualifies.\n     *\n     * @param joinNode the join node\n     * @param innerNode the inner node\n     * @return List of valid access paths\n     */\n    protected List<AccessPath> getRelevantAccessPathsForInnerNode(JoinNode joinNode, JoinNode innerNode) {\n        // In case of inner join WHERE and JOIN expressions can be merged\n        if (joinNode.m_joinType == JoinType.INNER) {\n            joinNode.m_joinInnerOuterList.addAll(joinNode.m_whereInnerOuterList);\n            joinNode.m_whereInnerOuterList.clear();\n            joinNode.m_joinInnerList.addAll(joinNode.m_whereInnerList);\n            joinNode.m_whereInnerList.clear();\n        }\n        if (innerNode.m_table == null) {\n            // The inner node is a join node itself. Only naive access path is possible\n            ArrayList<AccessPath> accessPaths = new ArrayList<AccessPath>();\n            accessPaths.add(getRelevantNaivePathForTable(joinNode.m_joinInnerOuterList, joinNode.m_joinInnerList));\n            return accessPaths;\n        }\n\n        // The inner table can have multiple index access paths based on\n        // inner and inner-outer join expressions plus the naive one.\n        return getRelevantAccessPathsForTable(innerNode.m_table,\n                joinNode.m_joinInnerOuterList,\n                joinNode.m_joinInnerList,\n                null);\n    }","commit_id":"a4391c3869d190035dbe4a98ca572618204e858a","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * generate all possible access paths for all nodes in the tree.\n     *\n     * @param parentNode A parent node to the node to generate paths to.\n     * @param childNode A node to generate paths to.\n     */\n    private void generateAccessPaths(JoinNode parentNode, JoinNode childNode) {\n        assert(childNode != null);\n        if (childNode.m_leftNode != null) {\n            generateAccessPaths(childNode, childNode.m_leftNode);\n        }\n        if (childNode.m_rightNode != null) {\n            generateAccessPaths(childNode, childNode.m_rightNode);\n        }\n        // The join and filter expressions are kept at the parent node\n        // 1- The OUTER-only join conditions - Testing the outer-only conditions COULD be considered as an\n        // optimal first step to processing each outer tuple - PreJoin predicate for NLJ or NLIJ\n        // 2 -The INNER-only and INNER_OUTER join conditions are used for finding a matching inner tuple(s) for a\n        // given outer tuple. Index and end-Index expressions for NLIJ and join predicate for NLJ.\n        // 3 -The OUTER-only filter conditions. - Can be pushed down to pre-qualify the outer tuples before they enter\n        // the join - Where condition for the left child\n        // 4. The INNER-only and INNER_OUTER where conditions are used for filtering joined tuples. -\n        // Post join predicate for NLIJ and NLJ\n        // Possible optimization - if INNER-only condition is NULL-rejecting (inner_tuple is NOT NULL or\n        // inner_tuple > 0) it can be pushed down as a filter expression to the inner child\n        if (parentNode != null) {\n            if (parentNode.m_leftNode == childNode) {\n                // This is the outer table which can have the naive access path and possible index path(s)\n                // Optimizations - outer-table-only where expressions can be pushed down to the child node\n                // to pre-qualify the outer tuples before they enter the join.\n                // For inner joins outer-table-only join expressions can be pushed down as well.\n                List<AbstractExpression> joinOuterList =  (parentNode.m_joinType == JoinType.INNER) ?\n                        parentNode.m_joinOuterList : null;\n                if (childNode.m_table != null) {\n                    childNode.m_accessPaths.addAll(getRelevantAccessPathsForTable(childNode.m_table,\n                                                                                  joinOuterList,\n                                                                                  parentNode.m_whereOuterList,\n                                                                                  null));\n                } else {\n                    childNode.m_accessPaths.add(getRelevantNaivePathForTable(joinOuterList, parentNode.m_whereOuterList));\n                }\n            } else {\n                assert(parentNode.m_rightNode == childNode);\n                // This is the inner node\n                childNode.m_accessPaths.addAll(getRelevantAccessPathsForInnerNode(parentNode, childNode));\n            }\n        } else {\n            childNode.m_accessPaths.add(getRelevantNaivePathForTable(null, null));\n        }\n        assert(childNode.m_accessPaths.size() > 0);\n    }","id":58602,"modified_method":"/**\n     * generate all possible access paths for all nodes in the tree.\n     *\n     * @param parentNode A parent node to the node to generate paths to.\n     * @param childNode A node to generate paths to.\n     */\n    private void generateAccessPaths(JoinNode parentNode, JoinNode childNode) {\n        assert(childNode != null);\n        if (childNode.m_leftNode != null) {\n            generateAccessPaths(childNode, childNode.m_leftNode);\n        }\n        if (childNode.m_rightNode != null) {\n            generateAccessPaths(childNode, childNode.m_rightNode);\n        }\n        // The join and filter expressions are kept at the parent node\n        // 1- The OUTER-only join conditions - Testing the outer-only conditions COULD be considered as an\n        // optimal first step to processing each outer tuple - PreJoin predicate for NLJ or NLIJ\n        // 2 -The INNER-only and INNER_OUTER join conditions are used for finding a matching inner tuple(s) for a\n        // given outer tuple. Index and end-Index expressions for NLIJ and join predicate for NLJ.\n        // 3 -The OUTER-only filter conditions. - Can be pushed down to pre-qualify the outer tuples before they enter\n        // the join - Where condition for the left child\n        // 4. The INNER-only and INNER_OUTER where conditions are used for filtering joined tuples. -\n        // Post join predicate for NLIJ and NLJ\n        // Possible optimization - if INNER-only condition is NULL-rejecting (inner_tuple is NOT NULL or\n        // inner_tuple > 0) it can be pushed down as a filter expression to the inner child\n        if (parentNode != null) {\n            if (parentNode.m_leftNode == childNode) {\n                // This is the outer table which can have the naive access path and possible index path(s)\n                // Optimizations - outer-table-only where expressions can be pushed down to the child node\n                // to pre-qualify the outer tuples before they enter the join.\n                // For inner joins outer-table-only join expressions can be pushed down as well.\n                List<AbstractExpression> joinOuterList =  (parentNode.m_joinType == JoinType.INNER) ?\n                        parentNode.m_joinOuterList : null;\n                if (childNode.m_table != null) {\n                    childNode.m_accessPaths.addAll(getRelevantAccessPathsForTable(childNode.m_table,\n                                                                                  joinOuterList,\n                                                                                  parentNode.m_whereOuterList,\n                                                                                  null));\n                } else {\n                    childNode.m_accessPaths.add(getRelevantNaivePathForTable(joinOuterList, parentNode.m_whereOuterList));\n                }\n            } else {\n                assert(parentNode.m_rightNode == childNode);\n                // This is the inner node\n                childNode.m_accessPaths.addAll(getRelevantAccessPathsForInnerNode(parentNode, childNode));\n            }\n        } else if (childNode.m_table != null) {\n            // This is a select from a single table\n            childNode.m_accessPaths.addAll(getRelevantAccessPathsForTable(childNode.m_table,\n                    childNode.m_joinInnerList,\n                    childNode.m_whereInnerList,\n                    null));\n        } else {\n            childNode.m_accessPaths.add(getRelevantNaivePathForTable(null, null));\n        }\n        assert(childNode.m_accessPaths.size() > 0);\n    }","commit_id":"a4391c3869d190035dbe4a98ca572618204e858a","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Given a specific join node and access path set for inner and outer tables, construct the plan\n     * that gives the right tuples.\n     *\n     * @param joinNode The join node to build the plan for.\n     * @param isInnerNode. True if the joinNode is an inner node in the join\n     * @return A completed plan-sub-graph that should match the correct tuples from the\n     * correct tables.\n     */\n    private AbstractPlanNode getSelectSubPlanForJoinNode(JoinNode joinNode, boolean isInnerNode) {\n        assert(joinNode != null);\n        if (joinNode.m_table != null) {\n            // End of recursion\n            AbstractPlanNode scanNode = getAccessPlanForTable(joinNode.m_table, joinNode.m_currentAccessPath);\n            // Add the send/receive pair to the outer table if required.\n            // For the inner node the pair will be added above the parent join node to give it a chance\n            // to build an NLIJ/inlinde IndexScan plan\n            if (!isInnerNode && !joinNode.m_table.getIsreplicated() && !canDeferSendReceivePairForNode()) {\n                scanNode = addSendReceivePair(scanNode);\n            }\n            return scanNode;\n        } else {\n            assert(joinNode.m_leftNode != null && joinNode.m_rightNode != null);\n            // Outer node\n            AbstractPlanNode outerScanPlan = getSelectSubPlanForJoinNode(joinNode.m_leftNode, false);\n\n            // Inner Node.\n            AbstractPlanNode innerScanPlan = getSelectSubPlanForJoinNode(joinNode.m_rightNode, true);\n\n            // Join Node\n            AbstractPlanNode joinPlan = getSelectSubPlanForOuterAccessPathStep(joinNode, outerScanPlan, innerScanPlan);\n            // if the inner node represents a partitioned table we may need to add a send/receive pair\n            if (joinNode.m_rightNode.m_table != null && !joinNode.m_rightNode.m_table.getIsreplicated() && !canDeferSendReceivePairForNode()) {\n                joinPlan = addSendReceivePair(joinPlan);\n            }\n            return joinPlan;\n        }\n    }","id":58603,"modified_method":"/**\n     * Given a specific join node and access path set for inner and outer tables, construct the plan\n     * that gives the right tuples.\n     *\n     * @param joinNode The join node to build the plan for.\n     * @return A completed plan-sub-graph that should match the correct tuples from the\n     * correct tables.\n     */\n    private AbstractPlanNode getSelectSubPlanForJoinNode(JoinNode joinNode) {\n        assert(joinNode != null);\n        if (joinNode.m_table != null) {\n            // End of recursion\n            AbstractPlanNode scanNode = getAccessPlanForTable(joinNode.m_table, joinNode.m_currentAccessPath);\n            // Add the send/receive pair to the table if required.\n            if (!joinNode.m_table.getIsreplicated() && !canDeferSendReceivePairForNode()) {\n                scanNode = addSendReceivePair(scanNode);\n            }\n            return scanNode;\n        } else {\n            assert(joinNode.m_leftNode != null && joinNode.m_rightNode != null);\n            // Outer node\n            AbstractPlanNode outerScanPlan = getSelectSubPlanForJoinNode(joinNode.m_leftNode);\n\n            // Inner Node.\n            AbstractPlanNode innerScanPlan = getSelectSubPlanForJoinNode(joinNode.m_rightNode);\n\n            // Join Node\n            return getSelectSubPlanForOuterAccessPathStep(joinNode, outerScanPlan, innerScanPlan);\n        }\n    }","commit_id":"371cedabe495a5fb470e2e081d5a8ab925eafa2d","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * Generate all possible access paths for an inner node in an outer join.\n     * The set of potential index expressions depends whether the inner node can be inlined\n     * with the NLIJ or not. In the former case, inner and inner-outer join expressions can\n     * be considered for the index access. In the latter, only inner join expressions qualifies.\n     *\n     * @param joinNode the join node\n     * @param innerNode the inner node\n     * @return List of valid access paths\n     */\n    protected List<AccessPath> getRelevantAccessPathsForInnerNode(JoinNode joinNode, JoinNode innerNode) {\n        // In case of inner join WHERE and JOIN expressions can be merged\n        if (joinNode.m_joinType == JoinType.INNER) {\n            joinNode.m_joinInnerOuterList.addAll(joinNode.m_whereInnerOuterList);\n            joinNode.m_whereInnerOuterList.clear();\n            joinNode.m_joinInnerList.addAll(joinNode.m_whereInnerList);\n            joinNode.m_whereInnerList.clear();\n        }\n        if (innerNode.m_table == null) {\n            // The inner node is a join node itself. Only naive access path is possible\n            ArrayList<AccessPath> accessPaths = new ArrayList<AccessPath>();\n            accessPaths.add(getRelevantNaivePathForTable(joinNode.m_joinInnerOuterList, joinNode.m_joinInnerList));\n            return accessPaths;\n        }\n\n        // The inner table can have multiple index access paths based on\n        // inner and inner-outer join expressions plus the naive one.\n        return getRelevantAccessPathsForTable(innerNode.m_table,\n                joinNode.m_joinInnerOuterList,\n                joinNode.m_joinInnerList,\n                null);\n    }","id":58604,"modified_method":"/**\n     * Generate all possible access paths for an inner node in an outer join.\n     * The set of potential index expressions depends whether the inner node can be inlined\n     * with the NLIJ or not. In the former case, inner and inner-outer join expressions can\n     * be considered for the index access. In the latter, only inner join expressions qualifies.\n     *\n     * @param joinNode the join node\n     * @param innerNode the inner node\n     * @return List of valid access paths\n     */\n    protected List<AccessPath> getRelevantAccessPathsForInnerNode(JoinNode joinNode, JoinNode innerNode) {\n        // In case of inner join WHERE and JOIN expressions can be merged\n        if (joinNode.m_joinType == JoinType.INNER) {\n            joinNode.m_joinInnerOuterList.addAll(joinNode.m_whereInnerOuterList);\n            joinNode.m_whereInnerOuterList.clear();\n            joinNode.m_joinInnerList.addAll(joinNode.m_whereInnerList);\n            joinNode.m_whereInnerList.clear();\n        }\n        if (innerNode.m_table == null) {\n            // The inner node is a join node itself. Only naive access path is possible\n            ArrayList<AccessPath> accessPaths = new ArrayList<AccessPath>();\n            accessPaths.add(getRelevantNaivePathForTable(joinNode.m_joinInnerOuterList, joinNode.m_joinInnerList));\n            return accessPaths;\n        }\n\n        // The inner table can have multiple index access paths based on\n        // inner and inner-outer join expressions plus the naive one.\n\n        // If the inner table is partitioned and the outer node is replicated,\n        // the join node will be NLJ and not NLIJ, even for an index access path.\n        if (innerNode.m_table.getIsreplicated() || canDeferSendReceivePairForNode()) {\n            // This case can support either NLIJ -- assuming joinNode.m_joinInnerOuterList\n            // is non-empty AND at least ONE of its clauses can be leveraged in the IndexScan\n            // -- or NLJ, otherwise.\n            return getRelevantAccessPathsForTable(innerNode.m_table,\n                    joinNode.m_joinInnerOuterList,\n                    joinNode.m_joinInnerList,\n                    null);\n        }\n\n        // Only NLJ is supported in this case.\n        // If the join is NLJ, the inner node won't be inlined\n        // which means that it can't use inner-outer join expressions\n        // -- they must be set aside to be processed within the NLJ.\n        return getRelevantAccessPathsForTable(innerNode.m_table,\n                null,\n                joinNode.m_joinInnerList,\n                joinNode.m_joinInnerOuterList);\n    }","commit_id":"371cedabe495a5fb470e2e081d5a8ab925eafa2d","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * generate all possible plans for the tree.\n     *\n     * @param rootNode The root node for the whole join tree.\n     * @param nodes The node list to iterate over.\n     */\n    private void generateSubPlanForJoinNodeRecursively(JoinNode rootNode, List<JoinNode> nodes) {\n        assert(nodes.size() > 0);\n        JoinNode joinNode = nodes.get(0);\n        if (nodes.size() == 1) {\n            for (AccessPath path : joinNode.m_accessPaths) {\n                joinNode.m_currentAccessPath = path;\n                AbstractPlanNode plan = getSelectSubPlanForJoinNode(rootNode, false);\n                /*\n                 * If the access plan for the table in the join order was for a\n                 * distributed table scan there will be a send/receive pair at the top.\n                 */\n                if (m_partitioning.getCountOfPartitionedTables() > 1 && m_partitioning.requiresTwoFragments()) {\n                    plan = addSendReceivePair(plan);\n                }\n\n                m_plans.add(plan);\n            }\n        } else {\n            for (AccessPath path : joinNode.m_accessPaths) {\n                joinNode.m_currentAccessPath = path;\n                generateSubPlanForJoinNodeRecursively(rootNode, nodes.subList(1, nodes.size()));\n            }\n        }\n    }","id":58605,"modified_method":"/**\n     * generate all possible plans for the tree.\n     *\n     * @param rootNode The root node for the whole join tree.\n     * @param nodes The node list to iterate over.\n     */\n    private void generateSubPlanForJoinNodeRecursively(JoinNode rootNode, List<JoinNode> nodes) {\n        assert(nodes.size() > 0);\n        JoinNode joinNode = nodes.get(0);\n        if (nodes.size() == 1) {\n            for (AccessPath path : joinNode.m_accessPaths) {\n                joinNode.m_currentAccessPath = path;\n                AbstractPlanNode plan = getSelectSubPlanForJoinNode(rootNode);\n                /*\n                 * If the access plan for the table in the join order was for a\n                 * distributed table scan there will be a send/receive pair at the top.\n                 */\n                if (m_partitioning.getCountOfPartitionedTables() > 1 && m_partitioning.requiresTwoFragments()) {\n                    plan = addSendReceivePair(plan);\n                }\n\n                m_plans.add(plan);\n            }\n        } else {\n            for (AccessPath path : joinNode.m_accessPaths) {\n                joinNode.m_currentAccessPath = path;\n                generateSubPlanForJoinNodeRecursively(rootNode, nodes.subList(1, nodes.size()));\n            }\n        }\n    }","commit_id":"371cedabe495a5fb470e2e081d5a8ab925eafa2d","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public static void main(String[] args) throws InterruptedException {\n        //final IrcConfiguration config = new IrcConfiguration(\"irc.codehaus.org\", \"camel-irc\", \"Camel IRC Component\", \"#camel-test\");\n        final IrcConfiguration config = new IrcConfiguration(\"irc.codehaus.org\", \"camel-rc\", \"Camel IRC Component\", \"#camel-test\");\n\n        final IRCConnection conn = new IRCConnection(config.getHostname(), config.getPorts(), config.getPassword(), config.getNickname(), config.getUsername(), config.getRealname());\n\n        conn.addIRCEventListener(new CodehausIRCEventAdapter());\n        conn.setEncoding(\"UTF-8\");\n        // conn.setDaemon(true);\n        conn.setColors(false);\n        conn.setPong(true);\n\n        try {\n            conn.connect();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        // while (!conn.isConnected()) {\n        // Thread.sleep(1000);\n        // System.out.println(\"Sleeping\");\n        // }\n        System.out.println(\"Connected\");\n        // conn.send(\"/JOIN #camel-test\");\n\n        // System.out.println(\"Joining Channel: \" + config.getTarget());\n        conn.doJoin(config.getTarget());\n\n        conn.doPrivmsg(\"#camel-test\", \"hi!\");\n        Thread.sleep(Integer.MAX_VALUE);\n    }","id":58606,"modified_method":"public static void main(String[] args) throws InterruptedException {\n        //final IrcConfiguration config = new IrcConfiguration(\"irc.codehaus.org\", \"camel-irc\", \"Camel IRC Component\", \"#camel-test\");\n\n        List<String> channels = new ArrayList<String>();\n        channels.add(\"#camel-test\");\n        final IrcConfiguration config = new IrcConfiguration(\"irc.codehaus.org\", \"camel-rc\", \"Camel IRC Component\", channels);\n\n        final IRCConnection conn = new IRCConnection(config.getHostname(), config.getPorts(), config.getPassword(), config.getNickname(), config.getUsername(), config.getRealname());\n\n        conn.addIRCEventListener(new CodehausIRCEventAdapter());\n        conn.setEncoding(\"UTF-8\");\n        // conn.setDaemon(true);\n        conn.setColors(false);\n        conn.setPong(true);\n\n        try {\n            conn.connect();\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        // while (!conn.isConnected()) {\n        // Thread.sleep(1000);\n        // System.out.println(\"Sleeping\");\n        // }\n        System.out.println(\"Connected\");\n        // conn.send(\"/JOIN #camel-test\");\n\n        // System.out.println(\"Joining Channel: \" + config.getTarget());\n\n        for (String channel : config.getChannels()) {\n            conn.doJoin(channel);\n        }\n\n        conn.doPrivmsg(\"#camel-test\", \"hi!\");\n        Thread.sleep(Integer.MAX_VALUE);\n    }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"protected IRCConnection createConnection(IrcConfiguration configuration) {\n        IRCConnection conn = null;\n\n        if (configuration.getUsingSSL()) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Creating SSL Connection to \" + configuration.getHostname() + \" destination: \" + configuration.getTarget()\n                        + \" nick: \" + configuration.getNickname() + \" user: \" + configuration.getUsername());\n            }\n            SSLIRCConnection sconn = new SSLIRCConnection(configuration.getHostname(), configuration.getPorts(), configuration.getPassword(),\n                                                         configuration.getNickname(), configuration.getUsername(), configuration.getRealname());\n\n            sconn.addTrustManager(configuration.getTrustManager());\n            conn = sconn;\n\n        } else {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Creating Connection to \" + configuration.getHostname() + \" destination: \" + configuration.getTarget()\n                        + \" nick: \" + configuration.getNickname() + \" user: \" + configuration.getUsername());\n            }\n\n            conn = new IRCConnection(configuration.getHostname(), configuration.getPorts(), configuration.getPassword(),\n                                                         configuration.getNickname(), configuration.getUsername(), configuration.getRealname());\n        }\n        conn.setEncoding(\"UTF-8\");\n        conn.setColors(configuration.isColors());\n        conn.setPong(true);\n\n        try {\n            conn.connect();\n        } catch (Exception e) {\n            throw new RuntimeCamelException(e);\n        }\n        return conn;\n    }","id":58607,"modified_method":"protected IRCConnection createConnection(IrcConfiguration configuration) {\n        IRCConnection conn = null;\n\n        if (configuration.getUsingSSL()) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Creating SSL Connection to \" + configuration.getHostname() + \" destination(s): \" + configuration.getListOfChannels()\n                        + \" nick: \" + configuration.getNickname() + \" user: \" + configuration.getUsername());\n            }\n            SSLIRCConnection sconn = new SSLIRCConnection(configuration.getHostname(), configuration.getPorts(), configuration.getPassword(),\n                                                         configuration.getNickname(), configuration.getUsername(), configuration.getRealname());\n\n            sconn.addTrustManager(configuration.getTrustManager());\n            conn = sconn;\n\n        } else {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Creating Connection to \" + configuration.getHostname() + \" destination(s): \" + configuration.getListOfChannels()\n                        + \" nick: \" + configuration.getNickname() + \" user: \" + configuration.getUsername());\n            }\n\n            conn = new IRCConnection(configuration.getHostname(), configuration.getPorts(), configuration.getPassword(),\n                                                         configuration.getNickname(), configuration.getUsername(), configuration.getRealname());\n        }\n        conn.setEncoding(\"UTF-8\");\n        conn.setColors(configuration.isColors());\n        conn.setPong(true);\n\n        try {\n            conn.connect();\n        } catch (Exception e) {\n            throw new RuntimeCamelException(e);\n        }\n        return conn;\n    }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"public synchronized IRCConnection getIRCConnection(IrcConfiguration configuration) {\n        final IRCConnection connection;\n        if (connectionCache.containsKey(configuration.getCacheKey())) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Returning Cached Connection to \" + configuration.getHostname() + \" \" + configuration.getTarget());\n            }\n            connection = connectionCache.get(configuration.getCacheKey());\n        } else {\n            connection = createConnection(configuration);\n            connectionCache.put(configuration.getCacheKey(), connection);\n        }\n        return connection;\n    }","id":58608,"modified_method":"public synchronized IRCConnection getIRCConnection(IrcConfiguration configuration) {\n        final IRCConnection connection;\n        if (connectionCache.containsKey(configuration.getCacheKey())) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Returning Cached Connection to \" + configuration.getHostname() + \":\" + configuration.getNickname());\n            }\n            connection = connectionCache.get(configuration.getCacheKey());\n        } else {\n            connection = createConnection(configuration);\n            connectionCache.put(configuration.getCacheKey(), connection);\n        }\n        return connection;\n    }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"public void configure(String uriStr) throws URISyntaxException {\n        // fix provided URI and handle that we can use # to indicate the IRC room\n        if (uriStr.startsWith(\"ircs\")) {\n            setUsingSSL(true);\n            if (!uriStr.startsWith(\"ircs://\")) {\n                uriStr = uriStr.replace(\"ircs:\", \"ircs://\");\n            }\n        } else if (!uriStr.startsWith(\"irc://\")) {\n            uriStr = uriStr.replace(\"irc:\", \"irc://\");\n        }\n        \n        if (uriStr.contains(\"?\")) {\n            uriStr = ObjectHelper.before(uriStr, \"?\");\n        }\n        \n        URI uri = new URI(uriStr);\n\n        setNickname(uri.getUserInfo());\n        setUsername(uri.getUserInfo());\n        setRealname(uri.getUserInfo());\n        setHostname(uri.getHost());\n\n        if (uri.getFragment() == null || uri.getFragment().length() == 0) {\n            throw new RuntimeCamelException(\"The IRC channel name is required but not configured\");\n        }\n\n        String channel = uri.getFragment();\n\n        setTarget(\"#\" + channel);\n    }","id":58609,"modified_method":"public void configure(String uriStr) throws URISyntaxException {\n        // fix provided URI and handle that we can use # to indicate the IRC room\n        if (uriStr.startsWith(\"ircs\")) {\n            setUsingSSL(true);\n            if (!uriStr.startsWith(\"ircs://\")) {\n                uriStr = uriStr.replace(\"ircs:\", \"ircs://\");\n            }\n        } else if (!uriStr.startsWith(\"irc://\")) {\n            uriStr = uriStr.replace(\"irc:\", \"irc://\");\n        }\n        \n        if (uriStr.contains(\"?\")) {\n            uriStr = ObjectHelper.before(uriStr, \"?\");\n        }\n        \n        URI uri = new URI(uriStr);\n\n        setNickname(uri.getUserInfo());\n        setUsername(uri.getUserInfo());\n        setRealname(uri.getUserInfo());\n        setHostname(uri.getHost());\n\n        if (uri.getFragment() != null && uri.getFragment().length() != 0) {\n            String channel = \"#\" + uri.getFragment();\n            addChannel(channel);\n        }\n    }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"public IrcConfiguration(String hostname, String nickname, String displayname, String target) {\n        this.target = target;\n        this.hostname = hostname;\n        this.nickname = nickname;\n        this.username = nickname;\n        this.realname = displayname;\n    }","id":58610,"modified_method":"public IrcConfiguration(String hostname, String username, String password, String nickname, String displayname, List<String> channels) {\n        this.channels = channels;\n        this.hostname = hostname;\n        this.username = username;\n        this.password = password;\n        this.nickname = nickname;\n        this.realname = displayname;\n    }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"public IrcConfiguration(String hostname, String username, String password, String nickname, String displayname, String target) {\n        this.target = target;\n        this.hostname = hostname;\n        this.username = username;\n        this.password = password;\n        this.nickname = nickname;\n        this.realname = displayname;\n    }","id":58611,"modified_method":"public IrcConfiguration(String hostname, String nickname, String displayname, List<String> channels) {\n        this.channels = channels;\n        this.hostname = hostname;\n        this.nickname = nickname;\n        this.username = nickname;\n        this.realname = displayname;\n    }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"@Override\n        public void onPart(String channel, IRCUser user, String msg) {\n            if (configuration.isOnPart()) {\n                if (channel.equals(configuration.getTarget())) {\n                    Exchange exchange = endpoint.createOnPartExchange(channel, user, msg);\n                    try {\n                        getProcessor().process(exchange);\n                    } catch (Exception e) {\n                        handleException(e);\n                    }\n                }\n            }\n        }","id":58612,"modified_method":"@Override\n        public void onPart(String channel, IRCUser user, String msg) {\n            if (configuration.isOnPart()) {\n                Exchange exchange = endpoint.createOnPartExchange(channel, user, msg);\n                try {\n                    getProcessor().process(exchange);\n                } catch (Exception e) {\n                    handleException(e);\n                }\n            }\n        }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected void doStop() throws Exception {\n        if (connection != null) {\n            String target = endpoint.getConfiguration().getTarget();\n            connection.doPart(target);\n            connection.removeIRCEventListener(listener);\n        }\n        super.doStop();\n    }","id":58613,"modified_method":"@Override\n    protected void doStop() throws Exception {\n        if (connection != null) {\n            for (String channel : endpoint.getConfiguration().getChannels()) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Parting: \" + channel);\n                }\n                connection.doPart(channel);\n            }\n            connection.removeIRCEventListener(listener);\n        }\n        super.doStop();\n    }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected void doStart() throws Exception {\n        super.doStart();\n\n        String target = endpoint.getConfiguration().getTarget();\n        listener = new FilteredIRCEventAdapter(target);\n        connection.addIRCEventListener(listener);\n\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Joining: \" + target + \" using \" + connection.getClass().getName());\n        }\n        connection.doJoin(target);\n    }","id":58614,"modified_method":"@Override\n    protected void doStart() throws Exception {\n        super.doStart();\n\n        listener = new FilteredIRCEventAdapter();\n        connection.addIRCEventListener(listener);\n\n        for (String channel : endpoint.getConfiguration().getChannels()) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Joining: \" + channel + \" using \" + connection.getClass().getName());\n            }\n            connection.doJoin(channel);\n        }\n    }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"@Override\n        public void onMode(String channel, IRCUser user, IRCModeParser modeParser) {\n            if (configuration.isOnMode()) {\n                if (channel.equals(configuration.getTarget())) {\n                    Exchange exchange = endpoint.createOnModeExchange(channel, user, modeParser);\n                    try {\n                        getProcessor().process(exchange);\n                    } catch (Exception e) {\n                        handleException(e);\n                    }\n                }\n            }\n        }","id":58615,"modified_method":"@Override\n        public void onMode(String channel, IRCUser user, IRCModeParser modeParser) {\n            if (configuration.isOnMode()) {\n                Exchange exchange = endpoint.createOnModeExchange(channel, user, modeParser);\n                try {\n                    getProcessor().process(exchange);\n                } catch (Exception e) {\n                    handleException(e);\n                }\n            }\n        }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"@Override\n        public void onKick(String channel, IRCUser user, String passiveNick, String msg) {\n            if (configuration.isOnKick()) {\n                if (channel.equals(configuration.getTarget())) {\n                    Exchange exchange = endpoint.createOnKickExchange(channel, user, passiveNick, msg);\n                    try {\n                        getProcessor().process(exchange);\n                    } catch (Exception e) {\n                        handleException(e);\n                    }\n                }\n            }\n        }","id":58616,"modified_method":"@Override\n        public void onKick(String channel, IRCUser user, String passiveNick, String msg) {\n            if (configuration.isOnKick()) {\n                Exchange exchange = endpoint.createOnKickExchange(channel, user, passiveNick, msg);\n                try {\n                    getProcessor().process(exchange);\n                } catch (Exception e) {\n                    handleException(e);\n                }\n            }\n        }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"@Override\n        public void onJoin(String channel, IRCUser user) {\n            if (configuration.isOnJoin()) {\n                if (channel.equals(configuration.getTarget())) {\n                    Exchange exchange = endpoint.createOnJoinExchange(channel, user);\n                    try {\n                        getProcessor().process(exchange);\n                    } catch (Exception e) {\n                        handleException(e);\n                    }\n                }\n            }\n        }","id":58617,"modified_method":"@Override\n        public void onJoin(String channel, IRCUser user) {\n            if (configuration.isOnJoin()) {\n                Exchange exchange = endpoint.createOnJoinExchange(channel, user);\n                try {\n                    getProcessor().process(exchange);\n                } catch (Exception e) {\n                    handleException(e);\n                }\n            }\n        }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"@Override\n        public void onPrivmsg(String target, IRCUser user, String msg) {\n            if (configuration.isOnPrivmsg()) {\n                if (target.equals(configuration.getTarget()) || target.equals(configuration.getNickname())) {\n                    Exchange exchange = endpoint.createOnPrivmsgExchange(target, user, msg);\n                    try {\n                        getProcessor().process(exchange);\n                    } catch (Exception e) {\n                        handleException(e);\n                    }\n                }\n            }\n        }","id":58618,"modified_method":"@Override\n        public void onPrivmsg(String target, IRCUser user, String msg) {\n            if (configuration.isOnPrivmsg()) {\n                Exchange exchange = endpoint.createOnPrivmsgExchange(target, user, msg);\n                try {\n                    getProcessor().process(exchange);\n                } catch (Exception e) {\n                    handleException(e);\n                }\n            }\n        }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"@Override\n        public void onTopic(String channel, IRCUser user, String topic) {\n            if (configuration.isOnTopic()) {\n                if (channel.equals(configuration.getTarget())) {\n                    Exchange exchange = endpoint.createOnTopicExchange(channel, user, topic);\n                    try {\n                        getProcessor().process(exchange);\n                    } catch (Exception e) {\n                        handleException(e);\n                    }\n                }\n            }\n        }","id":58619,"modified_method":"@Override\n        public void onTopic(String channel, IRCUser user, String topic) {\n            if (configuration.isOnTopic()) {\n                Exchange exchange = endpoint.createOnTopicExchange(channel, user, topic);\n                try {\n                    getProcessor().process(exchange);\n                } catch (Exception e) {\n                    handleException(e);\n                }\n            }\n        }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"/**\n     * Lets send messages once the consumer has joined\n     */\n    protected void sendMessages() {\n        if (!sentMessages) {\n            sentMessages = true;\n\n            // now the consumer has joined, lets send some messages\n\n            template.sendBody(sendUri(), body1);\n            template.sendBody(sendUri(), body2);\n        }\n    }","id":58620,"modified_method":"/**\n     * Lets send messages once the consumer has joined\n     */\n    protected void sendMessages() {\n        if (!sentMessages) {\n            sentMessages = true;\n\n            // now the consumer has joined, lets send some messages\n            template.sendBodyAndHeader(sendUri(), body1, \"irc.target\", \"camel-con\");\n            template.sendBodyAndHeader(sendUri(), body2, \"irc.target\", \"camel-con\");\n        }\n    }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"public void process(Exchange exchange) throws Exception {\n        final String msg = exchange.getIn().getBody(String.class);\n        if (isMessageACommand(msg)) {\n            connection.send(msg);\n        } else {\n            String target = endpoint.getConfiguration().getTarget();\n\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Sending to: \" + target + \" message: \" + msg);\n            }\n            connection.doPrivmsg(target, msg);\n        }\n    }","id":58621,"modified_method":"public void process(Exchange exchange) throws Exception {\n        final String msg = exchange.getIn().getBody(String.class);\n        final String targetChannel = exchange.getIn().getHeader(IrcConstants.IRC_TARGET, String.class);\n        if (isMessageACommand(msg)) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Sending command: \" + msg);\n            }\n            connection.send(msg);\n        } else if (targetChannel != null) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Sending to: \" + targetChannel + \" message: \" + msg);\n            }\n            connection.doPrivmsg(targetChannel, msg);\n        } else {\n            for (String channel : endpoint.getConfiguration().getChannels()) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Sending to: \" + channel + \" message: \" + msg);\n                }\n                connection.doPrivmsg(channel, msg);\n            }\n        }\n    }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected void doStop() throws Exception {\n        if (connection != null) {\n            connection.removeIRCEventListener(ircErrorLogger);\n        }\n        super.doStop();\n    }","id":58622,"modified_method":"@Override\n    protected void doStop() throws Exception {\n        if (connection != null) {\n            for (String channel : endpoint.getConfiguration().getChannels()) {\n                if (LOG.isDebugEnabled()) {\n                    LOG.debug(\"Parting: \" + channel);\n                }\n                connection.doPart(channel);\n            }\n            connection.removeIRCEventListener(ircErrorLogger);\n        }\n        super.doStop();\n    }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"@Override\n    protected void doStart() throws Exception {\n        super.doStart();\n\n        ircErrorLogger = createIrcErrorLogger();\n        connection.addIRCEventListener(ircErrorLogger);\n\n        String target = endpoint.getConfiguration().getTarget();\n        if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Joining: \" + target);\n        }\n        connection.doJoin(target);\n    }","id":58623,"modified_method":"@Override\n    protected void doStart() throws Exception {\n        super.doStart();\n\n        ircErrorLogger = createIrcErrorLogger();\n        connection.addIRCEventListener(ircErrorLogger);\n\n        for (String channel : endpoint.getConfiguration().getChannels()) {\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"Joining: \" + channel);\n            }\n            connection.doJoin(channel);\n        }\n    }","commit_id":"61dd73165c7ba1e1c296669e5b727388491a87b6","url":"https://github.com/apache/camel"},{"original_method":"@Test\n    public void testAliasSearchRoutingWithTwoIndices() throws Exception {\n        createIndex(\"test-a\");\n        createIndex(\"test-b\");\n        client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();\n\n        client().admin().indices().prepareAliases()\n                .addAliasAction(newAddAliasAction(\"test-a\", \"alias-a0\").routing(\"0\"))\n                .addAliasAction(newAddAliasAction(\"test-a\", \"alias-a1\").routing(\"1\"))\n                .addAliasAction(newAddAliasAction(\"test-b\", \"alias-b0\").routing(\"0\"))\n                .addAliasAction(newAddAliasAction(\"test-b\", \"alias-b1\").routing(\"1\"))\n\n                .addAliasAction(newAddAliasAction(\"test-a\", \"alias-ab\").searchRouting(\"0\"))\n                .addAliasAction(newAddAliasAction(\"test-b\", \"alias-ab\").searchRouting(\"1\"))\n                .execute().actionGet();\n\n        logger.info(\"--> indexing with id [1], and routing [0] using alias to test-a\");\n        client().prepareIndex(\"alias-a0\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test-a\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n        logger.info(\"--> verifying get with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"alias-a0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> indexing with id [0], and routing [1] using alias to test-b\");\n        client().prepareIndex(\"alias-b1\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test-a\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n        logger.info(\"--> verifying get with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"alias-b1\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n\n        logger.info(\"--> search with alias-a1,alias-b0, should not find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"alias-a1\", \"alias-b0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(0l));\n            assertThat(client().prepareCount(\"alias-a1\", \"alias-b0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(0l));\n        }\n\n        logger.info(\"--> search with alias-ab, should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"alias-ab\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"alias-ab\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n        logger.info(\"--> search with alias-a0,alias-b1 should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"alias-a0\", \"alias-b1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"alias-a0\", \"alias-b1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n    }","id":58624,"modified_method":"@Test\n    public void testAliasSearchRoutingWithTwoIndices() throws Exception {\n        createIndex(\"test-a\");\n        createIndex(\"test-b\");\n        ensureGreen();\n        IndicesAliasesResponse res = run(admin().indices().prepareAliases()\n                .addAliasAction(newAddAliasAction(\"test-a\", \"alias-a0\").routing(\"0\"))\n                .addAliasAction(newAddAliasAction(\"test-a\", \"alias-a1\").routing(\"1\"))\n                .addAliasAction(newAddAliasAction(\"test-b\", \"alias-b0\").routing(\"0\"))\n                .addAliasAction(newAddAliasAction(\"test-b\", \"alias-b1\").routing(\"1\"))\n                .addAliasAction(newAddAliasAction(\"test-a\", \"alias-ab\").searchRouting(\"0\"))\n                .addAliasAction(newAddAliasAction(\"test-b\", \"alias-ab\").searchRouting(\"1\")));\n        assertThat(res.isAcknowledged(), equalTo(true));\n        ensureGreen(); // wait for events again to make sure we got the aliases on all nodes\n        logger.info(\"--> indexing with id [1], and routing [0] using alias to test-a\");\n        client().prepareIndex(\"alias-a0\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test-a\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n        logger.info(\"--> verifying get with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"alias-a0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> indexing with id [0], and routing [1] using alias to test-b\");\n        client().prepareIndex(\"alias-b1\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test-a\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n        logger.info(\"--> verifying get with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"alias-b1\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n\n        logger.info(\"--> search with alias-a1,alias-b0, should not find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"alias-a1\", \"alias-b0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(0l));\n            assertThat(client().prepareCount(\"alias-a1\", \"alias-b0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(0l));\n        }\n\n        logger.info(\"--> search with alias-ab, should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"alias-ab\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"alias-ab\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n        logger.info(\"--> search with alias-a0,alias-b1 should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"alias-a0\", \"alias-b1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"alias-a0\", \"alias-b1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n    }","commit_id":"4e4529f3dcc1c9b447817680ee4892ea6d35ae8f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testAliasCrudRouting() throws Exception {\n        createIndex(\"test\");\n        client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();\n\n        client().admin().indices().prepareAliases().addAliasAction(newAddAliasAction(\"test\", \"alias0\").routing(\"0\")).execute().actionGet();\n\n        logger.info(\"--> indexing with id [1], and routing [0] using alias\");\n        client().prepareIndex(\"alias0\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n        logger.info(\"--> verifying get with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> verifying get with routing alias, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> updating with id [1] and routing through alias\");\n        client().prepareUpdate(\"alias0\", \"type1\", \"1\")\n                .setUpsertRequest(XContentFactory.jsonBuilder().startObject().field(\"field\", 1).endObject())\n                .setScript(\"ctx._source.field = 'value2'\")\n                .execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().getSourceAsMap().get(\"field\").toString(), equalTo(\"value2\"));\n        }\n\n\n        logger.info(\"--> deleting with no routing, should not delete anything\");\n        client().prepareDelete(\"test\", \"type1\", \"1\").setRefresh(true).execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> deleting with routing alias, should delete\");\n        client().prepareDelete(\"alias0\", \"type1\", \"1\").setRefresh(true).execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n\n        logger.info(\"--> indexing with id [1], and routing [0] using alias\");\n        client().prepareIndex(\"alias0\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n        logger.info(\"--> verifying get with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> deleting_by_query with 1 as routing, should not delete anything\");\n        client().prepareDeleteByQuery().setQuery(matchAllQuery()).setRouting(\"1\").execute().actionGet();\n        client().admin().indices().prepareRefresh().execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> deleting_by_query with alias0, should delete\");\n        client().prepareDeleteByQuery(\"alias0\").setQuery(matchAllQuery()).execute().actionGet();\n        client().admin().indices().prepareRefresh().execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n    }","id":58625,"modified_method":"@Test\n    public void testAliasCrudRouting() throws Exception {\n        createIndex(\"test\");\n        ensureGreen();\n        IndicesAliasesResponse res = run(admin().indices().prepareAliases().addAliasAction(newAddAliasAction(\"test\", \"alias0\").routing(\"0\")));\n        assertThat(res.isAcknowledged(), equalTo(true));\n\n        logger.info(\"--> indexing with id [1], and routing [0] using alias\");\n        client().prepareIndex(\"alias0\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n        logger.info(\"--> verifying get with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> verifying get with routing alias, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> updating with id [1] and routing through alias\");\n        client().prepareUpdate(\"alias0\", \"type1\", \"1\")\n                .setUpsertRequest(XContentFactory.jsonBuilder().startObject().field(\"field\", 1).endObject())\n                .setScript(\"ctx._source.field = 'value2'\")\n                .execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().getSourceAsMap().get(\"field\").toString(), equalTo(\"value2\"));\n        }\n\n\n        logger.info(\"--> deleting with no routing, should not delete anything\");\n        client().prepareDelete(\"test\", \"type1\", \"1\").setRefresh(true).execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> deleting with routing alias, should delete\");\n        client().prepareDelete(\"alias0\", \"type1\", \"1\").setRefresh(true).execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n\n        logger.info(\"--> indexing with id [1], and routing [0] using alias\");\n        client().prepareIndex(\"alias0\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n        logger.info(\"--> verifying get with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> deleting_by_query with 1 as routing, should not delete anything\");\n        client().prepareDeleteByQuery().setQuery(matchAllQuery()).setRouting(\"1\").execute().actionGet();\n        client().admin().indices().prepareRefresh().execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> deleting_by_query with alias0, should delete\");\n        client().prepareDeleteByQuery(\"alias0\").setQuery(matchAllQuery()).execute().actionGet();\n        client().admin().indices().prepareRefresh().execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n    }","commit_id":"4e4529f3dcc1c9b447817680ee4892ea6d35ae8f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testAliasSearchRoutingWithConcreteAndAliasedIndices() throws Exception {\n        try {\n            client().admin().indices().prepareDelete(\"index\").execute().actionGet();\n            client().admin().indices().prepareDelete(\"index_2\").execute().actionGet();\n        } catch (Exception e) {\n            // ignore\n        }\n        client().admin().indices().prepareCreate(\"index\").execute().actionGet();\n        client().admin().indices().prepareCreate(\"index_2\").execute().actionGet();\n        client().admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet();\n\n        client().admin().indices().prepareAliases()\n                .addAliasAction(newAddAliasAction(\"index\", \"index_1\").routing(\"1\"))\n                .execute().actionGet();\n\n        logger.info(\"--> indexing on index_1 which is an alias for index with routing [1]\");\n        client().prepareIndex(\"index_1\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> indexing on index_2 which is a concrete index\");\n        client().prepareIndex(\"index_2\", \"type2\", \"2\").setSource(\"field\", \"value2\").setRefresh(true).execute().actionGet();\n\n\n        logger.info(\"--> search all on index_* should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"index_*\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n        }\n    }","id":58626,"modified_method":"@Test\n    public void testAliasSearchRoutingWithConcreteAndAliasedIndices() throws Exception {\n        createIndex(\"index\", \"index_2\");\n        ensureGreen();\n        IndicesAliasesResponse res = run(admin().indices().prepareAliases()\n                .addAliasAction(newAddAliasAction(\"index\", \"index_1\").routing(\"1\")));\n        assertThat(res.isAcknowledged(), equalTo(true));\n\n        logger.info(\"--> indexing on index_1 which is an alias for index with routing [1]\");\n        client().prepareIndex(\"index_1\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> indexing on index_2 which is a concrete index\");\n        client().prepareIndex(\"index_2\", \"type2\", \"2\").setSource(\"field\", \"value2\").setRefresh(true).execute().actionGet();\n\n\n        logger.info(\"--> search all on index_* should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"index_*\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n        }\n    }","commit_id":"4e4529f3dcc1c9b447817680ee4892ea6d35ae8f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testRequiredRoutingMappingWithAlias() throws Exception {\n        try {\n            client().admin().indices().prepareDelete(\"test\").execute().actionGet();\n        } catch (Exception e) {\n            // ignore\n        }\n        client().admin().indices().prepareCreate(\"test\")\n                .addMapping(\"type1\", XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"_routing\").field(\"required\", true).endObject().endObject().endObject())\n                .execute().actionGet();\n        client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();\n\n        logger.info(\"--> indexing with id [1], and routing [0]\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setRouting(\"0\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n\n        logger.info(\"--> indexing with id [1], with no routing, should fail\");\n        try {\n            client().prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n            assert false;\n        } catch (ElasticSearchException e) {\n            assertThat(e.unwrapCause(), instanceOf(RoutingMissingException.class));\n        }\n\n        logger.info(\"--> verifying get with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> deleting with no routing, should broadcast the delete since _routing is required\");\n        client().prepareDelete(\"test\", \"type1\", \"1\").setRefresh(true).execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(false));\n        }\n\n        logger.info(\"--> indexing with id [1], and routing [0]\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setRouting(\"0\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n\n        logger.info(\"--> bulk deleting with no routing, should broadcast the delete since _routing is required\");\n        client().prepareBulk().add(Requests.deleteRequest(\"test\").type(\"type1\").id(\"1\")).execute().actionGet();\n        client().admin().indices().prepareRefresh().execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(false));\n        }\n    }","id":58627,"modified_method":"@Test\n    public void testRequiredRoutingMappingWithAlias() throws Exception {\n        run(prepareCreate(\"test\").addMapping(\n                \"type1\",\n                XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"_routing\").field(\"required\", true)\n                        .endObject().endObject().endObject()));\n        ensureGreen();\n        logger.info(\"--> indexing with id [1], and routing [0]\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setRouting(\"0\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n\n        logger.info(\"--> indexing with id [1], with no routing, should fail\");\n        try {\n            client().prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n            assert false;\n        } catch (ElasticSearchException e) {\n            assertThat(e.unwrapCause(), instanceOf(RoutingMissingException.class));\n        }\n\n        logger.info(\"--> verifying get with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> deleting with no routing, should broadcast the delete since _routing is required\");\n        client().prepareDelete(\"test\", \"type1\", \"1\").setRefresh(true).execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(false));\n        }\n\n        logger.info(\"--> indexing with id [1], and routing [0]\");\n        client().prepareIndex(\"test\", \"type1\", \"1\").setRouting(\"0\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n\n        logger.info(\"--> bulk deleting with no routing, should broadcast the delete since _routing is required\");\n        client().prepareBulk().add(Requests.deleteRequest(\"test\").type(\"type1\").id(\"1\")).execute().actionGet();\n        client().admin().indices().prepareRefresh().execute().actionGet();\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"0\").execute().actionGet().isExists(), equalTo(false));\n        }\n    }","commit_id":"4e4529f3dcc1c9b447817680ee4892ea6d35ae8f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testAliasSearchRouting() throws Exception {\n        createIndex(\"test\");\n        client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();\n\n        client().admin().indices().prepareAliases()\n                .addAliasAction(newAddAliasAction(\"test\", \"alias\"))\n                .addAliasAction(newAddAliasAction(\"test\", \"alias0\").routing(\"0\"))\n                .addAliasAction(newAddAliasAction(\"test\", \"alias1\").routing(\"1\"))\n                .addAliasAction(newAddAliasAction(\"test\", \"alias01\").searchRouting(\"0,1\"))\n                .execute().actionGet();\n\n\n        logger.info(\"--> indexing with id [1], and routing [0] using alias\");\n        client().prepareIndex(\"alias0\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n        logger.info(\"--> verifying get with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> search with no routing, should fine one\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n        }\n\n        logger.info(\"--> search with wrong routing, should not find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setRouting(\"1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(0l));\n            assertThat(client().prepareCount().setRouting(\"1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(0l));\n            assertThat(client().prepareSearch(\"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(0l));\n            assertThat(client().prepareCount(\"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(0l));\n        }\n\n        logger.info(\"--> search with correct routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setRouting(\"0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount().setRouting(\"0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n            assertThat(client().prepareSearch(\"alias0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount(\"alias0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n        }\n\n        logger.info(\"--> indexing with id [2], and routing [1] using alias\");\n        client().prepareIndex(\"alias1\", \"type1\", \"2\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n\n        logger.info(\"--> search with no routing, should fine two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount().setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n        logger.info(\"--> search with 0 routing, should find one\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setRouting(\"0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount().setRouting(\"0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n            assertThat(client().prepareSearch(\"alias0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount(\"alias0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n        }\n\n        logger.info(\"--> search with 1 routing, should find one\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setRouting(\"1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount().setRouting(\"1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n            assertThat(client().prepareSearch(\"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount(\"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n        }\n\n        logger.info(\"--> search with 0,1 routings , should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setRouting(\"0\", \"1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount().setRouting(\"0\", \"1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n            assertThat(client().prepareSearch(\"alias01\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"alias01\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n        logger.info(\"--> search with two routing aliases , should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"alias0\", \"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"alias0\", \"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n        logger.info(\"--> search with alias0, alias1 and alias01, should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"alias0\", \"alias1\", \"alias01\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"alias0\", \"alias1\", \"alias01\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n        logger.info(\"--> search with test, alias0 and alias1, should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"test\", \"alias0\", \"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"test\", \"alias0\", \"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n    }","id":58628,"modified_method":"@Test\n    public void testAliasSearchRouting() throws Exception {\n        createIndex(\"test\");\n        ensureGreen();\n        IndicesAliasesResponse res = run(admin().indices().prepareAliases()\n                .addAliasAction(newAddAliasAction(\"test\", \"alias\"))\n                .addAliasAction(newAddAliasAction(\"test\", \"alias0\").routing(\"0\"))\n                .addAliasAction(newAddAliasAction(\"test\", \"alias1\").routing(\"1\"))\n                .addAliasAction(newAddAliasAction(\"test\", \"alias01\").searchRouting(\"0,1\")));\n        assertThat(res.isAcknowledged(), equalTo(true));\n\n        logger.info(\"--> indexing with id [1], and routing [0] using alias\");\n        client().prepareIndex(\"alias0\", \"type1\", \"1\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(false));\n        }\n        logger.info(\"--> verifying get with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"alias0\", \"type1\", \"1\").execute().actionGet().isExists(), equalTo(true));\n        }\n\n        logger.info(\"--> search with no routing, should fine one\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n        }\n\n        logger.info(\"--> search with wrong routing, should not find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setRouting(\"1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(0l));\n            assertThat(client().prepareCount().setRouting(\"1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(0l));\n            assertThat(client().prepareSearch(\"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(0l));\n            assertThat(client().prepareCount(\"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(0l));\n        }\n\n        logger.info(\"--> search with correct routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setRouting(\"0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount().setRouting(\"0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n            assertThat(client().prepareSearch(\"alias0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount(\"alias0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n        }\n\n        logger.info(\"--> indexing with id [2], and routing [1] using alias\");\n        client().prepareIndex(\"alias1\", \"type1\", \"2\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n\n        logger.info(\"--> search with no routing, should fine two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount().setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n        logger.info(\"--> search with 0 routing, should find one\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setRouting(\"0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount().setRouting(\"0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n            assertThat(client().prepareSearch(\"alias0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount(\"alias0\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n        }\n\n        logger.info(\"--> search with 1 routing, should find one\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setRouting(\"1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount().setRouting(\"1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n            assertThat(client().prepareSearch(\"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount(\"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n        }\n\n        logger.info(\"--> search with 0,1 routings , should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch().setRouting(\"0\", \"1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount().setRouting(\"0\", \"1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n            assertThat(client().prepareSearch(\"alias01\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"alias01\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n        logger.info(\"--> search with two routing aliases , should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"alias0\", \"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"alias0\", \"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n        logger.info(\"--> search with alias0, alias1 and alias01, should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"alias0\", \"alias1\", \"alias01\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"alias0\", \"alias1\", \"alias01\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n        logger.info(\"--> search with test, alias0 and alias1, should find two\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"test\", \"alias0\", \"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"test\", \"alias0\", \"alias1\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n    }","commit_id":"4e4529f3dcc1c9b447817680ee4892ea6d35ae8f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void testIndexingAliasesOverTime() throws Exception {\n        try {\n            client().admin().indices().prepareDelete(\"test\").execute().actionGet();\n        } catch (Exception e) {\n            // ignore\n        }\n        client().admin().indices().prepareCreate(\"test\").execute().actionGet();\n        client().admin().cluster().prepareHealth().setWaitForEvents(Priority.LANGUID).setWaitForGreenStatus().execute().actionGet();\n\n\n        logger.info(\"--> creating alias with routing [3]\");\n        client().admin().indices().prepareAliases()\n                .addAliasAction(newAddAliasAction(\"test\", \"alias\").routing(\"3\"))\n                .execute().actionGet();\n\n        logger.info(\"--> indexing with id [0], and routing [3]\");\n        client().prepareIndex(\"alias\", \"type1\", \"0\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n\n        logger.info(\"--> verifying get and search with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"0\").setRouting(\"3\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareSearch(\"alias\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount(\"alias\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n        }\n\n        logger.info(\"--> creating alias with routing [4]\");\n        client().admin().indices().prepareAliases()\n                .addAliasAction(newAddAliasAction(\"test\", \"alias\").routing(\"4\"))\n                .execute().actionGet();\n\n        logger.info(\"--> verifying search with wrong routing should not find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"alias\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(0l));\n            assertThat(client().prepareCount(\"alias\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(0l));\n        }\n\n        logger.info(\"--> creating alias with search routing [3,4] and index routing 4\");\n        client().admin().indices().prepareAliases()\n                .addAliasAction(newAddAliasAction(\"test\", \"alias\").searchRouting(\"3,4\").indexRouting(\"4\"))\n                .execute().actionGet();\n\n        logger.info(\"--> indexing with id [1], and routing [4]\");\n        client().prepareIndex(\"alias\", \"type1\", \"1\").setSource(\"field\", \"value2\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n\n        logger.info(\"--> verifying get and search with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"0\").setRouting(\"3\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"4\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareSearch(\"alias\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"alias\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n\n    }","id":58629,"modified_method":"@Test\n    public void testIndexingAliasesOverTime() throws Exception {\n        createIndex(\"test\");\n        ensureGreen();\n        logger.info(\"--> creating alias with routing [3]\");\n        IndicesAliasesResponse res = run(admin().indices().prepareAliases()\n                .addAliasAction(newAddAliasAction(\"test\", \"alias\").routing(\"3\")));\n        assertThat(res.isAcknowledged(), equalTo(true));\n\n        logger.info(\"--> indexing with id [0], and routing [3]\");\n        client().prepareIndex(\"alias\", \"type1\", \"0\").setSource(\"field\", \"value1\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n\n        logger.info(\"--> verifying get and search with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"0\").setRouting(\"3\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareSearch(\"alias\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(1l));\n            assertThat(client().prepareCount(\"alias\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(1l));\n        }\n\n        logger.info(\"--> creating alias with routing [4]\");\n        res = run(admin().indices().prepareAliases()\n                .addAliasAction(newAddAliasAction(\"test\", \"alias\").routing(\"4\")));\n        assertThat(res.isAcknowledged(), equalTo(true));\n\n        logger.info(\"--> verifying search with wrong routing should not find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareSearch(\"alias\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(0l));\n            assertThat(client().prepareCount(\"alias\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(0l));\n        }\n\n        logger.info(\"--> creating alias with search routing [3,4] and index routing 4\");\n        client().admin().indices().prepareAliases()\n                .addAliasAction(newAddAliasAction(\"test\", \"alias\").searchRouting(\"3,4\").indexRouting(\"4\"))\n                .execute().actionGet();\n\n        logger.info(\"--> indexing with id [1], and routing [4]\");\n        client().prepareIndex(\"alias\", \"type1\", \"1\").setSource(\"field\", \"value2\").setRefresh(true).execute().actionGet();\n        logger.info(\"--> verifying get with no routing, should not find anything\");\n\n        logger.info(\"--> verifying get and search with routing, should find\");\n        for (int i = 0; i < 5; i++) {\n            assertThat(client().prepareGet(\"test\", \"type1\", \"0\").setRouting(\"3\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareGet(\"test\", \"type1\", \"1\").setRouting(\"4\").execute().actionGet().isExists(), equalTo(true));\n            assertThat(client().prepareSearch(\"alias\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getHits().totalHits(), equalTo(2l));\n            assertThat(client().prepareCount(\"alias\").setQuery(QueryBuilders.matchAllQuery()).execute().actionGet().getCount(), equalTo(2l));\n        }\n    }","commit_id":"4e4529f3dcc1c9b447817680ee4892ea6d35ae8f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * This test basically verifies that search with a single shard active (cause we indexed to it) and other\n     * shards possibly not active at all (cause they haven't allocated) will still work.\n     */\n    @Test\n    public void searchWhileCreatingIndex() {\n        try {\n            client().admin().indices().prepareDelete(\"test\").execute().actionGet();\n        } catch (Exception e) {\n            // ignore\n        }\n\n        for (int i = 0; i < 20; i++) {\n            client().admin().indices().prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 10)).execute().actionGet();\n\n            client().prepareIndex(\"test\", \"type1\").setSource(\"field\", \"test\").execute().actionGet();\n            client().admin().indices().prepareRefresh().execute().actionGet();\n\n            SearchResponse searchResponse = client().prepareSearch(\"test\").setQuery(QueryBuilders.termQuery(\"field\", \"test\")).execute().actionGet();\n            assertThat(searchResponse.getHits().totalHits(), equalTo(1l));\n\n            client().admin().indices().prepareDelete(\"test\").execute().actionGet();\n        }\n\n        try {\n            client().admin().indices().prepareDelete(\"test\").execute().actionGet();\n        } catch (Exception e) {\n            // ignore\n        }\n    }","id":58630,"modified_method":"/**\n     * This test basically verifies that search with a single shard active (cause we indexed to it) and other\n     * shards possibly not active at all (cause they haven't allocated) will still work.\n     */\n    @Test\n    public void searchWhileCreatingIndex() {\n        for (int i = 0; i < 20; i++) {\n            run(prepareCreate(\"test\").setSettings(settingsBuilder().put(\"index.number_of_shards\", 10)));\n            run(client().prepareIndex(\"test\", \"type1\").setSource(\"field\", \"test\"));\n            refresh();\n            SearchResponse searchResponse = client().prepareSearch(\"test\").setQuery(QueryBuilders.termQuery(\"field\", \"test\")).execute().actionGet();\n            assertThat(\"Found unexpected number of hits ShardFailures:\" + Arrays.toString(searchResponse.getShardFailures()), searchResponse.getHits().totalHits(), equalTo(1l));\n            wipeIndex(\"test\");\n        }\n    }","commit_id":"7e2d8f1358329b72a3c810445cd2047cebbf919f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void simpleDateRangeWithUpperInclusiveDisabledTests() throws Exception {\n        prepareCreate(\"test\").setSettings(ImmutableSettings.settingsBuilder().put(\"index.mapping.date.parse_upper_inclusive\", false)).execute().actionGet();\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field\", \"2010-01-05T02:00\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type1\", \"2\").setSource(\"field\", \"2010-01-06T02:00\").execute().actionGet();\n        client().admin().indices().prepareRefresh().execute().actionGet();\n\n        // test include upper on ranges to include the full day on the upper bound (disabled here though...)\n        SearchResponse searchResponse = client().prepareSearch(\"test\").setQuery(QueryBuilders.rangeQuery(\"field\").gte(\"2010-01-05\").lte(\"2010-01-06\")).execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(1l));\n        searchResponse = client().prepareSearch(\"test\").setQuery(QueryBuilders.rangeQuery(\"field\").gte(\"2010-01-05\").lt(\"2010-01-06\")).execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(1l));\n    }","id":58631,"modified_method":"@Test\n    public void simpleDateRangeWithUpperInclusiveDisabledTests() throws Exception {\n        prepareCreate(\"test\").setSettings(ImmutableSettings.settingsBuilder().put(\"index.mapping.date.parse_upper_inclusive\", false)).execute().actionGet();\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field\", \"2010-01-05T02:00\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type1\", \"2\").setSource(\"field\", \"2010-01-06T02:00\").execute().actionGet();\n        refresh();\n        ensureGreen();\n        // test include upper on ranges to include the full day on the upper bound (disabled here though...)\n        SearchResponse searchResponse = client().prepareSearch(\"test\").setQuery(QueryBuilders.rangeQuery(\"field\").gte(\"2010-01-05\").lte(\"2010-01-06\")).execute().actionGet();\n        assertNoFailures(searchResponse);\n        assertThat(searchResponse.getHits().totalHits(), equalTo(1l));\n        searchResponse = client().prepareSearch(\"test\").setQuery(QueryBuilders.rangeQuery(\"field\").gte(\"2010-01-05\").lt(\"2010-01-06\")).execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(1l));\n    }","commit_id":"7e2d8f1358329b72a3c810445cd2047cebbf919f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Test\n    public void simpleDateMathTests() throws Exception {\n        prepareCreate(\"test\").setSettings(ImmutableSettings.settingsBuilder()).execute().actionGet();\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field\", \"2010-01-05T02:00\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type1\", \"2\").setSource(\"field\", \"2010-01-06T02:00\").execute().actionGet();\n        client().admin().indices().prepareRefresh().execute().actionGet();\n\n        SearchResponse searchResponse = client().prepareSearch(\"test\").setQuery(QueryBuilders.rangeQuery(\"field\").gte(\"2010-01-03||+2d\").lte(\"2010-01-04||+2d\")).execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(2l));\n\n        searchResponse = client().prepareSearch(\"test\").setQuery(QueryBuilders.queryString(\"field:[2010-01-03||+2d TO 2010-01-04||+2d]\")).execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(2l));\n    }","id":58632,"modified_method":"@Test\n    public void simpleDateMathTests() throws Exception {\n        prepareCreate(\"test\").setSettings(ImmutableSettings.settingsBuilder()).execute().actionGet();\n        client().prepareIndex(\"test\", \"type1\", \"1\").setSource(\"field\", \"2010-01-05T02:00\").execute().actionGet();\n        client().prepareIndex(\"test\", \"type1\", \"2\").setSource(\"field\", \"2010-01-06T02:00\").execute().actionGet();\n        refresh();\n        ensureGreen();\n        SearchResponse searchResponse = client().prepareSearch(\"test\").setQuery(QueryBuilders.rangeQuery(\"field\").gte(\"2010-01-03||+2d\").lte(\"2010-01-04||+2d\")).execute().actionGet();\n        assertNoFailures(searchResponse);\n        assertThat(searchResponse.getHits().totalHits(), equalTo(2l));\n\n        searchResponse = client().prepareSearch(\"test\").setQuery(QueryBuilders.queryString(\"field:[2010-01-03||+2d TO 2010-01-04||+2d]\")).execute().actionGet();\n        assertThat(searchResponse.getHits().totalHits(), equalTo(2l));\n    }","commit_id":"7e2d8f1358329b72a3c810445cd2047cebbf919f","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private String getTagLabel()\n        throws MojoExecutionException\n    {\n        if ( userTag == null )\n        {\n            try\n            {\n                if ( tag == null && interactive )\n                {\n                    getLog().info( \"What tag name should be used? \" );\n\n                    String inputTag = inputHandler.readLine();\n\n                    if ( !StringUtils.isEmpty( inputTag ) )\n                    {\n                        userTag = inputTag;\n                    }\n                }\n                else\n                {\n                    userTag = tag;\n                }\n            }\n            catch ( Exception e )\n            {\n                throw new MojoExecutionException( \"An error is occurred in the tag process.\", e );\n            }\n        }\n\n        return userTag;\n    }","id":58633,"modified_method":"private String getTagLabel()\n        throws MojoExecutionException\n    {\n        if ( userTag == null )\n        {\n            try\n            {\n                if ( tag == null && interactive )\n                {\n                    getLog().info( \"What tag name should be used? \" );\n\n                    String inputTag = inputHandler.readLine();\n\n                    if ( !StringUtils.isEmpty( inputTag ) )\n                    {\n                        userTag = inputTag;\n                    }\n                }\n                else\n                {\n                    userTag = tag;\n                }\n            }\n            catch ( Exception e )\n            {\n                throw new MojoExecutionException( \"An error is occurred in the tag process.\", e );\n            }\n        }\n\n        if ( userTag == null )\n        {\n            userTag = releaseProgress.getScmTag();\n        }\n\n        if ( userTag == null )\n        {\n            throw new MojoExecutionException( \"A tag must be specified\" );\n        }\n\n        return userTag;\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void transformPomToReleaseVersionPom( MavenProject project )\n        throws MojoExecutionException\n    {\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_POM_TRANSFORMED_FOR_RELEASE ) )\n        {\n            if ( !isSnapshot( project.getVersion() ) )\n            {\n                throw new MojoExecutionException( \"The project \" + project.getGroupId() + \":\" +\n                    project.getArtifactId() + \" isn't a snapshot (\" + project.getVersion() + \").\" );\n            }\n\n            Model model = project.getOriginalModel();\n\n            //Rewrite parent version\n            if ( model.getParent() != null )\n            {\n                Artifact parentArtifact = project.getParentArtifact();\n\n                if ( isSnapshot( parentArtifact.getBaseVersion() ) )\n                {\n                    String version = resolveVersion( parentArtifact, \"parent\", project );\n\n                    model.getParent().setVersion( version );\n                }\n            }\n\n            //Rewrite dependencies section\n            List dependencies = model.getDependencies();\n\n            if ( dependencies != null )\n            {\n                for ( Iterator i = dependencies.iterator(); i.hasNext(); )\n                {\n                    Dependency dep = (Dependency) i.next();\n\n                    // Avoid in dep mgmt\n                    if ( dep.getVersion() != null )\n                    {\n                        String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),\n                                                                                          dep.getArtifactId() );\n\n                        if ( resolvedVersion != null )\n                        {\n                            dep.setVersion( resolvedVersion );\n                        }\n                    }\n                }\n            }\n\n            DependencyManagement dependencyManagement = model.getDependencyManagement();\n            dependencies = dependencyManagement != null ? dependencyManagement.getDependencies() : null;\n\n            if ( dependencies != null )\n            {\n                for ( Iterator i = dependencies.iterator(); i.hasNext(); )\n                {\n                    Dependency dep = (Dependency) i.next();\n\n                    if ( dep.getVersion() != null )\n                    {\n                        String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),\n                                                                                          dep.getArtifactId() );\n\n                        if ( resolvedVersion != null )\n                        {\n                            dep.setVersion( resolvedVersion );\n                        }\n                    }\n                }\n            }\n\n            Build build = model.getBuild();\n\n            if ( build != null )\n            {\n                //Rewrite plugins section\n                List plugins = build.getPlugins();\n\n                if ( plugins != null )\n                {\n                    for ( Iterator i = plugins.iterator(); i.hasNext(); )\n                    {\n                        Plugin plugin = (Plugin) i.next();\n\n                        // Avoid in plugin mgmt\n                        if ( plugin.getVersion() != null )\n                        {\n                            String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),\n                                                                                              plugin.getArtifactId() );\n\n                            if ( resolvedVersion != null )\n                            {\n                                plugin.setVersion( resolvedVersion );\n                            }\n                        }\n                    }\n                }\n\n                PluginManagement pluginManagement = build.getPluginManagement();\n                plugins = pluginManagement != null ? pluginManagement.getPlugins() : null;\n\n                if ( plugins != null )\n                {\n                    for ( Iterator i = plugins.iterator(); i.hasNext(); )\n                    {\n                        Plugin plugin = (Plugin) i.next();\n\n                        if ( plugin.getVersion() != null )\n                        {\n                            String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),\n                                                                                              plugin.getArtifactId() );\n\n                            if ( resolvedVersion != null )\n                            {\n                                plugin.setVersion( resolvedVersion );\n                            }\n                        }\n                    }\n                }\n\n                //Rewrite extensions section\n                List extensions = build.getExtensions();\n\n                for ( Iterator i = extensions.iterator(); i.hasNext(); )\n                {\n                    Extension ext = (Extension) i.next();\n\n                    String resolvedVersion = getVersionResolver().getResolvedVersion( ext.getGroupId(),\n                                                                                      ext.getArtifactId() );\n\n                    if ( resolvedVersion != null )\n                    {\n                        ext.setVersion( resolvedVersion );\n                    }\n                }\n            }\n\n            Reporting reporting = model.getReporting();\n\n            if ( reporting != null )\n            {\n                //Rewrite reports section\n                List reports = reporting.getPlugins();\n\n                for ( Iterator i = reports.iterator(); i.hasNext(); )\n                {\n                    ReportPlugin plugin = (ReportPlugin) i.next();\n\n                    String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),\n                                                                                      plugin.getArtifactId() );\n\n                    if ( resolvedVersion != null )\n                    {\n                        plugin.setVersion( resolvedVersion );\n                    }\n                }\n            }\n\n            Writer writer = null;\n\n            try\n            {\n                writer = new FileWriter( project.getFile() );\n\n                project.writeOriginalModel( writer );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write released version of pom to: \" + project.getFile(), e );\n            }\n            finally\n            {\n                IOUtil.close( writer );\n            }\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_POM_TRANSFORMED_FOR_RELEASE );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","id":58634,"modified_method":"private void transformPomToReleaseVersionPom( MavenProject project )\n        throws MojoExecutionException\n    {\n        if ( !isSnapshot( project.getVersion() ) )\n        {\n            throw new MojoExecutionException( \"The project \" + project.getGroupId() + \":\" + project.getArtifactId() +\n                \" isn't a snapshot (\" + project.getVersion() + \").\" );\n        }\n\n        Model model = project.getOriginalModel();\n\n        //Rewrite parent version\n        if ( model.getParent() != null )\n        {\n            Artifact parentArtifact = project.getParentArtifact();\n\n            if ( isSnapshot( parentArtifact.getBaseVersion() ) )\n            {\n                String version = resolveVersion( parentArtifact, \"parent\", project );\n\n                model.getParent().setVersion( version );\n            }\n        }\n\n        //Rewrite dependencies section\n        List dependencies = model.getDependencies();\n\n        if ( dependencies != null )\n        {\n            for ( Iterator i = dependencies.iterator(); i.hasNext(); )\n            {\n                Dependency dep = (Dependency) i.next();\n\n                // Avoid in dep mgmt\n                if ( dep.getVersion() != null )\n                {\n                    String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),\n                                                                                      dep.getArtifactId() );\n\n                    if ( resolvedVersion != null )\n                    {\n                        dep.setVersion( resolvedVersion );\n                    }\n                }\n            }\n        }\n\n        DependencyManagement dependencyManagement = model.getDependencyManagement();\n        dependencies = dependencyManagement != null ? dependencyManagement.getDependencies() : null;\n\n        if ( dependencies != null )\n        {\n            for ( Iterator i = dependencies.iterator(); i.hasNext(); )\n            {\n                Dependency dep = (Dependency) i.next();\n\n                if ( dep.getVersion() != null )\n                {\n                    String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),\n                                                                                      dep.getArtifactId() );\n\n                    if ( resolvedVersion != null )\n                    {\n                        dep.setVersion( resolvedVersion );\n                    }\n                }\n            }\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            //Rewrite plugins section\n            List plugins = build.getPlugins();\n\n            if ( plugins != null )\n            {\n                for ( Iterator i = plugins.iterator(); i.hasNext(); )\n                {\n                    Plugin plugin = (Plugin) i.next();\n\n                    // Avoid in plugin mgmt\n                    if ( plugin.getVersion() != null )\n                    {\n                        String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),\n                                                                                          plugin.getArtifactId() );\n\n                        if ( resolvedVersion != null )\n                        {\n                            plugin.setVersion( resolvedVersion );\n                        }\n                    }\n                }\n            }\n\n            PluginManagement pluginManagement = build.getPluginManagement();\n            plugins = pluginManagement != null ? pluginManagement.getPlugins() : null;\n\n            if ( plugins != null )\n            {\n                for ( Iterator i = plugins.iterator(); i.hasNext(); )\n                {\n                    Plugin plugin = (Plugin) i.next();\n\n                    if ( plugin.getVersion() != null )\n                    {\n                        String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),\n                                                                                          plugin.getArtifactId() );\n\n                        if ( resolvedVersion != null )\n                        {\n                            plugin.setVersion( resolvedVersion );\n                        }\n                    }\n                }\n            }\n\n            //Rewrite extensions section\n            List extensions = build.getExtensions();\n\n            for ( Iterator i = extensions.iterator(); i.hasNext(); )\n            {\n                Extension ext = (Extension) i.next();\n\n                String resolvedVersion = getVersionResolver().getResolvedVersion( ext.getGroupId(),\n                                                                                  ext.getArtifactId() );\n\n                if ( resolvedVersion != null )\n                {\n                    ext.setVersion( resolvedVersion );\n                }\n            }\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            //Rewrite reports section\n            List reports = reporting.getPlugins();\n\n            for ( Iterator i = reports.iterator(); i.hasNext(); )\n            {\n                ReportPlugin plugin = (ReportPlugin) i.next();\n\n                String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),\n                                                                                  plugin.getArtifactId() );\n\n                if ( resolvedVersion != null )\n                {\n                    plugin.setVersion( resolvedVersion );\n                }\n            }\n        }\n\n        Writer writer = null;\n\n        try\n        {\n            writer = new FileWriter( project.getFile() );\n\n            project.writeOriginalModel( writer );\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Cannot write released version of pom to: \" + project.getFile(), e );\n        }\n        finally\n        {\n            IOUtil.close( writer );\n        }\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"protected ReleaseProgressTracker getReleaseProgress()\n        throws MojoExecutionException\n    {\n        if ( releaseProgress == null )\n        {\n            if ( resume )\n            {\n                try\n                {\n                    releaseProgress = ReleaseProgressTracker.load( basedir );\n\n                    releaseProgress.verifyResumeCapable();\n                }\n                catch ( IOException e )\n                {\n                    throw new MojoExecutionException(\n                        \"Cannot read existing release progress file from directory: \" + basedir + \". Cannot resume.\" );\n                }\n            }\n            else\n            {\n                try\n                {\n                    releaseProgress = ReleaseProgressTracker.loadOrCreate( basedir );\n                }\n                catch ( IOException e )\n                {\n                    getLog().warn( \"Cannot read existing release progress file from directory: \" + basedir +\n                        \". Creating new instance.\" );\n                }\n\n                releaseProgress.setResumeAtCheckpoint( resume );\n\n                releaseProgress.setUsername( username );\n\n                if ( password != null )\n                {\n                    releaseProgress.setPassword( password );\n                }\n\n                releaseProgress.setScmTag( getTagLabel() );\n\n                releaseProgress.setScmTagBase( tagBase );\n\n                releaseProgress.setScmUrl( urlScm );\n            }\n        }\n\n        return releaseProgress;\n    }","id":58635,"modified_method":"protected ReleaseProgressTracker getReleaseProgress()\n        throws MojoExecutionException\n    {\n        if ( releaseProgress == null )\n        {\n            try\n            {\n                releaseProgress = ReleaseProgressTracker.loadOrCreate( basedir );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Cannot read existing release progress file from directory: \" + basedir + \".\" );\n                getLog().debug( \"Cause\", e );\n\n                releaseProgress = ReleaseProgressTracker.create();\n            }\n\n            if ( resume )\n            {\n                releaseProgress.setResumeAtCheckpoint( true );\n            }\n\n            if ( releaseProgress.getUsername() == null )\n            {\n                releaseProgress.setUsername( username );\n            }\n\n            if ( releaseProgress.getPassword() == null && password != null )\n            {\n                releaseProgress.setPassword( password );\n            }\n\n            if ( releaseProgress.getScmTag() == null )\n            {\n                releaseProgress.setScmTag( getTagLabel() );\n            }\n\n            if ( releaseProgress.getScmTagBase() == null )\n            {\n                releaseProgress.setScmTagBase( tagBase );\n            }\n\n            if ( releaseProgress.getScmUrl() == null )\n            {\n                releaseProgress.setScmUrl( urlScm );\n            }\n\n            if ( releaseProgress.getUsername() == null || releaseProgress.getScmTag() == null ||\n                releaseProgress.getScmTagBase() == null || releaseProgress.getScmUrl() == null )\n            {\n                throw new MojoExecutionException( \"Missing release preparation information.\" );\n            }\n        }\n        return releaseProgress;\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"protected void executeTask()\n        throws MojoExecutionException\n    {\n        try\n        {\n            getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_INITIALIZED );\n        }\n        catch ( IOException e )\n        {\n            getLog().warn( \"Error writing checkpoint.\", e );\n        }\n\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_PREPARED_RELEASE ) )\n        {\n            checkForLocalModifications();\n\n            for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n            {\n                MavenProject project = (MavenProject) it.next();\n\n                getVersionResolver().resolveVersion( project );\n\n                getScmRewriter().rewriteScmInfo( project, getTagLabel() );\n            }\n\n            for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n            {\n                MavenProject project = (MavenProject) it.next();\n\n                checkForPresenceOfSnapshots( project );\n\n                transformPomToReleaseVersionPom( project );\n            }\n\n            generateReleasePoms();\n\n            checkInRelease();\n\n            tagRelease();\n\n            for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n            {\n                MavenProject project = (MavenProject) it.next();\n\n                getVersionResolver().incrementVersion( project );\n\n                getScmRewriter().restoreScmInfo( project );\n            }\n\n            for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n            {\n                MavenProject project = (MavenProject) it.next();\n\n                transformPomToSnapshotVersionPom( project );\n            }\n\n            removeReleasePoms();\n\n            checkInNextSnapshot();\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_PREPARED_RELEASE );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","id":58636,"modified_method":"protected void executeTask()\n        throws MojoExecutionException\n    {\n        try\n        {\n            getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_INITIALIZED );\n        }\n        catch ( IOException e )\n        {\n            getLog().warn( \"Error writing checkpoint.\", e );\n        }\n\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_PREPARED_RELEASE ) )\n        {\n            checkForLocalModifications();\n\n            if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_POM_TRANSFORMED_FOR_RELEASE ) )\n            {\n                for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n                {\n                    MavenProject project = (MavenProject) it.next();\n\n                    getVersionResolver().resolveVersion( project );\n\n                    getScmRewriter().rewriteScmInfo( project, getTagLabel() );\n                }\n\n                for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n                {\n                    MavenProject project = (MavenProject) it.next();\n\n                    checkForPresenceOfSnapshots( project );\n\n                    transformPomToReleaseVersionPom( project );\n                }\n\n                try\n                {\n                    getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_POM_TRANSFORMED_FOR_RELEASE );\n                }\n                catch ( IOException e )\n                {\n                    getLog().warn( \"Error writing checkpoint.\", e );\n                }\n\n            }\n\n            generateReleasePoms();\n\n            checkInRelease();\n\n            tagRelease();\n\n            for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n            {\n                MavenProject project = (MavenProject) it.next();\n\n                getVersionResolver().incrementVersion( project );\n\n                getScmRewriter().restoreScmInfo( project );\n            }\n\n            if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_POM_TRANSORMED_FOR_DEVELOPMENT ) )\n            {\n                for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n                {\n                    MavenProject project = (MavenProject) it.next();\n\n                    transformPomToSnapshotVersionPom( project );\n                }\n\n                try\n                {\n                    getReleaseProgress().checkpoint( basedir,\n                                                     ReleaseProgressTracker.CP_POM_TRANSORMED_FOR_DEVELOPMENT );\n                }\n                catch ( IOException e )\n                {\n                    getLog().warn( \"Error writing checkpoint.\", e );\n                }\n            }\n\n            removeReleasePoms();\n\n            checkInNextSnapshot();\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_PREPARED_RELEASE );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Check in the POM to SCM after it has been transformed where the version has been\n     * set to the release version.\n     *\n     * @throws MojoExecutionException\n     */\n    private void checkInRelease()\n        throws MojoExecutionException\n    {\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_CHECKED_IN_RELEASE_VERSION ) )\n        {\n            checkIn( \"**/pom.xml,**/release-pom.xml\", \"[maven-release-plugin] prepare release\" );\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_CHECKED_IN_RELEASE_VERSION );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","id":58637,"modified_method":"/**\n     * Check in the POM to SCM after it has been transformed where the version has been\n     * set to the release version.\n     *\n     * @throws MojoExecutionException\n     */\n    private void checkInRelease()\n        throws MojoExecutionException\n    {\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_CHECKED_IN_RELEASE_VERSION ) )\n        {\n            checkIn( \"**/pom.xml,**/release-pom.xml\", \"[maven-release-plugin] prepare release \" + getTagLabel() );\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_CHECKED_IN_RELEASE_VERSION );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void transformPomToSnapshotVersionPom( MavenProject project )\n        throws MojoExecutionException\n    {\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_POM_TRANSORMED_FOR_DEVELOPMENT ) )\n        {\n            if ( isSnapshot( project.getVersion() ) )\n            {\n                throw new MojoExecutionException( \"This project is a snapshot (\" + project.getVersion() +\n                    \"). It appears that the release version has not been committed.\" );\n            }\n\n            Model model = project.getOriginalModel();\n\n            ProjectVersionResolver versionResolver = getVersionResolver();\n\n            Parent parent = model.getParent();\n\n            //Rewrite parent version\n            if ( parent != null )\n            {\n                String incrementedVersion = versionResolver.getResolvedVersion( parent.getGroupId(), parent\n                    .getArtifactId() );\n\n                if ( incrementedVersion != null )\n                {\n                    parent.setVersion( incrementedVersion );\n                }\n            }\n\n            //Rewrite dependencies section\n            List dependencies = model.getDependencies();\n\n            if ( dependencies != null )\n            {\n                for ( Iterator i = dependencies.iterator(); i.hasNext(); )\n                {\n                    Dependency dep = (Dependency) i.next();\n\n                    String version = versionResolver.getResolvedVersion( dep.getGroupId(), dep.getArtifactId() );\n\n                    if ( version != null )\n                    {\n                        dep.setVersion( version );\n                    }\n                }\n            }\n\n            //Rewrite plugins section\n            Build build = model.getBuild();\n\n            if ( build != null )\n            {\n                List plugins = build.getPlugins();\n\n                if ( plugins != null )\n                {\n                    for ( Iterator i = plugins.iterator(); i.hasNext(); )\n                    {\n                        Plugin plugin = (Plugin) i.next();\n\n                        String version = versionResolver.getResolvedVersion( plugin.getGroupId(), plugin\n                            .getArtifactId() );\n\n                        if ( version != null )\n                        {\n                            plugin.setVersion( version );\n                        }\n                    }\n                }\n\n                //Rewrite extensions section\n                List extensions = build.getExtensions();\n\n                for ( Iterator i = extensions.iterator(); i.hasNext(); )\n                {\n                    Extension ext = (Extension) i.next();\n\n                    String version = versionResolver.getResolvedVersion( ext.getGroupId(), ext.getArtifactId() );\n\n                    if ( version != null )\n                    {\n                        ext.setVersion( version );\n                    }\n                }\n            }\n\n            Reporting reporting = model.getReporting();\n\n            if ( reporting != null )\n            {\n                //Rewrite reports section\n                List reports = reporting.getPlugins();\n\n                if ( reports != null )\n                {\n                    for ( Iterator i = reports.iterator(); i.hasNext(); )\n                    {\n                        ReportPlugin plugin = (ReportPlugin) i.next();\n\n                        String version = versionResolver.getResolvedVersion( plugin.getGroupId(), plugin\n                            .getArtifactId() );\n\n                        if ( version != null )\n                        {\n                            plugin.setVersion( version );\n                        }\n                    }\n                }\n            }\n\n            Writer writer = null;\n\n            try\n            {\n                writer = new FileWriter( project.getFile() );\n\n                project.writeOriginalModel( writer );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write development version of pom to: \" + project.getFile(),\n                                                  e );\n            }\n            finally\n            {\n                IOUtil.close( writer );\n            }\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_POM_TRANSORMED_FOR_DEVELOPMENT );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","id":58638,"modified_method":"private void transformPomToSnapshotVersionPom( MavenProject project )\n        throws MojoExecutionException\n    {\n        if ( isSnapshot( project.getVersion() ) )\n        {\n            throw new MojoExecutionException( \"This project is a snapshot (\" + project.getVersion() +\n                \"). It appears that the release version has not been committed.\" );\n        }\n\n        Model model = project.getOriginalModel();\n\n        ProjectVersionResolver versionResolver = getVersionResolver();\n\n        Parent parent = model.getParent();\n\n        //Rewrite parent version\n        if ( parent != null )\n        {\n            String incrementedVersion = versionResolver.getResolvedVersion( parent.getGroupId(), parent\n                .getArtifactId() );\n\n            if ( incrementedVersion != null )\n            {\n                parent.setVersion( incrementedVersion );\n            }\n        }\n\n        //Rewrite dependencies section\n        List dependencies = model.getDependencies();\n\n        if ( dependencies != null )\n        {\n            for ( Iterator i = dependencies.iterator(); i.hasNext(); )\n            {\n                Dependency dep = (Dependency) i.next();\n\n                String version = versionResolver.getResolvedVersion( dep.getGroupId(), dep.getArtifactId() );\n\n                if ( version != null )\n                {\n                    dep.setVersion( version );\n                }\n            }\n        }\n\n        //Rewrite plugins section\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            List plugins = build.getPlugins();\n\n            if ( plugins != null )\n            {\n                for ( Iterator i = plugins.iterator(); i.hasNext(); )\n                {\n                    Plugin plugin = (Plugin) i.next();\n\n                    String version = versionResolver.getResolvedVersion( plugin.getGroupId(), plugin\n                        .getArtifactId() );\n\n                    if ( version != null )\n                    {\n                        plugin.setVersion( version );\n                    }\n                }\n            }\n\n            //Rewrite extensions section\n            List extensions = build.getExtensions();\n\n            for ( Iterator i = extensions.iterator(); i.hasNext(); )\n            {\n                Extension ext = (Extension) i.next();\n\n                String version = versionResolver.getResolvedVersion( ext.getGroupId(), ext.getArtifactId() );\n\n                if ( version != null )\n                {\n                    ext.setVersion( version );\n                }\n            }\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            //Rewrite reports section\n            List reports = reporting.getPlugins();\n\n            if ( reports != null )\n            {\n                for ( Iterator i = reports.iterator(); i.hasNext(); )\n                {\n                    ReportPlugin plugin = (ReportPlugin) i.next();\n\n                    String version = versionResolver.getResolvedVersion( plugin.getGroupId(), plugin\n                        .getArtifactId() );\n\n                    if ( version != null )\n                    {\n                        plugin.setVersion( version );\n                    }\n                }\n            }\n\n            Writer writer = null;\n\n            try\n            {\n                writer = new FileWriter( project.getFile() );\n\n                project.writeOriginalModel( writer );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write development version of pom to: \" + project.getFile(),\n                                                  e );\n            }\n            finally\n            {\n                IOUtil.close( writer );\n            }\n        }\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Check the POM in an attempt to remove all instances of SNAPSHOTs in preparation for a release. The goal\n     * is to make the build reproducable so the removal of SNAPSHOTs is a necessary one.\n     *\n     * A check is made to ensure any parents in the lineage are released, that all the dependencies are\n     * released and that any plugins utilized by this project are released.\n     *\n     * @throws MojoExecutionException\n     */\n    private void checkForPresenceOfSnapshots( MavenProject project )\n        throws MojoExecutionException\n    {\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_SNAPSHOTS_CHECKED ) )\n        {\n            getLog().info( \"Checking lineage for snapshots ...\" );\n\n            MavenProject currentProject = project;\n\n            while ( currentProject.hasParent() )\n            {\n                MavenProject parentProject = currentProject.getParent();\n\n                String parentVersion = getVersionResolver().getResolvedVersion( parentProject.getGroupId(),\n                                                                                parentProject.getArtifactId() );\n\n                if ( isSnapshot( parentVersion ) )\n                {\n                    throw new MojoExecutionException( \"Can't release project due to non released parent.\" );\n                }\n\n                currentProject = parentProject;\n            }\n\n            getLog().info( \"Checking dependencies for snapshots ...\" );\n\n            Set snapshotDependencies = new HashSet();\n\n            for ( Iterator i = project.getArtifacts().iterator(); i.hasNext(); )\n            {\n                Artifact artifact = (Artifact) i.next();\n\n                String artifactVersion = getVersionResolver().getResolvedVersion( artifact.getGroupId(),\n                                                                                  artifact.getArtifactId() );\n\n                if ( artifactVersion == null )\n                {\n                    artifactVersion = artifact.getVersion();\n                }\n\n                if ( isSnapshot( artifactVersion ) )\n                {\n                    snapshotDependencies.add( artifact );\n                }\n            }\n\n            getLog().info( \"Checking plugins for snapshots ...\" );\n\n            for ( Iterator i = project.getPluginArtifacts().iterator(); i.hasNext(); )\n            {\n                Artifact artifact = (Artifact) i.next();\n\n                String artifactVersion = getVersionResolver().getResolvedVersion( artifact.getGroupId(),\n                                                                                  artifact.getArtifactId() );\n\n                if ( artifactVersion == null )\n                {\n                    artifactVersion = artifact.getVersion();\n                }\n\n                if ( isSnapshot( artifactVersion ) )\n                {\n                    snapshotDependencies.add( artifact );\n                }\n            }\n\n            if ( !snapshotDependencies.isEmpty() )\n            {\n                List snapshotsList = new ArrayList( snapshotDependencies );\n\n                Collections.sort( snapshotsList );\n\n                StringBuffer message = new StringBuffer();\n\n                for ( Iterator i = snapshotsList.iterator(); i.hasNext(); )\n                {\n                    Artifact artifact = (Artifact) i.next();\n\n                    message.append( \"    \" );\n\n                    message.append( artifact.getId() );\n\n                    message.append( \"\\n\" );\n                }\n\n                throw new MojoExecutionException(\n                    \"Can't release project due to non released dependencies :\\n\" + message.toString() );\n            }\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_SNAPSHOTS_CHECKED );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","id":58639,"modified_method":"/**\n     * Check the POM in an attempt to remove all instances of SNAPSHOTs in preparation for a release. The goal\n     * is to make the build reproducable so the removal of SNAPSHOTs is a necessary one.\n     *\n     * A check is made to ensure any parents in the lineage are released, that all the dependencies are\n     * released and that any plugins utilized by this project are released.\n     *\n     * @throws MojoExecutionException\n     */\n    private void checkForPresenceOfSnapshots( MavenProject project )\n        throws MojoExecutionException\n    {\n        getLog().info( \"Checking lineage for snapshots ...\" );\n\n        MavenProject currentProject = project;\n\n        while ( currentProject.hasParent() )\n        {\n            MavenProject parentProject = currentProject.getParent();\n\n            String parentVersion = getVersionResolver().getResolvedVersion( parentProject.getGroupId(),\n                                                                            parentProject.getArtifactId() );\n\n            if ( isSnapshot( parentVersion ) )\n            {\n                throw new MojoExecutionException( \"Can't release project due to non released parent.\" );\n            }\n\n            currentProject = parentProject;\n        }\n\n        getLog().info( \"Checking dependencies for snapshots ...\" );\n\n        Set snapshotDependencies = new HashSet();\n\n        for ( Iterator i = project.getArtifacts().iterator(); i.hasNext(); )\n        {\n            Artifact artifact = (Artifact) i.next();\n\n            String artifactVersion = getVersionResolver().getResolvedVersion( artifact.getGroupId(),\n                                                                              artifact.getArtifactId() );\n\n            if ( artifactVersion == null )\n            {\n                artifactVersion = artifact.getVersion();\n            }\n\n            if ( isSnapshot( artifactVersion ) )\n            {\n                snapshotDependencies.add( artifact );\n            }\n        }\n\n        getLog().info( \"Checking plugins for snapshots ...\" );\n\n        for ( Iterator i = project.getPluginArtifacts().iterator(); i.hasNext(); )\n        {\n            Artifact artifact = (Artifact) i.next();\n\n            String artifactVersion = getVersionResolver().getResolvedVersion( artifact.getGroupId(),\n                                                                              artifact.getArtifactId() );\n\n            if ( artifactVersion == null )\n            {\n                artifactVersion = artifact.getVersion();\n            }\n\n            if ( isSnapshot( artifactVersion ) )\n            {\n                snapshotDependencies.add( artifact );\n            }\n        }\n\n        if ( !snapshotDependencies.isEmpty() )\n        {\n            List snapshotsList = new ArrayList( snapshotDependencies );\n\n            Collections.sort( snapshotsList );\n\n            StringBuffer message = new StringBuffer();\n\n            for ( Iterator i = snapshotsList.iterator(); i.hasNext(); )\n            {\n                Artifact artifact = (Artifact) i.next();\n\n                message.append( \"    \" );\n\n                message.append( artifact.getId() );\n\n                message.append( \"\\n\" );\n            }\n\n            throw new MojoExecutionException(\n                \"Can't release project due to non released dependencies :\\n\" + message.toString() );\n        }\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"ScmInfo( String tag, String connection, String developerConnection )\n        {\n            this.tag = tag;\n            this.connection = connection;\n            this.developerConnection = developerConnection;\n        }","id":58640,"modified_method":"ScmInfo( String tag, String connection, String developerConnection, String url )\n        {\n            this.tag = tag;\n            this.connection = connection;\n            this.developerConnection = developerConnection;\n            this.url = url;\n        }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"void modify( MavenProject project )\n        {\n            Model model = project.getModel();\n\n            if ( model.getScm() != null )\n            {\n                model.getScm().setTag( tag );\n\n                model.getScm().setConnection( connection );\n\n                model.getScm().setDeveloperConnection( developerConnection );\n            }\n        }","id":58641,"modified_method":"void modify( MavenProject project )\n        {\n            Model model = project.getOriginalModel();\n\n            Scm scm = model.getScm();\n            if ( scm != null )\n            {\n                scm.setTag( tag );\n\n                scm.setConnection( connection );\n\n                scm.setDeveloperConnection( developerConnection );\n\n                scm.setUrl( url );\n            }\n        }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"private String rewriteScmConnection( String scmConnection, String tag )\n    {\n        if ( scmConnection != null )\n        {\n            if ( scmConnection.startsWith( \"svn\" ) )\n            {\n                if ( scmConnection.endsWith( \"trunk/\" ) )\n                {\n                    scmConnection = scmConnection.substring( 0, scmConnection.length() - \"trunk/\".length() );\n                }\n                if ( scmConnection.endsWith( \"branches/\" ) )\n                {\n                    scmConnection = scmConnection.substring( 0, scmConnection.length() - \"branches/\".length() );\n                }\n                scmConnection += \"tags/\" + tag;\n            }\n        }\n\n        return scmConnection;\n    }","id":58642,"modified_method":"private void rewriteScmConnection( Scm scm, String tag )\n    {\n        if ( scm != null )\n        {\n            String scmConnection = scm.getConnection();\n            if ( scmConnection != null && scmConnection.startsWith( \"scm:svn\" ) )\n            {\n                scm.setConnection( convertSvnConnectionString( scmConnection, tag ) );\n                scm.setDeveloperConnection( convertSvnConnectionString( scm.getDeveloperConnection(), tag ) );\n                scm.setUrl( convertSvnConnectionString( scm.getUrl(), tag ) );\n            }\n        }\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void rewriteScmInfo( MavenProject project, String tagLabel )\n        throws MojoExecutionException\n    {\n        String projectId = ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() );\n\n        if ( originalScmInformation.containsKey( projectId ) )\n        {\n            throw new IllegalArgumentException( \"Project: \" + projectId +\n                \" already has it's original SCM info cached. Each project should only be resolved once.\" );\n        }\n\n        Model model = project.getModel();\n\n        Scm scm = model.getScm();\n\n        if ( scm == null )\n        {\n            throw new MojoExecutionException(\n                \"Project: \" + projectId + \" does not have a SCM section! Cannot proceed with release.\" );\n        }\n\n        String tag = model.getScm().getTag();\n\n        String connection = model.getScm().getConnection();\n\n        String developerConnection = model.getScm().getDeveloperConnection();\n\n        ScmInfo info = new ScmInfo( tag, connection, developerConnection );\n\n        originalScmInformation.put( projectId, info );\n\n        scm.setTag( tagLabel );\n\n        scm.setConnection( rewriteScmConnection( connection, tagLabel ) );\n\n        scm.setDeveloperConnection( rewriteScmConnection( developerConnection, tagLabel ) );\n    }","id":58643,"modified_method":"public void rewriteScmInfo( MavenProject project, String tagLabel )\n        throws MojoExecutionException\n    {\n        String projectId = ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() );\n\n        if ( originalScmInformation.containsKey( projectId ) )\n        {\n            throw new IllegalArgumentException( \"Project: \" + projectId +\n                \" already has it's original SCM info cached. Each project should only be resolved once.\" );\n        }\n\n        if ( project.getScm() == null )\n        {\n            throw new MojoExecutionException(\n                \"Project: \" + projectId + \" does not have a SCM section! Cannot proceed with release.\" );\n        }\n\n        Model model = project.getOriginalModel();\n\n        Scm scm = model.getScm();\n        // If SCM is null in original model, it is inherited, no mods needed\n        if ( scm != null )\n        {\n            String tag = scm.getTag();\n\n            String connection = scm.getConnection();\n\n            String developerConnection = scm.getDeveloperConnection();\n\n            String url = scm.getUrl();\n\n            ScmInfo info = new ScmInfo( tag, connection, developerConnection, url );\n\n            originalScmInformation.put( projectId, info );\n\n            rewriteScmConnection( scm, tagLabel );\n        }\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void incrementVersion( MavenProject project )\n        throws MojoExecutionException\n    {\n        String projectId = ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() );\n\n        String projectVersion = (String) resolvedVersions.get( projectId );\n\n        if ( projectVersion == null )\n        {\n            throw new IllegalArgumentException(\n                \"Project \\'\" + projectId + \"\\' has not been resolved. Cannot increment an unresolved version.\" );\n        }\n\n        // TODO: we will need to incorporate versioning strategies here because it is unlikely\n        // that everyone will be able to agree on a standard. This is extremely limited right\n        // now and really only works for the way maven is versioned.\n\n        // releaseVersion = 1.0-beta-4\n        // snapshotVersion = 1.0-beta-5-SNAPSHOT\n\n        String nextVersionString = projectVersion.substring( projectVersion.lastIndexOf( \"-\" ) + 1 );\n\n        try\n        {\n            nextVersionString = Integer.toString( Integer.parseInt( nextVersionString ) + 1 );\n\n            projectVersion = projectVersion.substring( 0, projectVersion.lastIndexOf( \"-\" ) + 1 ) + nextVersionString +\n                SNAPSHOT_CLASSIFIER;\n        }\n        catch ( NumberFormatException e )\n        {\n            projectVersion = \"\";\n        }\n\n        if ( interactive )\n        {\n            try\n            {\n                log.info( \"What is the new development version for \\'\" + projectId + \"\\'? [\" + projectVersion + \"]\" );\n\n                String inputVersion = inputHandler.readLine();\n\n                if ( !StringUtils.isEmpty( inputVersion ) )\n                {\n                    projectVersion = inputVersion;\n                }\n\n                project.setVersion( projectVersion );\n\n                resolvedVersions.put( projectId, projectVersion );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Can't read next development version from user input.\", e );\n            }\n        }\n        else if ( \"\".equals( projectVersion ) )\n        {\n            throw new MojoExecutionException( \"Cannot determine incremented development version for: \" + projectId );\n        }\n    }","id":58644,"modified_method":"public void incrementVersion( MavenProject project )\n        throws MojoExecutionException\n    {\n        String projectId = ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() );\n\n        String projectVersion = (String) resolvedVersions.get( projectId );\n\n        if ( projectVersion == null )\n        {\n            throw new IllegalArgumentException(\n                \"Project \\'\" + projectId + \"\\' has not been resolved. Cannot increment an unresolved version.\" );\n        }\n\n        // TODO: we will need to incorporate versioning strategies here because it is unlikely\n        // that everyone will be able to agree on a standard. This is extremely limited right\n        // now and really only works for the way maven is versioned.\n\n        // releaseVersion = 1.0-beta-4\n        // snapshotVersion = 1.0-beta-5-SNAPSHOT\n\n        String nextVersionString = projectVersion.substring( projectVersion.lastIndexOf( \"-\" ) + 1 );\n\n        try\n        {\n            nextVersionString = Integer.toString( Integer.parseInt( nextVersionString ) + 1 );\n\n            projectVersion = projectVersion.substring( 0, projectVersion.lastIndexOf( \"-\" ) + 1 ) + nextVersionString +\n                SNAPSHOT_CLASSIFIER;\n        }\n        catch ( NumberFormatException e )\n        {\n            projectVersion = \"\";\n        }\n\n        if ( interactive )\n        {\n            try\n            {\n                log.info( \"What is the new development version for \\'\" + projectId + \"\\'? [\" + projectVersion + \"]\" );\n\n                String inputVersion = inputHandler.readLine();\n\n                if ( !StringUtils.isEmpty( inputVersion ) )\n                {\n                    projectVersion = inputVersion;\n                }\n\n                project.getOriginalModel().setVersion( projectVersion );\n\n                resolvedVersions.put( projectId, projectVersion );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Can't read next development version from user input.\", e );\n            }\n        }\n        else if ( \"\".equals( projectVersion ) )\n        {\n            throw new MojoExecutionException( \"Cannot determine incremented development version for: \" + projectId );\n        }\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void setPassword( String password )\n    {\n        checkInitialized();\n\n        releaseProperties.setProperty( SCM_PASSWORD, password );\n    }","id":58645,"modified_method":"public void setPassword( String password )\n    {\n        releaseProperties.setProperty( SCM_PASSWORD, password );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public String getPassword()\n    {\n        checkInitialized();\n\n        return releaseProperties.getProperty( SCM_PASSWORD );\n    }","id":58646,"modified_method":"public String getPassword()\n    {\n        return releaseProperties.getProperty( SCM_PASSWORD );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void setScmUrl( String scmUrl )\n    {\n        checkInitialized();\n\n        releaseProperties.setProperty( SCM_URL, scmUrl );\n    }","id":58647,"modified_method":"public void setScmUrl( String scmUrl )\n    {\n        releaseProperties.setProperty( SCM_URL, scmUrl );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public String getUsername()\n    {\n        checkLoaded();\n\n        return releaseProperties.getProperty( USERNAME );\n    }","id":58648,"modified_method":"public String getUsername()\n    {\n        return releaseProperties.getProperty( USERNAME );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public String getScmUrl()\n    {\n        checkLoaded();\n\n        return releaseProperties.getProperty( SCM_URL );\n    }","id":58649,"modified_method":"public String getScmUrl()\n    {\n        return releaseProperties.getProperty( SCM_URL );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void setScmTagBase( String tagBase )\n    {\n        checkInitialized();\n\n        releaseProperties.setProperty( SCM_TAG_BASE, tagBase );\n    }","id":58650,"modified_method":"public void setScmTagBase( String tagBase )\n    {\n        releaseProperties.setProperty( SCM_TAG_BASE, tagBase );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public static ReleaseProgressTracker load( String basedir )\n        throws IOException\n    {\n        File releasePropertiesFile = new File( basedir, RELEASE_PROPERTIES );\n\n        ReleaseProgressTracker tracker = new ReleaseProgressTracker();\n\n        InputStream inStream = null;\n\n        try\n        {\n            inStream = new FileInputStream( releasePropertiesFile );\n\n            Properties rp = new Properties();\n\n            rp.load( inStream );\n\n            tracker.releaseProperties = rp;\n        }\n        finally\n        {\n            IOUtil.close( inStream );\n        }\n\n        return tracker;\n    }","id":58651,"modified_method":"public static ReleaseProgressTracker load( String basedir )\n        throws IOException\n    {\n        File releasePropertiesFile = new File( basedir, RELEASE_PROPERTIES );\n\n        InputStream inStream = null;\n\n        Properties rp;\n        try\n        {\n            inStream = new FileInputStream( releasePropertiesFile );\n\n            rp = new Properties();\n\n            rp.load( inStream );\n        }\n        finally\n        {\n            IOUtil.close( inStream );\n        }\n\n        return new ReleaseProgressTracker( rp );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void setCheckpoint( String pointName )\n    {\n        checkInitialized();\n\n        releaseProperties.setProperty( CHECKPOINT_PREFIX + pointName, \"OK\" );\n    }","id":58652,"modified_method":"private void setCheckpoint( String pointName )\n    {\n        releaseProperties.setProperty( CHECKPOINT_PREFIX + pointName, \"OK\" );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public String getScmTagBase()\n    {\n        checkLoaded();\n\n        return releaseProperties.getProperty( SCM_TAG_BASE );\n    }","id":58653,"modified_method":"public String getScmTagBase()\n    {\n        return releaseProperties.getProperty( SCM_TAG_BASE );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public String getScmTag()\n    {\n        checkLoaded();\n\n        return releaseProperties.getProperty( SCM_TAG );\n    }","id":58654,"modified_method":"public String getScmTag()\n    {\n        return releaseProperties.getProperty( SCM_TAG );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void setUsername( String username )\n    {\n        checkInitialized();\n\n        releaseProperties.setProperty( USERNAME, username );\n    }","id":58655,"modified_method":"public void setUsername( String username )\n    {\n        releaseProperties.setProperty( USERNAME, username );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void setScmTag( String scmTag )\n    {\n        checkInitialized();\n\n        releaseProperties.setProperty( SCM_TAG, scmTag );\n    }","id":58656,"modified_method":"public void setScmTag( String scmTag )\n    {\n        releaseProperties.setProperty( SCM_TAG, scmTag );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public boolean verifyCheckpoint( String pointName )\n    {\n        checkLoaded();\n\n        return resumeAtCheckpoint && \"OK\".equals( releaseProperties.getProperty( CHECKPOINT_PREFIX + pointName ) );\n    }","id":58657,"modified_method":"public boolean verifyCheckpoint( String pointName )\n    {\n        return resumeAtCheckpoint && \"OK\".equals( releaseProperties.getProperty( CHECKPOINT_PREFIX + pointName ) );\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public static ReleaseProgressTracker loadOrCreate( String basedir )\n        throws IOException\n    {\n        ReleaseProgressTracker tracker = null;\n\n        if ( new File( basedir, RELEASE_PROPERTIES ).exists() )\n        {\n            tracker = load( basedir );\n        }\n        else\n        {\n            tracker = new ReleaseProgressTracker();\n        }\n\n        return tracker;\n    }","id":58658,"modified_method":"public static ReleaseProgressTracker loadOrCreate( String basedir )\n        throws IOException\n    {\n        ReleaseProgressTracker tracker;\n\n        if ( new File( basedir, RELEASE_PROPERTIES ).exists() )\n        {\n            tracker = load( basedir );\n        }\n        else\n        {\n            tracker = create();\n        }\n\n        return tracker;\n    }","commit_id":"625596d32f1138e016cf983748dd893bd640133a","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void process( Object parent, Object child, Object target, boolean isChildMostSpecialized )\n    {\n        super.process( parent, child, target, isChildMostSpecialized );\n        Model t = (Model) target;\n        Model c = (Model) child;\n        Model p = (Model) parent;\n        if(t.getScm() == null)\n        {\n            t.setScm( new Scm() );    \n        }\n        \n        copyUrl( ((p != null) ? p.getScm() : null), c.getScm(), t.getScm(), c.getArtifactId(), p);\n        copyConnection( ((p != null) ? p.getScm() : null), c.getScm(), t.getScm(), c.getArtifactId(), p);\n        copyDeveloperConnection( ((p != null) ? p.getScm() : null), c.getScm(), t.getScm(), c.getArtifactId(), p);\n        copyTag( ( ( p != null ) ? p.getScm() : null ), c.getScm(), t.getScm() );\n    }","id":58659,"modified_method":"public void process( Object parent, Object child, Object target, boolean isChildMostSpecialized )\n    {\n        super.process( parent, child, target, isChildMostSpecialized );\n        Model t = (Model) target;\n        Model c = (Model) child;\n        Model p = (Model) parent;\n        if((p == null || p.getScm() == null) && (c == null || c.getScm() == null))\n        {\n        \t//return;\n        }\n        Scm targetScm = (t.getScm() == null) ? new Scm() : t.getScm();\n    \n        copyUrl( ((p != null) ? p.getScm() : null), c.getScm(), targetScm, c.getArtifactId(), p);\n        copyConnection( ((p != null) ? p.getScm() : null), c.getScm(), targetScm, c.getArtifactId(), p);\n        copyDeveloperConnection( ((p != null) ? p.getScm() : null), c.getScm(), targetScm, c.getArtifactId(), p);\n        copyTag( ( ( p != null ) ? p.getScm() : null ), c.getScm(), targetScm );\n        \n        if(t.getScm() ==null && (targetScm.getConnection() !=null || targetScm.getDeveloperConnection() != null || targetScm.getUrl() != null))\n        {\n        \tt.setScm(targetScm);\n        }     \n    }","commit_id":"3cfbbb52c631318d28735e984a16c6048bd51388","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Check the POM in an attempt to remove all instances of SNAPSHOTs in preparation for a release. The goal\n     * is to make the build reproducable so the removal of SNAPSHOTs is a necessary one.\n     *\n     * A check is made to ensure any parents in the lineage are released, that all the dependencies are\n     * released and that any plugins utilized by this project are released.\n     *\n     * @throws MojoExecutionException\n     */\n    private void checkForPresenceOfSnapshots( MavenProject project )\n        throws MojoExecutionException\n    {\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_SNAPSHOTS_CHECKED ) )\n        {\n            getLog().info( \"Checking lineage for snapshots ...\" );\n\n            MavenProject currentProject = project;\n\n            while ( currentProject.hasParent() )\n            {\n                MavenProject parentProject = currentProject.getParent();\n\n                String parentVersion = getVersionResolver().getResolvedVersion( parentProject.getGroupId(),\n                                                                                parentProject.getArtifactId() );\n\n                if ( isSnapshot( parentVersion ) )\n                {\n                    throw new MojoExecutionException( \"Can't release project due to non released parent.\" );\n                }\n\n                currentProject = parentProject;\n            }\n\n            getLog().info( \"Checking dependencies for snapshots ...\" );\n\n            Set snapshotDependencies = new HashSet();\n\n            for ( Iterator i = project.getArtifacts().iterator(); i.hasNext(); )\n            {\n                Artifact artifact = (Artifact) i.next();\n\n                String artifactVersion = getVersionResolver().getResolvedVersion( artifact.getGroupId(),\n                                                                                  artifact.getArtifactId() );\n\n                if ( artifactVersion == null )\n                {\n                    artifactVersion = artifact.getVersion();\n                }\n\n                if ( isSnapshot( artifactVersion ) )\n                {\n                    snapshotDependencies.add( artifact );\n                }\n            }\n\n            getLog().info( \"Checking plugins for snapshots ...\" );\n\n            for ( Iterator i = project.getPluginArtifacts().iterator(); i.hasNext(); )\n            {\n                Artifact artifact = (Artifact) i.next();\n\n                String artifactVersion = getVersionResolver().getResolvedVersion( artifact.getGroupId(),\n                                                                                  artifact.getArtifactId() );\n\n                if ( artifactVersion == null )\n                {\n                    artifactVersion = artifact.getVersion();\n                }\n\n                if ( isSnapshot( artifactVersion ) )\n                {\n                    snapshotDependencies.add( artifact );\n                }\n            }\n\n            if ( !snapshotDependencies.isEmpty() )\n            {\n                List snapshotsList = new ArrayList( snapshotDependencies );\n\n                Collections.sort( snapshotsList );\n\n                StringBuffer message = new StringBuffer();\n\n                for ( Iterator i = snapshotsList.iterator(); i.hasNext(); )\n                {\n                    Artifact artifact = (Artifact) i.next();\n\n                    message.append( \"    \" );\n\n                    message.append( artifact.getId() );\n\n                    message.append( \"\\n\" );\n                }\n\n                throw new MojoExecutionException(\n                    \"Can't release project due to non released dependencies :\\n\" + message.toString() );\n            }\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_SNAPSHOTS_CHECKED );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","id":58660,"modified_method":"/**\n     * Check the POM in an attempt to remove all instances of SNAPSHOTs in preparation for a release. The goal\n     * is to make the build reproducable so the removal of SNAPSHOTs is a necessary one.\n     *\n     * A check is made to ensure any parents in the lineage are released, that all the dependencies are\n     * released and that any plugins utilized by this project are released.\n     *\n     * @throws MojoExecutionException\n     */\n    private void checkForPresenceOfSnapshots( MavenProject project )\n        throws MojoExecutionException\n    {\n        getLog().info( \"Checking lineage for snapshots ...\" );\n\n        MavenProject currentProject = project;\n\n        while ( currentProject.hasParent() )\n        {\n            MavenProject parentProject = currentProject.getParent();\n\n            String parentVersion = getVersionResolver().getResolvedVersion( parentProject.getGroupId(),\n                                                                            parentProject.getArtifactId() );\n\n            if ( isSnapshot( parentVersion ) )\n            {\n                throw new MojoExecutionException( \"Can't release project due to non released parent.\" );\n            }\n\n            currentProject = parentProject;\n        }\n\n        getLog().info( \"Checking dependencies for snapshots ...\" );\n\n        Set snapshotDependencies = new HashSet();\n\n        for ( Iterator i = project.getArtifacts().iterator(); i.hasNext(); )\n        {\n            Artifact artifact = (Artifact) i.next();\n\n            String artifactVersion = getVersionResolver().getResolvedVersion( artifact.getGroupId(),\n                                                                              artifact.getArtifactId() );\n\n            if ( artifactVersion == null )\n            {\n                artifactVersion = artifact.getVersion();\n            }\n\n            if ( isSnapshot( artifactVersion ) )\n            {\n                snapshotDependencies.add( artifact );\n            }\n        }\n\n        getLog().info( \"Checking plugins for snapshots ...\" );\n\n        for ( Iterator i = project.getPluginArtifacts().iterator(); i.hasNext(); )\n        {\n            Artifact artifact = (Artifact) i.next();\n\n            String artifactVersion = getVersionResolver().getResolvedVersion( artifact.getGroupId(),\n                                                                              artifact.getArtifactId() );\n\n            if ( artifactVersion == null )\n            {\n                artifactVersion = artifact.getVersion();\n            }\n\n            if ( isSnapshot( artifactVersion ) )\n            {\n                snapshotDependencies.add( artifact );\n            }\n        }\n\n        if ( !snapshotDependencies.isEmpty() )\n        {\n            List snapshotsList = new ArrayList( snapshotDependencies );\n\n            Collections.sort( snapshotsList );\n\n            StringBuffer message = new StringBuffer();\n\n            for ( Iterator i = snapshotsList.iterator(); i.hasNext(); )\n            {\n                Artifact artifact = (Artifact) i.next();\n\n                message.append( \"    \" );\n\n                message.append( artifact.getId() );\n\n                message.append( \"\\n\" );\n            }\n\n            throw new MojoExecutionException(\n                \"Can't release project due to non released dependencies :\\n\" + message.toString() );\n        }\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"private String getTagLabel()\n        throws MojoExecutionException\n    {\n        if ( userTag == null )\n        {\n            try\n            {\n                if ( tag == null && interactive )\n                {\n                    getLog().info( \"What tag name should be used? \" );\n\n                    String inputTag = inputHandler.readLine();\n\n                    if ( !StringUtils.isEmpty( inputTag ) )\n                    {\n                        userTag = inputTag;\n                    }\n                }\n                else\n                {\n                    userTag = tag;\n                }\n            }\n            catch ( Exception e )\n            {\n                throw new MojoExecutionException( \"An error is occurred in the tag process.\", e );\n            }\n        }\n\n        return userTag;\n    }","id":58661,"modified_method":"private String getTagLabel()\n        throws MojoExecutionException\n    {\n        if ( userTag == null )\n        {\n            try\n            {\n                if ( tag == null && interactive )\n                {\n                    getLog().info( \"What tag name should be used? \" );\n\n                    String inputTag = inputHandler.readLine();\n\n                    if ( !StringUtils.isEmpty( inputTag ) )\n                    {\n                        userTag = inputTag;\n                    }\n                }\n                else\n                {\n                    userTag = tag;\n                }\n            }\n            catch ( Exception e )\n            {\n                throw new MojoExecutionException( \"An error is occurred in the tag process.\", e );\n            }\n        }\n\n        if ( userTag == null )\n        {\n            userTag = releaseProgress.getScmTag();\n        }\n\n        if ( userTag == null )\n        {\n            throw new MojoExecutionException( \"A tag must be specified\" );\n        }\n\n        return userTag;\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Check in the POM to SCM after it has been transformed where the version has been\n     * set to the release version.\n     *\n     * @throws MojoExecutionException\n     */\n    private void checkInRelease()\n        throws MojoExecutionException\n    {\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_CHECKED_IN_RELEASE_VERSION ) )\n        {\n            checkIn( \"**/pom.xml,**/release-pom.xml\", \"[maven-release-plugin] prepare release\" );\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_CHECKED_IN_RELEASE_VERSION );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","id":58662,"modified_method":"/**\n     * Check in the POM to SCM after it has been transformed where the version has been\n     * set to the release version.\n     *\n     * @throws MojoExecutionException\n     */\n    private void checkInRelease()\n        throws MojoExecutionException\n    {\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_CHECKED_IN_RELEASE_VERSION ) )\n        {\n            checkIn( \"**/pom.xml,**/release-pom.xml\", \"[maven-release-plugin] prepare release \" + getTagLabel() );\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_CHECKED_IN_RELEASE_VERSION );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"private void transformPomToReleaseVersionPom( MavenProject project )\n        throws MojoExecutionException\n    {\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_POM_TRANSFORMED_FOR_RELEASE ) )\n        {\n            if ( !isSnapshot( project.getVersion() ) )\n            {\n                throw new MojoExecutionException( \"The project \" + project.getGroupId() + \":\" +\n                    project.getArtifactId() + \" isn't a snapshot (\" + project.getVersion() + \").\" );\n            }\n\n            Model model = project.getOriginalModel();\n\n            //Rewrite parent version\n            if ( model.getParent() != null )\n            {\n                Artifact parentArtifact = project.getParentArtifact();\n\n                if ( isSnapshot( parentArtifact.getBaseVersion() ) )\n                {\n                    String version = resolveVersion( parentArtifact, \"parent\", project );\n\n                    model.getParent().setVersion( version );\n                }\n            }\n\n            //Rewrite dependencies section\n            List dependencies = model.getDependencies();\n\n            if ( dependencies != null )\n            {\n                for ( Iterator i = dependencies.iterator(); i.hasNext(); )\n                {\n                    Dependency dep = (Dependency) i.next();\n\n                    // Avoid in dep mgmt\n                    if ( dep.getVersion() != null )\n                    {\n                        String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),\n                                                                                          dep.getArtifactId() );\n\n                        if ( resolvedVersion != null )\n                        {\n                            dep.setVersion( resolvedVersion );\n                        }\n                    }\n                }\n            }\n\n            DependencyManagement dependencyManagement = model.getDependencyManagement();\n            dependencies = dependencyManagement != null ? dependencyManagement.getDependencies() : null;\n\n            if ( dependencies != null )\n            {\n                for ( Iterator i = dependencies.iterator(); i.hasNext(); )\n                {\n                    Dependency dep = (Dependency) i.next();\n\n                    if ( dep.getVersion() != null )\n                    {\n                        String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),\n                                                                                          dep.getArtifactId() );\n\n                        if ( resolvedVersion != null )\n                        {\n                            dep.setVersion( resolvedVersion );\n                        }\n                    }\n                }\n            }\n\n            Build build = model.getBuild();\n\n            if ( build != null )\n            {\n                //Rewrite plugins section\n                List plugins = build.getPlugins();\n\n                if ( plugins != null )\n                {\n                    for ( Iterator i = plugins.iterator(); i.hasNext(); )\n                    {\n                        Plugin plugin = (Plugin) i.next();\n\n                        // Avoid in plugin mgmt\n                        if ( plugin.getVersion() != null )\n                        {\n                            String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),\n                                                                                              plugin.getArtifactId() );\n\n                            if ( resolvedVersion != null )\n                            {\n                                plugin.setVersion( resolvedVersion );\n                            }\n                        }\n                    }\n                }\n\n                PluginManagement pluginManagement = build.getPluginManagement();\n                plugins = pluginManagement != null ? pluginManagement.getPlugins() : null;\n\n                if ( plugins != null )\n                {\n                    for ( Iterator i = plugins.iterator(); i.hasNext(); )\n                    {\n                        Plugin plugin = (Plugin) i.next();\n\n                        if ( plugin.getVersion() != null )\n                        {\n                            String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),\n                                                                                              plugin.getArtifactId() );\n\n                            if ( resolvedVersion != null )\n                            {\n                                plugin.setVersion( resolvedVersion );\n                            }\n                        }\n                    }\n                }\n\n                //Rewrite extensions section\n                List extensions = build.getExtensions();\n\n                for ( Iterator i = extensions.iterator(); i.hasNext(); )\n                {\n                    Extension ext = (Extension) i.next();\n\n                    String resolvedVersion = getVersionResolver().getResolvedVersion( ext.getGroupId(),\n                                                                                      ext.getArtifactId() );\n\n                    if ( resolvedVersion != null )\n                    {\n                        ext.setVersion( resolvedVersion );\n                    }\n                }\n            }\n\n            Reporting reporting = model.getReporting();\n\n            if ( reporting != null )\n            {\n                //Rewrite reports section\n                List reports = reporting.getPlugins();\n\n                for ( Iterator i = reports.iterator(); i.hasNext(); )\n                {\n                    ReportPlugin plugin = (ReportPlugin) i.next();\n\n                    String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),\n                                                                                      plugin.getArtifactId() );\n\n                    if ( resolvedVersion != null )\n                    {\n                        plugin.setVersion( resolvedVersion );\n                    }\n                }\n            }\n\n            Writer writer = null;\n\n            try\n            {\n                writer = new FileWriter( project.getFile() );\n\n                project.writeOriginalModel( writer );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write released version of pom to: \" + project.getFile(), e );\n            }\n            finally\n            {\n                IOUtil.close( writer );\n            }\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_POM_TRANSFORMED_FOR_RELEASE );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","id":58663,"modified_method":"private void transformPomToReleaseVersionPom( MavenProject project )\n        throws MojoExecutionException\n    {\n        if ( !isSnapshot( project.getVersion() ) )\n        {\n            throw new MojoExecutionException( \"The project \" + project.getGroupId() + \":\" + project.getArtifactId() +\n                \" isn't a snapshot (\" + project.getVersion() + \").\" );\n        }\n\n        Model model = project.getOriginalModel();\n\n        //Rewrite parent version\n        if ( model.getParent() != null )\n        {\n            Artifact parentArtifact = project.getParentArtifact();\n\n            if ( isSnapshot( parentArtifact.getBaseVersion() ) )\n            {\n                String version = resolveVersion( parentArtifact, \"parent\", project );\n\n                model.getParent().setVersion( version );\n            }\n        }\n\n        //Rewrite dependencies section\n        List dependencies = model.getDependencies();\n\n        if ( dependencies != null )\n        {\n            for ( Iterator i = dependencies.iterator(); i.hasNext(); )\n            {\n                Dependency dep = (Dependency) i.next();\n\n                // Avoid in dep mgmt\n                if ( dep.getVersion() != null )\n                {\n                    String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),\n                                                                                      dep.getArtifactId() );\n\n                    if ( resolvedVersion != null )\n                    {\n                        dep.setVersion( resolvedVersion );\n                    }\n                }\n            }\n        }\n\n        DependencyManagement dependencyManagement = model.getDependencyManagement();\n        dependencies = dependencyManagement != null ? dependencyManagement.getDependencies() : null;\n\n        if ( dependencies != null )\n        {\n            for ( Iterator i = dependencies.iterator(); i.hasNext(); )\n            {\n                Dependency dep = (Dependency) i.next();\n\n                if ( dep.getVersion() != null )\n                {\n                    String resolvedVersion = getVersionResolver().getResolvedVersion( dep.getGroupId(),\n                                                                                      dep.getArtifactId() );\n\n                    if ( resolvedVersion != null )\n                    {\n                        dep.setVersion( resolvedVersion );\n                    }\n                }\n            }\n        }\n\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            //Rewrite plugins section\n            List plugins = build.getPlugins();\n\n            if ( plugins != null )\n            {\n                for ( Iterator i = plugins.iterator(); i.hasNext(); )\n                {\n                    Plugin plugin = (Plugin) i.next();\n\n                    // Avoid in plugin mgmt\n                    if ( plugin.getVersion() != null )\n                    {\n                        String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),\n                                                                                          plugin.getArtifactId() );\n\n                        if ( resolvedVersion != null )\n                        {\n                            plugin.setVersion( resolvedVersion );\n                        }\n                    }\n                }\n            }\n\n            PluginManagement pluginManagement = build.getPluginManagement();\n            plugins = pluginManagement != null ? pluginManagement.getPlugins() : null;\n\n            if ( plugins != null )\n            {\n                for ( Iterator i = plugins.iterator(); i.hasNext(); )\n                {\n                    Plugin plugin = (Plugin) i.next();\n\n                    if ( plugin.getVersion() != null )\n                    {\n                        String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),\n                                                                                          plugin.getArtifactId() );\n\n                        if ( resolvedVersion != null )\n                        {\n                            plugin.setVersion( resolvedVersion );\n                        }\n                    }\n                }\n            }\n\n            //Rewrite extensions section\n            List extensions = build.getExtensions();\n\n            for ( Iterator i = extensions.iterator(); i.hasNext(); )\n            {\n                Extension ext = (Extension) i.next();\n\n                String resolvedVersion = getVersionResolver().getResolvedVersion( ext.getGroupId(),\n                                                                                  ext.getArtifactId() );\n\n                if ( resolvedVersion != null )\n                {\n                    ext.setVersion( resolvedVersion );\n                }\n            }\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            //Rewrite reports section\n            List reports = reporting.getPlugins();\n\n            for ( Iterator i = reports.iterator(); i.hasNext(); )\n            {\n                ReportPlugin plugin = (ReportPlugin) i.next();\n\n                String resolvedVersion = getVersionResolver().getResolvedVersion( plugin.getGroupId(),\n                                                                                  plugin.getArtifactId() );\n\n                if ( resolvedVersion != null )\n                {\n                    plugin.setVersion( resolvedVersion );\n                }\n            }\n        }\n\n        Writer writer = null;\n\n        try\n        {\n            writer = new FileWriter( project.getFile() );\n\n            project.writeOriginalModel( writer );\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Cannot write released version of pom to: \" + project.getFile(), e );\n        }\n        finally\n        {\n            IOUtil.close( writer );\n        }\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"protected void executeTask()\n        throws MojoExecutionException\n    {\n        try\n        {\n            getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_INITIALIZED );\n        }\n        catch ( IOException e )\n        {\n            getLog().warn( \"Error writing checkpoint.\", e );\n        }\n\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_PREPARED_RELEASE ) )\n        {\n            checkForLocalModifications();\n\n            for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n            {\n                MavenProject project = (MavenProject) it.next();\n\n                getVersionResolver().resolveVersion( project );\n\n                getScmRewriter().rewriteScmInfo( project, getTagLabel() );\n            }\n\n            for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n            {\n                MavenProject project = (MavenProject) it.next();\n\n                checkForPresenceOfSnapshots( project );\n\n                transformPomToReleaseVersionPom( project );\n            }\n\n            generateReleasePoms();\n\n            checkInRelease();\n\n            tagRelease();\n\n            for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n            {\n                MavenProject project = (MavenProject) it.next();\n\n                getVersionResolver().incrementVersion( project );\n\n                getScmRewriter().restoreScmInfo( project );\n            }\n\n            for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n            {\n                MavenProject project = (MavenProject) it.next();\n\n                transformPomToSnapshotVersionPom( project );\n            }\n\n            removeReleasePoms();\n\n            checkInNextSnapshot();\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_PREPARED_RELEASE );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","id":58664,"modified_method":"protected void executeTask()\n        throws MojoExecutionException\n    {\n        try\n        {\n            getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_INITIALIZED );\n        }\n        catch ( IOException e )\n        {\n            getLog().warn( \"Error writing checkpoint.\", e );\n        }\n\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_PREPARED_RELEASE ) )\n        {\n            checkForLocalModifications();\n\n            if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_POM_TRANSFORMED_FOR_RELEASE ) )\n            {\n                for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n                {\n                    MavenProject project = (MavenProject) it.next();\n\n                    getVersionResolver().resolveVersion( project );\n\n                    getScmRewriter().rewriteScmInfo( project, getTagLabel() );\n                }\n\n                for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n                {\n                    MavenProject project = (MavenProject) it.next();\n\n                    checkForPresenceOfSnapshots( project );\n\n                    transformPomToReleaseVersionPom( project );\n                }\n\n                try\n                {\n                    getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_POM_TRANSFORMED_FOR_RELEASE );\n                }\n                catch ( IOException e )\n                {\n                    getLog().warn( \"Error writing checkpoint.\", e );\n                }\n\n            }\n\n            generateReleasePoms();\n\n            checkInRelease();\n\n            tagRelease();\n\n            for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n            {\n                MavenProject project = (MavenProject) it.next();\n\n                getVersionResolver().incrementVersion( project );\n\n                getScmRewriter().restoreScmInfo( project );\n            }\n\n            if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_POM_TRANSORMED_FOR_DEVELOPMENT ) )\n            {\n                for ( Iterator it = reactorProjects.iterator(); it.hasNext(); )\n                {\n                    MavenProject project = (MavenProject) it.next();\n\n                    transformPomToSnapshotVersionPom( project );\n                }\n\n                try\n                {\n                    getReleaseProgress().checkpoint( basedir,\n                                                     ReleaseProgressTracker.CP_POM_TRANSORMED_FOR_DEVELOPMENT );\n                }\n                catch ( IOException e )\n                {\n                    getLog().warn( \"Error writing checkpoint.\", e );\n                }\n            }\n\n            removeReleasePoms();\n\n            checkInNextSnapshot();\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_PREPARED_RELEASE );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"private void transformPomToSnapshotVersionPom( MavenProject project )\n        throws MojoExecutionException\n    {\n        if ( !getReleaseProgress().verifyCheckpoint( ReleaseProgressTracker.CP_POM_TRANSORMED_FOR_DEVELOPMENT ) )\n        {\n            if ( isSnapshot( project.getVersion() ) )\n            {\n                throw new MojoExecutionException( \"This project is a snapshot (\" + project.getVersion() +\n                    \"). It appears that the release version has not been committed.\" );\n            }\n\n            Model model = project.getOriginalModel();\n\n            ProjectVersionResolver versionResolver = getVersionResolver();\n\n            Parent parent = model.getParent();\n\n            //Rewrite parent version\n            if ( parent != null )\n            {\n                String incrementedVersion = versionResolver.getResolvedVersion( parent.getGroupId(), parent\n                    .getArtifactId() );\n\n                if ( incrementedVersion != null )\n                {\n                    parent.setVersion( incrementedVersion );\n                }\n            }\n\n            //Rewrite dependencies section\n            List dependencies = model.getDependencies();\n\n            if ( dependencies != null )\n            {\n                for ( Iterator i = dependencies.iterator(); i.hasNext(); )\n                {\n                    Dependency dep = (Dependency) i.next();\n\n                    String version = versionResolver.getResolvedVersion( dep.getGroupId(), dep.getArtifactId() );\n\n                    if ( version != null )\n                    {\n                        dep.setVersion( version );\n                    }\n                }\n            }\n\n            //Rewrite plugins section\n            Build build = model.getBuild();\n\n            if ( build != null )\n            {\n                List plugins = build.getPlugins();\n\n                if ( plugins != null )\n                {\n                    for ( Iterator i = plugins.iterator(); i.hasNext(); )\n                    {\n                        Plugin plugin = (Plugin) i.next();\n\n                        String version = versionResolver.getResolvedVersion( plugin.getGroupId(), plugin\n                            .getArtifactId() );\n\n                        if ( version != null )\n                        {\n                            plugin.setVersion( version );\n                        }\n                    }\n                }\n\n                //Rewrite extensions section\n                List extensions = build.getExtensions();\n\n                for ( Iterator i = extensions.iterator(); i.hasNext(); )\n                {\n                    Extension ext = (Extension) i.next();\n\n                    String version = versionResolver.getResolvedVersion( ext.getGroupId(), ext.getArtifactId() );\n\n                    if ( version != null )\n                    {\n                        ext.setVersion( version );\n                    }\n                }\n            }\n\n            Reporting reporting = model.getReporting();\n\n            if ( reporting != null )\n            {\n                //Rewrite reports section\n                List reports = reporting.getPlugins();\n\n                if ( reports != null )\n                {\n                    for ( Iterator i = reports.iterator(); i.hasNext(); )\n                    {\n                        ReportPlugin plugin = (ReportPlugin) i.next();\n\n                        String version = versionResolver.getResolvedVersion( plugin.getGroupId(), plugin\n                            .getArtifactId() );\n\n                        if ( version != null )\n                        {\n                            plugin.setVersion( version );\n                        }\n                    }\n                }\n            }\n\n            Writer writer = null;\n\n            try\n            {\n                writer = new FileWriter( project.getFile() );\n\n                project.writeOriginalModel( writer );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write development version of pom to: \" + project.getFile(),\n                                                  e );\n            }\n            finally\n            {\n                IOUtil.close( writer );\n            }\n\n            try\n            {\n                getReleaseProgress().checkpoint( basedir, ReleaseProgressTracker.CP_POM_TRANSORMED_FOR_DEVELOPMENT );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Error writing checkpoint.\", e );\n            }\n        }\n    }","id":58665,"modified_method":"private void transformPomToSnapshotVersionPom( MavenProject project )\n        throws MojoExecutionException\n    {\n        if ( isSnapshot( project.getVersion() ) )\n        {\n            throw new MojoExecutionException( \"This project is a snapshot (\" + project.getVersion() +\n                \"). It appears that the release version has not been committed.\" );\n        }\n\n        Model model = project.getOriginalModel();\n\n        ProjectVersionResolver versionResolver = getVersionResolver();\n\n        Parent parent = model.getParent();\n\n        //Rewrite parent version\n        if ( parent != null )\n        {\n            String incrementedVersion = versionResolver.getResolvedVersion( parent.getGroupId(), parent\n                .getArtifactId() );\n\n            if ( incrementedVersion != null )\n            {\n                parent.setVersion( incrementedVersion );\n            }\n        }\n\n        //Rewrite dependencies section\n        List dependencies = model.getDependencies();\n\n        if ( dependencies != null )\n        {\n            for ( Iterator i = dependencies.iterator(); i.hasNext(); )\n            {\n                Dependency dep = (Dependency) i.next();\n\n                String version = versionResolver.getResolvedVersion( dep.getGroupId(), dep.getArtifactId() );\n\n                if ( version != null )\n                {\n                    dep.setVersion( version );\n                }\n            }\n        }\n\n        //Rewrite plugins section\n        Build build = model.getBuild();\n\n        if ( build != null )\n        {\n            List plugins = build.getPlugins();\n\n            if ( plugins != null )\n            {\n                for ( Iterator i = plugins.iterator(); i.hasNext(); )\n                {\n                    Plugin plugin = (Plugin) i.next();\n\n                    String version = versionResolver.getResolvedVersion( plugin.getGroupId(), plugin\n                        .getArtifactId() );\n\n                    if ( version != null )\n                    {\n                        plugin.setVersion( version );\n                    }\n                }\n            }\n\n            //Rewrite extensions section\n            List extensions = build.getExtensions();\n\n            for ( Iterator i = extensions.iterator(); i.hasNext(); )\n            {\n                Extension ext = (Extension) i.next();\n\n                String version = versionResolver.getResolvedVersion( ext.getGroupId(), ext.getArtifactId() );\n\n                if ( version != null )\n                {\n                    ext.setVersion( version );\n                }\n            }\n        }\n\n        Reporting reporting = model.getReporting();\n\n        if ( reporting != null )\n        {\n            //Rewrite reports section\n            List reports = reporting.getPlugins();\n\n            if ( reports != null )\n            {\n                for ( Iterator i = reports.iterator(); i.hasNext(); )\n                {\n                    ReportPlugin plugin = (ReportPlugin) i.next();\n\n                    String version = versionResolver.getResolvedVersion( plugin.getGroupId(), plugin\n                        .getArtifactId() );\n\n                    if ( version != null )\n                    {\n                        plugin.setVersion( version );\n                    }\n                }\n            }\n\n            Writer writer = null;\n\n            try\n            {\n                writer = new FileWriter( project.getFile() );\n\n                project.writeOriginalModel( writer );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Cannot write development version of pom to: \" + project.getFile(),\n                                                  e );\n            }\n            finally\n            {\n                IOUtil.close( writer );\n            }\n        }\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"protected ReleaseProgressTracker getReleaseProgress()\n        throws MojoExecutionException\n    {\n        if ( releaseProgress == null )\n        {\n            if ( resume )\n            {\n                try\n                {\n                    releaseProgress = ReleaseProgressTracker.load( basedir );\n\n                    releaseProgress.verifyResumeCapable();\n                }\n                catch ( IOException e )\n                {\n                    throw new MojoExecutionException(\n                        \"Cannot read existing release progress file from directory: \" + basedir + \". Cannot resume.\" );\n                }\n            }\n            else\n            {\n                try\n                {\n                    releaseProgress = ReleaseProgressTracker.loadOrCreate( basedir );\n                }\n                catch ( IOException e )\n                {\n                    getLog().warn( \"Cannot read existing release progress file from directory: \" + basedir +\n                        \". Creating new instance.\" );\n                }\n\n                releaseProgress.setResumeAtCheckpoint( resume );\n\n                releaseProgress.setUsername( username );\n\n                if ( password != null )\n                {\n                    releaseProgress.setPassword( password );\n                }\n\n                releaseProgress.setScmTag( getTagLabel() );\n\n                releaseProgress.setScmTagBase( tagBase );\n\n                releaseProgress.setScmUrl( urlScm );\n            }\n        }\n\n        return releaseProgress;\n    }","id":58666,"modified_method":"protected ReleaseProgressTracker getReleaseProgress()\n        throws MojoExecutionException\n    {\n        if ( releaseProgress == null )\n        {\n            try\n            {\n                releaseProgress = ReleaseProgressTracker.loadOrCreate( basedir );\n            }\n            catch ( IOException e )\n            {\n                getLog().warn( \"Cannot read existing release progress file from directory: \" + basedir + \".\" );\n                getLog().debug( \"Cause\", e );\n\n                releaseProgress = ReleaseProgressTracker.create();\n            }\n\n            if ( resume )\n            {\n                releaseProgress.setResumeAtCheckpoint( true );\n            }\n\n            if ( releaseProgress.getUsername() == null )\n            {\n                releaseProgress.setUsername( username );\n            }\n\n            if ( releaseProgress.getPassword() == null && password != null )\n            {\n                releaseProgress.setPassword( password );\n            }\n\n            if ( releaseProgress.getScmTag() == null )\n            {\n                releaseProgress.setScmTag( getTagLabel() );\n            }\n\n            if ( releaseProgress.getScmTagBase() == null )\n            {\n                releaseProgress.setScmTagBase( tagBase );\n            }\n\n            if ( releaseProgress.getScmUrl() == null )\n            {\n                releaseProgress.setScmUrl( urlScm );\n            }\n\n            if ( releaseProgress.getUsername() == null || releaseProgress.getScmTag() == null ||\n                releaseProgress.getScmTagBase() == null || releaseProgress.getScmUrl() == null )\n            {\n                throw new MojoExecutionException( \"Missing release preparation information.\" );\n            }\n        }\n        return releaseProgress;\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"void modify( MavenProject project )\n        {\n            Model model = project.getModel();\n\n            if ( model.getScm() != null )\n            {\n                model.getScm().setTag( tag );\n\n                model.getScm().setConnection( connection );\n\n                model.getScm().setDeveloperConnection( developerConnection );\n            }\n        }","id":58667,"modified_method":"void modify( MavenProject project )\n        {\n            Model model = project.getOriginalModel();\n\n            Scm scm = model.getScm();\n            if ( scm != null )\n            {\n                scm.setTag( tag );\n\n                scm.setConnection( connection );\n\n                scm.setDeveloperConnection( developerConnection );\n\n                scm.setUrl( url );\n            }\n        }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public void rewriteScmInfo( MavenProject project, String tagLabel )\n        throws MojoExecutionException\n    {\n        String projectId = ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() );\n\n        if ( originalScmInformation.containsKey( projectId ) )\n        {\n            throw new IllegalArgumentException( \"Project: \" + projectId +\n                \" already has it's original SCM info cached. Each project should only be resolved once.\" );\n        }\n\n        Model model = project.getModel();\n\n        Scm scm = model.getScm();\n\n        if ( scm == null )\n        {\n            throw new MojoExecutionException(\n                \"Project: \" + projectId + \" does not have a SCM section! Cannot proceed with release.\" );\n        }\n\n        String tag = model.getScm().getTag();\n\n        String connection = model.getScm().getConnection();\n\n        String developerConnection = model.getScm().getDeveloperConnection();\n\n        ScmInfo info = new ScmInfo( tag, connection, developerConnection );\n\n        originalScmInformation.put( projectId, info );\n\n        scm.setTag( tagLabel );\n\n        scm.setConnection( rewriteScmConnection( connection, tagLabel ) );\n\n        scm.setDeveloperConnection( rewriteScmConnection( developerConnection, tagLabel ) );\n    }","id":58668,"modified_method":"public void rewriteScmInfo( MavenProject project, String tagLabel )\n        throws MojoExecutionException\n    {\n        String projectId = ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() );\n\n        if ( originalScmInformation.containsKey( projectId ) )\n        {\n            throw new IllegalArgumentException( \"Project: \" + projectId +\n                \" already has it's original SCM info cached. Each project should only be resolved once.\" );\n        }\n\n        if ( project.getScm() == null )\n        {\n            throw new MojoExecutionException(\n                \"Project: \" + projectId + \" does not have a SCM section! Cannot proceed with release.\" );\n        }\n\n        Model model = project.getOriginalModel();\n\n        Scm scm = model.getScm();\n        // If SCM is null in original model, it is inherited, no mods needed\n        if ( scm != null )\n        {\n            String tag = scm.getTag();\n\n            String connection = scm.getConnection();\n\n            String developerConnection = scm.getDeveloperConnection();\n\n            String url = scm.getUrl();\n\n            ScmInfo info = new ScmInfo( tag, connection, developerConnection, url );\n\n            originalScmInformation.put( projectId, info );\n\n            rewriteScmConnection( scm, tagLabel );\n        }\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"private String rewriteScmConnection( String scmConnection, String tag )\n    {\n        if ( scmConnection != null )\n        {\n            if ( scmConnection.startsWith( \"svn\" ) )\n            {\n                if ( scmConnection.endsWith( \"trunk/\" ) )\n                {\n                    scmConnection = scmConnection.substring( 0, scmConnection.length() - \"trunk/\".length() );\n                }\n                if ( scmConnection.endsWith( \"branches/\" ) )\n                {\n                    scmConnection = scmConnection.substring( 0, scmConnection.length() - \"branches/\".length() );\n                }\n                scmConnection += \"tags/\" + tag;\n            }\n        }\n\n        return scmConnection;\n    }","id":58669,"modified_method":"private void rewriteScmConnection( Scm scm, String tag )\n    {\n        if ( scm != null )\n        {\n            String scmConnection = scm.getConnection();\n            if ( scmConnection != null && scmConnection.startsWith( \"scm:svn\" ) )\n            {\n                scm.setConnection( convertSvnConnectionString( scmConnection, tag ) );\n                scm.setDeveloperConnection( convertSvnConnectionString( scm.getDeveloperConnection(), tag ) );\n                scm.setUrl( convertSvnConnectionString( scm.getUrl(), tag ) );\n            }\n        }\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"ScmInfo( String tag, String connection, String developerConnection )\n        {\n            this.tag = tag;\n            this.connection = connection;\n            this.developerConnection = developerConnection;\n        }","id":58670,"modified_method":"ScmInfo( String tag, String connection, String developerConnection, String url )\n        {\n            this.tag = tag;\n            this.connection = connection;\n            this.developerConnection = developerConnection;\n            this.url = url;\n        }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public void incrementVersion( MavenProject project )\n        throws MojoExecutionException\n    {\n        String projectId = ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() );\n\n        String projectVersion = (String) resolvedVersions.get( projectId );\n\n        if ( projectVersion == null )\n        {\n            throw new IllegalArgumentException(\n                \"Project \\'\" + projectId + \"\\' has not been resolved. Cannot increment an unresolved version.\" );\n        }\n\n        // TODO: we will need to incorporate versioning strategies here because it is unlikely\n        // that everyone will be able to agree on a standard. This is extremely limited right\n        // now and really only works for the way maven is versioned.\n\n        // releaseVersion = 1.0-beta-4\n        // snapshotVersion = 1.0-beta-5-SNAPSHOT\n\n        String nextVersionString = projectVersion.substring( projectVersion.lastIndexOf( \"-\" ) + 1 );\n\n        try\n        {\n            nextVersionString = Integer.toString( Integer.parseInt( nextVersionString ) + 1 );\n\n            projectVersion = projectVersion.substring( 0, projectVersion.lastIndexOf( \"-\" ) + 1 ) + nextVersionString +\n                SNAPSHOT_CLASSIFIER;\n        }\n        catch ( NumberFormatException e )\n        {\n            projectVersion = \"\";\n        }\n\n        if ( interactive )\n        {\n            try\n            {\n                log.info( \"What is the new development version for \\'\" + projectId + \"\\'? [\" + projectVersion + \"]\" );\n\n                String inputVersion = inputHandler.readLine();\n\n                if ( !StringUtils.isEmpty( inputVersion ) )\n                {\n                    projectVersion = inputVersion;\n                }\n\n                project.setVersion( projectVersion );\n\n                resolvedVersions.put( projectId, projectVersion );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Can't read next development version from user input.\", e );\n            }\n        }\n        else if ( \"\".equals( projectVersion ) )\n        {\n            throw new MojoExecutionException( \"Cannot determine incremented development version for: \" + projectId );\n        }\n    }","id":58671,"modified_method":"public void incrementVersion( MavenProject project )\n        throws MojoExecutionException\n    {\n        String projectId = ArtifactUtils.versionlessKey( project.getGroupId(), project.getArtifactId() );\n\n        String projectVersion = (String) resolvedVersions.get( projectId );\n\n        if ( projectVersion == null )\n        {\n            throw new IllegalArgumentException(\n                \"Project \\'\" + projectId + \"\\' has not been resolved. Cannot increment an unresolved version.\" );\n        }\n\n        // TODO: we will need to incorporate versioning strategies here because it is unlikely\n        // that everyone will be able to agree on a standard. This is extremely limited right\n        // now and really only works for the way maven is versioned.\n\n        // releaseVersion = 1.0-beta-4\n        // snapshotVersion = 1.0-beta-5-SNAPSHOT\n\n        String nextVersionString = projectVersion.substring( projectVersion.lastIndexOf( \"-\" ) + 1 );\n\n        try\n        {\n            nextVersionString = Integer.toString( Integer.parseInt( nextVersionString ) + 1 );\n\n            projectVersion = projectVersion.substring( 0, projectVersion.lastIndexOf( \"-\" ) + 1 ) + nextVersionString +\n                SNAPSHOT_CLASSIFIER;\n        }\n        catch ( NumberFormatException e )\n        {\n            projectVersion = \"\";\n        }\n\n        if ( interactive )\n        {\n            try\n            {\n                log.info( \"What is the new development version for \\'\" + projectId + \"\\'? [\" + projectVersion + \"]\" );\n\n                String inputVersion = inputHandler.readLine();\n\n                if ( !StringUtils.isEmpty( inputVersion ) )\n                {\n                    projectVersion = inputVersion;\n                }\n\n                project.getOriginalModel().setVersion( projectVersion );\n\n                resolvedVersions.put( projectId, projectVersion );\n            }\n            catch ( IOException e )\n            {\n                throw new MojoExecutionException( \"Can't read next development version from user input.\", e );\n            }\n        }\n        else if ( \"\".equals( projectVersion ) )\n        {\n            throw new MojoExecutionException( \"Cannot determine incremented development version for: \" + projectId );\n        }\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public void setPassword( String password )\n    {\n        checkInitialized();\n\n        releaseProperties.setProperty( SCM_PASSWORD, password );\n    }","id":58672,"modified_method":"public void setPassword( String password )\n    {\n        releaseProperties.setProperty( SCM_PASSWORD, password );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public static ReleaseProgressTracker loadOrCreate( String basedir )\n        throws IOException\n    {\n        ReleaseProgressTracker tracker = null;\n\n        if ( new File( basedir, RELEASE_PROPERTIES ).exists() )\n        {\n            tracker = load( basedir );\n        }\n        else\n        {\n            tracker = new ReleaseProgressTracker();\n        }\n\n        return tracker;\n    }","id":58673,"modified_method":"public static ReleaseProgressTracker loadOrCreate( String basedir )\n        throws IOException\n    {\n        ReleaseProgressTracker tracker;\n\n        if ( new File( basedir, RELEASE_PROPERTIES ).exists() )\n        {\n            tracker = load( basedir );\n        }\n        else\n        {\n            tracker = create();\n        }\n\n        return tracker;\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public String getScmUrl()\n    {\n        checkLoaded();\n\n        return releaseProperties.getProperty( SCM_URL );\n    }","id":58674,"modified_method":"public String getScmUrl()\n    {\n        return releaseProperties.getProperty( SCM_URL );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public void setScmUrl( String scmUrl )\n    {\n        checkInitialized();\n\n        releaseProperties.setProperty( SCM_URL, scmUrl );\n    }","id":58675,"modified_method":"public void setScmUrl( String scmUrl )\n    {\n        releaseProperties.setProperty( SCM_URL, scmUrl );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public void setScmTagBase( String tagBase )\n    {\n        checkInitialized();\n\n        releaseProperties.setProperty( SCM_TAG_BASE, tagBase );\n    }","id":58676,"modified_method":"public void setScmTagBase( String tagBase )\n    {\n        releaseProperties.setProperty( SCM_TAG_BASE, tagBase );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public String getScmTagBase()\n    {\n        checkLoaded();\n\n        return releaseProperties.getProperty( SCM_TAG_BASE );\n    }","id":58677,"modified_method":"public String getScmTagBase()\n    {\n        return releaseProperties.getProperty( SCM_TAG_BASE );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public static ReleaseProgressTracker load( String basedir )\n        throws IOException\n    {\n        File releasePropertiesFile = new File( basedir, RELEASE_PROPERTIES );\n\n        ReleaseProgressTracker tracker = new ReleaseProgressTracker();\n\n        InputStream inStream = null;\n\n        try\n        {\n            inStream = new FileInputStream( releasePropertiesFile );\n\n            Properties rp = new Properties();\n\n            rp.load( inStream );\n\n            tracker.releaseProperties = rp;\n        }\n        finally\n        {\n            IOUtil.close( inStream );\n        }\n\n        return tracker;\n    }","id":58678,"modified_method":"public static ReleaseProgressTracker load( String basedir )\n        throws IOException\n    {\n        File releasePropertiesFile = new File( basedir, RELEASE_PROPERTIES );\n\n        InputStream inStream = null;\n\n        Properties rp;\n        try\n        {\n            inStream = new FileInputStream( releasePropertiesFile );\n\n            rp = new Properties();\n\n            rp.load( inStream );\n        }\n        finally\n        {\n            IOUtil.close( inStream );\n        }\n\n        return new ReleaseProgressTracker( rp );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public String getScmTag()\n    {\n        checkLoaded();\n\n        return releaseProperties.getProperty( SCM_TAG );\n    }","id":58679,"modified_method":"public String getScmTag()\n    {\n        return releaseProperties.getProperty( SCM_TAG );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public void setUsername( String username )\n    {\n        checkInitialized();\n\n        releaseProperties.setProperty( USERNAME, username );\n    }","id":58680,"modified_method":"public void setUsername( String username )\n    {\n        releaseProperties.setProperty( USERNAME, username );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public String getUsername()\n    {\n        checkLoaded();\n\n        return releaseProperties.getProperty( USERNAME );\n    }","id":58681,"modified_method":"public String getUsername()\n    {\n        return releaseProperties.getProperty( USERNAME );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public boolean verifyCheckpoint( String pointName )\n    {\n        checkLoaded();\n\n        return resumeAtCheckpoint && \"OK\".equals( releaseProperties.getProperty( CHECKPOINT_PREFIX + pointName ) );\n    }","id":58682,"modified_method":"public boolean verifyCheckpoint( String pointName )\n    {\n        return resumeAtCheckpoint && \"OK\".equals( releaseProperties.getProperty( CHECKPOINT_PREFIX + pointName ) );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public String getPassword()\n    {\n        checkInitialized();\n\n        return releaseProperties.getProperty( SCM_PASSWORD );\n    }","id":58683,"modified_method":"public String getPassword()\n    {\n        return releaseProperties.getProperty( SCM_PASSWORD );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"public void setScmTag( String scmTag )\n    {\n        checkInitialized();\n\n        releaseProperties.setProperty( SCM_TAG, scmTag );\n    }","id":58684,"modified_method":"public void setScmTag( String scmTag )\n    {\n        releaseProperties.setProperty( SCM_TAG, scmTag );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"private void setCheckpoint( String pointName )\n    {\n        checkInitialized();\n\n        releaseProperties.setProperty( CHECKPOINT_PREFIX + pointName, \"OK\" );\n    }","id":58685,"modified_method":"private void setCheckpoint( String pointName )\n    {\n        releaseProperties.setProperty( CHECKPOINT_PREFIX + pointName, \"OK\" );\n    }","commit_id":"22f9a34107d27782bab8e88b50b54708304b73dc","url":"https://github.com/apache/maven"},{"original_method":"@Nullable\n  private static Ref<PyType> getOptionalType(@NotNull PsiElement element, @NotNull TypeEvalContext context) {\n    if (element instanceof PySubscriptionExpression) {\n      final PySubscriptionExpression subscriptionExpr = (PySubscriptionExpression)element;\n      final PyExpression operand = subscriptionExpr.getOperand();\n      final String operandName = resolveToQualifiedName(operand, context);\n      if (\"typing.Optional\".equals(operandName)) {\n        final PyExpression indexExpr = subscriptionExpr.getIndexExpression();\n        if (indexExpr != null) {\n          final PyType type = getType(indexExpr, context);\n          if (type != null) {\n            return Ref.create(PyUnionType.union(type, PyNoneType.INSTANCE));\n          }\n        }\n        return Ref.create();\n      }\n    }\n    return null;\n  }","id":58686,"modified_method":"@Nullable\n  private static Ref<PyType> getOptionalType(@NotNull PsiElement element, @NotNull TypeEvalContext context) {\n    if (element instanceof PySubscriptionExpression) {\n      final PySubscriptionExpression subscriptionExpr = (PySubscriptionExpression)element;\n      final PyExpression operand = subscriptionExpr.getOperand();\n      final Collection<String> operandNames = resolveToQualifiedNames(operand, context);\n      if (operandNames.contains(\"typing.Optional\")) {\n        final PyExpression indexExpr = subscriptionExpr.getIndexExpression();\n        if (indexExpr != null) {\n          final PyType type = getType(indexExpr, context);\n          if (type != null) {\n            return Ref.create(PyUnionType.union(type, PyNoneType.INSTANCE));\n          }\n        }\n        return Ref.create();\n      }\n    }\n    return null;\n  }","commit_id":"795d640d401bafc98f71e35a743422215c709f2a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static PyType getCallableType(@NotNull PsiElement resolved, @NotNull TypeEvalContext context) {\n    if (resolved instanceof PySubscriptionExpression) {\n      final PySubscriptionExpression subscriptionExpr = (PySubscriptionExpression)resolved;\n      final PyExpression operand = subscriptionExpr.getOperand();\n      final String operandName = resolveToQualifiedName(operand, context);\n      if (\"typing.Callable\".equals(operandName)) {\n        final PyExpression indexExpr = subscriptionExpr.getIndexExpression();\n        if (indexExpr instanceof PyTupleExpression) {\n          final PyTupleExpression tupleExpr = (PyTupleExpression)indexExpr;\n          final PyExpression[] elements = tupleExpr.getElements();\n          if (elements.length == 2) {\n            final PyExpression parametersExpr = elements[0];\n            if (parametersExpr instanceof PyListLiteralExpression) {\n              final List<PyCallableParameter> parameters = new ArrayList<PyCallableParameter>();\n              final PyListLiteralExpression listExpr = (PyListLiteralExpression)parametersExpr;\n              for (PyExpression argExpr : listExpr.getElements()) {\n                parameters.add(new PyCallableParameterImpl(null, getType(argExpr, context)));\n              }\n              final PyExpression returnTypeExpr = elements[1];\n              final PyType returnType = getType(returnTypeExpr, context);\n              return new PyCallableTypeImpl(parameters, returnType);\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }","id":58687,"modified_method":"@Nullable\n  private static PyType getCallableType(@NotNull PsiElement resolved, @NotNull TypeEvalContext context) {\n    if (resolved instanceof PySubscriptionExpression) {\n      final PySubscriptionExpression subscriptionExpr = (PySubscriptionExpression)resolved;\n      final PyExpression operand = subscriptionExpr.getOperand();\n      final Collection<String> operandNames = resolveToQualifiedNames(operand, context);\n      if (operandNames.contains(\"typing.Callable\")) {\n        final PyExpression indexExpr = subscriptionExpr.getIndexExpression();\n        if (indexExpr instanceof PyTupleExpression) {\n          final PyTupleExpression tupleExpr = (PyTupleExpression)indexExpr;\n          final PyExpression[] elements = tupleExpr.getElements();\n          if (elements.length == 2) {\n            final PyExpression parametersExpr = elements[0];\n            if (parametersExpr instanceof PyListLiteralExpression) {\n              final List<PyCallableParameter> parameters = new ArrayList<PyCallableParameter>();\n              final PyListLiteralExpression listExpr = (PyListLiteralExpression)parametersExpr;\n              for (PyExpression argExpr : listExpr.getElements()) {\n                parameters.add(new PyCallableParameterImpl(null, getType(argExpr, context)));\n              }\n              final PyExpression returnTypeExpr = elements[1];\n              final PyType returnType = getType(returnTypeExpr, context);\n              return new PyCallableTypeImpl(parameters, returnType);\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }","commit_id":"795d640d401bafc98f71e35a743422215c709f2a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static String resolveToQualifiedName(@NotNull PyExpression expression, @NotNull TypeEvalContext context) {\n    return getQualifiedName(tryResolving(expression, context));\n  }","id":58688,"modified_method":"@NotNull\n  private static Collection<String> resolveToQualifiedNames(@NotNull PyExpression expression, @NotNull TypeEvalContext context) {\n    final Set<String> names = Sets.newLinkedHashSet();\n    for (PsiElement resolved : tryResolving(expression, context)) {\n      final String name = getQualifiedName(resolved);\n      if (name != null) {\n        names.add(name);\n      }\n    }\n    return names;\n  }","commit_id":"795d640d401bafc98f71e35a743422215c709f2a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static PyGenericType getGenericType(@NotNull PsiElement element, @NotNull TypeEvalContext context) {\n    if (element instanceof PyCallExpression) {\n      final PyCallExpression assignedCall = (PyCallExpression)element;\n      final PyExpression callee = assignedCall.getCallee();\n      if (callee != null) {\n        final String calleeQName = resolveToQualifiedName(callee, context);\n        if (\"typing.TypeVar\".equals(calleeQName)) {\n          final PyExpression[] arguments = assignedCall.getArguments();\n          if (arguments.length > 0) {\n            final PyExpression firstArgument = arguments[0];\n            if (firstArgument instanceof PyStringLiteralExpression) {\n              final String name = ((PyStringLiteralExpression)firstArgument).getStringValue();\n              if (name != null) {\n                return new PyGenericType(name, getGenericTypeBound(arguments, context));\n              }\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }","id":58689,"modified_method":"@Nullable\n  private static PyGenericType getGenericType(@NotNull PsiElement element, @NotNull TypeEvalContext context) {\n    if (element instanceof PyCallExpression) {\n      final PyCallExpression assignedCall = (PyCallExpression)element;\n      final PyExpression callee = assignedCall.getCallee();\n      if (callee != null) {\n        final Collection<String> calleeQNames = resolveToQualifiedNames(callee, context);\n        if (calleeQNames.contains(\"typing.TypeVar\")) {\n          final PyExpression[] arguments = assignedCall.getArguments();\n          if (arguments.length > 0) {\n            final PyExpression firstArgument = arguments[0];\n            if (firstArgument instanceof PyStringLiteralExpression) {\n              final String name = ((PyStringLiteralExpression)firstArgument).getStringValue();\n              if (name != null) {\n                return new PyGenericType(name, getGenericTypeBound(arguments, context));\n              }\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }","commit_id":"795d640d401bafc98f71e35a743422215c709f2a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private static PsiElement tryResolving(@NotNull PyExpression expression, @NotNull TypeEvalContext context) {\n    if (expression instanceof PyReferenceExpression) {\n      final PyReferenceExpression referenceExpr = (PyReferenceExpression)expression;\n      final PyResolveContext resolveContext = PyResolveContext.noImplicits().withTypeEvalContext(context);\n      final PsiPolyVariantReference reference = referenceExpr.getReference(resolveContext);\n      final PsiElement element = reference.resolve();\n      if (element instanceof PyFunction) {\n        final PyFunction function = (PyFunction)element;\n        if (PyUtil.isInit(function)) {\n          final PyClass cls = function.getContainingClass();\n          if (cls != null) {\n            return cls;\n          }\n        }\n      }\n      else if (element instanceof PyTargetExpression) {\n        final PyTargetExpression targetExpr = (PyTargetExpression)element;\n        // XXX: Requires switching from stub to AST\n        final PyExpression assignedValue = targetExpr.findAssignedValue();\n        if (assignedValue != null) {\n          return assignedValue;\n        }\n      }\n      if (element != null) {\n        return element;\n      }\n    }\n    return expression;\n  }","id":58690,"modified_method":"@NotNull\n  private static List<PsiElement> tryResolving(@NotNull PyExpression expression, @NotNull TypeEvalContext context) {\n    final List<PsiElement> elements = Lists.newArrayList();\n    if (expression instanceof PyReferenceExpression) {\n      final PyReferenceExpression referenceExpr = (PyReferenceExpression)expression;\n      final PyResolveContext resolveContext = PyResolveContext.noImplicits().withTypeEvalContext(context);\n      final PsiPolyVariantReference reference = referenceExpr.getReference(resolveContext);\n      final List<PsiElement> resolved = PyUtil.multiResolveTopPriority(reference);\n      for (PsiElement element : resolved) {\n        if (element instanceof PyFunction) {\n          final PyFunction function = (PyFunction)element;\n          if (PyUtil.isInit(function)) {\n            final PyClass cls = function.getContainingClass();\n            if (cls != null) {\n              elements.add(cls);\n              continue;\n            }\n          }\n        }\n        else if (element instanceof PyTargetExpression) {\n          final PyTargetExpression targetExpr = (PyTargetExpression)element;\n          // XXX: Requires switching from stub to AST\n          final PyExpression assignedValue = targetExpr.findAssignedValue();\n          if (assignedValue != null) {\n            elements.add(assignedValue);\n            continue;\n          }\n        }\n        if (element != null) {\n          elements.add(element);\n        }\n      }\n    }\n    return !elements.isEmpty() ? elements : Collections.<PsiElement>singletonList(expression);\n  }","commit_id":"795d640d401bafc98f71e35a743422215c709f2a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private static List<PyGenericType> collectGenericTypes(@NotNull PyClass cls, @NotNull TypeEvalContext context) {\n    boolean isGeneric = false;\n    for (PyClass ancestor : cls.getAncestorClasses(context)) {\n      if (GENERIC_CLASSES.contains(ancestor.getQualifiedName())) {\n        isGeneric = true;\n        break;\n      }\n    }\n    if (isGeneric) {\n      final ArrayList<PyGenericType> results = new ArrayList<PyGenericType>();\n      // XXX: Requires switching from stub to AST\n      for (PyExpression expr : cls.getSuperClassExpressions()) {\n        if (expr instanceof PySubscriptionExpression) {\n          final PyExpression indexExpr = ((PySubscriptionExpression)expr).getIndexExpression();\n          if (indexExpr != null) {\n            final PsiElement resolved = tryResolving(indexExpr, context);\n            final PyGenericType genericType = getGenericType(resolved, context);\n            if (genericType != null) {\n              results.add(genericType);\n            }\n          }\n        }\n      }\n      return results;\n    }\n    return Collections.emptyList();\n  }","id":58691,"modified_method":"@NotNull\n  private static List<PyGenericType> collectGenericTypes(@NotNull PyClass cls, @NotNull TypeEvalContext context) {\n    boolean isGeneric = false;\n    for (PyClass ancestor : cls.getAncestorClasses(context)) {\n      if (GENERIC_CLASSES.contains(ancestor.getQualifiedName())) {\n        isGeneric = true;\n        break;\n      }\n    }\n    if (isGeneric) {\n      final ArrayList<PyGenericType> results = new ArrayList<PyGenericType>();\n      // XXX: Requires switching from stub to AST\n      for (PyExpression expr : cls.getSuperClassExpressions()) {\n        if (expr instanceof PySubscriptionExpression) {\n          final PyExpression indexExpr = ((PySubscriptionExpression)expr).getIndexExpression();\n          if (indexExpr != null) {\n            for (PsiElement resolved : tryResolving(indexExpr, context)) {\n              final PyGenericType genericType = getGenericType(resolved, context);\n              if (genericType != null) {\n                results.add(genericType);\n              }\n            }\n          }\n        }\n      }\n      return results;\n    }\n    return Collections.emptyList();\n  }","commit_id":"795d640d401bafc98f71e35a743422215c709f2a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static PyType getUnionType(@NotNull PsiElement element, @NotNull TypeEvalContext context) {\n    if (element instanceof PySubscriptionExpression) {\n      final PySubscriptionExpression subscriptionExpr = (PySubscriptionExpression)element;\n      final PyExpression operand = subscriptionExpr.getOperand();\n      final String operandName = resolveToQualifiedName(operand, context);\n      if (\"typing.Union\".equals(operandName)) {\n        return PyUnionType.union(getIndexTypes(subscriptionExpr, context));\n      }\n    }\n    return null;\n  }","id":58692,"modified_method":"@Nullable\n  private static PyType getUnionType(@NotNull PsiElement element, @NotNull TypeEvalContext context) {\n    if (element instanceof PySubscriptionExpression) {\n      final PySubscriptionExpression subscriptionExpr = (PySubscriptionExpression)element;\n      final PyExpression operand = subscriptionExpr.getOperand();\n      final Collection<String> operandNames = resolveToQualifiedNames(operand, context);\n      if (operandNames.contains(\"typing.Union\")) {\n        return PyUnionType.union(getIndexTypes(subscriptionExpr, context));\n      }\n    }\n    return null;\n  }","commit_id":"795d640d401bafc98f71e35a743422215c709f2a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  private static PyType getType(@NotNull PyExpression expression, @NotNull TypeEvalContext context) {\n    final PsiElement resolved = tryResolving(expression, context);\n    return getTypeForResolvedElement(resolved, context);\n  }","id":58693,"modified_method":"@Nullable\n  private static PyType getType(@NotNull PyExpression expression, @NotNull TypeEvalContext context) {\n    final List<PyType> members = Lists.newArrayList();\n    for (PsiElement resolved : tryResolving(expression, context)) {\n      members.add(getTypeForResolvedElement(resolved, context));\n    }\n    return PyUnionType.union(members);\n  }","commit_id":"795d640d401bafc98f71e35a743422215c709f2a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@DSLValidation\n\tvoid validatePorts(final DSLValidationContext validationContext) throws DSLValidationException {\n\t\tif (this.entity.getDiscoveryPort() == null) {\n\t\t\tentity.setDiscoveryPort(CloudifyConstants.DEFAULT_LUS_PORT);\n\t\t}\n\t\tsuper.validatePort(this.entity.getPort());\n\t\tsuper.validatePort(this.entity.getDiscoveryPort());\n\t}","id":58694,"modified_method":"@DSLValidation\n\tvoid validatePorts(final DSLValidationContext validationContext) throws DSLValidationException {\n//\t\tif (this.entity.getDiscoveryPort() == null) {\n//\t\t\tentity.setDiscoveryPort(CloudifyConstants.DEFAULT_LUS_PORT);\n//\t\t}\n\t\tsuper.validatePort(this.entity.getPort());\n//\t\tsuper.validatePort(this.entity.getDiscoveryPort());\n\t}","commit_id":"0c257d5b0b43fc4ebd07cd9d5b60304ab4fda32a","url":"https://github.com/CloudifySource/cloudify"},{"original_method":"/**\n\t *\n\t * @param cloudConfigDirectory\n\t *            .\n\t * @return The cloud.\n\t * @throws DSLException .\n\t */\n\tpublic static Cloud readCloudFromDirectory(final String cloudConfigDirectory)\n\t\t\tthrows DSLException {\n\t\tfinal DSLReader reader = new DSLReader();\n\t\treader.setDslFileNameSuffix(DSLUtils.CLOUD_DSL_FILE_NAME_SUFFIX);\n\t\treader.setWorkDir(new File(cloudConfigDirectory));\n\t\treader.setCreateServiceContext(false);\n\t\treturn reader.readDslEntity(Cloud.class);\n\t}","id":58695,"modified_method":"/**\n\t *\n\t * @param cloudConfigDirectory\n\t *            .\n\t * @return The cloud.\n\t * @throws DSLException .\n\t */\n\tpublic static Cloud readCloudFromDirectory(final String cloudConfigDirectory)\n\t\t\tthrows DSLException {\n\t\treturn readCloudFromDirectory(cloudConfigDirectory, null);\n\t}","commit_id":"0c257d5b0b43fc4ebd07cd9d5b60304ab4fda32a","url":"https://github.com/CloudifySource/cloudify"},{"original_method":"/**\n\t *\n\t * @param dslFile\n\t *            .\n\t * @return The cloud.\n\t * @throws IOException .\n\t * @throws DSLException .\n\t */\n\tpublic static org.cloudifysource.domain.cloud.Cloud readCloud(final File dslFile)\n\t\t\tthrows IOException,\n\t\t\tDSLException {\n\n\t\tif (!dslFile.exists()) {\n\t\t\tthrow new FileNotFoundException(dslFile.getAbsolutePath());\n\t\t}\n\n\t\tfinal String dslContents = FileUtils.readFileToString(dslFile);\n\n\t\treturn readCloud(dslContents, dslFile);\n\t}","id":58696,"modified_method":"/**\n\t *\n\t * @param dslFile\n\t *            .\n\t * @return The cloud.\n\t * @throws IOException .\n\t * @throws DSLException .\n\t */\n\tpublic static Cloud readCloud(final File dslFile)\n\t\t\tthrows IOException,\n\t\t\tDSLException {\n\n\t\tif (!dslFile.exists()) {\n\t\t\tthrow new FileNotFoundException(dslFile.getAbsolutePath());\n\t\t}\n\n\t\tfinal String dslContents = FileUtils.readFileToString(dslFile);\n\t\tfinal Cloud cloud = readCloud(dslContents, dslFile);\n\t\tsetDependentCloudProperties(null, cloud);\n\t\treturn cloud; \n\t}","commit_id":"0c257d5b0b43fc4ebd07cd9d5b60304ab4fda32a","url":"https://github.com/CloudifySource/cloudify"},{"original_method":"/**\n\t *\n\t * @param cloudConfigDirectory\n\t *            .\n\t * @param overridesScript\n\t *            - a String containing the overrides properties. (not a file path)\n\t * @return The cloud.\n\t * @throws DSLException .\n\t */\n\tpublic static Cloud readCloudFromDirectory(final String cloudConfigDirectory, final String overridesScript)\n\t\t\tthrows DSLException {\n\t\tfinal DSLReader reader = new DSLReader();\n\t\treader.setDslFileNameSuffix(DSLUtils.CLOUD_DSL_FILE_NAME_SUFFIX);\n\t\treader.setWorkDir(new File(cloudConfigDirectory));\n\t\treader.setCreateServiceContext(false);\n\t\treader.setOverridesScript(overridesScript);\n\t\treturn reader.readDslEntity(Cloud.class);\n\t}","id":58697,"modified_method":"/**\n\t *\n\t * @param cloudConfigDirectory\n\t *            .\n\t * @param overridesScript\n\t *            - a String containing the overrides properties. (not a file path)\n\t * @return The cloud.\n\t * @throws DSLException .\n\t */\n\tpublic static Cloud readCloudFromDirectory(final String cloudConfigDirectory, final String overridesScript)\n\t\t\tthrows DSLException {\n\t\tfinal DSLReader reader = new DSLReader();\n\t\treader.setDslFileNameSuffix(DSLUtils.CLOUD_DSL_FILE_NAME_SUFFIX);\n\t\treader.setWorkDir(new File(cloudConfigDirectory));\n\t\treader.setCreateServiceContext(false);\n\t\treader.setOverridesScript(overridesScript);\n\t\tfinal Cloud cloud = reader.readDslEntity(Cloud.class);\n\t\tsetDependentCloudProperties(null, cloud);\n\t\treturn cloud;\n\t}","commit_id":"0c257d5b0b43fc4ebd07cd9d5b60304ab4fda32a","url":"https://github.com/CloudifySource/cloudify"},{"original_method":"/**\n\t *\n\t * @param cloudConfigDirectory\n\t *            .\n\t * @return The cloud.\n\t * @throws DSLException .\n\t */\n\tpublic static Cloud readCloudFromDirectory(final File cloudConfigDirectory)\n\t\t\tthrows DSLException {\n\t\tfinal DSLReader reader = new DSLReader();\n\t\treader.setDslFileNameSuffix(DSLUtils.CLOUD_DSL_FILE_NAME_SUFFIX);\n\t\treader.setWorkDir(cloudConfigDirectory);\n\t\treader.setCreateServiceContext(false);\n\t\treturn reader.readDslEntity(Cloud.class);\n\t}","id":58698,"modified_method":"/**\n\t *\n\t * @param cloudConfigDirectory\n\t *            .\n\t * @return The cloud.\n\t * @throws DSLException .\n\t */\n\tpublic static Cloud readCloudFromDirectory(final File cloudConfigDirectory)\n\t\t\tthrows DSLException {\n\t\treturn readCloudFromDirectory(cloudConfigDirectory.getAbsolutePath(), null);\n\t}","commit_id":"0c257d5b0b43fc4ebd07cd9d5b60304ab4fda32a","url":"https://github.com/CloudifySource/cloudify"},{"original_method":"private ServiceConfiguration handleDsl() throws DSLException, IOException {\n\t\tFile dslFile = null;\n\n\t\tif (serviceFileName != null) {\n\t\t\tdslFile = new File(this.puExtDir, this.serviceFileName);\n\t\t}\n\t\tServiceContext serviceContext = new ServiceContextImpl(clusterInfo, this.puExtDir.getCanonicalPath());\n\t\tClusterInfo clusterInfoToUseInGsc = this.clusterInfo;\n\t\tif (clusterInfoToUseInGsc == null) {\n\t\t\tclusterInfoToUseInGsc = new ClusterInfo(null, 1, 0, 1, 0);\n\t\t}\n\n\t\t// create an uninitialized service context\n\t\tString canonicalPath = null;\n\t\ttry {\n\t\t\tcanonicalPath = this.puExtDir.getCanonicalPath();\n\t\t} catch (IOException e) {\n\t\t\tthrow new DSLException(\"Failed to get canonical path of work directory: \" + canonicalPath + \". Error was: \"\n\t\t\t\t\t+ e.getMessage(), e);\n\t\t}\n\t\t//TODO: Why are these the same\n\t\tif (isRunningInGSC) {\n\t\t\tserviceContext = new ServiceContextImpl(clusterInfoToUseInGsc, canonicalPath);\n\t\t} else {\n\t\t\tserviceContext = new ServiceContextImpl(new ClusterInfo(null, 1, 0, 1, 0), canonicalPath);\n\t\t}\n\n\t\tDSLReader dslReader = new DSLReader();\n\t\tdslReader.setContext(serviceContext);\n\t\tdslReader.setPropertiesFileName(propertiesFileName);\n\t\tdslReader.setRunningInGSC(isRunningInGSC);\n\t\tdslReader.setDslFile(dslFile);\n\t\tdslReader.setWorkDir(this.puExtDir);\n\t\tdslReader.setDslFileNameSuffix(DSLUtils.SERVICE_DSL_FILE_NAME_SUFFIX);\n\n\t\t// When loading a service in the USM, expect the jar files to\n\t\t// be available in the pu lib dir, and ignore the contents of usmlib\n\t\tdslReader.setLoadUsmLib(false);\n\n\t\tlogger.info(\"Loading Service configuration from DSL File\");\n\t\tService service = dslReader.readDslEntity(Service.class);\n\t\tif (isRunningInGSC) {\n\t\t\tif (clusterInfoToUseInGsc.getName() == null) {\n\t\t\t\tclusterInfoToUseInGsc.setName(ServiceUtils.getAbsolutePUName(\n\t\t\t\t\t\tCloudifyConstants.DEFAULT_APPLICATION_NAME, service.getName()));\n\t\t\t}\n\t\t\t\n\t\t\t((ServiceContextImpl)serviceContext).init(service, USMUtils.getAdmin(), clusterInfoToUseInGsc);\n\t\t} else {\n\t\t\t((ServiceContextImpl)serviceContext).initInIntegratedContainer(service);\n\t\t}\n\t\t\n\t\treturn new ServiceConfiguration(service, serviceContext, this.puExtDir, dslReader.getDslFile(),\n\t\t\t\tdslReader.getDSLClassLoader());\n\t}","id":58699,"modified_method":"private ServiceConfiguration handleDsl() throws DSLException, IOException {\n\t\tFile dslFile = null;\n\n\t\tif (serviceFileName != null) {\n\t\t\tdslFile = new File(this.puExtDir, this.serviceFileName);\n\t\t}\n\t\tServiceContext serviceContext = new ServiceContextImpl(clusterInfo, this.puExtDir.getCanonicalPath());\n\t\tClusterInfo clusterInfoToUseInGsc = this.clusterInfo;\n\t\tif (clusterInfoToUseInGsc == null) {\n\t\t\tclusterInfoToUseInGsc = new ClusterInfo(null, 1, 0, 1, 0);\n\t\t}\n\n\t\t// create an uninitialized service context\n\t\tString canonicalPath = null;\n\t\ttry {\n\t\t\tcanonicalPath = this.puExtDir.getCanonicalPath();\n\t\t} catch (IOException e) {\n\t\t\tthrow new DSLException(\"Failed to get canonical path of work directory: \" + canonicalPath + \". Error was: \"\n\t\t\t\t\t+ e.getMessage(), e);\n\t\t}\n\t\t//TODO: Why are these the same? do I still need the isRunningInGSC flag?\n\t\tif (isRunningInGSC) {\n\t\t\tserviceContext = new ServiceContextImpl(clusterInfoToUseInGsc, canonicalPath);\n\t\t} else {\n\t\t\tserviceContext = new ServiceContextImpl(new ClusterInfo(null, 1, 0, 1, 0), canonicalPath);\n\t\t}\n\n\t\tDSLReader dslReader = new DSLReader();\n\t\tdslReader.setCreateServiceContext(false);\n\t\tdslReader.setPropertiesFileName(propertiesFileName);\n\t\tdslReader.setRunningInGSC(isRunningInGSC);\n\t\tdslReader.setDslFile(dslFile);\n\t\tdslReader.setWorkDir(this.puExtDir);\n\t\tdslReader.setDslFileNameSuffix(DSLUtils.SERVICE_DSL_FILE_NAME_SUFFIX);\n\n\t\t// When loading a service in the USM, expect the jar files to\n\t\t// be available in the pu lib dir, and ignore the contents of usmlib\n\t\tdslReader.setLoadUsmLib(false);\n\n\t\tlogger.info(\"Loading Service configuration from DSL File\");\n\t\tService service = dslReader.readDslEntity(Service.class);\n\t\tif (isRunningInGSC) {\n\t\t\tif (clusterInfoToUseInGsc.getName() == null) {\n\t\t\t\tclusterInfoToUseInGsc.setName(ServiceUtils.getAbsolutePUName(\n\t\t\t\t\t\tCloudifyConstants.DEFAULT_APPLICATION_NAME, service.getName()));\n\t\t\t}\n\t\t\t\n\t\t\t((ServiceContextImpl)serviceContext).init(service, USMUtils.getAdmin(), clusterInfoToUseInGsc);\n\t\t} else {\n\t\t\t((ServiceContextImpl)serviceContext).initInIntegratedContainer(service);\n\t\t}\n\t\t\n\t\treturn new ServiceConfiguration(service, serviceContext, this.puExtDir, dslReader.getDslFile(),\n\t\t\t\tdslReader.getDSLClassLoader());\n\t}","commit_id":"0c257d5b0b43fc4ebd07cd9d5b60304ab4fda32a","url":"https://github.com/CloudifySource/cloudify"},{"original_method":"public DefaultDependencyFactory(Set<IDependencyImplementationFactory> dependencyFactories,\n                                    IDependencyImplementationFactory clientModuleFactory,\n                                    ProjectDependencyFactory projectDependencyFactory) {\n        this.dependencyFactories = dependencyFactories;\n        this.clientModuleFactory = clientModuleFactory;\n        this.projectDependencyFactory = projectDependencyFactory;\n    }","id":58700,"modified_method":"public DefaultDependencyFactory(NotationParser<Dependency> dependencyNotationParser,\n                                    DefaultClientModuleFactory clientModuleFactory,\n                                    ProjectDependencyFactory projectDependencyFactory) {\n        this.dependencyNotationParser = dependencyNotationParser;\n        this.clientModuleFactory = clientModuleFactory;\n        this.projectDependencyFactory = projectDependencyFactory;\n    }","commit_id":"2ee8b1a29b00f9971ccf6afbf0ee3fc6747d4616","url":"https://github.com/gradle/gradle"},{"original_method":"public Dependency createDependency(Object dependencyNotation) {\n        if (dependencyNotation instanceof Dependency) {\n            return (Dependency) dependencyNotation;\n        }\n        \n        Dependency dependency = null;\n        for (IDependencyImplementationFactory factory : dependencyFactories) {\n            try {\n                dependency = factory.createDependency(Dependency.class, dependencyNotation);\n                break;\n            } catch (IllegalDependencyNotation e) {\n                // ignore\n            } catch (Exception e) {\n                throw new GradleException(String.format(\"Could not create a dependency using notation: %s\", dependencyNotation), e);\n            }\n        }\n\n        if (dependency == null) {\n            throw new InvalidUserDataException(String.format(\"The dependency notation: %s is invalid.\",\n                    dependencyNotation));\n        }\n        return dependency;\n    }","id":58701,"modified_method":"public Dependency createDependency(Object dependencyNotation) {\n        return dependencyNotationParser.parseNotation(dependencyNotation);\n    }","commit_id":"2ee8b1a29b00f9971ccf6afbf0ee3fc6747d4616","url":"https://github.com/gradle/gradle"},{"original_method":"protected DependencyFactory createDependencyFactory() {\n        Instantiator instantiator = get(Instantiator.class);\n        DefaultProjectDependencyFactory projectDependencyFactory = new DefaultProjectDependencyFactory(\n                get(StartParameter.class).getProjectDependenciesBuildInstruction(),\n                instantiator);\n        return new DefaultDependencyFactory(\n                WrapUtil.<IDependencyImplementationFactory>toSet(\n                        new ModuleDependencyFactory(\n                                instantiator),\n                        new SelfResolvingDependencyFactory(\n                                instantiator),\n                        new ClassPathDependencyFactory(\n                                instantiator,\n                                get(ClassPathRegistry.class),\n                                new IdentityFileResolver()),\n                        projectDependencyFactory),\n                new DefaultClientModuleFactory(\n                        instantiator),\n                projectDependencyFactory);\n    }","id":58702,"modified_method":"protected DependencyFactory createDependencyFactory() {\n        Instantiator instantiator = get(Instantiator.class);\n        DefaultProjectDependencyFactory projectDependencyFactory = new DefaultProjectDependencyFactory(\n                get(StartParameter.class).getProjectDependenciesBuildInstruction(),\n                instantiator);\n        Set<IDependencyImplementationFactory> dependencyFactories = WrapUtil.toSet(\n                new ModuleDependencyFactory(\n                        instantiator),\n                new SelfResolvingDependencyFactory(\n                        instantiator),\n                new ClassPathDependencyFactory(\n                        instantiator,\n                        get(ClassPathRegistry.class),\n                        new IdentityFileResolver()),\n                projectDependencyFactory);\n        return new DefaultDependencyFactory(\n                new DependencyNotationParser(dependencyFactories),\n                new DefaultClientModuleFactory(instantiator),\n                projectDependencyFactory);\n    }","commit_id":"2ee8b1a29b00f9971ccf6afbf0ee3fc6747d4616","url":"https://github.com/gradle/gradle"},{"original_method":"private void checkProjectKeyConsistency(BatchReport.Metadata reportMetadata) {\n    String reportProjectKey = projectKeyFromReport(reportMetadata);\n    if (ceTask.getComponentKey() == null) {\n      throw MessageException.of(format(\n        \"Compute Engine task component key is null. Project with UUID %s must have been deleted since report was uploaded. Can not proceed.\",\n        ceTask.getComponentUuid()\n        ));\n    }\n    if (!ceTask.getComponentKey().equals(reportProjectKey)) {\n      throw MessageException.of(format(\n        \"ProjectKey in report (%s) is not consistent with projectKey under which the report as been submitted (%s)\",\n        reportProjectKey,\n        ceTask.getComponentKey()\n        ));\n    }\n  }","id":58703,"modified_method":"private void checkProjectKeyConsistency(BatchReport.Metadata reportMetadata) {\n    String reportProjectKey = projectKeyFromReport(reportMetadata);\n    String componentKey = ceTask.getComponentKey();\n    if (componentKey == null) {\n      throw MessageException.of(format(\n        \"Compute Engine task component key is null. Project with UUID %s must have been deleted since report was uploaded. Can not proceed.\",\n        ceTask.getComponentUuid()\n        ));\n    }\n    if (!componentKey.equals(reportProjectKey)) {\n      throw MessageException.of(format(\n        \"ProjectKey in report (%s) is not consistent with projectKey under which the report as been submitted (%s)\",\n        reportProjectKey,\n        componentKey\n        ));\n    }\n  }","commit_id":"a79ba66e5a40f4c7931da67b8a90f0f13bd25f18","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private static Set<String> ceActivityDtoToComponentUuids(Iterable<CeActivityDto> dtos) {\n    return from(dtos)\n      .transform(new Function<CeActivityDto, String>() {\n        @Override\n        @Nullable\n        public String apply(@Nonnull CeActivityDto input) {\n          return input.getComponentUuid();\n        }\n      })\n      .filter(notNull())\n      .toSet();\n  }","id":58704,"modified_method":"private static Set<String> ceActivityDtoToComponentUuids(Iterable<CeActivityDto> dtos) {\n    return from(dtos)\n      .transform(CeActivityDtoToComponentUuid.INSTANCE)\n      .filter(notNull())\n      .toSet();\n  }","commit_id":"a79ba66e5a40f4c7931da67b8a90f0f13bd25f18","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private static Set<String> ceQueueDtoToComponentUuids(Iterable<CeQueueDto> dtos) {\n    return from(dtos)\n      .transform(new Function<CeQueueDto, String>() {\n        @Override\n        @Nullable\n        public String apply(@Nonnull CeQueueDto input) {\n          return input.getComponentUuid();\n        }\n      })\n      .filter(notNull())\n      .toSet();\n  }","id":58705,"modified_method":"private static Set<String> ceQueueDtoToComponentUuids(Iterable<CeQueueDto> dtos) {\n    return from(dtos)\n      .transform(CeQueueDtoToComponentUuid.INSTANCE)\n      .filter(notNull())\n      .toSet();\n  }","commit_id":"a79ba66e5a40f4c7931da67b8a90f0f13bd25f18","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public boolean hasDelegationConflicts(final MemberDeclaration delegate) {\n      boolean _xblockexpression = false;\n      {\n        boolean conflict = false;\n        Iterable<? extends MemberDeclaration> _otherDelegates = this.otherDelegates(delegate);\n        for (final MemberDeclaration other : _otherDelegates) {\n          {\n            final Set<? extends TypeReference> otherInterfaces = this.getDelegatedInterfaces(other);\n            Set<? extends TypeReference> _delegatedInterfaces = this.getDelegatedInterfaces(delegate);\n            for (final TypeReference iface : _delegatedInterfaces) {\n              boolean _contains = otherInterfaces.contains(iface);\n              if (_contains) {\n                conflict = true;\n                StringConcatenation _builder = new StringConcatenation();\n                _builder.append(\"The interface \");\n                String _simpleName = iface.getSimpleName();\n                _builder.append(_simpleName, \"\");\n                _builder.append(\" is also implemented by the delegate \");\n                String _simpleName_1 = other.getSimpleName();\n                _builder.append(_simpleName_1, \"\");\n                this.context.addError(delegate, _builder.toString());\n              }\n            }\n          }\n        }\n        _xblockexpression = conflict;\n      }\n      return _xblockexpression;\n    }","id":58706,"modified_method":"public boolean hasDelegationConflicts(final MemberDeclaration delegate) {\n      boolean _xblockexpression = false;\n      {\n        boolean conflict = false;\n        Iterable<? extends MemberDeclaration> _otherDelegates = this.otherDelegates(delegate);\n        for (final MemberDeclaration other : _otherDelegates) {\n          {\n            final Set<TypeReference> otherInterfaces = this.getDelegatedInterfaces(other);\n            Set<TypeReference> _delegatedInterfaces = this.getDelegatedInterfaces(delegate);\n            for (final TypeReference iface : _delegatedInterfaces) {\n              boolean _contains = otherInterfaces.contains(iface);\n              if (_contains) {\n                conflict = true;\n                StringConcatenation _builder = new StringConcatenation();\n                _builder.append(\"The interface \");\n                String _simpleName = iface.getSimpleName();\n                _builder.append(_simpleName, \"\");\n                _builder.append(\" is also implemented by the delegate \");\n                String _simpleName_1 = other.getSimpleName();\n                _builder.append(_simpleName_1, \"\");\n                this.context.addError(delegate, _builder.toString());\n              }\n            }\n          }\n        }\n        _xblockexpression = conflict;\n      }\n      return _xblockexpression;\n    }","commit_id":"7cd9cca89fd97e1e46ac7bcece682eadfde71f92","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean areListedInterfacesValid(final MemberDeclaration delegate) {\n      boolean _xblockexpression = false;\n      {\n        TypeDeclaration _declaringType = delegate.getDeclaringType();\n        final TypeReference declaringType = this.context.newSelfTypeReference(_declaringType);\n        final Set<? extends TypeReference> interfacesOfDeclaringType = this.getImplementedInterfaces(declaringType);\n        TypeReference _type = this.getType(delegate);\n        final Set<? extends TypeReference> availableInterfaces = this.getImplementedInterfaces(_type);\n        final Set<TypeReference> listedInterfaces = this.listedInterfaces(delegate);\n        boolean valid = true;\n        for (final TypeReference iface : listedInterfaces) {\n          {\n            final Function1<TypeReference, Boolean> _function = new Function1<TypeReference, Boolean>() {\n              public Boolean apply(final TypeReference it) {\n                Type _type = it.getType();\n                Type _type_1 = iface.getType();\n                return Boolean.valueOf(Objects.equal(_type, _type_1));\n              }\n            };\n            boolean _exists = IterableExtensions.exists(availableInterfaces, _function);\n            boolean _not = (!_exists);\n            if (_not) {\n              StringConcatenation _builder = new StringConcatenation();\n              TypeReference _type_1 = this.getType(delegate);\n              String _simpleName = _type_1.getSimpleName();\n              _builder.append(_simpleName, \"\");\n              _builder.append(\" does not implement \");\n              String _simpleName_1 = iface.getSimpleName();\n              _builder.append(_simpleName_1, \"\");\n              this.context.addError(delegate, _builder.toString());\n              valid = false;\n            }\n            final Function1<TypeReference, Boolean> _function_1 = new Function1<TypeReference, Boolean>() {\n              public Boolean apply(final TypeReference it) {\n                Type _type = it.getType();\n                Type _type_1 = iface.getType();\n                return Boolean.valueOf(Objects.equal(_type, _type_1));\n              }\n            };\n            boolean _exists_1 = IterableExtensions.exists(interfacesOfDeclaringType, _function_1);\n            boolean _not_1 = (!_exists_1);\n            if (_not_1) {\n              StringConcatenation _builder_1 = new StringConcatenation();\n              String _simpleName_2 = declaringType.getSimpleName();\n              _builder_1.append(_simpleName_2, \"\");\n              _builder_1.append(\" does not implement \");\n              String _simpleName_3 = iface.getSimpleName();\n              _builder_1.append(_simpleName_3, \"\");\n              this.context.addError(delegate, _builder_1.toString());\n              valid = false;\n            }\n          }\n        }\n        boolean _and = false;\n        boolean _isEmpty = listedInterfaces.isEmpty();\n        if (!_isEmpty) {\n          _and = false;\n        } else {\n          Sets.SetView<? extends TypeReference> _intersection = Sets.intersection(interfacesOfDeclaringType, availableInterfaces);\n          boolean _isEmpty_1 = _intersection.isEmpty();\n          _and = _isEmpty_1;\n        }\n        if (_and) {\n          StringConcatenation _builder = new StringConcatenation();\n          TypeReference _type_1 = this.getType(delegate);\n          String _simpleName = _type_1.getSimpleName();\n          _builder.append(_simpleName, \"\");\n          _builder.append(\" and \");\n          String _simpleName_1 = declaringType.getSimpleName();\n          _builder.append(_simpleName_1, \"\");\n          _builder.append(\" have no interfaces in common\");\n          this.context.addError(delegate, _builder.toString());\n          valid = false;\n        }\n        _xblockexpression = valid;\n      }\n      return _xblockexpression;\n    }","id":58707,"modified_method":"public boolean areListedInterfacesValid(final MemberDeclaration delegate) {\n      boolean _xblockexpression = false;\n      {\n        TypeDeclaration _declaringType = delegate.getDeclaringType();\n        final TypeReference declaringType = this.context.newSelfTypeReference(_declaringType);\n        final Set<TypeReference> interfacesOfDeclaringType = this.getImplementedInterfaces(declaringType);\n        TypeReference _type = this.getType(delegate);\n        final Set<TypeReference> availableInterfaces = this.getImplementedInterfaces(_type);\n        final Set<TypeReference> listedInterfaces = this.listedInterfaces(delegate);\n        boolean valid = true;\n        for (final TypeReference iface : listedInterfaces) {\n          {\n            final Function1<TypeReference, Boolean> _function = new Function1<TypeReference, Boolean>() {\n              public Boolean apply(final TypeReference it) {\n                Type _type = it.getType();\n                Type _type_1 = iface.getType();\n                return Boolean.valueOf(Objects.equal(_type, _type_1));\n              }\n            };\n            boolean _exists = IterableExtensions.<TypeReference>exists(availableInterfaces, _function);\n            boolean _not = (!_exists);\n            if (_not) {\n              StringConcatenation _builder = new StringConcatenation();\n              TypeReference _type_1 = this.getType(delegate);\n              String _simpleName = _type_1.getSimpleName();\n              _builder.append(_simpleName, \"\");\n              _builder.append(\" does not implement \");\n              String _simpleName_1 = iface.getSimpleName();\n              _builder.append(_simpleName_1, \"\");\n              this.context.addError(delegate, _builder.toString());\n              valid = false;\n            }\n            final Function1<TypeReference, Boolean> _function_1 = new Function1<TypeReference, Boolean>() {\n              public Boolean apply(final TypeReference it) {\n                Type _type = it.getType();\n                Type _type_1 = iface.getType();\n                return Boolean.valueOf(Objects.equal(_type, _type_1));\n              }\n            };\n            boolean _exists_1 = IterableExtensions.<TypeReference>exists(interfacesOfDeclaringType, _function_1);\n            boolean _not_1 = (!_exists_1);\n            if (_not_1) {\n              StringConcatenation _builder_1 = new StringConcatenation();\n              String _simpleName_2 = declaringType.getSimpleName();\n              _builder_1.append(_simpleName_2, \"\");\n              _builder_1.append(\" does not implement \");\n              String _simpleName_3 = iface.getSimpleName();\n              _builder_1.append(_simpleName_3, \"\");\n              this.context.addError(delegate, _builder_1.toString());\n              valid = false;\n            }\n          }\n        }\n        boolean _and = false;\n        boolean _isEmpty = listedInterfaces.isEmpty();\n        if (!_isEmpty) {\n          _and = false;\n        } else {\n          Sets.SetView<TypeReference> _intersection = Sets.<TypeReference>intersection(interfacesOfDeclaringType, availableInterfaces);\n          boolean _isEmpty_1 = _intersection.isEmpty();\n          _and = _isEmpty_1;\n        }\n        if (_and) {\n          StringConcatenation _builder = new StringConcatenation();\n          TypeReference _type_1 = this.getType(delegate);\n          String _simpleName = _type_1.getSimpleName();\n          _builder.append(_simpleName, \"\");\n          _builder.append(\" and \");\n          String _simpleName_1 = declaringType.getSimpleName();\n          _builder.append(_simpleName_1, \"\");\n          _builder.append(\" have no interfaces in common\");\n          this.context.addError(delegate, _builder.toString());\n          valid = false;\n        }\n        _xblockexpression = valid;\n      }\n      return _xblockexpression;\n    }","commit_id":"7cd9cca89fd97e1e46ac7bcece682eadfde71f92","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<? extends TypeReference> getImplementedInterfaces(final TypeReference it) {\n      Iterable<? extends TypeReference> _declaredSuperTypes = it.getDeclaredSuperTypes();\n      final Function1<TypeReference, Set<? extends TypeReference>> _function = new Function1<TypeReference, Set<? extends TypeReference>>() {\n        public Set<? extends TypeReference> apply(final TypeReference it) {\n          return Util.this.getImplementedInterfaces(it);\n        }\n      };\n      Iterable<Set<? extends TypeReference>> _map = IterableExtensions.map(_declaredSuperTypes, _function);\n      Iterable<TypeReference> _flatten = Iterables.<TypeReference>concat(_map);\n      Iterable<TypeReference> _plus = Iterables.<TypeReference>concat(Collections.<TypeReference>unmodifiableList(CollectionLiterals.<TypeReference>newArrayList(it)), _flatten);\n      final Function1<TypeReference, Boolean> _function_1 = new Function1<TypeReference, Boolean>() {\n        public Boolean apply(final TypeReference it) {\n          Type _type = it.getType();\n          return Boolean.valueOf((_type instanceof InterfaceDeclaration));\n        }\n      };\n      Iterable<TypeReference> _filter = IterableExtensions.<TypeReference>filter(_plus, _function_1);\n      return IterableExtensions.<TypeReference>toSet(_filter);\n    }","id":58708,"modified_method":"public Set<TypeReference> getImplementedInterfaces(final TypeReference it) {\n      Set<TypeReference> _xblockexpression = null;\n      {\n        final LinkedHashSet<TypeReference> seen = CollectionLiterals.<TypeReference>newLinkedHashSet();\n        this.collectAllSuperTypes(it, seen);\n        final Function1<TypeReference, Boolean> _function = new Function1<TypeReference, Boolean>() {\n          public Boolean apply(final TypeReference it) {\n            Type _type = it.getType();\n            return Boolean.valueOf((_type instanceof InterfaceDeclaration));\n          }\n        };\n        Iterable<TypeReference> _filter = IterableExtensions.<TypeReference>filter(seen, _function);\n        _xblockexpression = IterableExtensions.<TypeReference>toSet(_filter);\n      }\n      return _xblockexpression;\n    }","commit_id":"7cd9cca89fd97e1e46ac7bcece682eadfde71f92","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<? extends TypeReference> getDelegatedInterfaces(final MemberDeclaration delegate) {\n      Set<? extends TypeReference> _xblockexpression = null;\n      {\n        TypeDeclaration _declaringType = delegate.getDeclaringType();\n        TypeReference _newSelfTypeReference = this.context.newSelfTypeReference(_declaringType);\n        final Set<? extends TypeReference> interfacesOfDeclaringType = this.getImplementedInterfaces(_newSelfTypeReference);\n        final Set<TypeReference> listedInterfaces = this.listedInterfaces(delegate);\n        TypeReference _type = this.getType(delegate);\n        final Set<? extends TypeReference> availableInterfaces = this.getImplementedInterfaces(_type);\n        final Function1<TypeReference, Boolean> _function = new Function1<TypeReference, Boolean>() {\n          public Boolean apply(final TypeReference iface) {\n            boolean _and = false;\n            boolean _contains = interfacesOfDeclaringType.contains(iface);\n            if (!_contains) {\n              _and = false;\n            } else {\n              boolean _or = false;\n              boolean _isEmpty = listedInterfaces.isEmpty();\n              if (_isEmpty) {\n                _or = true;\n              } else {\n                final Function1<TypeReference, Boolean> _function = new Function1<TypeReference, Boolean>() {\n                  public Boolean apply(final TypeReference it) {\n                    return Boolean.valueOf(iface.isAssignableFrom(it));\n                  }\n                };\n                boolean _exists = IterableExtensions.<TypeReference>exists(listedInterfaces, _function);\n                _or = _exists;\n              }\n              _and = _or;\n            }\n            return Boolean.valueOf(_and);\n          }\n        };\n        Iterable<? extends TypeReference> _filter = IterableExtensions.filter(availableInterfaces, _function);\n        _xblockexpression = IterableExtensions.toSet(_filter);\n      }\n      return _xblockexpression;\n    }","id":58709,"modified_method":"public Set<TypeReference> getDelegatedInterfaces(final MemberDeclaration delegate) {\n      Set<TypeReference> _xblockexpression = null;\n      {\n        TypeDeclaration _declaringType = delegate.getDeclaringType();\n        TypeReference _newSelfTypeReference = this.context.newSelfTypeReference(_declaringType);\n        final Set<TypeReference> interfacesOfDeclaringType = this.getImplementedInterfaces(_newSelfTypeReference);\n        final Set<TypeReference> listedInterfaces = this.listedInterfaces(delegate);\n        TypeReference _type = this.getType(delegate);\n        final Set<TypeReference> availableInterfaces = this.getImplementedInterfaces(_type);\n        final Function1<TypeReference, Boolean> _function = new Function1<TypeReference, Boolean>() {\n          public Boolean apply(final TypeReference iface) {\n            boolean _and = false;\n            boolean _contains = interfacesOfDeclaringType.contains(iface);\n            if (!_contains) {\n              _and = false;\n            } else {\n              boolean _or = false;\n              boolean _isEmpty = listedInterfaces.isEmpty();\n              if (_isEmpty) {\n                _or = true;\n              } else {\n                final Function1<TypeReference, Boolean> _function = new Function1<TypeReference, Boolean>() {\n                  public Boolean apply(final TypeReference it) {\n                    return Boolean.valueOf(iface.isAssignableFrom(it));\n                  }\n                };\n                boolean _exists = IterableExtensions.<TypeReference>exists(listedInterfaces, _function);\n                _or = _exists;\n              }\n              _and = _or;\n            }\n            return Boolean.valueOf(_and);\n          }\n        };\n        Iterable<TypeReference> _filter = IterableExtensions.<TypeReference>filter(availableInterfaces, _function);\n        _xblockexpression = IterableExtensions.<TypeReference>toSet(_filter);\n      }\n      return _xblockexpression;\n    }","commit_id":"7cd9cca89fd97e1e46ac7bcece682eadfde71f92","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<ResolvedMethod> getMethodsToImplement(final MemberDeclaration delegate) {\n      Set<? extends TypeReference> _delegatedInterfaces = this.getDelegatedInterfaces(delegate);\n      final Function1<TypeReference, Iterable<? extends ResolvedMethod>> _function = new Function1<TypeReference, Iterable<? extends ResolvedMethod>>() {\n        public Iterable<? extends ResolvedMethod> apply(final TypeReference it) {\n          return it.getDeclaredResolvedMethods();\n        }\n      };\n      Iterable<Iterable<? extends ResolvedMethod>> _map = IterableExtensions.map(_delegatedInterfaces, _function);\n      Iterable<ResolvedMethod> _flatten = Iterables.<ResolvedMethod>concat(_map);\n      final Function1<ResolvedMethod, Boolean> _function_1 = new Function1<ResolvedMethod, Boolean>() {\n        public Boolean apply(final ResolvedMethod it) {\n          TypeDeclaration _declaringType = delegate.getDeclaringType();\n          MethodDeclaration _declaration = it.getDeclaration();\n          String _simpleName = _declaration.getSimpleName();\n          Iterable<? extends ResolvedParameter> _resolvedParameters = it.getResolvedParameters();\n          final Function1<ResolvedParameter, TypeReference> _function = new Function1<ResolvedParameter, TypeReference>() {\n            public TypeReference apply(final ResolvedParameter it) {\n              return it.getResolvedType();\n            }\n          };\n          Iterable<TypeReference> _map = IterableExtensions.map(_resolvedParameters, _function);\n          MethodDeclaration _findDeclaredMethod = _declaringType.findDeclaredMethod(_simpleName, ((TypeReference[])Conversions.unwrapArray(_map, TypeReference.class)));\n          return Boolean.valueOf(Objects.equal(_findDeclaredMethod, null));\n        }\n      };\n      Iterable<ResolvedMethod> _filter = IterableExtensions.<ResolvedMethod>filter(_flatten, _function_1);\n      final Function1<ResolvedMethod, Boolean> _function_2 = new Function1<ResolvedMethod, Boolean>() {\n        public Boolean apply(final ResolvedMethod it) {\n          boolean _isObjectMethod = Util.this.isObjectMethod(it);\n          return Boolean.valueOf((!_isObjectMethod));\n        }\n      };\n      Iterable<ResolvedMethod> _filter_1 = IterableExtensions.<ResolvedMethod>filter(_filter, _function_2);\n      final Function1<ResolvedMethod, String> _function_3 = new Function1<ResolvedMethod, String>() {\n        public String apply(final ResolvedMethod it) {\n          return it.getSimpleSignature();\n        }\n      };\n      Map<String, List<ResolvedMethod>> _groupBy = IterableExtensions.<String, ResolvedMethod>groupBy(_filter_1, _function_3);\n      Collection<List<ResolvedMethod>> _values = _groupBy.values();\n      final Function1<List<ResolvedMethod>, ResolvedMethod> _function_4 = new Function1<List<ResolvedMethod>, ResolvedMethod>() {\n        public ResolvedMethod apply(final List<ResolvedMethod> it) {\n          return IterableExtensions.<ResolvedMethod>head(it);\n        }\n      };\n      Iterable<ResolvedMethod> _map_1 = IterableExtensions.<List<ResolvedMethod>, ResolvedMethod>map(_values, _function_4);\n      return IterableExtensions.<ResolvedMethod>toSet(_map_1);\n    }","id":58710,"modified_method":"public Set<ResolvedMethod> getMethodsToImplement(final MemberDeclaration delegate) {\n      Set<TypeReference> _delegatedInterfaces = this.getDelegatedInterfaces(delegate);\n      final Function1<TypeReference, Iterable<? extends ResolvedMethod>> _function = new Function1<TypeReference, Iterable<? extends ResolvedMethod>>() {\n        public Iterable<? extends ResolvedMethod> apply(final TypeReference it) {\n          return it.getDeclaredResolvedMethods();\n        }\n      };\n      Iterable<Iterable<? extends ResolvedMethod>> _map = IterableExtensions.<TypeReference, Iterable<? extends ResolvedMethod>>map(_delegatedInterfaces, _function);\n      Iterable<ResolvedMethod> _flatten = Iterables.<ResolvedMethod>concat(_map);\n      final Function1<ResolvedMethod, Boolean> _function_1 = new Function1<ResolvedMethod, Boolean>() {\n        public Boolean apply(final ResolvedMethod it) {\n          TypeDeclaration _declaringType = delegate.getDeclaringType();\n          MethodDeclaration _declaration = it.getDeclaration();\n          String _simpleName = _declaration.getSimpleName();\n          Iterable<? extends ResolvedParameter> _resolvedParameters = it.getResolvedParameters();\n          final Function1<ResolvedParameter, TypeReference> _function = new Function1<ResolvedParameter, TypeReference>() {\n            public TypeReference apply(final ResolvedParameter it) {\n              return it.getResolvedType();\n            }\n          };\n          Iterable<TypeReference> _map = IterableExtensions.map(_resolvedParameters, _function);\n          MethodDeclaration _findDeclaredMethod = _declaringType.findDeclaredMethod(_simpleName, ((TypeReference[])Conversions.unwrapArray(_map, TypeReference.class)));\n          return Boolean.valueOf(Objects.equal(_findDeclaredMethod, null));\n        }\n      };\n      Iterable<ResolvedMethod> _filter = IterableExtensions.<ResolvedMethod>filter(_flatten, _function_1);\n      final Function1<ResolvedMethod, Boolean> _function_2 = new Function1<ResolvedMethod, Boolean>() {\n        public Boolean apply(final ResolvedMethod it) {\n          boolean _isObjectMethod = Util.this.isObjectMethod(it);\n          return Boolean.valueOf((!_isObjectMethod));\n        }\n      };\n      Iterable<ResolvedMethod> _filter_1 = IterableExtensions.<ResolvedMethod>filter(_filter, _function_2);\n      final Function1<ResolvedMethod, String> _function_3 = new Function1<ResolvedMethod, String>() {\n        public String apply(final ResolvedMethod it) {\n          return it.getSimpleSignature();\n        }\n      };\n      Map<String, List<ResolvedMethod>> _groupBy = IterableExtensions.<String, ResolvedMethod>groupBy(_filter_1, _function_3);\n      Collection<List<ResolvedMethod>> _values = _groupBy.values();\n      final Function1<List<ResolvedMethod>, ResolvedMethod> _function_4 = new Function1<List<ResolvedMethod>, ResolvedMethod>() {\n        public ResolvedMethod apply(final List<ResolvedMethod> it) {\n          return IterableExtensions.<ResolvedMethod>head(it);\n        }\n      };\n      Iterable<ResolvedMethod> _map_1 = IterableExtensions.<List<ResolvedMethod>, ResolvedMethod>map(_values, _function_4);\n      return IterableExtensions.<ResolvedMethod>toSet(_map_1);\n    }","commit_id":"7cd9cca89fd97e1e46ac7bcece682eadfde71f92","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void registerEditorActionKeys(final TargetContentsPresenter targetContentsPresenter)\n   {\n      // Register shortcut CTRL+S to save as fuzzy\n      // @formatter:off\n      KeyShortcut saveFuzzyShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.CTRL_KEY, 'S'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsFuzzy())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.saveAsFuzzy(targetContentsPresenter.getCurrentTransUnitIdOrNull());\n               }\n            }).build();\n      // @formatter:on\n      keyShortcutPresenter.register(saveFuzzyShortcut);\n\n      KeyShortcutEventHandler saveAsApprovedKeyShortcutHandler = new KeyShortcutEventHandler()\n      {\n         @Override\n         public void onKeyShortcut(KeyShortcutEvent event)\n         {\n            targetContentsPresenter.checkConfirmationBeforeSave();\n         }\n      };\n\n      // @formatter:off\n      KeyShortcut ctrlEnterShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.CTRL_KEY, KeyCodes.KEY_ENTER))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsApproved())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(saveAsApprovedKeyShortcutHandler)\n            .build();\n      keyShortcutPresenter.register(ctrlEnterShortcut);\n      enterSavesApprovedShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ENTER))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsApproved())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(saveAsApprovedKeyShortcutHandler)\n            .build();\n      // @formatter:on\n      if (configHolder.getState().isEnterSavesApproved())\n      {\n         enterSavesApprovedHandlerRegistration = keyShortcutPresenter.register(enterSavesApprovedShortcut);\n      }\n\n      // Remove esc key\n//      // @formatter:off\n//      KeyShortcut escClosesEditorShortcut = KeyShortcut.Builder.builder()\n//            .addKey(new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ESCAPE))\n//            .setContext(ShortcutContext.Edit).setDescription(messages.cancelChanges())\n//            .setHandler(new KeyShortcutEventHandler()\n//            {\n//               @Override\n//               public void onKeyShortcut(KeyShortcutEvent event)\n//               {\n//                  if (!keyShortcutPresenter.getDisplay().isShowing())\n//                  {\n//                     targetContentsPresenter.onCancel(targetContentsPresenter.getCurrentTransUnitIdOrNull());\n//                  }\n//               }\n//            }).build();\n//      // @formatter:on\n      // keyShortcutPresenter.register(escClosesEditorShortcut);\n\n      // @formatter:off\n      KeyShortcut copySourceShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, 'G'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.copyFromSource()).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.copySourceForActiveRow();\n               }\n            }).build();\n      // @formatter:on\n      keyShortcutPresenter.register(copySourceShortcut);\n   }","id":58711,"modified_method":"protected void registerEditorActionKeys(final TargetContentsPresenter targetContentsPresenter)\n   {\n      // Register shortcut CTRL+S to save as fuzzy\n      // @formatter:off\n      KeyShortcut saveFuzzyShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.CTRL_KEY, 'S'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsFuzzy())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.saveAsFuzzy(targetContentsPresenter.getCurrentTransUnitIdOrNull());\n               }\n            }).build();\n      // @formatter:on\n      keyShortcutPresenter.register(saveFuzzyShortcut);\n\n      KeyShortcutEventHandler saveAsApprovedKeyShortcutHandler = new KeyShortcutEventHandler()\n      {\n         @Override\n         public void onKeyShortcut(KeyShortcutEvent event)\n         {\n            targetContentsPresenter.checkConfirmationBeforeSave();\n         }\n      };\n\n      // @formatter:off\n      KeyShortcut ctrlEnterShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.CTRL_KEY, KeyCodes.KEY_ENTER))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsApproved())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(saveAsApprovedKeyShortcutHandler)\n            .build();\n      keyShortcutPresenter.register(ctrlEnterShortcut);\n      enterSavesApprovedShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ENTER))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsApproved())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(saveAsApprovedKeyShortcutHandler)\n            .build();\n      // @formatter:on\n      if (configHolder.getState().isEnterSavesApproved())\n      {\n         enterSavesApprovedHandlerRegistration = keyShortcutPresenter.register(enterSavesApprovedShortcut);\n      }\n\n      // Remove esc key\n//      // @formatter:off\n//      KeyShortcut escClosesEditorShortcut = KeyShortcut.Builder.builder()\n//            .addKey(new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ESCAPE))\n//            .setContext(ShortcutContext.Edit).setDescription(messages.cancelChanges())\n//            .setHandler(new KeyShortcutEventHandler()\n//            {\n//               @Override\n//               public void onKeyShortcut(KeyShortcutEvent event)\n//               {\n//                  if (!keyShortcutPresenter.getDisplay().isShowing())\n//                  {\n//                     targetContentsPresenter.onCancel(targetContentsPresenter.getCurrentTransUnitIdOrNull());\n//                  }\n//               }\n//            }).build();\n//      // @formatter:on\n      // keyShortcutPresenter.register(escClosesEditorShortcut);\n\n      // @formatter:off\n      KeyShortcut copySourceShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, 'G'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.copyFromSource())\n            .setStopPropagation(true)\n            .setPreventDefault(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.copySourceForActiveRow();\n               }\n            }).build();\n      // @formatter:on\n      keyShortcutPresenter.register(copySourceShortcut);\n   }","commit_id":"6a2372a91c781543fc211df6c22c311bdf4a8d78","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void testRegisterEditorActionKeys()\n   {\n      // by default user config settings\n      when(messages.saveAsFuzzy()).thenReturn(\"save fuzzy\");\n      when(messages.saveAsApproved()).thenReturn(\"save approved\");\n      when(messages.copyFromSource()).thenReturn(\"copy from source\");\n      \n      keyShortcuts.registerEditorActionKeys(targetContentsPresenter);\n\n      verify(keyShortcutPresenter, times(3)).register(keyShortcutCaptor.capture());\n      List<KeyShortcut> keys = keyShortcutCaptor.getAllValues();\n      assertKeys(keys.get(0), \"save fuzzy\", true, true, new Keys(Keys.CTRL_KEY, 'S'));\n      assertKeys(keys.get(1), \"save approved\", true, true, new Keys(Keys.CTRL_KEY, KeyCodes.KEY_ENTER));\n      assertKeys(keys.get(2), \"copy from source\", false, false, new Keys(Keys.ALT_KEY, 'G'));\n   }","id":58712,"modified_method":"@Test\n   public void testRegisterEditorActionKeys()\n   {\n      // by default user config settings\n      when(messages.saveAsFuzzy()).thenReturn(\"save fuzzy\");\n      when(messages.saveAsApproved()).thenReturn(\"save approved\");\n      when(messages.copyFromSource()).thenReturn(\"copy from source\");\n      \n      keyShortcuts.registerEditorActionKeys(targetContentsPresenter);\n\n      verify(keyShortcutPresenter, times(3)).register(keyShortcutCaptor.capture());\n      List<KeyShortcut> keys = keyShortcutCaptor.getAllValues();\n      assertKeys(keys.get(0), \"save fuzzy\", true, true, new Keys(Keys.CTRL_KEY, 'S'));\n      assertKeys(keys.get(1), \"save approved\", true, true, new Keys(Keys.CTRL_KEY, KeyCodes.KEY_ENTER));\n      assertKeys(keys.get(2), \"copy from source\", true, true, new Keys(Keys.ALT_KEY, 'G'));\n   }","commit_id":"6a2372a91c781543fc211df6c22c311bdf4a8d78","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void registerEditorActionKeysAfterChangeUserConfig()\n   {\n      // enter and esc now active\n      when(messages.saveAsFuzzy()).thenReturn(\"save fuzzy\");\n      when(messages.saveAsApproved()).thenReturn(\"save approved\");\n      when(messages.copyFromSource()).thenReturn(\"copy from source\");\n      \n      configHolder.setEnterSavesApproved(true);\n\n      keyShortcuts.registerEditorActionKeys(targetContentsPresenter);\n\n      verify(keyShortcutPresenter, times(4)).register(keyShortcutCaptor.capture());\n      List<KeyShortcut> keys = keyShortcutCaptor.getAllValues();\n      assertKeys(keys.get(0), \"save fuzzy\", true, true, new Keys(Keys.CTRL_KEY, 'S'));\n      assertKeys(keys.get(1), \"save approved\", true, true, new Keys(Keys.CTRL_KEY, KeyCodes.KEY_ENTER));\n      assertKeys(keys.get(2), \"save approved\", true, true, new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ENTER));\n      assertKeys(keys.get(3), \"copy from source\", false, false, new Keys(Keys.ALT_KEY, 'G'));\n   }","id":58713,"modified_method":"@Test\n   public void registerEditorActionKeysAfterChangeUserConfig()\n   {\n      // enter and esc now active\n      when(messages.saveAsFuzzy()).thenReturn(\"save fuzzy\");\n      when(messages.saveAsApproved()).thenReturn(\"save approved\");\n      when(messages.copyFromSource()).thenReturn(\"copy from source\");\n      \n      configHolder.setEnterSavesApproved(true);\n\n      keyShortcuts.registerEditorActionKeys(targetContentsPresenter);\n\n      verify(keyShortcutPresenter, times(4)).register(keyShortcutCaptor.capture());\n      List<KeyShortcut> keys = keyShortcutCaptor.getAllValues();\n      assertKeys(keys.get(0), \"save fuzzy\", true, true, new Keys(Keys.CTRL_KEY, 'S'));\n      assertKeys(keys.get(1), \"save approved\", true, true, new Keys(Keys.CTRL_KEY, KeyCodes.KEY_ENTER));\n      assertKeys(keys.get(2), \"save approved\", true, true, new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ENTER));\n      assertKeys(keys.get(3), \"copy from source\", true, true, new Keys(Keys.ALT_KEY, 'G'));\n   }","commit_id":"6a2372a91c781543fc211df6c22c311bdf4a8d78","url":"https://github.com/zanata/zanata-server"},{"original_method":"protected void registerEditorActionKeys(final TargetContentsPresenter targetContentsPresenter)\n   {\n      // Register shortcut CTRL+S to save as fuzzy\n      // @formatter:off\n      KeyShortcut saveFuzzyShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.CTRL_KEY, 'S'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsFuzzy())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.saveAsFuzzy(targetContentsPresenter.getCurrentTransUnitIdOrNull());\n               }\n            }).build();\n      // @formatter:on\n      keyShortcutPresenter.register(saveFuzzyShortcut);\n\n      KeyShortcutEventHandler saveAsApprovedKeyShortcutHandler = new KeyShortcutEventHandler()\n      {\n         @Override\n         public void onKeyShortcut(KeyShortcutEvent event)\n         {\n            targetContentsPresenter.checkConfirmationBeforeSave();\n         }\n      };\n\n      // @formatter:off\n      KeyShortcut ctrlEnterShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.CTRL_KEY, KeyCodes.KEY_ENTER))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsApproved())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(saveAsApprovedKeyShortcutHandler)\n            .build();\n      keyShortcutPresenter.register(ctrlEnterShortcut);\n      enterSavesApprovedShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ENTER))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsApproved())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(saveAsApprovedKeyShortcutHandler)\n            .build();\n      // @formatter:on\n      if (configHolder.getState().isEnterSavesApproved())\n      {\n         enterSavesApprovedHandlerRegistration = keyShortcutPresenter.register(enterSavesApprovedShortcut);\n      }\n\n      // Remove esc key\n//      // @formatter:off\n//      KeyShortcut escClosesEditorShortcut = KeyShortcut.Builder.builder()\n//            .addKey(new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ESCAPE))\n//            .setContext(ShortcutContext.Edit).setDescription(messages.cancelChanges())\n//            .setHandler(new KeyShortcutEventHandler()\n//            {\n//               @Override\n//               public void onKeyShortcut(KeyShortcutEvent event)\n//               {\n//                  if (!keyShortcutPresenter.getDisplay().isShowing())\n//                  {\n//                     targetContentsPresenter.onCancel(targetContentsPresenter.getCurrentTransUnitIdOrNull());\n//                  }\n//               }\n//            }).build();\n//      // @formatter:on\n      // keyShortcutPresenter.register(escClosesEditorShortcut);\n\n      // @formatter:off\n      KeyShortcut copySourceShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, 'G'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.copyFromSource())\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.copySourceForActiveRow();\n               }\n            }).build();\n      // @formatter:on\n      keyShortcutPresenter.register(copySourceShortcut);\n   }","id":58714,"modified_method":"protected void registerEditorActionKeys(final TargetContentsPresenter targetContentsPresenter)\n   {\n      // Register shortcut CTRL+S to save as fuzzy\n      // @formatter:off\n      KeyShortcut saveFuzzyShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.CTRL_KEY, 'S'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsFuzzy())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.saveAsFuzzy(targetContentsPresenter.getCurrentTransUnitIdOrNull());\n               }\n            }).build();\n      // @formatter:on\n      keyShortcutPresenter.register(saveFuzzyShortcut);\n\n      KeyShortcutEventHandler saveAsApprovedKeyShortcutHandler = new KeyShortcutEventHandler()\n      {\n         @Override\n         public void onKeyShortcut(KeyShortcutEvent event)\n         {\n            targetContentsPresenter.checkConfirmationBeforeSave();\n         }\n      };\n\n      // @formatter:off\n      KeyShortcut ctrlEnterShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.CTRL_KEY, KeyCodes.KEY_ENTER))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsApproved())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(saveAsApprovedKeyShortcutHandler)\n            .build();\n      keyShortcutPresenter.register(ctrlEnterShortcut);\n      enterSavesApprovedShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ENTER))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsApproved())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(saveAsApprovedKeyShortcutHandler)\n            .build();\n      // @formatter:on\n      if (configHolder.getState().isEnterSavesApproved())\n      {\n         enterSavesApprovedHandlerRegistration = keyShortcutPresenter.register(enterSavesApprovedShortcut);\n      }\n\n      // Remove esc key\n//      // @formatter:off\n//      KeyShortcut escClosesEditorShortcut = KeyShortcut.Builder.builder()\n//            .addKey(new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ESCAPE))\n//            .setContext(ShortcutContext.Edit).setDescription(messages.cancelChanges())\n//            .setHandler(new KeyShortcutEventHandler()\n//            {\n//               @Override\n//               public void onKeyShortcut(KeyShortcutEvent event)\n//               {\n//                  if (!keyShortcutPresenter.getDisplay().isShowing())\n//                  {\n//                     targetContentsPresenter.onCancel(targetContentsPresenter.getCurrentTransUnitIdOrNull());\n//                  }\n//               }\n//            }).build();\n//      // @formatter:on\n      // keyShortcutPresenter.register(escClosesEditorShortcut);\n\n      // @formatter:off\n      KeyShortcut copySourceShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, 'G'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.copyFromSource()).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.copySourceForActiveRow();\n               }\n            }).build();\n      // @formatter:on\n      keyShortcutPresenter.register(copySourceShortcut);\n   }","commit_id":"d0856aa01e0bd0a57175d8c868324244dc8133c6","url":"https://github.com/zanata/zanata-server"},{"original_method":"protected void registerNavigationKeys(final TargetContentsPresenter targetContentsPresenter)\n   {\n      // @formatter:off\n      KeyShortcut moveNextShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_DOWN)).addKey(new Keys(Keys.ALT_KEY, 'K'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.moveToNextRow())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.moveToNextEntry();\n               }\n            }).build();\n      keyShortcutPresenter.register(moveNextShortcut);\n\n      KeyShortcut movePreviousShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_UP)).addKey(new Keys(Keys.ALT_KEY, 'J'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.moveToPreviousRow())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.moveToPreviousEntry();\n               }\n            }).build();\n      keyShortcutPresenter.register(movePreviousShortcut);\n\n      nextStateShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_PAGEDOWN))\n            .setContext(ShortcutContext.Edit).setDescription(messages.nextFuzzyOrUntranslated())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.savePendingChangesIfApplicable();\n                  eventBus.fireEvent(new NavTransUnitEvent(NextState));\n               }\n            }).build();\n      keyShortcutPresenter.register(nextStateShortcut);\n\n      prevStateShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_PAGEUP))\n            .setContext(ShortcutContext.Edit).setDescription(messages.prevFuzzyOrUntranslated())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.savePendingChangesIfApplicable();\n                  eventBus.fireEvent(new NavTransUnitEvent(PrevState));\n               }\n            }).build();\n      keyShortcutPresenter.register(prevStateShortcut);\n      // @formatter:on\n   }","id":58715,"modified_method":"protected void registerNavigationKeys(final TargetContentsPresenter targetContentsPresenter)\n   {\n      // @formatter:off\n      KeyShortcut moveNextShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_DOWN)).addKey(new Keys(Keys.ALT_KEY, 'K'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.moveToNextRow())\n            .setPreventDefault(true).setStopPropagation(true).setPreventDefault(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.moveToNextEntry();\n               }\n            }).build();\n      keyShortcutPresenter.register(moveNextShortcut);\n\n      KeyShortcut movePreviousShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_UP)).addKey(new Keys(Keys.ALT_KEY, 'J'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.moveToPreviousRow())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.moveToPreviousEntry();\n               }\n            }).build();\n      keyShortcutPresenter.register(movePreviousShortcut);\n\n      nextStateShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_PAGEDOWN))\n            .setContext(ShortcutContext.Edit).setDescription(messages.nextFuzzyOrUntranslated())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.savePendingChangesIfApplicable();\n                  eventBus.fireEvent(new NavTransUnitEvent(NextState));\n               }\n            }).build();\n      keyShortcutPresenter.register(nextStateShortcut);\n\n      prevStateShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_PAGEUP))\n            .setContext(ShortcutContext.Edit).setDescription(messages.prevFuzzyOrUntranslated())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.savePendingChangesIfApplicable();\n                  eventBus.fireEvent(new NavTransUnitEvent(PrevState));\n               }\n            }).build();\n      keyShortcutPresenter.register(prevStateShortcut);\n      // @formatter:on\n   }","commit_id":"d0856aa01e0bd0a57175d8c868324244dc8133c6","url":"https://github.com/zanata/zanata-server"},{"original_method":"protected void registerNavigationKeys(final TargetContentsPresenter targetContentsPresenter)\n   {\n      // @formatter:off\n      KeyShortcut moveNextShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_DOWN)).addKey(new Keys(Keys.ALT_KEY, 'K'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.moveToNextRow())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.moveToNextEntry();\n               }\n            }).build();\n      keyShortcutPresenter.register(moveNextShortcut);\n\n      KeyShortcut movePreviousShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_UP)).addKey(new Keys(Keys.ALT_KEY, 'J'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.moveToPreviousRow())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.moveToPreviousEntry();\n               }\n            }).build();\n      keyShortcutPresenter.register(movePreviousShortcut);\n\n      nextStateShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_PAGEDOWN))\n            .setContext(ShortcutContext.Edit).setDescription(messages.nextFuzzyOrUntranslated())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.savePendingChangesIfApplicable();\n                  eventBus.fireEvent(new NavTransUnitEvent(NextState));\n               }\n            }).build();\n      keyShortcutPresenter.register(nextStateShortcut);\n\n      prevStateShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_PAGEUP))\n            .setContext(ShortcutContext.Edit).setDescription(messages.prevFuzzyOrUntranslated())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.savePendingChangesIfApplicable();\n                  eventBus.fireEvent(new NavTransUnitEvent(PrevState));\n               }\n            }).build();\n      keyShortcutPresenter.register(prevStateShortcut);\n      // @formatter:on\n   }","id":58716,"modified_method":"protected void registerNavigationKeys(final TargetContentsPresenter targetContentsPresenter)\n   {\n      // @formatter:off\n      KeyShortcut moveNextShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_DOWN)).addKey(new Keys(Keys.ALT_KEY, 'K'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.moveToNextRow())\n            .setPreventDefault(true).setStopPropagation(true).setPreventDefault(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.moveToNextEntry();\n               }\n            }).build();\n      keyShortcutPresenter.register(moveNextShortcut);\n\n      KeyShortcut movePreviousShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_UP)).addKey(new Keys(Keys.ALT_KEY, 'J'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.moveToPreviousRow())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.moveToPreviousEntry();\n               }\n            }).build();\n      keyShortcutPresenter.register(movePreviousShortcut);\n\n      nextStateShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_PAGEDOWN))\n            .setContext(ShortcutContext.Edit).setDescription(messages.nextFuzzyOrUntranslated())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.savePendingChangesIfApplicable();\n                  eventBus.fireEvent(new NavTransUnitEvent(NextState));\n               }\n            }).build();\n      keyShortcutPresenter.register(nextStateShortcut);\n\n      prevStateShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, KeyCodes.KEY_PAGEUP))\n            .setContext(ShortcutContext.Edit).setDescription(messages.prevFuzzyOrUntranslated())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.savePendingChangesIfApplicable();\n                  eventBus.fireEvent(new NavTransUnitEvent(PrevState));\n               }\n            }).build();\n      keyShortcutPresenter.register(prevStateShortcut);\n      // @formatter:on\n   }","commit_id":"286a8fc3377986178b999dadd9ef7c37566f09c8","url":"https://github.com/zanata/zanata-server"},{"original_method":"protected void registerEditorActionKeys(final TargetContentsPresenter targetContentsPresenter)\n   {\n      // Register shortcut CTRL+S to save as fuzzy\n      // @formatter:off\n      KeyShortcut saveFuzzyShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.CTRL_KEY, 'S'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsFuzzy())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.saveAsFuzzy(targetContentsPresenter.getCurrentTransUnitIdOrNull());\n               }\n            }).build();\n      // @formatter:on\n      keyShortcutPresenter.register(saveFuzzyShortcut);\n\n      KeyShortcutEventHandler saveAsApprovedKeyShortcutHandler = new KeyShortcutEventHandler()\n      {\n         @Override\n         public void onKeyShortcut(KeyShortcutEvent event)\n         {\n            targetContentsPresenter.checkConfirmationBeforeSave();\n         }\n      };\n\n      // @formatter:off\n      KeyShortcut ctrlEnterShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.CTRL_KEY, KeyCodes.KEY_ENTER))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsApproved())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(saveAsApprovedKeyShortcutHandler)\n            .build();\n      keyShortcutPresenter.register(ctrlEnterShortcut);\n      enterSavesApprovedShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ENTER))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsApproved())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(saveAsApprovedKeyShortcutHandler)\n            .build();\n      // @formatter:on\n      if (configHolder.getState().isEnterSavesApproved())\n      {\n         enterSavesApprovedHandlerRegistration = keyShortcutPresenter.register(enterSavesApprovedShortcut);\n      }\n\n      // Remove esc key\n//      // @formatter:off\n//      KeyShortcut escClosesEditorShortcut = KeyShortcut.Builder.builder()\n//            .addKey(new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ESCAPE))\n//            .setContext(ShortcutContext.Edit).setDescription(messages.cancelChanges())\n//            .setHandler(new KeyShortcutEventHandler()\n//            {\n//               @Override\n//               public void onKeyShortcut(KeyShortcutEvent event)\n//               {\n//                  if (!keyShortcutPresenter.getDisplay().isShowing())\n//                  {\n//                     targetContentsPresenter.onCancel(targetContentsPresenter.getCurrentTransUnitIdOrNull());\n//                  }\n//               }\n//            }).build();\n//      // @formatter:on\n      // keyShortcutPresenter.register(escClosesEditorShortcut);\n\n      // @formatter:off\n      KeyShortcut copySourceShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, 'G'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.copyFromSource())\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.copySourceForActiveRow();\n               }\n            }).build();\n      // @formatter:on\n      keyShortcutPresenter.register(copySourceShortcut);\n   }","id":58717,"modified_method":"protected void registerEditorActionKeys(final TargetContentsPresenter targetContentsPresenter)\n   {\n      // Register shortcut CTRL+S to save as fuzzy\n      // @formatter:off\n      KeyShortcut saveFuzzyShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.CTRL_KEY, 'S'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsFuzzy())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.saveAsFuzzy(targetContentsPresenter.getCurrentTransUnitIdOrNull());\n               }\n            }).build();\n      // @formatter:on\n      keyShortcutPresenter.register(saveFuzzyShortcut);\n\n      KeyShortcutEventHandler saveAsApprovedKeyShortcutHandler = new KeyShortcutEventHandler()\n      {\n         @Override\n         public void onKeyShortcut(KeyShortcutEvent event)\n         {\n            targetContentsPresenter.checkConfirmationBeforeSave();\n         }\n      };\n\n      // @formatter:off\n      KeyShortcut ctrlEnterShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.CTRL_KEY, KeyCodes.KEY_ENTER))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsApproved())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(saveAsApprovedKeyShortcutHandler)\n            .build();\n      keyShortcutPresenter.register(ctrlEnterShortcut);\n      enterSavesApprovedShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ENTER))\n            .setContext(ShortcutContext.Edit).setDescription(messages.saveAsApproved())\n            .setPreventDefault(true).setStopPropagation(true)\n            .setHandler(saveAsApprovedKeyShortcutHandler)\n            .build();\n      // @formatter:on\n      if (configHolder.getState().isEnterSavesApproved())\n      {\n         enterSavesApprovedHandlerRegistration = keyShortcutPresenter.register(enterSavesApprovedShortcut);\n      }\n\n      // Remove esc key\n//      // @formatter:off\n//      KeyShortcut escClosesEditorShortcut = KeyShortcut.Builder.builder()\n//            .addKey(new Keys(Keys.NO_MODIFIER, KeyCodes.KEY_ESCAPE))\n//            .setContext(ShortcutContext.Edit).setDescription(messages.cancelChanges())\n//            .setHandler(new KeyShortcutEventHandler()\n//            {\n//               @Override\n//               public void onKeyShortcut(KeyShortcutEvent event)\n//               {\n//                  if (!keyShortcutPresenter.getDisplay().isShowing())\n//                  {\n//                     targetContentsPresenter.onCancel(targetContentsPresenter.getCurrentTransUnitIdOrNull());\n//                  }\n//               }\n//            }).build();\n//      // @formatter:on\n      // keyShortcutPresenter.register(escClosesEditorShortcut);\n\n      // @formatter:off\n      KeyShortcut copySourceShortcut = KeyShortcut.Builder.builder()\n            .addKey(new Keys(Keys.ALT_KEY, 'G'))\n            .setContext(ShortcutContext.Edit).setDescription(messages.copyFromSource()).setStopPropagation(true)\n            .setHandler(new KeyShortcutEventHandler()\n            {\n               @Override\n               public void onKeyShortcut(KeyShortcutEvent event)\n               {\n                  targetContentsPresenter.copySourceForActiveRow();\n               }\n            }).build();\n      // @formatter:on\n      keyShortcutPresenter.register(copySourceShortcut);\n   }","commit_id":"286a8fc3377986178b999dadd9ef7c37566f09c8","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n    public Expression transform(final Expression exp) {\n        if (exp instanceof BinaryExpression) {\n            Expression leftExpression = ((BinaryExpression) exp).getLeftExpression();\n            Expression rightExpression = ((BinaryExpression) exp).getRightExpression();\n            Token operation = ((BinaryExpression) exp).getOperation();\n            if (operation.getText().equals(\"=\")) {\n                String leftFieldName = null;\n                // it's an assignment\n                if (leftExpression instanceof VariableExpression && ((VariableExpression) leftExpression).getAccessedVariable() instanceof FieldNode) {\n                    leftFieldName = ((VariableExpression) leftExpression).getAccessedVariable().getName();\n                } else if (leftExpression instanceof FieldExpression) {\n                    leftFieldName = ((FieldExpression) leftExpression).getFieldName();\n                } else if (leftExpression instanceof PropertyExpression\n                        && (((PropertyExpression) leftExpression).isImplicitThis() || \"this\".equals(((PropertyExpression) leftExpression).getObjectExpression().getText()))) {\n                    leftFieldName = ((PropertyExpression) leftExpression).getPropertyAsString();\n                }\n                if (leftFieldName!=null) {\n                    String method = Traits.helperSetterName(new FieldNode(leftFieldName, 0, ClassHelper.OBJECT_TYPE, weaved.getOriginType(), null));\n                    MethodCallExpression mce = new MethodCallExpression(\n                            createFieldHelperReceiver(),\n                            method,\n                            new ArgumentListExpression(super.transform(rightExpression))\n                    );\n                    mce.setSourcePosition(exp);\n                    mce.setImplicitThis(false);\n                    return mce;\n                }\n            }\n            Expression leftTransform = transform(leftExpression);\n            Expression rightTransform = transform(rightExpression);\n            Expression ret =\n                    exp instanceof DeclarationExpression ?new DeclarationExpression(\n                            leftTransform, operation, rightTransform\n                    ):\n                    new BinaryExpression(leftTransform, operation, rightTransform);\n            ret.setSourcePosition(exp);\n            ret.copyNodeMetaData(exp);\n            return ret;\n        } else if (exp instanceof StaticMethodCallExpression) {\n            StaticMethodCallExpression call = (StaticMethodCallExpression) exp;\n            ClassNode ownerType = call.getOwnerType();\n            if (traitClass.equals(ownerType)) {\n                MethodCallExpression result = new MethodCallExpression(\n                        new VariableExpression(weaved),\n                        call.getMethod(),\n                        transform(call.getArguments())\n                );\n                result.setSafe(false);\n                result.setImplicitThis(false);\n                result.setSpreadSafe(false);\n                result.setSourcePosition(call);\n                return result;\n            }\n        } else if (exp instanceof MethodCallExpression) {\n            MethodCallExpression call = (MethodCallExpression) exp;\n            Expression obj = call.getObjectExpression();\n            if (call.isImplicitThis() || obj.getText().equals(\"this\")) {\n                Expression method = call.getMethod();\n                Expression arguments = call.getArguments();\n                if (method instanceof ConstantExpression) {\n                    String methodName = method.getText();\n                    List<MethodNode> methods = traitClass.getMethods(methodName);\n                    for (MethodNode methodNode : methods) {\n                        if (methodName.equals(methodNode.getName()) && methodNode.isPrivate()) {\n                            ArgumentListExpression newArgs = createArgumentList(arguments);\n                            MethodCallExpression transformed = new MethodCallExpression(\n                                    new VariableExpression(\"this\"),\n                                    methodName,\n                                    newArgs\n                            );\n                            transformed.setSourcePosition(call);\n                            transformed.setSafe(call.isSafe());\n                            transformed.setSpreadSafe(call.isSpreadSafe());\n                            transformed.setImplicitThis(true);\n                            return transformed;\n                        }\n                    }\n                }\n\n                MethodCallExpression transformed = new MethodCallExpression(\n                        weaved,\n                        method,\n                        transform(arguments)\n                );\n                transformed.setSourcePosition(call);\n                transformed.setSafe(call.isSafe());\n                transformed.setSpreadSafe(call.isSpreadSafe());\n                transformed.setImplicitThis(false);\n                return transformed;\n            }\n        } else if (exp instanceof FieldExpression) {\n            FieldNode field = ((FieldExpression) exp).getField();\n            MethodCallExpression mce = new MethodCallExpression(\n                    createFieldHelperReceiver(),\n                    Traits.helperGetterName(field),\n                    ArgumentListExpression.EMPTY_ARGUMENTS\n            );\n            mce.setSourcePosition(exp);\n            mce.setImplicitThis(false);\n            return mce;\n        } else if (exp instanceof VariableExpression) {\n            VariableExpression vexp = (VariableExpression) exp;\n            Variable accessedVariable = vexp.getAccessedVariable();\n            if (accessedVariable instanceof FieldNode) {\n                MethodCallExpression mce = new MethodCallExpression(\n                        createFieldHelperReceiver(),\n                        Traits.helperGetterName((FieldNode) accessedVariable),\n                        ArgumentListExpression.EMPTY_ARGUMENTS\n                );\n                mce.setSourcePosition(exp);\n                mce.setImplicitThis(false);\n                return mce;\n            } else if (accessedVariable instanceof PropertyNode) {\n                String propName = accessedVariable.getName();\n                if (knownFields.contains(propName)) {\n                    String method = Traits.helperGetterName(new FieldNode(propName, 0, ClassHelper.OBJECT_TYPE, weaved.getOriginType(), null));\n                    MethodCallExpression mce = new MethodCallExpression(\n                            createFieldHelperReceiver(),\n                            method,\n                            ArgumentListExpression.EMPTY_ARGUMENTS\n                    );\n                    mce.setSourcePosition(exp);\n                    mce.setImplicitThis(false);\n                    return mce;\n                } else {\n                    return new PropertyExpression(\n                            new VariableExpression(weaved),\n                            accessedVariable.getName()\n                    );\n                }\n            } else if (accessedVariable instanceof DynamicVariable) {\n                return new PropertyExpression(\n                        new VariableExpression(weaved),\n                        accessedVariable.getName()\n                );\n            }\n            if (vexp.isThisExpression()) {\n                VariableExpression res = new VariableExpression(weaved);\n                res.setSourcePosition(exp);\n                return res;\n            }\n            if (vexp.isSuperExpression()) {\n                ExceptionUtils.sneakyThrow(\n                        new SyntaxException(\"Call to super is not allowed in a trait\", vexp.getLineNumber(), vexp.getColumnNumber()));\n            }\n        } else if (exp instanceof PropertyExpression) {\n            PropertyExpression pexp = (PropertyExpression) exp;\n            Expression object = pexp.getObjectExpression();\n            if (pexp.isImplicitThis() || \"this\".equals(object.getText())) {\n                String propName = pexp.getPropertyAsString();\n                if (knownFields.contains(propName)) {\n                    String method = Traits.helperGetterName(new FieldNode(propName, 0, ClassHelper.OBJECT_TYPE, weaved.getOriginType(), null));\n                    MethodCallExpression mce = new MethodCallExpression(\n                            createFieldHelperReceiver(),\n                            method,\n                            ArgumentListExpression.EMPTY_ARGUMENTS\n                    );\n                    mce.setSourcePosition(exp);\n                    mce.setImplicitThis(false);\n                    return mce;\n                }\n            }\n        } else if (exp instanceof ClosureExpression) {\n            MethodCallExpression mce = new MethodCallExpression(\n                    exp,\n                    \"rehydrate\",\n                    new ArgumentListExpression(\n                            new VariableExpression(weaved),\n                            new VariableExpression(weaved),\n                            new VariableExpression(weaved)\n                    )\n            );\n            mce.setImplicitThis(false);\n            mce.setSourcePosition(exp);\n            return mce;\n        }\n\n        // todo: unary expressions (field++, field+=, ...)\n        return super.transform(exp);\n    }","id":58718,"modified_method":"@Override\n    public Expression transform(final Expression exp) {\n        ClassNode weavedType = weaved.getOriginType();\n        if (exp instanceof BinaryExpression) {\n            Expression leftExpression = ((BinaryExpression) exp).getLeftExpression();\n            Expression rightExpression = ((BinaryExpression) exp).getRightExpression();\n            Token operation = ((BinaryExpression) exp).getOperation();\n            if (operation.getText().equals(\"=\")) {\n                String leftFieldName = null;\n                // it's an assignment\n                if (leftExpression instanceof VariableExpression && ((VariableExpression) leftExpression).getAccessedVariable() instanceof FieldNode) {\n                    leftFieldName = ((VariableExpression) leftExpression).getAccessedVariable().getName();\n                } else if (leftExpression instanceof FieldExpression) {\n                    leftFieldName = ((FieldExpression) leftExpression).getFieldName();\n                } else if (leftExpression instanceof PropertyExpression\n                        && (((PropertyExpression) leftExpression).isImplicitThis() || \"this\".equals(((PropertyExpression) leftExpression).getObjectExpression().getText()))) {\n                    leftFieldName = ((PropertyExpression) leftExpression).getPropertyAsString();\n                }\n                if (leftFieldName!=null) {\n                    FieldNode fn = weavedType.getDeclaredField(leftFieldName);\n                    if (fn==null) {\n                        fn = new FieldNode(leftFieldName, 0, ClassHelper.OBJECT_TYPE, weavedType, null);\n                    }\n                    Expression receiver = createFieldHelperReceiver();\n                    if (fn.isStatic()) {\n                        receiver = new PropertyExpression(receiver, \"class\");\n                    }\n                    String method = Traits.helperSetterName(fn);\n                    MethodCallExpression mce = new MethodCallExpression(\n                            receiver,\n                            method,\n                            new ArgumentListExpression(super.transform(rightExpression))\n                    );\n                    mce.setSourcePosition(exp);\n                    mce.setImplicitThis(false);\n                    return mce;\n                }\n            }\n            Expression leftTransform = transform(leftExpression);\n            Expression rightTransform = transform(rightExpression);\n            Expression ret =\n                    exp instanceof DeclarationExpression ?new DeclarationExpression(\n                            leftTransform, operation, rightTransform\n                    ):\n                    new BinaryExpression(leftTransform, operation, rightTransform);\n            ret.setSourcePosition(exp);\n            ret.copyNodeMetaData(exp);\n            return ret;\n        } else if (exp instanceof StaticMethodCallExpression) {\n            StaticMethodCallExpression call = (StaticMethodCallExpression) exp;\n            ClassNode ownerType = call.getOwnerType();\n            if (traitClass.equals(ownerType)) {\n                MethodCallExpression result = new MethodCallExpression(\n                        new VariableExpression(weaved),\n                        call.getMethod(),\n                        transform(call.getArguments())\n                );\n                result.setSafe(false);\n                result.setImplicitThis(false);\n                result.setSpreadSafe(false);\n                result.setSourcePosition(call);\n                return result;\n            }\n        } else if (exp instanceof MethodCallExpression) {\n            MethodCallExpression call = (MethodCallExpression) exp;\n            Expression obj = call.getObjectExpression();\n            if (call.isImplicitThis() || obj.getText().equals(\"this\")) {\n                Expression method = call.getMethod();\n                Expression arguments = call.getArguments();\n                if (method instanceof ConstantExpression) {\n                    String methodName = method.getText();\n                    List<MethodNode> methods = traitClass.getMethods(methodName);\n                    for (MethodNode methodNode : methods) {\n                        if (methodName.equals(methodNode.getName()) && methodNode.isPrivate()) {\n                            ArgumentListExpression newArgs = createArgumentList(arguments);\n                            MethodCallExpression transformed = new MethodCallExpression(\n                                    new VariableExpression(\"this\"),\n                                    methodName,\n                                    newArgs\n                            );\n                            transformed.setSourcePosition(call);\n                            transformed.setSafe(call.isSafe());\n                            transformed.setSpreadSafe(call.isSpreadSafe());\n                            transformed.setImplicitThis(true);\n                            return transformed;\n                        }\n                    }\n                }\n\n                MethodCallExpression transformed = new MethodCallExpression(\n                        weaved,\n                        method,\n                        transform(arguments)\n                );\n                transformed.setSourcePosition(call);\n                transformed.setSafe(call.isSafe());\n                transformed.setSpreadSafe(call.isSpreadSafe());\n                transformed.setImplicitThis(false);\n                return transformed;\n            }\n        } else if (exp instanceof FieldExpression) {\n            FieldNode field = ((FieldExpression) exp).getField();\n            MethodCallExpression mce = new MethodCallExpression(\n                    createFieldHelperReceiver(),\n                    Traits.helperGetterName(field),\n                    ArgumentListExpression.EMPTY_ARGUMENTS\n            );\n            mce.setSourcePosition(exp);\n            mce.setImplicitThis(false);\n            return mce;\n        } else if (exp instanceof VariableExpression) {\n            VariableExpression vexp = (VariableExpression) exp;\n            Variable accessedVariable = vexp.getAccessedVariable();\n            if (accessedVariable instanceof FieldNode) {\n                FieldNode fn = (FieldNode) accessedVariable;\n                Expression receiver = createFieldHelperReceiver();\n                if (fn.isStatic()) {\n                    receiver = new PropertyExpression(createFieldHelperReceiver(), \"class\");\n                }\n                MethodCallExpression mce = new MethodCallExpression(\n                        receiver,\n                        Traits.helperGetterName((FieldNode) accessedVariable),\n                        ArgumentListExpression.EMPTY_ARGUMENTS\n                );\n                mce.setSourcePosition(exp);\n                mce.setImplicitThis(false);\n                return mce;\n            } else if (accessedVariable instanceof PropertyNode) {\n                String propName = accessedVariable.getName();\n                if (knownFields.contains(propName)) {\n                    String method = Traits.helperGetterName(new FieldNode(propName, 0, ClassHelper.OBJECT_TYPE, weavedType, null));\n                    MethodCallExpression mce = new MethodCallExpression(\n                            createFieldHelperReceiver(),\n                            method,\n                            ArgumentListExpression.EMPTY_ARGUMENTS\n                    );\n                    mce.setSourcePosition(exp);\n                    mce.setImplicitThis(false);\n                    return mce;\n                } else {\n                    return new PropertyExpression(\n                            new VariableExpression(weaved),\n                            accessedVariable.getName()\n                    );\n                }\n            } else if (accessedVariable instanceof DynamicVariable) {\n                return new PropertyExpression(\n                        new VariableExpression(weaved),\n                        accessedVariable.getName()\n                );\n            }\n            if (vexp.isThisExpression()) {\n                VariableExpression res = new VariableExpression(weaved);\n                res.setSourcePosition(exp);\n                return res;\n            }\n            if (vexp.isSuperExpression()) {\n                ExceptionUtils.sneakyThrow(\n                        new SyntaxException(\"Call to super is not allowed in a trait\", vexp.getLineNumber(), vexp.getColumnNumber()));\n            }\n        } else if (exp instanceof PropertyExpression) {\n            PropertyExpression pexp = (PropertyExpression) exp;\n            Expression object = pexp.getObjectExpression();\n            if (pexp.isImplicitThis() || \"this\".equals(object.getText())) {\n                String propName = pexp.getPropertyAsString();\n                if (knownFields.contains(propName)) {\n                    String method = Traits.helperGetterName(new FieldNode(propName, 0, ClassHelper.OBJECT_TYPE, weavedType, null));\n                    MethodCallExpression mce = new MethodCallExpression(\n                            createFieldHelperReceiver(),\n                            method,\n                            ArgumentListExpression.EMPTY_ARGUMENTS\n                    );\n                    mce.setSourcePosition(exp);\n                    mce.setImplicitThis(false);\n                    return mce;\n                }\n            }\n        } else if (exp instanceof ClosureExpression) {\n            MethodCallExpression mce = new MethodCallExpression(\n                    exp,\n                    \"rehydrate\",\n                    new ArgumentListExpression(\n                            new VariableExpression(weaved),\n                            new VariableExpression(weaved),\n                            new VariableExpression(weaved)\n                    )\n            );\n            mce.setImplicitThis(false);\n            mce.setSourcePosition(exp);\n            return mce;\n        }\n\n        // todo: unary expressions (field++, field+=, ...)\n        return super.transform(exp);\n    }","commit_id":"50e2b746fcc1b1d2803ca2acc3e1d2b78812b007","url":"https://github.com/apache/groovy"},{"original_method":"private void createHelperClass(final ClassNode cNode) {\n        ClassNode helper = new InnerClassNode(\n                cNode,\n                Traits.helperClassName(cNode),\n                ACC_PUBLIC | ACC_STATIC | ACC_ABSTRACT | ACC_SYNTHETIC,\n                ClassHelper.OBJECT_TYPE,\n                ClassNode.EMPTY_ARRAY,\n                null\n        );\n        cNode.setModifiers(ACC_PUBLIC | ACC_INTERFACE | ACC_ABSTRACT);\n\n        checkInnerClasses(cNode);\n\n        MethodNode initializer = new MethodNode(\n                Traits.STATIC_INIT_METHOD,\n                ACC_STATIC | ACC_PUBLIC | ACC_SYNTHETIC,\n                ClassHelper.VOID_TYPE,\n                new Parameter[]{new Parameter(cNode.getPlainNodeReference(), Traits.THIS_OBJECT)},\n                ClassNode.EMPTY_ARRAY,\n                new BlockStatement()\n        );\n        fixGenerics(initializer, cNode);\n        helper.addMethod(initializer);\n\n        // apply the verifier to have the property nodes generated\n        generatePropertyMethods(cNode);\n\n        // prepare fields\n        List<FieldNode> fields = new ArrayList<FieldNode>();\n        Set<String> fieldNames = new HashSet<String>();\n        for (FieldNode field : cNode.getFields()) {\n            if (!\"metaClass\".equals(field.getName()) && (!field.isSynthetic() || field.getName().indexOf('$') < 0)) {\n                fields.add(field);\n                fieldNames.add(field.getName());\n            }\n        }\n        ClassNode fieldHelper = null;\n        if (!fields.isEmpty()) {\n            fieldHelper = new InnerClassNode(\n                    cNode,\n                    Traits.fieldHelperClassName(cNode),\n                    ACC_STATIC | ACC_PUBLIC | ACC_INTERFACE | ACC_ABSTRACT,\n                    ClassHelper.OBJECT_TYPE\n            );\n        }\n\n        // add methods\n        List<MethodNode> methods = cNode.getMethods();\n        for (final MethodNode methodNode : methods) {\n            boolean declared = methodNode.getDeclaringClass() == cNode;\n            if (declared) {\n                if (!methodNode.isSynthetic() && (methodNode.isPrivate() || methodNode.isProtected())) {\n                    unit.addError(new SyntaxException(\"Cannot have \" + (methodNode.isPrivate() ? \"private\" : \"protected\") + \" method in a trait (\" + cNode.getName() + \"#\" + methodNode.getTypeDescriptor() + \")\",\n                            methodNode.getLineNumber(), methodNode.getColumnNumber()));\n                    return;\n                }\n                helper.addMethod(processMethod(cNode, methodNode, fieldHelper, fieldNames));\n            }\n        }\n\n        // add fields\n        for (FieldNode field : fields) {\n            processField(field, initializer, fieldHelper);\n        }\n\n        // clear properties to avoid generation of methods\n        cNode.getProperties().clear();\n\n        // copy annotations\n        List<AnnotationNode> copied = new LinkedList<AnnotationNode>();\n        List<AnnotationNode> notCopied = new LinkedList<AnnotationNode>();\n        copyAnnotatedNodeAnnotations(cNode, copied, notCopied);\n        if (!notCopied.isEmpty()) {\n            for (AnnotationNode node : notCopied) {\n                unit.addError(new SyntaxException(\"Annotation not supported onto traits\", node.getLineNumber(), node.getColumnNumber()));\n            }\n        }\n        helper.addAnnotations(copied);\n\n        fields = new ArrayList<FieldNode>(cNode.getFields()); // reuse the full list of fields\n        for (FieldNode field : fields) {\n            cNode.removeField(field.getName());\n        }\n\n        unit.getAST().addClass(helper);\n        if (fieldHelper != null) {\n            unit.getAST().addClass(fieldHelper);\n        }\n    }","id":58719,"modified_method":"private void createHelperClass(final ClassNode cNode) {\n        ClassNode helper = new InnerClassNode(\n                cNode,\n                Traits.helperClassName(cNode),\n                ACC_PUBLIC | ACC_STATIC | ACC_ABSTRACT | ACC_SYNTHETIC,\n                ClassHelper.OBJECT_TYPE,\n                ClassNode.EMPTY_ARRAY,\n                null\n        );\n        cNode.setModifiers(ACC_PUBLIC | ACC_INTERFACE | ACC_ABSTRACT);\n\n        checkInnerClasses(cNode);\n\n        MethodNode initializer = new MethodNode(\n                Traits.STATIC_INIT_METHOD,\n                ACC_STATIC | ACC_PUBLIC | ACC_SYNTHETIC,\n                ClassHelper.VOID_TYPE,\n                new Parameter[]{new Parameter(cNode.getPlainNodeReference(), Traits.THIS_OBJECT)},\n                ClassNode.EMPTY_ARRAY,\n                new BlockStatement()\n        );\n        fixGenerics(initializer, cNode);\n        helper.addMethod(initializer);\n\n        // apply the verifier to have the property nodes generated\n        generatePropertyMethods(cNode);\n\n        // prepare fields\n        List<FieldNode> fields = new ArrayList<FieldNode>();\n        Set<String> fieldNames = new HashSet<String>();\n        for (FieldNode field : cNode.getFields()) {\n            if (!\"metaClass\".equals(field.getName()) && (!field.isSynthetic() || field.getName().indexOf('$') < 0)) {\n                fields.add(field);\n                fieldNames.add(field.getName());\n            }\n        }\n        ClassNode fieldHelper = null;\n        if (!fields.isEmpty()) {\n            fieldHelper = new InnerClassNode(\n                    cNode,\n                    Traits.fieldHelperClassName(cNode),\n                    ACC_STATIC | ACC_PUBLIC | ACC_INTERFACE | ACC_ABSTRACT,\n                    ClassHelper.OBJECT_TYPE\n            );\n        }\n\n        // add methods\n        List<MethodNode> methods = cNode.getMethods();\n        List<MethodNode> privateMethods = new LinkedList<MethodNode>();\n        for (final MethodNode methodNode : methods) {\n            boolean declared = methodNode.getDeclaringClass() == cNode;\n            if (declared) {\n                if (!methodNode.isSynthetic() && methodNode.isProtected()) {\n                    unit.addError(new SyntaxException(\"Cannot have protected method in a trait (\" + cNode.getName() + \"#\" + methodNode.getTypeDescriptor() + \")\",\n                            methodNode.getLineNumber(), methodNode.getColumnNumber()));\n                    return;\n                }\n                helper.addMethod(processMethod(cNode, methodNode, fieldHelper, fieldNames));\n                if (methodNode.isPrivate()) {\n                    privateMethods.add(methodNode);\n                }\n            }\n        }\n\n        // remove private methods\n        for (MethodNode privateMethod : privateMethods) {\n            cNode.removeMethod(privateMethod);\n        }\n\n        // add fields\n        for (FieldNode field : fields) {\n            processField(field, initializer, fieldHelper);\n        }\n\n        // clear properties to avoid generation of methods\n        cNode.getProperties().clear();\n\n        // copy annotations\n        List<AnnotationNode> copied = new LinkedList<AnnotationNode>();\n        List<AnnotationNode> notCopied = new LinkedList<AnnotationNode>();\n        copyAnnotatedNodeAnnotations(cNode, copied, notCopied);\n        if (!notCopied.isEmpty()) {\n            for (AnnotationNode node : notCopied) {\n                unit.addError(new SyntaxException(\"Annotation not supported onto traits\", node.getLineNumber(), node.getColumnNumber()));\n            }\n        }\n        helper.addAnnotations(copied);\n\n        fields = new ArrayList<FieldNode>(cNode.getFields()); // reuse the full list of fields\n        for (FieldNode field : fields) {\n            cNode.removeField(field.getName());\n        }\n\n        unit.getAST().addClass(helper);\n        if (fieldHelper != null) {\n            unit.getAST().addClass(fieldHelper);\n        }\n    }","commit_id":"4ecfe3e36e4a5f09e46a36119eca0cc7bcb2379d","url":"https://github.com/apache/groovy"},{"original_method":"private Statement processBody(VariableExpression thisObject, Statement code, ClassNode fieldHelper, Collection<String> knownFields) {\n        if (code == null) return null;\n        SuperCallTraitTransformer superTrn = new SuperCallTraitTransformer(unit);\n        code.visit(superTrn);\n        TraitReceiverTransformer trn = new TraitReceiverTransformer(thisObject, unit, fieldHelper, knownFields);\n        code.visit(trn);\n        return code;\n    }","id":58720,"modified_method":"private Statement processBody(VariableExpression thisObject, Statement code, ClassNode trait, ClassNode fieldHelper, Collection<String> knownFields) {\n        if (code == null) return null;\n        SuperCallTraitTransformer superTrn = new SuperCallTraitTransformer(unit);\n        code.visit(superTrn);\n        TraitReceiverTransformer trn = new TraitReceiverTransformer(thisObject, unit, trait, fieldHelper, knownFields);\n        code.visit(trn);\n        return code;\n    }","commit_id":"4ecfe3e36e4a5f09e46a36119eca0cc7bcb2379d","url":"https://github.com/apache/groovy"},{"original_method":"private MethodNode processMethod(final ClassNode traitClass, final MethodNode methodNode, final ClassNode fieldHelper, final Collection<String> knownFields) {\n        Parameter[] initialParams = methodNode.getParameters();\n        Parameter[] newParams = new Parameter[initialParams.length + 1];\n        newParams[0] = new Parameter(traitClass.getPlainNodeReference(), Traits.THIS_OBJECT);\n        System.arraycopy(initialParams, 0, newParams, 1, initialParams.length);\n        MethodNode mNode = new MethodNode(\n                methodNode.getName(),\n                ACC_PUBLIC | ACC_STATIC,\n                methodNode.getReturnType(),\n                newParams,\n                methodNode.getExceptions(),\n                processBody(new VariableExpression(newParams[0]), methodNode.getCode(), fieldHelper, knownFields)\n        );\n        List<AnnotationNode> copied = new LinkedList<AnnotationNode>();\n        List<AnnotationNode> notCopied = new LinkedList<AnnotationNode>();\n        AbstractASTTransformation.copyAnnotatedNodeAnnotations(methodNode, copied, notCopied);\n        mNode.addAnnotations(copied);\n        if (methodNode.isAbstract()) {\n            mNode.setModifiers(ACC_PUBLIC | ACC_ABSTRACT);\n        } else {\n            methodNode.addAnnotation(new AnnotationNode(Traits.IMPLEMENTED_CLASSNODE));\n        }\n        methodNode.setCode(null);\n\n        methodNode.setModifiers(ACC_PUBLIC | ACC_ABSTRACT);\n        return mNode;\n    }","id":58721,"modified_method":"private MethodNode processMethod(ClassNode traitClass, MethodNode methodNode, ClassNode fieldHelper, Collection<String> knownFields) {\n        Parameter[] initialParams = methodNode.getParameters();\n        Parameter[] newParams = new Parameter[initialParams.length + 1];\n        newParams[0] = new Parameter(traitClass.getPlainNodeReference(), Traits.THIS_OBJECT);\n        System.arraycopy(initialParams, 0, newParams, 1, initialParams.length);\n        final int mod = methodNode.isPrivate()?ACC_PRIVATE:ACC_PUBLIC;\n        MethodNode mNode = new MethodNode(\n                methodNode.getName(),\n                mod | ACC_STATIC,\n                methodNode.getReturnType(),\n                newParams,\n                methodNode.getExceptions(),\n                processBody(new VariableExpression(newParams[0]), methodNode.getCode(), traitClass, fieldHelper, knownFields)\n        );\n        mNode.setSourcePosition(methodNode);\n        List<AnnotationNode> copied = new LinkedList<AnnotationNode>();\n        List<AnnotationNode> notCopied = new LinkedList<AnnotationNode>();\n        AbstractASTTransformation.copyAnnotatedNodeAnnotations(methodNode, copied, notCopied);\n        mNode.addAnnotations(copied);\n        if (methodNode.isAbstract()) {\n            mNode.setModifiers(ACC_PUBLIC | ACC_ABSTRACT);\n        } else {\n            methodNode.addAnnotation(new AnnotationNode(Traits.IMPLEMENTED_CLASSNODE));\n        }\n        methodNode.setCode(null);\n\n        if (!methodNode.isPrivate()) {\n            methodNode.setModifiers(ACC_PUBLIC | ACC_ABSTRACT);\n        }\n        return mNode;\n    }","commit_id":"4ecfe3e36e4a5f09e46a36119eca0cc7bcb2379d","url":"https://github.com/apache/groovy"},{"original_method":"public TraitReceiverTransformer(VariableExpression thisObject, SourceUnit unit, ClassNode fieldHelper, Collection<String> knownFields) {\n        this.weaved = thisObject;\n        this.unit = unit;\n        this.fieldHelper = fieldHelper;\n        this.knownFields = knownFields;\n    }","id":58722,"modified_method":"public TraitReceiverTransformer(VariableExpression thisObject, SourceUnit unit, final ClassNode traitClass, ClassNode fieldHelper, Collection<String> knownFields) {\n        this.weaved = thisObject;\n        this.unit = unit;\n        this.traitClass = traitClass;\n        this.fieldHelper = fieldHelper;\n        this.knownFields = knownFields;\n    }","commit_id":"4ecfe3e36e4a5f09e46a36119eca0cc7bcb2379d","url":"https://github.com/apache/groovy"},{"original_method":"@Override\n    public Expression transform(final Expression exp) {\n        if (exp instanceof BinaryExpression) {\n            Expression leftExpression = ((BinaryExpression) exp).getLeftExpression();\n            Expression rightExpression = ((BinaryExpression) exp).getRightExpression();\n            Token operation = ((BinaryExpression) exp).getOperation();\n            if (operation.getText().equals(\"=\")) {\n                String leftFieldName = null;\n                // it's an assignment\n                if (leftExpression instanceof VariableExpression && ((VariableExpression) leftExpression).getAccessedVariable() instanceof FieldNode) {\n                    leftFieldName = ((VariableExpression) leftExpression).getAccessedVariable().getName();\n                } else if (leftExpression instanceof FieldExpression) {\n                    leftFieldName = ((FieldExpression) leftExpression).getFieldName();\n                } else if (leftExpression instanceof PropertyExpression\n                        && (((PropertyExpression) leftExpression).isImplicitThis() || \"this\".equals(((PropertyExpression) leftExpression).getObjectExpression().getText()))) {\n                    leftFieldName = ((PropertyExpression) leftExpression).getPropertyAsString();\n                }\n                if (leftFieldName!=null) {\n                    String method = Traits.helperSetterName(new FieldNode(leftFieldName, 0, ClassHelper.OBJECT_TYPE, weaved.getOriginType(), null));\n                    MethodCallExpression mce = new MethodCallExpression(\n                            new CastExpression(fieldHelper,weaved),\n                            method,\n                            new ArgumentListExpression(super.transform(rightExpression))\n                    );\n                    mce.setSourcePosition(exp);\n                    mce.setImplicitThis(false);\n                    return mce;\n                }\n            }\n            Expression leftTransform = transform(leftExpression);\n            Expression rightTransform = transform(rightExpression);\n            Expression ret =\n                    exp instanceof DeclarationExpression ?new DeclarationExpression(\n                            leftTransform, operation, rightTransform\n                    ):\n                    new BinaryExpression(leftTransform, operation, rightTransform);\n            ret.setSourcePosition(exp);\n            ret.copyNodeMetaData(exp);\n            return ret;\n        } else if (exp instanceof MethodCallExpression) {\n            MethodCallExpression call = (MethodCallExpression) exp;\n            Expression obj = call.getObjectExpression();\n            if (call.isImplicitThis() || obj.getText().equals(\"this\")) {\n                MethodCallExpression transformed = new MethodCallExpression(\n                        weaved,\n                        call.getMethod(),\n                        transform(call.getArguments())\n                );\n                transformed.setSourcePosition(call);\n                transformed.setSafe(call.isSafe());\n                transformed.setSpreadSafe(call.isSpreadSafe());\n                transformed.setImplicitThis(false);\n                return transformed;\n            }\n        } else if (exp instanceof FieldExpression) {\n            MethodCallExpression mce = new MethodCallExpression(\n                    new CastExpression(fieldHelper,weaved),\n                    Traits.helperGetterName(((FieldExpression) exp).getField()),\n                    ArgumentListExpression.EMPTY_ARGUMENTS\n            );\n            mce.setSourcePosition(exp);\n            mce.setImplicitThis(false);\n            return mce;\n        } else if (exp instanceof VariableExpression) {\n            VariableExpression vexp = (VariableExpression) exp;\n            Variable accessedVariable = vexp.getAccessedVariable();\n            if (accessedVariable instanceof FieldNode) {\n                MethodCallExpression mce = new MethodCallExpression(\n                        new CastExpression(fieldHelper,weaved),\n                        Traits.helperGetterName((FieldNode) accessedVariable),\n                        ArgumentListExpression.EMPTY_ARGUMENTS\n                );\n                mce.setSourcePosition(exp);\n                mce.setImplicitThis(false);\n                return mce;\n            } else if (accessedVariable instanceof DynamicVariable) {\n                return new PropertyExpression(\n                        new VariableExpression(weaved),\n                        accessedVariable.getName()\n                );\n            }\n            if (vexp.isThisExpression()) {\n                VariableExpression res = new VariableExpression(weaved);\n                res.setSourcePosition(exp);\n                return res;\n            }\n            if (vexp.isSuperExpression()) {\n                ExceptionUtils.sneakyThrow(\n                        new SyntaxException(\"Call to super is not allowed in a trait\", vexp.getLineNumber(), vexp.getColumnNumber()));\n            }\n        } else if (exp instanceof PropertyExpression) {\n            PropertyExpression pexp = (PropertyExpression) exp;\n            Expression object = pexp.getObjectExpression();\n            if (pexp.isImplicitThis() || \"this\".equals(object.getText())) {\n                String propName = pexp.getPropertyAsString();\n                if (knownFields.contains(propName)) {\n                    String method = Traits.helperGetterName(new FieldNode(propName, 0, ClassHelper.OBJECT_TYPE, weaved.getOriginType(), null));\n                    MethodCallExpression mce = new MethodCallExpression(\n                            new CastExpression(fieldHelper,weaved),\n                            method,\n                            ArgumentListExpression.EMPTY_ARGUMENTS\n                    );\n                    mce.setSourcePosition(exp);\n                    mce.setImplicitThis(false);\n                    return mce;\n                }\n            }\n        } else if (exp instanceof ClosureExpression) {\n            MethodCallExpression mce = new MethodCallExpression(\n                    exp,\n                    \"rehydrate\",\n                    new ArgumentListExpression(\n                            new VariableExpression(weaved),\n                            new VariableExpression(weaved),\n                            new VariableExpression(weaved)\n                    )\n            );\n            mce.setImplicitThis(false);\n            mce.setSourcePosition(exp);\n            return mce;\n        }\n\n        // todo: unary expressions (field++, field+=, ...)\n        return super.transform(exp);\n    }","id":58723,"modified_method":"@Override\n    public Expression transform(final Expression exp) {\n        if (exp instanceof BinaryExpression) {\n            Expression leftExpression = ((BinaryExpression) exp).getLeftExpression();\n            Expression rightExpression = ((BinaryExpression) exp).getRightExpression();\n            Token operation = ((BinaryExpression) exp).getOperation();\n            if (operation.getText().equals(\"=\")) {\n                String leftFieldName = null;\n                // it's an assignment\n                if (leftExpression instanceof VariableExpression && ((VariableExpression) leftExpression).getAccessedVariable() instanceof FieldNode) {\n                    leftFieldName = ((VariableExpression) leftExpression).getAccessedVariable().getName();\n                } else if (leftExpression instanceof FieldExpression) {\n                    leftFieldName = ((FieldExpression) leftExpression).getFieldName();\n                } else if (leftExpression instanceof PropertyExpression\n                        && (((PropertyExpression) leftExpression).isImplicitThis() || \"this\".equals(((PropertyExpression) leftExpression).getObjectExpression().getText()))) {\n                    leftFieldName = ((PropertyExpression) leftExpression).getPropertyAsString();\n                }\n                if (leftFieldName!=null) {\n                    String method = Traits.helperSetterName(new FieldNode(leftFieldName, 0, ClassHelper.OBJECT_TYPE, weaved.getOriginType(), null));\n                    MethodCallExpression mce = new MethodCallExpression(\n                            new CastExpression(fieldHelper,weaved),\n                            method,\n                            new ArgumentListExpression(super.transform(rightExpression))\n                    );\n                    mce.setSourcePosition(exp);\n                    mce.setImplicitThis(false);\n                    return mce;\n                }\n            }\n            Expression leftTransform = transform(leftExpression);\n            Expression rightTransform = transform(rightExpression);\n            Expression ret =\n                    exp instanceof DeclarationExpression ?new DeclarationExpression(\n                            leftTransform, operation, rightTransform\n                    ):\n                    new BinaryExpression(leftTransform, operation, rightTransform);\n            ret.setSourcePosition(exp);\n            ret.copyNodeMetaData(exp);\n            return ret;\n        } else if (exp instanceof MethodCallExpression) {\n            MethodCallExpression call = (MethodCallExpression) exp;\n            Expression obj = call.getObjectExpression();\n            if (call.isImplicitThis() || obj.getText().equals(\"this\")) {\n                Expression method = call.getMethod();\n                Expression arguments = call.getArguments();\n                if (method instanceof ConstantExpression) {\n                    String methodName = method.getText();\n                    List<MethodNode> methods = traitClass.getMethods(methodName);\n                    for (MethodNode methodNode : methods) {\n                        if (methodName.equals(methodNode.getName()) && methodNode.isPrivate()) {\n                            ArgumentListExpression newArgs = new ArgumentListExpression();\n                            newArgs.addExpression(new VariableExpression(weaved));\n                            if (arguments instanceof ArgumentListExpression) {\n                                List<Expression> expressions = ((ArgumentListExpression) arguments).getExpressions();\n                                for (Expression expression : expressions) {\n                                    newArgs.addExpression(expression);\n                                }\n                            } else {\n                                newArgs.addExpression(arguments);\n                            }\n                            MethodCallExpression transformed = new MethodCallExpression(\n                                    new VariableExpression(\"this\"),\n                                    methodName,\n                                    newArgs\n                            );\n                            transformed.setSourcePosition(call);\n                            transformed.setSafe(call.isSafe());\n                            transformed.setSpreadSafe(call.isSpreadSafe());\n                            transformed.setImplicitThis(true);\n                            return transformed;\n                        }\n                    }\n                }\n\n                MethodCallExpression transformed = new MethodCallExpression(\n                        weaved,\n                        method,\n                        transform(arguments)\n                );\n                transformed.setSourcePosition(call);\n                transformed.setSafe(call.isSafe());\n                transformed.setSpreadSafe(call.isSpreadSafe());\n                transformed.setImplicitThis(false);\n                return transformed;\n            }\n        } else if (exp instanceof FieldExpression) {\n            MethodCallExpression mce = new MethodCallExpression(\n                    new CastExpression(fieldHelper,weaved),\n                    Traits.helperGetterName(((FieldExpression) exp).getField()),\n                    ArgumentListExpression.EMPTY_ARGUMENTS\n            );\n            mce.setSourcePosition(exp);\n            mce.setImplicitThis(false);\n            return mce;\n        } else if (exp instanceof VariableExpression) {\n            VariableExpression vexp = (VariableExpression) exp;\n            Variable accessedVariable = vexp.getAccessedVariable();\n            if (accessedVariable instanceof FieldNode) {\n                MethodCallExpression mce = new MethodCallExpression(\n                        new CastExpression(fieldHelper,weaved),\n                        Traits.helperGetterName((FieldNode) accessedVariable),\n                        ArgumentListExpression.EMPTY_ARGUMENTS\n                );\n                mce.setSourcePosition(exp);\n                mce.setImplicitThis(false);\n                return mce;\n            } else if (accessedVariable instanceof DynamicVariable) {\n                return new PropertyExpression(\n                        new VariableExpression(weaved),\n                        accessedVariable.getName()\n                );\n            }\n            if (vexp.isThisExpression()) {\n                VariableExpression res = new VariableExpression(weaved);\n                res.setSourcePosition(exp);\n                return res;\n            }\n            if (vexp.isSuperExpression()) {\n                ExceptionUtils.sneakyThrow(\n                        new SyntaxException(\"Call to super is not allowed in a trait\", vexp.getLineNumber(), vexp.getColumnNumber()));\n            }\n        } else if (exp instanceof PropertyExpression) {\n            PropertyExpression pexp = (PropertyExpression) exp;\n            Expression object = pexp.getObjectExpression();\n            if (pexp.isImplicitThis() || \"this\".equals(object.getText())) {\n                String propName = pexp.getPropertyAsString();\n                if (knownFields.contains(propName)) {\n                    String method = Traits.helperGetterName(new FieldNode(propName, 0, ClassHelper.OBJECT_TYPE, weaved.getOriginType(), null));\n                    MethodCallExpression mce = new MethodCallExpression(\n                            new CastExpression(fieldHelper,weaved),\n                            method,\n                            ArgumentListExpression.EMPTY_ARGUMENTS\n                    );\n                    mce.setSourcePosition(exp);\n                    mce.setImplicitThis(false);\n                    return mce;\n                }\n            }\n        } else if (exp instanceof ClosureExpression) {\n            MethodCallExpression mce = new MethodCallExpression(\n                    exp,\n                    \"rehydrate\",\n                    new ArgumentListExpression(\n                            new VariableExpression(weaved),\n                            new VariableExpression(weaved),\n                            new VariableExpression(weaved)\n                    )\n            );\n            mce.setImplicitThis(false);\n            mce.setSourcePosition(exp);\n            return mce;\n        }\n\n        // todo: unary expressions (field++, field+=, ...)\n        return super.transform(exp);\n    }","commit_id":"4ecfe3e36e4a5f09e46a36119eca0cc7bcb2379d","url":"https://github.com/apache/groovy"},{"original_method":"/**\n     * Calculate the number of bases that are soft clipped in read with quality score greater than threshold\n     *\n     * @param read a non-null GATKSAMRecord\n     * @param qualThreshold consider bases with quals > this value as high quality.  Must be >= 0\n     * @return positive integer\n     */\n    @Ensures(\"result >= 0\")\n    public static int calcNumHighQualitySoftClips( final GATKSAMRecord read, final byte qualThreshold ) {\n        if ( read == null ) throw new IllegalArgumentException(\"Read cannot be null\");\n        if ( qualThreshold < 0 ) throw new IllegalArgumentException(\"Expected qualThreshold to be a positive byte but saw \" + qualThreshold);\n\n        final byte[] qual = read.getBaseQualities( EventType.BASE_SUBSTITUTION );\n\n        int numHQSoftClips = 0;\n        int alignPos = 0;\n        for ( final CigarElement ce : read.getCigar().getCigarElements() ) {\n            final int elementLength = ce.getLength();\n\n            switch( ce.getOperator() ) {\n                case S:\n                    for( int jjj = 0; jjj < elementLength; jjj++ ) {\n                        if( qual[alignPos++] > qualThreshold ) { numHQSoftClips++; }\n                    }\n                    break;\n                case M: case I: case EQ: case X:\n                    alignPos += elementLength;\n                    break;\n                case H: case P: case D: case N:\n                    break;\n                default:\n                    throw new IllegalStateException(\"Unsupported cigar operator: \" + ce.getOperator());\n            }\n        }\n\n        return numHQSoftClips;\n    }","id":58724,"modified_method":"/**\n     * Calculate the number of bases that are soft clipped in read with quality score greater than threshold\n     *\n     * Handles the case where the cigar is null (i.e., the read is unmapped), returning 0\n     *\n     * @param read a non-null GATKSAMRecord.\n     * @param qualThreshold consider bases with quals > this value as high quality.  Must be >= 0\n     * @return positive integer\n     */\n    @Ensures(\"result >= 0\")\n    public static int calcNumHighQualitySoftClips( final GATKSAMRecord read, final byte qualThreshold ) {\n        if ( read == null ) throw new IllegalArgumentException(\"Read cannot be null\");\n        if ( qualThreshold < 0 ) throw new IllegalArgumentException(\"Expected qualThreshold to be a positive byte but saw \" + qualThreshold);\n\n        if ( read.getCigar() == null ) // the read is unmapped\n            return 0;\n\n        final byte[] qual = read.getBaseQualities( EventType.BASE_SUBSTITUTION );\n\n        int numHQSoftClips = 0;\n        int alignPos = 0;\n        for ( final CigarElement ce : read.getCigar().getCigarElements() ) {\n            final int elementLength = ce.getLength();\n\n            switch( ce.getOperator() ) {\n                case S:\n                    for( int jjj = 0; jjj < elementLength; jjj++ ) {\n                        if( qual[alignPos++] > qualThreshold ) { numHQSoftClips++; }\n                    }\n                    break;\n                case M: case I: case EQ: case X:\n                    alignPos += elementLength;\n                    break;\n                case H: case P: case D: case N:\n                    break;\n                default:\n                    throw new IllegalStateException(\"Unsupported cigar operator: \" + ce.getOperator());\n            }\n        }\n\n        return numHQSoftClips;\n    }","commit_id":"f985906a3d9d3303fe501f6c75d880c3d3ca50d6","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static int calcAlignmentByteArrayOffset(final Cigar cigar, final int offset, final boolean isInsertionAtBeginningOfRead, final boolean isDeletion, final int alignmentStart, final int refLocus) {\n        int pileupOffset = offset;\n\n        // Special case for reads starting with insertion\n        if (isInsertionAtBeginningOfRead)\n            return 0;\n\n        // Reassign the offset if we are in the middle of a deletion because of the modified representation of the read bases\n        if (isDeletion) {\n            pileupOffset = refLocus - alignmentStart;\n            final CigarElement ce = cigar.getCigarElement(0);\n            if (ce.getOperator() == CigarOperator.S) {\n                pileupOffset += ce.getLength();\n            }\n        }\n\n        int pos = 0;\n        int alignmentPos = 0;\n\n        for (int iii = 0; iii < cigar.numCigarElements(); iii++) {\n            final CigarElement ce = cigar.getCigarElement(iii);\n            final int elementLength = ce.getLength();\n\n            switch (ce.getOperator()) {\n                case I:\n                case S:\n                    pos += elementLength;\n                    if (pos >= pileupOffset) {\n                        return alignmentPos;\n                    }\n                    break;\n                case D:\n                    if (!isDeletion) {\n                        alignmentPos += elementLength;\n                    } else {\n                        if (pos + elementLength - 1 >= pileupOffset) {\n                            return alignmentPos + (pileupOffset - pos);\n                        } else {\n                            pos += elementLength;\n                            alignmentPos += elementLength;\n                        }\n                    }\n                    break;\n                case M:\n                case EQ:\n                case X:\n                    if (pos + elementLength - 1 >= pileupOffset) {\n                        return alignmentPos + (pileupOffset - pos);\n                    } else {\n                        pos += elementLength;\n                        alignmentPos += elementLength;\n                    }\n                    break;\n                case H:\n                case P:\n                case N:\n                    break;\n                default:\n                    throw new ReviewedStingException(\"Unsupported cigar operator: \" + ce.getOperator());\n            }\n        }\n\n        return alignmentPos;\n    }","id":58725,"modified_method":"public static int calcAlignmentByteArrayOffset(final Cigar cigar, final int offset, final boolean isDeletion, final int alignmentStart, final int refLocus) {\n        int pileupOffset = offset;\n\n        // Reassign the offset if we are in the middle of a deletion because of the modified representation of the read bases\n        if (isDeletion) {\n            pileupOffset = refLocus - alignmentStart;\n            final CigarElement ce = cigar.getCigarElement(0);\n            if (ce.getOperator() == CigarOperator.S) {\n                pileupOffset += ce.getLength();\n            }\n        }\n\n        int pos = 0;\n        int alignmentPos = 0;\n\n        for (int iii = 0; iii < cigar.numCigarElements(); iii++) {\n            final CigarElement ce = cigar.getCigarElement(iii);\n            final int elementLength = ce.getLength();\n\n            switch (ce.getOperator()) {\n                case I:\n                case S:\n                    pos += elementLength;\n                    if (pos >= pileupOffset) {\n                        return alignmentPos;\n                    }\n                    break;\n                case D:\n                    if (!isDeletion) {\n                        alignmentPos += elementLength;\n                    } else {\n                        if (pos + elementLength - 1 >= pileupOffset) {\n                            return alignmentPos + (pileupOffset - pos);\n                        } else {\n                            pos += elementLength;\n                            alignmentPos += elementLength;\n                        }\n                    }\n                    break;\n                case M:\n                case EQ:\n                case X:\n                    if (pos + elementLength - 1 >= pileupOffset) {\n                        return alignmentPos + (pileupOffset - pos);\n                    } else {\n                        pos += elementLength;\n                        alignmentPos += elementLength;\n                    }\n                    break;\n                case H:\n                case P:\n                case N:\n                    break;\n                default:\n                    throw new ReviewedStingException(\"Unsupported cigar operator: \" + ce.getOperator());\n            }\n        }\n\n        return alignmentPos;\n    }","commit_id":"f985906a3d9d3303fe501f6c75d880c3d3ca50d6","url":"https://github.com/broadgsa/gatk"},{"original_method":"private static boolean cigarHasZeroSizeElement(Cigar c) {\n        for (CigarElement ce : c.getCigarElements()) {\n            if (ce.getLength() == 0)\n                return true;\n        }\n        return false;\n    }","id":58726,"modified_method":"/**\n     * Does one of the elements in cigar have a 0 length?\n     *\n     * @param c a non-null cigar\n     * @return true if any element has 0 size\n     */\n    @Requires(\"c != null\")\n    protected static boolean cigarHasZeroSizeElement(final Cigar c) {\n        for (final CigarElement ce : c.getCigarElements()) {\n            if (ce.getLength() == 0)\n                return true;\n        }\n        return false;\n    }","commit_id":"f985906a3d9d3303fe501f6c75d880c3d3ca50d6","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static int calcAlignmentByteArrayOffset(final Cigar cigar, final PileupElement pileupElement, final int alignmentStart, final int refLocus) {\n        return calcAlignmentByteArrayOffset( cigar, pileupElement.getOffset(), false, pileupElement.isDeletion(), alignmentStart, refLocus );\n    }","id":58727,"modified_method":"public static int calcAlignmentByteArrayOffset(final Cigar cigar, final PileupElement pileupElement, final int alignmentStart, final int refLocus) {\n        return calcAlignmentByteArrayOffset( cigar, pileupElement.getOffset(), pileupElement.isDeletion(), alignmentStart, refLocus );\n    }","commit_id":"f985906a3d9d3303fe501f6c75d880c3d3ca50d6","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static int getNumHardClippedBases(final SAMRecord r) {\n        int n = 0;\n        final Cigar cigar = r.getCigar();\n        if (cigar == null) return 0;\n\n        for (final CigarElement e : cigar.getCigarElements())\n            if (e.getOperator() == CigarOperator.H)\n                n += e.getLength();\n\n        return n;\n    }","id":58728,"modified_method":"/**\n     * Count the number of bases hard clipped from read\n     *\n     * If read's cigar is null, return 0\n     *\n     * @param r a non-null read\n     * @return a positive integer\n     */\n    @Ensures(\"result >= 0\")\n    public static int getNumHardClippedBases(final SAMRecord r) {\n        if ( r == null ) throw new IllegalArgumentException(\"Read cannot be null\");\n\n        int n = 0;\n        final Cigar cigar = r.getCigar();\n        if (cigar == null) return 0;\n\n        for (final CigarElement e : cigar.getCigarElements())\n            if (e.getOperator() == CigarOperator.H)\n                n += e.getLength();\n\n        return n;\n    }","commit_id":"f985906a3d9d3303fe501f6c75d880c3d3ca50d6","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static int getNumAlignedBasesCountingSoftClips(final SAMRecord r) {\n        int n = 0;\n        final Cigar cigar = r.getCigar();\n        if (cigar == null) return 0;\n\n        for (final CigarElement e : cigar.getCigarElements())\n            if (e.getOperator() == CigarOperator.M || e.getOperator() == CigarOperator.S)\n                n += e.getLength();\n\n        return n;\n    }","id":58729,"modified_method":"/**\n     * Get the number of bases aligned to the genome, including soft clips\n     *\n     * If read is not mapped (i.e., doesn't have a cigar) returns 0\n     *\n     * @param r a non-null GATKSAMRecord\n     * @return the number of bases aligned to the genome in R, including soft clipped bases\n     */\n    public static int getNumAlignedBasesCountingSoftClips(final GATKSAMRecord r) {\n        int n = 0;\n        final Cigar cigar = r.getCigar();\n        if (cigar == null) return 0;\n\n        for (final CigarElement e : cigar.getCigarElements())\n            if (ALIGNED_TO_GENOME_PLUS_SOFTCLIPS.contains(e.getOperator()))\n                n += e.getLength();\n\n        return n;\n    }","commit_id":"f985906a3d9d3303fe501f6c75d880c3d3ca50d6","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Due to (unfortunate) multiple ways to indicate that read is unmapped allowed by SAM format\n     * specification, one may need this convenience shortcut. Checks both 'read unmapped' flag and\n     * alignment reference index/start.\n     *\n     * @param r record\n     * @return true if read is unmapped\n     */\n    public static boolean isReadUnmapped(final SAMRecord r) {\n        if (r.getReadUnmappedFlag()) return true;\n\n        // our life would be so much easier if all sam files followed the specs. In reality,\n        // sam files (including those generated by maq or bwa) miss headers altogether. When\n        // reading such a SAM file, reference name is set, but since there is no sequence dictionary,\n        // null is always returned for referenceIndex. Let's be paranoid here, and make sure that\n        // we do not call the read \"unmapped\" when it has only reference name set with ref. index missing\n        // or vice versa.\n        if ((r.getReferenceIndex() != null && r.getReferenceIndex() != SAMRecord.NO_ALIGNMENT_REFERENCE_INDEX\n                || r.getReferenceName() != null && !r.getReferenceName().equals(SAMRecord.NO_ALIGNMENT_REFERENCE_NAME))\n                && r.getAlignmentStart() != SAMRecord.NO_ALIGNMENT_START) return false;\n        return true;\n    }","id":58730,"modified_method":"/**\n     * Due to (unfortunate) multiple ways to indicate that read is unmapped allowed by SAM format\n     * specification, one may need this convenience shortcut. Checks both 'read unmapped' flag and\n     * alignment reference index/start.\n     *\n     * Our life would be so much easier if all sam files followed the specs. In reality,\n     * sam files (including those generated by maq or bwa) miss headers altogether. When\n     * reading such a SAM file, reference name is set, but since there is no sequence dictionary,\n     * null is always returned for referenceIndex. Let's be paranoid here, and make sure that\n     * we do not call the read \"unmapped\" when it has only reference name set with ref. index missing\n     * or vice versa.\n     *\n     * @param r a non-null record\n     * @return true if read is unmapped\n     */\n    public static boolean isReadUnmapped(final SAMRecord r) {\n        if ( r == null ) throw new IllegalArgumentException(\"Read cannot be null\");\n\n        if (r.getReadUnmappedFlag()) return true;\n\n        if ((r.getReferenceIndex() != null && r.getReferenceIndex() != SAMRecord.NO_ALIGNMENT_REFERENCE_INDEX\n                || r.getReferenceName() != null && !r.getReferenceName().equals(SAMRecord.NO_ALIGNMENT_REFERENCE_NAME))\n                && r.getAlignmentStart() != SAMRecord.NO_ALIGNMENT_START) return false;\n        return true;\n    }","commit_id":"f985906a3d9d3303fe501f6c75d880c3d3ca50d6","url":"https://github.com/broadgsa/gatk"},{"original_method":"private static Cigar cleanUpCigar(Cigar c) {\n        ArrayList<CigarElement> elements = new ArrayList<CigarElement>(c.numCigarElements() - 1);\n        for (CigarElement ce : c.getCigarElements()) {\n            if (ce.getLength() != 0 &&\n                    (elements.size() != 0 || ce.getOperator() != CigarOperator.D)) {\n                elements.add(ce);\n            }\n        }\n        return new Cigar(elements);\n    }","id":58731,"modified_method":"/**\n     * Clean up the incoming cigar\n     *\n     * Removes elements with zero size\n     * Clips away beginning deletion operators\n     *\n     * @param c the cigar string we want to clean up\n     * @return a newly allocated, cleaned up Cigar\n     */\n    @Requires(\"c != null\")\n    @Ensures(\"result != null\")\n    private static Cigar cleanUpCigar(final Cigar c) {\n        final List<CigarElement> elements = new ArrayList<CigarElement>(c.numCigarElements() - 1);\n\n        for (final CigarElement ce : c.getCigarElements()) {\n            if (ce.getLength() != 0 && (! elements.isEmpty() || ce.getOperator() != CigarOperator.D)) {\n                elements.add(ce);\n            }\n        }\n\n        return new Cigar(elements);\n    }","commit_id":"f985906a3d9d3303fe501f6c75d880c3d3ca50d6","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Returns number of alignment blocks (continuous stretches of aligned bases) in the specified alignment.\n     * This method follows closely the SAMRecord::getAlignmentBlocks() implemented in samtools library, but\n     * it only counts blocks without actually allocating and filling the list of blocks themselves. Hence, this method is\n     * a much more efficient alternative to r.getAlignmentBlocks.size() in the situations when this number is all that is needed.\n     * Formally, this method simply returns the number of M elements in the cigar.\n     *\n     * @param r alignment\n     * @return number of continuous alignment blocks (i.e. 'M' elements of the cigar; all indel and clipping elements are ignored).\n     */\n    public static int getNumAlignmentBlocks(final SAMRecord r) {\n        int n = 0;\n        final Cigar cigar = r.getCigar();\n        if (cigar == null) return 0;\n\n        for (final CigarElement e : cigar.getCigarElements()) {\n            if (e.getOperator() == CigarOperator.M) n++;\n        }\n\n        return n;\n    }","id":58732,"modified_method":"/**\n     * Returns number of alignment blocks (continuous stretches of aligned bases) in the specified alignment.\n     * This method follows closely the SAMRecord::getAlignmentBlocks() implemented in samtools library, but\n     * it only counts blocks without actually allocating and filling the list of blocks themselves. Hence, this method is\n     * a much more efficient alternative to r.getAlignmentBlocks.size() in the situations when this number is all that is needed.\n     * Formally, this method simply returns the number of M elements in the cigar.\n     *\n     * @param r alignment\n     * @return number of continuous alignment blocks (i.e. 'M' elements of the cigar; all indel and clipping elements are ignored).\n     */\n    @Ensures(\"result >= 0\")\n    public static int getNumAlignmentBlocks(final SAMRecord r) {\n        if ( r == null ) throw new IllegalArgumentException(\"read cannot be null\");\n        final Cigar cigar = r.getCigar();\n        if (cigar == null) return 0;\n\n        int n = 0;\n        for (final CigarElement e : cigar.getCigarElements()) {\n            if (ALIGNED_TO_GENOME_OPERATORS.contains(e.getOperator()))\n                n++;\n        }\n\n        return n;\n    }","commit_id":"f985906a3d9d3303fe501f6c75d880c3d3ca50d6","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static int getNumHardClippedBases(final SAMRecord r) {\n        int n = 0;\n        final Cigar cigar = r.getCigar();\n        if (cigar == null) return 0;\n\n        for (final CigarElement e : cigar.getCigarElements())\n            if (e.getOperator() == CigarOperator.H)\n                n += e.getLength();\n\n        return n;\n    }","id":58733,"modified_method":"/**\n     * Count the number of bases hard clipped from read\n     *\n     * If read's cigar is null, return 0\n     *\n     * @param r a non-null read\n     * @return a positive integer\n     */\n    @Ensures(\"result >= 0\")\n    public static int getNumHardClippedBases(final SAMRecord r) {\n        if ( r == null ) throw new IllegalArgumentException(\"Read cannot be null\");\n\n        int n = 0;\n        final Cigar cigar = r.getCigar();\n        if (cigar == null) return 0;\n\n        for (final CigarElement e : cigar.getCigarElements())\n            if (e.getOperator() == CigarOperator.H)\n                n += e.getLength();\n\n        return n;\n    }","commit_id":"2fda7eb68e093b8792ba9623ff4bd3f340d3d3a4","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Calculate the number of bases that are soft clipped in read with quality score greater than threshold\n     *\n     * @param read a non-null GATKSAMRecord\n     * @param qualThreshold consider bases with quals > this value as high quality.  Must be >= 0\n     * @return positive integer\n     */\n    @Ensures(\"result >= 0\")\n    public static int calcNumHighQualitySoftClips( final GATKSAMRecord read, final byte qualThreshold ) {\n        if ( read == null ) throw new IllegalArgumentException(\"Read cannot be null\");\n        if ( qualThreshold < 0 ) throw new IllegalArgumentException(\"Expected qualThreshold to be a positive byte but saw \" + qualThreshold);\n\n        final byte[] qual = read.getBaseQualities( EventType.BASE_SUBSTITUTION );\n\n        int numHQSoftClips = 0;\n        int alignPos = 0;\n        for ( final CigarElement ce : read.getCigar().getCigarElements() ) {\n            final int elementLength = ce.getLength();\n\n            switch( ce.getOperator() ) {\n                case S:\n                    for( int jjj = 0; jjj < elementLength; jjj++ ) {\n                        if( qual[alignPos++] > qualThreshold ) { numHQSoftClips++; }\n                    }\n                    break;\n                case M: case I: case EQ: case X:\n                    alignPos += elementLength;\n                    break;\n                case H: case P: case D: case N:\n                    break;\n                default:\n                    throw new IllegalStateException(\"Unsupported cigar operator: \" + ce.getOperator());\n            }\n        }\n\n        return numHQSoftClips;\n    }","id":58734,"modified_method":"/**\n     * Calculate the number of bases that are soft clipped in read with quality score greater than threshold\n     *\n     * Handles the case where the cigar is null (i.e., the read is unmapped), returning 0\n     *\n     * @param read a non-null GATKSAMRecord.\n     * @param qualThreshold consider bases with quals > this value as high quality.  Must be >= 0\n     * @return positive integer\n     */\n    @Ensures(\"result >= 0\")\n    public static int calcNumHighQualitySoftClips( final GATKSAMRecord read, final byte qualThreshold ) {\n        if ( read == null ) throw new IllegalArgumentException(\"Read cannot be null\");\n        if ( qualThreshold < 0 ) throw new IllegalArgumentException(\"Expected qualThreshold to be a positive byte but saw \" + qualThreshold);\n\n        if ( read.getCigar() == null ) // the read is unmapped\n            return 0;\n\n        final byte[] qual = read.getBaseQualities( EventType.BASE_SUBSTITUTION );\n\n        int numHQSoftClips = 0;\n        int alignPos = 0;\n        for ( final CigarElement ce : read.getCigar().getCigarElements() ) {\n            final int elementLength = ce.getLength();\n\n            switch( ce.getOperator() ) {\n                case S:\n                    for( int jjj = 0; jjj < elementLength; jjj++ ) {\n                        if( qual[alignPos++] > qualThreshold ) { numHQSoftClips++; }\n                    }\n                    break;\n                case M: case I: case EQ: case X:\n                    alignPos += elementLength;\n                    break;\n                case H: case P: case D: case N:\n                    break;\n                default:\n                    throw new IllegalStateException(\"Unsupported cigar operator: \" + ce.getOperator());\n            }\n        }\n\n        return numHQSoftClips;\n    }","commit_id":"2fda7eb68e093b8792ba9623ff4bd3f340d3d3a4","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Due to (unfortunate) multiple ways to indicate that read is unmapped allowed by SAM format\n     * specification, one may need this convenience shortcut. Checks both 'read unmapped' flag and\n     * alignment reference index/start.\n     *\n     * @param r record\n     * @return true if read is unmapped\n     */\n    public static boolean isReadUnmapped(final SAMRecord r) {\n        if (r.getReadUnmappedFlag()) return true;\n\n        // our life would be so much easier if all sam files followed the specs. In reality,\n        // sam files (including those generated by maq or bwa) miss headers altogether. When\n        // reading such a SAM file, reference name is set, but since there is no sequence dictionary,\n        // null is always returned for referenceIndex. Let's be paranoid here, and make sure that\n        // we do not call the read \"unmapped\" when it has only reference name set with ref. index missing\n        // or vice versa.\n        if ((r.getReferenceIndex() != null && r.getReferenceIndex() != SAMRecord.NO_ALIGNMENT_REFERENCE_INDEX\n                || r.getReferenceName() != null && !r.getReferenceName().equals(SAMRecord.NO_ALIGNMENT_REFERENCE_NAME))\n                && r.getAlignmentStart() != SAMRecord.NO_ALIGNMENT_START) return false;\n        return true;\n    }","id":58735,"modified_method":"/**\n     * Due to (unfortunate) multiple ways to indicate that read is unmapped allowed by SAM format\n     * specification, one may need this convenience shortcut. Checks both 'read unmapped' flag and\n     * alignment reference index/start.\n     *\n     * Our life would be so much easier if all sam files followed the specs. In reality,\n     * sam files (including those generated by maq or bwa) miss headers altogether. When\n     * reading such a SAM file, reference name is set, but since there is no sequence dictionary,\n     * null is always returned for referenceIndex. Let's be paranoid here, and make sure that\n     * we do not call the read \"unmapped\" when it has only reference name set with ref. index missing\n     * or vice versa.\n     *\n     * @param r a non-null record\n     * @return true if read is unmapped\n     */\n    public static boolean isReadUnmapped(final SAMRecord r) {\n        if ( r == null ) throw new IllegalArgumentException(\"Read cannot be null\");\n\n        if (r.getReadUnmappedFlag()) return true;\n\n        if ((r.getReferenceIndex() != null && r.getReferenceIndex() != SAMRecord.NO_ALIGNMENT_REFERENCE_INDEX\n                || r.getReferenceName() != null && !r.getReferenceName().equals(SAMRecord.NO_ALIGNMENT_REFERENCE_NAME))\n                && r.getAlignmentStart() != SAMRecord.NO_ALIGNMENT_START) return false;\n        return true;\n    }","commit_id":"2fda7eb68e093b8792ba9623ff4bd3f340d3d3a4","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Returns number of alignment blocks (continuous stretches of aligned bases) in the specified alignment.\n     * This method follows closely the SAMRecord::getAlignmentBlocks() implemented in samtools library, but\n     * it only counts blocks without actually allocating and filling the list of blocks themselves. Hence, this method is\n     * a much more efficient alternative to r.getAlignmentBlocks.size() in the situations when this number is all that is needed.\n     * Formally, this method simply returns the number of M elements in the cigar.\n     *\n     * @param r alignment\n     * @return number of continuous alignment blocks (i.e. 'M' elements of the cigar; all indel and clipping elements are ignored).\n     */\n    public static int getNumAlignmentBlocks(final SAMRecord r) {\n        int n = 0;\n        final Cigar cigar = r.getCigar();\n        if (cigar == null) return 0;\n\n        for (final CigarElement e : cigar.getCigarElements()) {\n            if (e.getOperator() == CigarOperator.M) n++;\n        }\n\n        return n;\n    }","id":58736,"modified_method":"/**\n     * Returns number of alignment blocks (continuous stretches of aligned bases) in the specified alignment.\n     * This method follows closely the SAMRecord::getAlignmentBlocks() implemented in samtools library, but\n     * it only counts blocks without actually allocating and filling the list of blocks themselves. Hence, this method is\n     * a much more efficient alternative to r.getAlignmentBlocks.size() in the situations when this number is all that is needed.\n     * Formally, this method simply returns the number of M elements in the cigar.\n     *\n     * @param r alignment\n     * @return number of continuous alignment blocks (i.e. 'M' elements of the cigar; all indel and clipping elements are ignored).\n     */\n    @Ensures(\"result >= 0\")\n    public static int getNumAlignmentBlocks(final SAMRecord r) {\n        if ( r == null ) throw new IllegalArgumentException(\"read cannot be null\");\n        final Cigar cigar = r.getCigar();\n        if (cigar == null) return 0;\n\n        int n = 0;\n        for (final CigarElement e : cigar.getCigarElements()) {\n            if (ALIGNED_TO_GENOME_OPERATORS.contains(e.getOperator()))\n                n++;\n        }\n\n        return n;\n    }","commit_id":"2fda7eb68e093b8792ba9623ff4bd3f340d3d3a4","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static int calcAlignmentByteArrayOffset(final Cigar cigar, final int offset, final boolean isInsertionAtBeginningOfRead, final boolean isDeletion, final int alignmentStart, final int refLocus) {\n        int pileupOffset = offset;\n\n        // Special case for reads starting with insertion\n        if (isInsertionAtBeginningOfRead)\n            return 0;\n\n        // Reassign the offset if we are in the middle of a deletion because of the modified representation of the read bases\n        if (isDeletion) {\n            pileupOffset = refLocus - alignmentStart;\n            final CigarElement ce = cigar.getCigarElement(0);\n            if (ce.getOperator() == CigarOperator.S) {\n                pileupOffset += ce.getLength();\n            }\n        }\n\n        int pos = 0;\n        int alignmentPos = 0;\n\n        for (int iii = 0; iii < cigar.numCigarElements(); iii++) {\n            final CigarElement ce = cigar.getCigarElement(iii);\n            final int elementLength = ce.getLength();\n\n            switch (ce.getOperator()) {\n                case I:\n                case S:\n                    pos += elementLength;\n                    if (pos >= pileupOffset) {\n                        return alignmentPos;\n                    }\n                    break;\n                case D:\n                    if (!isDeletion) {\n                        alignmentPos += elementLength;\n                    } else {\n                        if (pos + elementLength - 1 >= pileupOffset) {\n                            return alignmentPos + (pileupOffset - pos);\n                        } else {\n                            pos += elementLength;\n                            alignmentPos += elementLength;\n                        }\n                    }\n                    break;\n                case M:\n                case EQ:\n                case X:\n                    if (pos + elementLength - 1 >= pileupOffset) {\n                        return alignmentPos + (pileupOffset - pos);\n                    } else {\n                        pos += elementLength;\n                        alignmentPos += elementLength;\n                    }\n                    break;\n                case H:\n                case P:\n                case N:\n                    break;\n                default:\n                    throw new ReviewedStingException(\"Unsupported cigar operator: \" + ce.getOperator());\n            }\n        }\n\n        return alignmentPos;\n    }","id":58737,"modified_method":"public static int calcAlignmentByteArrayOffset(final Cigar cigar, final int offset, final boolean isDeletion, final int alignmentStart, final int refLocus) {\n        int pileupOffset = offset;\n\n        // Reassign the offset if we are in the middle of a deletion because of the modified representation of the read bases\n        if (isDeletion) {\n            pileupOffset = refLocus - alignmentStart;\n            final CigarElement ce = cigar.getCigarElement(0);\n            if (ce.getOperator() == CigarOperator.S) {\n                pileupOffset += ce.getLength();\n            }\n        }\n\n        int pos = 0;\n        int alignmentPos = 0;\n\n        for (int iii = 0; iii < cigar.numCigarElements(); iii++) {\n            final CigarElement ce = cigar.getCigarElement(iii);\n            final int elementLength = ce.getLength();\n\n            switch (ce.getOperator()) {\n                case I:\n                case S:\n                    pos += elementLength;\n                    if (pos >= pileupOffset) {\n                        return alignmentPos;\n                    }\n                    break;\n                case D:\n                    if (!isDeletion) {\n                        alignmentPos += elementLength;\n                    } else {\n                        if (pos + elementLength - 1 >= pileupOffset) {\n                            return alignmentPos + (pileupOffset - pos);\n                        } else {\n                            pos += elementLength;\n                            alignmentPos += elementLength;\n                        }\n                    }\n                    break;\n                case M:\n                case EQ:\n                case X:\n                    if (pos + elementLength - 1 >= pileupOffset) {\n                        return alignmentPos + (pileupOffset - pos);\n                    } else {\n                        pos += elementLength;\n                        alignmentPos += elementLength;\n                    }\n                    break;\n                case H:\n                case P:\n                case N:\n                    break;\n                default:\n                    throw new ReviewedStingException(\"Unsupported cigar operator: \" + ce.getOperator());\n            }\n        }\n\n        return alignmentPos;\n    }","commit_id":"2fda7eb68e093b8792ba9623ff4bd3f340d3d3a4","url":"https://github.com/broadgsa/gatk"},{"original_method":"private static boolean cigarHasZeroSizeElement(Cigar c) {\n        for (CigarElement ce : c.getCigarElements()) {\n            if (ce.getLength() == 0)\n                return true;\n        }\n        return false;\n    }","id":58738,"modified_method":"/**\n     * Does one of the elements in cigar have a 0 length?\n     *\n     * @param c a non-null cigar\n     * @return true if any element has 0 size\n     */\n    @Requires(\"c != null\")\n    protected static boolean cigarHasZeroSizeElement(final Cigar c) {\n        for (final CigarElement ce : c.getCigarElements()) {\n            if (ce.getLength() == 0)\n                return true;\n        }\n        return false;\n    }","commit_id":"2fda7eb68e093b8792ba9623ff4bd3f340d3d3a4","url":"https://github.com/broadgsa/gatk"},{"original_method":"private static Cigar cleanUpCigar(Cigar c) {\n        ArrayList<CigarElement> elements = new ArrayList<CigarElement>(c.numCigarElements() - 1);\n        for (CigarElement ce : c.getCigarElements()) {\n            if (ce.getLength() != 0 &&\n                    (elements.size() != 0 || ce.getOperator() != CigarOperator.D)) {\n                elements.add(ce);\n            }\n        }\n        return new Cigar(elements);\n    }","id":58739,"modified_method":"/**\n     * Clean up the incoming cigar\n     *\n     * Removes elements with zero size\n     * Clips away beginning deletion operators\n     *\n     * @param c the cigar string we want to clean up\n     * @return a newly allocated, cleaned up Cigar\n     */\n    @Requires(\"c != null\")\n    @Ensures(\"result != null\")\n    private static Cigar cleanUpCigar(final Cigar c) {\n        final List<CigarElement> elements = new ArrayList<CigarElement>(c.numCigarElements() - 1);\n\n        for (final CigarElement ce : c.getCigarElements()) {\n            if (ce.getLength() != 0 && (! elements.isEmpty() || ce.getOperator() != CigarOperator.D)) {\n                elements.add(ce);\n            }\n        }\n\n        return new Cigar(elements);\n    }","commit_id":"2fda7eb68e093b8792ba9623ff4bd3f340d3d3a4","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static int calcAlignmentByteArrayOffset(final Cigar cigar, final PileupElement pileupElement, final int alignmentStart, final int refLocus) {\n        return calcAlignmentByteArrayOffset( cigar, pileupElement.getOffset(), false, pileupElement.isDeletion(), alignmentStart, refLocus );\n    }","id":58740,"modified_method":"public static int calcAlignmentByteArrayOffset(final Cigar cigar, final PileupElement pileupElement, final int alignmentStart, final int refLocus) {\n        return calcAlignmentByteArrayOffset( cigar, pileupElement.getOffset(), pileupElement.isDeletion(), alignmentStart, refLocus );\n    }","commit_id":"2fda7eb68e093b8792ba9623ff4bd3f340d3d3a4","url":"https://github.com/broadgsa/gatk"},{"original_method":"public static int getNumAlignedBasesCountingSoftClips(final SAMRecord r) {\n        int n = 0;\n        final Cigar cigar = r.getCigar();\n        if (cigar == null) return 0;\n\n        for (final CigarElement e : cigar.getCigarElements())\n            if (e.getOperator() == CigarOperator.M || e.getOperator() == CigarOperator.S)\n                n += e.getLength();\n\n        return n;\n    }","id":58741,"modified_method":"/**\n     * Get the number of bases aligned to the genome, including soft clips\n     *\n     * If read is not mapped (i.e., doesn't have a cigar) returns 0\n     *\n     * @param r a non-null GATKSAMRecord\n     * @return the number of bases aligned to the genome in R, including soft clipped bases\n     */\n    public static int getNumAlignedBasesCountingSoftClips(final GATKSAMRecord r) {\n        int n = 0;\n        final Cigar cigar = r.getCigar();\n        if (cigar == null) return 0;\n\n        for (final CigarElement e : cigar.getCigarElements())\n            if (ALIGNED_TO_GENOME_PLUS_SOFTCLIPS.contains(e.getOperator()))\n                n += e.getLength();\n\n        return n;\n    }","commit_id":"2fda7eb68e093b8792ba9623ff4bd3f340d3d3a4","url":"https://github.com/broadgsa/gatk"},{"original_method":"@Override\n  public void visitXPathBinaryExpression(final XPathBinaryExpression o) {\n    if (XPath2TokenTypes.COMP_OPS.contains(o.getOperator())) {\n      if (o.getContainingFile().getLanguage() == XPathFileType.XPATH2.getLanguage()) {\n        final XPathExpression operand = o.getLOperand();\n        if (operand instanceof XPathBinaryExpression && XPath2TokenTypes.COMP_OPS.contains(((XPathBinaryExpression)operand).getOperator())) {\n          final Annotation annotation = myHolder.createErrorAnnotation(o, \"Consecutive comparison is not allowed in XPath 2\");\n\n          final XPathExpression rOperand = o.getROperand();\n          if (rOperand != null) {\n            final String replacement = \"(\" + operand.getText() + \") \" + o.getOperationSign() + \" \" + rOperand.getText();\n            annotation.registerFix(new ConsecutiveComparisonFix(replacement, o));\n          }\n        }\n      }\n    }\n\n    checkExpression(myHolder, o);\n    super.visitXPathBinaryExpression(o);\n  }","id":58742,"modified_method":"@Override\n  public void visitXPathBinaryExpression(final XPathBinaryExpression o) {\n    if (o.getContainingFile().getLanguage() == XPathFileType.XPATH2.getLanguage()) {\n      final XPathExpression operand = o.getLOperand();\n      final XPathElementType operator = o.getOperator();\n      if (operand instanceof XPathNumber) {\n        if (operator != XPathTokenTypes.STAR && XPath2TokenTypes.KEYWORDS.contains(operator)) {\n          final String op = o.getOperationSign();\n          if (o.getText().startsWith(operand.getText() + op)) {\n            myHolder.createErrorAnnotation(o, \"Number literal must be followed by whitespace in XPath 2\");\n          }\n        }\n      }\n      if (XPath2TokenTypes.COMP_OPS.contains(operator)) {\n        if (operand instanceof XPathBinaryExpression && XPath2TokenTypes.COMP_OPS.contains(((XPathBinaryExpression)operand).getOperator())) {\n          final Annotation annotation = myHolder.createErrorAnnotation(o, \"Consecutive comparison is not allowed in XPath 2\");\n\n          final XPathExpression rOperand = o.getROperand();\n          if (rOperand != null) {\n            final String replacement = \"(\" + operand.getText() + \") \" + o.getOperationSign() + \" \" + rOperand.getText();\n            annotation.registerFix(new ConsecutiveComparisonFix(replacement, o));\n          }\n        }\n      }\n    }\n\n    checkExpression(myHolder, o);\n    super.visitXPathBinaryExpression(o);\n  }","commit_id":"ffdb58eb667ba38462b91b17a09863979019bf48","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public TextStyle insignificantTemplateTextStyle() {\n\t\tTextStyle textStyle = defaultTextStyle().copy();\n\t\treturn textStyle;\n\t}","id":58743,"modified_method":"public TextStyle insignificantTemplateTextStyle() {\n\t\tTextStyle textStyle = stringTextStyle().copy();\n\t\treturn textStyle;\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testNoException_03() throws Exception {\n\t\tXtendFile file = file(\"package org.eclipse.xtext.xtend2.tests.smoke\\n\" + \n\t\t\t\t// error condition is empty class name\n\t\t\t\t\"class  {\\n\" + \n\t\t\t\t\"\\n\" + \n\t\t\t\t\"\taOrB(String a, String b) {\\n\" + \n\t\t\t\t\"\t\tif (a.isNullOrEmpty()) \\n\" + \n\t\t\t\t\"\t\t\tb\\n\" + \n\t\t\t\t\"\t\telse\\n\" + \n\t\t\t\t\"\t\t\ta \\n\" + \n\t\t\t\t\"\t}\\n\" + \n\t\t\t\t\"\t\\n\" + \n\t\t\t\t\"\treturnInIf() {\\n\" + \n\t\t\t\t\"\t\tif ('x'!='x') return 'xx' else return 'yy'\\n\" + \n\t\t\t\t\"\t}\\n\" + \n\t\t\t\t\"\\n\" + \n\t\t\t\t\"}\");\n\t\tassertNoExceptions(file);\n\t}","id":58744,"modified_method":"public void testNoException_03() throws Exception {\n\t\tXtendFile file = file(\"package org.eclipse.xtext.xtend2.tests.linking\\n\" + \n\t\t\t\t// error condition is empty class name\n\t\t\t\t\"class  {\\n\" + \n\t\t\t\t\"\\n\" + \n\t\t\t\t\"\taOrB(String a, String b) {\\n\" + \n\t\t\t\t\"\t\tif (a.isNullOrEmpty()) \\n\" + \n\t\t\t\t\"\t\t\tb\\n\" + \n\t\t\t\t\"\t\telse\\n\" + \n\t\t\t\t\"\t\t\ta \\n\" + \n\t\t\t\t\"\t}\\n\" + \n\t\t\t\t\"\t\\n\" + \n\t\t\t\t\"\treturnInIf() {\\n\" + \n\t\t\t\t\"\t\tif ('x'!='x') return 'xx' else return 'yy'\\n\" + \n\t\t\t\t\"\t}\\n\" + \n\t\t\t\t\"\\n\" + \n\t\t\t\t\"}\");\n\t\tassertNoExceptions(file);\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testNoException_05() throws Exception {\n\t\tXtendFile file = file(\"package org.eclipse.xtext.xtend2.tests.smoke\\n\" + \n\t\t\t\t\"import java.util.ArrayList\\n\" + \n\t\t\t\t\"import static java.util.Arrays.*\\n\" + \n\t\t\t\t\"import static extension java.util.Collections.*\\n\" + \n\t\t\t\t// error condition is empty class name\n\t\t\t\t\"class  {\\n\" + \n\t\t\t\t\"\t@Inject\\n\" + \n\t\t\t\t\"\tArrayList as myList\\n\" + \n\t\t\t\t\"\t@Inject extension\\n\" + \n\t\t\t\t\"\tString\\n\" + \n\t\t\t\t\"\tboolean something(int i) {\\n\" + \n\t\t\t\t\"\t  if (i.indexOf() == 0) {\\n\" + \n\t\t\t\t\"\t    return myList.contains(i)\\n\" + \n\t\t\t\t\"\t  } \\n\" + \n\t\t\t\t\"\t  asList(i)\\n\" + \n\t\t\t\t\"\t  i.singletonList()\\n\" + \n\t\t\t\t\"\t  false\\n\" + \n\t\t\t\t\"\t}\\n\" + \n\t\t\t\t\"}\");\n\t\tassertNoExceptions(file);\n\t}","id":58745,"modified_method":"public void testNoException_05() throws Exception {\n\t\tXtendFile file = file(\"package org.eclipse.xtext.xtend2.tests.linking\\n\" + \n\t\t\t\t\"import java.util.ArrayList\\n\" + \n\t\t\t\t\"import static java.util.Arrays.*\\n\" + \n\t\t\t\t\"import static extension java.util.Collections.*\\n\" + \n\t\t\t\t// error condition is empty class name\n\t\t\t\t\"class  {\\n\" + \n\t\t\t\t\"\t@Inject\\n\" + \n\t\t\t\t\"\tArrayList as myList\\n\" + \n\t\t\t\t\"\t@Inject extension\\n\" + \n\t\t\t\t\"\tString\\n\" + \n\t\t\t\t\"\tboolean something(int i) {\\n\" + \n\t\t\t\t\"\t  if (i.indexOf() == 0) {\\n\" + \n\t\t\t\t\"\t    return myList.contains(i)\\n\" + \n\t\t\t\t\"\t  } \\n\" + \n\t\t\t\t\"\t  asList(i)\\n\" + \n\t\t\t\t\"\t  i.singletonList()\\n\" + \n\t\t\t\t\"\t  false\\n\" + \n\t\t\t\t\"\t}\\n\" + \n\t\t\t\t\"}\");\n\t\tassertNoExceptions(file);\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testNoException_04() throws Exception {\n\t\tXtendFile file = file(\"package org.eclipse.xtext.xtend2.tests.smoke\\n\" + \n\t\t\t\t\"import java.util.ArrayList\\n\" + \n\t\t\t\t\"import static java.util.Arrays.*\\n\" + \n\t\t\t\t\"import static extension java.util.Collections.*\\n\" + \n\t\t\t\t\"class NoException {\\n\" + \n\t\t\t\t// error condition is tring\n\t\t\t\t\"\t@Inject extension tring\\n\" + \n\t\t\t\t\"\tboolean something(int i) {\\n\" + \n\t\t\t\t\"\t  i.indexOf() == 0\" +\n\t\t\t\t\"\t}\\n\" + \n\t\t\t\t\"}\");\n\t\tassertNoExceptions(file);\n\t}","id":58746,"modified_method":"public void testNoException_04() throws Exception {\n\t\tXtendFile file = file(\"package org.eclipse.xtext.xtend2.tests.linking\\n\" + \n\t\t\t\t\"import java.util.ArrayList\\n\" + \n\t\t\t\t\"import static java.util.Arrays.*\\n\" + \n\t\t\t\t\"import static extension java.util.Collections.*\\n\" + \n\t\t\t\t\"class NoException {\\n\" + \n\t\t\t\t// error condition is tring\n\t\t\t\t\"\t@Inject extension tring\\n\" + \n\t\t\t\t\"\tboolean something(int i) {\\n\" + \n\t\t\t\t\"\t  i.indexOf() == 0\" +\n\t\t\t\t\"\t}\\n\" + \n\t\t\t\t\"}\");\n\t\tassertNoExceptions(file);\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tpublic Boolean caseRichStringForLoop(RichStringForLoop object) {\n\t\t\tacceptor.acceptForLoop(object.getDeclaredParam(), object.getForExpression());\n\t\t\tcontrolStructureSeen = true;\n\t\t\twhile (acceptor.forLoopHasNext()) {\n\t\t\t\tcontrolStructureSeen = true;\n\t\t\t\tdoSwitch(object.getEachExpression());\n\t\t\t}\n\t\t\tacceptor.acceptEndFor();\n\t\t\tcontrolStructureSeen = true;\n\t\t\treturn Boolean.TRUE;\n\t\t}","id":58747,"modified_method":"@Override\n\t\tpublic Boolean caseRichStringForLoop(RichStringForLoop object) {\n\t\t\tacceptor.acceptForLoop(object.getDeclaredParam(), object.getForExpression());\n\t\t\tcontrolStructureSeen = true;\n\t\t\tif (object.getEachExpression() != null) {\n\t\t\t\twhile (acceptor.forLoopHasNext()) {\n\t\t\t\t\tcontrolStructureSeen = true;\n\t\t\t\t\tdoSwitch(object.getEachExpression());\n\t\t\t\t}\n\t\t\t}\n\t\t\tacceptor.acceptEndFor();\n\t\t\tcontrolStructureSeen = true;\n\t\t\treturn Boolean.TRUE;\n\t\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tpublic Boolean caseRichStringIf(RichStringIf object) {\n\t\t\tacceptor.acceptIfCondition(object.getIf());\n\t\t\tcontrolStructureSeen = true;\n\t\t\tdoSwitch(object.getThen());\n\t\t\tfor (RichStringElseIf elseIf : object.getElseIfs()) {\n\t\t\t\tacceptor.acceptElseIfCondition(elseIf.getIf());\n\t\t\t\tcontrolStructureSeen = true;\n\t\t\t\tdoSwitch(elseIf.getThen());\n\t\t\t}\n\t\t\tif (object.getElse() != null) {\n\t\t\t\tacceptor.acceptElse();\n\t\t\t\tcontrolStructureSeen = true;\n\t\t\t\tdoSwitch(object.getElse());\n\t\t\t}\n\t\t\tacceptor.acceptEndIf();\n\t\t\tcontrolStructureSeen = true;\n\t\t\treturn Boolean.TRUE;\n\t\t}","id":58748,"modified_method":"@Override\n\t\tpublic Boolean caseRichStringIf(RichStringIf object) {\n\t\t\tacceptor.acceptIfCondition(object.getIf());\n\t\t\tcontrolStructureSeen = true;\n\t\t\tif (object.getThen() != null)\n\t\t\t\tdoSwitch(object.getThen());\n\t\t\tfor (RichStringElseIf elseIf : object.getElseIfs()) {\n\t\t\t\tacceptor.acceptElseIfCondition(elseIf.getIf());\n\t\t\t\tcontrolStructureSeen = true;\n\t\t\t\tif (elseIf.getThen() != null)\n\t\t\t\t\tdoSwitch(elseIf.getThen());\n\t\t\t}\n\t\t\tif (object.getElse() != null) {\n\t\t\t\tacceptor.acceptElse();\n\t\t\t\tcontrolStructureSeen = true;\n\t\t\t\tdoSwitch(object.getElse());\n\t\t\t}\n\t\t\tacceptor.acceptEndIf();\n\t\t\tcontrolStructureSeen = true;\n\t\t\treturn Boolean.TRUE;\n\t\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"public void contributeActions(XtextEditor editor) {\n\t\tIAction action = editor.getAction(ITextEditorActionConstants.SHOW_WHITESPACE_CHARACTERS);\n\t\taction.setImageDescriptor(ImageDescriptor.createFromImage(imageHelper\n\t\t\t\t.getImage(\"full/etool16/show_whitespace_chars.gif\")));\n\t\taction.setDisabledImageDescriptor(ImageDescriptor.createFromImage(imageHelper\n\t\t\t\t.getImage(\"full/dtool16/show_whitespace_chars.gif\")));\n\t\tIToolBarManager toolBarManager = editor.getEditorSite().getActionBars().getToolBarManager();\n\t\ttoolBarManager.add(action);\n\t}","id":58749,"modified_method":"public void contributeActions(XtextEditor editor) {\n\t\tIAction action = editor.getAction(ITextEditorActionConstants.SHOW_WHITESPACE_CHARACTERS);\n\t\taction.setImageDescriptor(ImageDescriptor.createFromImage(imageHelper\n\t\t\t\t.getImage(\"full/etool16/show_whitespace_chars.gif\")));\n\t\taction.setDisabledImageDescriptor(ImageDescriptor.createFromImage(imageHelper\n\t\t\t\t.getImage(\"full/dtool16/show_whitespace_chars.gif\")));\n\t\tIToolBarManager toolBarManager = editor.getEditorSite().getActionBars().getToolBarManager();\n\t\tif (toolBarManager.find(ITextEditorActionConstants.SHOW_WHITESPACE_CHARACTERS) == null)\n\t\t\ttoolBarManager.add(action);\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void checkResource(final String model, LazyLinkingResource resource) {\n\t\tinvariantChecker.checkInvariant(resource.getParseResult().getRootNode());\n\t\tResourceValidatorImpl validator = new ResourceValidatorImpl();\n\t\tassertNotSame(validator, resource.getResourceServiceProvider().getResourceValidator());\n\t\tgetInjector().injectMembers(validator);\n\t\tvalidator.setDiagnosticConverter(new IDiagnosticConverter() {\n\t\t\tpublic void convertValidatorDiagnostic(org.eclipse.emf.common.util.Diagnostic diagnostic, IAcceptor<Issue> acceptor) {\n\t\t\t\tif (diagnostic instanceof BasicDiagnostic) {\n\t\t\t\t\tList<?> data = diagnostic.getData();\n\t\t\t\t\tif (!data.isEmpty() && data.get(0) instanceof Throwable) {\n\t\t\t\t\t\tThrowable t = (Throwable) data.get(0);\n\t\t\t\t\t\t// the framework catches runtime exception\n\t\t\t\t\t\t// and AssertionError does not take a throwable as argument\n\t\t\t\t\t\tthrow new Error(new RuntimeException(\"Input was: \" + model, t));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tpublic void convertResourceDiagnostic(Diagnostic diagnostic, Severity severity, IAcceptor<Issue> acceptor) {\n\t\t\t\tif (diagnostic instanceof ExceptionDiagnostic) {\n\t\t\t\t\tException e = ((ExceptionDiagnostic) diagnostic).getException();\n\t\t\t\t\t// the framework catches runtime exception\n\t\t\t\t\t// and AssertionError does not take a throwable as argument\n\t\t\t\t\tthrow new Error(new RuntimeException(\"Input was: \" + model, e));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tvalidator.validate(resource, CheckMode.ALL, CancelIndicator.NullImpl);\n\t}","id":58750,"modified_method":"protected void checkResource(final String model, LazyLinkingResource resource) {\n\t\tcheckNodeModelInvariant(resource);\n\t\tcache.clear(resource);\n\t\tcheckNoErrorsInTypeProvider(resource);\n\t\tcache.clear(resource);\n\t\tcheckNoErrorsInValidator(model, resource);\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void doParseLinkAndValidate(final String model) throws Exception {\n\t\ttry {\n\t\t\tLazyLinkingResource resource = createResource(model);\n\t\t\tcheckResource(model, resource);\n\t\t} catch (Throwable e) {\n\t\t\te.printStackTrace();\n\t\t\tfail(e.getMessage()+\" : Model was : \\n\\n\"+model);\n\t\t}\n\t}","id":58751,"modified_method":"protected void doParseLinkAndValidate(final String model) throws Exception {\n\t\ttry {\n\t\t\tLazyLinkingResource resource = createResource(model);\n\t\t\tcheckResource(model, resource);\n\t\t} catch (Throwable e) {\n\t\t\te.printStackTrace();\n\t\t\tassertEquals(e.getMessage()+\" : Model was : \\n\\n\"+model, model, \"\");\n\t\t\t// just to make sure we fail for empty model, too\n\t\t\tfail(e.getMessage()+\" : Model was : \\n\\n\"+model);\n\t\t}\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void compareWithNewResource(LazyLinkingResource resource, int offset, int length, String newText) throws IOException {\n\t\tlong start = System.currentTimeMillis();\n\t\tlong time = System.currentTimeMillis();\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(\"Partial parsing ...\");\n\t\t\tlogger.trace(\"Input is >>>\" + resource.getParseResult().getRootNode().getText() + \"<<<\");\n\t\t\tlogger.trace(\"Offset: \" + offset);\n\t\t\tlogger.trace(\"Length: \" + length);\n\t\t\tlogger.trace(\"New Text: >>>\" + newText + \"<<<\");\n\t\t}\n\t\tresource.update(offset, length, newText);\n\t\tString text = resource.getParseResult().getRootNode().getText();\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(\"... took \" + (System.currentTimeMillis() - time));\n\t\t\tlogger.debug(\"Loading second resource ...\");\n\t\t\ttime = System.currentTimeMillis();\n\t\t}\n\t\tLazyLinkingResource newResource = createResource(text);\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(\"... took \" + (System.currentTimeMillis() - time));\n\t\t\tlogger.debug(\"Semantic equality check ...\");\n\t\t\ttime = System.currentTimeMillis();\n\t\t}\n\t\tassertEquals(text, resource.getContents().size(), newResource.getContents().size());\n\t\tEcoreUtil.resolveAll(resource);\n\t\tEcoreUtil.resolveAll(newResource);\n\t\tfor(int i = 0; i < resource.getContents().size(); i++) {\n\t\t\tassertEquals(text, EmfFormatter.objToStr(newResource.getContents().get(i)), EmfFormatter.objToStr(resource.getContents().get(i)));\n\t\t}\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(\"... took \" + (System.currentTimeMillis() - time));\n\t\t\tlogger.debug(\"Node equality check ...\");\n\t\t\ttime = System.currentTimeMillis();\n\t\t}\n\t\tICompositeNode rootNode = resource.getParseResult().getRootNode();\n\t\tICompositeNode newRootNode = newResource.getParseResult().getRootNode();\n\t\tIterator<INode> iterator = rootNode.getAsTreeIterable().iterator();\n\t\tIterator<INode> newIterator = newRootNode.getAsTreeIterable().iterator();\n\t\twhile(iterator.hasNext()) {\n\t\t\tassertTrue(newIterator.hasNext());\n\t\t\tassertEqualNodes(text, iterator.next(), newIterator.next());\n\t\t}\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(\"... took \" + (System.currentTimeMillis() - time));\n\t\t\tlogger.debug(\"... done - total time: \" + (System.currentTimeMillis() - start));\n\t\t}\n\t}","id":58752,"modified_method":"protected void compareWithNewResource(LazyLinkingResource resource, int offset, int length, String newText) throws IOException {\n\t\tString model = resource.getParseResult().getRootNode().getText();\n\t\ttry {\n\t\t\tlong start = System.currentTimeMillis();\n\t\t\tlong time = System.currentTimeMillis();\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(\"Partial parsing ...\");\n\t\t\t\tlogger.trace(\"Input is >>>\" + resource.getParseResult().getRootNode().getText() + \"<<<\");\n\t\t\t\tlogger.trace(\"Offset: \" + offset);\n\t\t\t\tlogger.trace(\"Length: \" + length);\n\t\t\t\tlogger.trace(\"New Text: >>>\" + newText + \"<<<\");\n\t\t\t}\n\t\t\tresource.update(offset, length, newText);\n\t\t\tString text = resource.getParseResult().getRootNode().getText();\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(\"... took \" + (System.currentTimeMillis() - time));\n\t\t\t\tlogger.debug(\"Loading second resource ...\");\n\t\t\t\ttime = System.currentTimeMillis();\n\t\t\t}\n\t\t\tLazyLinkingResource newResource = createResource(text);\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(\"... took \" + (System.currentTimeMillis() - time));\n\t\t\t\tlogger.debug(\"Semantic equality check ...\");\n\t\t\t\ttime = System.currentTimeMillis();\n\t\t\t}\n\t\t\tassertEquals(text, resource.getContents().size(), newResource.getContents().size());\n\t\t\tEcoreUtil.resolveAll(resource);\n\t\t\tEcoreUtil.resolveAll(newResource);\n\t\t\tfor(int i = 0; i < resource.getContents().size(); i++) {\n\t\t\t\tassertEquals(text, EmfFormatter.objToStr(newResource.getContents().get(i)), EmfFormatter.objToStr(resource.getContents().get(i)));\n\t\t\t}\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(\"... took \" + (System.currentTimeMillis() - time));\n\t\t\t\tlogger.debug(\"Node equality check ...\");\n\t\t\t\ttime = System.currentTimeMillis();\n\t\t\t}\n\t\t\tICompositeNode rootNode = resource.getParseResult().getRootNode();\n\t\t\tICompositeNode newRootNode = newResource.getParseResult().getRootNode();\n\t\t\tIterator<INode> iterator = rootNode.getAsTreeIterable().iterator();\n\t\t\tIterator<INode> newIterator = newRootNode.getAsTreeIterable().iterator();\n\t\t\twhile(iterator.hasNext()) {\n\t\t\t\tassertTrue(newIterator.hasNext());\n\t\t\t\tassertEqualNodes(text, iterator.next(), newIterator.next());\n\t\t\t}\n\t\t\tif (logger.isDebugEnabled()) {\n\t\t\t\tlogger.debug(\"... took \" + (System.currentTimeMillis() - time));\n\t\t\t\tlogger.debug(\"... done - total time: \" + (System.currentTimeMillis() - start));\n\t\t\t}\n\t\t} catch(Throwable e) {\n\t\t\te.printStackTrace();\n\t\t\tString failureMessage = e.getMessage()+\" : Model was >>>\\n\"\t+ \n\t\t\tmodel + \n\t\t\t\"\\n<<<\\n\" +\n\t\t\t\"offset: \" + offset + \"\\n\" +\n\t\t\t\"length:\" + length + \"\\n\" +\n\t\t\t\"newText: >>>\" + newText + \"<<<\";\n\t\t\tassertEquals(failureMessage, model, \"\");\n\t\t\t// just to make sure we fail for empty model, too\n\t\t\tfail(failureMessage);\n\t\t}\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected Iterable<String> getVisibleTypesContainingStaticMethods(JvmTypeReference reference) {\n\t\tList<XtendImport> imports = getImports();\n\t\tboolean extension = reference != null && reference.getType() != null;\n\t\tList<String> result = Lists.newArrayList();\n\t\tfor(XtendImport imported: imports) {\n\t\t\tif (imported.isStatic() && (!extension || imported.isExtension()) &&  imported.isWildcard()) {\n\t\t\t\tresult.add(imported.getImportedTypeName());\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","id":58753,"modified_method":"@Override\n\tprotected Iterable<String> getVisibleTypesContainingStaticMethods(JvmTypeReference reference) {\n\t\tList<XtendImport> imports = getImports();\n\t\tboolean extension = reference != null && reference.getType() != null;\n\t\tList<String> result = Lists.newArrayList();\n\t\tfor(XtendImport imported: imports) {\n\t\t\tif (imported.isStatic() && (!extension || imported.isExtension()) && imported.isWildcard()) {\n\t\t\t\tString typeName = imported.getImportedTypeName();\n\t\t\t\tif (!Strings.isEmpty(typeName))\n\t\t\t\t\tresult.add(typeName);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void processDelta(Delta delta, IBuildContext context, final SubMonitor progress) {\n\t\tprogress.setWorkRemaining(100);\n\t\tURI sourceURI = delta.getUri();\n\t\tIFile sourceFile = null;\n\t\ttry {\n\t\t\tsourceFile = compilationFileProvider.getFile(sourceURI, context.getBuiltProject());\n\t\t\tif (sourceFile.exists() && hasErrors(sourceFile))\n\t\t\t\treturn;\n\t\t\tIFile targetFile = compilationFileProvider.getTargetFile(sourceURI, context.getBuiltProject(),\n\t\t\t\t\tprogress.newChild(10));\n\t\t\tResource sourceResource = null;\n\t\t\tif (delta.getNew() != null) {\n\t\t\t\tsourceResource = context.getResourceSet().getResource(sourceURI, true);\n\t\t\t\tif (sourceResource == null)\n\t\t\t\t\tthrow new IllegalStateException(\"Cannot load source Xtend2 resource \"\n\t\t\t\t\t\t\t+ notNull(sourceURI));\n\t\t\t\tif (!sourceResource.getErrors().isEmpty())\n\t\t\t\t\treturn;\n\t\t\t} else if (delta.getOld() != null)\n\t\t\t\ttargetFile.delete(true, progress.newChild(10));\n\t\t\tif (sourceResource != null && !sourceResource.getContents().isEmpty()) {\n\t\t\t\tcompile(sourceResource, targetFile, progress.newChild(80));\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tLOG.error(\"Error compiling \" + notNull(sourceURI), e);\n\t\t}\n\t}","id":58754,"modified_method":"protected void processDelta(Delta delta, IBuildContext context, final SubMonitor progress) {\n\t\tprogress.setWorkRemaining(100);\n\t\tURI sourceURI = delta.getUri();\n\t\tIFile sourceFile = null;\n\t\ttry {\n\t\t\tsourceFile = compilationFileProvider.getFile(sourceURI, context.getBuiltProject());\n\t\t\tif (sourceFile.exists() && hasErrors(sourceFile))\n\t\t\t\treturn;\n\t\t\tIFile targetFile = compilationFileProvider.getTargetFile(sourceURI, context.getBuiltProject(),\n\t\t\t\t\tprogress.newChild(10));\n\t\t\tResource sourceResource = null;\n\t\t\tif (delta.getNew() != null) {\n\t\t\t\tsourceResource = context.getResourceSet().getResource(sourceURI, true);\n\t\t\t\tif (sourceResource == null)\n\t\t\t\t\tthrow new IllegalStateException(\"Cannot load source Xtend2 resource \"\n\t\t\t\t\t\t\t+ notNull(sourceURI));\n\t\t\t\tEcoreUtil.resolveAll(sourceResource);\n\t\t\t\tif (!sourceResource.getErrors().isEmpty())\n\t\t\t\t\treturn;\n\t\t\t} else if (delta.getOld() != null)\n\t\t\t\ttargetFile.delete(true, progress.newChild(10));\n\t\t\tif (sourceResource != null && !sourceResource.getContents().isEmpty()) {\n\t\t\t\tcompile(sourceResource, targetFile, progress.newChild(80));\n\t\t\t}\n\t\t} catch (Exception e) {\n\t\t\tLOG.error(\"Error compiling \" + notNull(sourceURI), e);\n\t\t}\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tpublic void acceptForLoop(JvmFormalParameter parameter, XExpression expression) {\n\t\t\tsuper.acceptForLoop(parameter, expression);\n\t\t\tappendable.append(\"{\").increaseIndentation().append(\"\\n\");\n\t\t\tinternalToJavaStatement(expression, appendable, true);\n\t\t\tappendable.append(\"for(\");\n\t\t\tJvmTypeReference paramType = getTypeProvider().getTypeForIdentifiable(parameter);\n\t\t\tappendable.append(paramType.getIdentifier());\n\t\t\tappendable.append(\" \");\n\t\t\tString loopParam = declareNameInVariableScope(parameter, appendable);\n\t\t\tappendable.append(loopParam);\n\t\t\tappendable.append(\" : \");\n\t\t\tinternalToJavaExpression(expression, appendable);\n\t\t\tappendable.append(\") {\").increaseIndentation().append(\"\\n\");\n\t\t}","id":58755,"modified_method":"@Override\n\t\tpublic void acceptForLoop(JvmFormalParameter parameter, XExpression expression) {\n\t\t\tsuper.acceptForLoop(parameter, expression);\n\t\t\tappendable.append(\"\\n\").append(\"{\").increaseIndentation();\n\t\t\tinternalToJavaStatement(expression, appendable, true);\n\t\t\tappendable.append(\"\\n\");\n\t\t\tappendable.append(\"for(\");\n\t\t\tJvmTypeReference paramType = getTypeProvider().getTypeForIdentifiable(parameter);\n\t\t\tappendable.append(paramType.getIdentifier());\n\t\t\tappendable.append(\" \");\n\t\t\tString loopParam = declareNameInVariableScope(parameter, appendable);\n\t\t\tappendable.append(loopParam);\n\t\t\tappendable.append(\" : \");\n\t\t\tinternalToJavaExpression(expression, appendable);\n\t\t\tappendable.append(\") {\").increaseIndentation();\n\t\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void writeElse() {\n\t\t\tappendable.decreaseIndentation();\n\t\t\tappendable.append(\"} else {\");\n\t\t\tappendable.increaseIndentation();\n\t\t\tappendable.append(\"\\n\");\n\t\t}","id":58756,"modified_method":"protected void writeElse() {\n\t\t\tappendable.decreaseIndentation();\n\t\t\tappendable.append(\"} else {\");\n\t\t\tappendable.increaseIndentation();\n\t\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tpublic void acceptSemanticText(CharSequence text, RichStringLiteral origin) {\n\t\t\tif (text.length() == 0)\n\t\t\t\treturn;\n\t\t\tappendable.append(variableName);\n\t\t\tappendable.append(\".append(\\\"\");\n\t\t\tappendable.append(Strings.convertToJavaString(text.toString()));\n\t\t\tappendable.append(\"\\\");\\n\");\n\t\t}","id":58757,"modified_method":"@Override\n\t\tpublic void acceptSemanticText(CharSequence text, RichStringLiteral origin) {\n\t\t\tif (text.length() == 0)\n\t\t\t\treturn;\n\t\t\tappendable.append(\"\\n\");\n\t\t\tappendable.append(variableName);\n\t\t\tappendable.append(\".append(\\\"\");\n\t\t\tappendable.append(Strings.convertToJavaString(text.toString()));\n\t\t\tappendable.append(\"\\\");\");\n\t\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tpublic void acceptEndIf() {\n\t\t\tRichStringIf richStringIf = ifStack.removeLast();\n\t\t\tfor (int i = 0; i < richStringIf.getElseIfs().size() + 2; i++) {\n\t\t\t\tappendable.decreaseIndentation();\n\t\t\t\tappendable.append(\"\\n\");\n\t\t\t\tappendable.append(\"}\");\n\t\t\t}\n\t\t\tappendable.append(\"\\n\");\n\t\t}","id":58758,"modified_method":"@Override\n\t\tpublic void acceptEndIf() {\n\t\t\tRichStringIf richStringIf = ifStack.removeLast();\n\t\t\tfor (int i = 0; i < richStringIf.getElseIfs().size() + 2; i++) {\n\t\t\t\tappendable.decreaseIndentation();\n\t\t\t\tappendable.append(\"\\n\");\n\t\t\t\tappendable.append(\"}\");\n\t\t\t}\n\t\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tpublic void acceptSemanticLineBreak(int charCount, RichStringLiteral origin, boolean controlStructureSeen) {\n\t\t\tappendable.append(variableName);\n\t\t\tif (!controlStructureSeen) {\n\t\t\t\tappendable.append(\".newLine();\\n\");\n\t\t\t} else {\n\t\t\t\tappendable.append(\".newLineIfNotEmpty();\\n\");\n\t\t\t}\n\t\t}","id":58759,"modified_method":"@Override\n\t\tpublic void acceptSemanticLineBreak(int charCount, RichStringLiteral origin, boolean controlStructureSeen) {\n\t\t\tappendable.append(\"\\n\");\n\t\t\tappendable.append(variableName);\n\t\t\tif (!controlStructureSeen) {\n\t\t\t\tappendable.append(\".newLine();\");\n\t\t\t} else {\n\t\t\t\tappendable.append(\".newLineIfNotEmpty();\");\n\t\t\t}\n\t\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tpublic void acceptExpression(XExpression expression, CharSequence indentation) {\n\t\t\tinternalToJavaStatement(expression, appendable, true);\n\t\t\tappendable.append(variableName);\n\t\t\tappendable.append(\".append(\");\n\t\t\tinternalToJavaExpression(expression, appendable);\n\t\t\tappendable.append(\", \\\"\");\n\t\t\tappendable.append(indentation.toString());\n\t\t\tappendable.append(\"\\\");\\n\");\n\t\t}","id":58760,"modified_method":"@Override\n\t\tpublic void acceptExpression(XExpression expression, CharSequence indentation) {\n\t\t\tinternalToJavaStatement(expression, appendable, true);\n\t\t\tappendable.append(\"\\n\");\n\t\t\tappendable.append(variableName);\n\t\t\tappendable.append(\".append(\");\n\t\t\tinternalToJavaExpression(expression, appendable);\n\t\t\tappendable.append(\", \\\"\");\n\t\t\tappendable.append(indentation.toString());\n\t\t\tappendable.append(\"\\\");\");\n\t\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"public void _toJavaStatement(RichString richString, IAppendable b, boolean isReferenced) {\n\t\t// declare variable\n\t\tJvmTypeReference type = getTypeProvider().getType(richString);\n\t\tString variableName = makeJavaIdentifier(b.declareVariable(Tuples.pair(richString, \"result\"), \"builder\"));\n\t\tb.append(\"\\n\");\n\t\tb.append(type);\n\t\tb.append(\" \");\n\t\tb.append(variableName);\n\t\tb.append(\" = new \");\n\t\tb.append(type);\n\t\tb.append(\"();\\n\");\n\t\tRichStringPrepareCompiler compiler = new RichStringPrepareCompiler(b, variableName);\n\t\trichStringProcessor.process(richString, compiler, indentationHandler.get());\n\t}","id":58761,"modified_method":"public void _toJavaStatement(RichString richString, IAppendable b, boolean isReferenced) {\n\t\t// declare variable\n\t\tJvmTypeReference type = getTypeProvider().getType(richString);\n\t\tString variableName = makeJavaIdentifier(b.declareVariable(Tuples.pair(richString, \"result\"), \"builder\"));\n\t\tb.append(\"\\n\");\n\t\tb.append(type);\n\t\tb.append(\" \");\n\t\tb.append(variableName);\n\t\tb.append(\" = new \");\n\t\tb.append(type);\n\t\tb.append(\"();\");\n\t\tRichStringPrepareCompiler compiler = new RichStringPrepareCompiler(b, variableName);\n\t\trichStringProcessor.process(richString, compiler, indentationHandler.get());\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tpublic void acceptEndFor() {\n\t\t\tsuper.acceptEndFor();\n\t\t\tappendable.decreaseIndentation();\n\t\t\tappendable.append(\"\\n\");\n\t\t\tappendable.append(\"}\");\n\t\t\tappendable.decreaseIndentation();\n\t\t\tappendable.append(\"\\n\");\n\t\t\tappendable.append(\"}\");\n\t\t\tappendable.append(\"\\n\");\n\t\t}","id":58762,"modified_method":"@Override\n\t\tpublic void acceptEndFor() {\n\t\t\tsuper.acceptEndFor();\n\t\t\tappendable.decreaseIndentation();\n\t\t\tappendable.append(\"\\n\");\n\t\t\tappendable.append(\"}\");\n\t\t\tappendable.decreaseIndentation();\n\t\t\tappendable.append(\"\\n\");\n\t\t\tappendable.append(\"}\");\n\t\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void writeIf(XExpression condition) {\n\t\t\tinternalToJavaStatement(condition, appendable, true);\n\t\t\tappendable.append(\"if (\");\n\t\t\tinternalToJavaExpression(condition, appendable);\n\t\t\tappendable.append(\") {\").increaseIndentation().append(\"\\n\");\n\t\t}","id":58763,"modified_method":"protected void writeIf(XExpression condition) {\n\t\t\tinternalToJavaStatement(condition, appendable, true);\n\t\t\tappendable.append(\"\\n\");\n\t\t\tappendable.append(\"if (\");\n\t\t\tinternalToJavaExpression(condition, appendable);\n\t\t\tappendable.append(\") {\").increaseIndentation();\n\t\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\t\tpublic void acceptIfCondition(XExpression condition) {\n\t\t\tifStack.add((RichStringIf) condition.eContainer());\n\t\t\tappendable.append(\"{\").increaseIndentation().append(\"\\n\");\n\t\t\twriteIf(condition);\n\t\t}","id":58764,"modified_method":"@Override\n\t\tpublic void acceptIfCondition(XExpression condition) {\n\t\t\tifStack.add((RichStringIf) condition.eContainer());\n\t\t\tappendable.append(\"\\n\");\n\t\t\tappendable.append(\"{\").increaseIndentation();\n\t\t\twriteIf(condition);\n\t\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tprotected IScope createLocalVarScope(EObject context, EReference reference, IScope parent, boolean includeCurrentBlock, int idx) {\n\t\tif (context instanceof XtendClass) {\n\t\t\treturn new SimpleScope(parent, singleton(EObjectDescription.create(THIS, context)));\n\t\t} else if (context instanceof XtendFunction) {\n\t\t\tXtendFunction func = (XtendFunction) context;\n\t\t\tEList<JvmFormalParameter> list = func.getParameters();\n\t\t\tList<IEObjectDescription> descriptions = Lists.newArrayList();\n\t\t\tfor (JvmFormalParameter jvmFormalParameter : list) {\n\t\t\t\tIEObjectDescription desc = createIEObjectDescription(jvmFormalParameter);\n\t\t\t\tdescriptions.add(desc);\n\t\t\t}\n\t\t\treturn MapBasedScope.createScope(super.createLocalVarScope(context, reference, parent, includeCurrentBlock, idx), descriptions);\n\t\t}\n\t\treturn super.createLocalVarScope(context, reference, parent, includeCurrentBlock, idx);\n\t}","id":58765,"modified_method":"@Override\n\tprotected IScope createLocalVarScope(EObject context, EReference reference, IScope parent, boolean includeCurrentBlock, int idx) {\n\t\tif (context instanceof XtendClass) {\n\t\t\treturn new SimpleScope(parent, singleton(EObjectDescription.create(THIS, context)));\n\t\t} else if (context instanceof XtendFunction) {\n\t\t\tXtendFunction func = (XtendFunction) context;\n\t\t\tEList<JvmFormalParameter> list = func.getParameters();\n\t\t\tList<IEObjectDescription> descriptions = Lists.newArrayList();\n\t\t\tfor (JvmFormalParameter jvmFormalParameter : list) {\n\t\t\t\tif (!Strings.isEmpty(jvmFormalParameter.getName())) {\n\t\t\t\t\tIEObjectDescription desc = createIEObjectDescription(jvmFormalParameter);\n\t\t\t\t\tdescriptions.add(desc);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn MapBasedScope.createScope(super.createLocalVarScope(context, reference, parent, includeCurrentBlock, idx), descriptions);\n\t\t}\n\t\treturn super.createLocalVarScope(context, reference, parent, includeCurrentBlock, idx);\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"protected JvmTypeReference _typeForIdentifiable(XtendFunction func, boolean rawType) {\n\t\tJvmTypeReference declaredOrInferredReturnType = getDeclaredOrOverriddenReturnType(func);\n\t\tif (declaredOrInferredReturnType != null)\n\t\t\treturn declaredOrInferredReturnType;\n\t\tJvmTypeReference returnType = typeProvider.getCommonReturnType(func.getExpression(), true);\n\t\tif (returnType!=null)\n\t\t\treturn returnType;\n\t\treturn typeRefs.getTypeForName(Object.class, func);\n\t}","id":58766,"modified_method":"protected JvmTypeReference _typeForIdentifiable(XtendFunction func, boolean rawType) {\n\t\tJvmTypeReference declaredOrInferredReturnType = getDeclaredOrOverriddenReturnType(func);\n\t\tif (declaredOrInferredReturnType != null)\n\t\t\treturn declaredOrInferredReturnType;\n\t\tJvmTypeReference returnType = getCommonReturnType(func.getExpression(), true);\n\t\tif (returnType!=null)\n\t\t\treturn returnType;\n\t\treturn getTypeReferences().getTypeForName(Object.class, func);\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"protected JvmTypeReference _type(RichString richString, boolean rawType) {\n\t\treturn typeRefs.getTypeForName(StringConcatenation.class, richString);\n\t}","id":58767,"modified_method":"protected JvmTypeReference _type(RichString richString, boolean rawType) {\n\t\treturn getTypeReferences().getTypeForName(StringConcatenation.class, richString);\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"protected JvmTypeReference getDeclaredOrOverriddenReturnType(XtendFunction func) {\n\t\tif (func.getReturnType() != null)\n\t\t\treturn func.getReturnType();\n\t\tif (func.isOverride()) {\n\t\t\tJvmOperation inferredOperation = xtend2jvmAssociations.getDirectlyInferredOperation(func);\n\t\t\tJvmDeclaredType inferredType = inferredOperation.getDeclaringType();\n\t\t\tTypeArgumentContext typeArgumentContext = typeArgumentContextProvider.getReceiverContext(typeRefs\n\t\t\t\t\t.createTypeRef(inferredType));\n\t\t\tJvmTypeReference superType = func.getDeclaringType().getExtends();\n\t\t\tif (superType != null) {\n\t\t\t\tfor (JvmFeature superFeature : featureOverridesService.getAllJvmFeatures(superType)) {\n\t\t\t\t\tif (superFeature instanceof JvmOperation) {\n\t\t\t\t\t\tJvmOperation superOperation = (JvmOperation) superFeature;\n\t\t\t\t\t\tif (featureOverridesService.isOverridden(inferredOperation, superOperation,\n\t\t\t\t\t\t\t\ttypeArgumentContext, false))\n\t\t\t\t\t\t\treturn superOperation.getReturnType();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}","id":58768,"modified_method":"protected JvmTypeReference getDeclaredOrOverriddenReturnType(XtendFunction func) {\n\t\tif (func.getReturnType() != null)\n\t\t\treturn func.getReturnType();\n\t\tif (func.isOverride()) {\n\t\t\tJvmOperation inferredOperation = xtend2jvmAssociations.getDirectlyInferredOperation(func);\n\t\t\tJvmDeclaredType inferredType = inferredOperation.getDeclaringType();\n\t\t\tTypeArgumentContext typeArgumentContext = getTypeArgumentContextProvider().getReceiverContext(getTypeReferences()\n\t\t\t\t\t.createTypeRef(inferredType));\n\t\t\tJvmTypeReference superType = func.getDeclaringType().getExtends();\n\t\t\tif (superType != null) {\n\t\t\t\tfor (JvmFeature superFeature : featureOverridesService.getAllJvmFeatures(superType)) {\n\t\t\t\t\tif (superFeature instanceof JvmOperation) {\n\t\t\t\t\t\tJvmOperation superOperation = (JvmOperation) superFeature;\n\t\t\t\t\t\tif (featureOverridesService.isOverridden(inferredOperation, superOperation,\n\t\t\t\t\t\t\t\ttypeArgumentContext, false))\n\t\t\t\t\t\t\treturn superOperation.getReturnType();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"protected JvmTypeReference _typeForIdentifiable(XtendClass clazz, boolean rawType) {\n\t\tJvmParameterizedTypeReference typeReference = factory.createJvmParameterizedTypeReference();\n\t\ttypeReference.setType(xtend2jvmAssociations.getInferredType(clazz));\n\t\treturn typeReference;\n\t}","id":58769,"modified_method":"protected JvmTypeReference _typeForIdentifiable(XtendClass clazz, boolean rawType) {\n\t\tJvmParameterizedTypeReference typeReference = getTypesFactory().createJvmParameterizedTypeReference();\n\t\ttypeReference.setType(xtend2jvmAssociations.getInferredType(clazz));\n\t\treturn typeReference;\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"protected JvmTypeReference _expectedType(XtendFunction function, EReference reference, int index, boolean rawType) {\n\t\tif (reference == Xtend2Package.Literals.XTEND_FUNCTION__EXPRESSION) {\n\t\t\tJvmTypeReference declaredOrInferredReturnType = getDeclaredOrOverriddenReturnType(function);\n\t\t\tif (declaredOrInferredReturnType == null || typeRefs.is(declaredOrInferredReturnType, Void.TYPE))\n\t\t\t\treturn null;\n\t\t\treturn function.getReturnType();\n\t\t}\n\t\treturn null;\n\t}","id":58770,"modified_method":"protected JvmTypeReference _expectedType(XtendFunction function, EReference reference, int index, boolean rawType) {\n\t\tif (reference == Xtend2Package.Literals.XTEND_FUNCTION__EXPRESSION) {\n\t\t\tJvmTypeReference declaredOrInferredReturnType = getDeclaredOrOverriddenReturnType(function);\n\t\t\tif (declaredOrInferredReturnType == null || getTypeReferences().is(declaredOrInferredReturnType, Void.TYPE))\n\t\t\t\treturn null;\n\t\t\treturn function.getReturnType();\n\t\t}\n\t\treturn null;\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"protected JvmTypeReference _type(RichStringLiteral stringLiteral, boolean rawType) {\n\t\treturn typeRefs.getTypeForName(String.class, stringLiteral);\n\t}","id":58771,"modified_method":"protected JvmTypeReference _type(RichStringLiteral stringLiteral, boolean rawType) {\n\t\treturn getTypeReferences().getTypeForName(String.class, stringLiteral);\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tpublic String getImportedTypeName() {\n\t\tString result = getImportedNamespace();\n\t\tif (isWildcard()) {\n\t\t\treturn result.substring(0, result.length() - 2);\n\t\t}\n\t\treturn result;\n\t}","id":58772,"modified_method":"@Override\n\tpublic String getImportedTypeName() {\n\t\tString result = getImportedNamespace();\n\t\tif (isWildcard()) {\n\t\t\tif (result.length() > 2)\n\t\t\t\treturn result.substring(0, result.length() - 2);\n\t\t\treturn null;\n\t\t}\n\t\treturn result;\n\t}","commit_id":"682b766e216fa397a919b36e637645b4d47611df","url":"https://github.com/eclipse/xtext"},{"original_method":"public static Map processRefundReturn(DispatchContext dctx, Map context) {\n        GenericDelegator delegator = dctx.getDelegator();\n        LocalDispatcher dispatcher = dctx.getDispatcher();\n        String returnId = (String) context.get(\"returnId\");\n        GenericValue userLogin = (GenericValue) context.get(\"userLogin\");\n        Locale locale = (Locale) context.get(\"locale\");\n\n        GenericValue returnHeader = null;\n        List returnItems = null;\n        try {\n            returnHeader = delegator.findByPrimaryKey(\"ReturnHeader\", UtilMisc.toMap(\"returnId\", returnId));\n            if (returnHeader != null) {\n                returnItems = returnHeader.getRelatedByAnd(\"ReturnItem\", UtilMisc.toMap(\"returnTypeId\", \"RTN_REFUND\"));\n            }\n        } catch (GenericEntityException e) {\n            Debug.logError(e, \"Problems looking up return information\", module);\n            return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderErrorGettingReturnHeaderItemInformation\", locale));\n        }\n\n        if (returnHeader != null && returnItems != null && returnItems.size() > 0) {\n            Map itemsByOrder = new HashMap();\n            Map totalByOrder = new HashMap();\n\n            // make sure total refunds on a return don't exceed amount of returned orders\n            Map serviceResult = null;\n            try {\n                serviceResult = dispatcher.runSync(\"checkPaymentAmountForRefund\", UtilMisc.toMap(\"returnId\", returnId));\n            } catch (GenericServiceException e){\n                Debug.logError(e, \"Problem running the checkPaymentAmountForRefund service\", module);\n                return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemsWithCheckPaymentAmountForRefund\", locale));                \n            }\n            if (ServiceUtil.isError(serviceResult)) {\n                return ServiceUtil.returnError(ServiceUtil.getErrorMessage(serviceResult));\n            }                                    \n\n            groupReturnItemsByOrder(returnItems, itemsByOrder, totalByOrder, delegator, returnId);\n            \n            // process each one by order\n            Set itemSet = itemsByOrder.entrySet();\n            Iterator itemByOrderIt = itemSet.iterator();\n            while (itemByOrderIt.hasNext()) {\n                Map.Entry entry = (Map.Entry) itemByOrderIt.next();\n                String orderId = (String) entry.getKey();\n                List items = (List) entry.getValue();\n                Double orderTotal = (Double) totalByOrder.get(orderId);\n\n                // get order header & payment prefs\n                GenericValue orderHeader = null;\n                List orderPayPrefs = null;\n                try {\n                    orderHeader = delegator.findByPrimaryKey(\"OrderHeader\", UtilMisc.toMap(\"orderId\", orderId));\n                    // sort these desending by maxAmount\n                    orderPayPrefs = orderHeader.getRelated(\"OrderPaymentPreference\", UtilMisc.toMap(\"statusId\", \"PAYMENT_SETTLED\"), UtilMisc.toList(\"-maxAmount\"));\n                } catch (GenericEntityException e) {\n                    Debug.logError(e, \"Cannot get Order details for #\" + orderId, module);\n                    continue;\n                }\n                OrderReadHelper orderReadHelper = new OrderReadHelper(delegator, orderId);\n\n                // Determine the fall-through refund paymentMethodId from the PartyAcctgPreference of the owner of the productStore for the order\n                GenericValue refundPaymentMethod = null;\n                GenericValue productStore = orderReadHelper.getProductStore();\n                if (UtilValidate.isEmpty(productStore) || UtilValidate.isEmpty(productStore.get(\"payToPartyId\"))) {\n                    Debug.logError(\"No payToPartyId found for orderId \" + orderId, module);    \n                } else {\n                    GenericValue orgAcctgPref = null;\n                    try {\n                        orgAcctgPref = delegator.findByPrimaryKeyCache(\"PartyAcctgPreference\", UtilMisc.toMap(\"partyId\", productStore.get(\"payToPartyId\")));\n                    } catch( GenericEntityException e ) {\n                        Debug.logError(\"Error retrieving PartyAcctgPreference for partyId \" + productStore.get(\"payToPartyId\"), module);    \n                    }\n                    if (UtilValidate.isNotEmpty(orgAcctgPref)) {\n                        try {\n                            refundPaymentMethod = orgAcctgPref.getRelatedOne(\"PaymentMethod\");\n                        } catch( GenericEntityException e ) {\n                            Debug.logError(\"Error retrieving related refundPaymentMethod from PartyAcctgPreference for partyId \" + productStore.get(\"payToPartyId\"), module);    \n                        }\n                    }\n                }\n\n                // now; for all timestamps\n                Timestamp now = UtilDateTime.nowTimestamp();\n\n                // Assemble a map of orderPaymentPreferenceId -> list of maps of ( OPP and availableAmountForRefunding )\n                //     where availableAmountForRefunding = receivedAmount - alreadyRefundedAmount\n                // We break the OPPs down this way because we need to process the refunds to payment methods in a particular order\n                Map receivedPaymentTotalsByPaymentMethod = orderReadHelper.getReceivedPaymentTotalsByPaymentMethod() ;\n                Map refundedTotalsByPaymentMethod = orderReadHelper.getReturnedTotalsByPaymentMethod() ;\n\n                /*\n                 * Go through the OrderPaymentPreferences and determine how much remains to be refunded for each.\n                 * Then group these refund amounts and orderPaymentPreferences by paymentMethodTypeId.  That is,\n                 * the intent is to get the refundable amounts per orderPaymentPreference, grouped by payment method type.\n                 */\n                Map prefSplitMap = new HashMap() ;\n                Iterator oppit = orderPayPrefs.iterator();\n                while (oppit.hasNext()) {\n                    GenericValue orderPayPref = (GenericValue) oppit.next();\n                    String paymentMethodTypeId = orderPayPref.getString(\"paymentMethodTypeId\");\n                    String orderPayPrefKey = orderPayPref.getString(\"paymentMethodId\") != null ? orderPayPref.getString(\"paymentMethodId\") : orderPayPref.getString(\"paymentMethodTypeId\");\n\n                    // See how much we can refund to the payment method\n                    BigDecimal orderPayPrefReceivedTotal = ZERO ;\n                    if (receivedPaymentTotalsByPaymentMethod.containsKey(orderPayPrefKey)) {\n                        orderPayPrefReceivedTotal = orderPayPrefReceivedTotal.add(new BigDecimal(((Double) receivedPaymentTotalsByPaymentMethod.get(orderPayPrefKey)).doubleValue()).setScale(decimals, rounding));\n                    }\n                    BigDecimal orderPayPrefRefundedTotal = ZERO ;\n                    if (refundedTotalsByPaymentMethod.containsKey(orderPayPrefKey)) {\n                        orderPayPrefRefundedTotal = orderPayPrefRefundedTotal.add(new BigDecimal(((Double) refundedTotalsByPaymentMethod.get(orderPayPrefKey)).doubleValue()).setScale(decimals, rounding));\n                    }\n                    BigDecimal orderPayPrefAvailableTotal = orderPayPrefReceivedTotal.subtract(orderPayPrefRefundedTotal);\n\n                    // add the refundable amount and orderPaymentPreference to the paymentMethodTypeId map\n                    if (orderPayPrefAvailableTotal.compareTo(ZERO) == 1) {\n                        Map orderPayPrefDetails = new HashMap();\n                        orderPayPrefDetails.put(\"orderPaymentPreference\", orderPayPref);\n                        orderPayPrefDetails.put(\"availableTotal\", orderPayPrefAvailableTotal);\n                        if (prefSplitMap.containsKey(paymentMethodTypeId)) {\n                            ((List) prefSplitMap.get(paymentMethodTypeId)).add(orderPayPrefDetails);\n                        } else {\n                            prefSplitMap.put(paymentMethodTypeId, UtilMisc.toList(orderPayPrefDetails));\n                        }\n                    }\n                }\n\n                // Keep a decreasing total of the amount remaining to refund\n                BigDecimal amountLeftToRefund = new BigDecimal(orderTotal.doubleValue()).setScale(decimals, rounding);\n\n                // This can be extended to support additional electronic types\n                List electronicTypes = UtilMisc.toList(\"CREDIT_CARD\", \"EFT_ACCOUNT\", \"GIFT_CARD\");\n\n                // This defines the ordered part of the sequence of refund processing\n                List orderedRefundPaymentMethodTypes = new ArrayList();\n                orderedRefundPaymentMethodTypes.add(\"EXT_BILLACT\");\n                orderedRefundPaymentMethodTypes.add(\"GIFT_CARD\");\n                orderedRefundPaymentMethodTypes.add(\"CREDIT_CARD\");\n\n                // Add all the other paymentMethodTypes, in no particular order\n                EntityConditionList pmtConditionList = new EntityConditionList(UtilMisc.toList(new EntityExpr(\"paymentMethodTypeId\", EntityOperator.NOT_IN, orderedRefundPaymentMethodTypes)), EntityOperator.AND);\n                List otherPaymentMethodTypes = new ArrayList();\n                try {\n                    otherPaymentMethodTypes = delegator.findByConditionCache(\"PaymentMethodType\",pmtConditionList,null,null);\n                } catch(GenericEntityException e) {\n                    Debug.logError(e, \"Cannot get PaymentMethodTypes\", module);\n                    return ServiceUtil.returnError(\"Problems getting PaymentMethodTypes: \" + e.toString());\n                }\n                orderedRefundPaymentMethodTypes.addAll(EntityUtil.getFieldListFromEntityList(otherPaymentMethodTypes, \"paymentMethodTypeId\", true));\n\n                // Iterate through the specified sequence of paymentMethodTypes, refunding to the correct OrderPaymentPreferences\n                //    as long as there's a positive amount remaining to refund\n                Iterator orpmtit = orderedRefundPaymentMethodTypes.iterator();\n                while (orpmtit.hasNext() && amountLeftToRefund.compareTo(ZERO) == 1) {\n                    String paymentMethodTypeId = (String) orpmtit.next();\n                    if (prefSplitMap.containsKey(paymentMethodTypeId)) {\n                        List paymentMethodDetails = (List) prefSplitMap.get(paymentMethodTypeId);\n\n                        // Iterate through the OrderPaymentPreferences of this type\n                        Iterator pmtppit = paymentMethodDetails.iterator();\n                        while (pmtppit.hasNext() && amountLeftToRefund.compareTo(ZERO) == 1) {\n                            Map orderPaymentPrefDetails = (Map) pmtppit.next();\n                            GenericValue orderPaymentPreference = (GenericValue) orderPaymentPrefDetails.get(\"orderPaymentPreference\");\n                            BigDecimal orderPaymentPreferenceAvailable = (BigDecimal) orderPaymentPrefDetails.get(\"availableTotal\");\n\n                            // Refund up to the maxAmount for the paymentPref, or whatever is left to refund if that's less than the maxAmount\n                            BigDecimal amountToRefund = orderPaymentPreferenceAvailable.min(amountLeftToRefund);\n\n                            String paymentId = null;\n\n                            // Call the refund service to refund the payment\n                            if (electronicTypes.contains(paymentMethodTypeId)) {\n                                try {\n                                    // for electronic types such as CREDIT_CARD and EFT_ACCOUNT, use refundPayment service\n                                    serviceResult = dispatcher.runSync(\"refundPayment\", UtilMisc.toMap(\"orderPaymentPreference\", orderPaymentPreference, \"refundAmount\", new Double(amountToRefund.setScale(decimals, rounding).doubleValue()), \"userLogin\", userLogin));\n                                    if (ServiceUtil.isError(serviceResult)) {\n                                        return ServiceUtil.returnError(\"Error in refund payment\", null, null, serviceResult);\n                                    }\n                                    paymentId = (String) serviceResult.get(\"paymentId\");\n                                } catch (GenericServiceException e) {\n                                    Debug.logError(e, \"Problem running the refundPayment service\", module);\n                                    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemsWithTheRefundSeeLogs\", locale));\n                                }\n                            } else if (paymentMethodTypeId.equals(\"EXT_BILLACT\")) {\n                                try {\n                                    // for Billing Account refunds\n                                    serviceResult = dispatcher.runSync(\"refundBillingAccountPayment\", UtilMisc.toMap(\"orderPaymentPreference\", orderPaymentPreference, \"refundAmount\", new Double(amountToRefund.setScale(decimals, rounding).doubleValue()), \"userLogin\", userLogin));\n                                    if (ServiceUtil.isError(serviceResult)) {\n                                        return ServiceUtil.returnError(\"Error in refund payment\", null, null, serviceResult);\n                                    }\n                                    paymentId = (String) serviceResult.get(\"paymentId\");\n                                } catch (GenericServiceException e) {\n                                    Debug.logError(e, \"Problem running the refundPayment service\", module);\n                                    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemsWithTheRefundSeeLogs\", locale));\n                                }\n                            } else {\n                                // TODO: handle manual refunds (accounts payable)\n                            }\n\n                            // Fill out the data for the new ReturnItemResponse\n                            Map response = FastMap.newInstance();\n                            response.put(\"orderPaymentPreferenceId\", orderPaymentPreference.getString(\"orderPaymentPreferenceId\"));\n                            response.put(\"responseAmount\", new Double(amountToRefund.setScale(decimals, rounding).doubleValue()));\n                            response.put(\"responseDate\", now);\n                            response.put(\"userLogin\", userLogin);\n                            if (paymentId != null) {\n                                // A null payment ID means no electronic refund was available; manual refund needed\n                                response.put(\"paymentId\", paymentId);\n                            }\n                            if (paymentMethodTypeId.equals(\"EXT_BILLACT\")) {\n                                response.put(\"billingAccountId\", orderReadHelper.getBillingAccount().getString(\"billingAccountId\"));\n                            }\n                            Map serviceResults = null;\n                            try {\n                                serviceResults = dispatcher.runSync(\"createReturnItemResponse\", response);\n                                if (ServiceUtil.isError(serviceResults)) {\n                                    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemsCreatingReturnItemResponseEntity\", locale), null, null, serviceResults);\n                                }\n                            } catch (GenericServiceException e) {\n                                Debug.logError(e, \"Problems creating new ReturnItemResponse entity\", module);\n                                return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemsCreatingReturnItemResponseEntity\", locale));\n                            }\n                            String responseId = (String) serviceResults.get(\"returnItemResponseId\");\n\n                            // Set the response on each item\n                            Iterator itemsIter = items.iterator();\n                            while (itemsIter.hasNext()) {\n                                GenericValue item = (GenericValue) itemsIter.next();\n                                item.set(\"returnItemResponseId\", responseId);\n                                item.set(\"statusId\", \"RETURN_COMPLETED\");\n\n                                // Create the status history\n                                String returnStatusId = delegator.getNextSeqId(\"ReturnStatus\");\n                                GenericValue returnStatus = delegator.makeValue(\"ReturnStatus\", UtilMisc.toMap(\"returnStatusId\", returnStatusId));\n                                returnStatus.set(\"statusId\", item.get(\"statusId\"));\n                                returnStatus.set(\"returnId\", item.get(\"returnId\"));\n                                returnStatus.set(\"returnItemSeqId\", item.get(\"returnItemSeqId\"));\n                                returnStatus.set(\"statusDatetime\", now);\n\n                                //Debug.log(\"Updating item status\", module);\n                                try {\n                                    item.store();\n                                    delegator.create(returnStatus);\n                                } catch (GenericEntityException e) {\n                                    Debug.logError(\"Problem updating the ReturnItem entity\", module);\n                                    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemUpdatingReturnItemReturnItemResponseId\", locale));\n                                }\n\n                                //Debug.log(\"Item status and return status history created\", module);\n                            }\n\n                            // Create the payment applications for the return invoice\n                            try {\n                                serviceResults = dispatcher.runSync(\"createPaymentApplicationsFromReturnItemResponse\", \n                                        UtilMisc.toMap(\"returnItemResponseId\", responseId, \"userLogin\", userLogin));\n                                if (ServiceUtil.isError(serviceResults)) {\n                                    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemUpdatingReturnItemReturnItemResponseId\", locale), null, null, serviceResults);\n                                }\n                            } catch (GenericServiceException e) {\n                                Debug.logError(e, \"Problem creating PaymentApplication records for return invoice\", module);\n                                return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemUpdatingReturnItemReturnItemResponseId\", locale));\n                            }\n\n                            // Update the amount necessary to refund\n                            amountLeftToRefund = amountLeftToRefund.subtract(amountToRefund);\n                        }\n                    }                    \n                }\n\n                // OFBIZ-459:  Create a \"filler\" payment and return item response by hand for the remaining amount, note that this won't be applied to the invoice\n                if (amountLeftToRefund.compareTo(ZERO) == 1) {\n                    try {\n                        Map input = UtilMisc.toMap(\"userLogin\", userLogin, \"amount\", new Double(amountLeftToRefund.doubleValue()), \"statusId\", \"PMNT_NOT_PAID\");\n                        input.put(\"partyIdTo\", returnHeader.get(\"fromPartyId\"));\n                        input.put(\"partyIdFrom\", returnHeader.get(\"toPartyId\"));\n                        input.put(\"paymentTypeId\", \"CUSTOMER_REFUND\");\n                        if (UtilValidate.isNotEmpty(refundPaymentMethod)) {\n                            input.put(\"paymentMethodId\", refundPaymentMethod.get(\"paymentMethodId\"));\n                            input.put(\"paymentMethodTypeId\", refundPaymentMethod.get(\"paymentMethodTypeId\"));\n                        } else {\n                            Debug.logInfo(\"refundPaymentMethodId not configured in PartyAcctgPreference, not setting for remaining refund amount\", module);\n                        }\n                        \n                        Map results = dispatcher.runSync(\"createPayment\", input);\n                        if (ServiceUtil.isError(results)) return results;\n\n                        input = UtilMisc.toMap(\"userLogin\", userLogin, \"paymentId\", results.get(\"paymentId\"), \"responseAmount\", new Double(amountLeftToRefund.doubleValue()));\n                        results = dispatcher.runSync(\"createReturnItemResponse\", input);\n                        if (ServiceUtil.isError(results)) return results;\n                    } catch (GenericServiceException e) {\n                        return ServiceUtil.returnError(e.getMessage());\n                    }\n                }\n            }\n        }\n\n        return ServiceUtil.returnSuccess();\n    }","id":58773,"modified_method":"public static Map processRefundReturn(DispatchContext dctx, Map context) {\n        GenericDelegator delegator = dctx.getDelegator();\n        LocalDispatcher dispatcher = dctx.getDispatcher();\n        String returnId = (String) context.get(\"returnId\");\n        GenericValue userLogin = (GenericValue) context.get(\"userLogin\");\n        Locale locale = (Locale) context.get(\"locale\");\n\n        GenericValue returnHeader = null;\n        List returnItems = null;\n        try {\n            returnHeader = delegator.findByPrimaryKey(\"ReturnHeader\", UtilMisc.toMap(\"returnId\", returnId));\n            if (returnHeader != null) {\n                returnItems = returnHeader.getRelatedByAnd(\"ReturnItem\", UtilMisc.toMap(\"returnTypeId\", \"RTN_REFUND\"));\n            }\n        } catch (GenericEntityException e) {\n            Debug.logError(e, \"Problems looking up return information\", module);\n            return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderErrorGettingReturnHeaderItemInformation\", locale));\n        }\n\n        if (returnHeader != null && returnItems != null && returnItems.size() > 0) {\n            Map itemsByOrder = new HashMap();\n            Map totalByOrder = new HashMap();\n\n            // make sure total refunds on a return don't exceed amount of returned orders\n            Map serviceResult = null;\n            try {\n                serviceResult = dispatcher.runSync(\"checkPaymentAmountForRefund\", UtilMisc.toMap(\"returnId\", returnId));\n            } catch (GenericServiceException e){\n                Debug.logError(e, \"Problem running the checkPaymentAmountForRefund service\", module);\n                return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemsWithCheckPaymentAmountForRefund\", locale));                \n            }\n            if (ServiceUtil.isError(serviceResult)) {\n                return ServiceUtil.returnError(ServiceUtil.getErrorMessage(serviceResult));\n            }                                    \n\n            groupReturnItemsByOrder(returnItems, itemsByOrder, totalByOrder, delegator, returnId);\n            \n            // process each one by order\n            Set itemSet = itemsByOrder.entrySet();\n            Iterator itemByOrderIt = itemSet.iterator();\n            while (itemByOrderIt.hasNext()) {\n                Map.Entry entry = (Map.Entry) itemByOrderIt.next();\n                String orderId = (String) entry.getKey();\n                List items = (List) entry.getValue();\n                Double orderTotal = (Double) totalByOrder.get(orderId);\n\n                // get order header & payment prefs\n                GenericValue orderHeader = null;\n                List orderPayPrefs = null;\n                try {\n                    orderHeader = delegator.findByPrimaryKey(\"OrderHeader\", UtilMisc.toMap(\"orderId\", orderId));\n                    // sort these desending by maxAmount\n                    orderPayPrefs = orderHeader.getRelated(\"OrderPaymentPreference\", UtilMisc.toMap(\"statusId\", \"PAYMENT_SETTLED\"), UtilMisc.toList(\"-maxAmount\"));\n                } catch (GenericEntityException e) {\n                    Debug.logError(e, \"Cannot get Order details for #\" + orderId, module);\n                    continue;\n                }\n                OrderReadHelper orderReadHelper = new OrderReadHelper(delegator, orderId);\n\n                // Determine the fall-through refund paymentMethodId from the PartyAcctgPreference of the owner of the productStore for the order\n                GenericValue refundPaymentMethod = null;\n                GenericValue productStore = orderReadHelper.getProductStore();\n                if (UtilValidate.isEmpty(productStore) || UtilValidate.isEmpty(productStore.get(\"payToPartyId\"))) {\n                    Debug.logError(\"No payToPartyId found for orderId \" + orderId, module);    \n                } else {\n                    GenericValue orgAcctgPref = null;\n                    try {\n                        orgAcctgPref = delegator.findByPrimaryKeyCache(\"PartyAcctgPreference\", UtilMisc.toMap(\"partyId\", productStore.get(\"payToPartyId\")));\n                    } catch( GenericEntityException e ) {\n                        Debug.logError(\"Error retrieving PartyAcctgPreference for partyId \" + productStore.get(\"payToPartyId\"), module);    \n                    }\n                    if (UtilValidate.isNotEmpty(orgAcctgPref)) {\n                        try {\n                            refundPaymentMethod = orgAcctgPref.getRelatedOne(\"PaymentMethod\");\n                        } catch( GenericEntityException e ) {\n                            Debug.logError(\"Error retrieving related refundPaymentMethod from PartyAcctgPreference for partyId \" + productStore.get(\"payToPartyId\"), module);    \n                        }\n                    }\n                }\n\n                // now; for all timestamps\n                Timestamp now = UtilDateTime.nowTimestamp();\n\n                // Assemble a map of orderPaymentPreferenceId -> list of maps of ( OPP and availableAmountForRefunding )\n                //     where availableAmountForRefunding = receivedAmount - alreadyRefundedAmount\n                // We break the OPPs down this way because we need to process the refunds to payment methods in a particular order\n                Map receivedPaymentTotalsByPaymentMethod = orderReadHelper.getReceivedPaymentTotalsByPaymentMethod() ;\n                Map refundedTotalsByPaymentMethod = orderReadHelper.getReturnedTotalsByPaymentMethod() ;\n\n                /*\n                 * Go through the OrderPaymentPreferences and determine how much remains to be refunded for each.\n                 * Then group these refund amounts and orderPaymentPreferences by paymentMethodTypeId.  That is,\n                 * the intent is to get the refundable amounts per orderPaymentPreference, grouped by payment method type.\n                 */\n                Map prefSplitMap = new HashMap() ;\n                Iterator oppit = orderPayPrefs.iterator();\n                while (oppit.hasNext()) {\n                    GenericValue orderPayPref = (GenericValue) oppit.next();\n                    String paymentMethodTypeId = orderPayPref.getString(\"paymentMethodTypeId\");\n                    String orderPayPrefKey = orderPayPref.getString(\"paymentMethodId\") != null ? orderPayPref.getString(\"paymentMethodId\") : orderPayPref.getString(\"paymentMethodTypeId\");\n\n                    // See how much we can refund to the payment method\n                    BigDecimal orderPayPrefReceivedTotal = ZERO ;\n                    if (receivedPaymentTotalsByPaymentMethod.containsKey(orderPayPrefKey)) {\n                        orderPayPrefReceivedTotal = orderPayPrefReceivedTotal.add(new BigDecimal(((Double) receivedPaymentTotalsByPaymentMethod.get(orderPayPrefKey)).doubleValue()).setScale(decimals, rounding));\n                    }\n                    BigDecimal orderPayPrefRefundedTotal = ZERO ;\n                    if (refundedTotalsByPaymentMethod.containsKey(orderPayPrefKey)) {\n                        orderPayPrefRefundedTotal = orderPayPrefRefundedTotal.add(new BigDecimal(((Double) refundedTotalsByPaymentMethod.get(orderPayPrefKey)).doubleValue()).setScale(decimals, rounding));\n                    }\n                    BigDecimal orderPayPrefAvailableTotal = orderPayPrefReceivedTotal.subtract(orderPayPrefRefundedTotal);\n\n                    // add the refundable amount and orderPaymentPreference to the paymentMethodTypeId map\n                    if (orderPayPrefAvailableTotal.compareTo(ZERO) == 1) {\n                        Map orderPayPrefDetails = new HashMap();\n                        orderPayPrefDetails.put(\"orderPaymentPreference\", orderPayPref);\n                        orderPayPrefDetails.put(\"availableTotal\", orderPayPrefAvailableTotal);\n                        if (prefSplitMap.containsKey(paymentMethodTypeId)) {\n                            ((List) prefSplitMap.get(paymentMethodTypeId)).add(orderPayPrefDetails);\n                        } else {\n                            prefSplitMap.put(paymentMethodTypeId, UtilMisc.toList(orderPayPrefDetails));\n                        }\n                    }\n                }\n\n                // Keep a decreasing total of the amount remaining to refund\n                BigDecimal amountLeftToRefund = new BigDecimal(orderTotal.doubleValue()).setScale(decimals, rounding);\n\n                // This can be extended to support additional electronic types\n                List electronicTypes = UtilMisc.toList(\"CREDIT_CARD\", \"EFT_ACCOUNT\", \"GIFT_CARD\");\n\n                // This defines the ordered part of the sequence of refund processing\n                List orderedRefundPaymentMethodTypes = new ArrayList();\n                orderedRefundPaymentMethodTypes.add(\"EXT_BILLACT\");\n                orderedRefundPaymentMethodTypes.add(\"GIFT_CARD\");\n                orderedRefundPaymentMethodTypes.add(\"CREDIT_CARD\");\n\n                // Add all the other paymentMethodTypes, in no particular order\n                EntityConditionList pmtConditionList = new EntityConditionList(UtilMisc.toList(new EntityExpr(\"paymentMethodTypeId\", EntityOperator.NOT_IN, orderedRefundPaymentMethodTypes)), EntityOperator.AND);\n                List otherPaymentMethodTypes = new ArrayList();\n                try {\n                    otherPaymentMethodTypes = delegator.findByConditionCache(\"PaymentMethodType\",pmtConditionList,null,null);\n                } catch(GenericEntityException e) {\n                    Debug.logError(e, \"Cannot get PaymentMethodTypes\", module);\n                    return ServiceUtil.returnError(\"Problems getting PaymentMethodTypes: \" + e.toString());\n                }\n                orderedRefundPaymentMethodTypes.addAll(EntityUtil.getFieldListFromEntityList(otherPaymentMethodTypes, \"paymentMethodTypeId\", true));\n\n                // Iterate through the specified sequence of paymentMethodTypes, refunding to the correct OrderPaymentPreferences\n                //    as long as there's a positive amount remaining to refund\n                Iterator orpmtit = orderedRefundPaymentMethodTypes.iterator();\n                while (orpmtit.hasNext() && amountLeftToRefund.compareTo(ZERO) == 1) {\n                    String paymentMethodTypeId = (String) orpmtit.next();\n                    if (prefSplitMap.containsKey(paymentMethodTypeId)) {\n                        List paymentMethodDetails = (List) prefSplitMap.get(paymentMethodTypeId);\n\n                        // Iterate through the OrderPaymentPreferences of this type\n                        Iterator pmtppit = paymentMethodDetails.iterator();\n                        while (pmtppit.hasNext() && amountLeftToRefund.compareTo(ZERO) == 1) {\n                            Map orderPaymentPrefDetails = (Map) pmtppit.next();\n                            GenericValue orderPaymentPreference = (GenericValue) orderPaymentPrefDetails.get(\"orderPaymentPreference\");\n                            BigDecimal orderPaymentPreferenceAvailable = (BigDecimal) orderPaymentPrefDetails.get(\"availableTotal\");\n\n                            // Refund up to the maxAmount for the paymentPref, or whatever is left to refund if that's less than the maxAmount\n                            BigDecimal amountToRefund = orderPaymentPreferenceAvailable.min(amountLeftToRefund);\n\n                            String paymentId = null;\n\n                            // Call the refund service to refund the payment\n                            if (electronicTypes.contains(paymentMethodTypeId)) {\n                                try {\n                                    // for electronic types such as CREDIT_CARD and EFT_ACCOUNT, use refundPayment service\n                                    serviceResult = dispatcher.runSync(\"refundPayment\", UtilMisc.toMap(\"orderPaymentPreference\", orderPaymentPreference, \"refundAmount\", new Double(amountToRefund.setScale(decimals, rounding).doubleValue()), \"userLogin\", userLogin));\n                                    if (ServiceUtil.isError(serviceResult) || ServiceUtil.isFailure(serviceResult)) {\n                                        Debug.logError(\"Error in refund payment: \" + ServiceUtil.getErrorMessage(serviceResult), module);\n                                        continue;\n                                    }\n                                    paymentId = (String) serviceResult.get(\"paymentId\");\n                                } catch (GenericServiceException e) {\n                                    Debug.logError(e, \"Problem running the refundPayment service\", module);\n                                    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemsWithTheRefundSeeLogs\", locale));\n                                }\n                            } else if (paymentMethodTypeId.equals(\"EXT_BILLACT\")) {\n                                try {\n                                    // for Billing Account refunds\n                                    serviceResult = dispatcher.runSync(\"refundBillingAccountPayment\", UtilMisc.toMap(\"orderPaymentPreference\", orderPaymentPreference, \"refundAmount\", new Double(amountToRefund.setScale(decimals, rounding).doubleValue()), \"userLogin\", userLogin));\n                                    if (ServiceUtil.isError(serviceResult) || ServiceUtil.isFailure(serviceResult)) {\n                                        Debug.logError(\"Error in refund payment: \" + ServiceUtil.getErrorMessage(serviceResult), module);\n                                        continue;\n                                    }\n                                    paymentId = (String) serviceResult.get(\"paymentId\");\n                                } catch (GenericServiceException e) {\n                                    Debug.logError(e, \"Problem running the refundPayment service\", module);\n                                    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemsWithTheRefundSeeLogs\", locale));\n                                }\n                            } else {\n                                // TODO: handle manual refunds (accounts payable)\n                            }\n\n                            // Fill out the data for the new ReturnItemResponse\n                            Map response = FastMap.newInstance();\n                            response.put(\"orderPaymentPreferenceId\", orderPaymentPreference.getString(\"orderPaymentPreferenceId\"));\n                            response.put(\"responseAmount\", new Double(amountToRefund.setScale(decimals, rounding).doubleValue()));\n                            response.put(\"responseDate\", now);\n                            response.put(\"userLogin\", userLogin);\n                            if (paymentId != null) {\n                                // A null payment ID means no electronic refund was available; manual refund needed\n                                response.put(\"paymentId\", paymentId);\n                            }\n                            if (paymentMethodTypeId.equals(\"EXT_BILLACT\")) {\n                                response.put(\"billingAccountId\", orderReadHelper.getBillingAccount().getString(\"billingAccountId\"));\n                            }\n                            Map serviceResults = null;\n                            try {\n                                serviceResults = dispatcher.runSync(\"createReturnItemResponse\", response);\n                                if (ServiceUtil.isError(serviceResults)) {\n                                    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemsCreatingReturnItemResponseEntity\", locale), null, null, serviceResults);\n                                }\n                            } catch (GenericServiceException e) {\n                                Debug.logError(e, \"Problems creating new ReturnItemResponse entity\", module);\n                                return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemsCreatingReturnItemResponseEntity\", locale));\n                            }\n                            String responseId = (String) serviceResults.get(\"returnItemResponseId\");\n\n                            // Set the response on each item\n                            Iterator itemsIter = items.iterator();\n                            while (itemsIter.hasNext()) {\n                                GenericValue item = (GenericValue) itemsIter.next();\n                                item.set(\"returnItemResponseId\", responseId);\n                                item.set(\"statusId\", \"RETURN_COMPLETED\");\n\n                                // Create the status history\n                                String returnStatusId = delegator.getNextSeqId(\"ReturnStatus\");\n                                GenericValue returnStatus = delegator.makeValue(\"ReturnStatus\", UtilMisc.toMap(\"returnStatusId\", returnStatusId));\n                                returnStatus.set(\"statusId\", item.get(\"statusId\"));\n                                returnStatus.set(\"returnId\", item.get(\"returnId\"));\n                                returnStatus.set(\"returnItemSeqId\", item.get(\"returnItemSeqId\"));\n                                returnStatus.set(\"statusDatetime\", now);\n\n                                //Debug.log(\"Updating item status\", module);\n                                try {\n                                    item.store();\n                                    delegator.create(returnStatus);\n                                } catch (GenericEntityException e) {\n                                    Debug.logError(\"Problem updating the ReturnItem entity\", module);\n                                    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemUpdatingReturnItemReturnItemResponseId\", locale));\n                                }\n\n                                //Debug.log(\"Item status and return status history created\", module);\n                            }\n\n                            // Create the payment applications for the return invoice\n                            try {\n                                serviceResults = dispatcher.runSync(\"createPaymentApplicationsFromReturnItemResponse\", \n                                        UtilMisc.toMap(\"returnItemResponseId\", responseId, \"userLogin\", userLogin));\n                                if (ServiceUtil.isError(serviceResults)) {\n                                    return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemUpdatingReturnItemReturnItemResponseId\", locale), null, null, serviceResults);\n                                }\n                            } catch (GenericServiceException e) {\n                                Debug.logError(e, \"Problem creating PaymentApplication records for return invoice\", module);\n                                return ServiceUtil.returnError(UtilProperties.getMessage(resource_error,\"OrderProblemUpdatingReturnItemReturnItemResponseId\", locale));\n                            }\n\n                            // Update the amount necessary to refund\n                            amountLeftToRefund = amountLeftToRefund.subtract(amountToRefund);\n                        }\n                    }                    \n                }\n\n                // OFBIZ-459:  Create a \"filler\" payment and return item response by hand for the remaining amount, note that this won't be applied to the invoice\n                if (amountLeftToRefund.compareTo(ZERO) == 1) {\n                    try {\n                        Map input = UtilMisc.toMap(\"userLogin\", userLogin, \"amount\", new Double(amountLeftToRefund.doubleValue()), \"statusId\", \"PMNT_NOT_PAID\");\n                        input.put(\"partyIdTo\", returnHeader.get(\"fromPartyId\"));\n                        input.put(\"partyIdFrom\", returnHeader.get(\"toPartyId\"));\n                        input.put(\"paymentTypeId\", \"CUSTOMER_REFUND\");\n                        if (UtilValidate.isNotEmpty(refundPaymentMethod)) {\n                            input.put(\"paymentMethodId\", refundPaymentMethod.get(\"paymentMethodId\"));\n                            input.put(\"paymentMethodTypeId\", refundPaymentMethod.get(\"paymentMethodTypeId\"));\n                        } else {\n                            Debug.logInfo(\"refundPaymentMethodId not configured in PartyAcctgPreference, not setting for remaining refund amount\", module);\n                        }\n                        \n                        Map results = dispatcher.runSync(\"createPayment\", input);\n                        if (ServiceUtil.isError(results)) return results;\n\n                        input = UtilMisc.toMap(\"userLogin\", userLogin, \"paymentId\", results.get(\"paymentId\"), \"responseAmount\", new Double(amountLeftToRefund.doubleValue()));\n                        results = dispatcher.runSync(\"createReturnItemResponse\", input);\n                        if (ServiceUtil.isError(results)) return results;\n                    } catch (GenericServiceException e) {\n                        return ServiceUtil.returnError(e.getMessage());\n                    }\n                }\n            }\n        }\n\n        return ServiceUtil.returnSuccess();\n    }","commit_id":"56aff603df6c4e55d0eff85a80b7b4fe4867ef93","url":"https://github.com/apache/ofbiz"},{"original_method":"public static Map refundPayment(DispatchContext dctx, Map context) {\n        GenericDelegator delegator = dctx.getDelegator();\n        LocalDispatcher dispatcher = dctx.getDispatcher();\n        GenericValue userLogin = (GenericValue) context.get(\"userLogin\");\n\n        GenericValue paymentPref = (GenericValue) context.get(\"orderPaymentPreference\");\n        Double refundAmount = (Double) context.get(\"refundAmount\");\n\n        GenericValue orderHeader = null;\n        try {\n            orderHeader = paymentPref.getRelatedOne(\"OrderHeader\");\n        } catch (GenericEntityException e) {\n            Debug.logError(e, \"Cannot get OrderHeader from OrderPaymentPreference\", module);\n            return ServiceUtil.returnError(\"Problems getting OrderHeader from OrderPaymentPreference: \" + e.toString());\n        }\n\n        OrderReadHelper orh = new OrderReadHelper(orderHeader);\n\n        GenericValue paymentSettings = null;\n        if (orderHeader != null) {\n            paymentSettings = getPaymentSettings(orderHeader, paymentPref, REFUND_SERVICE_TYPE, false);\n        }\n\n        if (paymentSettings != null) {\n            String paymentConfig = paymentSettings.getString(\"paymentPropertiesPath\");\n            String serviceName = paymentSettings.getString(\"paymentService\");\n            if (serviceName != null) {\n                Map serviceContext = new HashMap();\n                serviceContext.put(\"orderPaymentPreference\", paymentPref);\n                serviceContext.put(\"paymentConfig\", paymentConfig);\n                serviceContext.put(\"currency\", orh.getCurrency());\n\n                // get the creditCard/address/email\n                String payToPartyId = null;\n                try {\n                    payToPartyId = getBillingInformation(orh, paymentPref, new HashMap());\n                } catch (GenericEntityException e) {\n                    Debug.logError(e, \"Problems getting billing information\", module);\n                    return ServiceUtil.returnError(\"Problems getting billing information\");\n                }\n\n                // format the price\n                String currencyFormat = UtilProperties.getPropertyValue(\"general.properties\", \"currency.decimal.format\", \"##0.00\");\n                DecimalFormat formatter = new DecimalFormat(currencyFormat);\n                String amountString = formatter.format(refundAmount);\n                Double processAmount = null;\n                try {\n                    processAmount = new Double(formatter.parse(amountString).doubleValue());\n                } catch (ParseException e) {\n                    Debug.logError(e, \"Problem parsing amount using DecimalFormat\", module);\n                    return ServiceUtil.returnError(\"Refund processor problems; see logs\");\n                }\n                serviceContext.put(\"refundAmount\", processAmount);\n                serviceContext.put(\"userLogin\", userLogin);\n\n                // call the service\n                Map refundResponse = null;\n                try {\n                    refundResponse = dispatcher.runSync(serviceName, serviceContext, TX_TIME, true);\n                } catch (GenericServiceException e) {\n                    Debug.logError(e, \"Problem refunding payment through processor\", module);\n                    return ServiceUtil.returnError(\"Refund processor problems; see logs\");\n                }\n                if (ServiceUtil.isError(refundResponse)) {\n                    saveError(dispatcher, userLogin, paymentPref, refundResponse, REFUND_SERVICE_TYPE, \"PGT_REFUND\");\n                    return ServiceUtil.returnError(ServiceUtil.getErrorMessage(refundResponse));\n                }\n\n                //Debug.log(\"Called Electronic Refund Service : \" + refundResponse, module);\n\n                // get the pay-from party\n                if (paymentConfig == null || paymentConfig.length() == 0) {\n                    paymentConfig = \"payment.properties\";\n                }\n                String payFromPartyId = getPayToPartyId(orderHeader);\n\n                // create the PaymentGatewayResponse record\n                String responseId = delegator.getNextSeqId(\"PaymentGatewayResponse\");\n                GenericValue response = delegator.makeValue(\"PaymentGatewayResponse\", null);\n                response.set(\"paymentGatewayResponseId\", responseId);\n                response.set(\"paymentServiceTypeEnumId\", REFUND_SERVICE_TYPE);\n                response.set(\"orderPaymentPreferenceId\", paymentPref.get(\"orderPaymentPreferenceId\"));\n                response.set(\"paymentMethodTypeId\", paymentPref.get(\"paymentMethodTypeId\"));\n                response.set(\"paymentMethodId\", paymentPref.get(\"paymentMethodId\"));\n                response.set(\"transCodeEnumId\", \"PGT_REFUND\");\n\n                // set the capture info\n                response.set(\"amount\", refundResponse.get(\"refundAmount\"));\n                response.set(\"referenceNum\", refundResponse.get(\"refundRefNum\"));\n                response.set(\"altReference\", refundResponse.get(\"refundAltRefNum\"));\n                response.set(\"gatewayCode\", refundResponse.get(\"refundCode\"));\n                response.set(\"gatewayFlag\", refundResponse.get(\"refundFlag\"));\n                response.set(\"gatewayMessage\", refundResponse.get(\"refundMessage\"));\n                response.set(\"transactionDate\", UtilDateTime.nowTimestamp());\n                try {\n                    delegator.create(response);\n                } catch (GenericEntityException e) {\n                    Debug.logError(e, module);\n                    return ServiceUtil.returnError(\"Unable to create PaymentGatewayResponse record\");\n                }\n\n                // create the internal messages\n                List messages = (List) refundResponse.get(\"internalRespMsgs\");\n                if (messages != null && messages.size() > 0) {\n                    Iterator i = messages.iterator();\n                    while (i.hasNext()) {\n                        GenericValue respMsg = delegator.makeValue(\"PaymentGatewayRespMsg\", null);\n                        String respMsgId = delegator.getNextSeqId(\"PaymentGatewayRespMsg\");\n                        String message = (String) i.next();\n                        respMsg.set(\"paymentGatewayRespMsgId\", respMsgId);\n                        respMsg.set(\"paymentGatewayResponseId\", responseId);\n                        respMsg.set(\"pgrMessage\", message);\n                        try {\n                            delegator.create(respMsg);\n                        } catch (GenericEntityException e) {\n                            Debug.logError(e, module);\n                            return ServiceUtil.returnError(\"Unable to create PaymentGatewayRespMsg record\");\n                        }\n                    }\n                }\n\n                // handle the (reverse) payment\n                Boolean refundResult = (Boolean) refundResponse.get(\"refundResult\");\n                if (refundResult != null && refundResult.booleanValue()) {\n                    // create a payment record\n                    Map paymentCtx = UtilMisc.toMap(\"paymentTypeId\", \"CUSTOMER_REFUND\");\n                    paymentCtx.put(\"paymentMethodTypeId\", paymentPref.get(\"paymentMethodTypeId\"));\n                    paymentCtx.put(\"paymentMethodId\", paymentPref.get(\"paymentMethodId\"));\n                    paymentCtx.put(\"paymentGatewayResponseId\", responseId);\n                    paymentCtx.put(\"partyIdTo\", payToPartyId);\n                    paymentCtx.put(\"partyIdFrom\", payFromPartyId);\n                    paymentCtx.put(\"statusId\", \"PMNT_SENT\");\n                    paymentCtx.put(\"paymentPreferenceId\", paymentPref.get(\"orderPaymentPreferenceId\"));\n                    paymentCtx.put(\"currencyUomId\", orh.getCurrency());   \n                    paymentCtx.put(\"amount\", refundResponse.get(\"refundAmount\"));\n                    paymentCtx.put(\"userLogin\", userLogin);\n                    paymentCtx.put(\"paymentRefNum\", refundResponse.get(\"refundRefNum\"));\n                    paymentCtx.put(\"comments\", \"Refund\");\n\n                    String paymentId = null;\n                    try {\n                        Map payRes = dispatcher.runSync(\"createPayment\", paymentCtx);\n                        if (ModelService.RESPOND_ERROR.equals(payRes.get(ModelService.RESPONSE_MESSAGE))) {\n                            return ServiceUtil.returnError((String) payRes.get(ModelService.ERROR_MESSAGE));\n                        } else {\n                            paymentId = (String) payRes.get(\"paymentId\");\n                        }\n                    } catch (GenericServiceException e) {\n                        Debug.logError(e, \"Problem creating Payment\", module);\n                        return ServiceUtil.returnError(\"Problem creating Payment\");\n                    }\n                    //Debug.log(\"Payment created : \" + paymentId, module);\n\n                    if (paymentId == null) {\n                        return ServiceUtil.returnError(\"Create payment failed\");\n                    }\n\n                    Map result = ServiceUtil.returnSuccess();\n                    result.put(\"paymentId\", paymentId);\n                    return result;\n                } else {\n                    return ServiceUtil.returnError(\"The refund failed\");\n                }\n            } else {\n                return ServiceUtil.returnError(\"No refund service defined\");\n            }\n        } else {\n            return ServiceUtil.returnError(\"No payment settings found\");\n        }\n    }","id":58774,"modified_method":"public static Map refundPayment(DispatchContext dctx, Map context) {\n        GenericDelegator delegator = dctx.getDelegator();\n        LocalDispatcher dispatcher = dctx.getDispatcher();\n        GenericValue userLogin = (GenericValue) context.get(\"userLogin\");\n\n        GenericValue paymentPref = (GenericValue) context.get(\"orderPaymentPreference\");\n        Double refundAmount = (Double) context.get(\"refundAmount\");\n\n        GenericValue orderHeader = null;\n        try {\n            orderHeader = paymentPref.getRelatedOne(\"OrderHeader\");\n        } catch (GenericEntityException e) {\n            Debug.logError(e, \"Cannot get OrderHeader from OrderPaymentPreference\", module);\n            return ServiceUtil.returnError(\"Problems getting OrderHeader from OrderPaymentPreference: \" + e.toString());\n        }\n\n        OrderReadHelper orh = new OrderReadHelper(orderHeader);\n\n        GenericValue paymentSettings = null;\n        if (orderHeader != null) {\n            paymentSettings = getPaymentSettings(orderHeader, paymentPref, REFUND_SERVICE_TYPE, false);\n        }\n\n        if (paymentSettings != null) {\n            String paymentConfig = paymentSettings.getString(\"paymentPropertiesPath\");\n            String serviceName = paymentSettings.getString(\"paymentService\");\n            if (serviceName != null) {\n                Map serviceContext = new HashMap();\n                serviceContext.put(\"orderPaymentPreference\", paymentPref);\n                serviceContext.put(\"paymentConfig\", paymentConfig);\n                serviceContext.put(\"currency\", orh.getCurrency());\n\n                // get the creditCard/address/email\n                String payToPartyId = null;\n                try {\n                    payToPartyId = getBillingInformation(orh, paymentPref, new HashMap());\n                } catch (GenericEntityException e) {\n                    Debug.logError(e, \"Problems getting billing information\", module);\n                    return ServiceUtil.returnError(\"Problems getting billing information\");\n                }\n\n                // format the price\n                String currencyFormat = UtilProperties.getPropertyValue(\"general.properties\", \"currency.decimal.format\", \"##0.00\");\n                DecimalFormat formatter = new DecimalFormat(currencyFormat);\n                String amountString = formatter.format(refundAmount);\n                Double processAmount = null;\n                try {\n                    processAmount = new Double(formatter.parse(amountString).doubleValue());\n                } catch (ParseException e) {\n                    Debug.logError(e, \"Problem parsing amount using DecimalFormat\", module);\n                    return ServiceUtil.returnError(\"Refund processor problems; see logs\");\n                }\n                serviceContext.put(\"refundAmount\", processAmount);\n                serviceContext.put(\"userLogin\", userLogin);\n\n                // call the service\n                Map refundResponse = null;\n                try {\n                    refundResponse = dispatcher.runSync(serviceName, serviceContext, TX_TIME, true);\n                } catch (GenericServiceException e) {\n                    Debug.logError(e, \"Problem refunding payment through processor\", module);\n                    return ServiceUtil.returnError(\"Refund processor problems; see logs\");\n                }\n                if (ServiceUtil.isError(refundResponse)) {\n                    saveError(dispatcher, userLogin, paymentPref, refundResponse, REFUND_SERVICE_TYPE, \"PGT_REFUND\");\n                    return ServiceUtil.returnError(ServiceUtil.getErrorMessage(refundResponse));\n                }\n\n                //Debug.log(\"Called Electronic Refund Service : \" + refundResponse, module);\n\n                // get the pay-from party\n                if (paymentConfig == null || paymentConfig.length() == 0) {\n                    paymentConfig = \"payment.properties\";\n                }\n                String payFromPartyId = getPayToPartyId(orderHeader);\n\n                // create the PaymentGatewayResponse record\n                String responseId = delegator.getNextSeqId(\"PaymentGatewayResponse\");\n                GenericValue response = delegator.makeValue(\"PaymentGatewayResponse\", null);\n                response.set(\"paymentGatewayResponseId\", responseId);\n                response.set(\"paymentServiceTypeEnumId\", REFUND_SERVICE_TYPE);\n                response.set(\"orderPaymentPreferenceId\", paymentPref.get(\"orderPaymentPreferenceId\"));\n                response.set(\"paymentMethodTypeId\", paymentPref.get(\"paymentMethodTypeId\"));\n                response.set(\"paymentMethodId\", paymentPref.get(\"paymentMethodId\"));\n                response.set(\"transCodeEnumId\", \"PGT_REFUND\");\n\n                // set the capture info\n                response.set(\"amount\", refundResponse.get(\"refundAmount\"));\n                response.set(\"referenceNum\", refundResponse.get(\"refundRefNum\"));\n                response.set(\"altReference\", refundResponse.get(\"refundAltRefNum\"));\n                response.set(\"gatewayCode\", refundResponse.get(\"refundCode\"));\n                response.set(\"gatewayFlag\", refundResponse.get(\"refundFlag\"));\n                response.set(\"gatewayMessage\", refundResponse.get(\"refundMessage\"));\n                response.set(\"transactionDate\", UtilDateTime.nowTimestamp());\n                try {\n                    delegator.create(response);\n                } catch (GenericEntityException e) {\n                    Debug.logError(e, module);\n                    return ServiceUtil.returnError(\"Unable to create PaymentGatewayResponse record\");\n                }\n\n                // create the internal messages\n                List messages = (List) refundResponse.get(\"internalRespMsgs\");\n                if (messages != null && messages.size() > 0) {\n                    Iterator i = messages.iterator();\n                    while (i.hasNext()) {\n                        GenericValue respMsg = delegator.makeValue(\"PaymentGatewayRespMsg\", null);\n                        String respMsgId = delegator.getNextSeqId(\"PaymentGatewayRespMsg\");\n                        String message = (String) i.next();\n                        respMsg.set(\"paymentGatewayRespMsgId\", respMsgId);\n                        respMsg.set(\"paymentGatewayResponseId\", responseId);\n                        respMsg.set(\"pgrMessage\", message);\n                        try {\n                            delegator.create(respMsg);\n                        } catch (GenericEntityException e) {\n                            Debug.logError(e, module);\n                            return ServiceUtil.returnError(\"Unable to create PaymentGatewayRespMsg record\");\n                        }\n                    }\n                }\n\n                // handle the (reverse) payment\n                Boolean refundResult = (Boolean) refundResponse.get(\"refundResult\");\n                if (refundResult != null && refundResult.booleanValue()) {\n                    // create a payment record\n                    Map paymentCtx = UtilMisc.toMap(\"paymentTypeId\", \"CUSTOMER_REFUND\");\n                    paymentCtx.put(\"paymentMethodTypeId\", paymentPref.get(\"paymentMethodTypeId\"));\n                    paymentCtx.put(\"paymentMethodId\", paymentPref.get(\"paymentMethodId\"));\n                    paymentCtx.put(\"paymentGatewayResponseId\", responseId);\n                    paymentCtx.put(\"partyIdTo\", payToPartyId);\n                    paymentCtx.put(\"partyIdFrom\", payFromPartyId);\n                    paymentCtx.put(\"statusId\", \"PMNT_SENT\");\n                    paymentCtx.put(\"paymentPreferenceId\", paymentPref.get(\"orderPaymentPreferenceId\"));\n                    paymentCtx.put(\"currencyUomId\", orh.getCurrency());   \n                    paymentCtx.put(\"amount\", refundResponse.get(\"refundAmount\"));\n                    paymentCtx.put(\"userLogin\", userLogin);\n                    paymentCtx.put(\"paymentRefNum\", refundResponse.get(\"refundRefNum\"));\n                    paymentCtx.put(\"comments\", \"Refund\");\n\n                    String paymentId = null;\n                    try {\n                        Map payRes = dispatcher.runSync(\"createPayment\", paymentCtx);\n                        if (ModelService.RESPOND_ERROR.equals(payRes.get(ModelService.RESPONSE_MESSAGE))) {\n                            return ServiceUtil.returnError((String) payRes.get(ModelService.ERROR_MESSAGE));\n                        } else {\n                            paymentId = (String) payRes.get(\"paymentId\");\n                        }\n                    } catch (GenericServiceException e) {\n                        Debug.logError(e, \"Problem creating Payment\", module);\n                        return ServiceUtil.returnError(\"Problem creating Payment\");\n                    }\n                    //Debug.log(\"Payment created : \" + paymentId, module);\n\n                    if (paymentId == null) {\n                        return ServiceUtil.returnError(\"Create payment failed\");\n                    }\n\n                    Map result = ServiceUtil.returnSuccess();\n                    result.put(\"paymentId\", paymentId);\n                    return result;\n                } else {\n                    return ServiceUtil.returnFailure(\"The refund failed\");\n                }\n            } else {\n                return ServiceUtil.returnError(\"No refund service defined\");\n            }\n        } else {\n            return ServiceUtil.returnError(\"No payment settings found\");\n        }\n    }","commit_id":"56aff603df6c4e55d0eff85a80b7b4fe4867ef93","url":"https://github.com/apache/ofbiz"},{"original_method":"protected void loadEstimates() {\n        this.shippingEstimates = new HashMap();\n        if (shippingMethods != null) {\n            Iterator i = shippingMethods.iterator();\n            while (i.hasNext()) {\n                GenericValue shipMethod = (GenericValue) i.next();\n                String shippingMethodTypeId = shipMethod.getString(\"shipmentMethodTypeId\");\n                String carrierRoleTypeId = shipMethod.getString(\"roleTypeId\");\n                String carrierPartyId = shipMethod.getString(\"partyId\");\n                String shippingCmId = shippingAddress != null ? shippingAddress.getString(\"contactMechId\") : null;\n\n                Map estimateMap = ShippingEvents.getShipGroupEstimate(dispatcher, delegator, \"SALES_ORDER\",\n                        shippingMethodTypeId, carrierPartyId, carrierRoleTypeId, shippingCmId, productStoreId,\n                        shippableItemInfo, shippableWeight, shippableQuantity, shippableTotal);\n\n                Double shippingTotal = (Double) estimateMap.get(\"shippingTotal\");\n                shippingEstimates.put(shipMethod, shippingTotal);\n            }\n        }\n    }","id":58775,"modified_method":"protected void loadEstimates() {\n        this.shippingEstimates = new HashMap();\n        if (shippingMethods != null) {\n            Iterator i = shippingMethods.iterator();\n            while (i.hasNext()) {\n                GenericValue shipMethod = (GenericValue) i.next();\n                String shippingMethodTypeId = shipMethod.getString(\"shipmentMethodTypeId\");\n                String carrierRoleTypeId = shipMethod.getString(\"roleTypeId\");\n                String carrierPartyId = shipMethod.getString(\"partyId\");\n                String shippingCmId = shippingAddress != null ? shippingAddress.getString(\"contactMechId\") : null;\n\n                Map estimateMap = ShippingEvents.getShipGroupEstimate(dispatcher, delegator, \"SALES_ORDER\",\n                        shippingMethodTypeId, carrierPartyId, carrierRoleTypeId, shippingCmId, productStoreId,\n                        shippableItemInfo, shippableWeight, shippableQuantity, shippableTotal);\n\n                if (!ServiceUtil.isError(estimateMap)) {\n                    Double shippingTotal = (Double) estimateMap.get(\"shippingTotal\");\n                    shippingEstimates.put(shipMethod, shippingTotal);\n                }\n            }\n        }\n    }","commit_id":"a53759a8050c4e7ba4064b40687c19c7dda3bad0","url":"https://github.com/apache/ofbiz"},{"original_method":"public static Map getShipGroupEstimate(LocalDispatcher dispatcher, GenericDelegator delegator, String orderTypeId,\n            String shipmentMethodTypeId, String carrierPartyId, String carrierRoleTypeId, String shippingContactMechId,\n            String productStoreId, List itemInfo, double shippableWeight, double shippableQuantity,\n            double shippableTotal) {\n        String standardMessage = \"A problem occurred calculating shipping. Fees will be calculated offline.\";\n        List errorMessageList = new ArrayList();\n\n        if (shipmentMethodTypeId == null || carrierPartyId == null) {\n            if (\"SALES_ORDER\".equals(orderTypeId)) {\n                errorMessageList.add(\"Please Select Your Shipping Method.\");\n                return ServiceUtil.returnError(errorMessageList);\n            } else {\n                return ServiceUtil.returnSuccess();\n            }\n        }\n\n        if (carrierRoleTypeId == null) {\n            carrierRoleTypeId = \"CARRIER\";\n        }\n\n//  ShipmentCostEstimate entity allows null value for geoIdTo field. So if geoIdTo is null we should be using orderFlatPrice for shipping cost.\n//  So now calcShipmentCostEstimate service requires shippingContactMechId only if geoIdTo field has not null value.        \n//        if (shippingContactMechId == null) {\n//            errorMessageList.add(\"Please Select Your Shipping Address.\");\n//            return ServiceUtil.returnError(errorMessageList);\n//        }\n\n        // no shippable items; we won't change any shipping at all\n        if (shippableQuantity == 0) {\n            Map result = ServiceUtil.returnSuccess();\n            result.put(\"shippingTotal\", new Double(0));\n            return result;\n        }\n\n        // check for an external service call\n        GenericValue storeShipMethod = ProductStoreWorker.getProductStoreShipmentMethod(delegator, productStoreId,\n                shipmentMethodTypeId, carrierPartyId, carrierRoleTypeId);\n\n        if (storeShipMethod == null) {\n            errorMessageList.add(\"No applicable shipment method found.\");\n            return ServiceUtil.returnError(errorMessageList);\n        }\n\n        // the initial amount before manual estimates\n        double shippingTotal = 0.00;\n\n        // prepare the service invocation fields\n        Map serviceFields = new HashMap();\n        serviceFields.put(\"initialEstimateAmt\", new Double(shippingTotal));\n        serviceFields.put(\"shippableTotal\", new Double(shippableTotal));\n        serviceFields.put(\"shippableQuantity\", new Double(shippableQuantity));\n        serviceFields.put(\"shippableWeight\", new Double(shippableWeight));        \n        serviceFields.put(\"shippableItemInfo\", itemInfo);\n        serviceFields.put(\"productStoreId\", productStoreId);\n        serviceFields.put(\"carrierRoleTypeId\", \"CARRIER\");\n        serviceFields.put(\"carrierPartyId\", carrierPartyId);\n        serviceFields.put(\"shipmentMethodTypeId\", shipmentMethodTypeId);\n        serviceFields.put(\"shippingContactMechId\", shippingContactMechId);\n\n        // call the external shipping service\n        try {\n            Double externalAmt = getExternalShipEstimate(dispatcher, storeShipMethod, serviceFields);\n            if (externalAmt != null) {\n                shippingTotal += externalAmt.doubleValue();\n            }\n        } catch (GeneralException e) {\n            return ServiceUtil.returnSuccess(standardMessage);\n        }\n\n        // update the initial amount\n        serviceFields.put(\"initialEstimateAmt\", new Double(shippingTotal));\n\n        // call the generic estimate service\n        try {\n            Double genericAmt = getGenericShipEstimate(dispatcher, storeShipMethod, serviceFields);\n            if (genericAmt != null) {\n                shippingTotal += genericAmt.doubleValue();\n            }\n        } catch (GeneralException e) {\n            return ServiceUtil.returnSuccess(standardMessage);\n        }\n\n        // return the totals\n        Map responseResult = ServiceUtil.returnSuccess();\n        responseResult.put(\"shippingTotal\", new Double(shippingTotal));\n        return responseResult;\n    }","id":58776,"modified_method":"public static Map getShipGroupEstimate(LocalDispatcher dispatcher, GenericDelegator delegator, String orderTypeId,\n            String shipmentMethodTypeId, String carrierPartyId, String carrierRoleTypeId, String shippingContactMechId,\n            String productStoreId, List itemInfo, double shippableWeight, double shippableQuantity,\n            double shippableTotal) {\n        String standardMessage = \"A problem occurred calculating shipping. Fees will be calculated offline.\";\n        List errorMessageList = new ArrayList();\n\n        if (shipmentMethodTypeId == null || carrierPartyId == null) {\n            if (\"SALES_ORDER\".equals(orderTypeId)) {\n                errorMessageList.add(\"Please Select Your Shipping Method.\");\n                return ServiceUtil.returnError(errorMessageList);\n            } else {\n                return ServiceUtil.returnSuccess();\n            }\n        }\n\n        if (carrierRoleTypeId == null) {\n            carrierRoleTypeId = \"CARRIER\";\n        }\n\n//  ShipmentCostEstimate entity allows null value for geoIdTo field. So if geoIdTo is null we should be using orderFlatPrice for shipping cost.\n//  So now calcShipmentCostEstimate service requires shippingContactMechId only if geoIdTo field has not null value.        \n//        if (shippingContactMechId == null) {\n//            errorMessageList.add(\"Please Select Your Shipping Address.\");\n//            return ServiceUtil.returnError(errorMessageList);\n//        }\n\n        // no shippable items; we won't change any shipping at all\n        if (shippableQuantity == 0) {\n            Map result = ServiceUtil.returnSuccess();\n            result.put(\"shippingTotal\", new Double(0));\n            return result;\n        }\n\n        // check for an external service call\n        GenericValue storeShipMethod = ProductStoreWorker.getProductStoreShipmentMethod(delegator, productStoreId,\n                shipmentMethodTypeId, carrierPartyId, carrierRoleTypeId);\n\n        if (storeShipMethod == null) {\n            errorMessageList.add(\"No applicable shipment method found.\");\n            return ServiceUtil.returnError(errorMessageList);\n        }\n\n        // the initial amount before manual estimates\n        double shippingTotal = 0.00;\n\n        // prepare the service invocation fields\n        Map serviceFields = new HashMap();\n        serviceFields.put(\"initialEstimateAmt\", new Double(shippingTotal));\n        serviceFields.put(\"shippableTotal\", new Double(shippableTotal));\n        serviceFields.put(\"shippableQuantity\", new Double(shippableQuantity));\n        serviceFields.put(\"shippableWeight\", new Double(shippableWeight));        \n        serviceFields.put(\"shippableItemInfo\", itemInfo);\n        serviceFields.put(\"productStoreId\", productStoreId);\n        serviceFields.put(\"carrierRoleTypeId\", \"CARRIER\");\n        serviceFields.put(\"carrierPartyId\", carrierPartyId);\n        serviceFields.put(\"shipmentMethodTypeId\", shipmentMethodTypeId);\n        serviceFields.put(\"shippingContactMechId\", shippingContactMechId);\n\n        // call the external shipping service\n        try {\n            Double externalAmt = getExternalShipEstimate(dispatcher, storeShipMethod, serviceFields);\n            if (externalAmt != null) {\n                shippingTotal += externalAmt.doubleValue();\n            }\n        } catch (GeneralException e) {\n            return ServiceUtil.returnError(standardMessage);\n        }\n\n        // update the initial amount\n        serviceFields.put(\"initialEstimateAmt\", new Double(shippingTotal));\n\n        // call the generic estimate service\n        try {\n            Double genericAmt = getGenericShipEstimate(dispatcher, storeShipMethod, serviceFields);\n            if (genericAmt != null) {\n                shippingTotal += genericAmt.doubleValue();\n            }\n        } catch (GeneralException e) {\n            return ServiceUtil.returnError(standardMessage);\n        }\n\n        // return the totals\n        Map responseResult = ServiceUtil.returnSuccess();\n        responseResult.put(\"shippingTotal\", new Double(shippingTotal));\n        return responseResult;\n    }","commit_id":"a53759a8050c4e7ba4064b40687c19c7dda3bad0","url":"https://github.com/apache/ofbiz"},{"original_method":"public static Double getGenericShipEstimate(LocalDispatcher dispatcher, GenericValue storeShipMeth, Map context) throws GeneralException {\n        // invoke the generic estimate service next -- append to estimate amount\n        Map genericEstimate = null;\n        Double genericShipAmt = null;\n        try {\n            genericEstimate = dispatcher.runSync(\"calcShipmentCostEstimate\", context);\n        } catch (GenericServiceException e) {\n            Debug.logError(e, \"Shipment Service Error\", module);\n            throw new GeneralException();\n        }\n        if (ServiceUtil.isError(genericEstimate)) {\n            Debug.logError(ServiceUtil.getErrorMessage(genericEstimate), module);\n            throw new GeneralException();\n        } else if (ServiceUtil.isFailure(genericEstimate)) {\n            genericShipAmt = new Double(-1);\n        } else {\n            genericShipAmt = (Double) genericEstimate.get(\"shippingEstimateAmount\");\n        }\n        return genericShipAmt;\n    }","id":58777,"modified_method":"public static Double getGenericShipEstimate(LocalDispatcher dispatcher, GenericValue storeShipMeth, Map context) throws GeneralException {\n        // invoke the generic estimate service next -- append to estimate amount\n        Map genericEstimate = null;\n        Double genericShipAmt = null;\n        try {\n            genericEstimate = dispatcher.runSync(\"calcShipmentCostEstimate\", context);\n        } catch (GenericServiceException e) {\n            Debug.logError(e, \"Shipment Service Error\", module);\n            throw new GeneralException();\n        }\n        if (ServiceUtil.isError(genericEstimate) || ServiceUtil.isFailure(genericEstimate)) {\n            Debug.logError(ServiceUtil.getErrorMessage(genericEstimate), module);\n            throw new GeneralException();\n        } else if (ServiceUtil.isFailure(genericEstimate)) {\n            genericShipAmt = new Double(-1);\n        } else {\n            genericShipAmt = (Double) genericEstimate.get(\"shippingEstimateAmount\");\n        }\n        return genericShipAmt;\n    }","commit_id":"a53759a8050c4e7ba4064b40687c19c7dda3bad0","url":"https://github.com/apache/ofbiz"},{"original_method":"public static Double getExternalShipEstimate(LocalDispatcher dispatcher, GenericValue storeShipMeth, Map context) throws GeneralException {\n        // invoke the external shipping estimate service\n        String serviceName = (String)storeShipMeth.get(\"serviceName\");\n        Double externalShipAmt = null;\n        if(serviceName != null){\n            String doEstimates = UtilProperties.getPropertyValue(\"shipment.properties\", \"shipment.doratecheck\", \"true\");\n            //If all estimates are not turned off, check for the individual one\n            if(\"true\".equals(doEstimates)){\n                String dothisEstimate = UtilProperties.getPropertyValue(\"shipment.properties\", \"shipment.doratecheck.\" + serviceName, \"true\");\n                if(\"false\".equals(dothisEstimate))\n                 serviceName = null;\n            } else {\n                //Rate checks inhibited\n                serviceName = null;\n            }\n        }\n        if (( serviceName != null)) {\n            String configProps = storeShipMeth.getString(\"configProps\");\n            if (UtilValidate.isNotEmpty(serviceName)) {\n                // prepare the external service context\n                context.put(\"serviceConfigProps\", configProps);\n\n                // invoke the service\n                Map serviceResp = null;\n                try {\n                    Debug.log(\"Service : \" + serviceName + \" / \" + configProps + \" -- \" + context, module);\n                    // because we don't want to blow up too big or rollback the transaction when this happens, always have it run in its own transaction...\n                    serviceResp = dispatcher.runSync(serviceName, context, 0, true);\n                } catch (GenericServiceException e) {\n                    Debug.logError(e, \"Shipment Service Error\", module);\n                    throw new GeneralException(e);\n                }\n                if (!ServiceUtil.isError(serviceResp)) {\n                    externalShipAmt = (Double) serviceResp.get(\"shippingEstimateAmount\");\n                } else {\n                    String errMsg = \"Error getting external shipment cost estimate: \" + ServiceUtil.getErrorMessage(serviceResp); \n                    Debug.logError(errMsg, module);\n                    throw new GeneralException(errMsg);\n                }\n            }\n        }\n        return externalShipAmt;\n    }","id":58778,"modified_method":"public static Double getExternalShipEstimate(LocalDispatcher dispatcher, GenericValue storeShipMeth, Map context) throws GeneralException {\n        // invoke the external shipping estimate service\n        String serviceName = (String)storeShipMeth.get(\"serviceName\");\n        Double externalShipAmt = null;\n        if(serviceName != null){\n            String doEstimates = UtilProperties.getPropertyValue(\"shipment.properties\", \"shipment.doratecheck\", \"true\");\n            //If all estimates are not turned off, check for the individual one\n            if(\"true\".equals(doEstimates)){\n                String dothisEstimate = UtilProperties.getPropertyValue(\"shipment.properties\", \"shipment.doratecheck.\" + serviceName, \"true\");\n                if(\"false\".equals(dothisEstimate))\n                 serviceName = null;\n            } else {\n                //Rate checks inhibited\n                serviceName = null;\n            }\n        }\n        if (( serviceName != null)) {\n            String configProps = storeShipMeth.getString(\"configProps\");\n            if (UtilValidate.isNotEmpty(serviceName)) {\n                // prepare the external service context\n                context.put(\"serviceConfigProps\", configProps);\n\n                // invoke the service\n                Map serviceResp = null;\n                try {\n                    Debug.log(\"Service : \" + serviceName + \" / \" + configProps + \" -- \" + context, module);\n                    // because we don't want to blow up too big or rollback the transaction when this happens, always have it run in its own transaction...\n                    serviceResp = dispatcher.runSync(serviceName, context, 0, true);\n                } catch (GenericServiceException e) {\n                    Debug.logError(e, \"Shipment Service Error\", module);\n                    throw new GeneralException(e);\n                }\n                if (ServiceUtil.isError(serviceResp)) {\n                    String errMsg = \"Error getting external shipment cost estimate: \" + ServiceUtil.getErrorMessage(serviceResp); \n                    Debug.logError(errMsg, module);\n                    throw new GeneralException(errMsg);\n                } else if (ServiceUtil.isFailure(serviceResp)) {\n                    String errMsg = \"Failure getting external shipment cost estimate: \" + ServiceUtil.getErrorMessage(serviceResp); \n                    Debug.logError(errMsg, module);\n                    throw new GeneralException(errMsg);\n                } else {\n                    externalShipAmt = (Double) serviceResp.get(\"shippingEstimateAmount\");\n                }\n            }\n        }\n        return externalShipAmt;\n    }","commit_id":"a53759a8050c4e7ba4064b40687c19c7dda3bad0","url":"https://github.com/apache/ofbiz"},{"original_method":"/**\n   * Calculates the average aspect Ratios of rectangles given in the List.\n   *\n   * @param r Array of rectangles\n   * @return average aspect ratio\n   */\n  static double lineRatio(final MapRects r) {\n    if (r.size() == 0) return Double.MAX_VALUE;\n    double ar = 0;\n\n    for(int i = 0; i < r.size(); i++) {\n      if (r.get(i).w != 0 && r.get(i).h != 0) {\n        if (r.get(i).w > r.get(i).h) {\n          ar += r.get(i).w / r.get(i).h;\n        } else {\n          ar += r.get(i).h / r.get(i).w;\n        }\n      }\n    }\n    return ar / r.size();\n  }","id":58779,"modified_method":"/**\n   * Calculates the aspect Ratios of rectangles given in the List. Bigger \n   * rectangles have more influence to the result.\n   * \n   * @param r Array of rectangles\n   * @return average aspect ratio\n   */\n  static double lineRatio(final MapRects r) {\n    if(r.size() == 0) return Double.MAX_VALUE;\n    double ar = 0;\n    double dev = 0;\n\n    for(MapRect rect : r) {\n      if(rect.w != 0 && rect.h != 0) {\n        double d = rect.w * rect.h;\n        dev += d;\n        if(rect.w > rect.h) {\n          ar += d * rect.w / rect.h;\n        } else {\n          ar += d * rect.h / rect.w;\n        }\n      }\n    }\n    return ar / dev;\n  }","commit_id":"221fd1a444f7b19d3a8c9558fe44cc6ec03d4aa3","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * One rectangle left, add it and continue with its children.\n   * @param r parent rectangle\n   * @param level indicates level which is calculated\n   */\n  private void putRect(final MapRect r, final int level) {\n    rectangles.add(r);\n\n    // position, with and height calculated using sizes of former level\n    final int x = r.x + layout.x;\n    final int y = r.y + layout.y;\n    final int w = r.w - layout.w;\n    final int h = r.h - layout.h;\n    \n    // skip too small rectangles and meta data in file systems\n    if((w < off && h < off) || w < 1 || h < 1 || GUIProp.mapfs && \n        ViewData.isLeaf(data, r.pre)) return;\n\n    final MapList ch = children(r.pre);\n    if(ch.size != 0) makeMap(new MapRect(x, y, w, h, r.pre, r.level + 1),\n        ch, 0, ch.size - 1, level + 1);\n  }","id":58780,"modified_method":"/**\n   * One rectangle left, add it and continue with its children.\n   * @param r parent rectangle\n   * @param level indicates level which is calculated\n   */\n  private void putRect(final MapRect r, final int level) {\n    if(!GUIProp.fsmeta) {\n      rectangles.add(r);\n\n    // position, with and height calculated using sizes of former level\n    final int x = r.x + layout.x;\n    final int y = r.y + layout.y;\n    final int w = r.w - layout.w;\n    final int h = r.h - layout.h;\n    \n    // skip too small rectangles and meta data in file systems\n    if((w < off && h < off) || w < 1 || h < 1 || GUIProp.mapfs && \n        ViewData.isLeaf(data, r.pre)) return;\n\n    final MapList ch = children(r.pre);\n    if(ch.size != 0) makeMap(new MapRect(x, y, w, h, r.pre, r.level + 1),\n        ch, 0, ch.size - 1, level + 1);\n    } else {\n      // position, with and height calculated using sizes of former level\n      final int x = r.x + layout.x;\n      final int y = r.y + layout.y;\n      final int w = r.w - layout.w;\n      final int h = r.h - layout.h;\n      \n      // skip too small rectangles and meta data in file systems\n      if((w < off && h < off) || w < 1 || h < 1 || GUIProp.mapfs && \n          ViewData.isLeaf(data, r.pre)) {\n        rectangles.add(r);\n        return;\n      }\n\n      final MapList ch = children(r.pre);\n      if(ViewData.isLeaf(data, r.pre) && ch.size > 0) {\n        r.w = r.w / 2;\n        rectangles.add(r);\n        makeMap(new MapRect(r.x + r.w, r.y, r.w, r.h, r.pre, r.level + 1),\n            ch, 0, ch.size - 1, level + 1);\n      } else {\n        rectangles.add(r);\n        if(ch.size != 0) makeMap(new MapRect(x, y, w, h, r.pre, r.level + 1),\n            ch, 0, ch.size - 1, level + 1);\n      }\n    }\n  }","commit_id":"221fd1a444f7b19d3a8c9558fe44cc6ec03d4aa3","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void refreshInit() {\r\n    if(painter != null) painter.close();\r\n    painter = null;\r\n    mainRects = null;\r\n    focused = null;\r\n    textLen = null;\r\n    zoomStep = 0;\r\n\r\n    final Data data = gui.context.data();\r\n    if(data != null && getWidth() != 0) {\r\n      if(!GUIProp.showmap) return;\r\n      painter = GUIProp.mapfs && data.fs != null ? new MapFS(this, data.fs) :\r\n        new MapDefault(this);\r\n      mainMap = createImage();\r\n      zoomMap = createImage();\r\n      refreshLayout();\r\n      repaint();\r\n    }\r\n  }","id":58781,"modified_method":"@Override\r\n  public void refreshInit() {\r\n    if(painter != null) painter.close();\r\n    painter = null;\r\n    mainRects = null;\r\n    focused = null;\r\n    textLen = null;\r\n    zoomStep = 0;\r\n\r\n    final Data data = gui.context.data();\r\n    if(data != null && getWidth() != 0) {\r\n      if(!GUIProp.showmap) return;\r\n      if(!GUIProp.fsmeta)\r\n        painter = GUIProp.mapfs && data.fs != null ? new MapFS(this, data.fs) :\r\n        new MapDefault(this);\r\n      else painter = data.fs != null ? new MapFS(this, data.fs) :\r\n        new MapDefault(this);\r\n      mainMap = createImage();\r\n      zoomMap = createImage();\r\n      refreshLayout();\r\n      repaint();\r\n    }\r\n  }","commit_id":"221fd1a444f7b19d3a8c9558fe44cc6ec03d4aa3","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public MapRects calcMap(final MapRect r, final MapList ml, \n      final int ns, final int ne, final int l) {\n\n    ml.sort();\n    \n    final MapRects rects = new MapRects();\n    int ni = ns;\n    // running start holding first element of current row\n    int start = ns;\n\n    // setting initial proportions\n    double xx = r.x;\n    double yy = r.y;\n    double ww = r.w;\n    double hh = r.h;\n    \n    MapRects row = new MapRects();\n    int height = 0;\n    int width = 0;\n    double weight = 0;\n    double sumweight = 1;\n    \n    while(ni <= ne) {\n      if(ww < hh) {\n        weight += ml.weight[ni];\n        height = (int) (weight / sumweight * hh);\n        height = height > 0 ? height : 1;\n        \n        final MapRects tmp = new MapRects();\n        double x = xx;\n        for(int i = start; i <= ni; i++) {\n          int w = i == ni ? (int) (xx + ww - x) :\n            (int) (ml.weight[i] / weight * ww);\n          w = w > 0 ? w : 1;\n          if(x + w <= xx + ww) tmp.add(new MapRect((int) x, (int) yy, w, height,\n              ml.list[i], l));\n          x += w;\n        }\n\n        // if ar has increased discard tmp and add row\n        if(lineRatio(tmp) > lineRatio(row)) {\n          // add rects of row to solution\n          rects.add(row);\n          // preparing next line\n          hh -= row.get(0).h;\n          yy += row.get(0).h;\n          tmp.reset();\n          row.reset();\n          start = ni;\n          sumweight -= weight - ml.weight[ni];\n          weight = 0;\n          // sometimes there has to be one rectangles to fill the left space\n          if(ne == ni + 1) {\n            row.add(new MapRect((int) xx, (int) yy, (int) ww, (int) hh,\n                ml.list[ni], l));\n            break;\n          }\n        } else {\n          row = tmp;\n          ni++;\n        }\n      } else {\n        weight += ml.weight[ni];\n        width = (int) (weight / sumweight * ww);\n        width = width > 0 ? width : 1;\n        final MapRects tmp = new MapRects();\n\n        double y = yy;\n        for(int i = start; i <= ni; i++) {\n          int h = i == ni ? (int) (yy + hh - y) :\n            (int) (ml.weight[i] / weight * hh);\n          h = h > 0 ? h : 1;\n          if(y + h <= yy + hh) tmp.add(new MapRect((int) xx, (int) y, width, h,\n              ml.list[i], l));\n          y += h;\n        }\n\n        // if ar has increased discard tmp and add row\n        if(lineRatio(tmp) > lineRatio(row)) {\n          // add rects of row to solution\n          rects.add(row);\n          // preparing next line\n          ww -= row.get(0).w;\n          xx += row.get(0).w;\n          tmp.reset();\n          row.reset();\n          start = ni;\n          sumweight -= weight - ml.weight[ni];\n          weight = 0;\n          // sometimes there has to be one rectangles to fill the left space\n          if(ne == ni + 1) {\n            row.add(new MapRect((int) xx, (int) yy, (int) ww, (int) hh,\n                ml.list[ni], l));\n            break;\n          }\n        } else {\n          row = tmp;\n          ni++;\n        }\n      }\n    }\n    \n    for(final MapRect rect : row) rect.h = (int) hh;\n    // adding last row\n    rects.add(row);\n    \n    return rects;\n  }","id":58782,"modified_method":"@Override\n  public MapRects calcMap(final MapRect r, final MapList ml, \n      final int ns, final int ne, final int l) {\n\n    ml.sort();\n    \n    final MapRects rects = new MapRects();\n    int ni = ns;\n    // running start holding first element of current row\n    int start = ns;\n\n    // setting initial proportions\n    double xx = r.x;\n    double yy = r.y;\n    double ww = r.w;\n    double hh = r.h;\n    \n    MapRects row = new MapRects();\n    int height = 0;\n    int width = 0;\n    double weight = 0;\n    double sumweight = 1;\n    double tmpratio;\n    double rowratio = Double.MAX_VALUE;\n    \n    while(ni <= ne) {\n      if(ww < hh) {\n        weight += ml.weight[ni];\n        height = (int) (weight / sumweight * hh);\n        height = height > 0 ? height : 1;\n        \n        final MapRects tmp = new MapRects();\n        double x = xx;\n        for(int i = start; i <= ni; i++) {\n          int w = i == ni ? (int) (xx + ww - x) :\n            (int) (ml.weight[i] / weight * ww);\n          w = w > 0 ? w : 1;\n          if(x + w <= xx + ww) tmp.add(new MapRect((int) x, (int) yy, w, height,\n              ml.list[i], l));\n          x += w;\n        }\n        tmpratio = lineRatio(tmp);\n\n        // if ar has increased discard tmp and add row\n        if(tmpratio > lineRatio(row)) {\n          // add rects of row to solution\n          rects.add(row);\n          rowratio = Double.MAX_VALUE;\n          // preparing next line\n          hh -= row.get(0).h;\n          yy += row.get(0).h;\n          tmp.reset();\n          row.reset();\n          start = ni;\n          sumweight -= weight - ml.weight[ni];\n          weight = 0;\n          // sometimes there has to be one rectangles to fill the left space\n          if(ne == ni + 1) {\n            row.add(new MapRect((int) xx, (int) yy, (int) ww, (int) hh,\n                ml.list[ni], l));\n            break;\n          }\n        } else {\n          row = tmp;\n          rowratio = tmpratio;\n          ni++;\n        }\n      } else {\n        weight += ml.weight[ni];\n        width = (int) (weight / sumweight * ww);\n        width = width > 0 ? width : 1;\n        final MapRects tmp = new MapRects();\n\n        double y = yy;\n        for(int i = start; i <= ni; i++) {\n          int h = i == ni ? (int) (yy + hh - y) :\n            (int) (ml.weight[i] / weight * hh);\n          h = h > 0 ? h : 1;\n          if(y + h <= yy + hh) tmp.add(new MapRect((int) xx, (int) y, width, h,\n              ml.list[i], l));\n          y += h;\n        }\n        tmpratio = lineRatio(tmp);\n        \n        // if ar has increased discard tmp and add row\n        if(tmpratio > rowratio) {\n          // add rects of row to solution\n          rects.add(row);\n          rowratio = Double.MAX_VALUE;\n          // preparing next line\n          ww -= row.get(0).w;\n          xx += row.get(0).w;\n          tmp.reset();\n          row.reset();\n          start = ni;\n          sumweight -= weight - ml.weight[ni];\n          weight = 0;\n          // sometimes there has to be one rectangles to fill the left space\n          if(ne == ni + 1) {\n            row.add(new MapRect((int) xx, (int) yy, (int) ww, (int) hh,\n                ml.list[ni], l));\n            break;\n          }\n        } else {\n          row = tmp;\n          rowratio = tmpratio;\n          ni++;\n        }\n      }\n    }\n    \n    for(final MapRect rect : row) rect.h = (int) hh;\n    // adding last row\n    rects.add(row);\n    \n    return rects;\n  }","commit_id":"221fd1a444f7b19d3a8c9558fe44cc6ec03d4aa3","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\n  public MapRects calcMap(final MapRect r, final MapList ml, \n      final int ns, final int ne, final int l) {\n    // stores all calculated rectangles\n    final MapRects rects = new MapRects();\n    \n    // node iterator\n    int ni = ns;\n    // first node of current row\n    int start = ns;\n\n    // setting initial proportions\n    final double xx = r.x;\n    double yy = r.y;\n    final double ww = r.w;\n    double hh = r.h;\n\n    MapRects row = new MapRects();\n    int height = 0;\n    double weight = 0;\n    double sumweight = 1;\n    \n    while(ni <= ne) {\n      weight += ml.weight[ni];\n      height = (int) (weight / sumweight * hh);\n      height = height > 0 ? height : 1;\n      \n      final MapRects tmp = new MapRects();\n\n      double x = xx;\n      for(int i = start; i <= ni; i++) {\n        int w = i == ni ? (int) (xx + ww - x) :\n          (int) (ml.weight[i] / weight * ww);\n        w = w > 0 ? w : 1;\n        if(x + w <= xx + ww) tmp.add(new MapRect((int) x, (int) yy, w, height,\n            ml.list[i], l));\n        x += w;\n      }\n\n      // if ar has increased discard tmp and add row\n      if(lineRatio(tmp) > lineRatio(row)) {\n        // add rects of row to solution\n        rects.add(row);\n        // preparing next line\n        hh -= row.get(0).h;\n        yy += row.get(0).h;\n        tmp.reset();\n        row.reset();\n        start = ni;\n        sumweight -= weight - ml.weight[ni];\n        weight = 0;\n        // sometimes there has to be one rectangles to fill the left space\n        if(ne == ni + 1) {\n          row.add(new MapRect((int) xx, (int) yy, (int) ww, (int) hh,\n              ml.list[ni], l));\n          break;\n        }\n      } else {\n        row = tmp;\n        ni++;\n      }\n    }\n    for(final MapRect rect : row) rect.h = (int) hh;\n    // adding last row\n    rects.add(row);\n    \n    return rects;\n  }","id":58783,"modified_method":"@Override\n  public MapRects calcMap(final MapRect r, final MapList ml, \n      final int ns, final int ne, final int l) {\n    // stores all calculated rectangles\n    final MapRects rects = new MapRects();\n    \n    // node iterator\n    int ni = ns;\n    // first node of current row\n    int start = ns;\n\n    // setting initial proportions\n    final double xx = r.x;\n    double yy = r.y;\n    final double ww = r.w;\n    double hh = r.h;\n\n    MapRects row = new MapRects();\n    int height = 0;\n    double weight = 0;\n    double sumweight = 1;\n    double tmpratio = 0;\n    double rowratio = Double.MAX_VALUE;\n    \n    \n    while(ni <= ne) {\n      weight += ml.weight[ni];\n      height = (int) (weight / sumweight * hh);\n      height = height > 0 ? height : 1;\n      \n      final MapRects tmp = new MapRects();\n\n      double x = xx;\n      for(int i = start; i <= ni; i++) {\n        int w = i == ni ? (int) (xx + ww - x) :\n          (int) (ml.weight[i] / weight * ww);\n        w = w > 0 ? w : 1;\n        \n        if(x + w <= xx + ww) tmp.add(new MapRect((int) x, (int) yy, w, height,\n            ml.list[i], l));\n        x += w;\n      }\n      tmpratio = lineRatio(tmp);\n\n      // if ar has increased discard tmp and add row\n      if(tmpratio > rowratio) {\n        // add rects of row to solution\n        rects.add(row);\n        rowratio = Double.MAX_VALUE;\n        // preparing next line\n        hh -= row.get(0).h;\n        yy += row.get(0).h;\n        tmp.reset();\n        row.reset();\n        start = ni;\n        sumweight -= weight - ml.weight[ni];\n        weight = 0;\n        // sometimes there has to be one rectangles to fill the left space\n        if(ne == ni + 1) {\n          row.add(new MapRect((int) xx, (int) yy, (int) ww, (int) hh,\n              ml.list[ni], l));\n          break;\n        }\n      } else {\n        row = tmp;\n        rowratio = tmpratio;\n        ni++;\n      }\n    }\n    // adding last row\n    for(final MapRect rect : row) rect.h = (int) hh;\n    rects.add(row);\n    \n    return rects;\n  }","commit_id":"221fd1a444f7b19d3a8c9558fe44cc6ec03d4aa3","url":"https://github.com/BaseXdb/basex"},{"original_method":"public void testAddAnswerThread() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//tr[4]/td[2]/a[1]/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Waiting for an Answer\",\n\t\t\tRuntimeVariables.replace(\"Waiting for an Answer\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Reply\", RuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"I like green because it is so natural. Obviously.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"I like green because it is so natural. Obviously.\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a/span\");\n\t\tselenium.clickAt(\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[1]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Mark as an Answer\"));\n\t\tselenium.clickAt(\"link=T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isElementPresent(\"link=Resolved\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=Waiting for an Answer\"));\n\t}","id":58784,"modified_method":"public void testAddAnswerThread() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'T\\u00e9st Cat\\u00e9gory Edit\\u00e9d')]/td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'T\\u00e9st Cat\\u00e9gory Edit\\u00e9d')]/td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Waiting for an Answer\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Favorite Color Test Question')]/td[3]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Favorite Color Test Question')]/td[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Waiting for an Answer\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Reply\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Favorite Color Test Question')]/td[2]/div/ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Reply')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//tr[contains(.,'Favorite Color Test Question')]/td[2]/div/ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Reply')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"I like green because it is so natural. Obviously.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"I like green because it is so natural. Obviously.\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"RE: Favorite Color Test Question\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Favorite Color Test Question\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"What is your favorite color?\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"RE: Favorite Color Test Question\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"I like green because it is so natural. Obviously.\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Mark as an Answer\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'RE: Favorite Color Test Question')]/td[2]/div/ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Mark as an Answer')]\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'RE: Favorite Color Test Question')]/td[2]/div/ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Mark as an Answer')]\",\n\t\t\tRuntimeVariables.replace(\"Mark as an Answer\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//tr[contains(.,'RE: Favorite Color Test Question')]/td[2]/div/div/div[@class='answer']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'RE: Favorite Color Test Question')]/td[2]/div/div/div[@class='answer']\"));\n\t\tselenium.clickAt(\"link=T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Favorite Color Test Question\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Favorite Color Test Question')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Resolved\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Favorite Color Test Question')]/td[3]/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"Waiting for an Answer\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDeletableMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//div[1]/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//div/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"),\n\t\t\tselenium.getText(\"//td[2]/div[2]\"));\n\t}","id":58785,"modified_method":"public void testAddDeletableMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//div[1]/h1/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//div/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"//td[2]/div[2]\"));\n\t}","id":58786,"modified_method":"public void testAddMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMoveCategory() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t}","id":58787,"modified_method":"public void testAddMoveCategory() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sujr\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a/strong\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuestionThread() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a[1]/strong\"));\n\t\tselenium.clickAt(\"//tr[4]/td[2]/a[1]/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isChecked(\"//input[@name='_162_questionCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@name='_162_questionCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Mark as a Question Checkbox\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_162_questionCheckbox']\"));\n\t\tselenium.type(\"//input[@name='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"Favorite Color Test Question\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"What is your favorite color?\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"What is your favorite color?\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=Waiting for an Answer\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Waiting for an Answer\"));\n\t}","id":58788,"modified_method":"public void testAddQuestionThread() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//tr[contains(.,'T\\u00e9st Cat\\u00e9gory Edit\\u00e9d')]/td[2]/a/strong\"));\n\t\t\t\tselenium.clickAt(\"//tr[contains(.,'T\\u00e9st Cat\\u00e9gory Edit\\u00e9d')]/td[2]/a/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean questionCheckboxChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_162_questionCheckbox']\");\n\n\t\t\t\tif (questionCheckboxChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_162_questionCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Mark as a Question Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_162_questionCheckbox']\"));\n\t\t\t\tselenium.type(\"//input[@name='_162_subject']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Favorite Color Test Question\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\t\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@class='cke_button_source cke_on']\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\t\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\t\t\tRuntimeVariables.replace(\"What is your favorite color?\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\t\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\t\t\tselenium.waitForText(\"//body\", \"What is your favorite color?\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.clickAt(\"link=T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Favorite Color Test Question\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//tr[contains(.,'Favorite Color Test Question')]/td[2]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Waiting for an Answer\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//tr[contains(.,'Favorite Color Test Question')]/td[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddReplyMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Reply\", RuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/div/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[1]/td[2]/div[2]\"));\n\t}","id":58789,"modified_method":"public void testAddReplyMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Reply\", RuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[2]\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondReplyMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Reply\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[2]/span/a/span\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[5]/table/tbody/tr[1]/td[2]/div[1]/ul/li[2]/span/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is a second reply message.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is a second reply message.\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[6]/table/tbody/tr[1]/td[2]/div[1]/div/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a second reply message.\"),\n\t\t\tselenium.getText(\"//div[6]/table/tbody/tr[1]/td[2]/div[2]\"));\n\t}","id":58790,"modified_method":"public void testAddSecondReplyMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Reply\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!')]/td[2]/div/ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Reply')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//tr[contains(.,'This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!')]/td[2]/div/ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Reply')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is a second reply message.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is a second reply message.\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a second reply message.\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[3]\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddThirdReplyMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Reply\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[6]/table/tbody/tr[1]/td[2]/div[1]/ul/li[2]/span/a/span\"));\n\t\tselenium.clickAt(\"//div[6]/table/tbody/tr[1]/td[2]/div[1]/ul/li[2]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is a third reply message.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is a third reply message.\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"exact:RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[7]/table/tbody/tr[1]/td[2]/div[1]/div/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a third reply message.\"),\n\t\t\tselenium.getText(\"//div[7]/table/tbody/tr[1]/td[2]/div[2]\"));\n\t}","id":58791,"modified_method":"public void testAddThirdReplyMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Reply\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'This is a second reply message.')]/td[2]/div/ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Reply')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//tr[contains(.,'This is a second reply message. ')]/td[2]/div/ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Reply')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is a third reply message.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is a third reply message.\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a second reply message.\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a third reply message.\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[4]\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a[1]/strong\"));\n\t\tselenium.clickAt(\"//tr[4]/td[2]/a[1]/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tassertTrue(selenium.isTextPresent(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.clickAt(\"link=RE: T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a second reply message.\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a third reply message.\"));\n\t\tselenium.waitForVisible(\"link=Message Boards\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//td[2]/a/strong\", \"Sujr\");\n\t\tassertEquals(RuntimeVariables.replace(\"Sujr\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Moved to Sujr\"));\n\t}","id":58792,"modified_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Sujr\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Sujr')]/td[2]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'T\\u00e9st Cat\\u00e9gory Edit\\u00e9d')]/td[2]/a/strong\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//tr[contains(.,'T\\u00e9st Cat\\u00e9gory Edit\\u00e9d')]/td[2]/a\",\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//tr[contains(.,'T\\u00e9st Cat\\u00e9gory Edit\\u00e9d')]/td[2]/a[2]\",\n\t\t\t\t\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'T\\u00e9st Cat\\u00e9gory Edit\\u00e9d')]/td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'S\\u00e9cond T\\u00e9st Subcat\\u00e9gory')]/td[2]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'T\\u00e9st M\\u00e9ssag\\u00e9 Edited')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'RE: T\\u00e9st M\\u00e9ssag\\u00e9')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'RE: T\\u00e9st M\\u00e9ssag\\u00e9')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"RE: RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a second reply message.\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a third reply message.\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[3]\"));\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//td[2]/a/strong\", \"Sujr\");\n\t\tassertEquals(RuntimeVariables.replace(\"Sujr\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Moved to Sujr\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Sujr\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-success']\",\n\t\t\t\"Your request completed successfully.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Sujr\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Moved to Sujr\",\n\t\t\tRuntimeVariables.replace(\"Moved to Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Trust and paths will be straightened.\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","id":58793,"modified_method":"public void testDeleteMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Sujr\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Delete')]\"));\n\t\tselenium.clickAt(\"//ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Delete')]\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to delete this? It will be deleted immediately.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Sujr\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\", RuntimeVariables.replace(\"Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Moved to Sujr\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Moved to Sujr\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Moved to Sujr\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Moved to Sujr\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Trust and paths will be straightened.\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditCategory() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//tr[4]/td[6]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//tr[4]/td[6]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.type(\"//textarea[@id='_162_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\t}","id":58794,"modified_method":"public void testEditCategory() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'T\\u00e9st Cat\\u00e9gory')]/td[6]/span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'T\\u00e9st Cat\\u00e9gory')]/td[6]/span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_name']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.type(\"//textarea[@id='_162_description']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st cat\\u00e9gory edited!\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a[1]/strong\"));\n\t\tselenium.clickAt(\"//tr[4]/td[2]/a[1]/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is edited test M\\u00e9ssag\\u00e9!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is edited test M\\u00e9ssag\\u00e9!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is edited test M\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","id":58795,"modified_method":"public void testEditMessage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'T\\u00e9st Cat\\u00e9gory Edit\\u00e9d')]/td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'T\\u00e9st Cat\\u00e9gory Edit\\u00e9d')]/td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory Edit\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'T\\u00e9st M\\u00e9ssag\\u00e9')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'T\\u00e9st M\\u00e9ssag\\u00e9')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Edit')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Edit')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is edited test M\\u00e9ssag\\u00e9!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is edited test M\\u00e9ssag\\u00e9!\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 Edited\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is edited test M\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//menu/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//menu/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.uploadFile(\"//input[@id='_86_importFileName']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\messageboards\\\\dependencies\\\\Selenium-Message-Boards.portlet.lar\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Delete portlet data before importing Checkbox\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_PORTLET_DATACheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_PORTLET_DATACheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Data Checkbox\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_86_PORTLET_DATACheckbox']\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":58796,"modified_method":"public void testImportLAR() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Export / Import')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Export / Import')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Export / Import')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Import\",\n\t\t\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.uploadFile(\"//input[@id='_86_importFileName']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\messageboards\\\\dependencies\\\\Selenium-Message-Boards.portlet.lar\"));\n\n\t\t\t\tboolean deletePortletDataChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\");\n\n\t\t\t\tif (deletePortletDataChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Delete portlet data before importing Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_DELETE_PORTLET_DATACheckbox']\"));\n\n\t\t\t\tboolean portletDataChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_PORTLET_DATACheckbox']\");\n\n\t\t\t\tif (portletDataChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_PORTLET_DATACheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Data Checkbox\"));\n\n\t\t\tcase 3:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_PORTLET_DATACheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveThread() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[2]/a[1]/strong\"));\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[2]/a[1]/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\t\t\tselenium.clickAt(\"link=Move Thread\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move Thread\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_162_addExplanationPostCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='_162_addExplanationPostCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add post explanation.\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_162_addExplanationPostCheckbox']\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_162_subject']\");\n\t\t\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Moved to Sujr\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\t\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@class='cke_button_source cke_on']\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\t\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Trust and paths will be straightened.\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\t\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\t\t\tselenium.waitForText(\"//body\",\n\t\t\t\t\t\"Trust and paths will be straightened.\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tselenium.selectWindow(\"title=Message Boards\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean CategoriesPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Categories\");\n\n\t\t\t\tif (!CategoriesPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Categories\",\n\t\t\t\t\tRuntimeVariables.replace(\"Categories\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Choose']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Choose\"));\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Move Thread']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move Thread\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Trust and paths will be straightened.\"));\n\t\t\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\t\t\"link=T\\u00e9st Subcat\\u00e9gory\"));\n\t\t\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\t\t\"link=T\\u00e9st Cat\\u00e9gory\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58797,"modified_method":"public void testMoveThread() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[2]/a/strong\"));\n\t\t\t\tselenium.clickAt(\"//tr[4]/td[2]/a/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"S\\u00e9cond T\\u00e9st Subcat\\u00e9gory\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//tr[3]/td[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Move Thread\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='thread-actions']/table/tbody/tr/td/span/a[contains(.,'Move Thread')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='thread-actions']/table/tbody/tr/td/span/a[contains(.,'Move Thread')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move Thread\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean addExplanationPostChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_162_addExplanationPostCheckbox']\");\n\n\t\t\t\tif (addExplanationPostChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_162_addExplanationPostCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add post explanation.\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_162_addExplanationPostCheckbox']\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_162_subject']\");\n\t\t\t\tselenium.type(\"//input[@id='_162_subject']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Moved to Sujr\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//textarea[@id='_162_editor' and @style='display: none;']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\t\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@class='cke_button_source cke_on']\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/textarea\");\n\t\t\t\tselenium.type(\"//td[@id='cke_contents__162_editor']/textarea\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Trust and paths will be straightened.\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\t\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//td[@id='cke_contents__162_editor']/iframe\");\n\t\t\t\tselenium.waitForText(\"//body\",\n\t\t\t\t\t\"Trust and paths will be straightened.\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectWindow(\"title=Message Boards\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//ul[contains(@class,'breadcrumbs')]/li/span/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Categories\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//ul[contains(@class,'breadcrumbs')]/li/span/a\"));\n\t\t\t\tselenium.clickAt(\"//ul[contains(@class,'breadcrumbs')]/li/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Categories\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sujr\"),\n\t\t\t\t\tselenium.getText(\"//tr[contains(.,'Sujr')]/td[1]/a\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//tr[contains(.,'Sujr')]/td[5]/input[@value='Choose']\");\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Move Thread']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Move Thread\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Moved to Sujr\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//tr[contains(.,'Moved to Sujr')]/td[1]/a/strong\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xpath=(//div[@class='subject']/a/strong)[1]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"),\n\t\t\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[1]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Moved to Sujr\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xpath=(//div[@class='subject']/a/strong)[2]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Trust and paths will be straightened.\"),\n\t\t\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[2]\"));\n\t\t\t\tassertFalse(selenium.isTextPresent(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\t\t\tassertFalse(selenium.isTextPresent(\"T\\u00e9st Cat\\u00e9gory\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRecentPosts() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Recent Posts\",\n\t\t\tRuntimeVariables.replace(\"Recent Posts\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"));\n\t}","id":58798,"modified_method":"public void testRecentPosts() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Recent Posts\",\n\t\t\tRuntimeVariables.replace(\"Recent Posts\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Null Test Entry\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[6]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d!\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearch() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t}","id":58799,"modified_method":"public void testSearch() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]/a\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]/a\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_162_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]/a\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSplitThread() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Split Thread\",\n\t\t\tRuntimeVariables.replace(\"Split Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Click OK to create a new thread with the following messages.\"));\n\t\tselenium.clickAt(\"//input[@value='OK']\", RuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a second reply message.\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a third reply message.\"));\n\t\tselenium.clickAt(\"link=T\\u00e9st Subcat\\u00e9gory\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=RE: T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t}","id":58800,"modified_method":"public void testSplitThread() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Cat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"),\n\t\t\tselenium.getText(\"//td[2]/a/strong\"));\n\t\tselenium.clickAt(\"//td[2]/a/strong\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Split Thread\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Split Thread')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li/span/a[contains(.,'Split Thread')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Click OK to create a new thread with the following messages.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.clickAt(\"//input[@value='OK']\", RuntimeVariables.replace(\"OK\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is a t\\u00e9st m\\u00e9ssag\\u00e9!\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a t\\u00e9st r\\u00e9ply m\\u00e9ssag\\u00e9!\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"RE: RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a second reply message.\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='subject']/a/strong)[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a third reply message.\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='thread-body'])[3]\"));\n\t\tselenium.clickAt(\"link=T\\u00e9st Subcat\\u00e9gory\",\n\t\t\tRuntimeVariables.replace(\"T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=T\\u00e9st M\\u00e9ssag\\u00e9\"));\n\t\tassertEquals(RuntimeVariables.replace(\"T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RE: T\\u00e9st M\\u00e9ssag\\u00e9\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMBCategoryCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean category1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_162_allRowIds']\");\n\n\t\t\t\tif (!category1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_162_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58801,"modified_method":"public void testTearDownMBCategoryCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Message Boards\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean categoryPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_162_allRowIds']\");\n\n\t\t\t\tif (!categoryPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_162_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"There are no threads in this category.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"90d0c8343bb6970ec2bae92710340cb34bd4c0d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_AddComment() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Permissions Blogs Test Entry\",\n\t\t\tRuntimeVariables.replace(\"Permissions Blogs Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Comment\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[contains(@class,'add-comment')]/div/span/a\"));\n\t\tselenium.click(\"//fieldset[contains(@class,'add-comment')]/div/span/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//textarea[@name='_33_postReplyBody0']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//textarea[@name='_33_postReplyBody0']\",\n\t\t\tRuntimeVariables.replace(\"Member Permissions Blogs Test Comment\"));\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@id='_33_discussion-status-messages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='_33_discussion-status-messages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Member Permissions Blogs Test Comment\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-discussion last']/div[3]/div/div\"));\n\t}","id":58802,"modified_method":"public void testMember_AddComment() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Permissions Blogs Test Entry\",\n\t\t\tRuntimeVariables.replace(\"Permissions Blogs Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//fieldset[contains(@class,'add-comment')]/div/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Add Comment\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[contains(@class,'add-comment')]/div/span/a\"));\n\t\tselenium.click(\"//fieldset[contains(@class,'add-comment')]/div/span/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//textarea[@name='_33_postReplyBody0']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//textarea[@name='_33_postReplyBody0']\",\n\t\t\tRuntimeVariables.replace(\"Member Permissions Blogs Test Comment\"));\n\t\tselenium.clickAt(\"//input[@value='Reply']\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@id='_33_discussion-status-messages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@id='_33_discussion-status-messages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Member Permissions Blogs Test Comment\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-discussion last']/div[3]/div/div\"));\n\t}","commit_id":"e207dc7641ef5046ad002fa5305df06348d4f7e1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_LimitScopePermissionsScopeSite()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Scope\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Scope\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\", RuntimeVariables.replace(\"Scope\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"label=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Limit Scope\",\n\t\t\tRuntimeVariables.replace(\"Limit Scope\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForPopUp(\"null\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"title=Roles\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_128_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_128_name']\",\n\t\t\tRuntimeVariables.replace(\"Scope Site\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Scope Site\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\", RuntimeVariables.replace(\"Scope Site\"));\n\t\tselenium.selectWindow(\"null\");\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":58803,"modified_method":"public void testSA_LimitScopePermissionsScopeSite()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Scope\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Scope\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\", RuntimeVariables.replace(\"Scope\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"label=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Limit Scope\",\n\t\t\tRuntimeVariables.replace(\"Limit Scope\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForPopUp(\"null\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"title=Roles\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_128_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_128_name']\",\n\t\t\tRuntimeVariables.replace(\"Scope Site\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Scope Site\",\n\t\t\tRuntimeVariables.replace(\"Scope Site\"));\n\t\tselenium.selectWindow(\"null\");\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Scope Sitex\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//span[@class='permission-scope']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Scope Sitex\"),\n\t\t\tselenium.getText(\"//span[@class='permission-scope']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Entry\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Scope Site\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t}","commit_id":"e207dc7641ef5046ad002fa5305df06348d4f7e1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddAmpersandTag() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\t\tselenium.waitForVisible(\"//input[@id='_99_name']\");\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"&amp;test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@id='portletMessages']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Tag names cannot be an empty string or contain characters such as: \\n , = > / < [ { % | + # ? \\\" ; / * ~.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=&amp;test\"));\n\t}","id":58804,"modified_method":"public void testAddAmpersandTag() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@id='_99_addTagButton']\",\n\t\t\tRuntimeVariables.replace(\"Add Tag\"));\n\t\tselenium.waitForVisible(\"//input[@id='_99_name']\");\n\t\tselenium.type(\"//input[@id='_99_name']\",\n\t\t\tRuntimeVariables.replace(\"&test\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@id='portletMessages']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Tag names cannot be an empty string or contain characters such as: \\n , = > / < [ { % | + # ? \\\" ; / * ~.\"),\n\t\t\tselenium.getText(\"//div[@id='portletMessages']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"link=&test\"));\n\t}","commit_id":"96ef221dbdbc77b7b21f1a486a18787cf323151f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDMFolderNameInvalidMG() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Media Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Media Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Folder\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[contains(.,'Add Folder')]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[contains(.,'Add Folder')]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_31_name']\",\n\t\t\tRuntimeVariables.replace(\"!@#$%^&amp;*\"));\n\t\tselenium.type(\"//textarea[@id='_31_description']\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Description\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":58805,"modified_method":"public void testAddDMFolderNameInvalidMG() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Media Gallery Test Page\",\n\t\t\tRuntimeVariables.replace(\"Media Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Folder\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[contains(.,'Add Folder')]/a\"));\n\t\tselenium.clickAt(\"//div[contains(@class,'lfr-component lfr-menu-list')]/ul/li[contains(.,'Add Folder')]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_31_name']\",\n\t\t\tRuntimeVariables.replace(\"!@#$%^&*\"));\n\t\tselenium.type(\"//textarea[@id='_31_description']\",\n\t\t\tRuntimeVariables.replace(\"DM Folder Description\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"96ef221dbdbc77b7b21f1a486a18787cf323151f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageWCD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Expando Web Content Community\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Manage Pages')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Manage Pages')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Manage Pages')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Page\"),\n\t\t\tselenium.getText(\"//div/span/button[contains(.,'Add Page')]\"));\n\t\tselenium.clickAt(\"//div/span/button[contains(.,'Add Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.type(\"//input[@id='_156_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Page\"));\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":58806,"modified_method":"public void testAddPageWCD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Expando Web Content Community\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Manage Pages')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Manage Pages')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Manage Pages')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Page\"),\n\t\t\tselenium.getText(\"//div/span/button[contains(.,'Add Page')]\"));\n\t\tselenium.clickAt(\"//div/span/button[contains(.,'Add Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.type(\"//input[@name='_156_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Page\"));\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"96ef221dbdbc77b7b21f1a486a18787cf323151f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageWF() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Expando Web Form Community\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Manage Pages')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Manage Pages')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Manage Pages')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Page\"),\n\t\t\tselenium.getText(\"//div/span/button[contains(.,'Add Page')]\"));\n\t\tselenium.clickAt(\"//div/span/button[contains(.,'Add Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.type(\"//input[@id='_156_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Web Form Page\"));\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":58807,"modified_method":"public void testAddPageWF() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Expando Web Form Community\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Manage Pages')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Manage Pages')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Manage Pages')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Page\"),\n\t\t\tselenium.getText(\"//div/span/button[contains(.,'Add Page')]\"));\n\t\tselenium.clickAt(\"//div/span/button[contains(.,'Add Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.type(\"//input[@name='_156_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Web Form Page\"));\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"96ef221dbdbc77b7b21f1a486a18787cf323151f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTemplateExpando() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/expando-web-content-community/\");\n\t\t\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Templates\",\n\t\t\t\t\tRuntimeVariables.replace(\"Templates\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Template']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Template\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_15_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Expando Template Test\"));\n\t\t\t\tselenium.type(\"//textarea[@id='_15_description_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"This is an expando template test.\"));\n\n\t\t\t\tboolean cacheableChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_15_cacheableCheckbox\");\n\n\t\t\t\tif (!cacheableChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_15_cacheableCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Cacheable Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@src,'select_structure')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@src,'select_structure')]\");\n\t\t\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Structure Test\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Expando Structure Test\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.waitForText(\"//a[@id='_15_structureName']\",\n\t\t\t\t\t\"Expando Structure Test\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Structure Test\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_15_structureName']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Launch Editor']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Launch Editor\"));\n\t\t\t\tselenium.waitForVisible(\"//iframe[@id='_15_xslContentIFrame']\");\n\t\t\t\tselenium.selectFrame(\"//iframe[@id='_15_xslContentIFrame']\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"//textarea[@id='_15_plainEditorField']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"##\\n## Do some request handling setup.\\n##\\n\\n#set ($companyId = $getterUtil.getLong($request.theme-display.company-id))\\n#set ($locale = $localeUtil.fromLanguageId($request.locale))\\n#set ($dateFormatDateTime = $dateFormats.getDateTime($locale))\\n\\n#set ($renderUrl = $request.render-url)\\n#set ($pns = $request.portlet-namespace)\\n#set ($cmd = $getterUtil.getString($request.parameters.cmd))\\n\\n#set ($cur = $getterUtil.getInteger($request.parameters.cur, 1))\\n#set ($delta = $getterUtil.getInteger($request.parameters.delta, 5))\\n\\n#set ($end = $cur * $delta)\\n#set ($start = $end - $delta)\\n\\n<h1>First Expando Bank<\/h1>\\n\\n##\\n## Define the \\\"name\\\" for our ExpandoTable.\\n##\\n\\n#set ($accountsTableName = \\\"AccountsTable\\\")\\n\\n##\\n## Get/Create the ExpandoTable to hold our data.\\n##\\n\\n#set ($accountsTable = $expandoTableLocalService.getTable($companyId, $accountsTableName, $accountsTableName))\\n#set ($accountsTableId = $accountsTable.getTableId())\\n\\n#if (!$accountsTable)\\n\t#set ($accountsTable = $expandoTableLocalService.addTable($companyId, $accountsTableName, $accountsTableName))\\n\t#set ($accountsTableId = $accountsTable.getTableId())\\n\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"firstName\\\", 15)) ## STRING\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"lastName\\\", 15)) ## STRING\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"balance\\\", 5)) ## DOUBLE\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"modifiedDate\\\", 3)) ## DATE\\n#end\\n\\n#set ($accountsTableClassNameId = $accountsTable.getClassNameId())\\n#set ($columns = $expandoColumnLocalService.getColumns($accountsTableId))\\n\\n##\\n## Check to see if a classPK was passed in the request.\\n##\\n\\n#set ($classPK = $getterUtil.getLong($request.parameters.classPK))\\n\\n##\\n## Check if we have received a form submission?\\n##\\n\\n#if ($cmd.equals('add') || $cmd.equals('update'))\\n\t##\\n\t## Let's get the form values from the request.\\n\t##\\n\\n\t#set ($firstName = $getterUtil.getString($request.parameters.firstName, ''))\\n\t#set ($lastName = $getterUtil.getString($request.parameters.lastName, ''))\\n\t#set ($balance = $getterUtil.getDouble($request.parameters.balance, 0.0))\\n\t#set ($date = $dateTool.getDate())\\n\\n\t##\\n\t## Validate the params to see if we should proceed.\\n\t##\\n\\n\t#if ($balance < 50)\\n\t\tPlease fill the form completely in order to create an account. The minimum amount of cash required to create an account is $50.\\n\t#elseif (!$firstName.equals('') && !$lastName.equals(''))\\n\t\t##\\n\t\t## Check to see if it's a new Account.\\n\t\t##\\n\\n\t\t#if ($classPK <= 0)\\n\t\t\t#set ($classPK = $dateTool.getDate().getTime())\\n\t\t#end\\n\\n\t\t#set ($VOID = $expandoValueLocalService.addValues($accountsTableClassNameId, $accountsTableId, $columns, $classPK, {'firstName':$firstName, 'lastName':$lastName, 'balance':\\\"$balance\\\", 'modifiedDate':\\\"${date.getTime()}\\\"}))\\n\\n\t\t##\\n\t\t## Show a response.\\n\t\t##\\n\\n\t\t#if ($cmd.equals('update'))\\n\t\t\tThank you, ${firstName}, for updating your account with our bank!\\n\t\t#else\\n\t\t\tThank you, ${firstName}, for creating an account with our bank!\\n\t\t#end\\n\t#else\\n\t\tPlease fill the form completely in order to create an account. Make sure to till both first and last name fields.\\n\t#end\\n#elseif ($cmd.equals('delete'))\\n\t##\\n\t## Delete the specified Row.\\n\t##\\n\\n\t#if ($classPK > 0)\\n\t\t#set ($VOID = $expandoRowLocalService.deleteRow($accountsTableId, $classPK))\\n\\n\t\tAccount deleted!\\n\\n\t\t#set ($classPK = 0)\\n\t#end\\n#elseif ($cmd.equals('edit'))\\n\t##\\n\t## Edit the specified Row.\\n\t##\\n\\n\tEditting...\\n#end\\n\\n<span style=\\\"display: block; border-top: 1px solid #CCC; margin: 5px 0px 5px 0px;\\\"><\/span>\\n\\n#if (!$cmd.equals('edit'))\\n\t##\\n\t## Now we're into the display logic.\\n\t##\\n\\n\t<input type=\\\"button\\\" value=\\\"Create Account\\\" onClick=\\\"self.location = '${renderUrl}&${pns}cmd=edit';\\\" />\\n\\n\t\\n\\n\\n\\n\t<table class=\\\"taglib-search-iterator\\\">\\n\t<tr class=\\\"results-header\\\">\\n\t\t<th class=\\\"col-1\\\">Account Number<\/th>\\n\t\t<th class=\\\"col-2\\\">First Name<\/th>\\n\t\t<th class=\\\"col-3\\\">Last Name<\/th>\\n\t\t<th class=\\\"col-4\\\">Balance<\/th>\\n\t\t<th class=\\\"col-5\\\">Modified Date<\/th>\\n\t\t<th class=\\\"col-6\\\"><!----><\/th>\\n\t<\/tr>\\n\\n\t##\\n\t## Get all the current records in our ExpandoTable. We can paginate by passing a\\n\t## \\\"begin\\\" and \\\"end\\\" params.\\n\t##\\n\\n\t#set ($total = $expandoRowLocalService.getRowsCount($accountsTableId))\\n\t#set ($rows = $expandoRowLocalService.getRows($accountsTableId, $start, $end))\\n\\n\t#foreach($row in $rows)\\n\t\t#set ($cssClass = 'results-row')\\n\\n\t\t#if ($velocityCount % 2 == 0)\\n\t\t\t#set ($cssClass = \\\"${cssClass} alt\\\")\\n\t\t#end\\n\\n\t\t#if ($velocityCount == 1)\\n\t\t\t#set ($cssClass = \\\"${cssClass} first\\\")\\n\t\t#elseif ($velocityCount == $rows.size())\\n\t\t\t#set ($cssClass = \\\"${cssClass} last\\\")\\n\t\t#end\\n\\n\t\t##\\n\t\t## Get the classPK of this row.\\n\t\t##\\n\\n\t\t#set ($currentClassPK = $row.getClassPK())\\n\\n\t\t#set ($rowValues = $expandoValueLocalService.getRowValues($row.getRowId()))\\n\\n\t\t#set ($values = {})\\n\\n\t\t#foreach ($value in $rowValues)\\n\t\t\t#foreach ($column in $columns)\\n\t\t\t\t#if ($value.columnId == $column.columnId)\\n\t\t\t\t\t#set ($VOID = $values.put($column.name, $value))\\n\t\t\t\t#end\\n\t\t\t#end\\n\t\t#end\\n\\n\t\t#set ($currentFirstName = $values.firstName.string)\\n\t\t#set ($currentLastName = $values.lastName.string)\\n\t\t#set ($currentBalance = $values.balance.double)\\n\t\t#set ($currentModifiedDate = $values.modifiedDate.date)\\n\\n\t\t<tr class=\\\"${cssClass}\\\">\\n\t\t\t<td class=\\\"align-left col-1 valign-left\\\">${currentClassPK}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-2 valign-middle\\\">${currentFirstName}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-3 valign-middle\\\">${currentLastName}<\/td>\\n\\n\t\t\t<td class=\\\"align-right col-4 valign-middle\\\">${numberTool.currency($currentBalance)}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-5 valign-middle\\\">${dateFormatDateTime.format($currentModifiedDate)}<\/td>\\n\\n\t\t\t<td class=\\\"align-right col-6 valign-middle\\\">\\n\t\t\t\t<a href=\\\"${renderUrl}&amp;${pns}cmd=edit&amp;${pns}classPK=${currentClassPK}\\\">Edit<\/a> |\\n\t\t\t\t<a href=\\\"${renderUrl}&amp;${pns}cmd=delete&amp;${pns}classPK=${currentClassPK}\\\">Delete<\/a>\\n\t\t\t<\/td>\\n\t\t<\/tr>\\n\t#end\\n\\n\t#if ($total <= 0)\\n\t\t<tr>\\n\t\t\t<td colspan=\\\"5\\\">No Accounts were found.<\/td>\\n\t\t<\/tr>\\n\t#end\\n\\n\t<\/table>\\n\\n\t<br/>\\n\\n\t#if ($total > $delta)\\n\t\t<div style=\\\"float: right;\\\">\\n\t\t\t<div>\\n\t\t\t\t#set ($previous = $cur - 1)\\n\t\t\t\t#set ($next = $cur + 1)\\n\\n\t\t\t\t#if ($previous > 0)\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${previous}\\\" class=\\\"previous\\\">\\u2039\\u2039 #language('previous')<\/a>\\n\t\t\t\t#else\\n\t\t\t\t\t<span class=\\\"previous\\\">\\u2039\\u2039 #language('previous')<\/span>\\n\t\t\t\t#end\\n\\n\t\t\t\t#set ($pagesIteratorBegin = 1)\\n\t\t\t\t#set ($pagesIteratorEnd = $total / $delta)\\n\t\t\t\t#if (($total % $delta) > 0)\\n\t\t\t\t\t#set ($pagesIteratorEnd = $pagesIteratorEnd + 1)\\n\t\t\t\t#end\\n\\n\t\t\t\t#foreach ($index in [$pagesIteratorBegin..$pagesIteratorEnd])\\n\t\t\t\t\t#if ($index == $cur)\\n\t\t\t\t\t\t#set ($pageNumber = \\\"<strong>${index}<\/strong>\\\")\\n\t\t\t\t\t#else\\n\t\t\t\t\t\t#set ($pageNumber = $index)\\n\t\t\t\t\t#end\\n\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${index}\\\" class=\\\"previous\\\">${pageNumber}<\/a>\\n\t\t\t\t#end\\n\\n\t\t\t\t#if ($next > $cur && $next <= $pagesIteratorEnd)\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${next}\\\" class=\\\"next\\\">#language('next') \\u203a\\u203a<\/a>\\n\t\t\t\t#else\\n\t\t\t\t\t<span class=\\\"next\\\">#language('next') \\u203a\\u203a<\/span>\\n\t\t\t\t#end\\n\t\t\t<\/div>\\n\t\t<\/div>\\n\t#end\\n\\n\t# of Accounts: ${total}\\n#else\\n\t##\\n\t## Here we have our input form.\\n\t##\\n\\n\t#if ($classPK > 0)\\n\t\t##\\n\t\t## Get the account specific values\\n\t\t##\\n\\n\t\t#set ($rowValues = $expandoValueLocalService.getRowValues($companyId, $accountsTableName, $accountsTableName, $classPK, -1, -1))\\n\\n\t\t#set ($values = {})\\n\\n\t\t#foreach ($value in $rowValues)\\n\t\t\t#foreach ($column in $columns)\\n\t\t\t\t#if ($value.columnId == $column.columnId)\\n\t\t\t\t\t#set ($VOID = $values.put($column.name, $value))\\n\t\t\t\t#end\\n\t\t\t#end\\n\t\t#end\\n\\n\t\t#set ($currentFirstName = $values.firstName.string)\\n\t\t#set ($currentLastName = $values.lastName.string)\\n\t\t#set ($currentBalance = $values.balance.double)\\n\t#end\\n\\n\t<form action=\\\"$renderUrl\\\" method=\\\"post\\\" name=\\\"${pns}fm10\\\">\\n\t<input type=\\\"hidden\\\" name=\\\"${pns}classPK\\\" value=\\\"$!{classPK}\\\" />\\n\t<input type=\\\"hidden\\\" name=\\\"${pns}cmd\\\" #if ($classPK > 0) value=\\\"update\\\" #else value=\\\"add\\\" #end/>\\n\\n\t<table class=\\\"lfr-table\\\">\\n\t<tr>\\n\t\t<td>First Name:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}firstName\\\" value=\\\"$!{currentFirstName}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<tr>\\n\t\t<td>Last Name:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}lastName\\\" value=\\\"$!{currentLastName}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<tr>\\n\t\t<td>Balance:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}balance\\\" value=\\\"$!{numberTool.format($currentBalance)}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<\/table>\\n\\n\t\\n\\n\\n\t<input type=\\\"submit\\\" value=\\\"Save\\\" />\\n\t<input type=\\\"button\\\" value=\\\"Cancel\\\" onclick=\\\"self.location = '${renderUrl}'\\\" />\\n\t<\/form>\\n#end\\n\\n\\n\\n\\n\"));\n\t\t\t\tselenium.click(\"//input[@value='Update']\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Template Test\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"This is an expando template test.\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58808,"modified_method":"public void testAddTemplateExpando() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/expando-web-content-community/\");\n\t\t\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Templates\",\n\t\t\t\t\tRuntimeVariables.replace(\"Templates\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Template']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Template\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_15_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Expando Template Test\"));\n\t\t\t\tselenium.type(\"//textarea[@id='_15_description_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"This is an expando template test.\"));\n\n\t\t\t\tboolean cacheableChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_15_cacheableCheckbox\");\n\n\t\t\t\tif (!cacheableChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_15_cacheableCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Cacheable Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@src,'select_structure')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@src,'select_structure')]\");\n\t\t\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Structure Test\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Expando Structure Test\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.waitForText(\"//a[@id='_15_structureName']\",\n\t\t\t\t\t\"Expando Structure Test\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Structure Test\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_15_structureName']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Launch Editor']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Launch Editor\"));\n\t\t\t\tselenium.waitForVisible(\"//iframe[@id='_15_xslContentIFrame']\");\n\t\t\t\tselenium.selectFrame(\"//iframe[@id='_15_xslContentIFrame']\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"//textarea[@id='_15_plainEditorField']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"##\\n## Do some request handling setup.\\n##\\n\\n#set ($companyId = $getterUtil.getLong($request.theme-display.company-id))\\n#set ($locale = $localeUtil.fromLanguageId($request.locale))\\n#set ($dateFormatDateTime = $dateFormats.getDateTime($locale))\\n\\n#set ($renderUrl = $request.render-url)\\n#set ($pns = $request.portlet-namespace)\\n#set ($cmd = $getterUtil.getString($request.parameters.cmd))\\n\\n#set ($cur = $getterUtil.getInteger($request.parameters.cur, 1))\\n#set ($delta = $getterUtil.getInteger($request.parameters.delta, 5))\\n\\n#set ($end = $cur * $delta)\\n#set ($start = $end - $delta)\\n\\n<h1>First Expando Bank<\/h1>\\n\\n##\\n## Define the \\\"name\\\" for our ExpandoTable.\\n##\\n\\n#set ($accountsTableName = \\\"AccountsTable\\\")\\n\\n##\\n## Get/Create the ExpandoTable to hold our data.\\n##\\n\\n#set ($accountsTable = $expandoTableLocalService.getTable($companyId, $accountsTableName, $accountsTableName))\\n#set ($accountsTableId = $accountsTable.getTableId())\\n\\n#if (!$accountsTable)\\n\t#set ($accountsTable = $expandoTableLocalService.addTable($companyId, $accountsTableName, $accountsTableName))\\n\t#set ($accountsTableId = $accountsTable.getTableId())\\n\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"firstName\\\", 15)) ## STRING\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"lastName\\\", 15)) ## STRING\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"balance\\\", 5)) ## DOUBLE\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"modifiedDate\\\", 3)) ## DATE\\n#end\\n\\n#set ($accountsTableClassNameId = $accountsTable.getClassNameId())\\n#set ($columns = $expandoColumnLocalService.getColumns($accountsTableId))\\n\\n##\\n## Check to see if a classPK was passed in the request.\\n##\\n\\n#set ($classPK = $getterUtil.getLong($request.parameters.classPK))\\n\\n##\\n## Check if we have received a form submission?\\n##\\n\\n#if ($cmd.equals('add') || $cmd.equals('update'))\\n\t##\\n\t## Let's get the form values from the request.\\n\t##\\n\\n\t#set ($firstName = $getterUtil.getString($request.parameters.firstName, ''))\\n\t#set ($lastName = $getterUtil.getString($request.parameters.lastName, ''))\\n\t#set ($balance = $getterUtil.getDouble($request.parameters.balance, 0.0))\\n\t#set ($date = $dateTool.getDate())\\n\\n\t##\\n\t## Validate the params to see if we should proceed.\\n\t##\\n\\n\t#if ($balance < 50)\\n\t\tPlease fill the form completely in order to create an account. The minimum amount of cash required to create an account is $50.\\n\t#elseif (!$firstName.equals('') && !$lastName.equals(''))\\n\t\t##\\n\t\t## Check to see if it's a new Account.\\n\t\t##\\n\\n\t\t#if ($classPK <= 0)\\n\t\t\t#set ($classPK = $dateTool.getDate().getTime())\\n\t\t#end\\n\\n\t\t#set ($VOID = $expandoValueLocalService.addValues($accountsTableClassNameId, $accountsTableId, $columns, $classPK, {'firstName':$firstName, 'lastName':$lastName, 'balance':\\\"$balance\\\", 'modifiedDate':\\\"${date.getTime()}\\\"}))\\n\\n\t\t##\\n\t\t## Show a response.\\n\t\t##\\n\\n\t\t#if ($cmd.equals('update'))\\n\t\t\tThank you, ${firstName}, for updating your account with our bank!\\n\t\t#else\\n\t\t\tThank you, ${firstName}, for creating an account with our bank!\\n\t\t#end\\n\t#else\\n\t\tPlease fill the form completely in order to create an account. Make sure to till both first and last name fields.\\n\t#end\\n#elseif ($cmd.equals('delete'))\\n\t##\\n\t## Delete the specified Row.\\n\t##\\n\\n\t#if ($classPK > 0)\\n\t\t#set ($VOID = $expandoRowLocalService.deleteRow($accountsTableId, $classPK))\\n\\n\t\tAccount deleted!\\n\\n\t\t#set ($classPK = 0)\\n\t#end\\n#elseif ($cmd.equals('edit'))\\n\t##\\n\t## Edit the specified Row.\\n\t##\\n\\n\tEditting...\\n#end\\n\\n<span style=\\\"display: block; border-top: 1px solid #CCC; margin: 5px 0px 5px 0px;\\\"><\/span>\\n\\n#if (!$cmd.equals('edit'))\\n\t##\\n\t## Now we're into the display logic.\\n\t##\\n\\n\t<input type=\\\"button\\\" value=\\\"Create Account\\\" onClick=\\\"self.location = '${renderUrl}&${pns}cmd=edit';\\\" />\\n\\n\t\\n\\n\\n\\n\t<table class=\\\"taglib-search-iterator\\\">\\n\t<tr class=\\\"results-header\\\">\\n\t\t<th class=\\\"col-1\\\">Account Number<\/th>\\n\t\t<th class=\\\"col-2\\\">First Name<\/th>\\n\t\t<th class=\\\"col-3\\\">Last Name<\/th>\\n\t\t<th class=\\\"col-4\\\">Balance<\/th>\\n\t\t<th class=\\\"col-5\\\">Modified Date<\/th>\\n\t\t<th class=\\\"col-6\\\"><!----><\/th>\\n\t<\/tr>\\n\\n\t##\\n\t## Get all the current records in our ExpandoTable. We can paginate by passing a\\n\t## \\\"begin\\\" and \\\"end\\\" params.\\n\t##\\n\\n\t#set ($total = $expandoRowLocalService.getRowsCount($accountsTableId))\\n\t#set ($rows = $expandoRowLocalService.getRows($accountsTableId, $start, $end))\\n\\n\t#foreach($row in $rows)\\n\t\t#set ($cssClass = 'results-row')\\n\\n\t\t#if ($velocityCount % 2 == 0)\\n\t\t\t#set ($cssClass = \\\"${cssClass} alt\\\")\\n\t\t#end\\n\\n\t\t#if ($velocityCount == 1)\\n\t\t\t#set ($cssClass = \\\"${cssClass} first\\\")\\n\t\t#elseif ($velocityCount == $rows.size())\\n\t\t\t#set ($cssClass = \\\"${cssClass} last\\\")\\n\t\t#end\\n\\n\t\t##\\n\t\t## Get the classPK of this row.\\n\t\t##\\n\\n\t\t#set ($currentClassPK = $row.getClassPK())\\n\\n\t\t#set ($rowValues = $expandoValueLocalService.getRowValues($row.getRowId()))\\n\\n\t\t#set ($values = {})\\n\\n\t\t#foreach ($value in $rowValues)\\n\t\t\t#foreach ($column in $columns)\\n\t\t\t\t#if ($value.columnId == $column.columnId)\\n\t\t\t\t\t#set ($VOID = $values.put($column.name, $value))\\n\t\t\t\t#end\\n\t\t\t#end\\n\t\t#end\\n\\n\t\t#set ($currentFirstName = $values.firstName.string)\\n\t\t#set ($currentLastName = $values.lastName.string)\\n\t\t#set ($currentBalance = $values.balance.double)\\n\t\t#set ($currentModifiedDate = $values.modifiedDate.date)\\n\\n\t\t<tr class=\\\"${cssClass}\\\">\\n\t\t\t<td class=\\\"align-left col-1 valign-left\\\">${currentClassPK}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-2 valign-middle\\\">${currentFirstName}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-3 valign-middle\\\">${currentLastName}<\/td>\\n\\n\t\t\t<td class=\\\"align-right col-4 valign-middle\\\">${numberTool.currency($currentBalance)}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-5 valign-middle\\\">${dateFormatDateTime.format($currentModifiedDate)}<\/td>\\n\\n\t\t\t<td class=\\\"align-right col-6 valign-middle\\\">\\n\t\t\t\t<a href=\\\"${renderUrl}&${pns}cmd=edit&${pns}classPK=${currentClassPK}\\\">Edit<\/a> |\\n\t\t\t\t<a href=\\\"${renderUrl}&${pns}cmd=delete&${pns}classPK=${currentClassPK}\\\">Delete<\/a>\\n\t\t\t<\/td>\\n\t\t<\/tr>\\n\t#end\\n\\n\t#if ($total <= 0)\\n\t\t<tr>\\n\t\t\t<td colspan=\\\"5\\\">No Accounts were found.<\/td>\\n\t\t<\/tr>\\n\t#end\\n\\n\t<\/table>\\n\\n\t<br/>\\n\\n\t#if ($total > $delta)\\n\t\t<div style=\\\"float: right;\\\">\\n\t\t\t<div>\\n\t\t\t\t#set ($previous = $cur - 1)\\n\t\t\t\t#set ($next = $cur + 1)\\n\\n\t\t\t\t#if ($previous > 0)\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${previous}\\\" class=\\\"previous\\\">\\u2039\\u2039 #language('previous')<\/a>\\n\t\t\t\t#else\\n\t\t\t\t\t<span class=\\\"previous\\\">\\u2039\\u2039 #language('previous')<\/span>\\n\t\t\t\t#end\\n\\n\t\t\t\t#set ($pagesIteratorBegin = 1)\\n\t\t\t\t#set ($pagesIteratorEnd = $total / $delta)\\n\t\t\t\t#if (($total % $delta) > 0)\\n\t\t\t\t\t#set ($pagesIteratorEnd = $pagesIteratorEnd + 1)\\n\t\t\t\t#end\\n\\n\t\t\t\t#foreach ($index in [$pagesIteratorBegin..$pagesIteratorEnd])\\n\t\t\t\t\t#if ($index == $cur)\\n\t\t\t\t\t\t#set ($pageNumber = \\\"<strong>${index}<\/strong>\\\")\\n\t\t\t\t\t#else\\n\t\t\t\t\t\t#set ($pageNumber = $index)\\n\t\t\t\t\t#end\\n\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${index}\\\" class=\\\"previous\\\">${pageNumber}<\/a>\\n\t\t\t\t#end\\n\\n\t\t\t\t#if ($next > $cur && $next <= $pagesIteratorEnd)\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${next}\\\" class=\\\"next\\\">#language('next') \\u203a\\u203a<\/a>\\n\t\t\t\t#else\\n\t\t\t\t\t<span class=\\\"next\\\">#language('next') \\u203a\\u203a<\/span>\\n\t\t\t\t#end\\n\t\t\t<\/div>\\n\t\t<\/div>\\n\t#end\\n\\n\t# of Accounts: ${total}\\n#else\\n\t##\\n\t## Here we have our input form.\\n\t##\\n\\n\t#if ($classPK > 0)\\n\t\t##\\n\t\t## Get the account specific values\\n\t\t##\\n\\n\t\t#set ($rowValues = $expandoValueLocalService.getRowValues($companyId, $accountsTableName, $accountsTableName, $classPK, -1, -1))\\n\\n\t\t#set ($values = {})\\n\\n\t\t#foreach ($value in $rowValues)\\n\t\t\t#foreach ($column in $columns)\\n\t\t\t\t#if ($value.columnId == $column.columnId)\\n\t\t\t\t\t#set ($VOID = $values.put($column.name, $value))\\n\t\t\t\t#end\\n\t\t\t#end\\n\t\t#end\\n\\n\t\t#set ($currentFirstName = $values.firstName.string)\\n\t\t#set ($currentLastName = $values.lastName.string)\\n\t\t#set ($currentBalance = $values.balance.double)\\n\t#end\\n\\n\t<form action=\\\"$renderUrl\\\" method=\\\"post\\\" name=\\\"${pns}fm10\\\">\\n\t<input type=\\\"hidden\\\" name=\\\"${pns}classPK\\\" value=\\\"$!{classPK}\\\" />\\n\t<input type=\\\"hidden\\\" name=\\\"${pns}cmd\\\" #if ($classPK > 0) value=\\\"update\\\" #else value=\\\"add\\\" #end/>\\n\\n\t<table class=\\\"lfr-table\\\">\\n\t<tr>\\n\t\t<td>First Name:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}firstName\\\" value=\\\"$!{currentFirstName}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<tr>\\n\t\t<td>Last Name:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}lastName\\\" value=\\\"$!{currentLastName}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<tr>\\n\t\t<td>Balance:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}balance\\\" value=\\\"$!{numberTool.format($currentBalance)}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<\/table>\\n\\n\t\\n\\n\\n\t<input type=\\\"submit\\\" value=\\\"Save\\\" />\\n\t<input type=\\\"button\\\" value=\\\"Cancel\\\" onclick=\\\"self.location = '${renderUrl}'\\\" />\\n\t<\/form>\\n#end\\n\\n\\n\\n\\n\"));\n\t\t\t\tselenium.click(\"//input[@value='Update']\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Template Test\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"This is an expando template test.\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"96ef221dbdbc77b7b21f1a486a18787cf323151f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTemplateExpando() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/expando-web-content-community/\");\n\t\t\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Templates\",\n\t\t\t\t\tRuntimeVariables.replace(\"Templates\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Template']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Template\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_15_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Expando Template Test\"));\n\t\t\t\tselenium.type(\"//textarea[@id='_15_description_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"This is an expando template test.\"));\n\n\t\t\t\tboolean cacheableChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_15_cacheableCheckbox\");\n\n\t\t\t\tif (!cacheableChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_15_cacheableCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Cacheable Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@src,'select_structure')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@src,'select_structure')]\");\n\t\t\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Structure Test\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Expando Structure Test\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.waitForText(\"//a[@id='_15_structureName']\",\n\t\t\t\t\t\"Expando Structure Test\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Structure Test\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_15_structureName']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Launch Editor']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Launch Editor\"));\n\t\t\t\tselenium.waitForVisible(\"//iframe[@id='_15_xslContentIFrame']\");\n\t\t\t\tselenium.selectFrame(\"//iframe[@id='_15_xslContentIFrame']\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"//textarea[@id='_15_plainEditorField']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"##\\n## Do some request handling setup.\\n##\\n\\n#set ($companyId = $getterUtil.getLong($request.theme-display.company-id))\\n#set ($locale = $localeUtil.fromLanguageId($request.locale))\\n#set ($dateFormatDateTime = $dateFormats.getDateTime($locale))\\n\\n#set ($renderUrl = $request.render-url)\\n#set ($pns = $request.portlet-namespace)\\n#set ($cmd = $getterUtil.getString($request.parameters.cmd))\\n\\n#set ($cur = $getterUtil.getInteger($request.parameters.cur, 1))\\n#set ($delta = $getterUtil.getInteger($request.parameters.delta, 5))\\n\\n#set ($end = $cur * $delta)\\n#set ($start = $end - $delta)\\n\\n<h1>First Expando Bank<\/h1>\\n\\n##\\n## Define the \\\"name\\\" for our ExpandoTable.\\n##\\n\\n#set ($accountsTableName = \\\"AccountsTable\\\")\\n\\n##\\n## Get/Create the ExpandoTable to hold our data.\\n##\\n\\n#set ($accountsTable = $expandoTableLocalService.getTable($companyId, $accountsTableName, $accountsTableName))\\n#set ($accountsTableId = $accountsTable.getTableId())\\n\\n#if (!$accountsTable)\\n\t#set ($accountsTable = $expandoTableLocalService.addTable($companyId, $accountsTableName, $accountsTableName))\\n\t#set ($accountsTableId = $accountsTable.getTableId())\\n\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"firstName\\\", 15)) ## STRING\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"lastName\\\", 15)) ## STRING\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"balance\\\", 5)) ## DOUBLE\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"modifiedDate\\\", 3)) ## DATE\\n#end\\n\\n#set ($accountsTableClassNameId = $accountsTable.getClassNameId())\\n#set ($columns = $expandoColumnLocalService.getColumns($accountsTableId))\\n\\n##\\n## Check to see if a classPK was passed in the request.\\n##\\n\\n#set ($classPK = $getterUtil.getLong($request.parameters.classPK))\\n\\n##\\n## Check if we have received a form submission?\\n##\\n\\n#if ($cmd.equals('add') || $cmd.equals('update'))\\n\t##\\n\t## Let's get the form values from the request.\\n\t##\\n\\n\t#set ($firstName = $getterUtil.getString($request.parameters.firstName, ''))\\n\t#set ($lastName = $getterUtil.getString($request.parameters.lastName, ''))\\n\t#set ($balance = $getterUtil.getDouble($request.parameters.balance, 0.0))\\n\t#set ($date = $dateTool.getDate())\\n\\n\t##\\n\t## Validate the params to see if we should proceed.\\n\t##\\n\\n\t#if ($balance < 50)\\n\t\tPlease fill the form completely in order to create an account. The minimum amount of cash required to create an account is $50.\\n\t#elseif (!$firstName.equals('') && !$lastName.equals(''))\\n\t\t##\\n\t\t## Check to see if it's a new Account.\\n\t\t##\\n\\n\t\t#if ($classPK <= 0)\\n\t\t\t#set ($classPK = $dateTool.getDate().getTime())\\n\t\t#end\\n\\n\t\t#set ($VOID = $expandoValueLocalService.addValues($accountsTableClassNameId, $accountsTableId, $columns, $classPK, {'firstName':$firstName, 'lastName':$lastName, 'balance':\\\"$balance\\\", 'modifiedDate':\\\"${date.getTime()}\\\"}))\\n\\n\t\t##\\n\t\t## Show a response.\\n\t\t##\\n\\n\t\t#if ($cmd.equals('update'))\\n\t\t\tThank you, ${firstName}, for updating your account with our bank!\\n\t\t#else\\n\t\t\tThank you, ${firstName}, for creating an account with our bank!\\n\t\t#end\\n\t#else\\n\t\tPlease fill the form completely in order to create an account. Make sure to till both first and last name fields.\\n\t#end\\n#elseif ($cmd.equals('delete'))\\n\t##\\n\t## Delete the specified Row.\\n\t##\\n\\n\t#if ($classPK > 0)\\n\t\t#set ($VOID = $expandoRowLocalService.deleteRow($accountsTableId, $classPK))\\n\\n\t\tAccount deleted!\\n\\n\t\t#set ($classPK = 0)\\n\t#end\\n#elseif ($cmd.equals('edit'))\\n\t##\\n\t## Edit the specified Row.\\n\t##\\n\\n\tEditting...\\n#end\\n\\n<span style=\\\"display: block; border-top: 1px solid #CCC; margin: 5px 0px 5px 0px;\\\"><\/span>\\n\\n#if (!$cmd.equals('edit'))\\n\t##\\n\t## Now we're into the display logic.\\n\t##\\n\\n\t<input type=\\\"button\\\" value=\\\"Create Account\\\" onClick=\\\"self.location = '${renderUrl}&${pns}cmd=edit';\\\" />\\n\\n\t\\n\\n\\n\\n\t<table class=\\\"taglib-search-iterator\\\">\\n\t<tr class=\\\"results-header\\\">\\n\t\t<th class=\\\"col-1\\\">Account Number<\/th>\\n\t\t<th class=\\\"col-2\\\">First Name<\/th>\\n\t\t<th class=\\\"col-3\\\">Last Name<\/th>\\n\t\t<th class=\\\"col-4\\\">Balance<\/th>\\n\t\t<th class=\\\"col-5\\\">Modified Date<\/th>\\n\t\t<th class=\\\"col-6\\\"><!----><\/th>\\n\t<\/tr>\\n\\n\t##\\n\t## Get all the current records in our ExpandoTable. We can paginate by passing a\\n\t## \\\"begin\\\" and \\\"end\\\" params.\\n\t##\\n\\n\t#set ($total = $expandoRowLocalService.getRowsCount($accountsTableId))\\n\t#set ($rows = $expandoRowLocalService.getRows($accountsTableId, $start, $end))\\n\\n\t#foreach($row in $rows)\\n\t\t#set ($cssClass = 'results-row')\\n\\n\t\t#if ($velocityCount % 2 == 0)\\n\t\t\t#set ($cssClass = \\\"${cssClass} alt\\\")\\n\t\t#end\\n\\n\t\t#if ($velocityCount == 1)\\n\t\t\t#set ($cssClass = \\\"${cssClass} first\\\")\\n\t\t#elseif ($velocityCount == $rows.size())\\n\t\t\t#set ($cssClass = \\\"${cssClass} last\\\")\\n\t\t#end\\n\\n\t\t##\\n\t\t## Get the classPK of this row.\\n\t\t##\\n\\n\t\t#set ($currentClassPK = $row.getClassPK())\\n\\n\t\t#set ($rowValues = $expandoValueLocalService.getRowValues($row.getRowId()))\\n\\n\t\t#set ($values = {})\\n\\n\t\t#foreach ($value in $rowValues)\\n\t\t\t#foreach ($column in $columns)\\n\t\t\t\t#if ($value.columnId == $column.columnId)\\n\t\t\t\t\t#set ($VOID = $values.put($column.name, $value))\\n\t\t\t\t#end\\n\t\t\t#end\\n\t\t#end\\n\\n\t\t#set ($currentFirstName = $values.firstName.string)\\n\t\t#set ($currentLastName = $values.lastName.string)\\n\t\t#set ($currentBalance = $values.balance.double)\\n\t\t#set ($currentModifiedDate = $values.modifiedDate.date)\\n\\n\t\t<tr class=\\\"${cssClass}\\\">\\n\t\t\t<td class=\\\"align-left col-1 valign-left\\\">${currentClassPK}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-2 valign-middle\\\">${currentFirstName}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-3 valign-middle\\\">${currentLastName}<\/td>\\n\\n\t\t\t<td class=\\\"align-right col-4 valign-middle\\\">${numberTool.currency($currentBalance)}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-5 valign-middle\\\">${dateFormatDateTime.format($currentModifiedDate)}<\/td>\\n\\n\t\t\t<td class=\\\"align-right col-6 valign-middle\\\">\\n\t\t\t\t<a href=\\\"${renderUrl}&amp;${pns}cmd=edit&amp;${pns}classPK=${currentClassPK}\\\">Edit<\/a> |\\n\t\t\t\t<a href=\\\"${renderUrl}&amp;${pns}cmd=delete&amp;${pns}classPK=${currentClassPK}\\\">Delete<\/a>\\n\t\t\t<\/td>\\n\t\t<\/tr>\\n\t#end\\n\\n\t#if ($total <= 0)\\n\t\t<tr>\\n\t\t\t<td colspan=\\\"5\\\">No Accounts were found.<\/td>\\n\t\t<\/tr>\\n\t#end\\n\\n\t<\/table>\\n\\n\t<br/>\\n\\n\t#if ($total > $delta)\\n\t\t<div style=\\\"float: right;\\\">\\n\t\t\t<div>\\n\t\t\t\t#set ($previous = $cur - 1)\\n\t\t\t\t#set ($next = $cur + 1)\\n\\n\t\t\t\t#if ($previous > 0)\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${previous}\\\" class=\\\"previous\\\">\\u2039\\u2039 #language('previous')<\/a>\\n\t\t\t\t#else\\n\t\t\t\t\t<span class=\\\"previous\\\">\\u2039\\u2039 #language('previous')<\/span>\\n\t\t\t\t#end\\n\\n\t\t\t\t#set ($pagesIteratorBegin = 1)\\n\t\t\t\t#set ($pagesIteratorEnd = $total / $delta)\\n\t\t\t\t#if (($total % $delta) > 0)\\n\t\t\t\t\t#set ($pagesIteratorEnd = $pagesIteratorEnd + 1)\\n\t\t\t\t#end\\n\\n\t\t\t\t#foreach ($index in [$pagesIteratorBegin..$pagesIteratorEnd])\\n\t\t\t\t\t#if ($index == $cur)\\n\t\t\t\t\t\t#set ($pageNumber = \\\"<strong>${index}<\/strong>\\\")\\n\t\t\t\t\t#else\\n\t\t\t\t\t\t#set ($pageNumber = $index)\\n\t\t\t\t\t#end\\n\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${index}\\\" class=\\\"previous\\\">${pageNumber}<\/a>\\n\t\t\t\t#end\\n\\n\t\t\t\t#if ($next > $cur && $next <= $pagesIteratorEnd)\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${next}\\\" class=\\\"next\\\">#language('next') \\u203a\\u203a<\/a>\\n\t\t\t\t#else\\n\t\t\t\t\t<span class=\\\"next\\\">#language('next') \\u203a\\u203a<\/span>\\n\t\t\t\t#end\\n\t\t\t<\/div>\\n\t\t<\/div>\\n\t#end\\n\\n\t# of Accounts: ${total}\\n#else\\n\t##\\n\t## Here we have our input form.\\n\t##\\n\\n\t#if ($classPK > 0)\\n\t\t##\\n\t\t## Get the account specific values\\n\t\t##\\n\\n\t\t#set ($rowValues = $expandoValueLocalService.getRowValues($companyId, $accountsTableName, $accountsTableName, $classPK, -1, -1))\\n\\n\t\t#set ($values = {})\\n\\n\t\t#foreach ($value in $rowValues)\\n\t\t\t#foreach ($column in $columns)\\n\t\t\t\t#if ($value.columnId == $column.columnId)\\n\t\t\t\t\t#set ($VOID = $values.put($column.name, $value))\\n\t\t\t\t#end\\n\t\t\t#end\\n\t\t#end\\n\\n\t\t#set ($currentFirstName = $values.firstName.string)\\n\t\t#set ($currentLastName = $values.lastName.string)\\n\t\t#set ($currentBalance = $values.balance.double)\\n\t#end\\n\\n\t<form action=\\\"$renderUrl\\\" method=\\\"post\\\" name=\\\"${pns}fm10\\\">\\n\t<input type=\\\"hidden\\\" name=\\\"${pns}classPK\\\" value=\\\"$!{classPK}\\\" />\\n\t<input type=\\\"hidden\\\" name=\\\"${pns}cmd\\\" #if ($classPK > 0) value=\\\"update\\\" #else value=\\\"add\\\" #end/>\\n\\n\t<table class=\\\"lfr-table\\\">\\n\t<tr>\\n\t\t<td>First Name:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}firstName\\\" value=\\\"$!{currentFirstName}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<tr>\\n\t\t<td>Last Name:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}lastName\\\" value=\\\"$!{currentLastName}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<tr>\\n\t\t<td>Balance:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}balance\\\" value=\\\"$!{numberTool.format($currentBalance)}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<\/table>\\n\\n\t\\n\\n\\n\t<input type=\\\"submit\\\" value=\\\"Save\\\" />\\n\t<input type=\\\"button\\\" value=\\\"Cancel\\\" onclick=\\\"self.location = '${renderUrl}'\\\" />\\n\t<\/form>\\n#end\\n\\n\\n\\n\\n\"));\n\t\t\t\tselenium.click(\"//input[@value='Update']\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Template Test\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"This is an expando template test.\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58809,"modified_method":"public void testAddTemplateExpando() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/expando-web-content-community/\");\n\t\t\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Templates\",\n\t\t\t\t\tRuntimeVariables.replace(\"Templates\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Template']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Template\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_15_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Expando Template Test\"));\n\t\t\t\tselenium.type(\"//textarea[@id='_15_description_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"This is an expando template test.\"));\n\n\t\t\t\tboolean cacheableChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_15_cacheableCheckbox\");\n\n\t\t\t\tif (!cacheableChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_15_cacheableCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Cacheable Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@src,'select_structure')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@src,'select_structure')]\");\n\t\t\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Structure Test\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Expando Structure Test\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.waitForText(\"//a[@id='_15_structureName']\",\n\t\t\t\t\t\"Expando Structure Test\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Structure Test\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_15_structureName']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Launch Editor']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Launch Editor\"));\n\t\t\t\tselenium.waitForVisible(\"//iframe[@id='_15_xslContentIFrame']\");\n\t\t\t\tselenium.selectFrame(\"//iframe[@id='_15_xslContentIFrame']\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"//textarea[@id='_15_plainEditorField']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"##\\n## Do some request handling setup.\\n##\\n\\n#set ($companyId = $getterUtil.getLong($request.theme-display.company-id))\\n#set ($locale = $localeUtil.fromLanguageId($request.locale))\\n#set ($dateFormatDateTime = $dateFormats.getDateTime($locale))\\n\\n#set ($renderUrl = $request.render-url)\\n#set ($pns = $request.portlet-namespace)\\n#set ($cmd = $getterUtil.getString($request.parameters.cmd))\\n\\n#set ($cur = $getterUtil.getInteger($request.parameters.cur, 1))\\n#set ($delta = $getterUtil.getInteger($request.parameters.delta, 5))\\n\\n#set ($end = $cur * $delta)\\n#set ($start = $end - $delta)\\n\\n<h1>First Expando Bank<\/h1>\\n\\n##\\n## Define the \\\"name\\\" for our ExpandoTable.\\n##\\n\\n#set ($accountsTableName = \\\"AccountsTable\\\")\\n\\n##\\n## Get/Create the ExpandoTable to hold our data.\\n##\\n\\n#set ($accountsTable = $expandoTableLocalService.getTable($companyId, $accountsTableName, $accountsTableName))\\n#set ($accountsTableId = $accountsTable.getTableId())\\n\\n#if (!$accountsTable)\\n\t#set ($accountsTable = $expandoTableLocalService.addTable($companyId, $accountsTableName, $accountsTableName))\\n\t#set ($accountsTableId = $accountsTable.getTableId())\\n\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"firstName\\\", 15)) ## STRING\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"lastName\\\", 15)) ## STRING\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"balance\\\", 5)) ## DOUBLE\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"modifiedDate\\\", 3)) ## DATE\\n#end\\n\\n#set ($accountsTableClassNameId = $accountsTable.getClassNameId())\\n#set ($columns = $expandoColumnLocalService.getColumns($accountsTableId))\\n\\n##\\n## Check to see if a classPK was passed in the request.\\n##\\n\\n#set ($classPK = $getterUtil.getLong($request.parameters.classPK))\\n\\n##\\n## Check if we have received a form submission?\\n##\\n\\n#if ($cmd.equals('add') || $cmd.equals('update'))\\n\t##\\n\t## Let's get the form values from the request.\\n\t##\\n\\n\t#set ($firstName = $getterUtil.getString($request.parameters.firstName, ''))\\n\t#set ($lastName = $getterUtil.getString($request.parameters.lastName, ''))\\n\t#set ($balance = $getterUtil.getDouble($request.parameters.balance, 0.0))\\n\t#set ($date = $dateTool.getDate())\\n\\n\t##\\n\t## Validate the params to see if we should proceed.\\n\t##\\n\\n\t#if ($balance < 50)\\n\t\tPlease fill the form completely in order to create an account. The minimum amount of cash required to create an account is $50.\\n\t#elseif (!$firstName.equals('') && !$lastName.equals(''))\\n\t\t##\\n\t\t## Check to see if it's a new Account.\\n\t\t##\\n\\n\t\t#if ($classPK <= 0)\\n\t\t\t#set ($classPK = $dateTool.getDate().getTime())\\n\t\t#end\\n\\n\t\t#set ($VOID = $expandoValueLocalService.addValues($accountsTableClassNameId, $accountsTableId, $columns, $classPK, {'firstName':$firstName, 'lastName':$lastName, 'balance':\\\"$balance\\\", 'modifiedDate':\\\"${date.getTime()}\\\"}))\\n\\n\t\t##\\n\t\t## Show a response.\\n\t\t##\\n\\n\t\t#if ($cmd.equals('update'))\\n\t\t\tThank you, ${firstName}, for updating your account with our bank!\\n\t\t#else\\n\t\t\tThank you, ${firstName}, for creating an account with our bank!\\n\t\t#end\\n\t#else\\n\t\tPlease fill the form completely in order to create an account. Make sure to till both first and last name fields.\\n\t#end\\n#elseif ($cmd.equals('delete'))\\n\t##\\n\t## Delete the specified Row.\\n\t##\\n\\n\t#if ($classPK > 0)\\n\t\t#set ($VOID = $expandoRowLocalService.deleteRow($accountsTableId, $classPK))\\n\\n\t\tAccount deleted!\\n\\n\t\t#set ($classPK = 0)\\n\t#end\\n#elseif ($cmd.equals('edit'))\\n\t##\\n\t## Edit the specified Row.\\n\t##\\n\\n\tEditting...\\n#end\\n\\n<span style=\\\"display: block; border-top: 1px solid #CCC; margin: 5px 0px 5px 0px;\\\"><\/span>\\n\\n#if (!$cmd.equals('edit'))\\n\t##\\n\t## Now we're into the display logic.\\n\t##\\n\\n\t<input type=\\\"button\\\" value=\\\"Create Account\\\" onClick=\\\"self.location = '${renderUrl}&${pns}cmd=edit';\\\" />\\n\\n\t\\n\\n\\n\\n\t<table class=\\\"taglib-search-iterator\\\">\\n\t<tr class=\\\"results-header\\\">\\n\t\t<th class=\\\"col-1\\\">Account Number<\/th>\\n\t\t<th class=\\\"col-2\\\">First Name<\/th>\\n\t\t<th class=\\\"col-3\\\">Last Name<\/th>\\n\t\t<th class=\\\"col-4\\\">Balance<\/th>\\n\t\t<th class=\\\"col-5\\\">Modified Date<\/th>\\n\t\t<th class=\\\"col-6\\\"><!----><\/th>\\n\t<\/tr>\\n\\n\t##\\n\t## Get all the current records in our ExpandoTable. We can paginate by passing a\\n\t## \\\"begin\\\" and \\\"end\\\" params.\\n\t##\\n\\n\t#set ($total = $expandoRowLocalService.getRowsCount($accountsTableId))\\n\t#set ($rows = $expandoRowLocalService.getRows($accountsTableId, $start, $end))\\n\\n\t#foreach($row in $rows)\\n\t\t#set ($cssClass = 'results-row')\\n\\n\t\t#if ($velocityCount % 2 == 0)\\n\t\t\t#set ($cssClass = \\\"${cssClass} alt\\\")\\n\t\t#end\\n\\n\t\t#if ($velocityCount == 1)\\n\t\t\t#set ($cssClass = \\\"${cssClass} first\\\")\\n\t\t#elseif ($velocityCount == $rows.size())\\n\t\t\t#set ($cssClass = \\\"${cssClass} last\\\")\\n\t\t#end\\n\\n\t\t##\\n\t\t## Get the classPK of this row.\\n\t\t##\\n\\n\t\t#set ($currentClassPK = $row.getClassPK())\\n\\n\t\t#set ($rowValues = $expandoValueLocalService.getRowValues($row.getRowId()))\\n\\n\t\t#set ($values = {})\\n\\n\t\t#foreach ($value in $rowValues)\\n\t\t\t#foreach ($column in $columns)\\n\t\t\t\t#if ($value.columnId == $column.columnId)\\n\t\t\t\t\t#set ($VOID = $values.put($column.name, $value))\\n\t\t\t\t#end\\n\t\t\t#end\\n\t\t#end\\n\\n\t\t#set ($currentFirstName = $values.firstName.string)\\n\t\t#set ($currentLastName = $values.lastName.string)\\n\t\t#set ($currentBalance = $values.balance.double)\\n\t\t#set ($currentModifiedDate = $values.modifiedDate.date)\\n\\n\t\t<tr class=\\\"${cssClass}\\\">\\n\t\t\t<td class=\\\"align-left col-1 valign-left\\\">${currentClassPK}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-2 valign-middle\\\">${currentFirstName}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-3 valign-middle\\\">${currentLastName}<\/td>\\n\\n\t\t\t<td class=\\\"align-right col-4 valign-middle\\\">${numberTool.currency($currentBalance)}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-5 valign-middle\\\">${dateFormatDateTime.format($currentModifiedDate)}<\/td>\\n\\n\t\t\t<td class=\\\"align-right col-6 valign-middle\\\">\\n\t\t\t\t<a href=\\\"${renderUrl}&${pns}cmd=edit&${pns}classPK=${currentClassPK}\\\">Edit<\/a> |\\n\t\t\t\t<a href=\\\"${renderUrl}&${pns}cmd=delete&${pns}classPK=${currentClassPK}\\\">Delete<\/a>\\n\t\t\t<\/td>\\n\t\t<\/tr>\\n\t#end\\n\\n\t#if ($total <= 0)\\n\t\t<tr>\\n\t\t\t<td colspan=\\\"5\\\">No Accounts were found.<\/td>\\n\t\t<\/tr>\\n\t#end\\n\\n\t<\/table>\\n\\n\t<br/>\\n\\n\t#if ($total > $delta)\\n\t\t<div style=\\\"float: right;\\\">\\n\t\t\t<div>\\n\t\t\t\t#set ($previous = $cur - 1)\\n\t\t\t\t#set ($next = $cur + 1)\\n\\n\t\t\t\t#if ($previous > 0)\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${previous}\\\" class=\\\"previous\\\">\\u2039\\u2039 #language('previous')<\/a>\\n\t\t\t\t#else\\n\t\t\t\t\t<span class=\\\"previous\\\">\\u2039\\u2039 #language('previous')<\/span>\\n\t\t\t\t#end\\n\\n\t\t\t\t#set ($pagesIteratorBegin = 1)\\n\t\t\t\t#set ($pagesIteratorEnd = $total / $delta)\\n\t\t\t\t#if (($total % $delta) > 0)\\n\t\t\t\t\t#set ($pagesIteratorEnd = $pagesIteratorEnd + 1)\\n\t\t\t\t#end\\n\\n\t\t\t\t#foreach ($index in [$pagesIteratorBegin..$pagesIteratorEnd])\\n\t\t\t\t\t#if ($index == $cur)\\n\t\t\t\t\t\t#set ($pageNumber = \\\"<strong>${index}<\/strong>\\\")\\n\t\t\t\t\t#else\\n\t\t\t\t\t\t#set ($pageNumber = $index)\\n\t\t\t\t\t#end\\n\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${index}\\\" class=\\\"previous\\\">${pageNumber}<\/a>\\n\t\t\t\t#end\\n\\n\t\t\t\t#if ($next > $cur && $next <= $pagesIteratorEnd)\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${next}\\\" class=\\\"next\\\">#language('next') \\u203a\\u203a<\/a>\\n\t\t\t\t#else\\n\t\t\t\t\t<span class=\\\"next\\\">#language('next') \\u203a\\u203a<\/span>\\n\t\t\t\t#end\\n\t\t\t<\/div>\\n\t\t<\/div>\\n\t#end\\n\\n\t# of Accounts: ${total}\\n#else\\n\t##\\n\t## Here we have our input form.\\n\t##\\n\\n\t#if ($classPK > 0)\\n\t\t##\\n\t\t## Get the account specific values\\n\t\t##\\n\\n\t\t#set ($rowValues = $expandoValueLocalService.getRowValues($companyId, $accountsTableName, $accountsTableName, $classPK, -1, -1))\\n\\n\t\t#set ($values = {})\\n\\n\t\t#foreach ($value in $rowValues)\\n\t\t\t#foreach ($column in $columns)\\n\t\t\t\t#if ($value.columnId == $column.columnId)\\n\t\t\t\t\t#set ($VOID = $values.put($column.name, $value))\\n\t\t\t\t#end\\n\t\t\t#end\\n\t\t#end\\n\\n\t\t#set ($currentFirstName = $values.firstName.string)\\n\t\t#set ($currentLastName = $values.lastName.string)\\n\t\t#set ($currentBalance = $values.balance.double)\\n\t#end\\n\\n\t<form action=\\\"$renderUrl\\\" method=\\\"post\\\" name=\\\"${pns}fm10\\\">\\n\t<input type=\\\"hidden\\\" name=\\\"${pns}classPK\\\" value=\\\"$!{classPK}\\\" />\\n\t<input type=\\\"hidden\\\" name=\\\"${pns}cmd\\\" #if ($classPK > 0) value=\\\"update\\\" #else value=\\\"add\\\" #end/>\\n\\n\t<table class=\\\"lfr-table\\\">\\n\t<tr>\\n\t\t<td>First Name:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}firstName\\\" value=\\\"$!{currentFirstName}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<tr>\\n\t\t<td>Last Name:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}lastName\\\" value=\\\"$!{currentLastName}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<tr>\\n\t\t<td>Balance:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}balance\\\" value=\\\"$!{numberTool.format($currentBalance)}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<\/table>\\n\\n\t\\n\\n\\n\t<input type=\\\"submit\\\" value=\\\"Save\\\" />\\n\t<input type=\\\"button\\\" value=\\\"Cancel\\\" onclick=\\\"self.location = '${renderUrl}'\\\" />\\n\t<\/form>\\n#end\\n\\n\\n\\n\\n\"));\n\t\t\t\tselenium.click(\"//input[@value='Update']\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Template Test\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"This is an expando template test.\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"96ef221dbdbc77b7b21f1a486a18787cf323151f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTemplateExpando() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/expando-web-content-community/\");\n\t\t\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Templates\",\n\t\t\t\t\tRuntimeVariables.replace(\"Templates\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Template']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Template\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_15_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Expando Template Test\"));\n\t\t\t\tselenium.type(\"//textarea[@id='_15_description_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"This is an expando template test.\"));\n\n\t\t\t\tboolean cacheableChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_15_cacheableCheckbox\");\n\n\t\t\t\tif (!cacheableChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_15_cacheableCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Cacheable Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@src,'select_structure')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@src,'select_structure')]\");\n\t\t\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Structure Test\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Expando Structure Test\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.waitForText(\"//a[@id='_15_structureName']\",\n\t\t\t\t\t\"Expando Structure Test\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Structure Test\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_15_structureName']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Launch Editor']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Launch Editor\"));\n\t\t\t\tselenium.waitForVisible(\"//iframe[@id='_15_xslContentIFrame']\");\n\t\t\t\tselenium.selectFrame(\"//iframe[@id='_15_xslContentIFrame']\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"//textarea[@id='_15_plainEditorField']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"##\\n## Do some request handling setup.\\n##\\n\\n#set ($companyId = $getterUtil.getLong($request.theme-display.company-id))\\n#set ($locale = $localeUtil.fromLanguageId($request.locale))\\n#set ($dateFormatDateTime = $dateFormats.getDateTime($locale))\\n\\n#set ($renderUrl = $request.render-url)\\n#set ($pns = $request.portlet-namespace)\\n#set ($cmd = $getterUtil.getString($request.parameters.cmd))\\n\\n#set ($cur = $getterUtil.getInteger($request.parameters.cur, 1))\\n#set ($delta = $getterUtil.getInteger($request.parameters.delta, 5))\\n\\n#set ($end = $cur * $delta)\\n#set ($start = $end - $delta)\\n\\n<h1>First Expando Bank<\/h1>\\n\\n##\\n## Define the \\\"name\\\" for our ExpandoTable.\\n##\\n\\n#set ($accountsTableName = \\\"AccountsTable\\\")\\n\\n##\\n## Get/Create the ExpandoTable to hold our data.\\n##\\n\\n#set ($accountsTable = $expandoTableLocalService.getTable($companyId, $accountsTableName, $accountsTableName))\\n#set ($accountsTableId = $accountsTable.getTableId())\\n\\n#if (!$accountsTable)\\n\t#set ($accountsTable = $expandoTableLocalService.addTable($companyId, $accountsTableName, $accountsTableName))\\n\t#set ($accountsTableId = $accountsTable.getTableId())\\n\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"firstName\\\", 15)) ## STRING\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"lastName\\\", 15)) ## STRING\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"balance\\\", 5)) ## DOUBLE\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"modifiedDate\\\", 3)) ## DATE\\n#end\\n\\n#set ($accountsTableClassNameId = $accountsTable.getClassNameId())\\n#set ($columns = $expandoColumnLocalService.getColumns($accountsTableId))\\n\\n##\\n## Check to see if a classPK was passed in the request.\\n##\\n\\n#set ($classPK = $getterUtil.getLong($request.parameters.classPK))\\n\\n##\\n## Check if we have received a form submission?\\n##\\n\\n#if ($cmd.equals('add') || $cmd.equals('update'))\\n\t##\\n\t## Let's get the form values from the request.\\n\t##\\n\\n\t#set ($firstName = $getterUtil.getString($request.parameters.firstName, ''))\\n\t#set ($lastName = $getterUtil.getString($request.parameters.lastName, ''))\\n\t#set ($balance = $getterUtil.getDouble($request.parameters.balance, 0.0))\\n\t#set ($date = $dateTool.getDate())\\n\\n\t##\\n\t## Validate the params to see if we should proceed.\\n\t##\\n\\n\t#if ($balance < 50)\\n\t\tPlease fill the form completely in order to create an account. The minimum amount of cash required to create an account is $50.\\n\t#elseif (!$firstName.equals('') && !$lastName.equals(''))\\n\t\t##\\n\t\t## Check to see if it's a new Account.\\n\t\t##\\n\\n\t\t#if ($classPK <= 0)\\n\t\t\t#set ($classPK = $dateTool.getDate().getTime())\\n\t\t#end\\n\\n\t\t#set ($VOID = $expandoValueLocalService.addValues($accountsTableClassNameId, $accountsTableId, $columns, $classPK, {'firstName':$firstName, 'lastName':$lastName, 'balance':\\\"$balance\\\", 'modifiedDate':\\\"${date.getTime()}\\\"}))\\n\\n\t\t##\\n\t\t## Show a response.\\n\t\t##\\n\\n\t\t#if ($cmd.equals('update'))\\n\t\t\tThank you, ${firstName}, for updating your account with our bank!\\n\t\t#else\\n\t\t\tThank you, ${firstName}, for creating an account with our bank!\\n\t\t#end\\n\t#else\\n\t\tPlease fill the form completely in order to create an account. Make sure to till both first and last name fields.\\n\t#end\\n#elseif ($cmd.equals('delete'))\\n\t##\\n\t## Delete the specified Row.\\n\t##\\n\\n\t#if ($classPK > 0)\\n\t\t#set ($VOID = $expandoRowLocalService.deleteRow($accountsTableId, $classPK))\\n\\n\t\tAccount deleted!\\n\\n\t\t#set ($classPK = 0)\\n\t#end\\n#elseif ($cmd.equals('edit'))\\n\t##\\n\t## Edit the specified Row.\\n\t##\\n\\n\tEditting...\\n#end\\n\\n<span style=\\\"display: block; border-top: 1px solid #CCC; margin: 5px 0px 5px 0px;\\\"><\/span>\\n\\n#if (!$cmd.equals('edit'))\\n\t##\\n\t## Now we're into the display logic.\\n\t##\\n\\n\t<input type=\\\"button\\\" value=\\\"Create Account\\\" onClick=\\\"self.location = '${renderUrl}&${pns}cmd=edit';\\\" />\\n\\n\t\\n\\n\\n\\n\t<table class=\\\"taglib-search-iterator\\\">\\n\t<tr class=\\\"results-header\\\">\\n\t\t<th class=\\\"col-1\\\">Account Number<\/th>\\n\t\t<th class=\\\"col-2\\\">First Name<\/th>\\n\t\t<th class=\\\"col-3\\\">Last Name<\/th>\\n\t\t<th class=\\\"col-4\\\">Balance<\/th>\\n\t\t<th class=\\\"col-5\\\">Modified Date<\/th>\\n\t\t<th class=\\\"col-6\\\"><!----><\/th>\\n\t<\/tr>\\n\\n\t##\\n\t## Get all the current records in our ExpandoTable. We can paginate by passing a\\n\t## \\\"begin\\\" and \\\"end\\\" params.\\n\t##\\n\\n\t#set ($total = $expandoRowLocalService.getRowsCount($accountsTableId))\\n\t#set ($rows = $expandoRowLocalService.getRows($accountsTableId, $start, $end))\\n\\n\t#foreach($row in $rows)\\n\t\t#set ($cssClass = 'results-row')\\n\\n\t\t#if ($velocityCount % 2 == 0)\\n\t\t\t#set ($cssClass = \\\"${cssClass} alt\\\")\\n\t\t#end\\n\\n\t\t#if ($velocityCount == 1)\\n\t\t\t#set ($cssClass = \\\"${cssClass} first\\\")\\n\t\t#elseif ($velocityCount == $rows.size())\\n\t\t\t#set ($cssClass = \\\"${cssClass} last\\\")\\n\t\t#end\\n\\n\t\t##\\n\t\t## Get the classPK of this row.\\n\t\t##\\n\\n\t\t#set ($currentClassPK = $row.getClassPK())\\n\\n\t\t#set ($rowValues = $expandoValueLocalService.getRowValues($row.getRowId()))\\n\\n\t\t#set ($values = {})\\n\\n\t\t#foreach ($value in $rowValues)\\n\t\t\t#foreach ($column in $columns)\\n\t\t\t\t#if ($value.columnId == $column.columnId)\\n\t\t\t\t\t#set ($VOID = $values.put($column.name, $value))\\n\t\t\t\t#end\\n\t\t\t#end\\n\t\t#end\\n\\n\t\t#set ($currentFirstName = $values.firstName.string)\\n\t\t#set ($currentLastName = $values.lastName.string)\\n\t\t#set ($currentBalance = $values.balance.double)\\n\t\t#set ($currentModifiedDate = $values.modifiedDate.date)\\n\\n\t\t<tr class=\\\"${cssClass}\\\">\\n\t\t\t<td class=\\\"align-left col-1 valign-left\\\">${currentClassPK}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-2 valign-middle\\\">${currentFirstName}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-3 valign-middle\\\">${currentLastName}<\/td>\\n\\n\t\t\t<td class=\\\"align-right col-4 valign-middle\\\">${numberTool.currency($currentBalance)}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-5 valign-middle\\\">${dateFormatDateTime.format($currentModifiedDate)}<\/td>\\n\\n\t\t\t<td class=\\\"align-right col-6 valign-middle\\\">\\n\t\t\t\t<a href=\\\"${renderUrl}&amp;${pns}cmd=edit&amp;${pns}classPK=${currentClassPK}\\\">Edit<\/a> |\\n\t\t\t\t<a href=\\\"${renderUrl}&amp;${pns}cmd=delete&amp;${pns}classPK=${currentClassPK}\\\">Delete<\/a>\\n\t\t\t<\/td>\\n\t\t<\/tr>\\n\t#end\\n\\n\t#if ($total <= 0)\\n\t\t<tr>\\n\t\t\t<td colspan=\\\"5\\\">No Accounts were found.<\/td>\\n\t\t<\/tr>\\n\t#end\\n\\n\t<\/table>\\n\\n\t<br/>\\n\\n\t#if ($total > $delta)\\n\t\t<div style=\\\"float: right;\\\">\\n\t\t\t<div>\\n\t\t\t\t#set ($previous = $cur - 1)\\n\t\t\t\t#set ($next = $cur + 1)\\n\\n\t\t\t\t#if ($previous > 0)\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${previous}\\\" class=\\\"previous\\\">\\u2039\\u2039 #language('previous')<\/a>\\n\t\t\t\t#else\\n\t\t\t\t\t<span class=\\\"previous\\\">\\u2039\\u2039 #language('previous')<\/span>\\n\t\t\t\t#end\\n\\n\t\t\t\t#set ($pagesIteratorBegin = 1)\\n\t\t\t\t#set ($pagesIteratorEnd = $total / $delta)\\n\t\t\t\t#if (($total % $delta) > 0)\\n\t\t\t\t\t#set ($pagesIteratorEnd = $pagesIteratorEnd + 1)\\n\t\t\t\t#end\\n\\n\t\t\t\t#foreach ($index in [$pagesIteratorBegin..$pagesIteratorEnd])\\n\t\t\t\t\t#if ($index == $cur)\\n\t\t\t\t\t\t#set ($pageNumber = \\\"<strong>${index}<\/strong>\\\")\\n\t\t\t\t\t#else\\n\t\t\t\t\t\t#set ($pageNumber = $index)\\n\t\t\t\t\t#end\\n\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${index}\\\" class=\\\"previous\\\">${pageNumber}<\/a>\\n\t\t\t\t#end\\n\\n\t\t\t\t#if ($next > $cur && $next <= $pagesIteratorEnd)\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${next}\\\" class=\\\"next\\\">#language('next') \\u203a\\u203a<\/a>\\n\t\t\t\t#else\\n\t\t\t\t\t<span class=\\\"next\\\">#language('next') \\u203a\\u203a<\/span>\\n\t\t\t\t#end\\n\t\t\t<\/div>\\n\t\t<\/div>\\n\t#end\\n\\n\t# of Accounts: ${total}\\n#else\\n\t##\\n\t## Here we have our input form.\\n\t##\\n\\n\t#if ($classPK > 0)\\n\t\t##\\n\t\t## Get the account specific values\\n\t\t##\\n\\n\t\t#set ($rowValues = $expandoValueLocalService.getRowValues($companyId, $accountsTableName, $accountsTableName, $classPK, -1, -1))\\n\\n\t\t#set ($values = {})\\n\\n\t\t#foreach ($value in $rowValues)\\n\t\t\t#foreach ($column in $columns)\\n\t\t\t\t#if ($value.columnId == $column.columnId)\\n\t\t\t\t\t#set ($VOID = $values.put($column.name, $value))\\n\t\t\t\t#end\\n\t\t\t#end\\n\t\t#end\\n\\n\t\t#set ($currentFirstName = $values.firstName.string)\\n\t\t#set ($currentLastName = $values.lastName.string)\\n\t\t#set ($currentBalance = $values.balance.double)\\n\t#end\\n\\n\t<form action=\\\"$renderUrl\\\" method=\\\"post\\\" name=\\\"${pns}fm10\\\">\\n\t<input type=\\\"hidden\\\" name=\\\"${pns}classPK\\\" value=\\\"$!{classPK}\\\" />\\n\t<input type=\\\"hidden\\\" name=\\\"${pns}cmd\\\" #if ($classPK > 0) value=\\\"update\\\" #else value=\\\"add\\\" #end/>\\n\\n\t<table class=\\\"lfr-table\\\">\\n\t<tr>\\n\t\t<td>First Name:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}firstName\\\" value=\\\"$!{currentFirstName}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<tr>\\n\t\t<td>Last Name:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}lastName\\\" value=\\\"$!{currentLastName}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<tr>\\n\t\t<td>Balance:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}balance\\\" value=\\\"$!{numberTool.format($currentBalance)}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<\/table>\\n\\n\t\\n\\n\\n\t<input type=\\\"submit\\\" value=\\\"Save\\\" />\\n\t<input type=\\\"button\\\" value=\\\"Cancel\\\" onclick=\\\"self.location = '${renderUrl}'\\\" />\\n\t<\/form>\\n#end\\n\\n\\n\\n\\n\"));\n\t\t\t\tselenium.click(\"//input[@value='Update']\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Template Test\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"This is an expando template test.\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58810,"modified_method":"public void testAddTemplateExpando() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/expando-web-content-community/\");\n\t\t\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Templates\",\n\t\t\t\t\tRuntimeVariables.replace(\"Templates\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Template']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Template\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_15_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Expando Template Test\"));\n\t\t\t\tselenium.type(\"//textarea[@id='_15_description_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"This is an expando template test.\"));\n\n\t\t\t\tboolean cacheableChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_15_cacheableCheckbox\");\n\n\t\t\t\tif (!cacheableChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_15_cacheableCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Cacheable Checkbox\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@src,'select_structure')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@src,'select_structure')]\");\n\t\t\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Structure Test\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Expando Structure Test\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.waitForText(\"//a[@id='_15_structureName']\",\n\t\t\t\t\t\"Expando Structure Test\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Structure Test\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_15_structureName']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Launch Editor']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Launch Editor\"));\n\t\t\t\tselenium.waitForVisible(\"//iframe[@id='_15_xslContentIFrame']\");\n\t\t\t\tselenium.selectFrame(\"//iframe[@id='_15_xslContentIFrame']\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.type(\"//textarea[@id='_15_plainEditorField']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"##\\n## Do some request handling setup.\\n##\\n\\n#set ($companyId = $getterUtil.getLong($request.theme-display.company-id))\\n#set ($locale = $localeUtil.fromLanguageId($request.locale))\\n#set ($dateFormatDateTime = $dateFormats.getDateTime($locale))\\n\\n#set ($renderUrl = $request.render-url)\\n#set ($pns = $request.portlet-namespace)\\n#set ($cmd = $getterUtil.getString($request.parameters.cmd))\\n\\n#set ($cur = $getterUtil.getInteger($request.parameters.cur, 1))\\n#set ($delta = $getterUtil.getInteger($request.parameters.delta, 5))\\n\\n#set ($end = $cur * $delta)\\n#set ($start = $end - $delta)\\n\\n<h1>First Expando Bank<\/h1>\\n\\n##\\n## Define the \\\"name\\\" for our ExpandoTable.\\n##\\n\\n#set ($accountsTableName = \\\"AccountsTable\\\")\\n\\n##\\n## Get/Create the ExpandoTable to hold our data.\\n##\\n\\n#set ($accountsTable = $expandoTableLocalService.getTable($companyId, $accountsTableName, $accountsTableName))\\n#set ($accountsTableId = $accountsTable.getTableId())\\n\\n#if (!$accountsTable)\\n\t#set ($accountsTable = $expandoTableLocalService.addTable($companyId, $accountsTableName, $accountsTableName))\\n\t#set ($accountsTableId = $accountsTable.getTableId())\\n\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"firstName\\\", 15)) ## STRING\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"lastName\\\", 15)) ## STRING\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"balance\\\", 5)) ## DOUBLE\\n\t#set ($VOID = $expandoColumnLocalService.addColumn($accountsTableId, \\\"modifiedDate\\\", 3)) ## DATE\\n#end\\n\\n#set ($accountsTableClassNameId = $accountsTable.getClassNameId())\\n#set ($columns = $expandoColumnLocalService.getColumns($accountsTableId))\\n\\n##\\n## Check to see if a classPK was passed in the request.\\n##\\n\\n#set ($classPK = $getterUtil.getLong($request.parameters.classPK))\\n\\n##\\n## Check if we have received a form submission?\\n##\\n\\n#if ($cmd.equals('add') || $cmd.equals('update'))\\n\t##\\n\t## Let's get the form values from the request.\\n\t##\\n\\n\t#set ($firstName = $getterUtil.getString($request.parameters.firstName, ''))\\n\t#set ($lastName = $getterUtil.getString($request.parameters.lastName, ''))\\n\t#set ($balance = $getterUtil.getDouble($request.parameters.balance, 0.0))\\n\t#set ($date = $dateTool.getDate())\\n\\n\t##\\n\t## Validate the params to see if we should proceed.\\n\t##\\n\\n\t#if ($balance < 50)\\n\t\tPlease fill the form completely in order to create an account. The minimum amount of cash required to create an account is $50.\\n\t#elseif (!$firstName.equals('') && !$lastName.equals(''))\\n\t\t##\\n\t\t## Check to see if it's a new Account.\\n\t\t##\\n\\n\t\t#if ($classPK <= 0)\\n\t\t\t#set ($classPK = $dateTool.getDate().getTime())\\n\t\t#end\\n\\n\t\t#set ($VOID = $expandoValueLocalService.addValues($accountsTableClassNameId, $accountsTableId, $columns, $classPK, {'firstName':$firstName, 'lastName':$lastName, 'balance':\\\"$balance\\\", 'modifiedDate':\\\"${date.getTime()}\\\"}))\\n\\n\t\t##\\n\t\t## Show a response.\\n\t\t##\\n\\n\t\t#if ($cmd.equals('update'))\\n\t\t\tThank you, ${firstName}, for updating your account with our bank!\\n\t\t#else\\n\t\t\tThank you, ${firstName}, for creating an account with our bank!\\n\t\t#end\\n\t#else\\n\t\tPlease fill the form completely in order to create an account. Make sure to till both first and last name fields.\\n\t#end\\n#elseif ($cmd.equals('delete'))\\n\t##\\n\t## Delete the specified Row.\\n\t##\\n\\n\t#if ($classPK > 0)\\n\t\t#set ($VOID = $expandoRowLocalService.deleteRow($accountsTableId, $classPK))\\n\\n\t\tAccount deleted!\\n\\n\t\t#set ($classPK = 0)\\n\t#end\\n#elseif ($cmd.equals('edit'))\\n\t##\\n\t## Edit the specified Row.\\n\t##\\n\\n\tEditting...\\n#end\\n\\n<span style=\\\"display: block; border-top: 1px solid #CCC; margin: 5px 0px 5px 0px;\\\"><\/span>\\n\\n#if (!$cmd.equals('edit'))\\n\t##\\n\t## Now we're into the display logic.\\n\t##\\n\\n\t<input type=\\\"button\\\" value=\\\"Create Account\\\" onClick=\\\"self.location = '${renderUrl}&${pns}cmd=edit';\\\" />\\n\\n\t\\n\\n\\n\\n\t<table class=\\\"taglib-search-iterator\\\">\\n\t<tr class=\\\"results-header\\\">\\n\t\t<th class=\\\"col-1\\\">Account Number<\/th>\\n\t\t<th class=\\\"col-2\\\">First Name<\/th>\\n\t\t<th class=\\\"col-3\\\">Last Name<\/th>\\n\t\t<th class=\\\"col-4\\\">Balance<\/th>\\n\t\t<th class=\\\"col-5\\\">Modified Date<\/th>\\n\t\t<th class=\\\"col-6\\\"><!----><\/th>\\n\t<\/tr>\\n\\n\t##\\n\t## Get all the current records in our ExpandoTable. We can paginate by passing a\\n\t## \\\"begin\\\" and \\\"end\\\" params.\\n\t##\\n\\n\t#set ($total = $expandoRowLocalService.getRowsCount($accountsTableId))\\n\t#set ($rows = $expandoRowLocalService.getRows($accountsTableId, $start, $end))\\n\\n\t#foreach($row in $rows)\\n\t\t#set ($cssClass = 'results-row')\\n\\n\t\t#if ($velocityCount % 2 == 0)\\n\t\t\t#set ($cssClass = \\\"${cssClass} alt\\\")\\n\t\t#end\\n\\n\t\t#if ($velocityCount == 1)\\n\t\t\t#set ($cssClass = \\\"${cssClass} first\\\")\\n\t\t#elseif ($velocityCount == $rows.size())\\n\t\t\t#set ($cssClass = \\\"${cssClass} last\\\")\\n\t\t#end\\n\\n\t\t##\\n\t\t## Get the classPK of this row.\\n\t\t##\\n\\n\t\t#set ($currentClassPK = $row.getClassPK())\\n\\n\t\t#set ($rowValues = $expandoValueLocalService.getRowValues($row.getRowId()))\\n\\n\t\t#set ($values = {})\\n\\n\t\t#foreach ($value in $rowValues)\\n\t\t\t#foreach ($column in $columns)\\n\t\t\t\t#if ($value.columnId == $column.columnId)\\n\t\t\t\t\t#set ($VOID = $values.put($column.name, $value))\\n\t\t\t\t#end\\n\t\t\t#end\\n\t\t#end\\n\\n\t\t#set ($currentFirstName = $values.firstName.string)\\n\t\t#set ($currentLastName = $values.lastName.string)\\n\t\t#set ($currentBalance = $values.balance.double)\\n\t\t#set ($currentModifiedDate = $values.modifiedDate.date)\\n\\n\t\t<tr class=\\\"${cssClass}\\\">\\n\t\t\t<td class=\\\"align-left col-1 valign-left\\\">${currentClassPK}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-2 valign-middle\\\">${currentFirstName}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-3 valign-middle\\\">${currentLastName}<\/td>\\n\\n\t\t\t<td class=\\\"align-right col-4 valign-middle\\\">${numberTool.currency($currentBalance)}<\/td>\\n\\n\t\t\t<td class=\\\"align-left col-5 valign-middle\\\">${dateFormatDateTime.format($currentModifiedDate)}<\/td>\\n\\n\t\t\t<td class=\\\"align-right col-6 valign-middle\\\">\\n\t\t\t\t<a href=\\\"${renderUrl}&${pns}cmd=edit&${pns}classPK=${currentClassPK}\\\">Edit<\/a> |\\n\t\t\t\t<a href=\\\"${renderUrl}&${pns}cmd=delete&${pns}classPK=${currentClassPK}\\\">Delete<\/a>\\n\t\t\t<\/td>\\n\t\t<\/tr>\\n\t#end\\n\\n\t#if ($total <= 0)\\n\t\t<tr>\\n\t\t\t<td colspan=\\\"5\\\">No Accounts were found.<\/td>\\n\t\t<\/tr>\\n\t#end\\n\\n\t<\/table>\\n\\n\t<br/>\\n\\n\t#if ($total > $delta)\\n\t\t<div style=\\\"float: right;\\\">\\n\t\t\t<div>\\n\t\t\t\t#set ($previous = $cur - 1)\\n\t\t\t\t#set ($next = $cur + 1)\\n\\n\t\t\t\t#if ($previous > 0)\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${previous}\\\" class=\\\"previous\\\">\\u2039\\u2039 #language('previous')<\/a>\\n\t\t\t\t#else\\n\t\t\t\t\t<span class=\\\"previous\\\">\\u2039\\u2039 #language('previous')<\/span>\\n\t\t\t\t#end\\n\\n\t\t\t\t#set ($pagesIteratorBegin = 1)\\n\t\t\t\t#set ($pagesIteratorEnd = $total / $delta)\\n\t\t\t\t#if (($total % $delta) > 0)\\n\t\t\t\t\t#set ($pagesIteratorEnd = $pagesIteratorEnd + 1)\\n\t\t\t\t#end\\n\\n\t\t\t\t#foreach ($index in [$pagesIteratorBegin..$pagesIteratorEnd])\\n\t\t\t\t\t#if ($index == $cur)\\n\t\t\t\t\t\t#set ($pageNumber = \\\"<strong>${index}<\/strong>\\\")\\n\t\t\t\t\t#else\\n\t\t\t\t\t\t#set ($pageNumber = $index)\\n\t\t\t\t\t#end\\n\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${index}\\\" class=\\\"previous\\\">${pageNumber}<\/a>\\n\t\t\t\t#end\\n\\n\t\t\t\t#if ($next > $cur && $next <= $pagesIteratorEnd)\\n\t\t\t\t\t<a href=\\\"${renderUrl}&${pns}cur=${next}\\\" class=\\\"next\\\">#language('next') \\u203a\\u203a<\/a>\\n\t\t\t\t#else\\n\t\t\t\t\t<span class=\\\"next\\\">#language('next') \\u203a\\u203a<\/span>\\n\t\t\t\t#end\\n\t\t\t<\/div>\\n\t\t<\/div>\\n\t#end\\n\\n\t# of Accounts: ${total}\\n#else\\n\t##\\n\t## Here we have our input form.\\n\t##\\n\\n\t#if ($classPK > 0)\\n\t\t##\\n\t\t## Get the account specific values\\n\t\t##\\n\\n\t\t#set ($rowValues = $expandoValueLocalService.getRowValues($companyId, $accountsTableName, $accountsTableName, $classPK, -1, -1))\\n\\n\t\t#set ($values = {})\\n\\n\t\t#foreach ($value in $rowValues)\\n\t\t\t#foreach ($column in $columns)\\n\t\t\t\t#if ($value.columnId == $column.columnId)\\n\t\t\t\t\t#set ($VOID = $values.put($column.name, $value))\\n\t\t\t\t#end\\n\t\t\t#end\\n\t\t#end\\n\\n\t\t#set ($currentFirstName = $values.firstName.string)\\n\t\t#set ($currentLastName = $values.lastName.string)\\n\t\t#set ($currentBalance = $values.balance.double)\\n\t#end\\n\\n\t<form action=\\\"$renderUrl\\\" method=\\\"post\\\" name=\\\"${pns}fm10\\\">\\n\t<input type=\\\"hidden\\\" name=\\\"${pns}classPK\\\" value=\\\"$!{classPK}\\\" />\\n\t<input type=\\\"hidden\\\" name=\\\"${pns}cmd\\\" #if ($classPK > 0) value=\\\"update\\\" #else value=\\\"add\\\" #end/>\\n\\n\t<table class=\\\"lfr-table\\\">\\n\t<tr>\\n\t\t<td>First Name:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}firstName\\\" value=\\\"$!{currentFirstName}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<tr>\\n\t\t<td>Last Name:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}lastName\\\" value=\\\"$!{currentLastName}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<tr>\\n\t\t<td>Balance:<\/td>\\n\t\t<td>\\n\t\t\t<input type=\\\"text\\\" name=\\\"${pns}balance\\\" value=\\\"$!{numberTool.format($currentBalance)}\\\" />\\n\t\t<\/td>\\n\t<\/tr>\\n\t<\/table>\\n\\n\t\\n\\n\\n\t<input type=\\\"submit\\\" value=\\\"Save\\\" />\\n\t<input type=\\\"button\\\" value=\\\"Cancel\\\" onclick=\\\"self.location = '${renderUrl}'\\\" />\\n\t<\/form>\\n#end\\n\\n\\n\\n\\n\"));\n\t\t\t\tselenium.click(\"//input[@value='Update']\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Expando Template Test\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"This is an expando template test.\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"96ef221dbdbc77b7b21f1a486a18787cf323151f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefineRoleWebContentEditorCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Web Content Editor\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Regular\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Web Content Editors are users who have full permissions and usage over all available Web Content\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Web Content Editor\"),\n\t\t\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\t\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean subscribeChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalSUBSCRIBE']\");\n\n\t\t\t\tif (subscribeChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.check(\n\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalSUBSCRIBE']\");\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalSUBSCRIBE']\"));\n\n\t\t\t\tboolean viewWCMChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalVIEW']\");\n\n\t\t\t\tif (viewWCMChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.check(\n\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalVIEW']\");\n\n\t\t\tcase 3:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalVIEW']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The role permissions were updated.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"value=regexp:.*portletResource=15&amp;.*showModelResources=0\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean accessCPChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@value='15ACCESS_IN_CONTROL_PANEL']\");\n\n\t\t\t\tif (accessCPChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.check(\"//input[@value='15ACCESS_IN_CONTROL_PANEL']\");\n\n\t\t\tcase 4:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@value='15ACCESS_IN_CONTROL_PANEL']\"));\n\n\t\t\t\tboolean viewWCChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@value='15VIEW']\");\n\n\t\t\t\tif (viewWCChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.check(\"//input[@value='15VIEW']\");\n\n\t\t\tcase 5:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@value='15VIEW']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The role permissions were updated.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Access in Control Panel\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\t\t\tselenium.getText(\"//tr[5]/td[3]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\t\t\tselenium.getText(\"//tr[6]/td[3]\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58811,"modified_method":"public void testDefineRoleWebContentEditorCP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Web Content Editor\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Regular\"),\n\t\t\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Web Content Editors are users who have full permissions and usage over all available Web Content\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Editor\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Web Content Editor\"),\n\t\t\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\t\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean subscribeChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalSUBSCRIBE']\");\n\n\t\t\t\tif (subscribeChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.check(\n\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalSUBSCRIBE']\");\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalSUBSCRIBE']\"));\n\n\t\t\t\tboolean viewWCMChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalVIEW']\");\n\n\t\t\t\tif (viewWCMChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.check(\n\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalVIEW']\");\n\n\t\t\tcase 3:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.journalVIEW']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The role permissions were updated.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"value=regexp:.*portletResource=15&.*showModelResources=0\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean accessCPChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@value='15ACCESS_IN_CONTROL_PANEL']\");\n\n\t\t\t\tif (accessCPChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.check(\"//input[@value='15ACCESS_IN_CONTROL_PANEL']\");\n\n\t\t\tcase 4:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@value='15ACCESS_IN_CONTROL_PANEL']\"));\n\n\t\t\t\tboolean viewWCChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@value='15VIEW']\");\n\n\t\t\t\tif (viewWCChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.check(\"//input[@value='15VIEW']\");\n\n\t\t\tcase 5:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@value='15VIEW']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"The role permissions were updated.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Access in Control Panel\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\t\t\tselenium.getText(\"//tr[5]/td[3]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\t\t\tselenium.getText(\"//tr[6]/td[3]\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"96ef221dbdbc77b7b21f1a486a18787cf323151f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectAndWait2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Power\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Power User\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Power')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Power')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Power User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"Catherine\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":58812,"modified_method":"public void testSelectAndWait2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Guest')]/td/span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Guest')]/td/span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@role='menuitem' and contains(.,'Define Permissions')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Define Permissions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@role='menuitem' and contains(.,'Define Permissions')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//a[@role='menuitem' and contains(.,'Define Permissions')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='com.liferay.portlet.journal.model.JournalArticleADD_DISCUSSION']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@value='15ADD_TO_PAGE']\"));\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"value=regexp:.*portletResource=15&.*showModelResources=0\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@value='com.liferay.portlet.journal.model.JournalArticleADD_DISCUSSION']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='15ADD_TO_PAGE']\"));\n\t}","commit_id":"96ef221dbdbc77b7b21f1a486a18787cf323151f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectAndWait3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Power\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Power User\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Power')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Power')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Power User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='Catherine']\",\n\t\t\tRuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":58813,"modified_method":"public void testSelectAndWait3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Power\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Power User\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Power')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Power')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Power User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"Catherine\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"96ef221dbdbc77b7b21f1a486a18787cf323151f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(SelectAndWait1Test.class);\n\t\ttestSuite.addTestSuite(SelectAndWait2Test.class);\n\t\ttestSuite.addTestSuite(SelectAndWait3Test.class);\n\n\t\treturn testSuite;\n\t}","id":58814,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(SelectAndWait1Test.class);\n\t\ttestSuite.addTestSuite(SelectAndWait2Test.class);\n\t\ttestSuite.addTestSuite(SelectAndWait3Test.class);\n\t\ttestSuite.addTestSuite(SelectAndWait4Test.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"96ef221dbdbc77b7b21f1a486a18787cf323151f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDMDocument() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\",\n\t\t\tRuntimeVariables.replace(\"Basic Document\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_20_file']\"));\n\t\tselenium.uploadCommonFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.txt\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@class,'entry-link')]/span[@class='entry-title']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.txt\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@class,'entry-link')]/span[@class='entry-title']\"));\n\t}","id":58815,"modified_method":"public void testAddDMDocument() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Documents and Media\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Document')]\",\n\t\t\tRuntimeVariables.replace(\"Basic Document\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//input[@id='_20_file']\");\n\t\tselenium.uploadCommonFile(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.txt\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@class,'entry-link')]/span[@class='entry-title']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.txt\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@class,'entry-link')]/span[@class='entry-title']\"));\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDataDefinition() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Dynamic Data Lists\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data Lists\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Data Definitions\"),\n\t\t\tselenium.getText(\"//a[@id='_167_manageDDMStructuresLink']\"));\n\t\tselenium.clickAt(\"//a[@id='_167_manageDDMStructuresLink']\",\n\t\t\tRuntimeVariables.replace(\"Manage Data Definitions\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\tselenium.waitForVisible(\"//span[contains(@class,'add-button')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[contains(@class,'add-button')]/a\"));\n\t\tselenium.clickAt(\"//span[contains(@class,'add-button')]/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_166_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Data Definition\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[1]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[1]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[2]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[2]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[3]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[3]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[4]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[4]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"File Upload\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[5]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[5]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[6]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[6]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[7]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[7]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Radio\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[8]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[8]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[9]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[9]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Text\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[10]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[10]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[11]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[11]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":58816,"modified_method":"public void testAddDataDefinition() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Dynamic Data Lists\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data Lists\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Data Definitions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@class='lfr-toolbar-button view-structures ']/a\"));\n\t\tselenium.clickAt(\"//span[@class='lfr-toolbar-button view-structures ']/a\",\n\t\t\tRuntimeVariables.replace(\"Manage Data Definitions\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/event-tap/event-tap-min.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//span[@class='lfr-toolbar-button add-button ']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@class='lfr-toolbar-button add-button ']/a\"));\n\t\tselenium.clickAt(\"//span[@class='lfr-toolbar-button add-button ']/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_166_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Data Definition\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[1]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[1]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[2]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[2]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[3]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[3]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[4]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[4]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"File Upload\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[5]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[5]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[6]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[6]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[7]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[7]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Link to Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[8]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[8]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[9]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[9]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Radio\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[10]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[10]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[11]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[11]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Text\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[12]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[12]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[13]/div\"));\n\t\tselenium.dragAndDropToObject(\"//div[@class='aui-tabview-content aui-widget-bd']/div/ul/li[13]/div\",\n\t\t\t\"//div[@class='aui-tabview-content aui-widget-bd']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddListDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//img[@title='Add List']\",\n\t\t\tRuntimeVariables.replace(\"Add List\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_167_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"List Name\"));\n\t\tselenium.type(\"//textarea[@id='_167_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"List Description\"));\n\t\tselenium.clickAt(\"link=Select\", RuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@src,'_167_selectDDMStructure')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@src,'_167_selectDDMStructure')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@name='_166_keywords']\");\n\t\tselenium.type(\"//input[@name='_166_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Data Definition\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Data Definition')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Data Definition\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Data Definition')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Data Definition')]/td[4]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Data Definition')]/td[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Data Definition\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertEquals(RuntimeVariables.replace(\"Data Definition\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[contains(@id,'ddmStructureNameDisplay')]/a\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t}","id":58817,"modified_method":"public void testAddListDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//img[@title='Add List']\",\n\t\t\tRuntimeVariables.replace(\"Add List\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_167_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"List Name\"));\n\t\tselenium.type(\"//textarea[@id='_167_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"List Description\"));\n\t\tselenium.clickAt(\"link=Select\", RuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@src,'selectDDMStructure')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@src,'selectDDMStructure')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@name='_166_keywords']\");\n\t\tselenium.type(\"//input[@name='_166_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Data Definition\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Data Definition')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Data Definition\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Data Definition')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Data Definition')]/td[4]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Data Definition')]/td[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Data Definition\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertEquals(RuntimeVariables.replace(\"Data Definition\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[contains(@id,'ddmStructureNameDisplay')]/a\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddList() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Dynamic Data Lists\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data Lists\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[contains(@class,'add-button')]/a\"));\n\t\tselenium.clickAt(\"//span[contains(@class,'add-button')]/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_167_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"List Name\"));\n\t\tselenium.type(\"//textarea[@id='_167_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"List Description\"));\n\t\tselenium.clickAt(\"link=Select\", RuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\tselenium.waitForVisible(\"//tr[contains(.,'Data Definition')]/td[3]/a\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//tr[contains(.,'Data Definition')]/td[3]/a\", \"Data Definition\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Data Definition')]/td[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Data Definition\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForText(\"//span[@id='_167_ddmStructureNameDisplay']/a\",\n\t\t\t\"Data Definition\");\n\t\tassertEquals(RuntimeVariables.replace(\"Data Definition\"),\n\t\t\tselenium.getText(\"//span[@id='_167_ddmStructureNameDisplay']/a\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":58818,"modified_method":"public void testAddList() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Dynamic Data Lists\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data Lists\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@class='lfr-toolbar-button add-button ']/a\"));\n\t\tselenium.clickAt(\"//span[@class='lfr-toolbar-button add-button ']/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_167_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"List Name\"));\n\t\tselenium.type(\"//textarea[@id='_167_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"List Description\"));\n\t\tselenium.clickAt(\"link=Select\", RuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/event-tap/event-tap-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@name='_166_keywords']\");\n\t\tselenium.type(\"//input[@name='_166_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Data\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Data Definition\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Data Definition\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForText(\"//span[@id='_167_ddmStructureNameDisplay']/a\",\n\t\t\t\"Data Definition\");\n\t\tassertEquals(RuntimeVariables.replace(\"Data Definition\"),\n\t\t\tselenium.getText(\"//span[@id='_167_ddmStructureNameDisplay']/a\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddRecordDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Add Record']\"));\n\t\tselenium.clickAt(\"//input[@value='Add Record']\",\n\t\t\tRuntimeVariables.replace(\"Add Record\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[1]/div/span/span/label\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-ddm-container']/div[1]/div/span/span/span/input[2]\",\n\t\t\tRuntimeVariables.replace(\"checkbox\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[2]/div/label\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[2]/div/div/div/div/select[1]\",\n\t\t\tRuntimeVariables.replace(\"January\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[2]/div/div/div/div/select[2]\",\n\t\t\tRuntimeVariables.replace(\"2\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[2]/div/div/div/div/select[3]\",\n\t\t\tRuntimeVariables.replace(\"2003\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[3]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[3]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"1.23\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[4]/div/span/span/label\"));\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'selectDocumentLibrary')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'selectDocumentLibrary')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Choose']\");\n\t\tselenium.clickAt(\"//input[@value='Choose']\",\n\t\t\tRuntimeVariables.replace(\"Choose\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[5]/div/span/span/label\",\n\t\t\t\t\"File Upload\"));\n\t\tselenium.uploadCommonFile(\"//div[@class='lfr-ddm-container']/div[5]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Document_3.txt\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[6]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[6]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"123\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[7]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[7]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"456\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Radio\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]/div/span[1]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]/div/span[2]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 3\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]/div/span[3]/span\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-ddm-container']/div[8]/div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"option 2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/span/select/option[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/span/select/option[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 3\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/span/select/option[3]\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"label=option 3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[10]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[10]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Text Field\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/span/textarea\",\n\t\t\tRuntimeVariables.replace(\"Text\\nBox\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":58819,"modified_method":"public void testAddRecordDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Record']\",\n\t\t\tRuntimeVariables.replace(\"Add Record\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[1]/div/span/span/label\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-ddm-container']/div[1]/div/span/span/span/input[2]\",\n\t\t\tRuntimeVariables.replace(\"checkbox\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[2]/div/label\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[2]/div/div/div/div/select[1]\",\n\t\t\tRuntimeVariables.replace(\"January\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[2]/div/div/div/div/select[2]\",\n\t\t\tRuntimeVariables.replace(\"2\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[2]/div/div/div/div/select[3]\",\n\t\t\tRuntimeVariables.replace(\"2003\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[3]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[3]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"1.23\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[4]/div/span/span/label\"));\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'selectDocumentLibrary')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'selectDocumentLibrary')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/event-tap/event-tap-min.js')]\");\n\t\tselenium.waitForVisible(\"//tr[3]/td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.txt\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\tselenium.waitForVisible(\"//input[@value='Choose']\");\n\t\tselenium.clickAt(\"//input[@value='Choose']\",\n\t\t\tRuntimeVariables.replace(\"Choose\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[5]/div/span/span/label\",\n\t\t\t\t\"File Upload\"));\n\t\tselenium.uploadCommonFile(\"//div[@class='lfr-ddm-container']/div[5]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Document_3.txt\"));\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[6]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[7]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[7]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"123\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Link to Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]/div/label\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[8]/div/select\",\n\t\t\tRuntimeVariables.replace(\"index=1\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"456\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[10]/div/span[1]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[10]/div/span[2]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 3\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[10]/div/span[3]/span\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-ddm-container']/div[10]/div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"option 2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/span/select/option[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/span/select/option[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 3\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/span/select/option[3]\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"label=option 3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[12]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[12]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Text Field\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[13]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[13]/div/span/span/span/textarea\",\n\t\t\tRuntimeVariables.replace(\"TextBox\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletDDLDEditable() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Dynamic Data List Display Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_86_editableCheckbox']\");\n\n\t\t\t\tboolean editableChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_editableCheckbox']\");\n\n\t\t\t\tif (!editableChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_editableCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Editable\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_editableCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58820,"modified_method":"public void testConfigurePortletDDLDEditable() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Dynamic Data List Display Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'liferay/navigation_interaction.js')]\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_86_editableCheckbox']\");\n\n\t\t\t\tboolean editableChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_editableCheckbox']\");\n\n\t\t\t\tif (!editableChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_editableCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Editable\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_editableCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletDDLDSpreadsheetView()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Dynamic Data List Display Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_spreadsheetCheckbox']\");\n\n\t\t\t\tboolean spreadsheetViewChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_spreadsheetCheckbox']\");\n\n\t\t\t\tif (spreadsheetViewChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_spreadsheetCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Spreadsheet View\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_spreadsheetCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58821,"modified_method":"public void testConfigurePortletDDLDSpreadsheetView()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Dynamic Data List Display Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'liferay/navigation_interaction.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_spreadsheetCheckbox']\");\n\n\t\t\t\tboolean spreadsheetViewChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_spreadsheetCheckbox']\");\n\n\t\t\t\tif (spreadsheetViewChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_spreadsheetCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Spreadsheet View\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_spreadsheetCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditListDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//img[@title='Select List']\",\n\t\t\tRuntimeVariables.replace(\"Select List\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@name='_86_keywords']\");\n\t\tselenium.type(\"//input[@name='_86_keywords']\",\n\t\t\tRuntimeVariables.replace(\"List Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'List Name')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"List Description\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'List Name')]/td[3]/a\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_167_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"List Name Edited\"));\n\t\tselenium.type(\"//textarea[@id='_167_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"List Description Edited\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name Edited\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'List Name Edited')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'List Name Edited')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"List Name Edited\"));\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-info']/span[2]\",\n\t\t\t\"Displaying List: List Name Edited (Modified)\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'List Name Edited')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"List Name Edited\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'List Name Edited')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"List Description Edited\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'List Name Edited')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'List Name Edited')]/td[4]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":58822,"modified_method":"public void testEditListDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//div[@class='icon-actions']/span/a/img[@title='Select List']\",\n\t\t\tRuntimeVariables.replace(\"Select List\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@name='_86_keywords']\");\n\t\tselenium.type(\"//input[@name='_86_keywords']\",\n\t\t\tRuntimeVariables.replace(\"List Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'List Name')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"List Description\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'List Name')]/td[3]/a\"));\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_167_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"List Name Edited\"));\n\t\tselenium.type(\"//textarea[@id='_167_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"List Description Edited\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name Edited\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'List Name Edited')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'List Name Edited')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"List Name Edited\"));\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-info']/span[2]\",\n\t\t\t\"Displaying List: List Name Edited (Modified)\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'List Name Edited')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"List Name Edited\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'List Name Edited')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"List Description Edited\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'List Name Edited')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'List Name Edited')]/td[4]/a\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditRecordDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[1]/div/span/span/label\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-ddm-container']/div[1]/div/span/span/span/input[2]\",\n\t\t\tRuntimeVariables.replace(\"checkbox\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[2]/div/label\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[2]/div/div/div/div/select[1]\",\n\t\t\tRuntimeVariables.replace(\"August\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[2]/div/div/div/div/select[2]\",\n\t\t\tRuntimeVariables.replace(\"9\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[2]/div/div/div/div/select[3]\",\n\t\t\tRuntimeVariables.replace(\"2010\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[3]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[3]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"8.910\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[4]/div/span/span/label\"));\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'selectDocumentLibrary')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'selectDocumentLibrary')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//tr[contains(.,'Document_2.txt')]/td[5]/input[@value='Choose']\");\n\t\tselenium.clickAt(\"//tr[contains(.,'Document_2.txt')]/td[5]/input[@value='Choose']\",\n\t\t\tRuntimeVariables.replace(\"Choose\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[5]/div/span/span/label\",\n\t\t\t\t\"File Upload\"));\n\t\tselenium.uploadCommonFile(\"//div[@class='lfr-ddm-container']/div[5]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Document_1.txt\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[6]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[6]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"8910\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[7]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[7]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"111213\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Radio\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]/div/span[1]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]/div/span[2]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 3\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]/div/span[3]/span\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-ddm-container']/div[8]/div/span[3]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"option 3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/span/select/option[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/span/select/option[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 3\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/span/select/option[3]\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"label=option 1\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[10]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[10]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Text Field Edited\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/span/textarea\",\n\t\t\tRuntimeVariables.replace(\"Text\\nBox\\nEdited\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":58823,"modified_method":"public void testEditRecordDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[1]/div/span/span/label\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-ddm-container']/div[1]/div/span/span/span/input[2]\",\n\t\t\tRuntimeVariables.replace(\"checkbox\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[2]/div/label\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[2]/div/div/div/div/select[1]\",\n\t\t\tRuntimeVariables.replace(\"August\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[2]/div/div/div/div/select[2]\",\n\t\t\tRuntimeVariables.replace(\"9\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[2]/div/div/div/div/select[3]\",\n\t\t\tRuntimeVariables.replace(\"2010\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[3]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[3]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"8.910\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[4]/div/span/span/label\"));\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'selectDocumentLibrary')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'selectDocumentLibrary')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/event-tap/event-tap-min.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//tr[contains(.,'Document_2.txt')]/td[5]/input[@value='Choose']\");\n\t\tselenium.clickAt(\"//tr[contains(.,'Document_2.txt')]/td[5]/input[@value='Choose']\",\n\t\t\tRuntimeVariables.replace(\"Choose\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[5]/div/span/span/label\",\n\t\t\t\t\"File Upload\"));\n\t\tselenium.uploadCommonFile(\"//div[@class='lfr-ddm-container']/div[5]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Document_1.txt\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[7]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[7]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"8910\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Link to Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]/div/label\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[8]/div/select\",\n\t\t\tRuntimeVariables.replace(\"index=0\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[9]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"111213\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[10]/div/span[1]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[10]/div/span[2]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 3\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[10]/div/span[3]/span\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-ddm-container']/div[10]/div/span[3]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"option 3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/span/select/option[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/span/select/option[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 3\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/span/select/option[3]\"));\n\t\tselenium.select(\"//div[@class='lfr-ddm-container']/div[11]/div/span/span/span/select\",\n\t\t\tRuntimeVariables.replace(\"label=option 1\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[12]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[12]/div/span/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Text Field Edited\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[13]/div/span/span/label\"));\n\t\tselenium.type(\"//div[@class='lfr-ddm-container']/div[13]/div/span/span/span/textarea\",\n\t\t\tRuntimeVariables.replace(\"TextBoxEdited\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectListDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//input[@name='_86_keywords']\");\n\t\tselenium.type(\"//input[@name='_86_keywords']\",\n\t\t\tRuntimeVariables.replace(\"List Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'List Name')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'List Name')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"List Name\"));\n\t\tselenium.waitForText(\"//span[contains(@class,'displaying-record')]\",\n\t\t\t\"Displaying List: List Name (Modified)\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":58824,"modified_method":"public void testSelectListDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@name='_86_keywords']\");\n\t\tselenium.type(\"//input[@name='_86_keywords']\",\n\t\t\tRuntimeVariables.replace(\"List Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'List Name')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'List Name')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"List Name\"));\n\t\tselenium.waitForText(\"//span[contains(@class,'displaying-record')]\",\n\t\t\t\"Displaying List: List Name (Modified)\");\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownDataDefinition() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Dynamic Data Lists\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dynamic Data Lists\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Data Definitions\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_167_manageDDMStructuresLink']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_167_manageDDMStructuresLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Data Definitions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\"//input[@name='_166_keywords']\");\n\t\t\t\tselenium.type(\"//input[@name='_166_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Data Definition\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean allRowsCheckbox = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_166_allRowIds']\");\n\n\t\t\t\tif (!allRowsCheckbox) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_166_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_166_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58825,"modified_method":"public void testTearDownDataDefinition() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Dynamic Data Lists\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dynamic Data Lists\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Data Definitions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@class='lfr-toolbar-button view-structures ']/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@class='lfr-toolbar-button view-structures ']/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Data Definitions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/event-tap/event-tap-min.js')]\");\n\t\t\t\tselenium.waitForVisible(\"//input[@name='_166_keywords']\");\n\t\t\t\tselenium.type(\"//input[@name='_166_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Data Definition\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean allRowsCheckbox = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!allRowsCheckbox) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_166_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All Rows\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_166_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownList() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Dynamic Data Lists\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dynamic Data Lists\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean actionsVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!actionsVisible1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean actionsVisible2 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!actionsVisible2) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean actionsVisible3 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!actionsVisible3) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean actionsVisible4 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!actionsVisible4) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean actionsVisible5 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!actionsVisible5) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58826,"modified_method":"public void testTearDownList() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Dynamic Data Lists\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dynamic Data Lists\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean actionsVisible1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!actionsVisible1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean actionsVisible2 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!actionsVisible2) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean actionsVisible3 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!actionsVisible3) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\t\tboolean actionsVisible4 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!actionsVisible4) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean actionsVisible5 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!actionsVisible5) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"No entries were found.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletDDLDEditable()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\"//input[contains(@name,'keywords')]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Search']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Advanced \\u00bb\"),\n\t\t\tselenium.getText(\"//a[contains(.,'Advanced \\u00bb')]\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//input[@value='Add Record']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No records were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No records were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span[1]/a/img\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span[2]/a/img\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span[1]/a/img\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span[1]/a/img\"));\n\t}","id":58827,"modified_method":"public void testViewConfigurePortletDDLDEditable()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//input[contains(@id,'dynamic_data_lists_record_searchkeywords')]\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Search']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Advanced \\u00bb\"),\n\t\t\tselenium.getText(\"//a[contains(.,'Advanced \\u00bb')]\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//input[@value='Add Record']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No records were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span/a/img[@title='Add Form Template']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span/a/img[@title='Add Display Template']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span/a/img[@title='Select List']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span/a/img[@title='Add List']\"));\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletDDLDSpreadsheetView()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_spreadsheetCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_86_spreadsheetCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-spreadsheet-container']/div/div/div/table\"));\n\t}","id":58828,"modified_method":"public void testViewConfigurePortletDDLDSpreadsheetView()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-spreadsheet-container']/div/div/div/table\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\"//tr[1]/th[1]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\"//tr[1]/th[2]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\"//tr[1]/th[3]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\"//tr[1]/th[4]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"File Upload\"),\n\t\t\tselenium.getText(\"//tr[1]/th[5]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\"//tr[1]/th[6]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\"//tr[1]/th[7]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Link to Page\"),\n\t\t\tselenium.getText(\"//tr[1]/th[8]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\"//tr[1]/th[9]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Radio\"),\n\t\t\tselenium.getText(\"//tr[1]/th[10]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//tr[1]/th[11]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text\"),\n\t\t\tselenium.getText(\"//tr[1]/th[12]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\"//tr[1]/th[13]/div\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Add']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"More rows at bottom.\"),\n\t\t\tselenium.getText(\"//label[@for='numberOfRecords']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[contains(@id,'numberOfRecords')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_spreadsheetCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_86_spreadsheetCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='lfr-spreadsheet-container']/div/div/div/table\"));\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewDataDefinition() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Dynamic Data Lists\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data Lists\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//a[@id='_167_manageDDMStructuresLink']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Data Definitions\"),\n\t\t\tselenium.getText(\"//a[@id='_167_manageDDMStructuresLink']\"));\n\t\tselenium.clickAt(\"//a[@id='_167_manageDDMStructuresLink']\",\n\t\t\tRuntimeVariables.replace(\"Manage Data Definitions\"));\n\t\tselenium.waitForVisible(\"//iframe\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Data Definition')]//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Data Definition')]//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Data Definition\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[1]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[2]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[3]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[4]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"File Upload\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[5]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[6]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[7]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Radio\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[8]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[9]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[10]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[11]/div/label\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":58829,"modified_method":"public void testViewDataDefinition() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Dynamic Data Lists\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data Lists\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Data Definitions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@class='lfr-toolbar-button view-structures ']/a\"));\n\t\tselenium.clickAt(\"//span[@class='lfr-toolbar-button view-structures ']/a\",\n\t\t\tRuntimeVariables.replace(\"Manage Data Definitions\"));\n\t\tselenium.waitForVisible(\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@src,'dynamicdatalists')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/event-tap/event-tap-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@name='_166_keywords']\");\n\t\tselenium.type(\"//input[@name='_166_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Data\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Data Definition\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Data Definition\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[1]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[2]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[3]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[4]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"File Upload\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[5]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[6]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[7]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Link to Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[8]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[9]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Radio\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[10]/div/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='aui-diagram-builder-drop-container']/div[11]/div/label\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewEditListDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name Edited\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No records were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","id":58830,"modified_method":"public void testViewEditListDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//h1[@class='header-title']\");\n\t\tassertEquals(RuntimeVariables.replace(\"List Name Edited\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"No records were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewEditRecordDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\"//tr[1]/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"false\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\"//tr[1]/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"8/9/10\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\"//tr[1]/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"8.91\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\"//tr[1]/th[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_2.txt\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"File Upload\"),\n\t\t\tselenium.getText(\"//tr[1]/th[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.txt\"),\n\t\t\tselenium.getText(\"//tr[3]/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\"//tr[1]/th[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"8910\"),\n\t\t\tselenium.getText(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\"//tr[1]/th[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"111213\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Radio\"),\n\t\t\tselenium.getText(\"//tr[1]/th[8]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 3\"),\n\t\t\tselenium.getText(\"//tr[3]/td[8]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//tr[1]/th[9]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[9]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text\"),\n\t\t\tselenium.getText(\"//tr[1]/th[10]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Field Edited\"),\n\t\t\tselenium.getText(\"//tr[3]/td[10]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\"//tr[1]/th[11]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box Edited\"),\n\t\t\tselenium.getText(\"//tr[3]/td[11]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View')]\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[1]\", \"Boolean\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[1]\", \"false\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[2]\", \"Date\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[2]\", \"8/9/10\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[3]\", \"Decimal\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[3]\", \"8.91\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[4]\",\n\t\t\t\t\"Documents and Media\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[4]\", \"Document_2.txt\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[5]\", \"File Upload\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[5]\", \"Document_1.txt\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[6]\", \"Integer\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[6]\", \"8910\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[7]\", \"Number\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[7]\", \"111213\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[8]\", \"Radio\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[8]\", \"option 3\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[9]\", \"Select\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[9]\", \"option 1\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[10]\", \"Text\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[10]\",\n\t\t\t\t\"Text Field Edited\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[11]\", \"Text Box\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[11]\",\n\t\t\t\t\"Text Box Edited\"));\n\t}","id":58831,"modified_method":"public void testViewEditRecordDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\"//tr[1]/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"false\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\"//tr[1]/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"8/9/10\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\"//tr[1]/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"8.91\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\"//tr[1]/th[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_2.txt\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"File Upload\"),\n\t\t\tselenium.getText(\"//tr[1]/th[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.txt\"),\n\t\t\tselenium.getText(\"//tr[3]/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\"//tr[1]/th[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"(Preview)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\"//tr[1]/th[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"8910\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Link to Page\"),\n\t\t\tselenium.getText(\"//tr[1]/th[8]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\tselenium.getText(\"//tr[3]/td[8]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\"//tr[1]/th[9]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"111213\"),\n\t\t\tselenium.getText(\"//tr[3]/td[9]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Radio\"),\n\t\t\tselenium.getText(\"//tr[1]/th[10]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 3\"),\n\t\t\tselenium.getText(\"//tr[3]/td[10]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//tr[1]/th[11]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[11]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text\"),\n\t\t\tselenium.getText(\"//tr[1]/th[12]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Field Edited\"),\n\t\t\tselenium.getText(\"//tr[3]/td[12]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\"//tr[1]/th[13]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"TextBoxEdited\"),\n\t\t\tselenium.getText(\"//tr[3]/td[13]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View')]\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[1]\", \"Boolean\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[1]\", \"false\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[2]\", \"Date\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[2]\", \"8/9/10\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[3]\", \"Decimal\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[3]\", \"8.91\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[4]\",\n\t\t\t\t\"Documents and Media\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[4]\", \"Document_2.txt\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[5]\", \"File Upload\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[5]\", \"Document_1.txt\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[6]\", \"Integer\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[6]\", \"8910\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[7]\", \"Link to Page\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[7]\", \"Welcome\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]\", \"Number\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]\", \"111213\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]\", \"Radio\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]\", \"option 3\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[10]\", \"Select\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[10]\", \"option 1\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]\", \"Text\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]\", \"Text Field Edited\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[12]\", \"Text Box\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[12]\", \"TextBoxEdited\"));\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewRecordDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\"//tr[1]/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"true\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\"//tr[1]/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1/2/03\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\"//tr[1]/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.23\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\"//tr[1]/th[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.txt\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"File Upload\"),\n\t\t\tselenium.getText(\"//tr[1]/th[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_3.txt\"),\n\t\t\tselenium.getText(\"//tr[3]/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\"//tr[1]/th[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"123\"),\n\t\t\tselenium.getText(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\"//tr[1]/th[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"456\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Radio\"),\n\t\t\tselenium.getText(\"//tr[1]/th[8]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 2\"),\n\t\t\tselenium.getText(\"//tr[3]/td[8]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//tr[1]/th[9]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 3\"),\n\t\t\tselenium.getText(\"//tr[3]/td[9]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text\"),\n\t\t\tselenium.getText(\"//tr[1]/th[10]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Field\"),\n\t\t\tselenium.getText(\"//tr[3]/td[10]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\"//tr[1]/th[11]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\"//tr[3]/td[11]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View')]\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[1]\", \"Boolean\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[1]\", \"true\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[2]\", \"Date\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[2]\", \"1/2/03\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[3]\", \"Decimal\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[3]\", \"1.23\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[4]\",\n\t\t\t\t\"Documents and Media\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[4]\", \"Document_1.txt\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[5]\", \"File Upload\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[5]\", \"Document_3.txt\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[6]\", \"Integer\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[6]\", \"123\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[7]\", \"Number\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[7]\", \"456\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[8]\", \"Radio\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[8]\", \"option 2\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[9]\", \"Select\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[9]\", \"option 3\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[10]\", \"Text\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[10]\", \"Text Field\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[11]\", \"Text Box\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='aui-fieldset-content ']/div[11]\", \"Text Box\"));\n\t}","id":58832,"modified_method":"public void testViewRecordDDLD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Dynamic Data List Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Dynamic Data List Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Boolean\"),\n\t\t\tselenium.getText(\"//tr[1]/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"true\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\"//tr[1]/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1/2/03\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Decimal\"),\n\t\t\tselenium.getText(\"//tr[1]/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.23\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media\"),\n\t\t\tselenium.getText(\"//tr[1]/th[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.txt\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"File Upload\"),\n\t\t\tselenium.getText(\"//tr[1]/th[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document_3.txt\"),\n\t\t\tselenium.getText(\"//tr[3]/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\"//tr[1]/th[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"(Preview)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Integer\"),\n\t\t\tselenium.getText(\"//tr[1]/th[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"123\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Link to Page\"),\n\t\t\tselenium.getText(\"//tr[1]/th[8]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Dynamic Data List Display Test Page\"),\n\t\t\tselenium.getText(\"//tr[3]/td[8]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Number\"),\n\t\t\tselenium.getText(\"//tr[1]/th[9]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"456\"),\n\t\t\tselenium.getText(\"//tr[3]/td[9]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Radio\"),\n\t\t\tselenium.getText(\"//tr[1]/th[10]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 2\"),\n\t\t\tselenium.getText(\"//tr[3]/td[10]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//tr[1]/th[11]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"option 3\"),\n\t\t\tselenium.getText(\"//tr[3]/td[11]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text\"),\n\t\t\tselenium.getText(\"//tr[1]/th[12]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Field\"),\n\t\t\tselenium.getText(\"//tr[3]/td[12]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Box\"),\n\t\t\tselenium.getText(\"//tr[1]/th[13]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"TextBox\"),\n\t\t\tselenium.getText(\"//tr[3]/td[13]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"View\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View')]\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[1]\", \"Boolean\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[1]\", \"true\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[2]\", \"Date\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[2]\", \"1/2/03\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[3]\", \"Decimal\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[3]\", \"1.23\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[4]\",\n\t\t\t\t\"Documents and Media\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[4]\", \"Document_1.txt\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[5]\", \"File Upload\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[5]\", \"Document_3.txt\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[6]\", \"Integer\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[6]\", \"123\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[7]\", \"Link to Page\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[7]\",\n\t\t\t\t\"Dynamic Data List Display Test Page\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]\", \"Number\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[8]\", \"456\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]\", \"Radio\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[9]\", \"option 2\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[10]\", \"Select\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[10]\", \"option 3\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]\", \"Text\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[11]\", \"Text Field\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[12]\", \"Text Box\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-ddm-container']/div[12]\", \"TextBox\"));\n\t}","commit_id":"e3d7e650b4c06656dd1c761a730097221246cc81","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddChildPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tString guestCommunity = selenium.getText(\n\t\t\t\t\t\t\"//nav[@class='site-breadcrumbs']/ul/li[1]/span/a\");\n\t\t\t\tRuntimeVariables.setValue(\"guestCommunity\", guestCommunity);\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div/div[3]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"${guestCommunity}\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Children\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_88_name_en_US\",\n\t\t\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Child Test Page\"));\n\t\t\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\t\t\tselenium.getText(\"//nav/ul/li[3]/span/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58833,"modified_method":"public void testAddChildPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\t\t\tselenium.getText(\"//div/span/button[1]\"));\n\t\t\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_88_name_en_US']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_88_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Child Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Site Map Test Child Page\"));\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Child Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Child Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Site Map Test Child Page\"),\n\t\t\t\t\tselenium.getText(\"//nav/ul/li[3]/span/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddChildPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tString guestCommunity = selenium.getText(\n\t\t\t\t\t\t\"//nav[@class='site-breadcrumbs']/ul/li[1]/span/a\");\n\t\t\t\tRuntimeVariables.setValue(\"guestCommunity\", guestCommunity);\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div/div[3]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"${guestCommunity}\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Children\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_88_name_en_US\",\n\t\t\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Child Test Page\"));\n\t\t\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\t\t\tselenium.getText(\"//nav/ul/li[3]/span/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58834,"modified_method":"public void testAddChildPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\t\t\tselenium.getText(\"//div/span/button[1]\"));\n\t\t\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_88_name_en_US']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_88_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Child Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Site Map Test Child Page\"));\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Child Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Child Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Site Map Test Child Page\"),\n\t\t\t\t\tselenium.getText(\"//nav/ul/li[3]/span/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddChildPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tString guestCommunity = selenium.getText(\n\t\t\t\t\t\t\"//nav[@class='site-breadcrumbs']/ul/li[1]/span/a\");\n\t\t\t\tRuntimeVariables.setValue(\"guestCommunity\", guestCommunity);\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div/div[3]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"${guestCommunity}\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Children\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_88_name_en_US\",\n\t\t\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Child Test Page\"));\n\t\t\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\t\t\tselenium.getText(\"//nav/ul/li[3]/span/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58835,"modified_method":"public void testAddChildPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\t\t\tselenium.getText(\"//div/span/button[1]\"));\n\t\t\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_88_name_en_US']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_88_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Child Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Site Map Test Child Page\"));\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Child Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Child Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Site Map Test Child Page\"),\n\t\t\t\t\tselenium.getText(\"//nav/ul/li[3]/span/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddChildPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tString guestCommunity = selenium.getText(\n\t\t\t\t\t\t\"//nav[@class='site-breadcrumbs']/ul/li[1]/span/a\");\n\t\t\t\tRuntimeVariables.setValue(\"guestCommunity\", guestCommunity);\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div/div[3]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"${guestCommunity}\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Children\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_88_name_en_US\",\n\t\t\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Child Test Page\"));\n\t\t\t\tselenium.clickAt(\"link=Child Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\t\t\tselenium.getText(\"//nav/ul/li[3]/span/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58836,"modified_method":"public void testAddChildPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\t\t\tselenium.getText(\"//div/span/button[1]\"));\n\t\t\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_88_name_en_US']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_88_name_en_US']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Child Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Site Map Test Child Page\"));\n\t\t\t\tselenium.clickAt(\"link=Site Map Test Child Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Map Test Child Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Site Map Test Child Page\"),\n\t\t\t\t\tselenium.getText(\"//nav/ul/li[3]/span/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":58837,"modified_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":58838,"modified_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":58839,"modified_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":58840,"modified_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":58841,"modified_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":58842,"modified_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":58843,"modified_method":"public void testAddPageSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletChildPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Child Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\"//nav/ul/li[3]/span/a\"));\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58844,"modified_method":"public void testAddPortletChildPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Child Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletSM1() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58845,"modified_method":"public void testAddPortletSM1() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletSM2() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t}","id":58846,"modified_method":"public void testAddPortletSM2() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletSM3() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","id":58847,"modified_method":"public void testAddPortletSM3() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58848,"modified_method":"public void testAddPortletSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58849,"modified_method":"public void testAddPortletSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58850,"modified_method":"public void testAddPortletSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58851,"modified_method":"public void testAddPortletSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58852,"modified_method":"public void testAddPortletSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Site Map']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Site Map']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Page\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\"//div/ul/li[2]/ul/li/a\"));\n\t}","id":58853,"modified_method":"public void testAssertImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Page\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Child Page\"),\n\t\t\tselenium.getText(\"//div/ul/li[2]/ul/li/a\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletRootLayout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Page\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\"//div/ul/li[2]/ul/li/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_rootLayoutUuid\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_rootLayoutUuid\",\n\t\t\tRuntimeVariables.replace(\"label=regexp:-\\\\sSite Map Test Page\"));\n\t\tselenium.select(\"_86_displayDepth\", RuntimeVariables.replace(\"label=1\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[1]/a\"));\n\t}","id":58854,"modified_method":"public void testConfigurePortletRootLayout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-body']/ul/li/a)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Page\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-body']/ul/li/a)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Child Page\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']/ul/li/ul/li/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_86_rootLayoutUuid']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_86_rootLayoutUuid']\",\n\t\t\tRuntimeVariables.replace(\"regexp:-\\\\sSite Map Test Page\"));\n\t\tselenium.select(\"//select[@id='_86_displayDepth']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Child Page\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']/ul/li/a\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletRootLayout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Page\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\"//div/ul/li[2]/ul/li/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_rootLayoutUuid\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_rootLayoutUuid\",\n\t\t\tRuntimeVariables.replace(\"label=regexp:-\\\\sSite Map Test Page\"));\n\t\tselenium.select(\"_86_displayDepth\", RuntimeVariables.replace(\"label=1\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[1]/a\"));\n\t}","id":58855,"modified_method":"public void testConfigurePortletRootLayout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-body']/ul/li/a)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Page\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-body']/ul/li/a)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Child Page\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']/ul/li/ul/li/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_86_rootLayoutUuid']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_86_rootLayoutUuid']\",\n\t\t\tRuntimeVariables.replace(\"regexp:-\\\\sSite Map Test Page\"));\n\t\tselenium.select(\"//select[@id='_86_displayDepth']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Child Page\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']/ul/li/a\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\sitemap\\\\lar\\\\importlar\\\\dependencies\\\\Site_Map-Selenium.portlet.lar\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":58856,"modified_method":"public void testImportLAR() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_86_importFileName']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\sitemap\\\\lar\\\\importlar\\\\dependencies\\\\Site_Map-Selenium.portlet.lar\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovePortletSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//section\"));\n\t}","id":58857,"modified_method":"public void testRemovePortletSM() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//section\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58858,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58859,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58860,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58861,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58862,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58863,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58864,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletSiteMap() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//section/div/div/div/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Sign In\"),\n\t\t\tselenium.getText(\"//h1/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hello World\"),\n\t\t\tselenium.getText(\"//div[2]/div/div/section/header/h1/span[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/div/section\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Page\"),\n\t\t\tselenium.getText(\"//section/div/div/div/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//section/div/div/div/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map\"),\n\t\t\tselenium.getText(\"//h1/span[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Child Test Page\"),\n\t\t\tselenium.getText(\"//div/ul/li[2]/ul/li/a\"));\n\t\tselenium.clickAt(\"//div/ul/li[2]/ul/li/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//section\"));\n\t}","id":58865,"modified_method":"public void testViewPortletSiteMap() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-body']/ul/li/a)[1]\"));\n\t\tselenium.clickAt(\"xPath=(//div[@class='portlet-body']/ul/li/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Sign In\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='portlet-title'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hello World\"),\n\t\t\tselenium.getText(\"xPath=(//h1[@class='portlet-title'])[2]\"));\n\t\tassertTrue(selenium.isVisible(\"xPath=(//section[@class='portlet'])[1]\"));\n\t\tassertTrue(selenium.isVisible(\"xPath=(//section[@class='portlet'])[2]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Page\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-body']/ul/li/a)[2]\"));\n\t\tselenium.clickAt(\"xPath=(//div[@class='portlet-body']/ul/li/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map\"),\n\t\t\tselenium.getText(\"//h1[@class='portlet-title']\"));\n\t\tassertTrue(selenium.isVisible(\"//section[@class='portlet']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Site Map Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Map Test Page\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Map Test Child Page\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']/ul/li/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='portlet-body']/ul/li/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Site Map Test Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//section[@class='portlet']\"));\n\t}","commit_id":"59707cf0e31770d929f96d92015c5c03f2337b27","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCategoryItem() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Shopping Item Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Item Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Item Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Item Test\\n \\n This is an item test. \\n Limited: Time Only \\n\\n Price for 1 Items and Above: $9.99\\n \\n Availability: In Stock\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"In Stock\"),\n\t\t\tselenium.getText(\"//td[3]/div[1]\"));\n\t}","id":58866,"modified_method":"public void testViewCategoryItem() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Shopping Item Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Shopping Item Community\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Open\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"link=Shopping Item Community\",\n\t\t\tRuntimeVariables.replace(\"Shopping Item Community\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Item Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Item Test\\n \\n This is an item test. \\n Limited: Time Only \\n\\n Price for 1 Items and Above: $9.99\\n \\n Availability: In Stock\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"In Stock\"),\n\t\t\tselenium.getText(\"//td[3]/div[1]\"));\n\t}","commit_id":"c780ab814504ce1f39680b138faac100e47ed8ca","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Shopping Category Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//td[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Category Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Category Test\\nThis is a category test.\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","id":58867,"modified_method":"public void testViewCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Shopping Category Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Shopping Category Community\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Open\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"link=Shopping Category Community\",\n\t\t\tRuntimeVariables.replace(\"Shopping Category Community\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Category Test\\nThis is a category test.\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","commit_id":"c780ab814504ce1f39680b138faac100e47ed8ca","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCheckOutOrder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Shopping Order Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Order Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Orders\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Order Number\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1234 Sesame Street\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1234 Sesame Street\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[5]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Gotham City:\"),\n\t\t\tselenium.getText(\"//tr[6]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Gotham City:\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[6]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CA\"),\n\t\t\tselenium.getText(\"//tr[7]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CA\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[7]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"90028\"),\n\t\t\tselenium.getText(\"//tr[8]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"90028\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[8]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"USA\"),\n\t\t\tselenium.getText(\"//tr[9]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"USA\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[9]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//tr[10]/td[2]\", \"626-589-1453\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[2]/table/tbody/tr[10]/td[2]\",\n\t\t\t\t\"626-589-1453\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Visa\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:************1111\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//form\",\n\t\t\t\t\"Please take care of my order.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$9.99\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$0.00\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$0.00\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$9.99\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[4]/td[2]\"));\n\t}","id":58868,"modified_method":"public void testViewCheckOutOrder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Shopping Order Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Shopping Order Community\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Open\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"link=Shopping Order Community\",\n\t\t\tRuntimeVariables.replace(\"Shopping Order Community\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Orders\", RuntimeVariables.replace(\"Orders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Order Number\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1234 Sesame Street\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1234 Sesame Street\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[5]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Gotham City:\"),\n\t\t\tselenium.getText(\"//tr[6]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Gotham City:\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[6]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CA\"),\n\t\t\tselenium.getText(\"//tr[7]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CA\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[7]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"90028\"),\n\t\t\tselenium.getText(\"//tr[8]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"90028\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[8]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"USA\"),\n\t\t\tselenium.getText(\"//tr[9]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"USA\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[9]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//tr[10]/td[2]\", \"626-589-1453\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[2]/table/tbody/tr[10]/td[2]\",\n\t\t\t\t\"626-589-1453\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Visa\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:************1111\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//form\",\n\t\t\t\t\"Please take care of my order.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$9.99\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$0.00\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$0.00\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$9.99\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[4]/td[2]\"));\n\t}","commit_id":"c780ab814504ce1f39680b138faac100e47ed8ca","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCoupon() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Shopping Coupon Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Coupon Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Coupons\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Coupon Code\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"Coupon Test\", selenium.getValue(\"_34_name\"));\n\t\tassertEquals(\"This is a coupon test.\",\n\t\t\tselenium.getValue(\"_34_description\"));\n\t\tassertEquals(\"0.00\", selenium.getValue(\"_34_minOrder\"));\n\t\tassertEquals(\"0.50\", selenium.getValue(\"_34_discount\"));\n\t\tassertEquals(\"Percentage\", selenium.getSelectedLabel(\"_34_discountType\"));\n\t}","id":58869,"modified_method":"public void testViewCoupon() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Shopping Coupon Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Shopping Coupon Community\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Open\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"link=Shopping Coupon Community\",\n\t\t\tRuntimeVariables.replace(\"Shopping Coupon Community\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Coupons\", RuntimeVariables.replace(\"Coupons\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Coupon Code\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"Coupon Test\", selenium.getValue(\"//input[@id='_34_name']\"));\n\t\tassertEquals(\"This is a coupon test.\",\n\t\t\tselenium.getValue(\"//textarea[@id='_34_description']\"));\n\t\tassertEquals(\"0.00\", selenium.getValue(\"//input[@id='_34_minOrder']\"));\n\t\tassertEquals(\"0.50\", selenium.getValue(\"//input[@id='_34_discount']\"));\n\t\tassertEquals(\"Percentage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_34_discountType']\"));\n\t}","commit_id":"c780ab814504ce1f39680b138faac100e47ed8ca","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAPScopeSourceGlobal()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_defaultScope']\");\n\t\tselenium.select(\"//select[@id='_86_defaultScope']\",\n\t\t\tRuntimeVariables.replace(\"Global\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Global\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_defaultScope']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":58870,"modified_method":"public void testConfigurePortletAPScopeSourceGlobal()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//span[@title='Select']/ul/li/strong/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//span[@title='Select']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Select']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Global')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Global')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Global')]\",\n\t\t\tRuntimeVariables.replace(\"Global\"));\n\t\tselenium.waitForVisible(\"//tr[contains(.,'Global')]/td[1]/span/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Global')]/td[1]/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Global')]/td[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Global')]/td[3]/span/a[contains(@href,'remove-scope')]\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//tr[contains(.,'Current Site (Liferay)')]/td[3]/span/a[contains(@href,'remove-scope')]\",\n\t\t\tRuntimeVariables.replace(\"Remove Current Site (Liferay) Scope\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForTextNotPresent(\"Current Site (Liferay) Scope\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Global')]/td[1]/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Global\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Global')]/td[2]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Global')]/td[3]/span/a[contains(@href,'remove-scope')]\"));\n\t\tassertFalse(selenium.isTextPresent(\"Current Site (Liferay) Scope\"));\n\t}","commit_id":"7b6e300c53adf83e522711ac238a4bd969405448","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletWCDWCWebContentScopeGlobal()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Select existing web content or add some web content to be displayed in this portlet.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-info']/span\",\n\t\t\t\"Please select a web content from the list below.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please select a web content from the list below.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-title_row-1']/a\"));\n\t\tselenium.clickAt(\"//td[@id='_86_ocerSearchContainer_col-title_row-1']/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-info']/span/span\",\n\t\t\t\"WC WebContent Title (Modified)\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title (Modified)\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']/span/span\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Displaying Content: WC WebContent Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-msg-info']/span[@class='displaying-article-id-holder ']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":58871,"modified_method":"public void testConfigurePortletWCDWCWebContentScopeGlobal()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Select existing web content or add some web content to be displayed in this portlet.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-info']/span\",\n\t\t\t\"Please select web content from the list below.\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please select web content from the list below.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Global Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='_86_ocerSearchContainer_col-title_row-1']/a\"));\n\t\tselenium.clickAt(\"//td[@id='_86_ocerSearchContainer_col-title_row-1']/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Global Title\"));\n\t\tselenium.waitForText(\"//div[@class='portlet-msg-info']/span/span\",\n\t\t\t\"WC WebContent Global Title (Modified)\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"WC WebContent Global Title (Modified)\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']/span/span\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Displaying Content: WC WebContent Global Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-msg-info']/span[@class='displaying-article-id-holder ']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"7b6e300c53adf83e522711ac238a4bd969405448","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletWCLFilterStructure()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Select']\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@src,'_86_selectStructure')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@src,'_86_selectStructure')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//tr[contains(.,'WC Structure Name')]/td[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Structure Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'WC Structure Name')]/td[3]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'WC Structure Name')]/td[3]/a\",\n\t\t\tRuntimeVariables.replace(\"WC Structure Name\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForPartialText(\"//div[@id='_86_structure']\",\n\t\t\t\"WC Structure Name\");\n\t\tassertTrue(selenium.isPartialText(\"//div[@id='_86_structure']\",\n\t\t\t\t\"WC Structure Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":58872,"modified_method":"public void testConfigurePortletWCLFilterStructure()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@value='Select']\");\n\t\tselenium.clickAt(\"//input[@value='Select']\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@src,'_86_selectStructure')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@src,'_86_selectStructure')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//tr[contains(.,'WC Structure Name')]/td[2]\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC Structure Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'WC Structure Name')]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC Structure Description\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'WC Structure Name')]/td[3]\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'WC Structure Name')]/td[5]/span/span/input[@value='Choose']\",\n\t\t\tRuntimeVariables.replace(\"Choose\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForPartialText(\"//div[@id='_86_structure']\",\n\t\t\t\"WC Structure Name\");\n\t\tassertTrue(selenium.isPartialText(\"//div[@id='_86_structure']\",\n\t\t\t\t\"WC Structure Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"7b6e300c53adf83e522711ac238a4bd969405448","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCWebContentScopeGlobalAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About WC WebContent Title \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Read More About WC WebContent Title \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span[contains(.,'Edit')]\",\n\t\t\t\t\"Edit\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t}","id":58873,"modified_method":"public void testViewWCWebContentScopeGlobalAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Global Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Global Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Read More About WC WebContent Global Title \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='asset-more']/a\"));\n\t\tselenium.clickAt(\"//div[@class='asset-more']/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Read More About WC WebContent Global Title \\u00bb\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Global Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Global Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@class='lfr-meta-actions asset-actions']/span/a/span[contains(.,'Edit')]\",\n\t\t\t\t\"Edit\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-twitter']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-facebook']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//li[@class='taglib-social-bookmark-plusone']\"));\n\t}","commit_id":"7b6e300c53adf83e522711ac238a4bd969405448","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddWCWebContentScopeGlobalCPTest.class);\n\t\ttestSuite.addTestSuite(AddPageAPTest.class);\n\t\ttestSuite.addTestSuite(AddPortletAPTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletAPScopeSourceGlobalTest.class);\n\t\ttestSuite.addTestSuite(ViewWCWebContentScopeGlobalAPTest.class);\n\t\ttestSuite.addTestSuite(TearDownWCWebContentScopeGlobalCPTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","id":58874,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddWCWebContentScopeGlobalTest.class);\n\t\ttestSuite.addTestSuite(AddPageAPTest.class);\n\t\ttestSuite.addTestSuite(AddPortletAPTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletAPScopeSourceGlobalTest.class);\n\t\ttestSuite.addTestSuite(ViewWCWebContentScopeGlobalAPTest.class);\n\t\ttestSuite.addTestSuite(TearDownWCWebContentScopeGlobalTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"7b6e300c53adf83e522711ac238a4bd969405448","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCWebContentScopeGlobalWCD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span/a/span[contains(.,'Edit')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span/a/span[contains(.,'Select Web Content')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span/a/span[contains(.,'Add')]\"));\n\t}","id":58875,"modified_method":"public void testViewWCWebContentScopeGlobalWCD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Global Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span/a/span[contains(.,'Edit')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span/a/span[contains(.,'Select Web Content')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='icon-actions']/span/a/span[contains(.,'Add')]\"));\n\t}","commit_id":"7b6e300c53adf83e522711ac238a4bd969405448","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddWCWebContentScopeGlobalCPTest.class);\n\t\ttestSuite.addTestSuite(AddPageWCDTest.class);\n\t\ttestSuite.addTestSuite(AddPortletWCDTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletWCDScopeGlobalTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletWCDWCWebContentScopeGlobalTest.class);\n\t\ttestSuite.addTestSuite(ViewWCWebContentScopeGlobalWCDTest.class);\n\t\ttestSuite.addTestSuite(TearDownWCWebContentScopeGlobalCPTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","id":58876,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddWCWebContentScopeGlobalTest.class);\n\t\ttestSuite.addTestSuite(AddPageWCDTest.class);\n\t\ttestSuite.addTestSuite(AddPortletWCDTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletWCDScopeGlobalTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletWCDWCWebContentScopeGlobalTest.class);\n\t\ttestSuite.addTestSuite(ViewWCWebContentScopeGlobalWCDTest.class);\n\t\ttestSuite.addTestSuite(TearDownWCWebContentScopeGlobalTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"7b6e300c53adf83e522711ac238a4bd969405448","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCWebContentScopeGlobalWCL() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Display Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Author\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Global Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Global Title')]/td[1]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Global Title')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Global Title')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 1 result.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Liferay Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent MySite Title\"));\n\t}","id":58877,"modified_method":"public void testViewWCWebContentScopeGlobalWCL() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Display Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Author\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Global Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Global Title')]/td[1]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Global Title')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Global Title')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 1 result.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent MySite Title\"));\n\t}","commit_id":"7b6e300c53adf83e522711ac238a4bd969405448","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageWCLTest.class);\n\t\ttestSuite.addTestSuite(AddPortletWCLTest.class);\n\t\ttestSuite.addTestSuite(AddWCWebContentScopeGlobalCPTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletWCLFilterSiteScopeGlobalTest.class);\n\t\ttestSuite.addTestSuite(ViewWCWebContentScopeGlobalWCLTest.class);\n\t\ttestSuite.addTestSuite(TearDownWCWebContentTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","id":58878,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageWCLTest.class);\n\t\ttestSuite.addTestSuite(AddPortletWCLTest.class);\n\t\ttestSuite.addTestSuite(AddWCWebContentScopeGlobalTest.class);\n\t\ttestSuite.addTestSuite(AddWCWebContentTest.class);\n\t\ttestSuite.addTestSuite(AddWCWebContentScopeMySiteTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletWCLFilterSiteScopeGlobalTest.class);\n\t\ttestSuite.addTestSuite(ViewWCWebContentScopeGlobalWCLTest.class);\n\t\ttestSuite.addTestSuite(TearDownWCWebContentScopeMySiteTest.class);\n\t\ttestSuite.addTestSuite(TearDownWCWebContentTest.class);\n\t\ttestSuite.addTestSuite(TearDownWCWebContentScopeGlobalTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"7b6e300c53adf83e522711ac238a4bd969405448","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCWebContentScopeLiferayWCL() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Display Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Author\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Liferay Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Liferay Title')]/td[1]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Liferay Title')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Liferay Title')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 1 result.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Global Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent MySite Title\"));\n\t}","id":58879,"modified_method":"public void testViewWCWebContentScopeLiferayWCL() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Display Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Author\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'WC WebContent Title')]/td[1]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Title')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'WC WebContent Title')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 1 result.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Global Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent MySite Title\"));\n\t}","commit_id":"7b6e300c53adf83e522711ac238a4bd969405448","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCWebContentScopeMySiteWCL() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Display Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Author\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent MySite Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent MySite Title')]/td[1]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'WC WebContent MySite Title')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent MySite Title')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 1 result.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Global Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Liferay Title\"));\n\t}","id":58880,"modified_method":"public void testViewWCWebContentScopeMySiteWCL() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Display Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Author\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent MySite Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent MySite Title')]/td[1]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'WC WebContent MySite Title')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent MySite Title')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Showing 1 result.\"),\n\t\t\tselenium.getText(\"//div[@class='search-results']\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Global Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Title\"));\n\t}","commit_id":"7b6e300c53adf83e522711ac238a4bd969405448","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCWebContentWCL() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'WC WebContent Title')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'WC WebContent Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t}","id":58881,"modified_method":"public void testViewWCWebContentWCL() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'WC WebContent Title')]/td[1]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Title')]/td[2]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Title')]/td[3]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'WC WebContent Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']\"));\n\t}","commit_id":"7b6e300c53adf83e522711ac238a4bd969405448","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\t@Override\n\tpublic void setValue(ExpressionState state, Object newValue) throws EvaluationException {\n\t\tTypedValue contextObject = state.getActiveContextObject();\n\t\tObject targetObject = contextObject.getValue();\n\t\tTypeDescriptor targetObjectTypeDescriptor = contextObject.getTypeDescriptor();\n\t\tTypedValue index = children[0].getValueInternal(state);\n\n\t\tif (targetObject == null) {\n\t\t\tthrow new SpelEvaluationException(SpelMessage.CANNOT_INDEX_INTO_NULL_VALUE);\n\t\t}\n\t\t// Indexing into a Map\n\t\tif (targetObjectTypeDescriptor.isMap()) {\n\t\t\tMap map = (Map)targetObject;\n\t\t\tObject possiblyConvertedKey = index;\n\t\t\tObject possiblyConvertedValue = newValue;\n\t\t\tif (targetObjectTypeDescriptor.isMapEntryTypeKnown()) {\n\t\t\t  possiblyConvertedKey = state.convertValue(index.getValue(),TypeDescriptor.valueOf(targetObjectTypeDescriptor.getMapKeyType()));\n\t\t\t  possiblyConvertedValue = state.convertValue(newValue,TypeDescriptor.valueOf(targetObjectTypeDescriptor.getMapValueType()));\n\t\t\t}\n\t\t\tmap.put(possiblyConvertedKey,possiblyConvertedValue);\n\t\t\treturn;\n\t\t}\n\n\t\tif (targetObjectTypeDescriptor.isArray()) {\n\t\t\tint idx = (Integer)state.convertValue(index, TypeDescriptor.valueOf(Integer.class));\n\t\t\tsetArrayElement(state, contextObject.getValue(), idx, newValue, targetObjectTypeDescriptor.getElementType());\n\t\t\treturn;\n\t\t}\n\t\telse if (targetObjectTypeDescriptor.isCollection()) {\n\t\t\tint idx = (Integer)state.convertValue(index, TypeDescriptor.valueOf(Integer.class));\n\t\t\tCollection c = (Collection) targetObject;\n\t\t\tif (idx >= c.size()) {\n\t\t\t\tif (!growCollection(state, targetObjectTypeDescriptor.getElementType(), idx, c)) {\n\t\t\t\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS, c.size(), idx);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (targetObject instanceof List) {\n\t\t\t\tList list = (List)targetObject;\n\t\t\t\tObject possiblyConvertedValue = state.convertValue(newValue,TypeDescriptor.valueOf(targetObjectTypeDescriptor.getElementType()));\n\t\t\t\tlist.set(idx,possiblyConvertedValue);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.INDEXING_NOT_SUPPORTED_FOR_TYPE, targetObjectTypeDescriptor.asString());\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Try and treat the index value as a property of the context object\t\t\n\t\t// TODO could call the conversion service to convert the value to a String\t\t\n\t\tif (index.getTypeDescriptor().getType()==String.class) {\n\t\t\tClass<?> contextObjectClass = getObjectClass(contextObject.getValue());\n\t\t\tString name = (String)index.getValue();\n\t\t\tEvaluationContext eContext = state.getEvaluationContext();\n\t\t\ttry {\n\t\t\t\tif (cachedWriteName!=null && cachedWriteName.equals(name) && cachedWriteTargetType!=null && cachedWriteTargetType.equals(contextObjectClass)) {\n\t\t\t\t\t// it is OK to use the cached accessor\n\t\t\t\t\tcachedWriteAccessor.write(eContext, targetObject, name,newValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tList<PropertyAccessor> accessorsToTry = AstUtils.getPropertyAccessorsToTry(contextObjectClass, state);\n\t\t\t\tif (accessorsToTry != null) {\n\t\t\t\t\t\tfor (PropertyAccessor accessor : accessorsToTry) {\n\t\t\t\t\t\t\tif (accessor.canWrite(eContext, contextObject.getValue(), name)) {\n\t\t\t\t\t\t\t\tthis.cachedWriteName = name;\n\t\t\t\t\t\t\t\tthis.cachedWriteTargetType = contextObjectClass;\n\t\t\t\t\t\t\t\tthis.cachedWriteAccessor = accessor;\n\t\t\t\t\t\t\t\taccessor.write(eContext, contextObject.getValue(), name, newValue);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (AccessException ae) {\n\t\t\t\tthrow new SpelEvaluationException(getStartPosition(), ae, SpelMessage.EXCEPTION_DURING_PROPERTY_WRITE,\n\t\t\t\t\t\tname, ae.getMessage());\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.INDEXING_NOT_SUPPORTED_FOR_TYPE, targetObjectTypeDescriptor.asString());\n\t}","id":58882,"modified_method":"@SuppressWarnings(\"unchecked\")\n\t@Override\n\tpublic void setValue(ExpressionState state, Object newValue) throws EvaluationException {\n\t\tTypedValue contextObject = state.getActiveContextObject();\n\t\tObject targetObject = contextObject.getValue();\n\t\tTypeDescriptor targetObjectTypeDescriptor = contextObject.getTypeDescriptor();\n\t\tTypedValue index = children[0].getValueInternal(state);\n\n\t\tif (targetObject == null) {\n\t\t\tthrow new SpelEvaluationException(SpelMessage.CANNOT_INDEX_INTO_NULL_VALUE);\n\t\t}\n\t\t// Indexing into a Map\n\t\tif (targetObjectTypeDescriptor.isMap()) {\n\t\t\tMap map = (Map)targetObject;\n\t\t\tObject possiblyConvertedKey = index;\n\t\t\tObject possiblyConvertedValue = newValue;\n\t\t\tif (targetObjectTypeDescriptor.isMapEntryTypeKnown()) {\n\t\t\t  possiblyConvertedKey = state.convertValue(index.getValue(),TypeDescriptor.valueOf(targetObjectTypeDescriptor.getMapKeyType()));\n\t\t\t  possiblyConvertedValue = state.convertValue(newValue,TypeDescriptor.valueOf(targetObjectTypeDescriptor.getMapValueType()));\n\t\t\t}\n\t\t\tmap.put(possiblyConvertedKey,possiblyConvertedValue);\n\t\t\treturn;\n\t\t}\n\n\t\tif (targetObjectTypeDescriptor.isArray()) {\n\t\t\tint idx = (Integer)state.convertValue(index, TypeDescriptor.valueOf(Integer.class));\n\t\t\tsetArrayElement(state, contextObject.getValue(), idx, newValue, targetObjectTypeDescriptor.getElementType());\n\t\t\treturn;\n\t\t}\n\t\telse if (targetObjectTypeDescriptor.isCollection()) {\n\t\t\tint idx = (Integer)state.convertValue(index, TypeDescriptor.valueOf(Integer.class));\n\t\t\tCollection c = (Collection) targetObject;\n\t\t\tif (idx >= c.size()) {\n\t\t\t\tif (!growCollection(state, targetObjectTypeDescriptor.getElementType(), idx, c)) {\n\t\t\t\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS, c.size(), idx);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (targetObject instanceof List) {\n\t\t\t\tList list = (List)targetObject;\n\t\t\t\tObject possiblyConvertedValue = state.convertValue(newValue, targetObjectTypeDescriptor.getElementTypeDescriptor());\n\t\t\t\tlist.set(idx,possiblyConvertedValue);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.INDEXING_NOT_SUPPORTED_FOR_TYPE, targetObjectTypeDescriptor.asString());\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Try and treat the index value as a property of the context object\t\t\n\t\t// TODO could call the conversion service to convert the value to a String\t\t\n\t\tif (index.getTypeDescriptor().getType()==String.class) {\n\t\t\tClass<?> contextObjectClass = getObjectClass(contextObject.getValue());\n\t\t\tString name = (String)index.getValue();\n\t\t\tEvaluationContext eContext = state.getEvaluationContext();\n\t\t\ttry {\n\t\t\t\tif (cachedWriteName!=null && cachedWriteName.equals(name) && cachedWriteTargetType!=null && cachedWriteTargetType.equals(contextObjectClass)) {\n\t\t\t\t\t// it is OK to use the cached accessor\n\t\t\t\t\tcachedWriteAccessor.write(eContext, targetObject, name,newValue);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tList<PropertyAccessor> accessorsToTry = AstUtils.getPropertyAccessorsToTry(contextObjectClass, state);\n\t\t\t\tif (accessorsToTry != null) {\n\t\t\t\t\t\tfor (PropertyAccessor accessor : accessorsToTry) {\n\t\t\t\t\t\t\tif (accessor.canWrite(eContext, contextObject.getValue(), name)) {\n\t\t\t\t\t\t\t\tthis.cachedWriteName = name;\n\t\t\t\t\t\t\t\tthis.cachedWriteTargetType = contextObjectClass;\n\t\t\t\t\t\t\t\tthis.cachedWriteAccessor = accessor;\n\t\t\t\t\t\t\t\taccessor.write(eContext, contextObject.getValue(), name, newValue);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (AccessException ae) {\n\t\t\t\tthrow new SpelEvaluationException(getStartPosition(), ae, SpelMessage.EXCEPTION_DURING_PROPERTY_WRITE,\n\t\t\t\t\t\tname, ae.getMessage());\n\t\t\t}\n\n\t\t}\n\t\t\n\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.INDEXING_NOT_SUPPORTED_FOR_TYPE, targetObjectTypeDescriptor.asString());\n\t}","commit_id":"9e4140e5490a57ad79d08a8fca476d8b019f0664","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"/**\n\t * Attempt to grow the specified collection so that the specified index is valid.\n\t * \n\t * @param state the expression state\n\t * @param elementType the type of the elements in the collection\n\t * @param index the index into the collection that needs to be valid\n\t * @param collection the collection to grow with elements\n\t * @return true if collection growing succeeded, otherwise false\n\t */\n\t@SuppressWarnings(\"unchecked\")\n\tprivate boolean growCollection(ExpressionState state, Class<?> elementType, int index,\n\t\t\tCollection collection) {\n\t\tif (state.getConfiguration().isAutoGrowCollections()) {\n\t\t\tObject newCollectionElement = null;\n\t\t\ttry {\n\t\t\t\tint newElements = index-collection.size();\n\t\t\t\tif (elementType == null) {\n\t\t\t\t\tthrow new SpelEvaluationException(getStartPosition(), SpelMessage.UNABLE_TO_GROW_COLLECTION_UNKNOWN_ELEMENT_TYPE);\t\n\t\t\t\t}\n\t\t\t\twhile (newElements>0) {\n\t\t\t\t\tcollection.add(elementType.newInstance());\n\t\t\t\t\tnewElements--;\n\t\t\t\t}\n\t\t\t\tnewCollectionElement = elementType.newInstance();\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tthrow new SpelEvaluationException(getStartPosition(), ex, SpelMessage.UNABLE_TO_GROW_COLLECTION);\n\t\t\t}\n\t\t\tcollection.add(newCollectionElement);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}","id":58883,"modified_method":"/**\n\t * Attempt to grow the specified collection so that the specified index is valid.\n\t * \n\t * @param state the expression state\n\t * @param elementType the type of the elements in the collection\n\t * @param index the index into the collection that needs to be valid\n\t * @param collection the collection to grow with elements\n\t * @return true if collection growing succeeded, otherwise false\n\t */\n\t@SuppressWarnings(\"unchecked\")\n\tprivate boolean growCollection(ExpressionState state, Class<?> elementType, int index,\n\t\t\tCollection collection) {\n\t\tif (state.getConfiguration().isAutoGrowCollections()) {\n\t\t\tObject newCollectionElement = null;\n\t\t\ttry {\n\t\t\t\tint newElements = index-collection.size();\n\t\t\t\tif (elementType == null || elementType == Object.class) {\n\t\t\t\t\tthrow new SpelEvaluationException(getStartPosition(), SpelMessage.UNABLE_TO_GROW_COLLECTION_UNKNOWN_ELEMENT_TYPE);\t\n\t\t\t\t}\n\t\t\t\twhile (newElements>0) {\n\t\t\t\t\tcollection.add(elementType.newInstance());\n\t\t\t\t\tnewElements--;\n\t\t\t\t}\n\t\t\t\tnewCollectionElement = elementType.newInstance();\n\t\t\t}\n\t\t\tcatch (Exception ex) {\n\t\t\t\tthrow new SpelEvaluationException(getStartPosition(), ex, SpelMessage.UNABLE_TO_GROW_COLLECTION);\n\t\t\t}\n\t\t\tcollection.add(newCollectionElement);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}","commit_id":"9e4140e5490a57ad79d08a8fca476d8b019f0664","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@Override\n\tpublic TypedValue getValueInternal(ExpressionState state) throws EvaluationException {\n\t\tTypedValue context = state.getActiveContextObject();\n\t\tObject targetObject = context.getValue();\n\t\tTypeDescriptor targetObjectTypeDescriptor = context.getTypeDescriptor();\n\t\tTypedValue indexValue = null;\n\t\tObject index = null;\n\t\t\n\t\t// This first part of the if clause prevents a 'double dereference' of the property (SPR-5847)\n\t\tif (targetObject instanceof Map && (children[0] instanceof PropertyOrFieldReference)) {\n\t\t\tPropertyOrFieldReference reference = (PropertyOrFieldReference)children[0];\n\t\t\tindex = reference.getName();\n\t\t\tindexValue = new TypedValue(index);\n\t\t}\n\t\telse {\n\t\t\t// In case the map key is unqualified, we want it evaluated against the root object so \n\t\t\t// temporarily push that on whilst evaluating the key\n\t\t\ttry {\n\t\t\t\tstate.pushActiveContextObject(state.getRootContextObject());\n\t\t\t\tindexValue = children[0].getValueInternal(state);\n\t\t\t\tindex = indexValue.getValue();\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tstate.popActiveContextObject();\n\t\t\t}\n\t\t}\n\n\t\t// Indexing into a Map\n\t\tif (targetObject instanceof Map) {\n\t\t\tif (targetObject == null) {\n\t\t\t    // Current decision: attempt to index into null map == exception and does not just return null\n\t\t\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.CANNOT_INDEX_INTO_NULL_VALUE);\n\t\t\t}\n\t\t\tObject possiblyConvertedKey = index;\n\t\t\tif (targetObjectTypeDescriptor.isMapEntryTypeKnown()) {\n\t\t\t\tpossiblyConvertedKey = state.convertValue(index,TypeDescriptor.valueOf(targetObjectTypeDescriptor.getMapKeyType()));\n\t\t\t}\n\t\t\tObject o = ((Map<?, ?>) targetObject).get(possiblyConvertedKey);\n\t\t\tif (targetObjectTypeDescriptor.isMapEntryTypeKnown()) {\n\t\t\t\treturn new TypedValue(o, targetObjectTypeDescriptor.getMapValueTypeDescriptor());\n\t\t\t} else {\n\t\t\t\treturn new TypedValue(o);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (targetObject == null) {\n\t\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.CANNOT_INDEX_INTO_NULL_VALUE);\n\t\t}\n\t\t\n\t\t// if the object is something that looks indexable by an integer, attempt to treat the index value as a number\n\t\tif ((targetObject instanceof Collection ) || targetObject.getClass().isArray() || targetObject instanceof String) {\n\t\t\tint idx = (Integer)state.convertValue(index, TypeDescriptor.valueOf(Integer.class));\t\t\n\t\t\tif (targetObject.getClass().isArray()) {\n\t\t\t\treturn new TypedValue(accessArrayElement(targetObject, idx),TypeDescriptor.valueOf(targetObjectTypeDescriptor.getElementType()));\n\t\t\t} else if (targetObject instanceof Collection) {\n\t\t\t\tCollection c = (Collection) targetObject;\n\t\t\t\tif (idx >= c.size()) {\n\t\t\t\t\tif (!growCollection(state, targetObjectTypeDescriptor.getElementType(), idx, c)) {\n\t\t\t\t\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS, c.size(), idx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tint pos = 0;\n\t\t\t\tfor (Object o : c) {\n\t\t\t\t\tif (pos == idx) {\n\t\t\t\t\t\treturn new TypedValue(o,TypeDescriptor.valueOf(targetObjectTypeDescriptor.getElementType()));\n\t\t\t\t\t}\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else if (targetObject instanceof String) {\n\t\t\t\tString ctxString = (String) targetObject;\n\t\t\t\tif (idx >= ctxString.length()) {\n\t\t\t\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.STRING_INDEX_OUT_OF_BOUNDS, ctxString.length(), idx);\n\t\t\t\t}\n\t\t\t\treturn new TypedValue(String.valueOf(ctxString.charAt(idx)));\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Try and treat the index value as a property of the context object\n\t\t// TODO could call the conversion service to convert the value to a String\t\t\n\t\tif (indexValue.getTypeDescriptor().getType()==String.class) {\n\t\t\tClass<?> targetObjectRuntimeClass = getObjectClass(targetObject);\n\t\t\tString name = (String)indexValue.getValue();\n\t\t\tEvaluationContext eContext = state.getEvaluationContext();\n\n\t\t\ttry {\n\t\t\t\tif (cachedReadName!=null && cachedReadName.equals(name) && cachedReadTargetType!=null && cachedReadTargetType.equals(targetObjectRuntimeClass)) {\n\t\t\t\t\t// it is OK to use the cached accessor\n\t\t\t\t\treturn cachedReadAccessor.read(eContext, targetObject, name);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tList<PropertyAccessor> accessorsToTry = AstUtils.getPropertyAccessorsToTry(targetObjectRuntimeClass, state);\n\t\t\n\t\t\t\tif (accessorsToTry != null) {\t\t\t\n\t\t\t\t\tfor (PropertyAccessor accessor : accessorsToTry) {\n\t\t\t\t\t\t\tif (accessor.canRead(eContext, targetObject, name)) {\n\t\t\t\t\t\t\t\tif (accessor instanceof ReflectivePropertyAccessor) {\n\t\t\t\t\t\t\t\t\taccessor = ((ReflectivePropertyAccessor)accessor).createOptimalAccessor(eContext, targetObject, name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.cachedReadAccessor = accessor;\n\t\t\t\t\t\t\t\tthis.cachedReadName = name;\n\t\t\t\t\t\t\t\tthis.cachedReadTargetType = targetObjectRuntimeClass;\n\t\t\t\t\t\t\t\treturn accessor.read(eContext, targetObject, name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (AccessException e) {\n\t\t\t\tthrow new SpelEvaluationException(getStartPosition(), e, SpelMessage.INDEXING_NOT_SUPPORTED_FOR_TYPE, targetObjectTypeDescriptor.asString());\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.INDEXING_NOT_SUPPORTED_FOR_TYPE, targetObjectTypeDescriptor.asString());\n\t}","id":58884,"modified_method":"@Override\n\tpublic TypedValue getValueInternal(ExpressionState state) throws EvaluationException {\n\t\tTypedValue context = state.getActiveContextObject();\n\t\tObject targetObject = context.getValue();\n\t\tTypeDescriptor targetObjectTypeDescriptor = context.getTypeDescriptor();\n\t\tTypedValue indexValue = null;\n\t\tObject index = null;\n\t\t\n\t\t// This first part of the if clause prevents a 'double dereference' of the property (SPR-5847)\n\t\tif (targetObject instanceof Map && (children[0] instanceof PropertyOrFieldReference)) {\n\t\t\tPropertyOrFieldReference reference = (PropertyOrFieldReference)children[0];\n\t\t\tindex = reference.getName();\n\t\t\tindexValue = new TypedValue(index);\n\t\t}\n\t\telse {\n\t\t\t// In case the map key is unqualified, we want it evaluated against the root object so \n\t\t\t// temporarily push that on whilst evaluating the key\n\t\t\ttry {\n\t\t\t\tstate.pushActiveContextObject(state.getRootContextObject());\n\t\t\t\tindexValue = children[0].getValueInternal(state);\n\t\t\t\tindex = indexValue.getValue();\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tstate.popActiveContextObject();\n\t\t\t}\n\t\t}\n\n\t\t// Indexing into a Map\n\t\tif (targetObject instanceof Map) {\n\t\t\tif (targetObject == null) {\n\t\t\t    // Current decision: attempt to index into null map == exception and does not just return null\n\t\t\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.CANNOT_INDEX_INTO_NULL_VALUE);\n\t\t\t}\n\t\t\tObject possiblyConvertedKey = index;\n\t\t\tif (targetObjectTypeDescriptor.isMapEntryTypeKnown()) {\n\t\t\t\tpossiblyConvertedKey = state.convertValue(index,TypeDescriptor.valueOf(targetObjectTypeDescriptor.getMapKeyType()));\n\t\t\t}\n\t\t\tObject o = ((Map<?, ?>) targetObject).get(possiblyConvertedKey);\n\t\t\tif (targetObjectTypeDescriptor.isMapEntryTypeKnown()) {\n\t\t\t\treturn new TypedValue(o, targetObjectTypeDescriptor.getMapValueTypeDescriptor());\n\t\t\t} else {\n\t\t\t\treturn new TypedValue(o);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (targetObject == null) {\n\t\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.CANNOT_INDEX_INTO_NULL_VALUE);\n\t\t}\n\t\t\n\t\t// if the object is something that looks indexable by an integer, attempt to treat the index value as a number\n\t\tif ((targetObject instanceof Collection ) || targetObject.getClass().isArray() || targetObject instanceof String) {\n\t\t\tint idx = (Integer)state.convertValue(index, TypeDescriptor.valueOf(Integer.class));\t\t\n\t\t\tif (targetObject.getClass().isArray()) {\n\t\t\t\treturn new TypedValue(accessArrayElement(targetObject, idx), targetObjectTypeDescriptor.getElementTypeDescriptor());\n\t\t\t} else if (targetObject instanceof Collection) {\n\t\t\t\tCollection c = (Collection) targetObject;\n\t\t\t\tif (idx >= c.size()) {\n\t\t\t\t\tif (!growCollection(state, targetObjectTypeDescriptor.getElementType(), idx, c)) {\n\t\t\t\t\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.COLLECTION_INDEX_OUT_OF_BOUNDS, c.size(), idx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tint pos = 0;\n\t\t\t\tfor (Object o : c) {\n\t\t\t\t\tif (pos == idx) {\n\t\t\t\t\t\treturn new TypedValue(o, targetObjectTypeDescriptor.getElementTypeDescriptor());\n\t\t\t\t\t}\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else if (targetObject instanceof String) {\n\t\t\t\tString ctxString = (String) targetObject;\n\t\t\t\tif (idx >= ctxString.length()) {\n\t\t\t\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.STRING_INDEX_OUT_OF_BOUNDS, ctxString.length(), idx);\n\t\t\t\t}\n\t\t\t\treturn new TypedValue(String.valueOf(ctxString.charAt(idx)));\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Try and treat the index value as a property of the context object\n\t\t// TODO could call the conversion service to convert the value to a String\t\t\n\t\tif (indexValue.getTypeDescriptor().getType()==String.class) {\n\t\t\tClass<?> targetObjectRuntimeClass = getObjectClass(targetObject);\n\t\t\tString name = (String)indexValue.getValue();\n\t\t\tEvaluationContext eContext = state.getEvaluationContext();\n\n\t\t\ttry {\n\t\t\t\tif (cachedReadName!=null && cachedReadName.equals(name) && cachedReadTargetType!=null && cachedReadTargetType.equals(targetObjectRuntimeClass)) {\n\t\t\t\t\t// it is OK to use the cached accessor\n\t\t\t\t\treturn cachedReadAccessor.read(eContext, targetObject, name);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tList<PropertyAccessor> accessorsToTry = AstUtils.getPropertyAccessorsToTry(targetObjectRuntimeClass, state);\n\t\t\n\t\t\t\tif (accessorsToTry != null) {\t\t\t\n\t\t\t\t\tfor (PropertyAccessor accessor : accessorsToTry) {\n\t\t\t\t\t\t\tif (accessor.canRead(eContext, targetObject, name)) {\n\t\t\t\t\t\t\t\tif (accessor instanceof ReflectivePropertyAccessor) {\n\t\t\t\t\t\t\t\t\taccessor = ((ReflectivePropertyAccessor)accessor).createOptimalAccessor(eContext, targetObject, name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.cachedReadAccessor = accessor;\n\t\t\t\t\t\t\t\tthis.cachedReadName = name;\n\t\t\t\t\t\t\t\tthis.cachedReadTargetType = targetObjectRuntimeClass;\n\t\t\t\t\t\t\t\treturn accessor.read(eContext, targetObject, name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (AccessException e) {\n\t\t\t\tthrow new SpelEvaluationException(getStartPosition(), e, SpelMessage.INDEXING_NOT_SUPPORTED_FOR_TYPE, targetObjectTypeDescriptor.asString());\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tthrow new SpelEvaluationException(getStartPosition(),SpelMessage.INDEXING_NOT_SUPPORTED_FOR_TYPE, targetObjectTypeDescriptor.asString());\n\t}","commit_id":"9e4140e5490a57ad79d08a8fca476d8b019f0664","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"@SuppressWarnings(\"unchecked\")\n\t@Override\n\tpublic TypedValue getValueInternal(ExpressionState state) throws EvaluationException {\n\t\tTypedValue op = state.getActiveContextObject();\n\t\tObject operand = op.getValue();\n\t\t\n\t\tSpelNodeImpl selectionCriteria = children[0];\n\t\tif (operand instanceof Map) {\n\t\t\tMap<?, ?> mapdata = (Map<?, ?>) operand;\n\t\t\t// TODO don't lose generic info for the new map\n\t\t\tMap<Object,Object> result = new HashMap<Object,Object>();\n\t\t\tObject lastKey = null;\n\t\t\tfor (Map.Entry entry : mapdata.entrySet()) {\n\t\t\t\ttry {\n\t\t\t\t\tlastKey = entry.getKey();\n\t\t\t\t\tTypedValue kvpair = new TypedValue(entry,TypeDescriptor.valueOf(Map.Entry.class));\n\t\t\t\t\tstate.pushActiveContextObject(kvpair);\n\t\t\t\t\tObject o = selectionCriteria.getValueInternal(state).getValue();\n\t\t\t\t\tif (o instanceof Boolean) {\n\t\t\t\t\t\tif (((Boolean) o).booleanValue() == true) {\n\t\t\t\t\t\t\tif (variant == FIRST) {\n\t\t\t\t\t\t\t\tresult.put(entry.getKey(),entry.getValue());\n\t\t\t\t\t\t\t\treturn new TypedValue(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresult.put(entry.getKey(),entry.getValue());\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new SpelEvaluationException(selectionCriteria.getStartPosition(),\n\t\t\t\t\t\t\t\tSpelMessage.RESULT_OF_SELECTION_CRITERIA_IS_NOT_BOOLEAN);// ,selectionCriteria.stringifyAST());\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tstate.popActiveContextObject();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((variant == FIRST || variant == LAST) && result.size() == 0) {\n\t\t\t\treturn new TypedValue(null,TypeDescriptor.NULL);\n\t\t\t}\n\t\t\tif (variant == LAST) {\n\t\t\t\tMap resultMap = new HashMap();\n\t\t\t\tObject lastValue = result.get(lastKey);\n\t\t\t\tresultMap.put(lastKey,lastValue);\n\t\t\t\treturn new TypedValue(resultMap,TypeDescriptor.valueOf(Map.class));\n\t\t\t}\n\t\t\treturn new TypedValue(result,op.getTypeDescriptor());\n\t\t} else if ((operand instanceof Collection) || ObjectUtils.isArray(operand)) {\n\t\t\tList<Object> data = new ArrayList<Object>();\n\t\t\tCollection<?> c = (operand instanceof Collection) ?\n\t\t\t\t\t(Collection<?>) operand : Arrays.asList(ObjectUtils.toObjectArray(operand));\n\t\t\tdata.addAll(c);\n\t\t\tList<Object> result = new ArrayList<Object>();\n\t\t\tint idx = 0;\n\t\t\tfor (Object element : data) {\n\t\t\t\ttry {\n\t\t\t\t\tstate.pushActiveContextObject(new TypedValue(element,TypeDescriptor.valueOf(op.getTypeDescriptor().getElementType())));\n\t\t\t\t\tstate.enterScope(\"index\", idx);\n\t\t\t\t\tObject o = selectionCriteria.getValueInternal(state).getValue();\n\t\t\t\t\tif (o instanceof Boolean) {\n\t\t\t\t\t\tif (((Boolean) o).booleanValue() == true) {\n\t\t\t\t\t\t\tif (variant == FIRST) {\n\t\t\t\t\t\t\t\treturn new TypedValue(element,TypeDescriptor.valueOf(op.getTypeDescriptor().getElementType()));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresult.add(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new SpelEvaluationException(selectionCriteria.getStartPosition(),\n\t\t\t\t\t\t\t\tSpelMessage.RESULT_OF_SELECTION_CRITERIA_IS_NOT_BOOLEAN);// ,selectionCriteria.stringifyAST());\n\t\t\t\t\t}\n\t\t\t\t\tidx++;\n\t\t\t\t} finally {\n\t\t\t\t\tstate.exitScope();\n\t\t\t\t\tstate.popActiveContextObject();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((variant == FIRST || variant == LAST) && result.size() == 0) {\n\t\t\t\treturn TypedValue.NULL;\n\t\t\t}\n\t\t\tif (variant == LAST) {\n\t\t\t\treturn new TypedValue(result.get(result.size() - 1),TypeDescriptor.valueOf(op.getTypeDescriptor().getElementType()));\n\t\t\t}\n\t\t\tif (operand instanceof Collection) {\n\t\t\t\treturn new TypedValue(result,op.getTypeDescriptor());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tClass<?> elementType = ClassUtils.resolvePrimitiveIfNecessary(op.getTypeDescriptor().getElementType());\n\t\t\t\tObject resultArray = Array.newInstance(elementType, result.size());\n\t\t\t\tSystem.arraycopy(result.toArray(), 0, resultArray, 0, result.size());\n\t\t\t\treturn new TypedValue(resultArray, op.getTypeDescriptor());\n\t\t\t}\n\t\t} else {\n\t\t\tif (operand==null) {\n\t\t\t\tif (nullSafe) { \n\t\t\t\t\treturn TypedValue.NULL;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpelEvaluationException(getStartPosition(), SpelMessage.INVALID_TYPE_FOR_SELECTION,\n\t\t\t\t\t\t\t\"null\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new SpelEvaluationException(getStartPosition(), SpelMessage.INVALID_TYPE_FOR_SELECTION,\n\t\t\t\t\t\toperand.getClass().getName());\n\t\t\t}\t\t\t\t\n\t\t}\n\t}","id":58885,"modified_method":"@SuppressWarnings(\"unchecked\")\n\t@Override\n\tpublic TypedValue getValueInternal(ExpressionState state) throws EvaluationException {\n\t\tTypedValue op = state.getActiveContextObject();\n\t\tObject operand = op.getValue();\n\t\t\n\t\tSpelNodeImpl selectionCriteria = children[0];\n\t\tif (operand instanceof Map) {\n\t\t\tMap<?, ?> mapdata = (Map<?, ?>) operand;\n\t\t\t// TODO don't lose generic info for the new map\n\t\t\tMap<Object,Object> result = new HashMap<Object,Object>();\n\t\t\tObject lastKey = null;\n\t\t\tfor (Map.Entry entry : mapdata.entrySet()) {\n\t\t\t\ttry {\n\t\t\t\t\tlastKey = entry.getKey();\n\t\t\t\t\tTypedValue kvpair = new TypedValue(entry,TypeDescriptor.valueOf(Map.Entry.class));\n\t\t\t\t\tstate.pushActiveContextObject(kvpair);\n\t\t\t\t\tObject o = selectionCriteria.getValueInternal(state).getValue();\n\t\t\t\t\tif (o instanceof Boolean) {\n\t\t\t\t\t\tif (((Boolean) o).booleanValue() == true) {\n\t\t\t\t\t\t\tif (variant == FIRST) {\n\t\t\t\t\t\t\t\tresult.put(entry.getKey(),entry.getValue());\n\t\t\t\t\t\t\t\treturn new TypedValue(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresult.put(entry.getKey(),entry.getValue());\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new SpelEvaluationException(selectionCriteria.getStartPosition(),\n\t\t\t\t\t\t\t\tSpelMessage.RESULT_OF_SELECTION_CRITERIA_IS_NOT_BOOLEAN);// ,selectionCriteria.stringifyAST());\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tstate.popActiveContextObject();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((variant == FIRST || variant == LAST) && result.size() == 0) {\n\t\t\t\treturn new TypedValue(null,TypeDescriptor.NULL);\n\t\t\t}\n\t\t\tif (variant == LAST) {\n\t\t\t\tMap resultMap = new HashMap();\n\t\t\t\tObject lastValue = result.get(lastKey);\n\t\t\t\tresultMap.put(lastKey,lastValue);\n\t\t\t\treturn new TypedValue(resultMap,TypeDescriptor.valueOf(Map.class));\n\t\t\t}\n\t\t\treturn new TypedValue(result,op.getTypeDescriptor());\n\t\t} else if ((operand instanceof Collection) || ObjectUtils.isArray(operand)) {\n\t\t\tList<Object> data = new ArrayList<Object>();\n\t\t\tCollection<?> c = (operand instanceof Collection) ?\n\t\t\t\t\t(Collection<?>) operand : Arrays.asList(ObjectUtils.toObjectArray(operand));\n\t\t\tdata.addAll(c);\n\t\t\tList<Object> result = new ArrayList<Object>();\n\t\t\tint idx = 0;\n\t\t\tfor (Object element : data) {\n\t\t\t\ttry {\n\t\t\t\t\tstate.pushActiveContextObject(new TypedValue(element, op.getTypeDescriptor().getElementTypeDescriptor()));\n\t\t\t\t\tstate.enterScope(\"index\", idx);\n\t\t\t\t\tObject o = selectionCriteria.getValueInternal(state).getValue();\n\t\t\t\t\tif (o instanceof Boolean) {\n\t\t\t\t\t\tif (((Boolean) o).booleanValue() == true) {\n\t\t\t\t\t\t\tif (variant == FIRST) {\n\t\t\t\t\t\t\t\treturn new TypedValue(element, op.getTypeDescriptor().getElementTypeDescriptor());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresult.add(element);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new SpelEvaluationException(selectionCriteria.getStartPosition(),\n\t\t\t\t\t\t\t\tSpelMessage.RESULT_OF_SELECTION_CRITERIA_IS_NOT_BOOLEAN);// ,selectionCriteria.stringifyAST());\n\t\t\t\t\t}\n\t\t\t\t\tidx++;\n\t\t\t\t} finally {\n\t\t\t\t\tstate.exitScope();\n\t\t\t\t\tstate.popActiveContextObject();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((variant == FIRST || variant == LAST) && result.size() == 0) {\n\t\t\t\treturn TypedValue.NULL;\n\t\t\t}\n\t\t\tif (variant == LAST) {\n\t\t\t\treturn new TypedValue(result.get(result.size() - 1), op.getTypeDescriptor().getElementTypeDescriptor());\n\t\t\t}\n\t\t\tif (operand instanceof Collection) {\n\t\t\t\treturn new TypedValue(result,op.getTypeDescriptor());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tClass<?> elementType = ClassUtils.resolvePrimitiveIfNecessary(op.getTypeDescriptor().getElementType());\n\t\t\t\tObject resultArray = Array.newInstance(elementType, result.size());\n\t\t\t\tSystem.arraycopy(result.toArray(), 0, resultArray, 0, result.size());\n\t\t\t\treturn new TypedValue(resultArray, op.getTypeDescriptor());\n\t\t\t}\n\t\t} else {\n\t\t\tif (operand==null) {\n\t\t\t\tif (nullSafe) { \n\t\t\t\t\treturn TypedValue.NULL;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new SpelEvaluationException(getStartPosition(), SpelMessage.INVALID_TYPE_FOR_SELECTION,\n\t\t\t\t\t\t\t\"null\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new SpelEvaluationException(getStartPosition(), SpelMessage.INVALID_TYPE_FOR_SELECTION,\n\t\t\t\t\t\toperand.getClass().getName());\n\t\t\t}\t\t\t\t\n\t\t}\n\t}","commit_id":"9e4140e5490a57ad79d08a8fca476d8b019f0664","url":"https://github.com/spring-projects/spring-framework"},{"original_method":"protected SecurePart addUsernameToken(UsernameToken usernameToken) {\n        assertToken(usernameToken);\n        IncludeTokenType includeToken = usernameToken.getIncludeTokenType();\n        if (!isTokenRequired(includeToken)) {\n            return null;\n        }\n\n        // Action\n        WSSConstants.Action actionToPerform = WSSConstants.USERNAMETOKEN;\n        properties.addAction(actionToPerform);\n\n        // Password Type\n        PasswordType passwordType = usernameToken.getPasswordType();\n        if (passwordType == PasswordType.HashPassword) {\n            properties.setUsernameTokenPasswordType(UsernameTokenPasswordType.PASSWORD_DIGEST);\n        } else if (passwordType == PasswordType.NoPassword) {\n            properties.setUsernameTokenPasswordType(UsernameTokenPasswordType.PASSWORD_NONE);\n        } else {\n            properties.setUsernameTokenPasswordType(UsernameTokenPasswordType.PASSWORD_TEXT);\n        }\n\n        // Nonce + Created\n        if (usernameToken.isNonce()) {\n            properties.setAddUsernameTokenNonce(true);\n        }\n        if (usernameToken.isCreated()) {\n            properties.setAddUsernameTokenCreated(true);\n        }\n        \n        // Check if a CallbackHandler was specified\n        if (properties.getCallbackHandler() == null) {\n            String password = (String)message.getContextualProperty(SecurityConstants.PASSWORD);\n            if (password != null) {\n                String username = \n                    (String)message.getContextualProperty(SecurityConstants.USERNAME);\n                UTCallbackHandler callbackHandler = new UTCallbackHandler(username, password);\n                properties.setCallbackHandler(callbackHandler);\n            }\n        }\n        \n        return new SecurePart(WSSConstants.TAG_wsse_UsernameToken, Modifier.Element);\n    }","id":58886,"modified_method":"protected SecurePart addUsernameToken(UsernameToken usernameToken) {\n        assertToken(usernameToken);\n        IncludeTokenType includeToken = usernameToken.getIncludeTokenType();\n        if (!isTokenRequired(includeToken)) {\n            return null;\n        }\n\n        // Action\n        properties.addAction(WSSConstants.USERNAMETOKEN);\n\n        // Password Type\n        PasswordType passwordType = usernameToken.getPasswordType();\n        if (passwordType == PasswordType.HashPassword) {\n            properties.setUsernameTokenPasswordType(UsernameTokenPasswordType.PASSWORD_DIGEST);\n        } else if (passwordType == PasswordType.NoPassword) {\n            properties.setUsernameTokenPasswordType(UsernameTokenPasswordType.PASSWORD_NONE);\n        } else {\n            properties.setUsernameTokenPasswordType(UsernameTokenPasswordType.PASSWORD_TEXT);\n        }\n\n        // Nonce + Created\n        if (usernameToken.isNonce()) {\n            properties.setAddUsernameTokenNonce(true);\n        }\n        if (usernameToken.isCreated()) {\n            properties.setAddUsernameTokenCreated(true);\n        }\n        \n        // Check if a CallbackHandler was specified\n        if (properties.getCallbackHandler() == null) {\n            String password = (String)message.getContextualProperty(SecurityConstants.PASSWORD);\n            if (password != null) {\n                String username = \n                    (String)message.getContextualProperty(SecurityConstants.USERNAME);\n                UTCallbackHandler callbackHandler = new UTCallbackHandler(username, password);\n                properties.setCallbackHandler(callbackHandler);\n            }\n        }\n        \n        return new SecurePart(WSSConstants.TAG_wsse_UsernameToken, Modifier.Element);\n    }","commit_id":"629713a1e4219537286d9b329063bc507b2e5b43","url":"https://github.com/apache/cxf"},{"original_method":"protected String getKeyIdentifierType(AbstractTokenWrapper wrapper, AbstractToken token) {\n\n        String identifier = null;\n        if (token instanceof X509Token) {\n            X509Token x509Token = (X509Token)token;\n            if (x509Token.isRequireIssuerSerialReference()) {\n                identifier = \"IssuerSerial\";\n            } else if (x509Token.isRequireKeyIdentifierReference()) {\n                identifier = \"SKIKeyIdentifier\";\n            } else if (x509Token.isRequireThumbprintReference()) {\n                identifier = \"Thumbprint\";\n            }\n        } else if (token instanceof KeyValueToken) {\n            identifier = \"KeyValue\";\n        }\n        \n        if (identifier != null) {\n            return identifier;\n        }\n\n        if (token.getIncludeTokenType() == IncludeTokenType.INCLUDE_TOKEN_NEVER) {\n            Wss10 wss = getWss10();\n            if (wss == null || wss.isMustSupportRefKeyIdentifier()) {\n                return \"SKIKeyIdentifier\";\n            } else if (wss.isMustSupportRefIssuerSerial()) {\n                return \"IssuerSerial\";\n            } else if (wss instanceof Wss11\n                && ((Wss11) wss).isMustSupportRefThumbprint()) {\n                return \"Thumbprint\";\n            }\n        } else {\n            return \"DirectReference\";\n        }\n        \n        return \"IssuerSerial\";\n    }","id":58887,"modified_method":"protected WSSecurityTokenConstants.KeyIdentifier getKeyIdentifierType(\n        AbstractTokenWrapper wrapper, AbstractToken token\n    ) {\n        WSSecurityTokenConstants.KeyIdentifier identifier = null;\n        if (token instanceof X509Token) {\n            X509Token x509Token = (X509Token)token;\n            if (x509Token.isRequireIssuerSerialReference()) {\n                identifier = WSSecurityTokenConstants.KeyIdentifier_IssuerSerial;\n            } else if (x509Token.isRequireKeyIdentifierReference()) {\n                identifier = WSSecurityTokenConstants.KeyIdentifier_SkiKeyIdentifier;\n            } else if (x509Token.isRequireThumbprintReference()) {\n                identifier = WSSecurityTokenConstants.KeyIdentifier_ThumbprintIdentifier;\n            }\n        } else if (token instanceof KeyValueToken) {\n            identifier = WSSecurityTokenConstants.KeyIdentifier_KeyValue;\n        }\n        \n        if (identifier != null) {\n            return identifier;\n        }\n\n        if (token.getIncludeTokenType() == IncludeTokenType.INCLUDE_TOKEN_NEVER) {\n            Wss10 wss = getWss10();\n            if (wss == null || wss.isMustSupportRefKeyIdentifier()) {\n                return WSSecurityTokenConstants.KeyIdentifier_SkiKeyIdentifier;\n            } else if (wss.isMustSupportRefIssuerSerial()) {\n                return WSSecurityTokenConstants.KeyIdentifier_IssuerSerial;\n            } else if (wss instanceof Wss11\n                && ((Wss11) wss).isMustSupportRefThumbprint()) {\n                return WSSecurityTokenConstants.KeyIdentifier_ThumbprintIdentifier;\n            }\n        } else {\n            return WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference;\n        }\n        \n        return WSSecurityTokenConstants.KeyIdentifier_IssuerSerial;\n    }","commit_id":"629713a1e4219537286d9b329063bc507b2e5b43","url":"https://github.com/apache/cxf"},{"original_method":"protected SecurePart addKerberosToken(\n        KerberosToken token, boolean signed, boolean endorsing, boolean encrypting\n    ) throws WSSecurityException {\n        assertToken(token);\n        IncludeTokenType includeToken = token.getIncludeTokenType();\n        if (!isTokenRequired(includeToken)) {\n            return null;\n        }\n\n        final SecurityToken secToken = getSecurityToken();\n        if (secToken == null) {\n            policyNotAsserted(token, \"Could not find KerberosToken\");\n        }\n        \n        // Convert to WSS4J token\n        final KerberosClientSecurityToken wss4jToken = \n            new KerberosClientSecurityToken(secToken.getData(), secToken.getKey(), secToken.getId()) {\n            \n                @Override\n                public Key getSecretKey(String algorithmURI) throws XMLSecurityException {\n                    if (secToken.getSecret() != null && algorithmURI != null && !\"\".equals(algorithmURI)) {\n                        return KeyUtils.prepareSecretKey(algorithmURI, secToken.getSecret());\n                    }\n                    return secToken.getKey();\n                }\n            };\n        wss4jToken.setSha1Identifier(secToken.getSHA1());\n        \n        final SecurityTokenProvider<OutboundSecurityToken> kerberosSecurityTokenProvider =\n            new SecurityTokenProvider<OutboundSecurityToken>() {\n\n                @Override\n                public OutboundSecurityToken getSecurityToken() throws WSSecurityException {\n                    return wss4jToken;\n                }\n\n                @Override\n                public String getId() {\n                    return wss4jToken.getId();\n                }\n            };\n        outboundTokens.put(WSSConstants.PROP_USE_THIS_TOKEN_ID_FOR_KERBEROS, \n                           kerberosSecurityTokenProvider);\n        if (encrypting) {\n            outboundTokens.put(WSSConstants.PROP_USE_THIS_TOKEN_ID_FOR_ENCRYPTION, \n                               kerberosSecurityTokenProvider);\n        }\n        if (endorsing) {\n            outboundTokens.put(WSSConstants.PROP_USE_THIS_TOKEN_ID_FOR_SIGNATURE, \n                               kerberosSecurityTokenProvider);\n        }\n        \n        // Action\n        WSSConstants.Action actionToPerform = WSSConstants.KERBEROS_TOKEN;\n        properties.addAction(actionToPerform);\n        \n        /*\n        if (endorsing) {\n            String action = (String)config.get(ConfigurationConstants.ACTION);\n            config.put(ConfigurationConstants.ACTION,\n                ConfigurationConstants.SIGNATURE_WITH_KERBEROS_TOKEN  + \" \" + action);\n            // config.put(ConfigurationConstants.SIG_KEY_ID, \"DirectReference\");\n        }\n        */\n        \n        SecurePart securePart = new SecurePart(WSSConstants.TAG_wsse_BinarySecurityToken, Modifier.Element);\n        securePart.setIdToSign(wss4jToken.getId());\n        \n        return securePart;\n    }","id":58888,"modified_method":"protected SecurePart addKerberosToken(\n        KerberosToken token, boolean signed, boolean endorsing, boolean encrypting\n    ) throws WSSecurityException {\n        assertToken(token);\n        IncludeTokenType includeToken = token.getIncludeTokenType();\n        if (!isTokenRequired(includeToken)) {\n            return null;\n        }\n\n        final SecurityToken secToken = getSecurityToken();\n        if (secToken == null) {\n            policyNotAsserted(token, \"Could not find KerberosToken\");\n        }\n        \n        // Convert to WSS4J token\n        final KerberosClientSecurityToken wss4jToken = \n            new KerberosClientSecurityToken(secToken.getData(), secToken.getKey(), secToken.getId()) {\n            \n                @Override\n                public Key getSecretKey(String algorithmURI) throws XMLSecurityException {\n                    if (secToken.getSecret() != null && algorithmURI != null && !\"\".equals(algorithmURI)) {\n                        return KeyUtils.prepareSecretKey(algorithmURI, secToken.getSecret());\n                    }\n                    return secToken.getKey();\n                }\n            };\n        wss4jToken.setSha1Identifier(secToken.getSHA1());\n        \n        final SecurityTokenProvider<OutboundSecurityToken> kerberosSecurityTokenProvider =\n            new SecurityTokenProvider<OutboundSecurityToken>() {\n\n                @Override\n                public OutboundSecurityToken getSecurityToken() throws WSSecurityException {\n                    return wss4jToken;\n                }\n\n                @Override\n                public String getId() {\n                    return wss4jToken.getId();\n                }\n            };\n        outboundTokens.put(WSSConstants.PROP_USE_THIS_TOKEN_ID_FOR_KERBEROS, \n                           kerberosSecurityTokenProvider);\n        if (encrypting) {\n            outboundTokens.put(WSSConstants.PROP_USE_THIS_TOKEN_ID_FOR_ENCRYPTION, \n                               kerberosSecurityTokenProvider);\n        }\n        if (endorsing) {\n            outboundTokens.put(WSSConstants.PROP_USE_THIS_TOKEN_ID_FOR_SIGNATURE, \n                               kerberosSecurityTokenProvider);\n        }\n        \n        // Action\n        properties.addAction(WSSConstants.KERBEROS_TOKEN);\n        \n        /*\n        if (endorsing) {\n            String action = (String)config.get(ConfigurationConstants.ACTION);\n            config.put(ConfigurationConstants.ACTION,\n                ConfigurationConstants.SIGNATURE_WITH_KERBEROS_TOKEN  + \" \" + action);\n            // config.put(ConfigurationConstants.SIG_KEY_ID, \"DirectReference\");\n        }\n        */\n        \n        SecurePart securePart = new SecurePart(WSSConstants.TAG_wsse_BinarySecurityToken, Modifier.Element);\n        securePart.setIdToSign(wss4jToken.getId());\n        \n        return securePart;\n    }","commit_id":"629713a1e4219537286d9b329063bc507b2e5b43","url":"https://github.com/apache/cxf"},{"original_method":"protected void configureSignature(\n        AbstractTokenWrapper wrapper, AbstractToken token, boolean attached\n    ) throws WSSecurityException {\n        \n        if (token instanceof X509Token) {\n            X509Token x509Token = (X509Token) token;\n            TokenType tokenType = x509Token.getTokenType();\n            if (tokenType == TokenType.WssX509PkiPathV1Token10\n                || tokenType == TokenType.WssX509PkiPathV1Token11) {\n                properties.setUseSingleCert(false);\n            }\n        }\n        \n        properties.setSignatureKeyIdentifier(\n            ConfigurationConverter.convertKeyIdentifier(getKeyIdentifierType(wrapper, token)));\n\n        // Find out do we also need to include the token as per the Inclusion requirement\n        WSSecurityTokenConstants.KeyIdentifier keyIdentifier = properties.getSignatureKeyIdentifier();\n        if (token instanceof X509Token \n            && isTokenRequired(token.getIncludeTokenType())\n            && (WSSecurityTokenConstants.KeyIdentifier_IssuerSerial.equals(keyIdentifier)\n                || WSSecurityTokenConstants.KeyIdentifier_ThumbprintIdentifier.equals(keyIdentifier)\n                || WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference.equals(\n                    keyIdentifier))) {\n            properties.setIncludeSignatureToken(true);\n        } else {\n            properties.setIncludeSignatureToken(false);\n        }\n\n        String userNameKey = SecurityConstants.SIGNATURE_USERNAME;\n        if (binding instanceof SymmetricBinding) {\n            userNameKey = SecurityConstants.ENCRYPT_USERNAME;\n            properties.setSignatureAlgorithm(\n                       binding.getAlgorithmSuite().getSymmetricSignature());\n        } else {\n            properties.setSignatureAlgorithm(\n                       binding.getAlgorithmSuite().getAsymmetricSignature());\n        }\n        String sigUser = (String)message.getContextualProperty(userNameKey);\n        if (sigUser == null) {\n            sigUser = (String)message.getContextualProperty(SecurityConstants.USERNAME);\n        }\n        if (sigUser != null && properties.getSignatureUser() == null) {\n            properties.setSignatureUser(sigUser);\n        }\n\n        AlgorithmSuiteType algType = binding.getAlgorithmSuite().getAlgorithmSuiteType();\n        properties.setSignatureDigestAlgorithm(algType.getDigest());\n        // sig.setSigCanonicalization(binding.getAlgorithmSuite().getC14n().getValue());\n\n    }","id":58889,"modified_method":"protected void configureSignature(\n        AbstractTokenWrapper wrapper, AbstractToken token, boolean attached\n    ) throws WSSecurityException {\n        \n        if (token instanceof X509Token) {\n            X509Token x509Token = (X509Token) token;\n            TokenType tokenType = x509Token.getTokenType();\n            if (tokenType == TokenType.WssX509PkiPathV1Token10\n                || tokenType == TokenType.WssX509PkiPathV1Token11) {\n                properties.setUseSingleCert(false);\n            }\n        }\n        \n        properties.setSignatureKeyIdentifier(getKeyIdentifierType(wrapper, token));\n\n        // Find out do we also need to include the token as per the Inclusion requirement\n        WSSecurityTokenConstants.KeyIdentifier keyIdentifier = properties.getSignatureKeyIdentifier();\n        if (token instanceof X509Token \n            && isTokenRequired(token.getIncludeTokenType())\n            && (WSSecurityTokenConstants.KeyIdentifier_IssuerSerial.equals(keyIdentifier)\n                || WSSecurityTokenConstants.KeyIdentifier_ThumbprintIdentifier.equals(keyIdentifier)\n                || WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference.equals(\n                    keyIdentifier))) {\n            properties.setIncludeSignatureToken(true);\n        } else {\n            properties.setIncludeSignatureToken(false);\n        }\n\n        String userNameKey = SecurityConstants.SIGNATURE_USERNAME;\n        if (binding instanceof SymmetricBinding) {\n            userNameKey = SecurityConstants.ENCRYPT_USERNAME;\n            properties.setSignatureAlgorithm(\n                       binding.getAlgorithmSuite().getSymmetricSignature());\n        } else {\n            properties.setSignatureAlgorithm(\n                       binding.getAlgorithmSuite().getAsymmetricSignature());\n        }\n        String sigUser = (String)message.getContextualProperty(userNameKey);\n        if (sigUser == null) {\n            sigUser = (String)message.getContextualProperty(SecurityConstants.USERNAME);\n        }\n        if (sigUser != null && properties.getSignatureUser() == null) {\n            properties.setSignatureUser(sigUser);\n        }\n\n        AlgorithmSuiteType algType = binding.getAlgorithmSuite().getAlgorithmSuiteType();\n        properties.setSignatureDigestAlgorithm(algType.getDigest());\n        // sig.setSigCanonicalization(binding.getAlgorithmSuite().getC14n().getValue());\n\n    }","commit_id":"629713a1e4219537286d9b329063bc507b2e5b43","url":"https://github.com/apache/cxf"},{"original_method":"private void doEncryption(AbstractTokenWrapper recToken,\n                                    List<SecurePart> encrParts,\n                                    boolean externalRef) throws SOAPException {\n        //Do encryption\n        if (recToken != null && recToken.getToken() != null && encrParts.size() > 0) {\n            AbstractToken encrToken = recToken.getToken();\n            AlgorithmSuite algorithmSuite = abinding.getAlgorithmSuite();\n            \n            // Action\n            WSSSecurityProperties properties = getProperties();\n            WSSConstants.Action actionToPerform = WSSConstants.ENCRYPT;\n            if (recToken.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                actionToPerform = WSSConstants.ENCRYPT_WITH_DERIVED_KEY;\n            }\n            properties.addAction(actionToPerform);\n            \n            for (SecurePart encPart : encrParts) {\n                properties.addEncryptionPart(encPart);\n            }\n            \n            properties.setEncryptionKeyIdentifier(\n                ConfigurationConverter.convertKeyIdentifier(getKeyIdentifierType(recToken, encrToken)));\n\n            properties.setEncryptionKeyTransportAlgorithm(\n                       algorithmSuite.getAlgorithmSuiteType().getAsymmetricKeyWrap());\n            properties.setEncryptionSymAlgorithm(\n                       algorithmSuite.getAlgorithmSuiteType().getEncryption());\n\n            String encUser = (String)message.getContextualProperty(SecurityConstants.ENCRYPT_USERNAME);\n            if (encUser == null) {\n                encUser = (String)message.getContextualProperty(SecurityConstants.USERNAME);\n            }\n            if (encUser != null && properties.getEncryptionUser() == null) {\n                properties.setEncryptionUser(encUser);\n            }\n            if (ConfigurationConstants.USE_REQ_SIG_CERT.equals(encUser)) {\n                properties.setUseReqSigCertForEncryption(true);\n            }\n            \n            //\n            // Using a stored cert is only suitable for the Issued Token case, where\n            // we're extracting the cert from a SAML Assertion on the provider side\n            //\n            if (!isRequestor() && recToken.getToken() instanceof IssuedToken) {\n                properties.setUseReqSigCertForEncryption(true);\n            }\n        }\n    }","id":58890,"modified_method":"private void doEncryption(AbstractTokenWrapper recToken,\n                                    List<SecurePart> encrParts,\n                                    boolean externalRef) throws SOAPException {\n        //Do encryption\n        if (recToken != null && recToken.getToken() != null && encrParts.size() > 0) {\n            AbstractToken encrToken = recToken.getToken();\n            AlgorithmSuite algorithmSuite = abinding.getAlgorithmSuite();\n            \n            // Action\n            WSSSecurityProperties properties = getProperties();\n            WSSConstants.Action actionToPerform = WSSConstants.ENCRYPT;\n            if (recToken.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                actionToPerform = WSSConstants.ENCRYPT_WITH_DERIVED_KEY;\n            }\n            properties.addAction(actionToPerform);\n            \n            for (SecurePart encPart : encrParts) {\n                properties.addEncryptionPart(encPart);\n            }\n            \n            properties.setEncryptionKeyIdentifier(getKeyIdentifierType(recToken, encrToken));\n\n            properties.setEncryptionKeyTransportAlgorithm(\n                       algorithmSuite.getAlgorithmSuiteType().getAsymmetricKeyWrap());\n            properties.setEncryptionSymAlgorithm(\n                       algorithmSuite.getAlgorithmSuiteType().getEncryption());\n\n            String encUser = (String)message.getContextualProperty(SecurityConstants.ENCRYPT_USERNAME);\n            if (encUser == null) {\n                encUser = (String)message.getContextualProperty(SecurityConstants.USERNAME);\n            }\n            if (encUser != null && properties.getEncryptionUser() == null) {\n                properties.setEncryptionUser(encUser);\n            }\n            if (ConfigurationConstants.USE_REQ_SIG_CERT.equals(encUser)) {\n                properties.setUseReqSigCertForEncryption(true);\n            }\n            \n            //\n            // Using a stored cert is only suitable for the Issued Token case, where\n            // we're extracting the cert from a SAML Assertion on the provider side\n            //\n            if (!isRequestor() && recToken.getToken() instanceof IssuedToken) {\n                properties.setUseReqSigCertForEncryption(true);\n            }\n        }\n    }","commit_id":"629713a1e4219537286d9b329063bc507b2e5b43","url":"https://github.com/apache/cxf"},{"original_method":"private void doEncryption(AbstractTokenWrapper recToken,\n                              List<SecurePart> encrParts,\n                              boolean externalRef) throws SOAPException {\n        //Do encryption\n        if (recToken != null && recToken.getToken() != null) {\n            AbstractToken encrToken = recToken.getToken();\n            AlgorithmSuite algorithmSuite = sbinding.getAlgorithmSuite();\n\n            // Action\n            WSSSecurityProperties properties = getProperties();\n            WSSConstants.Action actionToPerform = WSSConstants.ENCRYPT;\n            if (recToken.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                actionToPerform = WSSConstants.ENCRYPT_WITH_DERIVED_KEY;\n                if (MessageUtils.isRequestor(message) && recToken.getToken() instanceof X509Token) {\n                    properties.setDerivedKeyTokenReference(\n                        ConfigurationConverter.convertDerivedReference(\"EncryptedKey\"));\n                } else {\n                    properties.setDerivedKeyTokenReference(\n                        ConfigurationConverter.convertDerivedReference(\"DirectReference\"));\n                }\n                AlgorithmSuiteType algSuiteType = sbinding.getAlgorithmSuite().getAlgorithmSuiteType();\n                properties.setDerivedEncryptionKeyLength(\n                           algSuiteType.getEncryptionDerivedKeyLength() / 8);\n            }\n\n            if (recToken.getVersion() == SPConstants.SPVersion.SP12) {\n                properties.setUse200512Namespace(true);\n            }\n            \n            for (SecurePart encPart : encrParts) {\n                properties.addEncryptionPart(encPart);\n            }\n            \n            properties.addAction(actionToPerform);\n\n            if (isRequestor()) {\n                properties.setEncryptionKeyIdentifier(\n                    ConfigurationConverter.convertKeyIdentifier(\n                        getKeyIdentifierType(recToken, encrToken)));\n                properties.setDerivedKeyKeyIdentifier(\n                    ConfigurationConverter.convertKeyIdentifier(\"DirectReference\"));\n            } else if (recToken.getToken() instanceof KerberosToken && !isRequestor()) {\n                properties.setEncryptionKeyIdentifier(\n                    ConfigurationConverter.convertKeyIdentifier(\"KerberosSHA1\"));\n                properties.setDerivedKeyKeyIdentifier(\n                    ConfigurationConverter.convertKeyIdentifier(\"KerberosSHA1\"));\n                if (recToken.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                    properties.setEncryptionKeyIdentifier(\n                        ConfigurationConverter.convertKeyIdentifier(\"DirectReference\"));\n                }\n            } else if ((recToken.getToken() instanceof IssuedToken \n                || recToken.getToken() instanceof SecureConversationToken\n                || recToken.getToken() instanceof SpnegoContextToken) && !isRequestor()) {\n                properties.setEncryptionKeyIdentifier(\n                    ConfigurationConverter.convertKeyIdentifier(\"DirectReference\"));\n            } else {\n                properties.setEncryptionKeyIdentifier(\n                    ConfigurationConverter.convertKeyIdentifier(\"EncryptedKeySHA1\"));\n                if (recToken.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                    properties.setDerivedKeyKeyIdentifier(\n                        ConfigurationConverter.convertKeyIdentifier(\"EncryptedKeySHA1\"));\n                    properties.setEncryptionKeyIdentifier(\n                        ConfigurationConverter.convertKeyIdentifier(\"DirectReference\"));\n                    properties.setEncryptSymmetricEncryptionKey(false);\n                }\n            }\n\n            properties.setEncryptionKeyTransportAlgorithm(\n                       algorithmSuite.getAlgorithmSuiteType().getAsymmetricKeyWrap());\n            properties.setEncryptionSymAlgorithm(\n                       algorithmSuite.getAlgorithmSuiteType().getEncryption());\n\n            String encUser = (String)message.getContextualProperty(SecurityConstants.ENCRYPT_USERNAME);\n            if (encUser == null) {\n                encUser = (String)message.getContextualProperty(SecurityConstants.USERNAME);\n            }\n            if (encUser != null && properties.getEncryptionUser() == null) {\n                properties.setEncryptionUser(encUser);\n            }\n            if (ConfigurationConstants.USE_REQ_SIG_CERT.equals(encUser)) {\n                properties.setUseReqSigCertForEncryption(true);\n            }\n            \n            if (encrToken instanceof KerberosToken || encrToken instanceof IssuedToken\n                || encrToken instanceof SpnegoContextToken || encrToken instanceof SecurityContextToken\n                || encrToken instanceof SecureConversationToken) {\n                properties.setEncryptSymmetricEncryptionKey(false);\n            }\n        }\n    }","id":58891,"modified_method":"private void doEncryption(AbstractTokenWrapper recToken,\n                              List<SecurePart> encrParts,\n                              boolean externalRef) throws SOAPException {\n        //Do encryption\n        if (recToken != null && recToken.getToken() != null) {\n            AbstractToken encrToken = recToken.getToken();\n            AlgorithmSuite algorithmSuite = sbinding.getAlgorithmSuite();\n\n            // Action\n            WSSSecurityProperties properties = getProperties();\n            WSSConstants.Action actionToPerform = WSSConstants.ENCRYPT;\n            if (recToken.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                actionToPerform = WSSConstants.ENCRYPT_WITH_DERIVED_KEY;\n                if (MessageUtils.isRequestor(message) && recToken.getToken() instanceof X509Token) {\n                    properties.setDerivedKeyTokenReference(\n                        WSSConstants.DerivedKeyTokenReference.EncryptedKey);\n                } else {\n                    properties.setDerivedKeyTokenReference(\n                        WSSConstants.DerivedKeyTokenReference.DirectReference);\n                }\n                AlgorithmSuiteType algSuiteType = sbinding.getAlgorithmSuite().getAlgorithmSuiteType();\n                properties.setDerivedEncryptionKeyLength(\n                           algSuiteType.getEncryptionDerivedKeyLength() / 8);\n            }\n\n            if (recToken.getVersion() == SPConstants.SPVersion.SP12) {\n                properties.setUse200512Namespace(true);\n            }\n            \n            for (SecurePart encPart : encrParts) {\n                properties.addEncryptionPart(encPart);\n            }\n            \n            properties.addAction(actionToPerform);\n\n            if (isRequestor()) {\n                properties.setEncryptionKeyIdentifier(getKeyIdentifierType(recToken, encrToken));\n                properties.setDerivedKeyKeyIdentifier(\n                    WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference);\n            } else if (recToken.getToken() instanceof KerberosToken && !isRequestor()) {\n                properties.setEncryptionKeyIdentifier(\n                    WSSecurityTokenConstants.KeyIdentifier_KerberosSha1Identifier);\n                properties.setDerivedKeyKeyIdentifier(\n                    WSSecurityTokenConstants.KeyIdentifier_KerberosSha1Identifier);\n                if (recToken.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                    properties.setEncryptionKeyIdentifier(\n                        WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference);\n                }\n            } else if ((recToken.getToken() instanceof IssuedToken \n                || recToken.getToken() instanceof SecureConversationToken\n                || recToken.getToken() instanceof SpnegoContextToken) && !isRequestor()) {\n                properties.setEncryptionKeyIdentifier(\n                    WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference);\n            } else {\n                properties.setEncryptionKeyIdentifier(\n                    WSSecurityTokenConstants.KeyIdentifier_EncryptedKeySha1Identifier);\n                if (recToken.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                    properties.setDerivedKeyKeyIdentifier(\n                        WSSecurityTokenConstants.KeyIdentifier_EncryptedKeySha1Identifier);\n                    properties.setEncryptionKeyIdentifier(\n                        WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference);\n                    properties.setEncryptSymmetricEncryptionKey(false);\n                }\n            }\n\n            properties.setEncryptionKeyTransportAlgorithm(\n                       algorithmSuite.getAlgorithmSuiteType().getAsymmetricKeyWrap());\n            properties.setEncryptionSymAlgorithm(\n                       algorithmSuite.getAlgorithmSuiteType().getEncryption());\n\n            String encUser = (String)message.getContextualProperty(SecurityConstants.ENCRYPT_USERNAME);\n            if (encUser == null) {\n                encUser = (String)message.getContextualProperty(SecurityConstants.USERNAME);\n            }\n            if (encUser != null && properties.getEncryptionUser() == null) {\n                properties.setEncryptionUser(encUser);\n            }\n            if (ConfigurationConstants.USE_REQ_SIG_CERT.equals(encUser)) {\n                properties.setUseReqSigCertForEncryption(true);\n            }\n            \n            if (encrToken instanceof KerberosToken || encrToken instanceof IssuedToken\n                || encrToken instanceof SpnegoContextToken || encrToken instanceof SecurityContextToken\n                || encrToken instanceof SecureConversationToken) {\n                properties.setEncryptSymmetricEncryptionKey(false);\n            }\n        }\n    }","commit_id":"629713a1e4219537286d9b329063bc507b2e5b43","url":"https://github.com/apache/cxf"},{"original_method":"private void doSignature(AbstractTokenWrapper wrapper, AbstractToken policyToken, \n                             SecurityToken tok, List<SecurePart> sigParts) \n        throws WSSecurityException, SOAPException {\n        \n        // Action\n        WSSSecurityProperties properties = getProperties();\n        WSSConstants.Action actionToPerform = WSSConstants.SIGNATURE;\n        if (wrapper.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n            actionToPerform = WSSConstants.SIGNATURE_WITH_DERIVED_KEY;\n            if (MessageUtils.isRequestor(message) && policyToken instanceof X509Token) {\n                properties.setDerivedKeyTokenReference(\n                    ConfigurationConverter.convertDerivedReference(\"EncryptedKey\"));\n            } else {\n                properties.setDerivedKeyTokenReference(\n                    ConfigurationConverter.convertDerivedReference(\"DirectReference\"));\n            }\n            AlgorithmSuiteType algSuiteType = sbinding.getAlgorithmSuite().getAlgorithmSuiteType();\n            properties.setDerivedSignatureKeyLength(\n                       algSuiteType.getSignatureDerivedKeyLength() / 8);\n        }\n        \n        if (policyToken.getVersion() == SPConstants.SPVersion.SP12) {\n            properties.setUse200512Namespace(true);\n        }\n        \n        List<WSSConstants.Action> actionList = properties.getActions();\n        // Add a Signature directly before a Kerberos or SCT, otherwise just append it\n        boolean actionAdded = false;\n        for (int i = 0; i < actionList.size(); i++) {\n            WSSConstants.Action action = actionList.get(i);\n            if (action.equals(WSSConstants.KERBEROS_TOKEN)\n                || action.equals(WSSConstants.SIGNATURE_CONFIRMATION)) {\n                actionList.add(i, actionToPerform);\n                actionAdded = true;\n                break;\n            }\n        }\n        if (!actionAdded) {\n            actionList.add(actionToPerform);\n        }\n\n        for (SecurePart sigPart : sigParts) {\n            properties.addSignaturePart(sigPart);\n        }\n        \n        AbstractToken sigToken = wrapper.getToken();\n        if (sbinding.isProtectTokens() && sigToken instanceof X509Token && isRequestor()) {\n            SecurePart securePart = \n                new SecurePart(new QName(WSSConstants.NS_XMLENC, \"EncryptedKey\"), Modifier.Element);\n            properties.addSignaturePart(securePart);\n        }\n        \n        configureSignature(wrapper, sigToken, false);\n        \n        if (policyToken instanceof X509Token) {\n            properties.setIncludeSignatureToken(false);\n            if (isRequestor()) {\n                properties.setSignatureKeyIdentifier(\n                    ConfigurationConverter.convertKeyIdentifier(\"EncryptedKey\"));\n            } else {\n                properties.setSignatureKeyIdentifier(\n                    ConfigurationConverter.convertKeyIdentifier(\"EncryptedKeySHA1\"));\n                if (wrapper.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                    properties.setDerivedKeyKeyIdentifier(\n                        ConfigurationConverter.convertKeyIdentifier(\"EncryptedKeySHA1\"));\n                    properties.setSignatureKeyIdentifier(\n                        ConfigurationConverter.convertKeyIdentifier(\"DirectReference\"));\n                }\n            }\n        } else if (policyToken instanceof KerberosToken) {\n            if (isRequestor()) {\n                properties.setDerivedKeyKeyIdentifier(\n                    ConfigurationConverter.convertKeyIdentifier(\"DirectReference\"));\n            } else {\n                if (wrapper.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                    properties.setSignatureKeyIdentifier(\n                        ConfigurationConverter.convertKeyIdentifier(\"DirectReference\"));\n                } else {\n                    properties.setSignatureKeyIdentifier(\n                        ConfigurationConverter.convertKeyIdentifier(\"KerberosSHA1\"));\n                }\n                properties.setDerivedKeyKeyIdentifier(\n                    ConfigurationConverter.convertKeyIdentifier(\"KerberosSHA1\"));\n            }\n        } else if (policyToken instanceof IssuedToken || policyToken instanceof SecurityContextToken\n            || policyToken instanceof SecureConversationToken || policyToken instanceof SpnegoContextToken) {\n            if (!isRequestor()) {\n                properties.setIncludeSignatureToken(false);\n            } else {\n                properties.setIncludeSignatureToken(true);\n            }\n            properties.setDerivedKeyKeyIdentifier(\n                ConfigurationConverter.convertKeyIdentifier(\"DirectReference\"));\n        }\n        \n        if (sigToken.getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n            properties.setSignatureAlgorithm(\n                   sbinding.getAlgorithmSuite().getSymmetricSignature());\n        }\n    }","id":58892,"modified_method":"private void doSignature(AbstractTokenWrapper wrapper, AbstractToken policyToken, \n                             SecurityToken tok, List<SecurePart> sigParts) \n        throws WSSecurityException, SOAPException {\n        \n        // Action\n        WSSSecurityProperties properties = getProperties();\n        WSSConstants.Action actionToPerform = WSSConstants.SIGNATURE;\n        if (wrapper.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n            actionToPerform = WSSConstants.SIGNATURE_WITH_DERIVED_KEY;\n            if (MessageUtils.isRequestor(message) && policyToken instanceof X509Token) {\n                properties.setDerivedKeyTokenReference(\n                    WSSConstants.DerivedKeyTokenReference.EncryptedKey);\n            } else {\n                properties.setDerivedKeyTokenReference(\n                    WSSConstants.DerivedKeyTokenReference.DirectReference);\n            }\n            AlgorithmSuiteType algSuiteType = sbinding.getAlgorithmSuite().getAlgorithmSuiteType();\n            properties.setDerivedSignatureKeyLength(\n                       algSuiteType.getSignatureDerivedKeyLength() / 8);\n        }\n        \n        if (policyToken.getVersion() == SPConstants.SPVersion.SP12) {\n            properties.setUse200512Namespace(true);\n        }\n        \n        List<WSSConstants.Action> actionList = properties.getActions();\n        // Add a Signature directly before a Kerberos or SCT, otherwise just append it\n        boolean actionAdded = false;\n        for (int i = 0; i < actionList.size(); i++) {\n            WSSConstants.Action action = actionList.get(i);\n            if (action.equals(WSSConstants.KERBEROS_TOKEN)\n                || action.equals(WSSConstants.SIGNATURE_CONFIRMATION)) {\n                actionList.add(i, actionToPerform);\n                actionAdded = true;\n                break;\n            }\n        }\n        if (!actionAdded) {\n            actionList.add(actionToPerform);\n        }\n\n        for (SecurePart sigPart : sigParts) {\n            properties.addSignaturePart(sigPart);\n        }\n        \n        AbstractToken sigToken = wrapper.getToken();\n        if (sbinding.isProtectTokens() && sigToken instanceof X509Token && isRequestor()) {\n            SecurePart securePart = \n                new SecurePart(new QName(WSSConstants.NS_XMLENC, \"EncryptedKey\"), Modifier.Element);\n            properties.addSignaturePart(securePart);\n        }\n        \n        configureSignature(wrapper, sigToken, false);\n        \n        if (policyToken instanceof X509Token) {\n            properties.setIncludeSignatureToken(false);\n            if (isRequestor()) {\n                properties.setSignatureKeyIdentifier(\n                    WSSecurityTokenConstants.KeyIdentifier_EncryptedKey);\n            } else {\n                properties.setSignatureKeyIdentifier(\n                    WSSecurityTokenConstants.KeyIdentifier_EncryptedKeySha1Identifier);\n                if (wrapper.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                    properties.setDerivedKeyKeyIdentifier(\n                        WSSecurityTokenConstants.KeyIdentifier_EncryptedKeySha1Identifier);\n                    properties.setSignatureKeyIdentifier(\n                        WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference);\n                }\n            }\n        } else if (policyToken instanceof KerberosToken) {\n            if (isRequestor()) {\n                properties.setDerivedKeyKeyIdentifier(\n                    WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference);\n            } else {\n                if (wrapper.getToken().getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n                    properties.setSignatureKeyIdentifier(\n                        WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference);\n                } else {\n                    properties.setSignatureKeyIdentifier(\n                        WSSecurityTokenConstants.KeyIdentifier_KerberosSha1Identifier);\n                }\n                properties.setDerivedKeyKeyIdentifier(\n                    WSSecurityTokenConstants.KeyIdentifier_KerberosSha1Identifier);\n            }\n        } else if (policyToken instanceof IssuedToken || policyToken instanceof SecurityContextToken\n            || policyToken instanceof SecureConversationToken || policyToken instanceof SpnegoContextToken) {\n            if (!isRequestor()) {\n                properties.setIncludeSignatureToken(false);\n            } else {\n                properties.setIncludeSignatureToken(true);\n            }\n            properties.setDerivedKeyKeyIdentifier(\n                WSSecurityTokenConstants.KeyIdentifier_SecurityTokenDirectReference);\n        }\n        \n        if (sigToken.getDerivedKeys() == DerivedKeys.RequireDerivedKeys) {\n            properties.setSignatureAlgorithm(\n                   sbinding.getAlgorithmSuite().getSymmetricSignature());\n        }\n    }","commit_id":"629713a1e4219537286d9b329063bc507b2e5b43","url":"https://github.com/apache/cxf"},{"original_method":"public long skip(long numBytes) throws IOException {\n        long skip = in.skip(numBytes);\n        if (_pullFromOutbound)\n            _context.bandwidthLimiter().requestOutbound((int)skip, _peerSource);\n        else\n            _context.bandwidthLimiter().requestInbound((int)skip, _peerSource);\n        return skip;\n    }","id":58893,"modified_method":"public long skip(long numBytes) throws IOException {\n        long skip = in.skip(numBytes);\n        FIFOBandwidthLimiter.Request req = null;\n        if (_pullFromOutbound)\n            req = _context.bandwidthLimiter().requestOutbound((int)skip, _peerSource);\n        else\n            req = _context.bandwidthLimiter().requestInbound((int)skip, _peerSource);\n        \n        while ( (req.getPendingInboundRequested() > 0) ||\n                (req.getPendingOutboundRequested() > 0) ) {\n            // we still haven't been authorized for everything, keep on waiting\n            req.waitForNextAllocation();\n        }\n        return skip;\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public int read() throws IOException {\n        if (_pullFromOutbound)\n            _context.bandwidthLimiter().requestOutbound(1, _peerSource);\n        else\n            _context.bandwidthLimiter().requestInbound(1, _peerSource);\n        return in.read();\n    }","id":58894,"modified_method":"public int read() throws IOException {\n        FIFOBandwidthLimiter.Request req = null;\n        if (_pullFromOutbound)\n            req = _context.bandwidthLimiter().requestOutbound(1, _peerSource);\n        else\n            req = _context.bandwidthLimiter().requestInbound(1, _peerSource);\n        \n        // since its only a single byte, we dont need to loop\n        // or check how much was allocated\n        req.waitForNextAllocation();\n        return in.read();\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public int read(byte dest[]) throws IOException {\n        int read = in.read(dest);\n        if (_pullFromOutbound)\n            _context.bandwidthLimiter().requestOutbound(read, _peerSource);\n        else\n            _context.bandwidthLimiter().requestInbound(read, _peerSource);\n        return read;\n    }","id":58895,"modified_method":"public int read(byte dest[]) throws IOException {\n        return read(dest, 0, dest.length);\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public int read(byte dest[], int off, int len) throws IOException {\n        int read = in.read(dest, off, len);\n        if (_pullFromOutbound)\n            _context.bandwidthLimiter().requestOutbound(read, _peerSource);\n        else\n            _context.bandwidthLimiter().requestInbound(read, _peerSource);\n        return read;\n    }","id":58896,"modified_method":"public int read(byte dest[], int off, int len) throws IOException {\n        int read = in.read(dest, off, len);\n        FIFOBandwidthLimiter.Request req = null;\n        if (_pullFromOutbound)\n            req = _context.bandwidthLimiter().requestOutbound(read, _peerSource);\n        else\n            req = _context.bandwidthLimiter().requestInbound(read, _peerSource);\n        \n        while ( (req.getPendingInboundRequested() > 0) ||\n                (req.getPendingOutboundRequested() > 0) ) {\n            // we still haven't been authorized for everything, keep on waiting\n            req.waitForNextAllocation();\n        }\n        return read;\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public void write(int val) throws IOException {\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Writing a single byte!\", new Exception(\"Single byte from...\"));\n        _context.bandwidthLimiter().requestOutbound(1, _peerTarget);\n        out.write(val);\n    }","id":58897,"modified_method":"public void write(int val) throws IOException {\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Writing a single byte!\", new Exception(\"Single byte from...\"));\n        FIFOBandwidthLimiter.Request req = _context.bandwidthLimiter().requestOutbound(1, _peerTarget);\n        // only a single byte, no need to loop\n        req.waitForNextAllocation();\n        out.write(val);\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public void write(byte src[], int off, int len) throws IOException {\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Writing \" + len + \" bytes\");\n        if (src == null) return;\n        if (len <= 0) return;\n        if (len + off > src.length)\n            throw new IllegalArgumentException(\"wtf are you thinking?  len=\" + len \n                                               + \", off=\" + off + \", data=\" + src.length);\n        _context.bandwidthLimiter().requestOutbound(len, _peerTarget);\n        out.write(src, off, len);\n    }","id":58898,"modified_method":"public void write(byte src[], int off, int len) throws IOException {\n        if (_log.shouldLog(Log.DEBUG))\n            _log.debug(\"Writing \" + len + \" bytes\");\n        if (src == null) return;\n        if (len <= 0) return;\n        if (len + off > src.length)\n            throw new IllegalArgumentException(\"wtf are you thinking?  len=\" + len \n                                               + \", off=\" + off + \", data=\" + src.length);\n        FIFOBandwidthLimiter.Request req = _context.bandwidthLimiter().requestOutbound(len, _peerTarget);\n        \n        int written = 0;\n        while (written < len) {\n            int allocated = len - req.getPendingOutboundRequested();\n            int toWrite = allocated - written;\n            if (toWrite > 0) {\n                out.write(src, off + written, toWrite);\n                written += toWrite;\n            }\n            req.waitForNextAllocation();\n        }\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public int getRequestedInboundBytes() { return _in; }","id":58899,"modified_method":"public int getTotalInboundRequested() { return _inTotal; }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public void renderStatusHTML(OutputStream out) throws IOException {\n        long now = _context.clock().now();\n        StringBuffer buf = new StringBuffer(4096);\n        buf.append(\"<br /><b>Pending bandwidth requests (with \");\n        buf.append(_availableInboundBytes).append('/');\n        buf.append(_availableOutboundBytes).append(\" bytes inbound/outbound available):<\/b><ul>\");\n        buf.append(\"<li>Inbound requests: <ol>\");\n        synchronized (_pendingInboundRequests) {\n            for (int i = 0; i < _pendingInboundRequests.size(); i++) {\n                BandwidthRequest req = (BandwidthRequest)_pendingInboundRequests.get(i);\n                buf.append(\"<li>\").append(req.getRequestName()).append(\" for \");\n                buf.append(req.getRequestedInboundBytes()).append(\" bytes \");\n                buf.append(\"requested \").append(now-req.getRequestTime());\n                buf.append(\"ms ago<\/li>\\n\");\n            }\n        }\n        buf.append(\"<\/ol><\/li><li>Outbound requests: <ol>\\n\");\n        synchronized (_pendingOutboundRequests) {\n            for (int i = 0; i < _pendingOutboundRequests.size(); i++) {\n                BandwidthRequest req = (BandwidthRequest)_pendingOutboundRequests.get(i);\n                buf.append(\"<li>\").append(req.getRequestName()).append(\" for \");\n                buf.append(req.getRequestedOutboundBytes()).append(\" bytes \");\n                buf.append(\"requested \").append(now-req.getRequestTime());\n                buf.append(\"ms ago<\/li>\\n\");\n            }\n        }\n        buf.append(\"<\/ol><\/li><\/ul>\\n\");\n        out.write(buf.toString().getBytes());\n    }","id":58900,"modified_method":"public void renderStatusHTML(OutputStream out) throws IOException {\n        long now = _context.clock().now();\n        StringBuffer buf = new StringBuffer(4096);\n        buf.append(\"<br /><b>Pending bandwidth requests (with \");\n        buf.append(_availableInboundBytes).append('/');\n        buf.append(_availableOutboundBytes).append(\" bytes inbound/outbound available):<\/b><ul>\");\n        buf.append(\"<li>Inbound requests: <ol>\");\n        synchronized (_pendingInboundRequests) {\n            for (int i = 0; i < _pendingInboundRequests.size(); i++) {\n                Request req = (Request)_pendingInboundRequests.get(i);\n                buf.append(\"<li>\").append(req.getRequestName()).append(\" for \");\n                buf.append(req.getTotalInboundRequested()).append(\" bytes \");\n                buf.append(\"requested (\").append(req.getPendingInboundRequested()).append(\" pending) as of \");\n                buf.append(now-req.getRequestTime());\n                buf.append(\"ms ago<\/li>\\n\");\n            }\n        }\n        buf.append(\"<\/ol><\/li><li>Outbound requests: <ol>\\n\");\n        synchronized (_pendingOutboundRequests) {\n            for (int i = 0; i < _pendingOutboundRequests.size(); i++) {\n                Request req = (Request)_pendingOutboundRequests.get(i);\n                buf.append(\"<li>\").append(req.getRequestName()).append(\" for \");\n                buf.append(req.getTotalOutboundRequested()).append(\" bytes \");\n                buf.append(\"requested (\").append(req.getPendingOutboundRequested()).append(\" pending) as of \");\n                buf.append(now-req.getRequestTime());\n                buf.append(\"ms ago<\/li>\\n\");\n            }\n        }\n        buf.append(\"<\/ol><\/li><\/ul>\\n\");\n        out.write(buf.toString().getBytes());\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public SimpleRequest(int in, int out, String target) {\n            _in = in;\n            _out = out;\n            _target = target;\n            _alreadyGranted = false;\n            _requestId = ++__requestId;\n            _requestTime = _context.clock().now();\n        }","id":58901,"modified_method":"public SimpleRequest(int in, int out, String target) {\n            _inTotal = in;\n            _outTotal = out;\n            _inAllocated = 0;\n            _outAllocated = 0;\n            _target = target;\n            _requestId = ++__requestId;\n            _requestTime = _context.clock().now();\n        }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public int getRequestedOutboundBytes() { return _out; }","id":58902,"modified_method":"public int getTotalOutboundRequested() { return _outTotal; }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * Request some bytes, blocking until they become available\n     *\n     */\n    public void requestInbound(int bytesIn, String purpose) {\n        addInboundRequest(new SimpleRequest(bytesIn, 0, purpose));\n    }","id":58903,"modified_method":"/**\n     * Request some bytes, blocking until they become available\n     *\n     */\n    public Request requestInbound(int bytesIn, String purpose) {\n        SimpleRequest req = new SimpleRequest(bytesIn, 0, purpose);\n        synchronized (_pendingInboundRequests) {\n            _pendingInboundRequests.add(req);\n        }\n        satisfyInboundRequests();\n        return req;\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private final void satisfyOutboundRequests() {\n        synchronized (_pendingOutboundRequests) {\n            while (_pendingOutboundRequests.size() > 0) {\n                BandwidthRequest req = (BandwidthRequest)_pendingOutboundRequests.get(0);\n                if ( (req.getRequestedOutboundBytes() <= _availableOutboundBytes) || (_outboundUnlimited) ) {\n                     _pendingOutboundRequests.remove(0);\n                     if (!_outboundUnlimited)\n                        _availableOutboundBytes -= req.getRequestedOutboundBytes();\n                     _totalAllocatedOutboundBytes += req.getRequestedOutboundBytes();\n                     if (_log.shouldLog(Log.INFO))\n                         _log.info(\"Granting outbound request \" + req.getRequestName() + \" for \" \n                                    + req.getRequestedOutboundBytes() + \" bytes (waited \" \n                                    + (_context.clock().now() - req.getRequestTime()) \n                                    + \"ms) pending \" + (_pendingOutboundRequests.size()-1));\n                     // i hate nested synchronization\n                     synchronized (req.getAvailabilityMonitor()) {\n                        req.grantRequest();\n                        req.getAvailabilityMonitor().notifyAll();\n                     }\n                } else {\n                    // there isn't sufficient bandwidth for the first request, \n                    // so since we're a FIFO limiter, everyone waits.  If we were a \n                    // best fit or ASAP limiter, we'd continue on iterating to see\n                    // if anyone would be satisfied with the current availability\n                    if (_log.shouldLog(Log.WARN))\n                        _log.warn(\"Still denying the first outbound request (\" + req.getRequestName() \n                                    + \" for \" \n                                    + req.getRequestedOutboundBytes() + \" bytes (available \"\n                                    + _availableInboundBytes + \"/\" + _availableOutboundBytes + \" in/out) (waited \" \n                                    + (_context.clock().now() - req.getRequestTime()) \n                                    + \"ms so far) pending \" + (_pendingOutboundRequests.size()));\n                    return;\n                }\n            }\n            //if (_log.shouldLog(Log.INFO))\n            //    _log.info(\"Nothing pending\");\n        }\n    }","id":58904,"modified_method":"private final void satisfyOutboundRequests() {\n        List satisfied = null;\n        synchronized (_pendingOutboundRequests) {\n            while (_pendingOutboundRequests.size() > 0) {\n                SimpleRequest req = (SimpleRequest)_pendingOutboundRequests.get(0);\n                if (_outboundUnlimited) {\n                    int allocated = req.getPendingOutboundRequested();\n                    _totalAllocatedOutboundBytes += allocated;\n                    req.allocateBytes(0, allocated);\n                    if (satisfied == null)\n                        satisfied = new ArrayList(2);\n                    satisfied.add(req);\n                    if (_log.shouldLog(Log.INFO))\n                         _log.info(\"Granting outbound request \" + req.getRequestName() + \" fully for \" \n                                    + req.getTotalOutboundRequested() + \" bytes (waited \" \n                                    + (_context.clock().now() - req.getRequestTime()) \n                                    + \"ms) pending \" + _pendingOutboundRequests.size());\n                    // if we're unlimited, we always grant it fully, so there's no need to keep it around\n                    _pendingOutboundRequests.remove(0);\n                } else if (_availableOutboundBytes > 0) {\n                    int requested = req.getPendingOutboundRequested();\n                    int allocated = 0;\n                    if (_availableOutboundBytes > requested) \n                        allocated = requested;\n                    else\n                        allocated = _availableOutboundBytes;\n                    _availableOutboundBytes -= allocated;\n                    req.allocateBytes(0, allocated);\n                    if (satisfied == null)\n                        satisfied = new ArrayList(2);\n                    satisfied.add(req);\n                    if (req.getPendingOutboundRequested() > 0) {\n                        if (_log.shouldLog(Log.INFO))\n                             _log.info(\"Allocating \" + allocated + \" bytes outbound as a partial grant to \" \n                                        + req.getRequestName() + \" (wanted \" \n                                        + req.getTotalOutboundRequested() + \" bytes, waited \" \n                                        + (_context.clock().now() - req.getRequestTime()) \n                                        + \"ms) pending \" + _pendingOutboundRequests.size());\n                    } else {\n                        if (_log.shouldLog(Log.INFO))\n                             _log.info(\"Allocating \" + allocated + \" bytes outbound to finish the partial grant to \" \n                                        + req.getRequestName() + \" (total \" \n                                        + req.getTotalOutboundRequested() + \" bytes, waited \" \n                                        + (_context.clock().now() - req.getRequestTime()) \n                                        + \"ms) pending \" + _pendingOutboundRequests.size());\n                        _pendingOutboundRequests.remove(0);\n                    }\n                } else {\n                    // no bandwidth available\n                    if (_log.shouldLog(Log.WARN))\n                        _log.warn(\"Still denying the first outbound request (\" + req.getRequestName() \n                                    + \" for \" \n                                    + req.getTotalOutboundRequested() + \" bytes (available \"\n                                    + _availableInboundBytes + \"/\" + _availableOutboundBytes + \" in/out) (waited \" \n                                    + (_context.clock().now() - req.getRequestTime()) \n                                    + \"ms so far) pending \" + (_pendingOutboundRequests.size()));\n                    break;\n                }\n            }\n        }\n        \n        if (satisfied != null) {\n            for (int i = 0; i < satisfied.size(); i++) {\n                SimpleRequest req = (SimpleRequest)satisfied.get(i);\n                req.notifyAllocation();\n            }\n        }\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public void setMaxOutboundBytes(long numBytes) { _maxOutboundBytes = numBytes; }","id":58905,"modified_method":"public void setMaxOutboundBytes(int numBytes) { _maxOutboundBytes = numBytes; }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"/**\n     * Request some bytes, blocking until they become available\n     *\n     */\n    public void requestOutbound(int bytesOut, String purpose) {\n        addOutboundRequest(new SimpleRequest(0, bytesOut, purpose));\n    }","id":58906,"modified_method":"/**\n     * Request some bytes, blocking until they become available\n     *\n     */\n    public Request requestOutbound(int bytesOut, String purpose) {\n        SimpleRequest req = new SimpleRequest(0, bytesOut, purpose);\n        synchronized (_pendingOutboundRequests) {\n            _pendingOutboundRequests.add(req);\n        }\n        satisfyOutboundRequests();\n        return req;\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private final void satisfyInboundRequests() {\n        synchronized (_pendingInboundRequests) {\n            while (_pendingInboundRequests.size() > 0) {\n                BandwidthRequest req = (BandwidthRequest)_pendingInboundRequests.get(0);\n                if ( (req.getRequestedInboundBytes() <= _availableInboundBytes) || (_inboundUnlimited) ) {\n                     _pendingInboundRequests.remove(0);\n                     if (!_inboundUnlimited)\n                        _availableInboundBytes -= req.getRequestedInboundBytes();\n                     _totalAllocatedInboundBytes += req.getRequestedInboundBytes();\n                     if (_log.shouldLog(Log.INFO))\n                         _log.info(\"Granting inbound request \" + req.getRequestName() + \" for \" \n                                    + req.getRequestedInboundBytes() + \" bytes (waited \" \n                                    + (_context.clock().now() - req.getRequestTime()) \n                                    + \"ms) pending \" + _pendingInboundRequests.size());\n                     // i hate nested synchronization\n                     synchronized (req.getAvailabilityMonitor()) {\n                        req.grantRequest();\n                        req.getAvailabilityMonitor().notifyAll();\n                     }\n                } else {\n                    // there isn't sufficient bandwidth for the first request, \n                    // so since we're a FIFO limiter, everyone waits.  If we were a \n                    // best fit or ASAP limiter, we'd continue on iterating to see\n                    // if anyone would be satisfied with the current availability\n                    if (_log.shouldLog(Log.WARN))\n                        _log.warn(\"Still denying the first inbound request (\" + req.getRequestName() \n                                    + \" for \" \n                                    + req.getRequestedInboundBytes() + \" bytes (available \"\n                                    + _availableInboundBytes + \"/\" + _availableOutboundBytes + \" in/out) (waited \" \n                                    + (_context.clock().now() - req.getRequestTime()) \n                                    + \"ms so far) pending \" + (_pendingInboundRequests.size()));\n                    return;\n                }\n            }\n            //if (_log.shouldLog(Log.INFO))\n            //    _log.info(\"Nothing pending\");\n        }\n    }","id":58907,"modified_method":"private final void satisfyInboundRequests() {\n        List satisfied = null;\n        synchronized (_pendingInboundRequests) {\n            while (_pendingInboundRequests.size() > 0) {\n                SimpleRequest req = (SimpleRequest)_pendingInboundRequests.get(0);\n                if (_inboundUnlimited) {\n                    int allocated = req.getPendingInboundRequested();\n                    _totalAllocatedInboundBytes += allocated;\n                    req.allocateBytes(allocated, 0);\n                    if (satisfied == null)\n                        satisfied = new ArrayList(2);\n                    satisfied.add(req);\n                    if (_log.shouldLog(Log.INFO))\n                         _log.info(\"Granting inbound request \" + req.getRequestName() + \" fully for \" \n                                    + req.getTotalInboundRequested() + \" bytes (waited \" \n                                    + (_context.clock().now() - req.getRequestTime()) \n                                    + \"ms) pending \" + _pendingInboundRequests.size());\n                    // if we're unlimited, we always grant it fully, so there's no need to keep it around\n                    _pendingInboundRequests.remove(0);\n                } else if (_availableInboundBytes > 0) {\n                    int requested = req.getPendingInboundRequested();\n                    int allocated = 0;\n                    if (_availableInboundBytes > requested) \n                        allocated = requested;\n                    else\n                        allocated = _availableInboundBytes;\n                    _availableInboundBytes -= allocated;\n                    req.allocateBytes(allocated, 0);\n                    if (satisfied == null)\n                        satisfied = new ArrayList(2);\n                    satisfied.add(req);\n                    if (req.getPendingInboundRequested() > 0) {\n                        if (_log.shouldLog(Log.INFO))\n                             _log.info(\"Allocating \" + allocated + \" bytes inbound as a partial grant to \" \n                                        + req.getRequestName() + \" (wanted \" \n                                        + req.getTotalInboundRequested() + \" bytes, waited \" \n                                        + (_context.clock().now() - req.getRequestTime()) \n                                        + \"ms) pending \" + _pendingInboundRequests.size());\n                    } else {\n                        if (_log.shouldLog(Log.INFO))\n                             _log.info(\"Allocating \" + allocated + \" bytes inbound to finish the partial grant to \" \n                                        + req.getRequestName() + \" (total \" \n                                        + req.getTotalInboundRequested() + \" bytes, waited \" \n                                        + (_context.clock().now() - req.getRequestTime()) \n                                        + \"ms) pending \" + _pendingInboundRequests.size());\n                        _pendingInboundRequests.remove(0);\n                    }\n                } else {\n                    // no bandwidth available\n                    if (_log.shouldLog(Log.WARN))\n                        _log.warn(\"Still denying the first inbound request (\" + req.getRequestName() \n                                    + \" for \" \n                                    + req.getTotalInboundRequested() + \" bytes (available \"\n                                    + _availableInboundBytes + \"/\" + _availableOutboundBytes + \" in/out) (waited \" \n                                    + (_context.clock().now() - req.getRequestTime()) \n                                    + \"ms so far) pending \" + (_pendingInboundRequests.size()));\n                    break;\n                }\n            }\n        }\n        \n        if (satisfied != null) {\n            for (int i = 0; i < satisfied.size(); i++) {\n                SimpleRequest req = (SimpleRequest)satisfied.get(i);\n                req.notifyAllocation();\n            }\n        }\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public void setMaxInboundBytes(long numBytes) { _maxInboundBytes = numBytes; }","id":58908,"modified_method":"public void setMaxInboundBytes(int numBytes) { _maxInboundBytes = numBytes; }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private void updateInboundPeak() {\n        String inBwStr = _context.getProperty(PROP_INBOUND_BANDWIDTH_PEAK);\n        if ( (inBwStr != null) && \n             (inBwStr.trim().length() > 0) && \n             (!(inBwStr.equals(String.valueOf(_limiter.getMaxInboundBytes())))) ) {\n            // peak bw was specified *and* changed\n            try {\n                long in = Long.parseLong(inBwStr);\n                if (in >= MIN_INBOUND_BANDWIDTH_PEAK)\n                    _limiter.setMaxInboundBytes(in * 1024);\n                else\n                    _limiter.setMaxInboundBytes(MIN_INBOUND_BANDWIDTH_PEAK * 1024);\n            } catch (NumberFormatException nfe) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Invalid inbound bandwidth burst limit [\" + inBwStr \n                              + \"]\");\n            }\n        } else {\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"Inbound bandwidth burst limits not specified in the config via \" \n                           + PROP_INBOUND_BANDWIDTH_PEAK);\n        }\n    }","id":58909,"modified_method":"private void updateInboundPeak() {\n        String inBwStr = _context.getProperty(PROP_INBOUND_BANDWIDTH_PEAK);\n        if ( (inBwStr != null) && \n             (inBwStr.trim().length() > 0) && \n             (!(inBwStr.equals(String.valueOf(_limiter.getMaxInboundBytes())))) ) {\n            // peak bw was specified *and* changed\n            try {\n                int in = Integer.parseInt(inBwStr);\n                if (in >= MIN_INBOUND_BANDWIDTH_PEAK) {\n                    if (in < _inboundKBytesPerSecond)\n                        _limiter.setMaxInboundBytes(_inboundKBytesPerSecond * 1024);\n                    else \n                        _limiter.setMaxInboundBytes(in * 1024);\n                } else {\n                    if (MIN_INBOUND_BANDWIDTH_PEAK < _inboundKBytesPerSecond) \n                        _limiter.setMaxInboundBytes(_inboundKBytesPerSecond * 1024);\n                    else\n                        _limiter.setMaxInboundBytes(MIN_INBOUND_BANDWIDTH_PEAK * 1024);\n                }\n            } catch (NumberFormatException nfe) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Invalid inbound bandwidth burst limit [\" + inBwStr \n                              + \"]\");\n            }\n        } else {\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"Inbound bandwidth burst limits not specified in the config via \" \n                           + PROP_INBOUND_BANDWIDTH_PEAK);\n        }\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private void updateInboundRate() {\n        String inBwStr = _context.getProperty(PROP_INBOUND_BANDWIDTH);\n        if ( (inBwStr != null) && \n             (inBwStr.trim().length() > 0) && \n             (!(inBwStr.equals(String.valueOf(_inboundKBytesPerSecond)))) ) {\n            // bandwidth was specified *and* changed\n            try {\n                long in = Long.parseLong(inBwStr);\n                if ( (in <= 0) || (in > MIN_INBOUND_BANDWIDTH) ) \n                    _inboundKBytesPerSecond = in;\n                else\n                    _inboundKBytesPerSecond = MIN_INBOUND_BANDWIDTH;\n            } catch (NumberFormatException nfe) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Invalid inbound bandwidth limit [\" + inBwStr \n                              + \"], keeping as \" + _inboundKBytesPerSecond);\n            }\n        } else {\n            if ( (inBwStr == null) && (_log.shouldLog(Log.DEBUG)) )\n                _log.debug(\"Inbound bandwidth limits not specified in the config via \" + PROP_INBOUND_BANDWIDTH);\n        }\n    }","id":58910,"modified_method":"private void updateInboundRate() {\n        String inBwStr = _context.getProperty(PROP_INBOUND_BANDWIDTH);\n        if ( (inBwStr != null) && \n             (inBwStr.trim().length() > 0) && \n             (!(inBwStr.equals(String.valueOf(_inboundKBytesPerSecond)))) ) {\n            // bandwidth was specified *and* changed\n            try {\n                int in = Integer.parseInt(inBwStr);\n                if ( (in <= 0) || (in > MIN_INBOUND_BANDWIDTH) ) \n                    _inboundKBytesPerSecond = in;\n                else\n                    _inboundKBytesPerSecond = MIN_INBOUND_BANDWIDTH;\n            } catch (NumberFormatException nfe) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Invalid inbound bandwidth limit [\" + inBwStr \n                              + \"], keeping as \" + _inboundKBytesPerSecond);\n            }\n        } else {\n            if ( (inBwStr == null) && (_log.shouldLog(Log.DEBUG)) )\n                _log.debug(\"Inbound bandwidth limits not specified in the config via \" + PROP_INBOUND_BANDWIDTH);\n        }\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private void updateOutboundPeak() {\n        String outBwStr = _context.getProperty(PROP_OUTBOUND_BANDWIDTH_PEAK);\n        if ( (outBwStr != null) && \n             (outBwStr.trim().length() > 0) && \n             (!(outBwStr.equals(String.valueOf(_limiter.getMaxOutboundBytes())))) ) {\n            // peak bw was specified *and* changed\n            try {\n                long out = Long.parseLong(outBwStr);\n                if (out >= MIN_OUTBOUND_BANDWIDTH_PEAK)\n                    _limiter.setMaxOutboundBytes(out * 1024);\n                else\n                    _limiter.setMaxOutboundBytes(MIN_OUTBOUND_BANDWIDTH_PEAK * 1024);\n            } catch (NumberFormatException nfe) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Invalid outbound bandwidth burst limit [\" + outBwStr \n                              + \"]\");\n            }\n        } else {\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"Outbound bandwidth burst limits not specified in the config via \" \n                           + PROP_OUTBOUND_BANDWIDTH_PEAK);\n        }\n    }","id":58911,"modified_method":"private void updateOutboundPeak() {\n        String outBwStr = _context.getProperty(PROP_OUTBOUND_BANDWIDTH_PEAK);\n        if ( (outBwStr != null) && \n             (outBwStr.trim().length() > 0) && \n             (!(outBwStr.equals(String.valueOf(_limiter.getMaxOutboundBytes())))) ) {\n            // peak bw was specified *and* changed\n            try {\n                int out = Integer.parseInt(outBwStr);\n                if (out >= MIN_OUTBOUND_BANDWIDTH_PEAK) {\n                    if (out < _outboundKBytesPerSecond)\n                        _limiter.setMaxOutboundBytes(_outboundKBytesPerSecond * 1024);\n                    else\n                        _limiter.setMaxOutboundBytes(out * 1024);\n                } else {\n                    if (MIN_OUTBOUND_BANDWIDTH_PEAK < _outboundKBytesPerSecond)\n                        _limiter.setMaxOutboundBytes(_outboundKBytesPerSecond * 1024);\n                    else\n                        _limiter.setMaxOutboundBytes(MIN_OUTBOUND_BANDWIDTH_PEAK * 1024);\n                }\n            } catch (NumberFormatException nfe) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Invalid outbound bandwidth burst limit [\" + outBwStr \n                              + \"]\");\n            }\n        } else {\n            if (_log.shouldLog(Log.DEBUG))\n                _log.debug(\"Outbound bandwidth burst limits not specified in the config via \" \n                           + PROP_OUTBOUND_BANDWIDTH_PEAK);\n        }\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"private void updateOutboundRate() {\n        String outBwStr = _context.getProperty(PROP_OUTBOUND_BANDWIDTH);\n        \n        if ( (outBwStr != null) && \n             (outBwStr.trim().length() > 0) && \n             (!(outBwStr.equals(String.valueOf(_outboundKBytesPerSecond)))) ) {\n            // bandwidth was specified *and* changed\n            try {\n                long out = Long.parseLong(outBwStr);\n                if ( (out <= 0) || (out >= MIN_OUTBOUND_BANDWIDTH) )\n                    _outboundKBytesPerSecond = out;\n                else\n                    _outboundKBytesPerSecond = MIN_OUTBOUND_BANDWIDTH;\n            } catch (NumberFormatException nfe) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Invalid outbound bandwidth limit [\" + outBwStr \n                              + \"], keeping as \" + _outboundKBytesPerSecond);\n            }\n        } else {\n            if ( (outBwStr == null) && (_log.shouldLog(Log.DEBUG)) )\n                _log.debug(\"Outbound bandwidth limits not specified in the config via \" + PROP_OUTBOUND_BANDWIDTH);\n        }\n    }","id":58912,"modified_method":"private void updateOutboundRate() {\n        String outBwStr = _context.getProperty(PROP_OUTBOUND_BANDWIDTH);\n        \n        if ( (outBwStr != null) && \n             (outBwStr.trim().length() > 0) && \n             (!(outBwStr.equals(String.valueOf(_outboundKBytesPerSecond)))) ) {\n            // bandwidth was specified *and* changed\n            try {\n                int out = Integer.parseInt(outBwStr);\n                if ( (out <= 0) || (out >= MIN_OUTBOUND_BANDWIDTH) )\n                    _outboundKBytesPerSecond = out;\n                else\n                    _outboundKBytesPerSecond = MIN_OUTBOUND_BANDWIDTH;\n            } catch (NumberFormatException nfe) {\n                if (_log.shouldLog(Log.WARN))\n                    _log.warn(\"Invalid outbound bandwidth limit [\" + outBwStr \n                              + \"], keeping as \" + _outboundKBytesPerSecond);\n            }\n        } else {\n            if ( (outBwStr == null) && (_log.shouldLog(Log.DEBUG)) )\n                _log.debug(\"Outbound bandwidth limits not specified in the config via \" + PROP_OUTBOUND_BANDWIDTH);\n        }\n    }","commit_id":"1375d01bdf7c56577aa23b346c8e06ed474ca5b1","url":"https://github.com/i2p/i2p.i2p"},{"original_method":"public static Map testServiceLockWaitTimeoutRetryWaiter(DispatchContext dctx, Map context) {\n        GenericDelegator delegator = dctx.getDelegator();\n\n        try {\n            // TRY grab entity SVCLWTRT by looking up and changing, should get a lock wait timeout exception because of the Grabber thread\n            GenericValue testingType = delegator.findByPrimaryKey(\"TestingType\", UtilMisc.toMap(\"testingTypeId\", \"SVCLWTRT\"));\n            testingType.set(\"description\", \"New description for SVCLWTRT\");\n            testingType.store();\n            \n        } catch (GenericEntityException e) {\n            String errMsg = \"Entity Engine Exception running lock wait timeout test Waiter thread: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        }\n\n        return ServiceUtil.returnSuccess();\n    }","id":58913,"modified_method":"public static Map testServiceLockWaitTimeoutRetryWaiter(DispatchContext dctx, Map context) {\n        GenericDelegator delegator = dctx.getDelegator();\n\n        try {\n            // wait for a small amount of time to make sure the grabber does it's thing first\n            UtilMisc.staticWait(100);\n            \n            Debug.logInfo(\"In testServiceLockWaitTimeoutRetryWaiter about to update SVCLWTRT, wait starts here\", module);\n            \n            // TRY grab entity SVCLWTRT by looking up and changing, should get a lock wait timeout exception because of the Grabber thread\n            GenericValue testingType = delegator.findByPrimaryKey(\"TestingType\", UtilMisc.toMap(\"testingTypeId\", \"SVCLWTRT\"));\n            testingType.set(\"description\", \"New description for SVCLWTRT from Waiter service, this is the value that should be there.\");\n            testingType.store();\n            \n            Debug.logInfo(\"In testServiceLockWaitTimeoutRetryWaiter successfully updated SVCLWTRT\", module);\n        } catch (GenericEntityException e) {\n            String errMsg = \"Entity Engine Exception running lock wait timeout test Waiter thread: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        } catch (InterruptedException e) {\n            String errMsg = \"Wait Interrupted Exception running lock wait timeout test Waiter thread: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        }\n\n        return ServiceUtil.returnSuccess();\n    }","commit_id":"f9c75892210fcb6da7f30cf5b919073fa73834c9","url":"https://github.com/apache/ofbiz"},{"original_method":"public static Map testServiceLockWaitTimeoutRetryGrabber(DispatchContext dctx, Map context) {\n        GenericDelegator delegator = dctx.getDelegator();\n\n        try {\n            // grab entity SVCLWTRT by changing, then wait a LONG time, ie more than the wait timeout\n            GenericValue testingType = delegator.findByPrimaryKey(\"TestingType\", UtilMisc.toMap(\"testingTypeId\", \"SVCLWTRT\"));\n            testingType.set(\"description\", \"New description for SVCLWTRT\");\n            testingType.store();\n            \n            // wait at least long enough for the other method to have locked resource wiat time out\n            // wait 100 seconds\n            ServiceEngineTestServices.class.wait(100 * 1000);\n        } catch (GenericEntityException e) {\n            String errMsg = \"Entity Engine Exception running lock wait timeout test Grabber thread: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        } catch (InterruptedException e) {\n            String errMsg = \"Wait Interrupted Exception running lock wait timeout test Grabber thread: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        }\n\n        return ServiceUtil.returnSuccess();\n    }","id":58914,"modified_method":"public static Map testServiceLockWaitTimeoutRetryGrabber(DispatchContext dctx, Map context) {\n        GenericDelegator delegator = dctx.getDelegator();\n\n        try {\n            // grab entity SVCLWTRT by changing, then wait a LONG time, ie more than the wait timeout\n            GenericValue testingType = delegator.findByPrimaryKey(\"TestingType\", UtilMisc.toMap(\"testingTypeId\", \"SVCLWTRT\"));\n            testingType.set(\"description\", \"New description for SVCLWTRT from the GRABBER service, this should be replaced by Waiter service in the service engine auto-retry\");\n            testingType.store();\n\n            Debug.logInfo(\"In testServiceLockWaitTimeoutRetryGrabber just updated SVCLWTRT, beginning wait\", module);\n            \n            // wait at least long enough for the other method to have locked resource wait time out\n            // (tx timeout 6s on this the Grabber and 2s on the Waiter): wait 4 seconds because timeout on this\n            UtilMisc.staticWait(4 * 1000);\n        } catch (GenericEntityException e) {\n            String errMsg = \"Entity Engine Exception running lock wait timeout test Grabber thread: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        } catch (InterruptedException e) {\n            String errMsg = \"Wait Interrupted Exception running lock wait timeout test Grabber thread: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        }\n\n        return ServiceUtil.returnSuccess();\n    }","commit_id":"f9c75892210fcb6da7f30cf5b919073fa73834c9","url":"https://github.com/apache/ofbiz"},{"original_method":"public static Map testServiceLockWaitTimeoutRetry(DispatchContext dctx, Map context) {\n        LocalDispatcher dispatcher = dctx.getDispatcher();\n        try {\n            dispatcher.runAsync(\"testServiceDeadLockRetryThreadA\", null, false);\n            dispatcher.runAsync(\"testServiceDeadLockRetryThreadB\", null, false);\n        } catch (GenericServiceException e) {\n            String errMsg = \"Error running deadlock test services: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n        }\n        \n        return ServiceUtil.returnSuccess();\n    }","id":58915,"modified_method":"public static Map testServiceLockWaitTimeoutRetry(DispatchContext dctx, Map context) {\n        LocalDispatcher dispatcher = dctx.getDispatcher();\n        try {\n            // NOTE using persist=false so that the lock retry will have to fix the problem instead of the job poller picking it up again\n            GenericResultWaiter grabberWaiter = dispatcher.runAsyncWait(\"testServiceLockWaitTimeoutRetryGrabber\", null, false);\n            GenericResultWaiter waiterWaiter = dispatcher.runAsyncWait(\"testServiceLockWaitTimeoutRetryWaiter\", null, false);\n            // make sure to wait for these to both finish to make sure results aren't checked until they are done\n            grabberWaiter.waitForResult();\n            waiterWaiter.waitForResult();\n        } catch (Exception e) {\n            String errMsg = \"Error running deadlock test services: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        }\n        \n        return ServiceUtil.returnSuccess();\n    }","commit_id":"f9c75892210fcb6da7f30cf5b919073fa73834c9","url":"https://github.com/apache/ofbiz"},{"original_method":"public static Map testServiceDeadLockRetryThreadA(DispatchContext dctx, Map context) {\n        GenericDelegator delegator = dctx.getDelegator();\n\n        try {\n            // grab entity SVCLRT_A by changing, then wait, then find and change SVCLRT_B\n            GenericValue testingTypeA = delegator.findByPrimaryKey(\"TestingType\", UtilMisc.toMap(\"testingTypeId\", \"SVCLRT_A\"));\n            testingTypeA.set(\"description\", \"New description for SVCLRT_A\");\n            testingTypeA.store();\n            \n            // wait at least long enough for the other method to have locked resource B\n            ServiceEngineTestServices.class.wait(100);\n\n            GenericValue testingTypeB = delegator.findByPrimaryKey(\"TestingType\", UtilMisc.toMap(\"testingTypeId\", \"SVCLRT_B\"));\n            testingTypeB.set(\"description\", \"New description for SVCLRT_B\");\n            testingTypeB.store();\n        } catch (GenericEntityException e) {\n            String errMsg = \"Entity Engine Exception running dead lock test thread A: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        } catch (InterruptedException e) {\n            String errMsg = \"Wait Interrupted Exception running dead lock test thread A: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        }\n\n        return ServiceUtil.returnSuccess();\n    }","id":58916,"modified_method":"public static Map testServiceDeadLockRetryThreadA(DispatchContext dctx, Map context) {\n        GenericDelegator delegator = dctx.getDelegator();\n\n        try {\n            // grab entity SVCLRT_A by changing, then wait, then find and change SVCLRT_B\n            GenericValue testingTypeA = delegator.findByPrimaryKey(\"TestingType\", UtilMisc.toMap(\"testingTypeId\", \"SVCLRT_A\"));\n            testingTypeA.set(\"description\", \"New description for SVCLRT_A from Thread A\");\n            testingTypeA.store();\n            \n            // wait at least long enough for the other method to have locked resource B\n            Debug.logInfo(\"In testServiceDeadLockRetryThreadA just updated SVCLRT_A, beginning wait\", module);\n            UtilMisc.staticWait(100);\n\n            Debug.logInfo(\"In testServiceDeadLockRetryThreadA done with wait, updating SVCLRT_B\", module);\n            GenericValue testingTypeB = delegator.findByPrimaryKey(\"TestingType\", UtilMisc.toMap(\"testingTypeId\", \"SVCLRT_B\"));\n            testingTypeB.set(\"description\", \"New description for SVCLRT_B from Thread A\");\n            testingTypeB.store();\n        } catch (GenericEntityException e) {\n            String errMsg = \"Entity Engine Exception running dead lock test thread A: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        } catch (InterruptedException e) {\n            String errMsg = \"Wait Interrupted Exception running dead lock test thread A: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        }\n\n        return ServiceUtil.returnSuccess();\n    }","commit_id":"f9c75892210fcb6da7f30cf5b919073fa73834c9","url":"https://github.com/apache/ofbiz"},{"original_method":"public static Map testServiceDeadLockRetryThreadB(DispatchContext dctx, Map context) {\n        GenericDelegator delegator = dctx.getDelegator();\n\n        try {\n            // grab entity SVCLRT_B by changing, then wait, then change SVCLRT_A\n            GenericValue testingTypeB = delegator.findByPrimaryKey(\"TestingType\", UtilMisc.toMap(\"testingTypeId\", \"SVCLRT_B\"));\n            testingTypeB.set(\"description\", \"New description for SVCLRT_B\");\n            testingTypeB.store();\n            \n            // wait at least long enough for the other method to have locked resource B\n            ServiceEngineTestServices.class.wait(100);\n\n            GenericValue testingTypeA = delegator.findByPrimaryKey(\"TestingType\", UtilMisc.toMap(\"testingTypeId\", \"SVCLRT_A\"));\n            testingTypeA.set(\"description\", \"New description for SVCLRT_A\");\n            testingTypeA.store();\n        } catch (GenericEntityException e) {\n            String errMsg = \"Entity Engine Exception running dead lock test thread B: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        } catch (InterruptedException e) {\n            String errMsg = \"Wait Interrupted Exception running dead lock test thread B: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        }\n\n        return ServiceUtil.returnSuccess();\n    }","id":58917,"modified_method":"public static Map testServiceDeadLockRetryThreadB(DispatchContext dctx, Map context) {\n        GenericDelegator delegator = dctx.getDelegator();\n\n        try {\n            // grab entity SVCLRT_B by changing, then wait, then change SVCLRT_A\n            GenericValue testingTypeB = delegator.findByPrimaryKey(\"TestingType\", UtilMisc.toMap(\"testingTypeId\", \"SVCLRT_B\"));\n            testingTypeB.set(\"description\", \"New description for SVCLRT_B from Thread B\");\n            testingTypeB.store();\n            \n            // wait at least long enough for the other method to have locked resource B\n            Debug.logInfo(\"In testServiceDeadLockRetryThreadB just updated SVCLRT_B, beginning wait\", module);\n            UtilMisc.staticWait(100);\n\n            Debug.logInfo(\"In testServiceDeadLockRetryThreadB done with wait, updating SVCLRT_A\", module);\n            GenericValue testingTypeA = delegator.findByPrimaryKey(\"TestingType\", UtilMisc.toMap(\"testingTypeId\", \"SVCLRT_A\"));\n            testingTypeA.set(\"description\", \"New description for SVCLRT_A from Thread B\");\n            testingTypeA.store();\n        } catch (GenericEntityException e) {\n            String errMsg = \"Entity Engine Exception running dead lock test thread B: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        } catch (InterruptedException e) {\n            String errMsg = \"Wait Interrupted Exception running dead lock test thread B: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        }\n\n        return ServiceUtil.returnSuccess();\n    }","commit_id":"f9c75892210fcb6da7f30cf5b919073fa73834c9","url":"https://github.com/apache/ofbiz"},{"original_method":"public static Map testServiceDeadLockRetry(DispatchContext dctx, Map context) {\n        LocalDispatcher dispatcher = dctx.getDispatcher();\n        try {\n            dispatcher.runAsync(\"testServiceDeadLockRetryThreadA\", null, false);\n            dispatcher.runAsync(\"testServiceDeadLockRetryThreadB\", null, false);\n        } catch (GenericServiceException e) {\n            String errMsg = \"Error running deadlock test services: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n        }\n        \n        return ServiceUtil.returnSuccess();\n    }","id":58918,"modified_method":"public static Map testServiceDeadLockRetry(DispatchContext dctx, Map context) {\n        LocalDispatcher dispatcher = dctx.getDispatcher();\n        try {\n            // NOTE using persist=false so that the lock retry will have to fix the problem instead of the job poller picking it up again\n            GenericResultWaiter threadAWaiter = dispatcher.runAsyncWait(\"testServiceDeadLockRetryThreadA\", null, false);\n            GenericResultWaiter threadBWaiter = dispatcher.runAsyncWait(\"testServiceDeadLockRetryThreadB\", null, false);\n            // make sure to wait for these to both finish to make sure results aren't checked until they are done\n            threadAWaiter.waitForResult();\n            threadBWaiter.waitForResult();\n        } catch (Exception e) {\n            String errMsg = \"Error running deadlock test services: \" + e.toString();\n            Debug.logError(e, errMsg, module);\n            return ServiceUtil.returnError(errMsg);\n        }\n        \n        return ServiceUtil.returnSuccess();\n    }","commit_id":"f9c75892210fcb6da7f30cf5b919073fa73834c9","url":"https://github.com/apache/ofbiz"},{"original_method":"/**\n     * Gets a {@link TabSheet} view for all widgets in this manager.\n     * \n     * @return TabSheet\n     */\n    private TabSheet getTabSheet(WidgetManager manager, WidgetContext widgetContext) {\n        TabSheet tabSheet = new TabSheet();\n        tabSheet.setSizeFull();\n\n        for(IViewContribution viewContrib : manager.getWidgets()) {\n            // Create a new view instance\n            Component view = viewContrib.getView(widgetContext);\n            try {\n                m_graphContainer.getSelectionManager().addSelectionListener((SelectionListener)view);\n            } catch (ClassCastException e) {}\n            try {\n                ((SelectionNotifier)view).addSelectionListener(m_graphContainer.getSelectionManager());\n            } catch (ClassCastException e) {}\n            if(viewContrib.getIcon() != null) {\n                tabSheet.addTab(view, viewContrib.getTitle(), viewContrib.getIcon());\n            } else {\n                tabSheet.addTab(view, viewContrib.getTitle());\n            }\n            view.setSizeFull();\n        }\n\n        return tabSheet;\n    }","id":58919,"modified_method":"/**\n     * Gets a {@link TabSheet} view for all widgets in this manager.\n     * \n     * @return TabSheet\n     */\n    private Component getTabSheet(WidgetManager manager, WidgetContext widgetContext) {\n        // Use an absolute layout for the bottom panel\n        AbsoluteLayout bottomLayout = new AbsoluteLayout();\n        bottomLayout.setSizeFull();\n        \n        final TabSheet tabSheet = new TabSheet();\n        tabSheet.setSizeFull();\n\n        for(IViewContribution viewContrib : manager.getWidgets()) {\n            // Create a new view instance\n            Component view = viewContrib.getView(widgetContext);\n            try {\n                m_graphContainer.getSelectionManager().addSelectionListener((SelectionListener)view);\n            } catch (ClassCastException e) {}\n            try {\n                ((SelectionNotifier)view).addSelectionListener(m_graphContainer.getSelectionManager());\n            } catch (ClassCastException e) {}\n\n            // Icon can be null\n            final Tab tab = tabSheet.addTab(view, viewContrib.getTitle(), viewContrib.getIcon());\n\n            // If the component supports the HasExtraComponents interface, then add the extra \n            // components to the tab bar\n            try {\n                Component[] extras = ((HasExtraComponents)view).getExtraComponents();\n                if (extras != null && extras.length > 0) {\n                    // For any extra controls, add a horizontal layout that will float\n                    // on top of the right side of the tab panel\n                    final HorizontalLayout extraControls = new HorizontalLayout();\n                    extraControls.setHeight(32, Sizeable.UNITS_PIXELS);\n                    extraControls.setSpacing(true);\n\n                    // Add the extra controls to the layout\n                    for (Component component : extras) {\n                        extraControls.addComponent(component);\n                        extraControls.setComponentAlignment(component, Alignment.MIDDLE_RIGHT);\n                    }\n\n                    // Add a TabSheet.SelectedTabChangeListener to show or hide the extra controls\n                    tabSheet.addListener(new SelectedTabChangeListener() {\n                        private static final long serialVersionUID = 6370347645872323830L;\n\n                        @Override\n                        public void selectedTabChange(SelectedTabChangeEvent event) {\n                            final TabSheet source = (TabSheet) event.getSource();\n                            if (source == tabSheet) {\n                                // If the first tab was selected.\n                                if (source.getSelectedTab() == tab) {\n                                    extraControls.setVisible(true);\n                                } else {\n                                    extraControls.setVisible(false);\n                                }\n                            }\n                        }\n                    });\n\n                    // Place the extra controls on the absolute layout\n                    bottomLayout.addComponent(extraControls, \"top:0px;right:5px;z-index:100\");\n                }\n            } catch (ClassCastException e) {}\n            view.setSizeFull();\n        }\n\n        // Add the tabsheet to the layout\n        bottomLayout.addComponent(tabSheet);\n\n        return bottomLayout;\n    }","commit_id":"f037a20cca88b7081e29baaf771566cdc33929d7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Updates the bottom widget area with the registered widgets\n     * \n     * Any widget with the service property of 'location=bottom' are\n     * included.\n     * \n     * @param widgetManager\n     */\n    private void updateWidgetView(WidgetManager widgetManager) {\n        synchronized (m_layout) {\n            m_layout.removeAllComponents();\n            if(widgetManager.widgetCount() == 0) {\n                m_layout.addComponent(m_treeMapSplitPanel, getBelowMenuPosition());\n            } else {\n                VerticalSplitPanel bottomLayoutBar = new VerticalSplitPanel();\n                bottomLayoutBar.setFirstComponent(m_treeMapSplitPanel);\n                // Split the screen 70% top, 30% bottom\n                bottomLayoutBar.setSplitPosition(70, Sizeable.UNITS_PERCENTAGE);\n                bottomLayoutBar.setSizeFull();\n\n                // Use an absolute layout for the bottom panel\n                AbsoluteLayout bottomLayout = new AbsoluteLayout();\n                bottomLayout.setSizeFull();\n                \n                // Add the tabsheet to the layout\n                bottomLayout.addComponent(getTabSheet(widgetManager, this));\n\n                // For any extra controls, add a horizontal layout that will float\n                // on top of the right side of the tab panel\n                HorizontalLayout extraControls = new HorizontalLayout();\n                extraControls.setHeight(32, Sizeable.UNITS_PIXELS);\n                extraControls.setSpacing(true);\n\n                /*\n                // Add the extra controls to the layout\n                Label label = new Label(\"Hello\");\n                extraControls.addComponent(label);\n                extraControls.setComponentAlignment(label, Alignment.MIDDLE_RIGHT);\n\n                Button newButton = new Button(\"World\");\n                extraControls.addComponent(newButton);\n                extraControls.setComponentAlignment(newButton, Alignment.MIDDLE_RIGHT);\n                */\n\n                // Place the extra controls on the absolute layout\n                bottomLayout.addComponent(extraControls, \"top:0px;right:5px;\");\n\n                bottomLayoutBar.setSecondComponent(bottomLayout);\n\n                m_layout.addComponent(bottomLayoutBar, getBelowMenuPosition());\n            }\n            m_layout.requestRepaint();\n        }\n        if(m_contextMenu != null && m_contextMenu.getParent() == null) {\n            getMainWindow().addComponent(m_contextMenu);\n        }\n    }","id":58920,"modified_method":"/**\n     * Updates the bottom widget area with the registered widgets\n     * \n     * Any widget with the service property of 'location=bottom' are\n     * included.\n     * \n     * @param widgetManager\n     */\n    private void updateWidgetView(WidgetManager widgetManager) {\n        synchronized (m_layout) {\n            m_layout.removeAllComponents();\n            if(widgetManager.widgetCount() == 0) {\n                m_layout.addComponent(m_treeMapSplitPanel, getBelowMenuPosition());\n            } else {\n                VerticalSplitPanel bottomLayoutBar = new VerticalSplitPanel();\n                bottomLayoutBar.setFirstComponent(m_treeMapSplitPanel);\n                // Split the screen 70% top, 30% bottom\n                bottomLayoutBar.setSplitPosition(70, Sizeable.UNITS_PERCENTAGE);\n                bottomLayoutBar.setSizeFull();\n\n                // Add the tabsheet to the layout\n                bottomLayoutBar.addComponent(getTabSheet(widgetManager, this));\n\n                m_layout.addComponent(bottomLayoutBar, getBelowMenuPosition());\n            }\n            m_layout.requestRepaint();\n        }\n        if(m_contextMenu != null && m_contextMenu.getParent() == null) {\n            getMainWindow().addComponent(m_contextMenu);\n        }\n    }","commit_id":"f037a20cca88b7081e29baaf771566cdc33929d7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"ToolWindowsPane(final IdeFrame frame){\n    super(new BorderLayout());\n\n    setOpaque(false);\n    myFrame=frame;\n    myId2Button=new HashMap<String,StripeButton>();\n    myId2Decorator=new HashMap<String,InternalDecorator>();\n    myButton2Info=new HashMap<StripeButton,WindowInfo>();\n    myDecorator2Info=new HashMap<InternalDecorator,WindowInfo>();\n    myUISettingsListener=new MyUISettingsListenerImpl();\n\n    // Splitters\n\n    myLeftSplitter = new Splitter();\n    myLeftSplitter.setBackground(Color.gray);\n    myLeftSplitter.setProportion(0.33f);\n\n    myRightSplitter = new Splitter();\n    myRightSplitter.setBackground(Color.gray);\n    myRightSplitter.setProportion(0.66f);\n    myRightSplitter.setFirstComponent(myLeftSplitter);\n\n    myTopSplitter=new Splitter(true);\n    myTopSplitter.setBackground(Color.gray);\n    myTopSplitter.setProportion(0.66f);\n    myTopSplitter.setSecondComponent(myRightSplitter);\n\n    myBottomSplitter = new Splitter(true);\n    myBottomSplitter.setBackground(Color.gray);\n    myBottomSplitter.setFirstComponent(myTopSplitter);\n    myBottomSplitter.setProportion(0.66f);\n\n    // Tool stripes\n\n    myTopStripe=new Stripe(SwingConstants.TOP);\n    myLeftStripe=new Stripe(SwingConstants.LEFT);\n    myBottomStripe=new Stripe(SwingConstants.BOTTOM);\n    myRightStripe=new Stripe(SwingConstants.RIGHT);\n    updateToolStripesVisibility();\n\n    // Layered pane\n\n    myLayeredPane=new MyLayeredPane(myBottomSplitter);\n\n    // Compose layout\n\n    add(myTopStripe,BorderLayout.NORTH);\n    add(myLeftStripe,BorderLayout.WEST);\n    add(myBottomStripe,BorderLayout.SOUTH);\n    add(myRightStripe,BorderLayout.EAST);\n    add(myLayeredPane,BorderLayout.CENTER);\n  }","id":58921,"modified_method":"ToolWindowsPane(final IdeFrame frame){\n    super(new BorderLayout());\n\n    setOpaque(false);\n    myFrame=frame;\n    myId2Button=new HashMap<String,StripeButton>();\n    myId2Decorator=new HashMap<String,InternalDecorator>();\n    myButton2Info=new HashMap<StripeButton,WindowInfo>();\n    myDecorator2Info=new HashMap<InternalDecorator,WindowInfo>();\n    myUISettingsListener=new MyUISettingsListenerImpl();\n\n    // Splitters\n\n    myVerticalSplitter = new ThreeComponentsSplitter(true);\n    myVerticalSplitter.setBackground(Color.gray);\n    myHorizontalSplitter = new ThreeComponentsSplitter(false);\n    myHorizontalSplitter.setBackground(Color.gray);\n\n    myVerticalSplitter.setInnerComponent(myHorizontalSplitter);\n\n    // Tool stripes\n\n    myTopStripe=new Stripe(SwingConstants.TOP);\n    myLeftStripe=new Stripe(SwingConstants.LEFT);\n    myBottomStripe=new Stripe(SwingConstants.BOTTOM);\n    myRightStripe=new Stripe(SwingConstants.RIGHT);\n    updateToolStripesVisibility();\n\n    // Layered pane\n\n    myLayeredPane=new MyLayeredPane(myVerticalSplitter);\n\n    // Compose layout\n\n    add(myTopStripe,BorderLayout.NORTH);\n    add(myLeftStripe,BorderLayout.WEST);\n    add(myBottomStripe,BorderLayout.SOUTH);\n    add(myRightStripe,BorderLayout.EAST);\n    add(myLayeredPane,BorderLayout.CENTER);\n  }","commit_id":"67209120f7bf8da6eb59023cd078ad580b213800","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public final void run(){\n      try{\n        setComponent(null,myInfo.getAnchor());\n        if(!myDirtyMode){\n          myLayeredPane.validate();\n          myLayeredPane.repaint();\n        }\n      }finally{\n        finish();\n      }\n    }","id":58922,"modified_method":"public final void run(){\n      try{\n        setComponent(null,myInfo.getAnchor(), 0);\n        if(!myDirtyMode){\n          myLayeredPane.validate();\n          myLayeredPane.repaint();\n        }\n      }finally{\n        finish();\n      }\n    }","commit_id":"67209120f7bf8da6eb59023cd078ad580b213800","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void setDocumentComponent(final JComponent component){\n    myLeftSplitter.setSecondComponent(component);\n  }","id":58923,"modified_method":"private void setDocumentComponent(final JComponent component){\n    myHorizontalSplitter.setInnerComponent(component);\n  }","commit_id":"67209120f7bf8da6eb59023cd078ad580b213800","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Sets (docks) specified component to the specified anchor.\n   */\n  private void setComponent(final JComponent component,final ToolWindowAnchor anchor){\n    if(ToolWindowAnchor.TOP==anchor){\n      myTopSplitter.setFirstComponent(component);\n    }else if(ToolWindowAnchor.LEFT==anchor){\n      myLeftSplitter.setFirstComponent(component);\n    }else if(ToolWindowAnchor.BOTTOM==anchor){\n      myBottomSplitter.setSecondComponent(component);\n    }else if(ToolWindowAnchor.RIGHT==anchor){\n      myRightSplitter.setSecondComponent(component);\n    }else{\n      LOG.error(\"unknown anchor: \"+anchor);\n    }\n  }","id":58924,"modified_method":"/**\n   * Sets (docks) specified component to the specified anchor.\n   */\n  private void setComponent(final JComponent component, final ToolWindowAnchor anchor, final float weight) {\n    if(ToolWindowAnchor.TOP==anchor){\n      myVerticalSplitter.setFirstComponent(component);\n      myVerticalSplitter.setFirstSize((int)(myLayeredPane.getHeight() * weight));\n    }else if(ToolWindowAnchor.LEFT==anchor){\n      myHorizontalSplitter.setFirstComponent(component);\n      myHorizontalSplitter.setFirstSize((int)(myLayeredPane.getWidth() * weight));\n    }else if(ToolWindowAnchor.BOTTOM==anchor){\n      myVerticalSplitter.setLastComponent(component);\n      myVerticalSplitter.setLastSize((int)(myLayeredPane.getHeight() * weight));\n    }else if(ToolWindowAnchor.RIGHT==anchor){\n      myHorizontalSplitter.setLastComponent(component);\n      myHorizontalSplitter.setLastSize((int)(myLayeredPane.getWidth() * weight));\n    }else{\n      LOG.error(\"unknown anchor: \"+anchor);\n    }\n  }","commit_id":"67209120f7bf8da6eb59023cd078ad580b213800","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public final void run(){\n      try{\n        final float weight=myInfo.getWeight()<=.0f?WindowInfo.DEFAULT_WEIGHT:myInfo.getWeight();\n        float newWeight=weight;\n        final ToolWindowAnchor anchor=myInfo.getAnchor();\n        if(ToolWindowAnchor.TOP==anchor){\n          if(myTopSplitter.getHeight()>0){\n            newWeight=(myLayeredPane.getHeight()*weight+myTopSplitter.getDividerWidth()/2)/(float)myTopSplitter.getHeight();\n          }\n          if(newWeight>=1.0f){\n            newWeight=1-WindowInfo.DEFAULT_WEIGHT;\n          }\n          myTopSplitter.setProportion(newWeight);\n          setComponent(myComponent,ToolWindowAnchor.TOP);\n        }else if(ToolWindowAnchor.LEFT==anchor){\n          if(myLeftSplitter.getWidth()>0){\n            newWeight=(myLayeredPane.getWidth()*weight+myLeftSplitter.getDividerWidth()/2)/(float)myLeftSplitter.getWidth();\n          }\n          if(newWeight>=1.0f){\n            newWeight=1-WindowInfo.DEFAULT_WEIGHT;\n          }\n          myLeftSplitter.setProportion(newWeight);\n          setComponent(myComponent,ToolWindowAnchor.LEFT);\n        }else if(ToolWindowAnchor.BOTTOM==anchor){\n          if(myBottomSplitter.getHeight()>0){\n            newWeight=(myLayeredPane.getHeight()*weight+myBottomSplitter.getDividerWidth()/2+.5f)/(float)myBottomSplitter.getHeight();\n          }\n          if(newWeight>=1.0f){\n            newWeight=1-WindowInfo.DEFAULT_WEIGHT;\n          }\n          myBottomSplitter.setProportion(1-newWeight);\n          setComponent(myComponent,ToolWindowAnchor.BOTTOM);\n        }else if(ToolWindowAnchor.RIGHT==anchor){\n          if(myRightSplitter.getWidth()>0){\n            newWeight=(myLayeredPane.getWidth()*weight+myRightSplitter.getDividerWidth()/2+.5f)/(float)myRightSplitter.getWidth();\n          }\n          if(newWeight>=1.0f){\n            newWeight=1-WindowInfo.DEFAULT_WEIGHT;\n          }\n          myRightSplitter.setProportion(1-newWeight);\n          setComponent(myComponent,ToolWindowAnchor.RIGHT);\n        }else{\n          LOG.error(\"unknown anchor: \"+anchor);\n        }\n        if(!myDirtyMode){\n          myLayeredPane.validate();\n          myLayeredPane.repaint();\n        }\n      }finally{\n        finish();\n      }\n    }","id":58925,"modified_method":"public final void run(){\n      try{\n        final float weight=myInfo.getWeight()<=.0f?WindowInfo.DEFAULT_WEIGHT:myInfo.getWeight();\n        float newWeight=weight;\n        if(newWeight>=1.0f){\n          newWeight=1-WindowInfo.DEFAULT_WEIGHT;\n        }\n        final ToolWindowAnchor anchor=myInfo.getAnchor();\n        setComponent(myComponent, anchor, newWeight);\n        if(!myDirtyMode){\n          myLayeredPane.validate();\n          myLayeredPane.repaint();\n        }\n      }finally{\n        finish();\n      }\n    }","commit_id":"67209120f7bf8da6eb59023cd078ad580b213800","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Updates the bottom widget area with the registered widgets\n     * \n     * Any widget with the service property of 'location=bottom' are\n     * included.\n     * \n     * @param widgetManager\n     */\n    private void updateWidgetView(WidgetManager widgetManager) {\n        synchronized (m_layout) {\n            m_layout.removeAllComponents();\n            if(widgetManager.widgetCount() == 0) {\n                m_layout.addComponent(m_treeMapSplitPanel, getBelowMenuPosition());\n            } else {\n                VerticalSplitPanel bottomLayoutBar = new VerticalSplitPanel();\n                bottomLayoutBar.setFirstComponent(m_treeMapSplitPanel);\n                // Split the screen 70% top, 30% bottom\n                bottomLayoutBar.setSplitPosition(70, Sizeable.UNITS_PERCENTAGE);\n                bottomLayoutBar.setSizeFull();\n                bottomLayoutBar.setSecondComponent(getTabSheet(widgetManager, this));\n                m_layout.addComponent(bottomLayoutBar, getBelowMenuPosition());\n            }\n            m_layout.requestRepaint();\n        }\n        if(m_contextMenu != null && m_contextMenu.getParent() == null) {\n            getMainWindow().addComponent(m_contextMenu);\n        }\n    }","id":58926,"modified_method":"/**\n     * Updates the bottom widget area with the registered widgets\n     * \n     * Any widget with the service property of 'location=bottom' are\n     * included.\n     * \n     * @param widgetManager\n     */\n    private void updateWidgetView(WidgetManager widgetManager) {\n        synchronized (m_layout) {\n            m_layout.removeAllComponents();\n            if(widgetManager.widgetCount() == 0) {\n                m_layout.addComponent(m_treeMapSplitPanel, getBelowMenuPosition());\n            } else {\n                VerticalSplitPanel bottomLayoutBar = new VerticalSplitPanel();\n                bottomLayoutBar.setFirstComponent(m_treeMapSplitPanel);\n                // Split the screen 70% top, 30% bottom\n                bottomLayoutBar.setSplitPosition(70, Sizeable.UNITS_PERCENTAGE);\n                bottomLayoutBar.setSizeFull();\n\n                // Use an absolute layout for the bottom panel\n                AbsoluteLayout bottomLayout = new AbsoluteLayout();\n                bottomLayout.setSizeFull();\n                \n                // Add the tabsheet to the layout\n                bottomLayout.addComponent(getTabSheet(widgetManager, this));\n\n                // For any extra controls, add a horizontal layout that will float\n                // on top of the right side of the tab panel\n                HorizontalLayout extraControls = new HorizontalLayout();\n                extraControls.setHeight(32, Sizeable.UNITS_PIXELS);\n                extraControls.setSpacing(true);\n\n                /*\n                // Add the extra controls to the layout\n                Label label = new Label(\"Hello\");\n                extraControls.addComponent(label);\n                extraControls.setComponentAlignment(label, Alignment.MIDDLE_RIGHT);\n\n                Button newButton = new Button(\"World\");\n                extraControls.addComponent(newButton);\n                extraControls.setComponentAlignment(newButton, Alignment.MIDDLE_RIGHT);\n                */\n\n                // Place the extra controls on the absolute layout\n                bottomLayout.addComponent(extraControls, \"top:0px;right:5px;\");\n\n                bottomLayoutBar.setSecondComponent(bottomLayout);\n\n                m_layout.addComponent(bottomLayoutBar, getBelowMenuPosition());\n            }\n            m_layout.requestRepaint();\n        }\n        if(m_contextMenu != null && m_contextMenu.getParent() == null) {\n            getMainWindow().addComponent(m_contextMenu);\n        }\n    }","commit_id":"072ae009a9885f922f3bec839bba12695addf238","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Gets the list of Widgets as IViewContributions\n     * \n     * @return List<IViewContribution>\n     */\n    public List<IViewContribution> getWidgets(){\n        return Collections.unmodifiableList(m_viewContributors);\n    }","id":58927,"modified_method":"/**\n     * Gets the list of Widgets as IViewContributions\n     * \n     * @return List<IViewContribution>\n     */\n    public List<IViewContribution> getWidgets(){\n        List<IViewContribution> widgets = new ArrayList<IViewContribution>();\n        widgets.addAll(m_viewContributors);\n        // Sort the widgets by their title\n        Collections.sort(widgets, new Comparator<IViewContribution>() {\n            @Override\n            public int compare(IViewContribution o1, IViewContribution o2) {\n                return o1.getTitle().compareTo(o2.getTitle());\n            }\n        });\n        return Collections.unmodifiableList(widgets);\n    }","commit_id":"072ae009a9885f922f3bec839bba12695addf238","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n  public JPanel createComponentImpl() {\n    final Module module = getModule();\n    final Project project = module.getProject();\n\n    myContentEntryEditorListener = new MyContentEntryEditorListener();\n\n    final JPanel mainPanel = new JPanel(new BorderLayout());\n    mainPanel.setBorder(BorderFactory.createEmptyBorder(6, 6, 6, 6));\n\n    addAdditionalSettingsToPanel(mainPanel);\n\n    final JPanel entriesPanel = new JPanel(new BorderLayout());\n\n    final DefaultActionGroup group = new DefaultActionGroup();\n    final AddContentEntryAction action = new AddContentEntryAction();\n    action.registerCustomShortcutSet(KeyEvent.VK_C, InputEvent.ALT_DOWN_MASK, mainPanel);\n    group.add(action);\n\n    myEditorsPanel = new ScrollablePanel(new VerticalStackLayout());\n    myEditorsPanel.setBackground(BACKGROUND_COLOR);\n    JScrollPane myScrollPane = ScrollPaneFactory.createScrollPane(myEditorsPanel);\n    entriesPanel.add(new ToolbarPanel(myScrollPane, group), BorderLayout.CENTER);\n\n    final Splitter splitter = new Splitter(false);\n    splitter.setProportion(0.4f);\n    splitter.setHonorComponentsMinimumSize(true);\n    mainPanel.add(splitter, BorderLayout.CENTER);\n\n    final JPanel editorsPanel = new JPanel(new GridBagLayout());\n    splitter.setFirstComponent(editorsPanel);\n    editorsPanel.add(entriesPanel,\n                     new GridBagConstraints(0, 0, 1, 1, 1.0, 1.0, GridBagConstraints.CENTER, GridBagConstraints.BOTH, new Insets(0, 0, 0, 0), 0, 0));\n\n    myRootTreeEditor = createContentEntryTreeEditor(project);\n    final JComponent treeEditorComponent = myRootTreeEditor.createComponent();\n    splitter.setSecondComponent(treeEditorComponent);\n\n    final JPanel innerPanel = createBottomControl(module);\n    if (innerPanel != null) {\n      mainPanel.add(innerPanel, BorderLayout.SOUTH);\n    }\n\n    final ModifiableRootModel model = getModel();\n    if (model != null) {\n      final ContentEntry[] contentEntries = model.getContentEntries();\n      if (contentEntries.length > 0) {\n        for (final ContentEntry contentEntry : contentEntries) {\n          addContentEntryPanel(contentEntry.getUrl());\n        }\n        selectContentEntry(contentEntries[0].getUrl());\n      }\n    }\n\n    return mainPanel;\n  }","id":58928,"modified_method":"@Override\n  public JPanel createComponentImpl() {\n    final Module module = getModule();\n    final Project project = module.getProject();\n\n    myContentEntryEditorListener = new MyContentEntryEditorListener();\n\n    final JPanel mainPanel = new JPanel(new BorderLayout());\n    mainPanel.setBorder(BorderFactory.createEmptyBorder(6, 6, 6, 6));\n\n    addAdditionalSettingsToPanel(mainPanel);\n\n    final JPanel entriesPanel = new JPanel(new BorderLayout());\n\n    final DefaultActionGroup group = new DefaultActionGroup();\n    final AddContentEntryAction action = new AddContentEntryAction();\n    action.registerCustomShortcutSet(KeyEvent.VK_C, InputEvent.ALT_DOWN_MASK, mainPanel);\n    group.add(action);\n\n    myEditorsPanel = new ScrollablePanel(new VerticalStackLayout());\n    myEditorsPanel.setBackground(BACKGROUND_COLOR);\n    JScrollPane myScrollPane = ScrollPaneFactory.createScrollPane(myEditorsPanel);\n    entriesPanel.add(new ToolbarPanel(myScrollPane, group), BorderLayout.CENTER);\n\n    final Splitter splitter = new Splitter(false);\n    splitter.setProportion(0.6f);\n    splitter.setHonorComponentsMinimumSize(true);\n\n    myRootTreeEditor = createContentEntryTreeEditor(project);\n    splitter.setFirstComponent(myRootTreeEditor.createComponent());\n    splitter.setSecondComponent(entriesPanel);\n    JPanel contentPanel = new JPanel(new GridBagLayout());\n    contentPanel.setBorder(BorderFactory.createEtchedBorder());\n    final ActionToolbar actionToolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, myRootTreeEditor.getEditingActionsGroup(), true);\n    contentPanel.add(new JLabel(\"Mark as:\"),\n                     new GridBagConstraints(0, 0, 1, 1, 0, 0, GridBagConstraints.WEST, 0, new Insets(0, 5, 0, 5), 0, 0));\n    contentPanel.add(actionToolbar.getComponent(),\n                     new GridBagConstraints(1, 0, 1, 1, 1.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL,\n                                            new Insets(0, 0, 0, 0), 0, 0));\n    contentPanel.add(splitter,\n                     new GridBagConstraints(0, GridBagConstraints.RELATIVE, 2, 1, 1.0, 1.0, GridBagConstraints.WEST, GridBagConstraints.BOTH,\n                                            new Insets(0, 0, 0, 0), 0, 0));\n\n    mainPanel.add(contentPanel, BorderLayout.CENTER);\n\n\n    final JPanel innerPanel = createBottomControl(module);\n    if (innerPanel != null) {\n      mainPanel.add(innerPanel, BorderLayout.SOUTH);\n    }\n\n    final ModifiableRootModel model = getModel();\n    if (model != null) {\n      final ContentEntry[] contentEntries = model.getContentEntries();\n      if (contentEntries.length > 0) {\n        for (final ContentEntry contentEntry : contentEntries) {\n          addContentEntryPanel(contentEntry.getUrl());\n        }\n        selectContentEntry(contentEntries[0].getUrl());\n      }\n    }\n\n    return mainPanel;\n  }","commit_id":"53ef1cf64d61b67c88ff926150be4799508cb869","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void createEditingActions() {\n    Map<String, DefaultActionGroup> groups = new HashMap<String, DefaultActionGroup>();\n    for (final ModuleSourceRootEditHandler<?> editor : myEditHandlers) {\n      ToggleSourcesStateAction action = new ToggleSourcesStateAction(myTree, this, editor);\n      CustomShortcutSet shortcutSet = editor.getMarkRootShortcutSet();\n      if (shortcutSet != null) {\n        action.registerCustomShortcutSet(shortcutSet, myTree);\n      }\n      String groupName = editor.getMarkRootGroupName();\n      if (groupName != null) {\n        DefaultActionGroup group = groups.get(groupName);\n        if (group == null) {\n          group = new MarkSourceToggleActionsGroup(groupName, editor.getRootIcon());\n          groups.put(groupName, group);\n          myEditingActionsGroup.add(group);\n        }\n        group.add(action);\n      }\n      else {\n        myEditingActionsGroup.add(action);\n      }\n    }\n\n    setupExcludedAction();\n  }","id":58929,"modified_method":"protected void createEditingActions() {\n    for (final ModuleSourceRootEditHandler<?> editor : myEditHandlers) {\n      ToggleSourcesStateAction action = new ToggleSourcesStateAction(myTree, this, editor);\n      CustomShortcutSet shortcutSet = editor.getMarkRootShortcutSet();\n      if (shortcutSet != null) {\n        action.registerCustomShortcutSet(shortcutSet, myTree);\n      }\n      myEditingActionsGroup.add(action);\n    }\n\n    setupExcludedAction();\n  }","commit_id":"53ef1cf64d61b67c88ff926150be4799508cb869","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ContentEntryTreeEditor(Project project, List<ModuleSourceRootEditHandler<?>> editHandlers) {\n    myProject = project;\n    myEditHandlers = editHandlers;\n    myTree = new Tree();\n    myTree.setRootVisible(true);\n    myTree.setShowsRootHandles(true);\n\n    myEditingActionsGroup = new DefaultActionGroup();\n\n    TreeUtil.installActions(myTree);\n    new TreeSpeedSearch(myTree);\n\n    myTreePanel = new MyPanel(new BorderLayout());\n    final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(myTree);\n    myTreePanel.add(new ToolbarPanel(scrollPane, myEditingActionsGroup, TOOLBAR_PLACE), BorderLayout.CENTER);\n\n    myTreePanel.setVisible(false);\n    myDescriptor = FileChooserDescriptorFactory.createMultipleFoldersDescriptor();\n    myDescriptor.setShowFileSystemRoots(false);\n  }","id":58930,"modified_method":"public ContentEntryTreeEditor(Project project, List<ModuleSourceRootEditHandler<?>> editHandlers) {\n    myProject = project;\n    myEditHandlers = editHandlers;\n    myTree = new Tree();\n    myTree.setRootVisible(true);\n    myTree.setShowsRootHandles(true);\n\n    myEditingActionsGroup = new DefaultActionGroup();\n\n    TreeUtil.installActions(myTree);\n    new TreeSpeedSearch(myTree);\n\n    myTreePanel = new MyPanel(new BorderLayout());\n    final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(myTree);\n    myTreePanel.add(scrollPane, BorderLayout.CENTER);\n\n    myTreePanel.setVisible(false);\n    myDescriptor = FileChooserDescriptorFactory.createMultipleFoldersDescriptor();\n    myDescriptor.setShowFileSystemRoots(false);\n  }","commit_id":"53ef1cf64d61b67c88ff926150be4799508cb869","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(LoginTests.suite());\n\t\ttestSuite.addTest(ControlPanelTests.suite());\n\t\ttestSuite.addTest(AnnouncementsTests.suite());\n\t\ttestSuite.addTest(BlogsTests.suite());\n\t\ttestSuite.addTest(DocumentLibraryTests.suite());\n\t\ttestSuite.addTest(ImageGalleryTests.suite());\n\t\ttestSuite.addTest(MessageBoardsTests.suite());\n\t\ttestSuite.addTest(WebContentTests.suite());\n\n\t\ttestSuite.addTestSuite(StopSeleniumTest.class);\n\n\t\treturn testSuite;\n\t}","id":58931,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(LoginTests.suite());\n\t\ttestSuite.addTest(ControlPanelTests.suite());\n\t\ttestSuite.addTest(AnnouncementsTests.suite());\n\t\ttestSuite.addTest(BlogsTests.suite());\n\t\t//testSuite.addTest(DocumentLibraryTests.suite());\n\t\ttestSuite.addTest(ImageGalleryTests.suite());\n\t\ttestSuite.addTest(MessageBoardsTests.suite());\n\t\ttestSuite.addTest(WebContentTests.suite());\n\n\t\ttestSuite.addTestSuite(StopSeleniumTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"2d0c42aa4879f98c1f4a7162604a9058ffe13bbc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_Login() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@type='checkbox']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":58932,"modified_method":"public void testSA_Login() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.clickAt(\"//input[@type='checkbox']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"2d0c42aa4879f98c1f4a7162604a9058ffe13bbc","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddAdSense() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Adsense Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_86_adClient\",\n\t\t\tRuntimeVariables.replace(\"pub-0000000000\"));\n\t\tselenium.type(\"_86_adClient\", RuntimeVariables.replace(\"pub-0000000000\"));\n\t\tselenium.typeKeys(\"_86_adChannel\", RuntimeVariables.replace(\"12345678\"));\n\t\tselenium.type(\"_86_adChannel\", RuntimeVariables.replace(\"12345678\"));\n\t\tselenium.select(\"_86_adType\", RuntimeVariables.replace(\"label=Text\"));\n\t\tselenium.select(\"_86_adFormat\",\n\t\t\tRuntimeVariables.replace(\"label=(728 x 90) - Leaderboard\"));\n\t\tselenium.typeKeys(\"_86_colorBorder\", RuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.type(\"_86_colorBorder\", RuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.typeKeys(\"_86_colorBg\", RuntimeVariables.replace(\"0000FF\"));\n\t\tselenium.type(\"_86_colorBg\", RuntimeVariables.replace(\"0000FF\"));\n\t\tselenium.typeKeys(\"_86_colorLink\", RuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.type(\"_86_colorLink\", RuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.typeKeys(\"_86_colorText\", RuntimeVariables.replace(\"000000\"));\n\t\tselenium.type(\"_86_colorText\", RuntimeVariables.replace(\"000000\"));\n\t\tselenium.typeKeys(\"_86_colorUrl\", RuntimeVariables.replace(\"008000\"));\n\t\tselenium.type(\"_86_colorUrl\", RuntimeVariables.replace(\"008000\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have successfully updated the setup.\"));\n\t}","id":58933,"modified_method":"public void testAddAdSense() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Adsense Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Google Adsense Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_86_adClient\", RuntimeVariables.replace(\"pub-0000000000\"));\n\t\tselenium.type(\"_86_adChannel\", RuntimeVariables.replace(\"12345678\"));\n\t\tselenium.select(\"_86_adType\", RuntimeVariables.replace(\"label=Text\"));\n\t\tselenium.select(\"_86_adFormat\",\n\t\t\tRuntimeVariables.replace(\"label=(728 x 90) - Leaderboard\"));\n\t\tselenium.type(\"_86_colorBorder\", RuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.type(\"_86_colorBg\", RuntimeVariables.replace(\"0000FF\"));\n\t\tselenium.type(\"_86_colorLink\", RuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.type(\"_86_colorText\", RuntimeVariables.replace(\"000000\"));\n\t\tselenium.type(\"_86_colorUrl\", RuntimeVariables.replace(\"008000\"));\n\t\tselenium.clickAt(\"//form/input[2]\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddGadget() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Gadget Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Gadget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Finance\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_86_q\", RuntimeVariables.replace(\"Currenc Converter\"));\n\t\tselenium.type(\"_86_q\", RuntimeVariables.replace(\"Currency Converter\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Gadgets']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Choose']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have successfully updated the setup.\"));\n\t}","id":58934,"modified_method":"public void testAddGadget() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Gadget Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Google Gadget Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Finance\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_86_q\", RuntimeVariables.replace(\"Currency Converter\"));\n\t\tselenium.clickAt(\"//input[@value='Search Gadgets']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Choose']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddGoogleMap() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Maps Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_86_license\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"ABQIAAAA3nrHjKy73DtxJL8D67iR6hSqd3WNkXftHeaSLroSolGIoU-u5BTriDnzHVQc9TudabxQnFqk-gNe8A\"));\n\t\tselenium.type(\"_86_mapAddress\", RuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"_86_directionsAddress\", RuntimeVariables.replace(\"\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have successfully updated the setup.\"));\n\t}","id":58935,"modified_method":"public void testAddGoogleMap() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Google Maps Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_86_license\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"ABQIAAAA3nrHjKy73DtxJL8D67iR6hSqd3WNkXftHeaSLroSolGIoU-u5BTriDnzHVQc9TudabxQnFqk-gNe8A\"));\n\t\tselenium.type(\"_86_mapAddress\", RuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"_86_directionsAddress\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//form/input[2]\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddGoogleMapWithDirections() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Google Maps Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Google Maps Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"_86_license\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"ABQIAAAA3nrHjKy73DtxJL8D67iR6hSqd3WNkXftHeaSLroSolGIoU-u5BTriDnzHVQc9TudabxQnFqk-gNe8A\"));\n\t\t\t\tselenium.type(\"_86_mapAddress\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"17730 Antonio Ave, Cerritos, CA, 90703\"));\n\t\t\t\tselenium.type(\"_86_directionsAddress\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"11947 Del Amo Blvd, Cerritos, CA, 90703\"));\n\n\t\t\t\tboolean DirectionChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_directionsInputEnabledCheckbox\");\n\n\t\t\t\tif (DirectionChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_86_directionsInputEnabledCheckbox\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58936,"modified_method":"public void testAddGoogleMapWithDirections() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Google Maps Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Google Maps Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Configuration\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"_86_license\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"ABQIAAAA3nrHjKy73DtxJL8D67iR6hSqd3WNkXftHeaSLroSolGIoU-u5BTriDnzHVQc9TudabxQnFqk-gNe8A\"));\n\t\t\t\tselenium.type(\"_86_mapAddress\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"17730 Antonio Ave, Cerritos, CA, 90703\"));\n\t\t\t\tselenium.type(\"_86_directionsAddress\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"11947 Del Amo Blvd, Cerritos, CA, 90703\"));\n\n\t\t\t\tboolean DirectionChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_directionsInputEnabledCheckbox\");\n\n\t\t\t\tif (DirectionChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_86_directionsInputEnabledCheckbox\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//form/input[2]\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddGoogleMapWithMap() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Maps Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_86_license\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"ABQIAAAA3nrHjKy73DtxJL8D67iR6hSqd3WNkXftHeaSLroSolGIoU-u5BTriDnzHVQc9TudabxQnFqk-gNe8A\"));\n\t\tselenium.type(\"_86_mapAddress\",\n\t\t\tRuntimeVariables.replace(\"17730 Antonio Ave, Cerritos, CA, 90703\"));\n\t\tselenium.type(\"_86_directionsAddress\", RuntimeVariables.replace(\"\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have successfully updated the setup.\"));\n\t}","id":58937,"modified_method":"public void testAddGoogleMapWithMap() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Google Maps Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_86_license\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"ABQIAAAA3nrHjKy73DtxJL8D67iR6hSqd3WNkXftHeaSLroSolGIoU-u5BTriDnzHVQc9TudabxQnFqk-gNe8A\"));\n\t\tselenium.type(\"_86_mapAddress\",\n\t\t\tRuntimeVariables.replace(\"17730 Antonio Ave, Cerritos, CA, 90703\"));\n\t\tselenium.type(\"_86_directionsAddress\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//form/input[2]\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletBookings() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample ICEfaces IPC Bookings']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample ICEfaces IPC Bookings']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58938,"modified_method":"public void testAddPortletBookings() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample ICEfaces IPC - Bookings']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample ICEfaces IPC - Bookings']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletCustomers() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample ICEfaces IPC Customers']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample ICEfaces IPC Customers']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58939,"modified_method":"public void testAddPortletCustomers() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample ICEfaces IPC - Customers']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample ICEfaces IPC - Customers']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample JSF 1.1 Sun Facelets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample JSF 1.1 Sun Facelets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample JSF11 Sun Facelets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample JSF11 Sun Facelets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58940,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample JSF 1.1 Sun Facelets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample JSF 1.1 Sun Facelets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample JSF 1.1 Sun Facelets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample JSF 1.1 Sun Facelets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sample JSF 1.1 Sun JSP Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample JSF 1.1 Sun JSP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample JSF11 Sun JSP']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample JSF11 Sun JSP']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58941,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sample JSF 1.1 Sun JSP Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample JSF 1.1 Sun JSP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample JSF 1.1 Sun JSP']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample JSF 1.1 Sun JSP']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Novell Collaboration Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Novell Collaboration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"n\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Novell Collaboration']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Novell Collaboration']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58942,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Novell Collaboration Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Novell Collaboration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"no\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Bookmark']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Bookmark']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='GroupWise Calendar']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='GroupWise Calendar']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='GroupWise Mail']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='GroupWise Mail']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces JSF 1.1 Sun JSP Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces JSF 1.1 Sun JSP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample ICEfaces JSF11 Sun JSP']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample ICEfaces JSF11 Sun JSP']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58943,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces JSF 1.1 Sun JSP Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces JSF 1.1 Sun JSP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample ICEfaces JSF 1.1 Sun JSP']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample ICEfaces JSF 1.1 Sun JSP']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample JSF 1.1 Myfaces JSP Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample JSF 1.1 Myfaces JSP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample JSF11 MyFaces JSP']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample JSF11 MyFaces JSP']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58944,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample JSF 1.1 Myfaces JSP Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample JSF 1.1 Myfaces JSP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample JSF 1.1 MyFaces JSP']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample JSF 1.1 MyFaces JSP']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sample JSF 1.2 Sun JSP Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample JSF 1.2 Sun JSP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample JSF12 Sun JSP']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample JSF12 Sun JSP']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58945,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sample JSF 1.2 Sun JSP Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample JSF 1.2 Sun JSP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample JSF 1.2 Sun JSP']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample JSF 1.2 Sun JSP']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces JSF 1.2 Sun Facelets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces JSF 1.2 Sun Facelets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample ICEfaces JSF12 Sun Facelets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample ICEfaces JSF12 Sun Facelets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58946,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces JSF 1.2 Sun Facelets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces JSF 1.2 Sun Facelets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample ICEfaces JSF 1.2 Sun Facelets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample ICEfaces JSF 1.2 Sun Facelets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample JSF 1.1 Myfaces Facelets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample JSF 1.1 Myfaces Facelets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample JSF11 MyFaces Facelets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample JSF11 MyFaces Facelets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58947,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample JSF 1.1 Myfaces Facelets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample JSF 1.1 Myfaces Facelets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample JSF 1.1 MyFaces Facelets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample JSF 1.1 MyFaces Facelets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces JSF 1.1 Myfaces JSP Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces JSF 1.1 Myfaces JSP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample ICEfaces JSF11 MyFaces JSP']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample ICEfaces JSF11 MyFaces JSP']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58948,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces JSF 1.1 Myfaces JSP Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces JSF 1.1 Myfaces JSP Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample ICEfaces JSF 1.1 MyFaces JSP']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample ICEfaces JSF 1.1 MyFaces JSP']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces JSF 1.1 Sun Facelets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces JSF 1.1 Sun Facelets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample ICEfaces JSF11 Sun Facelets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample ICEfaces JSF11 Sun Facelets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":58949,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces JSF 1.1 Sun Facelets Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces JSF 1.1 Sun Facelets Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"s\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Sample ICEfaces JSF 1.1 Sun Facelets']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Sample ICEfaces JSF 1.1 Sun Facelets']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertAdSensePresent() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Adsense Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Public Service Ads by Google\"),\n\t\t\tselenium.getText(\"//td/font\"));\n\t}","id":58950,"modified_method":"public void testAssertAdSensePresent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Adsense Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Public Service Ads by Google\"),\n\t\t\tselenium.getText(\"//td/font\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertDisableInput() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Maps Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[1]\"));\n\t\tassertFalse(selenium.isElementPresent(\"//input[3]\"));\n\t}","id":58951,"modified_method":"public void testAssertDisableInput() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Google Maps Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[1]\"));\n\t\tassertFalse(selenium.isElementPresent(\"//input[3]\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertEnableInput() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Maps Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[1]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[3]\"));\n\t}","id":58952,"modified_method":"public void testAssertEnableInput() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Google Maps Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[1]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[3]\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertGadgetPresent() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Gadget Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Gadget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"a\"));\n\t\tassertTrue(selenium.isElementPresent(\"f\"));\n\t\tassertTrue(selenium.isElementPresent(\"t\"));\n\t\tassertTrue(selenium.isElementPresent(\"submit\"));\n\t}","id":58953,"modified_method":"public void testAssertGadgetPresent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Gadget Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Gadget Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Euro US Dollar Pound Sterling Argentine Peso Australian Dollar Bahrain Dinar Bangladeshi Taka Botswana Pula Brazilian Real British Pound Brunei Dollar Bulgarian Lev Canadian Dollar Chilean Peso Chinese Yuan Renminbi Colombian Peso Croatian Kuna Cyprus Pound Czech Koruna Danish Krone East Caribbean Dollar Egyptian Pound Estonian Kroon Euro Hong Kong Dollar Hungarian Forint Icelandic Krona Indian Rupee Indonesian Rupiah Iranian Rial Israeli Sheqel Jamaican Dollar Japanese Yen South Korean Won Kuwaiti Dinar Latvian Lats Libyan Dinar Lithuanian Litas Malaysian Ringgit Maldives Rufiyaa Maltese Lira Mauritian Rupee Mexican Peso Nepalese Rupee New Romanian Leu New Taiwan Dollar New Turkish Lira New Zealand Dollar Norwegian Krone Omani Rial Pakistan Rupee Peruvian Nuevo Sol Philippine Peso Polish Zloty Qatar Riyal Romanian Leu (new) Russian Rouble Saudi Arabian Riyal Singapore Dollar Slovak Koruna Slovenian Tolar South African Rand Sri Lanka Rupee Swedish Krona Swiss Franc Taiwan Dollar Taiwan Dollar (new) Thai Baht Trinidad And Tobago Dollar Turkish Lira (New) UAE Dirham Ukrainian Hrivna US Dollar Venezuelan Bolivar Gold (ounce) Platinum (ounce) Silver (ounce) Aluminium (ounce)\"),\n\t\t\tselenium.getText(\"from\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Euro US Dollar Pound Sterling Argentine Peso Australian Dollar Bahrain Dinar Bangladeshi Taka Botswana Pula Brazilian Real British Pound Brunei Dollar Bulgarian Lev Canadian Dollar Chilean Peso Chinese Yuan Renminbi Colombian Peso Croatian Kuna Cyprus Pound Czech Koruna Danish Krone East Caribbean Dollar Egyptian Pound Estonian Kroon Euro Hong Kong Dollar Hungarian Forint Icelandic Krona Indian Rupee Indonesian Rupiah Iranian Rial Israeli Sheqel Jamaican Dollar Japanese Yen South Korean Won Kuwaiti Dinar Latvian Lats Libyan Dinar Lithuanian Litas Malaysian Ringgit Maldives Rufiyaa Maltese Lira Mauritian Rupee Mexican Peso Nepalese Rupee New Romanian Leu New Taiwan Dollar New Turkish Lira New Zealand Dollar Norwegian Krone Omani Rial Pakistan Rupee Peruvian Nuevo Sol Philippine Peso Polish Zloty Qatar Riyal Romanian Leu (new) Russian Rouble Saudi Arabian Riyal Singapore Dollar Slovak Koruna Slovenian Tolar South African Rand Sri Lanka Rupee Swedish Krona Swiss Franc Taiwan Dollar Taiwan Dollar (new) Thai Baht Trinidad And Tobago Dollar Turkish Lira (New) UAE Dirham Ukrainian Hrivna US Dollar Venezuelan Bolivar Gold (ounce) Platinum (ounce) Silver (ounce) Aluminium (ounce)\"),\n\t\t\tselenium.getText(\"to\"));\n\t\tassertTrue(selenium.isElementPresent(\"value\"));\n\t\tassertTrue(selenium.isElementPresent(\"result\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertGoogleMap() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Maps Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Map\"),\n\t\t\tselenium.getText(\"//div[5]/div[1]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Satellite\"),\n\t\t\tselenium.getText(\"//div[5]/div[2]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hybrid\"),\n\t\t\tselenium.getText(\"//div[5]/div[3]/div\"));\n\t}","id":58954,"modified_method":"public void testAssertGoogleMap() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Maps Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Map\"),\n\t\t\tselenium.getText(\"//div[5]/div[1]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Satellite\"),\n\t\t\tselenium.getText(\"//div[5]/div[2]/div\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hybrid\"),\n\t\t\tselenium.getText(\"//div[5]/div[3]/div\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertGoogleMapWithDirections() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Maps Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(\"11947 Del Amo Blvd, Cerritos, CA, 90703\",\n\t\t\tselenium.getValue(\"//input[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"17730 Antonio Ave, Cerritos, CA, 90703\"),\n\t\t\tselenium.getText(\"//div[10]/div/div[1]/div/div\"));\n\t}","id":58955,"modified_method":"public void testAssertGoogleMapWithDirections() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Google Maps Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(\"11947 Del Amo Blvd, Cerritos, CA, 90703\",\n\t\t\tselenium.getValue(\"//input[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"17730 Antonio Ave, Cerritos, CA, 90703\"),\n\t\t\tselenium.getText(\"//div[10]/div/div[1]/div/div\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertGoogleMapWithMap() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Maps Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"17730 Antonio Ave, Cerritos, CA, 90703\"),\n\t\t\tselenium.getText(\"//div[10]/div/div[1]/div/div\"));\n\t}","id":58956,"modified_method":"public void testAssertGoogleMapWithMap() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Google Maps Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"17730 Antonio Ave, Cerritos, CA, 90703\"),\n\t\t\tselenium.getText(\"//div[10]/div/div[1]/div/div\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfiguration() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sample LAR Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sample LAR Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is the Sample LAR Portlet. This was made to demonstrate the portlet LAR plugin feature.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"_86_exportFileName\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Export']\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"_86_importFileName\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Import']\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":58957,"modified_method":"public void testConfiguration() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sample LAR Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Sample LAR Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is the Sample LAR Portlet. This was made to demonstrate the portlet LAR plugin feature.\"));\n\t\tselenium.clickAt(\"link=Configuration\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"close\");\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"_86_exportFileName\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Export']\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"_86_importFileName\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Import']\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDisableInput() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Google Maps Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Google Maps Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean MapChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_mapInputEnabledCheckbox\");\n\n\t\t\t\tif (!MapChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_86_mapInputEnabledCheckbox\");\n\n\t\t\tcase 2:\n\t\t\t\tThread.sleep(500);\n\n\t\t\t\tboolean DirectionChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_directionsInputEnabledCheckbox\");\n\n\t\t\t\tif (!DirectionChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_86_directionsInputEnabledCheckbox\");\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58958,"modified_method":"public void testDisableInput() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Google Maps Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Google Maps Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Configuration\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean MapChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_mapInputEnabledCheckbox\");\n\n\t\t\t\tif (!MapChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_86_mapInputEnabledCheckbox\");\n\n\t\t\tcase 2:\n\t\t\t\tThread.sleep(500);\n\n\t\t\t\tboolean DirectionChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_directionsInputEnabledCheckbox\");\n\n\t\t\t\tif (!DirectionChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_86_directionsInputEnabledCheckbox\");\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//form/input[2]\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEnableInput() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Google Maps Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Google Maps Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean MapChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_mapInputEnabledCheckbox\");\n\n\t\t\t\tif (MapChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_86_mapInputEnabledCheckbox\");\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean DirectionChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_directionsInputEnabledCheckbox\");\n\n\t\t\t\tif (DirectionChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_86_directionsInputEnabledCheckbox\");\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":58959,"modified_method":"public void testEnableInput() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Google Maps Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Google Maps Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Configuration\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean MapChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_mapInputEnabledCheckbox\");\n\n\t\t\t\tif (MapChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_86_mapInputEnabledCheckbox\");\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean DirectionChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_directionsInputEnabledCheckbox\");\n\n\t\t\t\tif (DirectionChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_86_directionsInputEnabledCheckbox\");\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//form/input[2]\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGetDirections() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Maps Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[1]\",\n\t\t\tRuntimeVariables.replace(\"17730 Antonio Ave, Cerritos, CA, 90703\"));\n\t\tselenium.type(\"//input[3]\",\n\t\t\tRuntimeVariables.replace(\"11947 Del Amo Blvd, Cerritos, CA, 90703\"));\n\t\tselenium.click(\"//input[@value='Get Directions']\");\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"name=undefined\");\n\t\tassertEquals(\"11947 Del Amo Blvd, Cerritos, CA, 90703\",\n\t\t\tselenium.getValue(\"d_d\"));\n\t\tassertEquals(\"17730 Antonio Ave, Cerritos, CA, 90703\",\n\t\t\tselenium.getValue(\"d_daddr\"));\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tThread.sleep(5000);\n\t}","id":58960,"modified_method":"public void testGetDirections() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Google Maps Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[1]\",\n\t\t\tRuntimeVariables.replace(\"17730 Antonio Ave, Cerritos, CA, 90703\"));\n\t\tselenium.type(\"//input[3]\",\n\t\t\tRuntimeVariables.replace(\"11947 Del Amo Blvd, Cerritos, CA, 90703\"));\n\t\tselenium.click(\"//input[@value='Get Directions']\");\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"name=undefined\");\n\t\tassertEquals(\"11947 Del Amo Blvd, Cerritos, CA, 90703\",\n\t\t\tselenium.getValue(\"d_d\"));\n\t\tassertEquals(\"17730 Antonio Ave, Cerritos, CA, 90703\",\n\t\t\tselenium.getValue(\"d_daddr\"));\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tThread.sleep(5000);\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGetMap() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Maps Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[1]\",\n\t\t\tRuntimeVariables.replace(\"17730 Antonio Ave, Cerritos, CA, 90703\"));\n\t\tselenium.type(\"//input[3]\", RuntimeVariables.replace(\"\"));\n\t\tselenium.click(\"//input[@value='Get Map']\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"17730 Antonio Ave, Cerritos, CA, 90703\"),\n\t\t\tselenium.getText(\"//div[10]/div/div[1]/div/div\"));\n\t}","id":58961,"modified_method":"public void testGetMap() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Google Maps Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Google Maps Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[1]\",\n\t\t\tRuntimeVariables.replace(\"17730 Antonio Ave, Cerritos, CA, 90703\"));\n\t\tselenium.type(\"//input[3]\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Get Map']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"17730 Antonio Ave, Cerritos, CA, 90703\"),\n\t\t\tselenium.getText(\"//div[10]/div/div[1]/div/div\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveBookingsPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isTextPresent(\" Sample ICEfaces IPC - Bookings\"));\n\t}","id":58962,"modified_method":"public void testRemoveBookingsPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Sample ICEfaces IPC - Bookings\"));\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isTextPresent(\"Sample ICEfaces IPC - Bookings\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveCustomersPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isTextPresent(\" Sample ICEfaces IPC - Customers\"));\n\t}","id":58963,"modified_method":"public void testRemoveCustomersPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Sample Icefaces IPC Ajax Push Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Sample ICEfaces IPC - Customers\"));\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isTextPresent(\"Sample ICEfaces IPC - Customers\"));\n\t}","commit_id":"56818c973a4e378071903859430b4690636f06c1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void setVisibleBranchesNodes(@NotNull Get<Node, Boolean> isStartedNode) {\n        visibleNodes.clear();\n        for (MutableNodeRow row : graph.getAllRows()) {\n            for (MutableNode node : row.getInnerNodeList()) {\n                if (isStartedNode.get(node)) {\n                    visibleNodes.add(node);\n                }\n                if (isStartedNode.get(node) || visibleNodes.contains(node)) {\n                    for (Edge edge : node.getInnerDownEdges()) {\n                        visibleNodes.add(edge.getDownNode());\n                    }\n                }\n            }\n        }\n    }","id":58964,"modified_method":"public Set<Node> generateVisibleBranchesNodes(@NotNull Get<Node, Boolean> isStartedNode) {\n        Set<Node> visibleNodes = new HashSet<Node>();\n        for (MutableNodeRow row : graph.getAllRows()) {\n            for (MutableNode node : row.getInnerNodeList()) {\n                if (isStartedNode.get(node)) {\n                    visibleNodes.add(node);\n                }\n                if (isStartedNode.get(node) || visibleNodes.contains(node)) {\n                    for (Edge edge : node.getInnerDownEdges()) {\n                        visibleNodes.add(edge.getDownNode());\n                    }\n                }\n            }\n        }\n        return visibleNodes;\n    }","commit_id":"c2df9814a6c808086142e3d58bd696ca8aee679a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void appendCommitsToGraph(@NotNull List<Commit> commits) {\n        int oldSize = graph.getNodeRows().size();\n        GraphBuilder.addCommitsToGraph(graph, commits);\n        visibleNodes.setVisibleBranchesNodes(isStartedBranchVisibilityNode);\n        graph.updateVisibleRows();\n\n        Replace replace = Replace.buildFromToInterval(0, oldSize - 1, 0, graph.getNodeRows().size() - 1);\n        callUpdateListener(replace);\n    }","id":58965,"modified_method":"@Override\n    public void appendCommitsToGraph(@NotNull List<Commit> commits) {\n        int oldSize = graph.getNodeRows().size();\n        GraphBuilder.addCommitsToGraph(graph, commits);\n        visibleNodes.setVisibleNodes(visibleNodes.generateVisibleBranchesNodes(isStartedBranchVisibilityNode));\n        graph.updateVisibleRows();\n\n        Replace replace = Replace.buildFromToInterval(0, oldSize - 1, 0, graph.getNodeRows().size() - 1);\n        callUpdateListener(replace);\n    }","commit_id":"c2df9814a6c808086142e3d58bd696ca8aee679a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public GraphModelImpl(MutableGraph graph) {\n        this.graph = graph;\n        this.fragmentManager = new FragmentManagerImpl(graph, new FragmentManagerImpl.CallBackFunction() {\n            @Override\n            public Replace runIntermediateUpdate(@NotNull Node upNode, @NotNull Node downNode) {\n                return GraphModelImpl.this.updateIntermediate(upNode, downNode);\n            }\n\n            @Override\n            public void fullUpdate() {\n                GraphModelImpl.this.fullUpdate();\n            }\n        });\n        this.visibleNodes = new BranchVisibleNodes(graph);\n        visibleNodes.setVisibleBranchesNodes(isStartedBranchVisibilityNode);\n        graph.setGraphDecorator(new GraphDecorator() {\n            private final GraphDecorator decorator = fragmentManager.getGraphDecorator();\n            @Override\n            public boolean isVisibleNode(@NotNull Node node) {\n                return visibleNodes.isVisibleNode(node) && decorator.isVisibleNode(node);\n            }\n\n            @Override\n            public Edge getHideFragmentDownEdge(@NotNull Node node) {\n                return decorator.getHideFragmentDownEdge(node);\n            }\n\n            @Override\n            public Edge getHideFragmentUpEdge(@NotNull Node node) {\n                return decorator.getHideFragmentUpEdge(node);\n            }\n        });\n        graph.updateVisibleRows();\n    }","id":58966,"modified_method":"public GraphModelImpl(MutableGraph graph) {\n        this.graph = graph;\n        this.fragmentManager = new FragmentManagerImpl(graph, new FragmentManagerImpl.CallBackFunction() {\n            @Override\n            public Replace runIntermediateUpdate(@NotNull Node upNode, @NotNull Node downNode) {\n                return GraphModelImpl.this.updateIntermediate(upNode, downNode);\n            }\n\n            @Override\n            public void fullUpdate() {\n                GraphModelImpl.this.fullUpdate();\n            }\n        });\n        this.visibleNodes = new BranchVisibleNodes(graph);\n        visibleNodes.setVisibleNodes(visibleNodes.generateVisibleBranchesNodes(isStartedBranchVisibilityNode));\n        branchShowFixer = new GraphBranchShowFixer(graph, fragmentManager);\n        graph.setGraphDecorator(new GraphDecorator() {\n            private final GraphDecorator decorator = fragmentManager.getGraphDecorator();\n            @Override\n            public boolean isVisibleNode(@NotNull Node node) {\n                return visibleNodes.isVisibleNode(node) && decorator.isVisibleNode(node);\n            }\n\n            @Override\n            public Edge getHideFragmentDownEdge(@NotNull Node node) {\n                return decorator.getHideFragmentDownEdge(node);\n            }\n\n            @Override\n            public Edge getHideFragmentUpEdge(@NotNull Node node) {\n                return decorator.getHideFragmentUpEdge(node);\n            }\n        });\n        graph.updateVisibleRows();\n    }","commit_id":"c2df9814a6c808086142e3d58bd696ca8aee679a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void setVisibleBranchesNodes(@NotNull Get<Node, Boolean> isStartedNode) {\n        this.isStartedBranchVisibilityNode = isStartedNode;\n        visibleNodes.setVisibleBranchesNodes(isStartedNode);\n        fullUpdate();\n    }","id":58967,"modified_method":"@Override\n    public void setVisibleBranchesNodes(@NotNull Get<Node, Boolean> isStartedNode) {\n        this.isStartedBranchVisibilityNode = isStartedNode;\n        Set<Node> prevVisibleNodes = visibleNodes.getVisibleNodes();\n        Set<Node> newVisibleNodes = visibleNodes.generateVisibleBranchesNodes(isStartedNode);\n        branchShowFixer.fixCrashBranches(prevVisibleNodes, newVisibleNodes);\n        visibleNodes.setVisibleNodes(newVisibleNodes);\n        fullUpdate();\n    }","commit_id":"c2df9814a6c808086142e3d58bd696ca8aee679a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void renderSetButtons(JspWriter out) throws IOException {\n        StringBuffer buf = new StringBuffer();\n        addButtonTo(buf, RequestContext.DISPATCH, UPDATE_LIST_KEY);\n        buf.append(\" \");\n        addButtonTo(buf, RequestContext.DISPATCH, SELECT_ALL_KEY);\n\n        if (numItemsChecked > 0) {\n            buf.append(\" \");\n            addButtonTo(buf, RequestContext.DISPATCH, UNSELECT_ALL_KEY);\n        }\n        out.println(buf.toString());\n    }","id":58968,"modified_method":"private void renderSetButtons(JspWriter out) throws IOException {\n        StringBuffer buf = new StringBuffer();\n        buf.append(addButtonTo(buf, RequestContext.DISPATCH, UPDATE_LIST_KEY,\n                                            \"update_list_key_id\"));\n        buf.append(\" \");\n        buf.append(addButtonTo(buf, RequestContext.DISPATCH, SELECT_ALL_KEY));\n\n        if (numItemsChecked > 0) {\n            buf.append(\" \");\n            buf.append(addButtonTo(buf, RequestContext.DISPATCH, UNSELECT_ALL_KEY));\n        }\n        out.println(buf.toString());\n    }","commit_id":"c49288a4746571d80d48e5c44c5200b1cca9b5ad","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private void addButtonTo(StringBuffer buf, String name,\n                               String label) {\n\n        LocalizationService ls = LocalizationService.getInstance();\n\n        HtmlTag input = new HtmlTag(\"input\");\n        input.setAttribute(\"type\", \"submit\");\n        input.setAttribute(\"name\", name);\n        input.setAttribute(\"value\", ls.getMessage(label));\n        buf.append(input.render());\n\n    }","id":58969,"modified_method":"private HtmlTag addButtonTo(StringBuffer buf, String name,\n                               String label) {\n\n        LocalizationService ls = LocalizationService.getInstance();\n\n        HtmlTag input = new HtmlTag(\"input\");\n        input.setAttribute(\"type\", \"submit\");\n        input.setAttribute(\"name\", name);\n        input.setAttribute(\"value\", ls.getMessage(label));\n        return input;\n\n    }","commit_id":"c49288a4746571d80d48e5c44c5200b1cca9b5ad","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private void renderSelectButtons() throws JspException {\n        if (!currentList.isEmpty()) {\n            StringBuffer buf = new StringBuffer();\n            buf.append(\"<span class=\\\"list-selection-buttons\\\">\");\n            String buttonName = ListTagUtil.makeSelectActionName(listName);\n            LocalizationService ls = LocalizationService.getInstance();\n            HtmlTag tag = new HtmlTag(\"input\");\n            tag.setAttribute(\"type\", \"submit\");\n            tag.setAttribute(\"name\", buttonName);\n            tag.setAttribute(\"value\",\n                    ls.getMessage(ListDisplayTag.UPDATE_LIST_KEY));\n            buf.append(tag.render()).append(\"&nbsp;\");\n\n            tag.setAttribute(\"value\",\n                    ls.getMessage(ListDisplayTag.SELECT_ALL_KEY));\n            buf.append(tag.render()).append(\"&nbsp;\");\n\n            String selectedName = ListTagUtil.makeSelectedAmountName(listName);\n            String selected = (String) pageContext.getRequest().getAttribute(selectedName);\n            if (!NULL_SELECTION.equals(selected) &&  selected != null) {\n                tag.setAttribute(\"value\",\n                        ls.getMessage(ListDisplayTag.UNSELECT_ALL_KEY));\n                buf.append(tag.render()).append(\"\\n\");\n            }\n            buf.append(\"<\/span>\");\n            ListTagUtil.write(pageContext, buf.toString());\n        }\n    }","id":58970,"modified_method":"private void renderSelectButtons() throws JspException {\n        if (!currentList.isEmpty()) {\n            StringBuffer buf = new StringBuffer();\n            buf.append(\"<span class=\\\"list-selection-buttons\\\">\");\n            String buttonName = ListTagUtil.makeSelectActionName(listName);\n            LocalizationService ls = LocalizationService.getInstance();\n            HtmlTag tag = new HtmlTag(\"input\");\n            tag.setAttribute(\"type\", \"submit\");\n            tag.setAttribute(\"name\", buttonName);\n            tag.setAttribute(\"value\",\n                    ls.getMessage(ListDisplayTag.UPDATE_LIST_KEY));\n            tag.setAttribute(\"id\", \"update_list_key_id\");\n            buf.append(tag.render()).append(\"&nbsp;\");\n\n            tag.setAttribute(\"value\",\n                    ls.getMessage(ListDisplayTag.SELECT_ALL_KEY));\n            buf.append(tag.render()).append(\"&nbsp;\");\n\n            String selectedName = ListTagUtil.makeSelectedAmountName(listName);\n            String selected = (String) pageContext.getRequest().getAttribute(selectedName);\n            if (!NULL_SELECTION.equals(selected) &&  selected != null) {\n                tag.setAttribute(\"value\",\n                        ls.getMessage(ListDisplayTag.UNSELECT_ALL_KEY));\n                buf.append(tag.render()).append(\"\\n\");\n            }\n            buf.append(\"<\/span>\");\n            ListTagUtil.write(pageContext, buf.toString());\n        }\n    }","commit_id":"c49288a4746571d80d48e5c44c5200b1cca9b5ad","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"public void handlePost(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n\t\t\n\t\tif(!ctx.isAllowedFullAccess()) {\n\t\t\tsuper.sendErrorPage(ctx, 403, \"Unauthorized\", L10n.getString(\"Toadlet.unauthorized\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tString passwd = request.getPartAsString(\"formPassword\", 32);\n\t\tboolean noPassword = (passwd == null) || !passwd.equals(core.formPassword);\n\t\tif(noPassword) {\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this)) Logger.minor(this, \"No password (\"+passwd+\" should be \"+core.formPassword+ ')');\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"invalid/unhandled data\", \"/\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(request.isPartSet(\"nnameF\")) {\n\t\t\tString selectedNName = request.getPartAsString(\"nname\", 255);\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node\").set(\"name\", selectedNName);\n\t\t\t\tLogger.normal(this, \"The node name has been set to \"+ selectedNName);\n\t\t\t} catch (InvalidConfigValueException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step2\", TOADLET_URL+\"?step=2\");\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"bwF\")) {\n\t\t\tString selectedUploadSpeed =request.getPartAsString(\"bw\", 6);\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node\").set(\"outputBandwidthLimit\", selectedUploadSpeed);\n\t\t\t\tLogger.normal(this, \"The outputBandwidthLimit has been set to \"+ selectedUploadSpeed);\n\t\t\t} catch (InvalidConfigValueException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step3\", TOADLET_URL+\"?step=3\");\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"dsF\")) {\n\t\t\tString selectedStoreSize =request.getPartAsString(\"ds\", 6);\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node\").set(\"storeSize\", selectedStoreSize);\n\t\t\t\tLogger.normal(this, \"The storeSize has been set to \"+ selectedStoreSize);\n\t\t\t} catch (InvalidConfigValueException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step3\", TOADLET_URL+\"?step=4\");\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"networkF\")) {\n\t\t\tStringBuffer sb = new StringBuffer();\n\t\t\t// prevent the user from locking himself out\n\t\t\tsb.append(\"127.0.0.1\");\n\t\t\tshort ifCount = 0;\n\t\t\tboolean hasIPV6 = false;\n\t\t\t\n\t\t\tEnumeration interfaces = NetworkInterface.getNetworkInterfaces();\n\t\t\twhile(interfaces.hasMoreElements()) {\n\t\t\t\tNetworkInterface currentIF = (NetworkInterface) interfaces.nextElement();\n\t\t\t\tif(currentIF == null) continue;\n\t\t\t\t\n\t\t\t\tEnumeration ipAddresses = currentIF.getInetAddresses();\n\t\t\t\twhile(ipAddresses.hasMoreElements()) {\n\t\t\t\t\tInetAddress currentInetAddress = (InetAddress) ipAddresses.nextElement();\n\t\t\t\t\tif(currentInetAddress instanceof Inet6Address)\n\t\t\t\t\t\thasIPV6 = true;\n\t\t\t\t\t\n\t\t\t\t\tif((currentInetAddress == null) || (currentInetAddress.isLoopbackAddress())) continue;\n\t\t\t\t\t\n\t\t\t\t\tString isIFSelected =request.getPartAsString(Base64.encode(currentInetAddress.getAddress()), 255);\n\t\t\t\t\tif((isIFSelected != null) && (isIFSelected.equals(\"true\"))) {\n\t\t\t\t\t\tsb.append(',');\n\t\t\t\t\t\tsb.append(currentInetAddress.getHostAddress());\n\t\t\t\t\t\tifCount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(hasIPV6)\n\t\t\t\tsb.append(\",0:0:0:0:0:0:0:1\");\n\t\t\t\n\t\t\tif(ifCount > 0) {\n\t\t\t\ttry {\n\t\t\t\t\t// Java doesn't provide a way to get the netmask : workaround and bind only to trusted if\n\t\t\t\t\tconfig.get(\"fcp\").set(\"bindTo\", sb.toString());\n\t\t\t\t\tconfig.get(\"fcp\").set(\"allowedHosts\", \"*\");\n\t\t\t\t\tconfig.get(\"fcp\").set(\"allowedHostsFullAccess\", \"*\");\n\n\t\t\t\t\tconfig.get(\"fproxy\").set(\"bindTo\", sb.toString());\n\t\t\t\t\tconfig.get(\"fproxy\").set(\"allowedHosts\", \"*\");\n\t\t\t\t\tconfig.get(\"fproxy\").set(\"allowedHostsFullAccess\", \"*\");\n\t\t\t\t\tconfig.store();\n\n\t\t\t\t\tLogger.normal(this, \"Network allowance list has been set to \"+ sb.toString());\n\t\t\t\t} catch (InvalidConfigValueException e) {\n\t\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step4\", TOADLET_URL+\"?step=5\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tsuper.writeTemporaryRedirect(ctx, \"invalid/unhandled data\", TOADLET_URL);\n\t}","id":58971,"modified_method":"public void handlePost(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n\t\t\n\t\tif(!ctx.isAllowedFullAccess()) {\n\t\t\tsuper.sendErrorPage(ctx, 403, \"Unauthorized\", L10n.getString(\"Toadlet.unauthorized\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tString passwd = request.getPartAsString(\"formPassword\", 32);\n\t\tboolean noPassword = (passwd == null) || !passwd.equals(core.formPassword);\n\t\tif(noPassword) {\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this)) Logger.minor(this, \"No password (\"+passwd+\" should be \"+core.formPassword+ ')');\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"invalid/unhandled data\", \"/\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(request.isPartSet(\"nnameF\")) {\n\t\t\tString selectedNName = request.getPartAsString(\"nname\", 255);\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node\").set(\"name\", selectedNName);\n\t\t\t\tLogger.normal(this, \"The node name has been set to \"+ selectedNName);\n\t\t\t} catch (InvalidConfigValueException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step2\", TOADLET_URL+\"?step=3\");\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"bwF\")) {\n\t\t\tString selectedUploadSpeed =request.getPartAsString(\"bw\", 6);\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node\").set(\"outputBandwidthLimit\", selectedUploadSpeed);\n\t\t\t\tLogger.normal(this, \"The outputBandwidthLimit has been set to \"+ selectedUploadSpeed);\n\t\t\t} catch (InvalidConfigValueException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step3\", TOADLET_URL+\"?step=4\");\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"dsF\")) {\n\t\t\tString selectedStoreSize =request.getPartAsString(\"ds\", 6);\n\t\t\t\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node\").set(\"storeSize\", selectedStoreSize);\n\t\t\t\tLogger.normal(this, \"The storeSize has been set to \"+ selectedStoreSize);\n\t\t\t} catch (InvalidConfigValueException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step3\", TOADLET_URL+\"?step=5\");\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"networkF\")) {\n\t\t\tStringBuffer sb = new StringBuffer();\n\t\t\t// prevent the user from locking himself out\n\t\t\tsb.append(\"127.0.0.1\");\n\t\t\tshort ifCount = 0;\n\t\t\tboolean hasIPV6 = false;\n\t\t\t\n\t\t\tEnumeration interfaces = NetworkInterface.getNetworkInterfaces();\n\t\t\twhile(interfaces.hasMoreElements()) {\n\t\t\t\tNetworkInterface currentIF = (NetworkInterface) interfaces.nextElement();\n\t\t\t\tif(currentIF == null) continue;\n\t\t\t\t\n\t\t\t\tEnumeration ipAddresses = currentIF.getInetAddresses();\n\t\t\t\twhile(ipAddresses.hasMoreElements()) {\n\t\t\t\t\tInetAddress currentInetAddress = (InetAddress) ipAddresses.nextElement();\n\t\t\t\t\tif(currentInetAddress instanceof Inet6Address)\n\t\t\t\t\t\thasIPV6 = true;\n\t\t\t\t\t\n\t\t\t\t\tif((currentInetAddress == null) || (currentInetAddress.isLoopbackAddress())) continue;\n\t\t\t\t\t\n\t\t\t\t\tString isIFSelected =request.getPartAsString(Base64.encode(currentInetAddress.getAddress()), 255);\n\t\t\t\t\tif((isIFSelected != null) && (isIFSelected.equals(\"true\"))) {\n\t\t\t\t\t\tsb.append(',');\n\t\t\t\t\t\tsb.append(currentInetAddress.getHostAddress());\n\t\t\t\t\t\tifCount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(hasIPV6)\n\t\t\t\tsb.append(\",0:0:0:0:0:0:0:1\");\n\t\t\t\n\t\t\tif(ifCount > 0) {\n\t\t\t\ttry {\n\t\t\t\t\t// Java doesn't provide a way to get the netmask : workaround and bind only to trusted if\n\t\t\t\t\tconfig.get(\"fcp\").set(\"bindTo\", sb.toString());\n\t\t\t\t\tconfig.get(\"fcp\").set(\"allowedHosts\", \"*\");\n\t\t\t\t\tconfig.get(\"fcp\").set(\"allowedHostsFullAccess\", \"*\");\n\n\t\t\t\t\tconfig.get(\"fproxy\").set(\"bindTo\", sb.toString());\n\t\t\t\t\tconfig.get(\"fproxy\").set(\"allowedHosts\", \"*\");\n\t\t\t\t\tconfig.get(\"fproxy\").set(\"allowedHostsFullAccess\", \"*\");\n\t\t\t\t\tconfig.store();\n\n\t\t\t\t\tLogger.normal(this, \"Network allowance list has been set to \"+ sb.toString());\n\t\t\t\t} catch (InvalidConfigValueException e) {\n\t\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step4\", TOADLET_URL+\"?step=6\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tsuper.writeTemporaryRedirect(ctx, \"invalid/unhandled data\", TOADLET_URL);\n\t}","commit_id":"a3086806f2421be3de6530670baba38ed3139836","url":"https://github.com/freenet/fred"},{"original_method":"public void handleGet(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n\t\tif(!ctx.isAllowedFullAccess()) {\n\t\t\tsuper.sendErrorPage(ctx, 403, \"Unauthorized\", L10n.getString(\"Toadlet.unauthorized\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tint currentStep = request.getIntParam(\"step\");\n\t\t\n\t\tif(currentStep == 1) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step1Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode nnameInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode nnameInfoboxHeader = nnameInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode nnameInfoboxContent = nnameInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tnnameInfoboxHeader.addChild(\"#\", l10n(\"chooseNodeName\"));\n\t\t\tnnameInfoboxContent.addChild(\"#\", l10n(\"chooseNodeNameLong\"));\n\t\t\tHTMLNode nnameForm = ctx.addFormChild(nnameInfoboxContent, \".\", \"nnameForm\");\n\t\t\tnnameForm.addChild(\"input\", \"name\", \"nname\");\n\t\t\t\n\t\t\tnnameForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"nnameF\", L10n.getString(\"Toadlet.ok\")});\n\t\t\tnnameForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeReply(ctx, 200, \"text/html; charset=utf-8\", \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == 2) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step2Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode bandwidthInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode bandwidthnfoboxHeader = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode bandwidthInfoboxContent = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tbandwidthnfoboxHeader.addChild(\"#\", l10n(\"bandwidthLimit\"));\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"bandwidthLimitLong\"));\n\t\t\tHTMLNode bandwidthForm = ctx.addFormChild(bandwidthInfoboxContent, \".\", \"bwForm\");\n\t\t\tHTMLNode result = bandwidthForm.addChild(\"select\", \"name\", \"bw\");\n\t\t\t\n\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { \"15\", \"selected\" }, \"I don't know\");\n\t\t\tresult.addChild(\"option\", \"value\", \"8K\", \"lower speed\");\n\t\t\tresult.addChild(\"option\", \"value\", \"12K\", \"1024+/128 kbps\");\n\t\t\tresult.addChild(\"option\", \"value\", \"24K\", \"1024+/256 kbps\");\n\t\t\tresult.addChild(\"option\", \"value\", \"48K\", \"1024+/512 kbps\");\n\t\t\tresult.addChild(\"option\", \"value\", \"96K\", \"1024+/1024 kbps\");\n\t\t\tresult.addChild(\"option\", \"value\", \"1000K\", \"higher speed\");\n\t\t\t\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"bwF\", L10n.getString(\"Toadlet.ok\")});\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeReply(ctx, 200, \"text/html; charset=utf-8\", \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == 3) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step3Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode bandwidthInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode bandwidthnfoboxHeader = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode bandwidthInfoboxContent = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tbandwidthnfoboxHeader.addChild(\"#\", l10n(\"datastoreSize\"));\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"datastoreSizeLong\"));\n\t\t\tHTMLNode bandwidthForm = ctx.addFormChild(bandwidthInfoboxContent, \".\", \"dsForm\");\n\t\t\tHTMLNode result = bandwidthForm.addChild(\"select\", \"name\", \"ds\");\n\t\t\t\n\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { \"1G\", \"selected\" }, \"1GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"2G\", \"2GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"3G\", \"3GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"5G\", \"5GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"10G\", \"10GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"20G\", \"20GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"30G\", \"30GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"50G\", \"50GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"100G\", \"100GiB\");\n\t\t\t\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"dsF\", L10n.getString(\"Toadlet.ok\")});\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeReply(ctx, 200, \"text/html; charset=utf-8\", \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == 4) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step4Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode networkInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode networkInfoboxHeader = networkInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode networkInfoboxContent = networkInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\tEnumeration interfaces = NetworkInterface.getNetworkInterfaces();\n\t\t\tHTMLNode networkForm = new HTMLNode(\"div\");\n\t\t\t\n\t\t\tshort ifCount = 0;\n\t\t\tHTMLNode ifList = new HTMLNode(\"div\", \"class\", \"interface\");\n\t\t\twhile(interfaces.hasMoreElements()) {\n\t\t\t\tNetworkInterface currentInterface = (NetworkInterface) interfaces.nextElement();\n\t\t\t\tif(currentInterface == null) continue;\n\t\t\t\t\n\t\t\t\tEnumeration ipAddresses = currentInterface.getInetAddresses();\n\t\t\t\twhile(ipAddresses.hasMoreElements()) {\n\t\t\t\t\tInetAddress ip = (InetAddress) ipAddresses.nextElement();\n\t\t\t\t\tif((ip == null) || (ip.isLoopbackAddress())) continue;\n\t\t\t\t\tifCount++;\n\t\t\t\t\tHTMLNode ipDiv = ifList.addChild(\"div\", \"class\", \"ipAddress\");\n\t\t\t\t\tipDiv.addChild(\"#\", L10n.getString(\"FirstTimeWizardToadlet.iDoTrust\", new String[] { \"interface\", \"ip\" }, new String[] { currentInterface.getName(), ip.getHostAddress() }));\n\t\t\t\t\tipDiv.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", Base64.encode(ip.getAddress()), \"true\" }, L10n.getString(\"Toadlet.yes\"));\n\t\t\t\t\tipDiv.addChild(\"input\", new String[] { \"type\", \"name\", \"value\", \"checked\" }, new String[] { \"radio\", Base64.encode(ip.getAddress()), \"false\", \"checked\" }, L10n.getString(\"Toadlet.no\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(ifCount > 0) {\n\t\t\t\tnetworkInfoboxHeader.addChild(\"#\", l10n(\"isNetworkTrusted\"));\n\t\t\t\tnetworkInfoboxContent.addChild(\"#\", l10n(\"isNetworkTrustedLong\"));\n\t\t\t\tnetworkForm.addChild(ifList);\n\t\t\t} else {\n\t\t\t\tnetworkInfoboxHeader.addChild(\"#\", l10n(\"noNetworkIF\"));\n\t\t\t\tnetworkInfoboxContent.addChild(\"#\", l10n(\"noNetworkIFLong\"));\t\t\t\t\n\t\t\t}\n\t\t\tctx.addFormChild(networkInfoboxContent, \".\", \"networkForm\").addChild(networkForm);\n\t\t\t\n\t\t\tnetworkForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"networkF\", L10n.getString(\"Toadlet.ok\")});\n\t\t\tnetworkForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeReply(ctx, 200, \"text/html; charset=utf-8\", \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t}else if(currentStep == 5) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step5Title\"), true, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode congratzInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode congratzInfoboxHeader = congratzInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode congratzInfoboxContent = congratzInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\tcongratzInfoboxHeader.addChild(\"#\", l10n(\"congratz\"));\n\t\t\tcongratzInfoboxContent.addChild(\"#\", l10n(\"congratzLong\"));\n\n\t\t\tthis.writeReply(ctx, 200, \"text/html; charset=utf-8\", \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"homepageTitle\"), false, ctx);\n\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\n\t\tHTMLNode welcomeInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\tHTMLNode welcomeInfoboxHeader = welcomeInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\tHTMLNode welcomeInfoboxContent = welcomeInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\twelcomeInfoboxHeader.addChild(\"#\", l10n(\"welcomeInfoboxTitle\"));\n\t\t\n\t\tHTMLNode firstParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tfirstParagraph.addChild(\"#\", l10n(\"welcomeInfoboxContent1\") + ' ');\n\t\tfirstParagraph.addChild(\"a\", \"href\", \"?step=1\").addChild(\"#\", L10n.getString(\"Toadlet.ok\"));\n\t\t\n\t\tHTMLNode secondParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tsecondParagraph.addChild(\"a\", \"href\", \"/\").addChild(\"#\", l10n(\"skipWizard\"));\n\t\t\n\t\tthis.writeReply(ctx, 200, \"text/html; charset=utf-8\", \"OK\", pageNode.generate());\n\t}","id":58972,"modified_method":"public void handleGet(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n\t\tif(!ctx.isAllowedFullAccess()) {\n\t\t\tsuper.sendErrorPage(ctx, 403, \"Unauthorized\", L10n.getString(\"Toadlet.unauthorized\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tint currentStep = request.getIntParam(\"step\");\n\t\t\n\t\tif(currentStep == 1) {\n\t\t\t\n\t\t} else if(currentStep == 2) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step2Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode nnameInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode nnameInfoboxHeader = nnameInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode nnameInfoboxContent = nnameInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tnnameInfoboxHeader.addChild(\"#\", l10n(\"chooseNodeName\"));\n\t\t\tnnameInfoboxContent.addChild(\"#\", l10n(\"chooseNodeNameLong\"));\n\t\t\tHTMLNode nnameForm = ctx.addFormChild(nnameInfoboxContent, \".\", \"nnameForm\");\n\t\t\tnnameForm.addChild(\"input\", \"name\", \"nname\");\n\t\t\t\n\t\t\tnnameForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"nnameF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tnnameForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeReply(ctx, 200, \"text/html; charset=utf-8\", \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == 3) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step3Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode bandwidthInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode bandwidthnfoboxHeader = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode bandwidthInfoboxContent = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tbandwidthnfoboxHeader.addChild(\"#\", l10n(\"bandwidthLimit\"));\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"bandwidthLimitLong\"));\n\t\t\tHTMLNode bandwidthForm = ctx.addFormChild(bandwidthInfoboxContent, \".\", \"bwForm\");\n\t\t\tHTMLNode result = bandwidthForm.addChild(\"select\", \"name\", \"bw\");\n\t\t\t\n\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { \"15\", \"selected\" }, \"I don't know\");\n\t\t\tresult.addChild(\"option\", \"value\", \"8K\", \"lower speed\");\n\t\t\tresult.addChild(\"option\", \"value\", \"12K\", \"1024+/128 kbps\");\n\t\t\tresult.addChild(\"option\", \"value\", \"24K\", \"1024+/256 kbps\");\n\t\t\tresult.addChild(\"option\", \"value\", \"48K\", \"1024+/512 kbps\");\n\t\t\tresult.addChild(\"option\", \"value\", \"96K\", \"1024+/1024 kbps\");\n\t\t\tresult.addChild(\"option\", \"value\", \"1000K\", \"higher speed\");\n\t\t\t\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"bwF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeReply(ctx, 200, \"text/html; charset=utf-8\", \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == 4) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step4Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode bandwidthInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode bandwidthnfoboxHeader = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode bandwidthInfoboxContent = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tbandwidthnfoboxHeader.addChild(\"#\", l10n(\"datastoreSize\"));\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"datastoreSizeLong\"));\n\t\t\tHTMLNode bandwidthForm = ctx.addFormChild(bandwidthInfoboxContent, \".\", \"dsForm\");\n\t\t\tHTMLNode result = bandwidthForm.addChild(\"select\", \"name\", \"ds\");\n\t\t\t\n\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { \"1G\", \"selected\" }, \"1GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"2G\", \"2GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"3G\", \"3GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"5G\", \"5GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"10G\", \"10GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"20G\", \"20GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"30G\", \"30GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"50G\", \"50GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"100G\", \"100GiB\");\n\t\t\t\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"dsF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeReply(ctx, 200, \"text/html; charset=utf-8\", \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == 5) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step5Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode networkInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode networkInfoboxHeader = networkInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode networkInfoboxContent = networkInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\tEnumeration interfaces = NetworkInterface.getNetworkInterfaces();\n\t\t\tHTMLNode networkForm = new HTMLNode(\"div\");\n\t\t\t\n\t\t\tshort ifCount = 0;\n\t\t\tHTMLNode ifList = new HTMLNode(\"div\", \"class\", \"interface\");\n\t\t\twhile(interfaces.hasMoreElements()) {\n\t\t\t\tNetworkInterface currentInterface = (NetworkInterface) interfaces.nextElement();\n\t\t\t\tif(currentInterface == null) continue;\n\t\t\t\t\n\t\t\t\tEnumeration ipAddresses = currentInterface.getInetAddresses();\n\t\t\t\twhile(ipAddresses.hasMoreElements()) {\n\t\t\t\t\tInetAddress ip = (InetAddress) ipAddresses.nextElement();\n\t\t\t\t\tif((ip == null) || (ip.isLoopbackAddress())) continue;\n\t\t\t\t\tifCount++;\n\t\t\t\t\tHTMLNode ipDiv = ifList.addChild(\"div\", \"class\", \"ipAddress\");\n\t\t\t\t\tipDiv.addChild(\"#\", L10n.getString(\"FirstTimeWizardToadlet.iDoTrust\", new String[] { \"interface\", \"ip\" }, new String[] { currentInterface.getName(), ip.getHostAddress() }));\n\t\t\t\t\tipDiv.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", Base64.encode(ip.getAddress()), \"true\" }, L10n.getString(\"Toadlet.yes\"));\n\t\t\t\t\tipDiv.addChild(\"input\", new String[] { \"type\", \"name\", \"value\", \"checked\" }, new String[] { \"radio\", Base64.encode(ip.getAddress()), \"false\", \"checked\" }, L10n.getString(\"Toadlet.no\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(ifCount > 0) {\n\t\t\t\tnetworkInfoboxHeader.addChild(\"#\", l10n(\"isNetworkTrusted\"));\n\t\t\t\tnetworkInfoboxContent.addChild(\"#\", l10n(\"isNetworkTrustedLong\"));\n\t\t\t\tnetworkForm.addChild(ifList);\n\t\t\t} else {\n\t\t\t\tnetworkInfoboxHeader.addChild(\"#\", l10n(\"noNetworkIF\"));\n\t\t\t\tnetworkInfoboxContent.addChild(\"#\", l10n(\"noNetworkIFLong\"));\t\t\t\t\n\t\t\t}\n\t\t\tctx.addFormChild(networkInfoboxContent, \".\", \"networkForm\").addChild(networkForm);\n\t\t\t\n\t\t\tnetworkForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"networkF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tnetworkForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeReply(ctx, 200, \"text/html; charset=utf-8\", \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t}else if(currentStep == 6) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step6Title\"), true, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode congratzInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode congratzInfoboxHeader = congratzInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode congratzInfoboxContent = congratzInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\tcongratzInfoboxHeader.addChild(\"#\", l10n(\"congratz\"));\n\t\t\tcongratzInfoboxContent.addChild(\"#\", l10n(\"congratzLong\"));\n\n\t\t\tthis.writeReply(ctx, 200, \"text/html; charset=utf-8\", \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"homepageTitle\"), false, ctx);\n\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\n\t\tHTMLNode welcomeInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\tHTMLNode welcomeInfoboxHeader = welcomeInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\tHTMLNode welcomeInfoboxContent = welcomeInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\twelcomeInfoboxHeader.addChild(\"#\", l10n(\"welcomeInfoboxTitle\"));\n\t\t\n\t\tHTMLNode firstParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tfirstParagraph.addChild(\"#\", l10n(\"welcomeInfoboxContent1\") + ' ');\n\t\tfirstParagraph.addChild(\"a\", \"href\", \"?step=1\").addChild(\"#\", L10n.getString(\"FirstTimeWizardToadlet.continue\"));\n\t\t\n\t\tHTMLNode secondParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tsecondParagraph.addChild(\"a\", \"href\", \"/\").addChild(\"#\", l10n(\"skipWizard\"));\n\t\t\n\t\tthis.writeReply(ctx, 200, \"text/html; charset=utf-8\", \"OK\", pageNode.generate());\n\t}","commit_id":"a3086806f2421be3de6530670baba38ed3139836","url":"https://github.com/freenet/fred"},{"original_method":"@Override\n\tpublic void handlePost(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n\t\t\n\t\tif(!ctx.isAllowedFullAccess()) {\n\t\t\tsuper.sendErrorPage(ctx, 403, \"Unauthorized\", L10n.getString(\"Toadlet.unauthorized\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tString passwd = request.getPartAsString(\"formPassword\", 32);\n\t\tboolean noPassword = (passwd == null) || !passwd.equals(core.formPassword);\n\t\tif(noPassword) {\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this)) Logger.minor(this, \"No password (\"+passwd+\" should be \"+core.formPassword+ ')');\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"invalid/unhandled data\", \"/\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(request.isPartSet(\"security-levels.networkThreatLevel\")) {\n\t\t\t// We don't require a confirmation here, since it's one page at a time, so there's less information to\n\t\t\t// confuse the user, and we don't know whether the node has friends yet etc.\n\t\t\t// FIXME should we have confirmation here???\n\t\t\tString networkThreatLevel = request.getPartAsString(\"security-levels.networkThreatLevel\", 128);\n\t\t\tNETWORK_THREAT_LEVEL newThreatLevel = SecurityLevels.parseNetworkThreatLevel(networkThreatLevel);\n\t\t\tif(newThreatLevel == null) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_NETWORK);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif((newThreatLevel == NETWORK_THREAT_LEVEL.MAXIMUM || newThreatLevel == NETWORK_THREAT_LEVEL.HIGH)) {\n\t\t\t\tif((!request.isPartSet(\"security-levels.networkThreatLevel.confirm\")) &&\n\t\t\t\t\t(!request.isPartSet(\"security-levels.networkThreatLevel.tryConfirm\"))) {\n\t\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"networkSecurityPageTitle\"), ctx);\n\t\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\t\tHTMLNode content = page.content;\n\t\t\t\t\tHTMLNode formNode = ctx.addFormChild(content, \".\", \"configFormSecLevels\");\n\t\t\t\t\t\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.networkThreatLevel\", networkThreatLevel });\n\t\t\t\t\tHTMLNode infobox = formNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10nSec(\"networkThreatLevelConfirmTitle\", \"mode\", SecurityLevels.localisedName(newThreatLevel)));\n\t\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\tif(newThreatLevel == NETWORK_THREAT_LEVEL.MAXIMUM) {\n\t\t\t\t\t\tHTMLNode p = infoboxContent.addChild(\"p\");\n\t\t\t\t\t\tL10n.addL10nSubstitution(p, \"SecurityLevels.maximumNetworkThreatLevelWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\t\tp.addChild(\"#\", \" \");\n\t\t\t\t\t\tL10n.addL10nSubstitution(p, \"SecurityLevels.maxSecurityYouNeedFriends\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"checkbox\", \"security-levels.networkThreatLevel.confirm\", \"off\" }, l10nSec(\"maximumNetworkThreatLevelCheckbox\"));\n\t\t\t\t\t} else /*if(newThreatLevel == NETWORK_THREAT_LEVEL.HIGH)*/ {\n\t\t\t\t\t\tHTMLNode p = infoboxContent.addChild(\"p\");\n\t\t\t\t\t\tL10n.addL10nSubstitution(p, \"FirstTimeWizardToadlet.highNetworkThreatLevelWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"checkbox\", \"security-levels.networkThreatLevel.confirm\", \"off\" }, l10n(\"highNetworkThreatLevelCheckbox\"));\n\t\t\t\t\t}\n\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.networkThreatLevel.tryConfirm\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"seclevels\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"submit\", L10n.getString(\"ConfigToadlet.apply\")});\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"reset\",  L10n.getString(\"ConfigToadlet.reset\")});\n\t\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t\t\treturn;\n\t\t\t\t} else if((!request.isPartSet(\"security-levels.networkThreatLevel.confirm\")) &&\n\t\t\t\t\t\trequest.isPartSet(\"security-levels.networkThreatLevel.tryConfirm\")) {\n\t\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_NETWORK);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcore.node.securityLevels.setThreatLevel(newThreatLevel);\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_FRIENDS);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"security-levels.friendsThreatLevel\")) {\n\t\t\t// We don't require a confirmation here, since it's one page at a time, so there's less information to\n\t\t\t// confuse the user, and we don't know whether the node has friends yet etc.\n\t\t\t// FIXME should we have confirmation here???\n\t\t\tString friendsThreatLevel = request.getPartAsString(\"security-levels.friendsThreatLevel\", 128);\n\t\t\tFRIENDS_THREAT_LEVEL newThreatLevel = SecurityLevels.parseFriendsThreatLevel(friendsThreatLevel);\n\t\t\tif(newThreatLevel == null) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_FRIENDS);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif((newThreatLevel == FRIENDS_THREAT_LEVEL.HIGH)) {\n\t\t\t\tif((!request.isPartSet(\"security-levels.friendsThreatLevel.confirm\")) &&\n\t\t\t\t\t(!request.isPartSet(\"security-levels.friendsThreatLevel.tryConfirm\"))) {\n\t\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"friendsSecurityPageTitle\"), ctx);\n\t\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\t\tHTMLNode content = page.content;\n\t\t\t\t\tHTMLNode formNode = ctx.addFormChild(content, \".\", \"configFormSecLevels\");\n\t\t\t\t\t\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.friendsThreatLevel\", friendsThreatLevel });\n\t\t\t\t\tHTMLNode infobox = formNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10nSec(\"friendsThreatLevelConfirmTitle\", \"mode\", SecurityLevels.localisedName(newThreatLevel)));\n\t\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\tHTMLNode p = infoboxContent.addChild(\"p\");\n\t\t\t\t\tL10n.addL10nSubstitution(p, \"FirstTimeWizardToadlet.highFriendsThreatLevelWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"checkbox\", \"security-levels.friendsThreatLevel.confirm\", \"off\" }, l10nSec(\"highFriendsThreatLevelCheckbox\"));\n\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.friendsThreatLevel.tryConfirm\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"seclevels\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"submit\", L10n.getString(\"ConfigToadlet.apply\")});\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"reset\",  L10n.getString(\"ConfigToadlet.reset\")});\n\t\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t\t\treturn;\n\t\t\t\t} else if((!request.isPartSet(\"security-levels.friendsThreatLevel.confirm\")) &&\n\t\t\t\t\t\trequest.isPartSet(\"security-levels.friendsThreatLevel.tryConfirm\")) {\n\t\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_FRIENDS);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcore.node.securityLevels.setThreatLevel(newThreatLevel);\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_PHYSICAL);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"security-levels.physicalThreatLevel\")) {\n\t\t\t// We don't require a confirmation here, since it's one page at a time, so there's less information to\n\t\t\t// confuse the user, and we don't know whether the node has friends yet etc.\n\t\t\t// FIXME should we have confirmation here???\n\t\t\tString physicalThreatLevel = request.getPartAsString(\"security-levels.physicalThreatLevel\", 128);\n\t\t\tPHYSICAL_THREAT_LEVEL newThreatLevel = SecurityLevels.parsePhysicalThreatLevel(physicalThreatLevel);\n\t\t\tif(newThreatLevel == null) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_PHYSICAL);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcore.node.securityLevels.setThreatLevel(newThreatLevel);\n\t\t\tcore.storeConfig();\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.NAME_SELECTION+\"&opennet=\"+core.node.isOpennetEnabled());\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"nnameF\")) {\n\t\t\tString selectedNName = request.getPartAsString(\"nname\", 128);\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node\").set(\"name\", selectedNName);\n\t\t\t\tLogger.normal(this, \"The node name has been set to \"+ selectedNName);\n\t\t\t} catch (ConfigException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e, e);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step3\", TOADLET_URL+\"?step=\"+WIZARD_STEP.BANDWIDTH);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"bwF\")) {\n\t\t\t_setUpstreamBandwidthLimit(request.getPartAsString(\"bw\", 20)); // drop down options may be 6 chars or less, but formatted ones e.g. old value if re-running can be more\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step4\", TOADLET_URL+\"?step=\"+WIZARD_STEP.DATASTORE_SIZE);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"dsF\")) {\n\t\t\t_setDatastoreSize(request.getPartAsString(\"ds\", 20)); // drop down options may be 6 chars or less, but formatted ones e.g. old value if re-running can be more\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step5\", TOADLET_URL+\"?step=\"+WIZARD_STEP.MISC);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"memoryF\")) {\n\t\t\tString selectedMemorySize = request.getPartAsString(\"memoryF\", 6);\n\t\t\t\n\t\t\tint memorySize = Fields.parseInt(selectedMemorySize, -1);\n\t\t\tif(memorySize >= 0) {\n\t\t\t\tWrapperConfig.setWrapperProperty(\"wrapper.java.maxmemory\", selectedMemorySize);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step6\", TOADLET_URL+\"?step=\"+WIZARD_STEP.MISC);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"miscF\")) {\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node.updater\").set(\"autoupdate\", Boolean.parseBoolean(request.getPartAsString(\"autodeploy\", 10)));\n\t\t\t} catch (ConfigException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e, e);\n\t\t\t}\n\t\t\tboolean enableUPnP = request.isPartSet(\"upnp\");\n\t\t\tboolean enableJSTUN = request.isPartSet(\"jstun\");\n\t\t\tif(enableUPnP != core.node.pluginManager.isPluginLoaded(\"plugins.UPnP.UPnP\")) {\n\t\t\t\tif(enableUPnP)\n\t\t\t\t\tcore.node.pluginManager.startPluginOfficial(\"UPnP\", true);\n\t\t\t\telse\n\t\t\t\t\tcore.node.pluginManager.killPluginByClass(\"plugins.UPnP.UPnP\", 5000);\n\t\t\t}\n\t\t\tif(enableJSTUN != core.node.pluginManager.isPluginLoaded(\"plugins.JSTUN.JSTUN\")) {\n\t\t\t\tif(enableJSTUN)\n\t\t\t\t\tcore.node.pluginManager.startPluginOfficial(\"JSTUN\", true);\n\t\t\t\telse\n\t\t\t\t\tcore.node.pluginManager.killPluginByClass(\"plugins.JSTUN.JSTUN\", 5000);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step7\", TOADLET_URL+\"?step=\"+WIZARD_STEP.CONGRATZ);\n\t\t\treturn;\n\t\t\t\t\n\t\t}\n\t\t\n\t\tsuper.writeTemporaryRedirect(ctx, \"invalid/unhandled data\", TOADLET_URL);\n\t}","id":58973,"modified_method":"@Override\n\tpublic void handlePost(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n\t\t\n\t\tif(!ctx.isAllowedFullAccess()) {\n\t\t\tsuper.sendErrorPage(ctx, 403, \"Unauthorized\", L10n.getString(\"Toadlet.unauthorized\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tString passwd = request.getPartAsString(\"formPassword\", 32);\n\t\tboolean noPassword = (passwd == null) || !passwd.equals(core.formPassword);\n\t\tif(noPassword) {\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this)) Logger.minor(this, \"No password (\"+passwd+\" should be \"+core.formPassword+ ')');\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"invalid/unhandled data\", \"/\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(request.isPartSet(\"security-levels.networkThreatLevel\")) {\n\t\t\t// We don't require a confirmation here, since it's one page at a time, so there's less information to\n\t\t\t// confuse the user, and we don't know whether the node has friends yet etc.\n\t\t\t// FIXME should we have confirmation here???\n\t\t\tString networkThreatLevel = request.getPartAsString(\"security-levels.networkThreatLevel\", 128);\n\t\t\tNETWORK_THREAT_LEVEL newThreatLevel = SecurityLevels.parseNetworkThreatLevel(networkThreatLevel);\n\t\t\tif(newThreatLevel == null) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_NETWORK);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif((newThreatLevel == NETWORK_THREAT_LEVEL.MAXIMUM || newThreatLevel == NETWORK_THREAT_LEVEL.HIGH)) {\n\t\t\t\tif((!request.isPartSet(\"security-levels.networkThreatLevel.confirm\")) &&\n\t\t\t\t\t(!request.isPartSet(\"security-levels.networkThreatLevel.tryConfirm\"))) {\n\t\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"networkSecurityPageTitle\"), ctx);\n\t\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\t\tHTMLNode content = page.content;\n\t\t\t\t\tHTMLNode formNode = ctx.addFormChild(content, \".\", \"configFormSecLevels\");\n\t\t\t\t\t\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.networkThreatLevel\", networkThreatLevel });\n\t\t\t\t\tHTMLNode infobox = formNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10nSec(\"networkThreatLevelConfirmTitle\", \"mode\", SecurityLevels.localisedName(newThreatLevel)));\n\t\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\tif(newThreatLevel == NETWORK_THREAT_LEVEL.MAXIMUM) {\n\t\t\t\t\t\tHTMLNode p = infoboxContent.addChild(\"p\");\n\t\t\t\t\t\tL10n.addL10nSubstitution(p, \"SecurityLevels.maximumNetworkThreatLevelWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\t\tp.addChild(\"#\", \" \");\n\t\t\t\t\t\tL10n.addL10nSubstitution(p, \"SecurityLevels.maxSecurityYouNeedFriends\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"checkbox\", \"security-levels.networkThreatLevel.confirm\", \"off\" }, l10nSec(\"maximumNetworkThreatLevelCheckbox\"));\n\t\t\t\t\t} else /*if(newThreatLevel == NETWORK_THREAT_LEVEL.HIGH)*/ {\n\t\t\t\t\t\tHTMLNode p = infoboxContent.addChild(\"p\");\n\t\t\t\t\t\tL10n.addL10nSubstitution(p, \"FirstTimeWizardToadlet.highNetworkThreatLevelWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"checkbox\", \"security-levels.networkThreatLevel.confirm\", \"off\" }, l10n(\"highNetworkThreatLevelCheckbox\"));\n\t\t\t\t\t}\n\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.networkThreatLevel.tryConfirm\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"seclevels\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"submit\", L10n.getString(\"ConfigToadlet.apply\")});\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"reset\",  L10n.getString(\"ConfigToadlet.reset\")});\n\t\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t\t\treturn;\n\t\t\t\t} else if((!request.isPartSet(\"security-levels.networkThreatLevel.confirm\")) &&\n\t\t\t\t\t\trequest.isPartSet(\"security-levels.networkThreatLevel.tryConfirm\")) {\n\t\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_NETWORK);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcore.node.securityLevels.setThreatLevel(newThreatLevel);\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_FRIENDS);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"security-levels.friendsThreatLevel\")) {\n\t\t\t// We don't require a confirmation here, since it's one page at a time, so there's less information to\n\t\t\t// confuse the user, and we don't know whether the node has friends yet etc.\n\t\t\t// FIXME should we have confirmation here???\n\t\t\tString friendsThreatLevel = request.getPartAsString(\"security-levels.friendsThreatLevel\", 128);\n\t\t\tFRIENDS_THREAT_LEVEL newThreatLevel = SecurityLevels.parseFriendsThreatLevel(friendsThreatLevel);\n\t\t\tif(newThreatLevel == null) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_FRIENDS);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif((newThreatLevel == FRIENDS_THREAT_LEVEL.HIGH)) {\n\t\t\t\tif((!request.isPartSet(\"security-levels.friendsThreatLevel.confirm\")) &&\n\t\t\t\t\t(!request.isPartSet(\"security-levels.friendsThreatLevel.tryConfirm\"))) {\n\t\t\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"friendsSecurityPageTitle\"), ctx);\n\t\t\t\t\tHTMLNode pageNode = page.outer;\n\t\t\t\t\tHTMLNode content = page.content;\n\t\t\t\t\tHTMLNode formNode = ctx.addFormChild(content, \".\", \"configFormSecLevels\");\n\t\t\t\t\t\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.friendsThreatLevel\", friendsThreatLevel });\n\t\t\t\t\tHTMLNode infobox = formNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10nSec(\"friendsThreatLevelConfirmTitle\", \"mode\", SecurityLevels.localisedName(newThreatLevel)));\n\t\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\tHTMLNode p = infoboxContent.addChild(\"p\");\n\t\t\t\t\tL10n.addL10nSubstitution(p, \"FirstTimeWizardToadlet.highFriendsThreatLevelWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"checkbox\", \"security-levels.friendsThreatLevel.confirm\", \"off\" }, l10nSec(\"highFriendsThreatLevelCheckbox\"));\n\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.friendsThreatLevel.tryConfirm\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"seclevels\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"submit\", L10n.getString(\"ConfigToadlet.apply\")});\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"reset\",  L10n.getString(\"ConfigToadlet.reset\")});\n\t\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t\t\treturn;\n\t\t\t\t} else if((!request.isPartSet(\"security-levels.friendsThreatLevel.confirm\")) &&\n\t\t\t\t\t\trequest.isPartSet(\"security-levels.friendsThreatLevel.tryConfirm\")) {\n\t\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_FRIENDS);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcore.node.securityLevels.setThreatLevel(newThreatLevel);\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_PHYSICAL);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"security-levels.physicalThreatLevel\")) {\n\t\t\t// We don't require a confirmation here, since it's one page at a time, so there's less information to\n\t\t\t// confuse the user, and we don't know whether the node has friends yet etc.\n\t\t\t// FIXME should we have confirmation here???\n\t\t\tString physicalThreatLevel = request.getPartAsString(\"security-levels.physicalThreatLevel\", 128);\n\t\t\tPHYSICAL_THREAT_LEVEL newThreatLevel = SecurityLevels.parsePhysicalThreatLevel(physicalThreatLevel);\n\t\t\tif(newThreatLevel == null) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_PHYSICAL);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcore.node.securityLevels.setThreatLevel(newThreatLevel);\n\t\t\tcore.storeConfig();\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.NAME_SELECTION+\"&opennet=\"+core.node.isOpennetEnabled());\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"nnameF\")) {\n\t\t\tString selectedNName = request.getPartAsString(\"nname\", 128);\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node\").set(\"name\", selectedNName);\n\t\t\t\tLogger.normal(this, \"The node name has been set to \"+ selectedNName);\n\t\t\t} catch (ConfigException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e, e);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step3\", TOADLET_URL+\"?step=\"+WIZARD_STEP.BANDWIDTH);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"bwF\")) {\n\t\t\t_setUpstreamBandwidthLimit(request.getPartAsString(\"bw\", 20)); // drop down options may be 6 chars or less, but formatted ones e.g. old value if re-running can be more\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step4\", TOADLET_URL+\"?step=\"+WIZARD_STEP.DATASTORE_SIZE);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"dsF\")) {\n\t\t\t_setDatastoreSize(request.getPartAsString(\"ds\", 20)); // drop down options may be 6 chars or less, but formatted ones e.g. old value if re-running can be more\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step5\", TOADLET_URL+\"?step=\"+WIZARD_STEP.CONGRATZ);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"miscF\")) {\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node.updater\").set(\"autoupdate\", Boolean.parseBoolean(request.getPartAsString(\"autodeploy\", 10)));\n\t\t\t} catch (ConfigException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e, e);\n\t\t\t}\n\t\t\tboolean enableUPnP = request.isPartSet(\"upnp\");\n\t\t\tboolean enableJSTUN = request.isPartSet(\"jstun\");\n\t\t\tif(enableUPnP != core.node.pluginManager.isPluginLoaded(\"plugins.UPnP.UPnP\")) {\n\t\t\t\tif(enableUPnP)\n\t\t\t\t\tcore.node.pluginManager.startPluginOfficial(\"UPnP\", true);\n\t\t\t\telse\n\t\t\t\t\tcore.node.pluginManager.killPluginByClass(\"plugins.UPnP.UPnP\", 5000);\n\t\t\t}\n\t\t\tif(enableJSTUN != core.node.pluginManager.isPluginLoaded(\"plugins.JSTUN.JSTUN\")) {\n\t\t\t\tif(enableJSTUN)\n\t\t\t\t\tcore.node.pluginManager.startPluginOfficial(\"JSTUN\", true);\n\t\t\t\telse\n\t\t\t\t\tcore.node.pluginManager.killPluginByClass(\"plugins.JSTUN.JSTUN\", 5000);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step7\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_NETWORK);\n\t\t\treturn;\n\t\t\t\t\n\t\t}\n\t\t\n\t\tsuper.writeTemporaryRedirect(ctx, \"invalid/unhandled data\", TOADLET_URL);\n\t}","commit_id":"4e8d448d699c450b9ffc1d993d033f86709a2a13","url":"https://github.com/freenet/fred"},{"original_method":"@Override\n\tpublic void handleGet(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n\t\tif(!ctx.isAllowedFullAccess()) {\n\t\t\tsuper.sendErrorPage(ctx, 403, \"Unauthorized\", L10n.getString(\"Toadlet.unauthorized\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tWIZARD_STEP currentStep = WIZARD_STEP.valueOf(request.getParam(\"step\", WIZARD_STEP.WELCOME.toString()));\n\t\t\n\t\tif(currentStep == WIZARD_STEP.BROWSER_WARNING) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"browserWarningPageTitle\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10n(\"browserWarningShort\"));\n\t\t\tL10n.addL10nSubstitution(infoboxContent, \"FirstTimeWizardToadlet.browserWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\tinfoboxContent.addChild(\"p\", l10n(\"browserWarningSuggestion\"));\n\t\t\t\n\t\t\tinfoboxContent.addChild(\"p\").addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.SECURITY_NETWORK, L10n.getString(\"FirstTimeWizardToadlet.clickContinue\"));\n\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.SECURITY_NETWORK) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"networkSecurityPageTitle\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10nSec(\"networkThreatLevelShort\"));\n\t\t\tinfoboxContent.addChild(\"p\", l10nSec(\"networkThreatLevel\"));\n\t\t\tHTMLNode form = ctx.addFormChild(infoboxContent, \".\", \"networkSecurityForm\");\n\t\t\tHTMLNode div = form.addChild(\"div\", \"class\", \"opennetDiv\");\n\t\t\tString controlName = \"security-levels.networkThreatLevel\";\n\t\t\tfor(NETWORK_THREAT_LEVEL level : NETWORK_THREAT_LEVEL.values()) {\n\t\t\t\tHTMLNode input;\n\t\t\t\tinput = div.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", controlName, level.name() });\n\t\t\t\tinput.addChild(\"b\", l10nSec(\"networkThreatLevel.name.\"+level));\n\t\t\t\tinput.addChild(\"#\", \": \");\n\t\t\t\tL10n.addL10nSubstitution(input, \"SecurityLevels.networkThreatLevel.choice.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\tHTMLNode inner = input.addChild(\"p\").addChild(\"i\");\n\t\t\t\tL10n.addL10nSubstitution(inner, \"SecurityLevels.networkThreatLevel.desc.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t}\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"networkSecurityF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.SECURITY_FRIENDS) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"friendsSecurityPageTitle\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10nSec(\"friendsThreatLevelShort\"));\n\t\t\tinfoboxContent.addChild(\"p\", l10nSec(\"friendsThreatLevel\"));\n\t\t\tHTMLNode form = ctx.addFormChild(infoboxContent, \".\", \"friendsSecurityForm\");\n\t\t\tHTMLNode div = form.addChild(\"div\", \"class\", \"opennetDiv\");\n\t\t\tString controlName = \"security-levels.friendsThreatLevel\";\n\t\t\tfor(FRIENDS_THREAT_LEVEL level : FRIENDS_THREAT_LEVEL.values()) {\n\t\t\t\tHTMLNode input;\n\t\t\t\tinput = div.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", controlName, level.name() });\n\t\t\t\tinput.addChild(\"b\", l10nSec(\"friendsThreatLevel.name.\"+level));\n\t\t\t\tinput.addChild(\"#\", \": \");\n\t\t\t\tL10n.addL10nSubstitution(input, \"SecurityLevels.friendsThreatLevel.choice.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\tHTMLNode inner = input.addChild(\"p\").addChild(\"i\");\n\t\t\t\tL10n.addL10nSubstitution(inner, \"SecurityLevels.friendsThreatLevel.desc.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t}\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"friendsSecurityF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.SECURITY_PHYSICAL) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"physicalSecurityPageTitle\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10nSec(\"physicalThreatLevelShort\"));\n\t\t\tinfoboxContent.addChild(\"p\", l10nSec(\"physicalThreatLevel\"));\n\t\t\tHTMLNode form = ctx.addFormChild(infoboxContent, \".\", \"physicalSecurityForm\");\n\t\t\tHTMLNode div = form.addChild(\"div\", \"class\", \"opennetDiv\");\n\t\t\tString controlName = \"security-levels.physicalThreatLevel\";\n\t\t\tfor(PHYSICAL_THREAT_LEVEL level : PHYSICAL_THREAT_LEVEL.values()) {\n\t\t\t\tHTMLNode input;\n\t\t\t\tinput = div.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", controlName, level.name() });\n\t\t\t\tinput.addChild(\"b\", l10nSec(\"physicalThreatLevel.name.\"+level));\n\t\t\t\tinput.addChild(\"#\", \": \");\n\t\t\t\tL10n.addL10nSubstitution(input, \"SecurityLevels.physicalThreatLevel.choice.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\tHTMLNode inner = input.addChild(\"p\").addChild(\"i\");\n\t\t\t\tL10n.addL10nSubstitution(inner, \"SecurityLevels.physicalThreatLevel.desc.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t}\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"physicalSecurityF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.NAME_SELECTION) {\n\t\t\t// Attempt to skip one step if possible: opennet nodes don't need a name\n\t\t\tif(Boolean.valueOf(request.getParam(\"opennet\"))) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step3\", TOADLET_URL+\"?step=\"+WIZARD_STEP.BANDWIDTH);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"step2Title\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode nnameInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode nnameInfoboxHeader = nnameInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode nnameInfoboxContent = nnameInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tnnameInfoboxHeader.addChild(\"#\", l10n(\"chooseNodeName\"));\n\t\t\tnnameInfoboxContent.addChild(\"#\", l10n(\"chooseNodeNameLong\"));\n\t\t\tHTMLNode nnameForm = ctx.addFormChild(nnameInfoboxContent, \".\", \"nnameForm\");\n\t\t\tnnameForm.addChild(\"input\", \"name\", \"nname\");\n\t\t\t\n\t\t\tnnameForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"nnameF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tnnameForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.BANDWIDTH) {\n\t\t\t// Attempt to skip one step if possible\n\t\t\tint autodetectedLimit = canAutoconfigureBandwidth();\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"step3Title\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode bandwidthInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode bandwidthnfoboxHeader = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode bandwidthInfoboxContent = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tbandwidthnfoboxHeader.addChild(\"#\", l10n(\"bandwidthLimit\"));\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"bandwidthLimitLong\"));\n\t\t\tHTMLNode bandwidthForm = ctx.addFormChild(bandwidthInfoboxContent, \".\", \"bwForm\");\n\t\t\tHTMLNode result = bandwidthForm.addChild(\"select\", \"name\", \"bw\");\n\t\t\t\n\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\tOption<Integer> sizeOption = (Option<Integer>) config.get(\"node\").getOption(\"outputBandwidthLimit\");\n\t\t\tif(!sizeOption.isDefault()) {\n\t\t\t\tint current = sizeOption.getValue();\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(current), \"on\" }, l10n(\"currentSpeed\")+\" \"+SizeUtil.formatSize(current)+\"/s\");\n\t\t\t} else if(autodetectedLimit != -1)\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(autodetectedLimit), \"on\" }, l10n(\"autodetectedSuggestedLimit\")+\" \"+SizeUtil.formatSize(autodetectedLimit)+\"/s\");\n\n\t\t\t// don't forget to update handlePost too if you change that!\n\t\t\tif(autodetectedLimit != 8192)\n\t\t\t\tresult.addChild(\"option\", \"value\", \"8K\", l10n(\"bwlimitLowerSpeed\"));\n\t\t\t// Special case for 128kbps to increase performance at the cost of some link degradation. Above that we use 50% of the limit.\n\t\t\tresult.addChild(\"option\", \"value\", \"12K\", \"512+/128 kbps (12KB/s)\");\n\t\t\tif(autodetectedLimit != -1 || !sizeOption.isDefault())\n\t\t\t\tresult.addChild(\"option\", \"value\", \"16K\", \"1024+/256 kbps (16KB/s)\");\n\t\t\telse\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { \"16K\", \"selected\" }, \"1024+/256 kbps (16KB/s)\");\n\t\t\tresult.addChild(\"option\", \"value\", \"32K\", \"1024+/512 kbps (32K/s)\");\n\t\t\tresult.addChild(\"option\", \"value\", \"64K\", \"1024+/1024 kbps (64K/s)\");\n\t\t\tresult.addChild(\"option\", \"value\", \"1000K\", l10n(\"bwlimitHigherSpeed\"));\n\t\t\t\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"bwF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"bandwidthLimitAfter\"));\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.DATASTORE_SIZE) {\n\t\t\t// Attempt to skip one step if possible\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"step4Title\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode bandwidthInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode bandwidthnfoboxHeader = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode bandwidthInfoboxContent = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tbandwidthnfoboxHeader.addChild(\"#\", l10n(\"datastoreSize\"));\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"datastoreSizeLong\"));\n\t\t\tHTMLNode bandwidthForm = ctx.addFormChild(bandwidthInfoboxContent, \".\", \"dsForm\");\n\t\t\tHTMLNode result = bandwidthForm.addChild(\"select\", \"name\", \"ds\");\n\n\t\t\tlong autodetectedSize = canAutoconfigureDatastoreSize();\n\t\t\t\n\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\tOption<Long> sizeOption = (Option<Long>) config.get(\"node\").getOption(\"storeSize\");\n\t\t\tif(!sizeOption.isDefault()) {\n\t\t\t\tlong current = sizeOption.getValue();\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(current), \"on\" }, l10n(\"currentPrefix\")+\" \"+SizeUtil.formatSize(current));\n\t\t\t} else if(autodetectedSize != -1)\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(autodetectedSize), \"on\" }, SizeUtil.formatSize(autodetectedSize));\n\t\t\tif(autodetectedSize != 512*1024*1024)\n\t\t\t\tresult.addChild(\"option\", \"value\", \"512M\", \"512 MiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"1G\", \"1 GiB\");\n\t\t\tif(autodetectedSize != -1 || !sizeOption.isDefault())\n\t\t\t\tresult.addChild(\"option\", \"value\", \"2G\", \"2 GiB\");\n\t\t\telse\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { \"2G\", \"on\" }, \"2GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"3G\", \"3 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"5G\", \"5 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"10G\", \"10 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"20G\", \"20 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"30G\", \"30 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"50G\", \"50 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"100G\", \"100 GiB\");\n\t\t\t\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"dsF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.MISC) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"stepMiscTitle\"), true, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode form = ctx.addFormChild(contentNode, \".\", \"miscForm\");\n\t\t\t\n\t\t\tHTMLNode miscInfobox = form.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode miscInfoboxHeader = miscInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode miscInfoboxContent = miscInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tmiscInfoboxHeader.addChild(\"#\", l10n(\"autoUpdate\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\", l10n(\"autoUpdateLong\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"checked\", \"name\", \"value\" },\n\t\t\t\t\tnew String[] { \"radio\", \"on\", \"autodeploy\", \"true\" }, l10n(\"autoUpdateAutodeploy\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" },\n\t\t\t\t\tnew String[] { \"radio\", \"autodeploy\", \"false\" }, l10n(\"autoUpdateNoAutodeploy\"));\n\t\t\t\n\t\t\tmiscInfobox = form.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tmiscInfoboxHeader = miscInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tmiscInfoboxContent = miscInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tmiscInfoboxHeader.addChild(\"#\", l10n(\"plugins\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\", l10n(\"pluginsLong\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"checked\", \"name\", \"value\" },\n\t\t\t\t\tnew String[] { \"checkbox\", \"on\", \"upnp\", \"true\" }, l10n(\"enableUPnP\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"checked\", \"name\", \"value\" },\n\t\t\t\t\tnew String[] { \"checkbox\", \"on\", \"jstun\", \"true\" }, l10n(\"enableJSTUN\"));\n\t\t\t\n\t\t\tmiscInfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"miscF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tmiscInfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t}else if(currentStep == WIZARD_STEP.CONGRATZ) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"step7Title\"), true, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode congratzInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode congratzInfoboxHeader = congratzInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode congratzInfoboxContent = congratzInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\tcongratzInfoboxHeader.addChild(\"#\", l10n(\"congratz\"));\n\t\t\tcongratzInfoboxContent.addChild(\"p\", l10n(\"congratzLong\"));\n\t\t\t\n\t\t\tcongratzInfoboxContent.addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.FINAL, L10n.getString(\"FirstTimeWizardToadlet.continueEnd\"));\n\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.FINAL) {\n\t\t\ttry {\n\t\t\t\tconfig.get(\"fproxy\").set(\"hasCompletedWizard\", true);\n                                config.store();\n\t\t\t\tthis.writeTemporaryRedirect(ctx, \"Return to home\", \"/\");\n\t\t\t} catch (ConfigException e) {\n\t\t\t\tLogger.error(this, e.getMessage(), e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"homepageTitle\"), false, ctx);\n\t\tHTMLNode pageNode = page.outer;\n\t\tHTMLNode contentNode = page.content;\n\t\t\n\t\tHTMLNode welcomeInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\tHTMLNode welcomeInfoboxHeader = welcomeInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\tHTMLNode welcomeInfoboxContent = welcomeInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\twelcomeInfoboxHeader.addChild(\"#\", l10n(\"welcomeInfoboxTitle\"));\n\t\t\n\t\tHTMLNode firstParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tfirstParagraph.addChild(\"#\", l10n(\"welcomeInfoboxContent1\"));\n\t\tHTMLNode secondParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tsecondParagraph.addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.BROWSER_WARNING).addChild(\"#\", L10n.getString(\"FirstTimeWizardToadlet.clickContinue\"));\n\t\t\n\t\tHTMLNode thirdParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tthirdParagraph.addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.FINAL).addChild(\"#\", l10n(\"skipWizard\"));\n\t\t\n\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t}","id":58974,"modified_method":"@Override\n\tpublic void handleGet(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n\t\tif(!ctx.isAllowedFullAccess()) {\n\t\t\tsuper.sendErrorPage(ctx, 403, \"Unauthorized\", L10n.getString(\"Toadlet.unauthorized\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tWIZARD_STEP currentStep = WIZARD_STEP.valueOf(request.getParam(\"step\", WIZARD_STEP.WELCOME.toString()));\n\t\t\n\t\tif(currentStep == WIZARD_STEP.BROWSER_WARNING) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"browserWarningPageTitle\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10n(\"browserWarningShort\"));\n\t\t\tL10n.addL10nSubstitution(infoboxContent, \"FirstTimeWizardToadlet.browserWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\tinfoboxContent.addChild(\"p\", l10n(\"browserWarningSuggestion\"));\n\t\t\t\n\t\t\tinfoboxContent.addChild(\"p\").addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.MISC, L10n.getString(\"FirstTimeWizardToadlet.clickContinue\"));\n\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.SECURITY_NETWORK) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"networkSecurityPageTitle\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10nSec(\"networkThreatLevelShort\"));\n\t\t\tinfoboxContent.addChild(\"p\", l10nSec(\"networkThreatLevel\"));\n\t\t\tHTMLNode form = ctx.addFormChild(infoboxContent, \".\", \"networkSecurityForm\");\n\t\t\tHTMLNode div = form.addChild(\"div\", \"class\", \"opennetDiv\");\n\t\t\tString controlName = \"security-levels.networkThreatLevel\";\n\t\t\tfor(NETWORK_THREAT_LEVEL level : NETWORK_THREAT_LEVEL.values()) {\n\t\t\t\tHTMLNode input;\n\t\t\t\tinput = div.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", controlName, level.name() });\n\t\t\t\tinput.addChild(\"b\", l10nSec(\"networkThreatLevel.name.\"+level));\n\t\t\t\tinput.addChild(\"#\", \": \");\n\t\t\t\tL10n.addL10nSubstitution(input, \"SecurityLevels.networkThreatLevel.choice.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\tHTMLNode inner = input.addChild(\"p\").addChild(\"i\");\n\t\t\t\tL10n.addL10nSubstitution(inner, \"SecurityLevels.networkThreatLevel.desc.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t}\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"networkSecurityF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.SECURITY_FRIENDS) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"friendsSecurityPageTitle\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10nSec(\"friendsThreatLevelShort\"));\n\t\t\tinfoboxContent.addChild(\"p\", l10nSec(\"friendsThreatLevel\"));\n\t\t\tHTMLNode form = ctx.addFormChild(infoboxContent, \".\", \"friendsSecurityForm\");\n\t\t\tHTMLNode div = form.addChild(\"div\", \"class\", \"opennetDiv\");\n\t\t\tString controlName = \"security-levels.friendsThreatLevel\";\n\t\t\tfor(FRIENDS_THREAT_LEVEL level : FRIENDS_THREAT_LEVEL.values()) {\n\t\t\t\tHTMLNode input;\n\t\t\t\tinput = div.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", controlName, level.name() });\n\t\t\t\tinput.addChild(\"b\", l10nSec(\"friendsThreatLevel.name.\"+level));\n\t\t\t\tinput.addChild(\"#\", \": \");\n\t\t\t\tL10n.addL10nSubstitution(input, \"SecurityLevels.friendsThreatLevel.choice.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\tHTMLNode inner = input.addChild(\"p\").addChild(\"i\");\n\t\t\t\tL10n.addL10nSubstitution(inner, \"SecurityLevels.friendsThreatLevel.desc.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t}\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"friendsSecurityF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.SECURITY_PHYSICAL) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"physicalSecurityPageTitle\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10nSec(\"physicalThreatLevelShort\"));\n\t\t\tinfoboxContent.addChild(\"p\", l10nSec(\"physicalThreatLevel\"));\n\t\t\tHTMLNode form = ctx.addFormChild(infoboxContent, \".\", \"physicalSecurityForm\");\n\t\t\tHTMLNode div = form.addChild(\"div\", \"class\", \"opennetDiv\");\n\t\t\tString controlName = \"security-levels.physicalThreatLevel\";\n\t\t\tfor(PHYSICAL_THREAT_LEVEL level : PHYSICAL_THREAT_LEVEL.values()) {\n\t\t\t\tHTMLNode input;\n\t\t\t\tinput = div.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", controlName, level.name() });\n\t\t\t\tinput.addChild(\"b\", l10nSec(\"physicalThreatLevel.name.\"+level));\n\t\t\t\tinput.addChild(\"#\", \": \");\n\t\t\t\tL10n.addL10nSubstitution(input, \"SecurityLevels.physicalThreatLevel.choice.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\tHTMLNode inner = input.addChild(\"p\").addChild(\"i\");\n\t\t\t\tL10n.addL10nSubstitution(inner, \"SecurityLevels.physicalThreatLevel.desc.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t}\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"physicalSecurityF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.NAME_SELECTION) {\n\t\t\t// Attempt to skip one step if possible: opennet nodes don't need a name\n\t\t\tif(Boolean.valueOf(request.getParam(\"opennet\"))) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step3\", TOADLET_URL+\"?step=\"+WIZARD_STEP.BANDWIDTH);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"step2Title\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode nnameInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode nnameInfoboxHeader = nnameInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode nnameInfoboxContent = nnameInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tnnameInfoboxHeader.addChild(\"#\", l10n(\"chooseNodeName\"));\n\t\t\tnnameInfoboxContent.addChild(\"#\", l10n(\"chooseNodeNameLong\"));\n\t\t\tHTMLNode nnameForm = ctx.addFormChild(nnameInfoboxContent, \".\", \"nnameForm\");\n\t\t\tnnameForm.addChild(\"input\", \"name\", \"nname\");\n\t\t\t\n\t\t\tnnameForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"nnameF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tnnameForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.BANDWIDTH) {\n\t\t\t// Attempt to skip one step if possible\n\t\t\tint autodetectedLimit = canAutoconfigureBandwidth();\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"step3Title\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode bandwidthInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode bandwidthnfoboxHeader = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode bandwidthInfoboxContent = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tbandwidthnfoboxHeader.addChild(\"#\", l10n(\"bandwidthLimit\"));\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"bandwidthLimitLong\"));\n\t\t\tHTMLNode bandwidthForm = ctx.addFormChild(bandwidthInfoboxContent, \".\", \"bwForm\");\n\t\t\tHTMLNode result = bandwidthForm.addChild(\"select\", \"name\", \"bw\");\n\t\t\t\n\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\tOption<Integer> sizeOption = (Option<Integer>) config.get(\"node\").getOption(\"outputBandwidthLimit\");\n\t\t\tif(!sizeOption.isDefault()) {\n\t\t\t\tint current = sizeOption.getValue();\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(current), \"on\" }, l10n(\"currentSpeed\")+\" \"+SizeUtil.formatSize(current)+\"/s\");\n\t\t\t} else if(autodetectedLimit != -1)\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(autodetectedLimit), \"on\" }, l10n(\"autodetectedSuggestedLimit\")+\" \"+SizeUtil.formatSize(autodetectedLimit)+\"/s\");\n\n\t\t\t// don't forget to update handlePost too if you change that!\n\t\t\tif(autodetectedLimit != 8192)\n\t\t\t\tresult.addChild(\"option\", \"value\", \"8K\", l10n(\"bwlimitLowerSpeed\"));\n\t\t\t// Special case for 128kbps to increase performance at the cost of some link degradation. Above that we use 50% of the limit.\n\t\t\tresult.addChild(\"option\", \"value\", \"12K\", \"512+/128 kbps (12KB/s)\");\n\t\t\tif(autodetectedLimit != -1 || !sizeOption.isDefault())\n\t\t\t\tresult.addChild(\"option\", \"value\", \"16K\", \"1024+/256 kbps (16KB/s)\");\n\t\t\telse\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { \"16K\", \"selected\" }, \"1024+/256 kbps (16KB/s)\");\n\t\t\tresult.addChild(\"option\", \"value\", \"32K\", \"1024+/512 kbps (32K/s)\");\n\t\t\tresult.addChild(\"option\", \"value\", \"64K\", \"1024+/1024 kbps (64K/s)\");\n\t\t\tresult.addChild(\"option\", \"value\", \"1000K\", l10n(\"bwlimitHigherSpeed\"));\n\t\t\t\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"bwF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"bandwidthLimitAfter\"));\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.DATASTORE_SIZE) {\n\t\t\t// Attempt to skip one step if possible\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"step4Title\"), false, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode bandwidthInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode bandwidthnfoboxHeader = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode bandwidthInfoboxContent = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tbandwidthnfoboxHeader.addChild(\"#\", l10n(\"datastoreSize\"));\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"datastoreSizeLong\"));\n\t\t\tHTMLNode bandwidthForm = ctx.addFormChild(bandwidthInfoboxContent, \".\", \"dsForm\");\n\t\t\tHTMLNode result = bandwidthForm.addChild(\"select\", \"name\", \"ds\");\n\n\t\t\tlong autodetectedSize = canAutoconfigureDatastoreSize();\n\t\t\t\n\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\tOption<Long> sizeOption = (Option<Long>) config.get(\"node\").getOption(\"storeSize\");\n\t\t\tif(!sizeOption.isDefault()) {\n\t\t\t\tlong current = sizeOption.getValue();\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(current), \"on\" }, l10n(\"currentPrefix\")+\" \"+SizeUtil.formatSize(current));\n\t\t\t} else if(autodetectedSize != -1)\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(autodetectedSize), \"on\" }, SizeUtil.formatSize(autodetectedSize));\n\t\t\tif(autodetectedSize != 512*1024*1024)\n\t\t\t\tresult.addChild(\"option\", \"value\", \"512M\", \"512 MiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"1G\", \"1 GiB\");\n\t\t\tif(autodetectedSize != -1 || !sizeOption.isDefault())\n\t\t\t\tresult.addChild(\"option\", \"value\", \"2G\", \"2 GiB\");\n\t\t\telse\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { \"2G\", \"on\" }, \"2GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"3G\", \"3 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"5G\", \"5 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"10G\", \"10 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"20G\", \"20 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"30G\", \"30 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"50G\", \"50 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"100G\", \"100 GiB\");\n\t\t\t\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"dsF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.MISC) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"stepMiscTitle\"), true, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode form = ctx.addFormChild(contentNode, \".\", \"miscForm\");\n\t\t\t\n\t\t\tHTMLNode miscInfobox = form.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode miscInfoboxHeader = miscInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode miscInfoboxContent = miscInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tmiscInfoboxHeader.addChild(\"#\", l10n(\"autoUpdate\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\", l10n(\"autoUpdateLong\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"checked\", \"name\", \"value\" },\n\t\t\t\t\tnew String[] { \"radio\", \"on\", \"autodeploy\", \"true\" }, l10n(\"autoUpdateAutodeploy\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" },\n\t\t\t\t\tnew String[] { \"radio\", \"autodeploy\", \"false\" }, l10n(\"autoUpdateNoAutodeploy\"));\n\t\t\t\n\t\t\tmiscInfobox = form.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tmiscInfoboxHeader = miscInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tmiscInfoboxContent = miscInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tmiscInfoboxHeader.addChild(\"#\", l10n(\"plugins\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\", l10n(\"pluginsLong\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"checked\", \"name\", \"value\" },\n\t\t\t\t\tnew String[] { \"checkbox\", \"on\", \"upnp\", \"true\" }, l10n(\"enableUPnP\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"checked\", \"name\", \"value\" },\n\t\t\t\t\tnew String[] { \"checkbox\", \"on\", \"jstun\", \"true\" }, l10n(\"enableJSTUN\"));\n\t\t\t\n\t\t\tmiscInfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"miscF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tmiscInfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t}else if(currentStep == WIZARD_STEP.CONGRATZ) {\n\t\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"step7Title\"), true, ctx);\n\t\t\tHTMLNode pageNode = page.outer;\n\t\t\tHTMLNode contentNode = page.content;\n\t\t\t\n\t\t\tHTMLNode congratzInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode congratzInfoboxHeader = congratzInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode congratzInfoboxContent = congratzInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\tcongratzInfoboxHeader.addChild(\"#\", l10n(\"congratz\"));\n\t\t\tcongratzInfoboxContent.addChild(\"p\", l10n(\"congratzLong\"));\n\t\t\t\n\t\t\tcongratzInfoboxContent.addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.FINAL, L10n.getString(\"FirstTimeWizardToadlet.continueEnd\"));\n\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.FINAL) {\n\t\t\ttry {\n\t\t\t\tconfig.get(\"fproxy\").set(\"hasCompletedWizard\", true);\n                                config.store();\n\t\t\t\tthis.writeTemporaryRedirect(ctx, \"Return to home\", \"/\");\n\t\t\t} catch (ConfigException e) {\n\t\t\t\tLogger.error(this, e.getMessage(), e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tPageNode page = ctx.getPageMaker().getPageNode(l10n(\"homepageTitle\"), false, ctx);\n\t\tHTMLNode pageNode = page.outer;\n\t\tHTMLNode contentNode = page.content;\n\t\t\n\t\tHTMLNode welcomeInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\tHTMLNode welcomeInfoboxHeader = welcomeInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\tHTMLNode welcomeInfoboxContent = welcomeInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\twelcomeInfoboxHeader.addChild(\"#\", l10n(\"welcomeInfoboxTitle\"));\n\t\t\n\t\tHTMLNode firstParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tfirstParagraph.addChild(\"#\", l10n(\"welcomeInfoboxContent1\"));\n\t\tHTMLNode secondParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tsecondParagraph.addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.BROWSER_WARNING).addChild(\"#\", L10n.getString(\"FirstTimeWizardToadlet.clickContinue\"));\n\t\t\n\t\tHTMLNode thirdParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tthirdParagraph.addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.FINAL).addChild(\"#\", l10n(\"skipWizard\"));\n\t\t\n\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t}","commit_id":"4e8d448d699c450b9ffc1d993d033f86709a2a13","url":"https://github.com/freenet/fred"},{"original_method":"@Override\n\tpublic void handleGet(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n\t\tif(!ctx.isAllowedFullAccess()) {\n\t\t\tsuper.sendErrorPage(ctx, 403, \"Unauthorized\", L10n.getString(\"Toadlet.unauthorized\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tWIZARD_STEP currentStep = WIZARD_STEP.valueOf(request.getParam(\"step\", WIZARD_STEP.WELCOME.toString()));\n\t\t\n\t\tif(currentStep == WIZARD_STEP.BROWSER_WARNING) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"browserWarningPageTitle\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10n(\"browserWarningShort\"));\n\t\t\tL10n.addL10nSubstitution(infoboxContent, \"FirstTimeWizardToadlet.browserWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\tinfoboxContent.addChild(\"p\", l10n(\"browserWarningSuggestion\"));\n\t\t\t\n\t\t\tinfoboxContent.addChild(\"p\").addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.SECURITY_NETWORK, L10n.getString(\"FirstTimeWizardToadlet.clickContinue\"));\n\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.SECURITY_NETWORK) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"networkSecurityPageTitle\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10nSec(\"networkThreatLevelShort\"));\n\t\t\tinfoboxContent.addChild(\"p\", l10nSec(\"networkThreatLevel\"));\n\t\t\tHTMLNode form = ctx.addFormChild(infoboxContent, \".\", \"networkSecurityForm\");\n\t\t\tHTMLNode div = form.addChild(\"div\", \"class\", \"opennetDiv\");\n\t\t\tString controlName = \"security-levels.networkThreatLevel\";\n\t\t\tfor(NETWORK_THREAT_LEVEL level : NETWORK_THREAT_LEVEL.values()) {\n\t\t\t\tHTMLNode input;\n\t\t\t\tinput = div.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", controlName, level.name() });\n\t\t\t\tinput.addChild(\"b\", l10nSec(\"networkThreatLevel.name.\"+level));\n\t\t\t\tinput.addChild(\"#\", \": \");\n\t\t\t\tL10n.addL10nSubstitution(input, \"SecurityLevels.networkThreatLevel.choice.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\tHTMLNode inner = input.addChild(\"p\").addChild(\"i\");\n\t\t\t\tL10n.addL10nSubstitution(inner, \"SecurityLevels.networkThreatLevel.desc.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t}\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"networkSecurityF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.SECURITY_FRIENDS) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"friendsSecurityPageTitle\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10nSec(\"friendsThreatLevelShort\"));\n\t\t\tinfoboxContent.addChild(\"p\", l10nSec(\"friendsThreatLevel\"));\n\t\t\tHTMLNode form = ctx.addFormChild(infoboxContent, \".\", \"friendsSecurityForm\");\n\t\t\tHTMLNode div = form.addChild(\"div\", \"class\", \"opennetDiv\");\n\t\t\tString controlName = \"security-levels.friendsThreatLevel\";\n\t\t\tfor(FRIENDS_THREAT_LEVEL level : FRIENDS_THREAT_LEVEL.values()) {\n\t\t\t\tHTMLNode input;\n\t\t\t\tinput = div.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", controlName, level.name() });\n\t\t\t\tinput.addChild(\"b\", l10nSec(\"friendsThreatLevel.name.\"+level));\n\t\t\t\tinput.addChild(\"#\", \": \");\n\t\t\t\tL10n.addL10nSubstitution(input, \"SecurityLevels.friendsThreatLevel.choice.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\tHTMLNode inner = input.addChild(\"p\").addChild(\"i\");\n\t\t\t\tL10n.addL10nSubstitution(inner, \"SecurityLevels.friendsThreatLevel.desc.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t}\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"friendsSecurityF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.SECURITY_PHYSICAL) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"physicalSecurityPageTitle\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10nSec(\"physicalThreatLevelShort\"));\n\t\t\tinfoboxContent.addChild(\"p\", l10nSec(\"physicalThreatLevel\"));\n\t\t\tHTMLNode form = ctx.addFormChild(infoboxContent, \".\", \"physicalSecurityForm\");\n\t\t\tHTMLNode div = form.addChild(\"div\", \"class\", \"opennetDiv\");\n\t\t\tString controlName = \"security-levels.physicalThreatLevel\";\n\t\t\tfor(PHYSICAL_THREAT_LEVEL level : PHYSICAL_THREAT_LEVEL.values()) {\n\t\t\t\tHTMLNode input;\n\t\t\t\tinput = div.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", controlName, level.name() });\n\t\t\t\tinput.addChild(\"b\", l10nSec(\"physicalThreatLevel.name.\"+level));\n\t\t\t\tinput.addChild(\"#\", \": \");\n\t\t\t\tL10n.addL10nSubstitution(input, \"SecurityLevels.physicalThreatLevel.choice.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\tHTMLNode inner = input.addChild(\"p\").addChild(\"i\");\n\t\t\t\tL10n.addL10nSubstitution(inner, \"SecurityLevels.physicalThreatLevel.desc.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t}\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"physicalSecurityF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.NAME_SELECTION) {\n\t\t\t// Attempt to skip one step if possible: opennet nodes don't need a name\n\t\t\tif(Boolean.valueOf(request.getParam(\"opennet\"))) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step3\", TOADLET_URL+\"?step=\"+WIZARD_STEP.BANDWIDTH);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step2Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode nnameInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode nnameInfoboxHeader = nnameInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode nnameInfoboxContent = nnameInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tnnameInfoboxHeader.addChild(\"#\", l10n(\"chooseNodeName\"));\n\t\t\tnnameInfoboxContent.addChild(\"#\", l10n(\"chooseNodeNameLong\"));\n\t\t\tHTMLNode nnameForm = ctx.addFormChild(nnameInfoboxContent, \".\", \"nnameForm\");\n\t\t\tnnameForm.addChild(\"input\", \"name\", \"nname\");\n\t\t\t\n\t\t\tnnameForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"nnameF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tnnameForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.BANDWIDTH) {\n\t\t\t// Attempt to skip one step if possible\n\t\t\tint autodetectedLimit = canAutoconfigureBandwidth();\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step3Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode bandwidthInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode bandwidthnfoboxHeader = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode bandwidthInfoboxContent = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tbandwidthnfoboxHeader.addChild(\"#\", l10n(\"bandwidthLimit\"));\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"bandwidthLimitLong\"));\n\t\t\tHTMLNode bandwidthForm = ctx.addFormChild(bandwidthInfoboxContent, \".\", \"bwForm\");\n\t\t\tHTMLNode result = bandwidthForm.addChild(\"select\", \"name\", \"bw\");\n\t\t\t\n\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\tOption<Integer> sizeOption = (Option<Integer>) config.get(\"node\").getOption(\"outputBandwidthLimit\");\n\t\t\tif(!sizeOption.isDefault()) {\n\t\t\t\tint current = sizeOption.getValue();\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(current), \"on\" }, l10n(\"currentSpeed\")+\" \"+SizeUtil.formatSize(current)+\"/s\");\n\t\t\t} else if(autodetectedLimit != -1)\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(autodetectedLimit), \"on\" }, l10n(\"autodetectedSuggestedLimit\")+\" \"+SizeUtil.formatSize(autodetectedLimit)+\"/s\");\n\n\t\t\t// don't forget to update handlePost too if you change that!\n\t\t\tif(autodetectedLimit != 8192)\n\t\t\t\tresult.addChild(\"option\", \"value\", \"8K\", l10n(\"bwlimitLowerSpeed\"));\n\t\t\t// Special case for 128kbps to increase performance at the cost of some link degradation. Above that we use 50% of the limit.\n\t\t\tresult.addChild(\"option\", \"value\", \"12K\", \"512+/128 kbps (12KB/s)\");\n\t\t\tif(autodetectedLimit != -1 || !sizeOption.isDefault())\n\t\t\t\tresult.addChild(\"option\", \"value\", \"16K\", \"1024+/256 kbps (16KB/s)\");\n\t\t\telse\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { \"16K\", \"selected\" }, \"1024+/256 kbps (16KB/s)\");\n\t\t\tresult.addChild(\"option\", \"value\", \"32K\", \"1024+/512 kbps (32K/s)\");\n\t\t\tresult.addChild(\"option\", \"value\", \"64K\", \"1024+/1024 kbps (64K/s)\");\n\t\t\tresult.addChild(\"option\", \"value\", \"1000K\", l10n(\"bwlimitHigherSpeed\"));\n\t\t\t\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"bwF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"bandwidthLimitAfter\"));\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.DATASTORE_SIZE) {\n\t\t\t// Attempt to skip one step if possible\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step4Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode bandwidthInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode bandwidthnfoboxHeader = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode bandwidthInfoboxContent = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tbandwidthnfoboxHeader.addChild(\"#\", l10n(\"datastoreSize\"));\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"datastoreSizeLong\"));\n\t\t\tHTMLNode bandwidthForm = ctx.addFormChild(bandwidthInfoboxContent, \".\", \"dsForm\");\n\t\t\tHTMLNode result = bandwidthForm.addChild(\"select\", \"name\", \"ds\");\n\n\t\t\tlong autodetectedSize = canAutoconfigureDatastoreSize();\n\t\t\t\n\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\tOption<Long> sizeOption = (Option<Long>) config.get(\"node\").getOption(\"storeSize\");\n\t\t\tif(!sizeOption.isDefault()) {\n\t\t\t\tlong current = sizeOption.getValue();\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(current), \"on\" }, l10n(\"currentPrefix\")+\" \"+SizeUtil.formatSize(current));\n\t\t\t} else if(autodetectedSize != -1)\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(autodetectedSize), \"on\" }, SizeUtil.formatSize(autodetectedSize));\n\t\t\tif(autodetectedSize != 512*1024*1024 && sizeOption.isDefault())\n\t\t\t\tresult.addChild(\"option\", \"value\", \"512M\", \"512 MiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"1G\", \"1 GiB\");\n\t\t\tif(autodetectedSize != -1 || !sizeOption.isDefault())\n\t\t\t\tresult.addChild(\"option\", \"value\", \"2G\", \"2 GiB\");\n\t\t\telse\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { \"2G\", \"on\" }, \"2GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"3G\", \"3 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"5G\", \"5 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"10G\", \"10 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"20G\", \"20 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"30G\", \"30 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"50G\", \"50 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"100G\", \"100 GiB\");\n\t\t\t\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"dsF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t}else if(currentStep == WIZARD_STEP.CONGRATZ) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step7Title\"), true, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode congratzInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode congratzInfoboxHeader = congratzInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode congratzInfoboxContent = congratzInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\tcongratzInfoboxHeader.addChild(\"#\", l10n(\"congratz\"));\n\t\t\tcongratzInfoboxContent.addChild(\"p\", l10n(\"congratzLong\"));\n\t\t\t\n\t\t\tcongratzInfoboxContent.addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.FINAL, L10n.getString(\"FirstTimeWizardToadlet.continueEnd\"));\n\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.FINAL) {\n\t\t\ttry {\n\t\t\t\tconfig.get(\"fproxy\").set(\"hasCompletedWizard\", true);\n                                config.store();\n\t\t\t\tthis.writeTemporaryRedirect(ctx, \"Return to home\", \"/\");\n\t\t\t} catch (ConfigException e) {\n\t\t\t\tLogger.error(this, e.getMessage(), e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"homepageTitle\"), false, ctx);\n\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\n\t\tHTMLNode welcomeInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\tHTMLNode welcomeInfoboxHeader = welcomeInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\tHTMLNode welcomeInfoboxContent = welcomeInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\twelcomeInfoboxHeader.addChild(\"#\", l10n(\"welcomeInfoboxTitle\"));\n\t\t\n\t\tHTMLNode firstParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tfirstParagraph.addChild(\"#\", l10n(\"welcomeInfoboxContent1\"));\n\t\tHTMLNode secondParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tsecondParagraph.addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.BROWSER_WARNING).addChild(\"#\", L10n.getString(\"FirstTimeWizardToadlet.clickContinue\"));\n\t\t\n\t\tHTMLNode thirdParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tthirdParagraph.addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.FINAL).addChild(\"#\", l10n(\"skipWizard\"));\n\t\t\n\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t}","id":58975,"modified_method":"@Override\n\tpublic void handleGet(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n\t\tif(!ctx.isAllowedFullAccess()) {\n\t\t\tsuper.sendErrorPage(ctx, 403, \"Unauthorized\", L10n.getString(\"Toadlet.unauthorized\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tWIZARD_STEP currentStep = WIZARD_STEP.valueOf(request.getParam(\"step\", WIZARD_STEP.WELCOME.toString()));\n\t\t\n\t\tif(currentStep == WIZARD_STEP.BROWSER_WARNING) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"browserWarningPageTitle\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10n(\"browserWarningShort\"));\n\t\t\tL10n.addL10nSubstitution(infoboxContent, \"FirstTimeWizardToadlet.browserWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\tinfoboxContent.addChild(\"p\", l10n(\"browserWarningSuggestion\"));\n\t\t\t\n\t\t\tinfoboxContent.addChild(\"p\").addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.SECURITY_NETWORK, L10n.getString(\"FirstTimeWizardToadlet.clickContinue\"));\n\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.SECURITY_NETWORK) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"networkSecurityPageTitle\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10nSec(\"networkThreatLevelShort\"));\n\t\t\tinfoboxContent.addChild(\"p\", l10nSec(\"networkThreatLevel\"));\n\t\t\tHTMLNode form = ctx.addFormChild(infoboxContent, \".\", \"networkSecurityForm\");\n\t\t\tHTMLNode div = form.addChild(\"div\", \"class\", \"opennetDiv\");\n\t\t\tString controlName = \"security-levels.networkThreatLevel\";\n\t\t\tfor(NETWORK_THREAT_LEVEL level : NETWORK_THREAT_LEVEL.values()) {\n\t\t\t\tHTMLNode input;\n\t\t\t\tinput = div.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", controlName, level.name() });\n\t\t\t\tinput.addChild(\"b\", l10nSec(\"networkThreatLevel.name.\"+level));\n\t\t\t\tinput.addChild(\"#\", \": \");\n\t\t\t\tL10n.addL10nSubstitution(input, \"SecurityLevels.networkThreatLevel.choice.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\tHTMLNode inner = input.addChild(\"p\").addChild(\"i\");\n\t\t\t\tL10n.addL10nSubstitution(inner, \"SecurityLevels.networkThreatLevel.desc.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t}\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"networkSecurityF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.SECURITY_FRIENDS) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"friendsSecurityPageTitle\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10nSec(\"friendsThreatLevelShort\"));\n\t\t\tinfoboxContent.addChild(\"p\", l10nSec(\"friendsThreatLevel\"));\n\t\t\tHTMLNode form = ctx.addFormChild(infoboxContent, \".\", \"friendsSecurityForm\");\n\t\t\tHTMLNode div = form.addChild(\"div\", \"class\", \"opennetDiv\");\n\t\t\tString controlName = \"security-levels.friendsThreatLevel\";\n\t\t\tfor(FRIENDS_THREAT_LEVEL level : FRIENDS_THREAT_LEVEL.values()) {\n\t\t\t\tHTMLNode input;\n\t\t\t\tinput = div.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", controlName, level.name() });\n\t\t\t\tinput.addChild(\"b\", l10nSec(\"friendsThreatLevel.name.\"+level));\n\t\t\t\tinput.addChild(\"#\", \": \");\n\t\t\t\tL10n.addL10nSubstitution(input, \"SecurityLevels.friendsThreatLevel.choice.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\tHTMLNode inner = input.addChild(\"p\").addChild(\"i\");\n\t\t\t\tL10n.addL10nSubstitution(inner, \"SecurityLevels.friendsThreatLevel.desc.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t}\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"friendsSecurityF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.SECURITY_PHYSICAL) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"physicalSecurityPageTitle\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode infobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode infoboxHeader = infobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tinfoboxHeader.addChild(\"#\", l10nSec(\"physicalThreatLevelShort\"));\n\t\t\tinfoboxContent.addChild(\"p\", l10nSec(\"physicalThreatLevel\"));\n\t\t\tHTMLNode form = ctx.addFormChild(infoboxContent, \".\", \"physicalSecurityForm\");\n\t\t\tHTMLNode div = form.addChild(\"div\", \"class\", \"opennetDiv\");\n\t\t\tString controlName = \"security-levels.physicalThreatLevel\";\n\t\t\tfor(PHYSICAL_THREAT_LEVEL level : PHYSICAL_THREAT_LEVEL.values()) {\n\t\t\t\tHTMLNode input;\n\t\t\t\tinput = div.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"radio\", controlName, level.name() });\n\t\t\t\tinput.addChild(\"b\", l10nSec(\"physicalThreatLevel.name.\"+level));\n\t\t\t\tinput.addChild(\"#\", \": \");\n\t\t\t\tL10n.addL10nSubstitution(input, \"SecurityLevels.physicalThreatLevel.choice.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\tHTMLNode inner = input.addChild(\"p\").addChild(\"i\");\n\t\t\t\tL10n.addL10nSubstitution(inner, \"SecurityLevels.physicalThreatLevel.desc.\"+level, new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t}\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"physicalSecurityF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tform.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.NAME_SELECTION) {\n\t\t\t// Attempt to skip one step if possible: opennet nodes don't need a name\n\t\t\tif(Boolean.valueOf(request.getParam(\"opennet\"))) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step3\", TOADLET_URL+\"?step=\"+WIZARD_STEP.BANDWIDTH);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step2Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode nnameInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode nnameInfoboxHeader = nnameInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode nnameInfoboxContent = nnameInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tnnameInfoboxHeader.addChild(\"#\", l10n(\"chooseNodeName\"));\n\t\t\tnnameInfoboxContent.addChild(\"#\", l10n(\"chooseNodeNameLong\"));\n\t\t\tHTMLNode nnameForm = ctx.addFormChild(nnameInfoboxContent, \".\", \"nnameForm\");\n\t\t\tnnameForm.addChild(\"input\", \"name\", \"nname\");\n\t\t\t\n\t\t\tnnameForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"nnameF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tnnameForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.BANDWIDTH) {\n\t\t\t// Attempt to skip one step if possible\n\t\t\tint autodetectedLimit = canAutoconfigureBandwidth();\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step3Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode bandwidthInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode bandwidthnfoboxHeader = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode bandwidthInfoboxContent = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tbandwidthnfoboxHeader.addChild(\"#\", l10n(\"bandwidthLimit\"));\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"bandwidthLimitLong\"));\n\t\t\tHTMLNode bandwidthForm = ctx.addFormChild(bandwidthInfoboxContent, \".\", \"bwForm\");\n\t\t\tHTMLNode result = bandwidthForm.addChild(\"select\", \"name\", \"bw\");\n\t\t\t\n\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\tOption<Integer> sizeOption = (Option<Integer>) config.get(\"node\").getOption(\"outputBandwidthLimit\");\n\t\t\tif(!sizeOption.isDefault()) {\n\t\t\t\tint current = sizeOption.getValue();\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(current), \"on\" }, l10n(\"currentSpeed\")+\" \"+SizeUtil.formatSize(current)+\"/s\");\n\t\t\t} else if(autodetectedLimit != -1)\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(autodetectedLimit), \"on\" }, l10n(\"autodetectedSuggestedLimit\")+\" \"+SizeUtil.formatSize(autodetectedLimit)+\"/s\");\n\n\t\t\t// don't forget to update handlePost too if you change that!\n\t\t\tif(autodetectedLimit != 8192)\n\t\t\t\tresult.addChild(\"option\", \"value\", \"8K\", l10n(\"bwlimitLowerSpeed\"));\n\t\t\t// Special case for 128kbps to increase performance at the cost of some link degradation. Above that we use 50% of the limit.\n\t\t\tresult.addChild(\"option\", \"value\", \"12K\", \"512+/128 kbps (12KB/s)\");\n\t\t\tif(autodetectedLimit != -1 || !sizeOption.isDefault())\n\t\t\t\tresult.addChild(\"option\", \"value\", \"16K\", \"1024+/256 kbps (16KB/s)\");\n\t\t\telse\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { \"16K\", \"selected\" }, \"1024+/256 kbps (16KB/s)\");\n\t\t\tresult.addChild(\"option\", \"value\", \"32K\", \"1024+/512 kbps (32K/s)\");\n\t\t\tresult.addChild(\"option\", \"value\", \"64K\", \"1024+/1024 kbps (64K/s)\");\n\t\t\tresult.addChild(\"option\", \"value\", \"1000K\", l10n(\"bwlimitHigherSpeed\"));\n\t\t\t\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"bwF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"bandwidthLimitAfter\"));\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.DATASTORE_SIZE) {\n\t\t\t// Attempt to skip one step if possible\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step4Title\"), false, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode bandwidthInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode bandwidthnfoboxHeader = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode bandwidthInfoboxContent = bandwidthInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tbandwidthnfoboxHeader.addChild(\"#\", l10n(\"datastoreSize\"));\n\t\t\tbandwidthInfoboxContent.addChild(\"#\", l10n(\"datastoreSizeLong\"));\n\t\t\tHTMLNode bandwidthForm = ctx.addFormChild(bandwidthInfoboxContent, \".\", \"dsForm\");\n\t\t\tHTMLNode result = bandwidthForm.addChild(\"select\", \"name\", \"ds\");\n\n\t\t\tlong autodetectedSize = canAutoconfigureDatastoreSize();\n\t\t\t\n\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\tOption<Long> sizeOption = (Option<Long>) config.get(\"node\").getOption(\"storeSize\");\n\t\t\tif(!sizeOption.isDefault()) {\n\t\t\t\tlong current = sizeOption.getValue();\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(current), \"on\" }, l10n(\"currentPrefix\")+\" \"+SizeUtil.formatSize(current));\n\t\t\t} else if(autodetectedSize != -1)\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { SizeUtil.formatSize(autodetectedSize), \"on\" }, SizeUtil.formatSize(autodetectedSize));\n\t\t\tif(autodetectedSize != 512*1024*1024 && sizeOption.isDefault())\n\t\t\t\tresult.addChild(\"option\", \"value\", \"512M\", \"512 MiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"1G\", \"1 GiB\");\n\t\t\tif(autodetectedSize != -1 || !sizeOption.isDefault())\n\t\t\t\tresult.addChild(\"option\", \"value\", \"2G\", \"2 GiB\");\n\t\t\telse\n\t\t\t\tresult.addChild(\"option\", new String[] { \"value\", \"selected\" }, new String[] { \"2G\", \"on\" }, \"2GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"3G\", \"3 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"5G\", \"5 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"10G\", \"10 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"20G\", \"20 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"30G\", \"30 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"50G\", \"50 GiB\");\n\t\t\tresult.addChild(\"option\", \"value\", \"100G\", \"100 GiB\");\n\t\t\t\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"dsF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tbandwidthForm.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.MISC) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"stepMiscTitle\"), true, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode form = ctx.addFormChild(contentNode, \".\", \"miscForm\");\n\t\t\t\n\t\t\tHTMLNode miscInfobox = form.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode miscInfoboxHeader = miscInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode miscInfoboxContent = miscInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tmiscInfoboxHeader.addChild(\"#\", l10n(\"autoUpdate\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\", l10n(\"autoUpdateLong\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"checked\", \"name\", \"value\" },\n\t\t\t\t\tnew String[] { \"radio\", \"on\", \"autodeploy\", \"true\" }, l10n(\"autoUpdateAutodeploy\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"name\", \"value\" },\n\t\t\t\t\tnew String[] { \"radio\", \"autodeploy\", \"false\" }, l10n(\"autoUpdateNoAutodeploy\"));\n\t\t\t\n\t\t\tmiscInfobox = form.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tmiscInfoboxHeader = miscInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tmiscInfoboxContent = miscInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\n\t\t\tmiscInfoboxHeader.addChild(\"#\", l10n(\"plugins\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\", l10n(\"pluginsLong\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"checked\", \"name\", \"value\" },\n\t\t\t\t\tnew String[] { \"checkbox\", \"on\", \"upnp\", \"true\" }, l10n(\"enableUPnP\"));\n\t\t\tmiscInfoboxContent.addChild(\"p\").addChild(\"input\", new String[] { \"type\", \"checked\", \"name\", \"value\" },\n\t\t\t\t\tnew String[] { \"checkbox\", \"on\", \"jstun\", \"true\" }, l10n(\"enableJSTUN\"));\n\t\t\t\n\t\t\tmiscInfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"miscF\", L10n.getString(\"FirstTimeWizardToadlet.continue\")});\n\t\t\tmiscInfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"submit\", \"cancel\", L10n.getString(\"Toadlet.cancel\")});\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t}else if(currentStep == WIZARD_STEP.CONGRATZ) {\n\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"step7Title\"), true, ctx);\n\t\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\n\t\t\tHTMLNode congratzInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\t\tHTMLNode congratzInfoboxHeader = congratzInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\t\tHTMLNode congratzInfoboxContent = congratzInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\n\t\t\tcongratzInfoboxHeader.addChild(\"#\", l10n(\"congratz\"));\n\t\t\tcongratzInfoboxContent.addChild(\"p\", l10n(\"congratzLong\"));\n\t\t\t\n\t\t\tcongratzInfoboxContent.addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.FINAL, L10n.getString(\"FirstTimeWizardToadlet.continueEnd\"));\n\n\t\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\treturn;\n\t\t} else if(currentStep == WIZARD_STEP.FINAL) {\n\t\t\ttry {\n\t\t\t\tconfig.get(\"fproxy\").set(\"hasCompletedWizard\", true);\n                                config.store();\n\t\t\t\tthis.writeTemporaryRedirect(ctx, \"Return to home\", \"/\");\n\t\t\t} catch (ConfigException e) {\n\t\t\t\tLogger.error(this, e.getMessage(), e);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"homepageTitle\"), false, ctx);\n\t\tHTMLNode contentNode = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\n\t\tHTMLNode welcomeInfobox = contentNode.addChild(\"div\", \"class\", \"infobox infobox-normal\");\n\t\tHTMLNode welcomeInfoboxHeader = welcomeInfobox.addChild(\"div\", \"class\", \"infobox-header\");\n\t\tHTMLNode welcomeInfoboxContent = welcomeInfobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\twelcomeInfoboxHeader.addChild(\"#\", l10n(\"welcomeInfoboxTitle\"));\n\t\t\n\t\tHTMLNode firstParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tfirstParagraph.addChild(\"#\", l10n(\"welcomeInfoboxContent1\"));\n\t\tHTMLNode secondParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tsecondParagraph.addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.BROWSER_WARNING).addChild(\"#\", L10n.getString(\"FirstTimeWizardToadlet.clickContinue\"));\n\t\t\n\t\tHTMLNode thirdParagraph = welcomeInfoboxContent.addChild(\"p\");\n\t\tthirdParagraph.addChild(\"a\", \"href\", \"?step=\"+WIZARD_STEP.FINAL).addChild(\"#\", l10n(\"skipWizard\"));\n\t\t\n\t\tthis.writeHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t}","commit_id":"5a645d3e4b3e0948e78ba90f358dbec93a357155","url":"https://github.com/freenet/fred"},{"original_method":"@Override\n\tpublic void handlePost(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n\t\t\n\t\tif(!ctx.isAllowedFullAccess()) {\n\t\t\tsuper.sendErrorPage(ctx, 403, \"Unauthorized\", L10n.getString(\"Toadlet.unauthorized\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tString passwd = request.getPartAsString(\"formPassword\", 32);\n\t\tboolean noPassword = (passwd == null) || !passwd.equals(core.formPassword);\n\t\tif(noPassword) {\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this)) Logger.minor(this, \"No password (\"+passwd+\" should be \"+core.formPassword+ ')');\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"invalid/unhandled data\", \"/\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(request.isPartSet(\"security-levels.networkThreatLevel\")) {\n\t\t\t// We don't require a confirmation here, since it's one page at a time, so there's less information to\n\t\t\t// confuse the user, and we don't know whether the node has friends yet etc.\n\t\t\t// FIXME should we have confirmation here???\n\t\t\tString networkThreatLevel = request.getPartAsString(\"security-levels.networkThreatLevel\", 128);\n\t\t\tNETWORK_THREAT_LEVEL newThreatLevel = SecurityLevels.parseNetworkThreatLevel(networkThreatLevel);\n\t\t\tif(newThreatLevel == null) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_NETWORK);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif((newThreatLevel == NETWORK_THREAT_LEVEL.MAXIMUM || newThreatLevel == NETWORK_THREAT_LEVEL.HIGH)) {\n\t\t\t\tif((!request.isPartSet(\"security-levels.networkThreatLevel.confirm\")) &&\n\t\t\t\t\t(!request.isPartSet(\"security-levels.networkThreatLevel.tryConfirm\"))) {\n\t\t\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"networkSecurityPageTitle\"), ctx);\n\t\t\t\t\tHTMLNode content = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\t\tHTMLNode formNode = ctx.addFormChild(content, \".\", \"configFormSecLevels\");\n\t\t\t\t\t\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.networkThreatLevel\", networkThreatLevel });\n\t\t\t\t\tHTMLNode infobox = formNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10nSec(\"networkThreatLevelConfirmTitle\", \"mode\", SecurityLevels.localisedName(newThreatLevel)));\n\t\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\tif(newThreatLevel == NETWORK_THREAT_LEVEL.MAXIMUM) {\n\t\t\t\t\t\tHTMLNode p = infoboxContent.addChild(\"p\");\n\t\t\t\t\t\tL10n.addL10nSubstitution(p, \"SecurityLevels.maximumNetworkThreatLevelWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\t\tp.addChild(\"#\", \" \");\n\t\t\t\t\t\tL10n.addL10nSubstitution(p, \"SecurityLevels.maxSecurityYouNeedFriends\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"checkbox\", \"security-levels.networkThreatLevel.confirm\", \"off\" }, l10nSec(\"maximumNetworkThreatLevelCheckbox\"));\n\t\t\t\t\t} else /*if(newThreatLevel == NETWORK_THREAT_LEVEL.HIGH)*/ {\n\t\t\t\t\t\tHTMLNode p = infoboxContent.addChild(\"p\");\n\t\t\t\t\t\tL10n.addL10nSubstitution(p, \"FirstTimeWizardToadlet.highNetworkThreatLevelWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"checkbox\", \"security-levels.networkThreatLevel.confirm\", \"off\" }, l10n(\"highNetworkThreatLevelCheckbox\"));\n\t\t\t\t\t}\n\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.networkThreatLevel.tryConfirm\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"seclevels\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"submit\", L10n.getString(\"ConfigToadlet.apply\")});\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"reset\",  L10n.getString(\"ConfigToadlet.reset\")});\n\t\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t\t\treturn;\n\t\t\t\t} else if((!request.isPartSet(\"security-levels.networkThreatLevel.confirm\")) &&\n\t\t\t\t\t\trequest.isPartSet(\"security-levels.networkThreatLevel.tryConfirm\")) {\n\t\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_NETWORK);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcore.node.securityLevels.setThreatLevel(newThreatLevel);\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_FRIENDS);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"security-levels.friendsThreatLevel\")) {\n\t\t\t// We don't require a confirmation here, since it's one page at a time, so there's less information to\n\t\t\t// confuse the user, and we don't know whether the node has friends yet etc.\n\t\t\t// FIXME should we have confirmation here???\n\t\t\tString friendsThreatLevel = request.getPartAsString(\"security-levels.friendsThreatLevel\", 128);\n\t\t\tFRIENDS_THREAT_LEVEL newThreatLevel = SecurityLevels.parseFriendsThreatLevel(friendsThreatLevel);\n\t\t\tif(newThreatLevel == null) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_FRIENDS);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif((newThreatLevel == FRIENDS_THREAT_LEVEL.HIGH)) {\n\t\t\t\tif((!request.isPartSet(\"security-levels.friendsThreatLevel.confirm\")) &&\n\t\t\t\t\t(!request.isPartSet(\"security-levels.friendsThreatLevel.tryConfirm\"))) {\n\t\t\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"friendsSecurityPageTitle\"), ctx);\n\t\t\t\t\tHTMLNode content = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\t\tHTMLNode formNode = ctx.addFormChild(content, \".\", \"configFormSecLevels\");\n\t\t\t\t\t\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.friendsThreatLevel\", friendsThreatLevel });\n\t\t\t\t\tHTMLNode infobox = formNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10nSec(\"friendsThreatLevelConfirmTitle\", \"mode\", SecurityLevels.localisedName(newThreatLevel)));\n\t\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\tHTMLNode p = infoboxContent.addChild(\"p\");\n\t\t\t\t\tL10n.addL10nSubstitution(p, \"FirstTimeWizardToadlet.highFriendsThreatLevelWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"checkbox\", \"security-levels.friendsThreatLevel.confirm\", \"off\" }, l10nSec(\"highFriendsThreatLevelCheckbox\"));\n\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.friendsThreatLevel.tryConfirm\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"seclevels\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"submit\", L10n.getString(\"ConfigToadlet.apply\")});\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"reset\",  L10n.getString(\"ConfigToadlet.reset\")});\n\t\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t\t\treturn;\n\t\t\t\t} else if((!request.isPartSet(\"security-levels.friendsThreatLevel.confirm\")) &&\n\t\t\t\t\t\trequest.isPartSet(\"security-levels.friendsThreatLevel.tryConfirm\")) {\n\t\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_FRIENDS);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcore.node.securityLevels.setThreatLevel(newThreatLevel);\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_PHYSICAL);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"security-levels.physicalThreatLevel\")) {\n\t\t\t// We don't require a confirmation here, since it's one page at a time, so there's less information to\n\t\t\t// confuse the user, and we don't know whether the node has friends yet etc.\n\t\t\t// FIXME should we have confirmation here???\n\t\t\tString physicalThreatLevel = request.getPartAsString(\"security-levels.physicalThreatLevel\", 128);\n\t\t\tPHYSICAL_THREAT_LEVEL newThreatLevel = SecurityLevels.parsePhysicalThreatLevel(physicalThreatLevel);\n\t\t\tif(newThreatLevel == null) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_PHYSICAL);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcore.node.securityLevels.setThreatLevel(newThreatLevel);\n\t\t\tcore.storeConfig();\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.NAME_SELECTION+\"&opennet=\"+core.node.isOpennetEnabled());\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"nnameF\")) {\n\t\t\tString selectedNName = request.getPartAsString(\"nname\", 128);\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node\").set(\"name\", selectedNName);\n\t\t\t\tLogger.normal(this, \"The node name has been set to \"+ selectedNName);\n\t\t\t} catch (ConfigException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e, e);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step3\", TOADLET_URL+\"?step=\"+WIZARD_STEP.BANDWIDTH);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"bwF\")) {\n\t\t\t_setUpstreamBandwidthLimit(request.getPartAsString(\"bw\", 20)); // drop down options may be 6 chars or less, but formatted ones e.g. old value if re-running can be more\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step4\", TOADLET_URL+\"?step=\"+WIZARD_STEP.DATASTORE_SIZE);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"dsF\")) {\n\t\t\t_setDatastoreSize(request.getPartAsString(\"ds\", 20)); // drop down options may be 6 chars or less, but formatted ones e.g. old value if re-running can be more\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step5\", TOADLET_URL+\"?step=\"+WIZARD_STEP.CONGRATZ);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"memoryF\")) {\n\t\t\tString selectedMemorySize = request.getPartAsString(\"memoryF\", 6);\n\t\t\t\n\t\t\tint memorySize = Fields.parseInt(selectedMemorySize, -1);\n\t\t\tif(memorySize >= 0) {\n\t\t\t\tWrapperConfig.setWrapperProperty(\"wrapper.java.maxmemory\", selectedMemorySize);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step6\", TOADLET_URL+\"?step=\"+WIZARD_STEP.CONGRATZ);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tsuper.writeTemporaryRedirect(ctx, \"invalid/unhandled data\", TOADLET_URL);\n\t}","id":58976,"modified_method":"@Override\n\tpublic void handlePost(URI uri, HTTPRequest request, ToadletContext ctx) throws ToadletContextClosedException, IOException {\n\t\t\n\t\tif(!ctx.isAllowedFullAccess()) {\n\t\t\tsuper.sendErrorPage(ctx, 403, \"Unauthorized\", L10n.getString(\"Toadlet.unauthorized\"));\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tString passwd = request.getPartAsString(\"formPassword\", 32);\n\t\tboolean noPassword = (passwd == null) || !passwd.equals(core.formPassword);\n\t\tif(noPassword) {\n\t\t\tif(Logger.shouldLog(Logger.MINOR, this)) Logger.minor(this, \"No password (\"+passwd+\" should be \"+core.formPassword+ ')');\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"invalid/unhandled data\", \"/\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(request.isPartSet(\"security-levels.networkThreatLevel\")) {\n\t\t\t// We don't require a confirmation here, since it's one page at a time, so there's less information to\n\t\t\t// confuse the user, and we don't know whether the node has friends yet etc.\n\t\t\t// FIXME should we have confirmation here???\n\t\t\tString networkThreatLevel = request.getPartAsString(\"security-levels.networkThreatLevel\", 128);\n\t\t\tNETWORK_THREAT_LEVEL newThreatLevel = SecurityLevels.parseNetworkThreatLevel(networkThreatLevel);\n\t\t\tif(newThreatLevel == null) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_NETWORK);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif((newThreatLevel == NETWORK_THREAT_LEVEL.MAXIMUM || newThreatLevel == NETWORK_THREAT_LEVEL.HIGH)) {\n\t\t\t\tif((!request.isPartSet(\"security-levels.networkThreatLevel.confirm\")) &&\n\t\t\t\t\t(!request.isPartSet(\"security-levels.networkThreatLevel.tryConfirm\"))) {\n\t\t\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"networkSecurityPageTitle\"), ctx);\n\t\t\t\t\tHTMLNode content = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\t\tHTMLNode formNode = ctx.addFormChild(content, \".\", \"configFormSecLevels\");\n\t\t\t\t\t\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.networkThreatLevel\", networkThreatLevel });\n\t\t\t\t\tHTMLNode infobox = formNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10nSec(\"networkThreatLevelConfirmTitle\", \"mode\", SecurityLevels.localisedName(newThreatLevel)));\n\t\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\tif(newThreatLevel == NETWORK_THREAT_LEVEL.MAXIMUM) {\n\t\t\t\t\t\tHTMLNode p = infoboxContent.addChild(\"p\");\n\t\t\t\t\t\tL10n.addL10nSubstitution(p, \"SecurityLevels.maximumNetworkThreatLevelWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\t\tp.addChild(\"#\", \" \");\n\t\t\t\t\t\tL10n.addL10nSubstitution(p, \"SecurityLevels.maxSecurityYouNeedFriends\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"checkbox\", \"security-levels.networkThreatLevel.confirm\", \"off\" }, l10nSec(\"maximumNetworkThreatLevelCheckbox\"));\n\t\t\t\t\t} else /*if(newThreatLevel == NETWORK_THREAT_LEVEL.HIGH)*/ {\n\t\t\t\t\t\tHTMLNode p = infoboxContent.addChild(\"p\");\n\t\t\t\t\t\tL10n.addL10nSubstitution(p, \"FirstTimeWizardToadlet.highNetworkThreatLevelWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"checkbox\", \"security-levels.networkThreatLevel.confirm\", \"off\" }, l10n(\"highNetworkThreatLevelCheckbox\"));\n\t\t\t\t\t}\n\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.networkThreatLevel.tryConfirm\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"seclevels\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"submit\", L10n.getString(\"ConfigToadlet.apply\")});\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"reset\",  L10n.getString(\"ConfigToadlet.reset\")});\n\t\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t\t\treturn;\n\t\t\t\t} else if((!request.isPartSet(\"security-levels.networkThreatLevel.confirm\")) &&\n\t\t\t\t\t\trequest.isPartSet(\"security-levels.networkThreatLevel.tryConfirm\")) {\n\t\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_NETWORK);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcore.node.securityLevels.setThreatLevel(newThreatLevel);\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_FRIENDS);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"security-levels.friendsThreatLevel\")) {\n\t\t\t// We don't require a confirmation here, since it's one page at a time, so there's less information to\n\t\t\t// confuse the user, and we don't know whether the node has friends yet etc.\n\t\t\t// FIXME should we have confirmation here???\n\t\t\tString friendsThreatLevel = request.getPartAsString(\"security-levels.friendsThreatLevel\", 128);\n\t\t\tFRIENDS_THREAT_LEVEL newThreatLevel = SecurityLevels.parseFriendsThreatLevel(friendsThreatLevel);\n\t\t\tif(newThreatLevel == null) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_FRIENDS);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif((newThreatLevel == FRIENDS_THREAT_LEVEL.HIGH)) {\n\t\t\t\tif((!request.isPartSet(\"security-levels.friendsThreatLevel.confirm\")) &&\n\t\t\t\t\t(!request.isPartSet(\"security-levels.friendsThreatLevel.tryConfirm\"))) {\n\t\t\t\t\tHTMLNode pageNode = ctx.getPageMaker().getPageNode(l10n(\"friendsSecurityPageTitle\"), ctx);\n\t\t\t\t\tHTMLNode content = ctx.getPageMaker().getContentNode(pageNode);\n\t\t\t\t\tHTMLNode formNode = ctx.addFormChild(content, \".\", \"configFormSecLevels\");\n\t\t\t\t\t\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.friendsThreatLevel\", friendsThreatLevel });\n\t\t\t\t\tHTMLNode infobox = formNode.addChild(\"div\", \"class\", \"infobox infobox-information\");\n\t\t\t\t\tinfobox.addChild(\"div\", \"class\", \"infobox-header\", l10nSec(\"friendsThreatLevelConfirmTitle\", \"mode\", SecurityLevels.localisedName(newThreatLevel)));\n\t\t\t\t\tHTMLNode infoboxContent = infobox.addChild(\"div\", \"class\", \"infobox-content\");\n\t\t\t\t\tHTMLNode p = infoboxContent.addChild(\"p\");\n\t\t\t\t\tL10n.addL10nSubstitution(p, \"FirstTimeWizardToadlet.highFriendsThreatLevelWarning\", new String[] { \"bold\", \"/bold\" }, new String[] { \"<b>\", \"<\/b>\" });\n\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"checkbox\", \"security-levels.friendsThreatLevel.confirm\", \"off\" }, l10nSec(\"highFriendsThreatLevelCheckbox\"));\n\t\t\t\t\tinfoboxContent.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"security-levels.friendsThreatLevel.tryConfirm\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"name\", \"value\" }, new String[] { \"hidden\", \"seclevels\", \"on\" });\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"submit\", L10n.getString(\"ConfigToadlet.apply\")});\n\t\t\t\t\tformNode.addChild(\"input\", new String[] { \"type\", \"value\" }, new String[] { \"reset\",  L10n.getString(\"ConfigToadlet.reset\")});\n\t\t\t\t\twriteHTMLReply(ctx, 200, \"OK\", pageNode.generate());\n\t\t\t\t\treturn;\n\t\t\t\t} else if((!request.isPartSet(\"security-levels.friendsThreatLevel.confirm\")) &&\n\t\t\t\t\t\trequest.isPartSet(\"security-levels.friendsThreatLevel.tryConfirm\")) {\n\t\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_FRIENDS);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcore.node.securityLevels.setThreatLevel(newThreatLevel);\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_PHYSICAL);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"security-levels.physicalThreatLevel\")) {\n\t\t\t// We don't require a confirmation here, since it's one page at a time, so there's less information to\n\t\t\t// confuse the user, and we don't know whether the node has friends yet etc.\n\t\t\t// FIXME should we have confirmation here???\n\t\t\tString physicalThreatLevel = request.getPartAsString(\"security-levels.physicalThreatLevel\", 128);\n\t\t\tPHYSICAL_THREAT_LEVEL newThreatLevel = SecurityLevels.parsePhysicalThreatLevel(physicalThreatLevel);\n\t\t\tif(newThreatLevel == null) {\n\t\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.SECURITY_PHYSICAL);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcore.node.securityLevels.setThreatLevel(newThreatLevel);\n\t\t\tcore.storeConfig();\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step1\", TOADLET_URL+\"?step=\"+WIZARD_STEP.NAME_SELECTION+\"&opennet=\"+core.node.isOpennetEnabled());\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"nnameF\")) {\n\t\t\tString selectedNName = request.getPartAsString(\"nname\", 128);\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node\").set(\"name\", selectedNName);\n\t\t\t\tLogger.normal(this, \"The node name has been set to \"+ selectedNName);\n\t\t\t} catch (ConfigException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e, e);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step3\", TOADLET_URL+\"?step=\"+WIZARD_STEP.BANDWIDTH);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"bwF\")) {\n\t\t\t_setUpstreamBandwidthLimit(request.getPartAsString(\"bw\", 20)); // drop down options may be 6 chars or less, but formatted ones e.g. old value if re-running can be more\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step4\", TOADLET_URL+\"?step=\"+WIZARD_STEP.DATASTORE_SIZE);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"dsF\")) {\n\t\t\t_setDatastoreSize(request.getPartAsString(\"ds\", 20)); // drop down options may be 6 chars or less, but formatted ones e.g. old value if re-running can be more\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step5\", TOADLET_URL+\"?step=\"+WIZARD_STEP.MISC);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"memoryF\")) {\n\t\t\tString selectedMemorySize = request.getPartAsString(\"memoryF\", 6);\n\t\t\t\n\t\t\tint memorySize = Fields.parseInt(selectedMemorySize, -1);\n\t\t\tif(memorySize >= 0) {\n\t\t\t\tWrapperConfig.setWrapperProperty(\"wrapper.java.maxmemory\", selectedMemorySize);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step6\", TOADLET_URL+\"?step=\"+WIZARD_STEP.MISC);\n\t\t\treturn;\n\t\t} else if(request.isPartSet(\"miscF\")) {\n\t\t\ttry {\n\t\t\t\tconfig.get(\"node.updater\").set(\"autoupdate\", Boolean.parseBoolean(request.getPartAsString(\"autodeploy\", 10)));\n\t\t\t} catch (ConfigException e) {\n\t\t\t\tLogger.error(this, \"Should not happen, please report!\" + e, e);\n\t\t\t}\n\t\t\tboolean enableUPnP = request.isPartSet(\"upnp\");\n\t\t\tboolean enableJSTUN = request.isPartSet(\"jstun\");\n\t\t\tif(enableUPnP != core.node.pluginManager.isPluginLoaded(\"plugins.UPnP.UPnP\")) {\n\t\t\t\tif(enableUPnP)\n\t\t\t\t\tcore.node.pluginManager.startPluginOfficial(\"UPnP\", true);\n\t\t\t\telse\n\t\t\t\t\tcore.node.pluginManager.killPluginByClass(\"plugins.UPnP.UPnP\", 5000);\n\t\t\t}\n\t\t\tif(enableJSTUN != core.node.pluginManager.isPluginLoaded(\"plugins.JSTUN.JSTUN\")) {\n\t\t\t\tif(enableJSTUN)\n\t\t\t\t\tcore.node.pluginManager.startPluginOfficial(\"JSTUN\", true);\n\t\t\t\telse\n\t\t\t\t\tcore.node.pluginManager.killPluginByClass(\"plugins.JSTUN.JSTUN\", 5000);\n\t\t\t}\n\t\t\tsuper.writeTemporaryRedirect(ctx, \"step7\", TOADLET_URL+\"?step=\"+WIZARD_STEP.CONGRATZ);\n\t\t\treturn;\n\t\t\t\t\n\t\t}\n\t\t\n\t\tsuper.writeTemporaryRedirect(ctx, \"invalid/unhandled data\", TOADLET_URL);\n\t}","commit_id":"5a645d3e4b3e0948e78ba90f358dbec93a357155","url":"https://github.com/freenet/fred"},{"original_method":"public Merger(final SvnVcs vcs,\n                final List<CommittedChangeList> changeLists,\n                final File target,\n                final UpdateEventHandler handler,\n                final SVNURL currentBranchUrl,\n                String branchName) {\n    myBranchName = branchName;\n    myVcs = vcs;\n    myProject = vcs.getProject();\n    mySvnConfig = SvnConfiguration.getInstance(vcs.getProject());\n    myCurrentBranchUrl = currentBranchUrl;\n    myDiffClient = vcs.createDiffClient();\n    myChangeLists = changeLists;\n\n    Collections.sort(myChangeLists, ByNumberChangeListComparator.getInstance());\n\n    myTarget = target;\n    myCount = 0;\n    myProgressIndicator = ProgressManager.getInstance().getProgressIndicator();\n    myDiffClient.setEventHandler(handler);\n    myHandler = handler;\n    myDiffClient.setMergeOptions(mySvnConfig.getMergeOptions());\n    myCommitMessage = new StringBuilder();\n  }","id":58977,"modified_method":"public Merger(final SvnVcs vcs,\n                final List<CommittedChangeList> changeLists,\n                final File target,\n                final UpdateEventHandler handler,\n                final SVNURL currentBranchUrl,\n                String branchName) {\n    myBranchName = branchName;\n    myVcs = vcs;\n    myProject = vcs.getProject();\n    mySvnConfig = SvnConfiguration.getInstance(vcs.getProject());\n    myCurrentBranchUrl = currentBranchUrl;\n    myChangeLists = changeLists;\n\n    Collections.sort(myChangeLists, ByNumberChangeListComparator.getInstance());\n\n    myTarget = target;\n    myCount = 0;\n    myProgressIndicator = ProgressManager.getInstance().getProgressIndicator();\n    myHandler = handler;\n    myCommitMessage = new StringBuilder();\n  }","commit_id":"5fdcd75f310ee4cfb9654c5f8117d3b746edaf29","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void add(final Change change) throws SVNException {\n    if (myCopyClient == null) {\n      myCopyClient = myVcs.createCopyClient();\n      myCopyClient.setEventHandler(myHandler);\n    }\n    final SvnRepositoryContentRevision after = (SvnRepositoryContentRevision) change.getAfterRevision();\n    final String path = myCurrentBranchUrl.toString();\n    final String afterUrl = after.getFullPath();\n    final File afterPath = SvnUtil.fileFromUrl(myTarget, path, afterUrl);\n\n    final SVNRevision revision = ((SvnRevisionNumber)after.getRevisionNumber()).getRevision();\n    final SVNCopySource[] copySource = new SVNCopySource[]{new SVNCopySource(revision, revision, SVNURL.parseURIEncoded(afterUrl))};\n    // todo dry run\n    myCopyClient.doCopy(copySource, afterPath, false, true, true);\n  }","id":58978,"modified_method":"private void add(final Change change) throws SVNException, VcsException {\n    final SvnRepositoryContentRevision after = (SvnRepositoryContentRevision) change.getAfterRevision();\n    final String path = myCurrentBranchUrl.toString();\n    final String afterUrl = after.getFullPath();\n    final File afterPath = SvnUtil.fileFromUrl(myTarget, path, afterUrl);\n\n    final SVNRevision revision = ((SvnRevisionNumber)after.getRevisionNumber()).getRevision();\n    // todo dry run\n    CopyMoveClient client = myVcs.getFactory(myTarget).createCopyMoveClient();\n    client.copy(SvnTarget.fromURL(SVNURL.parseURIEncoded(afterUrl), revision), afterPath, revision, true, myHandler);\n  }","commit_id":"5fdcd75f310ee4cfb9654c5f8117d3b746edaf29","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void merge(final Change change) throws SVNException {\n    final SvnRepositoryContentRevision before = (SvnRepositoryContentRevision) change.getBeforeRevision();\n    final SvnRepositoryContentRevision after = (SvnRepositoryContentRevision) change.getAfterRevision();\n\n    final String path = myCurrentBranchUrl.toString();\n    final String beforeUrl = before.getFullPath();\n    final String afterUrl = after.getFullPath();\n\n    final File afterPath = SvnUtil.fileFromUrl(myTarget, path, afterUrl);\n\n    myDiffClient.doMerge(SVNURL.parseURIEncoded(beforeUrl), ((SvnRevisionNumber) before.getRevisionNumber()).getRevision(),\n                         SVNURL.parseURIEncoded(afterUrl), ((SvnRevisionNumber) after.getRevisionNumber()).getRevision(),\n                         afterPath, false, true, false, mySvnConfig.MERGE_DRY_RUN);\n  }","id":58979,"modified_method":"private void merge(final Change change) throws SVNException, VcsException {\n    final SvnRepositoryContentRevision before = (SvnRepositoryContentRevision) change.getBeforeRevision();\n    final SvnRepositoryContentRevision after = (SvnRepositoryContentRevision) change.getAfterRevision();\n\n    final String path = myCurrentBranchUrl.toString();\n    final String beforeUrl = before.getFullPath();\n    final String afterUrl = after.getFullPath();\n\n    final File afterPath = SvnUtil.fileFromUrl(myTarget, path, afterUrl);\n\n    MergeClient client = myVcs.getFactory(myTarget).createMergeClient();\n    SvnTarget source1 = SvnTarget.fromURL(SVNURL.parseURIEncoded(beforeUrl), ((SvnRevisionNumber)before.getRevisionNumber()).getRevision());\n    SvnTarget source2 = SvnTarget.fromURL(SVNURL.parseURIEncoded(afterUrl), ((SvnRevisionNumber) after.getRevisionNumber()).getRevision());\n\n    client.merge(source1, source2, afterPath, SVNDepth.FILES, mySvnConfig.MERGE_DRY_RUN, false, false, mySvnConfig.getMergeOptions(), myHandler);\n  }","commit_id":"5fdcd75f310ee4cfb9654c5f8117d3b746edaf29","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void delete(final Change change) throws SVNException {\n    if (myWcClient == null) {\n      myWcClient = myVcs.createWCClient();\n      myWcClient.setEventHandler(myHandler);\n    }\n    final SvnRepositoryContentRevision before = (SvnRepositoryContentRevision) change.getBeforeRevision();\n    final String path = myCurrentBranchUrl.toString();\n    final String beforeUrl = before.getFullPath();\n    final File beforePath = SvnUtil.fileFromUrl(myTarget, path, beforeUrl);\n\n    myWcClient.doDelete(beforePath, false, mySvnConfig.MERGE_DRY_RUN);\n  }","id":58980,"modified_method":"private void delete(final Change change) throws SVNException, VcsException {\n    final SvnRepositoryContentRevision before = (SvnRepositoryContentRevision) change.getBeforeRevision();\n    final String path = myCurrentBranchUrl.toString();\n    final String beforeUrl = before.getFullPath();\n    final File beforePath = SvnUtil.fileFromUrl(myTarget, path, beforeUrl);\n\n    DeleteClient client = myVcs.getFactory(myTarget).createDeleteClient();\n    client.delete(beforePath, false, mySvnConfig.MERGE_DRY_RUN, myHandler);\n  }","commit_id":"5fdcd75f310ee4cfb9654c5f8117d3b746edaf29","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public int read(byte[] bytes, final int offset, final int length) {\n        int remaining = length;\n        synchronized(lock) {\n            while(remaining > 0) {\n                // Check for error conditions during last read.\n                checkForErrors();\n\n                // If completely out of space, queue up another buffer fill.\n                waitForBufferFill();\n\n                // Couldn't manage to load any data at all; abort and return what's available.\n                if(buffer.remaining() == 0)\n                    break;\n\n                int numBytesToCopy = Math.min(buffer.remaining(),remaining);\n                buffer.get(bytes,length-remaining+offset,numBytesToCopy);\n                remaining -= numBytesToCopy;\n\n                //if(remaining > 0)\n                //    System.out.printf(\"Thread %s: read the first %d bytes of a %d byte request%n\",Thread.currentThread().getId(),length-remaining,length);\n                // TODO: Assert that we don't copy across a block boundary\n            }\n\n            // Notify any waiting threads that some of the contents of the buffer were removed.\n            if(length-remaining > 0)\n                lock.notify();\n        }\n\n//        if(validatingInputStream != null) {\n//            byte[] validBytes = new byte[length];\n//            try {\n//                validatingInputStream.read(validBytes,offset,length);\n//                for(int i = offset; i < offset+length; i++) {\n//                    if(bytes[i] != validBytes[i])\n//                        throw new ReviewedStingException(String.format(\"Thread %s: blockInputStream %s attempting to return wrong set of bytes; mismatch at offset %d\",Thread.currentThread().getId(),this,i));\n//                }\n//            }\n//            catch(IOException ex) {\n//                throw new ReviewedStingException(\"Unable to validate against Picard input stream\",ex);\n//            }\n//        }\n\n        return eof() ? -1 : length-remaining;\n    }","id":58981,"modified_method":"@Override\n    public int read(byte[] bytes, final int offset, final int length) {\n        int remaining = length;\n        synchronized(lock) {\n            while(remaining > 0) {\n                // Check for error conditions during last read.\n                checkForErrors();\n\n                // If completely out of space, queue up another buffer fill.\n                waitForBufferFill();\n\n                // Couldn't manage to load any data at all; abort and return what's available.\n                if(buffer.remaining() == 0)\n                    break;\n\n                int numBytesToCopy = Math.min(buffer.remaining(),remaining);\n                buffer.get(bytes,length-remaining+offset,numBytesToCopy);\n                remaining -= numBytesToCopy;\n\n                //if(remaining > 0)\n                //    System.out.printf(\"Thread %s: read the first %d bytes of a %d byte request%n\",Thread.currentThread().getId(),length-remaining,length);\n                // TODO: Assert that we don't copy across a block boundary\n            }\n\n            // Notify any waiting threads that some of the contents of the buffer were removed.\n            if(length-remaining > 0)\n                lock.notify();\n        }\n\n//        if(validatingInputStream != null) {\n//            byte[] validBytes = new byte[length];\n//            try {\n//                validatingInputStream.read(validBytes,offset,length);\n//                for(int i = offset; i < offset+length; i++) {\n//                    if(bytes[i] != validBytes[i])\n//                        throw new ReviewedStingException(String.format(\"Thread %s: blockInputStream %s attempting to return wrong set of bytes; mismatch at offset %d\",Thread.currentThread().getId(),this,i));\n//                }\n//            }\n//            catch(IOException ex) {\n//                throw new ReviewedStingException(\"Unable to validate against Picard input stream\",ex);\n//            }\n//        }\n\n        // If any data was copied into the buffer, return the amount of data copied.\n        if(remaining < length)\n            return length - remaining;\n\n        // Otherwise, if at eof(), return -1.\n        else if(eof())\n            return -1;\n\n        // Otherwise, we must've hit a bug in the system.\n        throw new ReviewedStingException(\"BUG: read returned no data, but eof() reports false.\");\n    }","commit_id":"30b937d2af93f5f943c1470a6cb8c7523a68acca","url":"https://github.com/broadgsa/gatk"},{"original_method":"protected IElementType lookahead(int k) {\n        // TODO: use a faster implementation\n        PsiBuilder.Marker tmp = mark();\n        for (int i = 0; i < k; i++) advance();\n\n        IElementType tt = tt();\n        tmp.rollbackTo();\n        return tt;\n    }","id":58982,"modified_method":"protected IElementType lookahead(int k) {\n        return myBuilder.lookAhead(k);\n    }","commit_id":"70293ca754510aa544c1472483a6151edaae9614","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public boolean eolInLastWhitespace() {\n        return myEOLsEnabled.peek() && (myEOLInLastWhitespace || eof());\n    }","id":58983,"modified_method":"@Override\n    public boolean eolInLastWhitespace() {\n        if (!eolsEnabled.peek()) return false;\n        if (eof()) return true;\n        IElementType previousToken = rawLookup(-1);\n        if (previousToken == TokenType.WHITE_SPACE) {\n            int previousTokenStart = rawTokenTypeStart(-1);\n            int previousTokenEnd = rawTokenTypeStart(0);\n            assert previousTokenStart >= 0;\n            assert previousTokenEnd < getOriginalText().length();\n            for (int i = previousTokenStart; i < previousTokenEnd; i++) {\n                if (getOriginalText().charAt(i) == '\\n') return true;\n            }\n        }\n        return false;\n    }","commit_id":"70293ca754510aa544c1472483a6151edaae9614","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public void enableEols() {\n        myEOLsEnabled.push(true);\n    }","id":58984,"modified_method":"@Override\n    public void enableEols() {\n        eolsEnabled.push(true);\n    }","commit_id":"70293ca754510aa544c1472483a6151edaae9614","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public void restoreEolsState() {\n        assert myEOLsEnabled.size() > 1;\n        myEOLsEnabled.pop();\n    }","id":58985,"modified_method":"@Override\n    public void restoreEolsState() {\n        assert eolsEnabled.size() > 1;\n        eolsEnabled.pop();\n    }","commit_id":"70293ca754510aa544c1472483a6151edaae9614","url":"https://github.com/JetBrains/kotlin"},{"original_method":"@Override\n    public void disableEols() {\n        myEOLsEnabled.push(false);\n    }","id":58986,"modified_method":"@Override\n    public void disableEols() {\n        eolsEnabled.push(false);\n    }","commit_id":"70293ca754510aa544c1472483a6151edaae9614","url":"https://github.com/JetBrains/kotlin"},{"original_method":"public SemanticWhitespaceAwarePsiBuilderImpl(final PsiBuilder delegate) {\n        super(delegate);\n        delegate.setWhitespaceSkippedCallback(myWhitespaceSkippedCallback);\n        myEOLsEnabled.push(true);\n    }","id":58987,"modified_method":"public SemanticWhitespaceAwarePsiBuilderImpl(final PsiBuilder delegate) {\n        super(delegate);\n        eolsEnabled.push(true);\n    }","commit_id":"70293ca754510aa544c1472483a6151edaae9614","url":"https://github.com/JetBrains/kotlin"},{"original_method":"/**\n   * Parses list of statements after case label(s)\n   *\n   * @param builder\n   */\n  public void parseSwitchCaseList(PsiBuilder builder) {\n\n    if (GroovyTokenTypes.kCASE.equals(builder.getTokenType()) ||\n        GroovyTokenTypes.kDEFAULT.equals(builder.getTokenType()) ||\n        GroovyTokenTypes.mRCURLY.equals(builder.getTokenType())) {\n      return;\n    }\n\n    if (!parseStatement(builder, false) && !parseExtendedStatement(builder)) {\n      builder.error(GroovyBundle.message(\"wrong.statement\"));\n      return;\n    }\n\n    while (parseExtendedStatement(builder)) {\n      if (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) {\n        Separators.parse(builder);\n      }\n    }\n    if (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) {\n      Separators.parse(builder);\n    }\n\n    if (GroovyTokenTypes.kCASE.equals(builder.getTokenType()) ||\n        GroovyTokenTypes.kDEFAULT.equals(builder.getTokenType()) ||\n        GroovyTokenTypes.mRCURLY.equals(builder.getTokenType())) {\n      return;\n    }\n    boolean result = parseStatement(builder, false);\n    while (result && (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) ||\n           parseExtendedStatement(builder)) {\n\n      if (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) {\n        Separators.parse(builder);\n      }\n      while (parseExtendedStatement(builder)) {\n        if (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) {\n          Separators.parse(builder);\n        }\n      }\n      if (GroovyTokenTypes.mSEMI.equals(builder.getTokenType()) || GroovyTokenTypes.mNLS.equals(builder.getTokenType())) {\n        Separators.parse(builder);\n      }\n\n      if (GroovyTokenTypes.kCASE.equals(builder.getTokenType()) ||\n          GroovyTokenTypes.kDEFAULT.equals(builder.getTokenType()) ||\n          GroovyTokenTypes.mRCURLY.equals(builder.getTokenType())) {\n        break;\n      }\n\n      result = parseStatement(builder, false);\n      if (!isExtendedSeparator(builder.getTokenType())) {\n        cleanAfterError(builder, false);\n      }\n    }\n    Separators.parse(builder);\n  }","id":58988,"modified_method":"public void parseSwitchCaseList(PsiBuilder builder) {\n    if (!parseStatement(builder, false) && !parseExtendedStatement(builder)) {\n      builder.error(GroovyBundle.message(\"wrong.statement\"));\n      return;\n    }\n\n    while (true) {\n      while (ParserUtils.getToken(builder, mSEMI)) {}\n      PsiBuilder.Marker beforeSeparators = builder.mark();\n      ParserUtils.getToken(builder, mNLS);\n      if (builder.getTokenType() == kCASE || builder.getTokenType() == kDEFAULT || !parseStatement(builder, false) && !parseExtendedStatement(builder)) {\n        beforeSeparators.rollbackTo();\n        break;\n      }\n      beforeSeparators.drop();\n    }\n  }","commit_id":"f59542d908220fd34011e2bba2b612a044426e6f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Parses cases block\n   *\n   * @param builder\n   */\n  private static void parseCaseBlock(PsiBuilder builder, GroovyParser parser) {\n    ParserUtils.getToken(builder, mLCURLY);\n    ParserUtils.getToken(builder, mNLS);\n    if (ParserUtils.getToken(builder, mRCURLY)) {\n      return;\n    }\n    if (!kCASE.equals(builder.getTokenType()) &&\n        !kDEFAULT.equals(builder.getTokenType())) {\n      builder.error(GroovyBundle.message(\"case.expected\"));\n      while (!builder.eof() &&\n          !(kCASE.equals(builder.getTokenType()) ||\n              kDEFAULT.equals(builder.getTokenType()) ||\n              mRCURLY.equals(builder.getTokenType()))) {\n        builder.error(GroovyBundle.message(\"case.expected\"));\n        builder.advanceLexer();\n      }\n    }\n\n    while (kCASE.equals(builder.getTokenType()) ||\n        kDEFAULT.equals(builder.getTokenType())) {\n      PsiBuilder.Marker sectionMarker = builder.mark();\n      parseCaseLabel(builder, parser);\n      if (builder.getTokenType() == mRCURLY ||\n          ParserUtils.lookAhead(builder, mNLS, mRCURLY)) {\n        builder.error(GroovyBundle.message(\"expression.expected\"));\n      } else {\n        parser.parseSwitchCaseList(builder);\n      }\n      sectionMarker.done(CASE_SECTION);\n\n      if (builder.getTokenType() != kCASE && builder.getTokenType() != kDEFAULT && builder.getTokenType() != mRCURLY) {\n        builder.error(\"case, default or } expected\");\n        while (!builder.eof() && builder.getTokenType() != kCASE && builder.getTokenType() != kDEFAULT && builder.getTokenType() != mRCURLY) {\n          builder.advanceLexer();\n        }\n      }\n    }\n    ParserUtils.getToken(builder, mRCURLY, GroovyBundle.message(\"rcurly.expected\"));\n  }","id":58989,"modified_method":"private static void parseCaseBlock(PsiBuilder builder, GroovyParser parser) {\n    ParserUtils.getToken(builder, mLCURLY);\n    ParserUtils.getToken(builder, mNLS);\n\n    while (true) {\n      if (ParserUtils.getToken(builder, mRCURLY)) {\n        return;\n      }\n\n      if (builder.getTokenType() != kCASE && builder.getTokenType() != kDEFAULT) {\n        builder.error(\"case, default or } expected\");\n        while (true) {\n          builder.advanceLexer();\n          if (builder.eof() || ParserUtils.getToken(builder, mRCURLY)) {\n            return;\n          }\n          if (builder.getTokenType() == kCASE || builder.getTokenType() == kDEFAULT) {\n            break;\n          }\n        }\n      }\n\n      PsiBuilder.Marker sectionMarker = builder.mark();\n      parseCaseLabel(builder, parser);\n      ParserUtils.getToken(builder, mNLS);\n      if (builder.getTokenType() == mRCURLY) {\n        builder.error(GroovyBundle.message(\"expression.expected\"));\n      } else {\n        parser.parseSwitchCaseList(builder);\n      }\n      sectionMarker.done(CASE_SECTION);\n      ParserUtils.getToken(builder, mNLS);\n    }\n  }","commit_id":"f59542d908220fd34011e2bba2b612a044426e6f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Parses one or more sequential 'case' or 'default' labels\n   *\n   * @param builder\n   */\n  public static void parseCaseLabel(PsiBuilder builder, GroovyParser parser) {\n    PsiBuilder.Marker label = builder.mark();\n    IElementType elem = builder.getTokenType();\n    ParserUtils.getToken(builder, TokenSet.create(kCASE, kDEFAULT));\n\n    if (kCASE.equals(elem)) {\n      AssignmentExpression.parse(builder, parser, true);\n    }\n    ParserUtils.getToken(builder, mCOLON, GroovyBundle.message(\"colon.expected\"));\n    label.done(CASE_LABEL);\n    ParserUtils.getToken(builder, mNLS);\n    if (builder.getTokenType() == kCASE ||\n        builder.getTokenType() == kDEFAULT) {\n      parseCaseLabel(builder, parser);\n    }\n  }","id":58990,"modified_method":"/**\n   * Parses one or more sequential 'case' or 'default' labels\n   */\n  public static boolean parseCaseLabel(PsiBuilder builder, GroovyParser parser) {\n    IElementType elem = builder.getTokenType();\n    if (elem != kCASE && elem != kDEFAULT) {\n      return false;\n    }\n\n    PsiBuilder.Marker label = builder.mark();\n    builder.advanceLexer();\n    if (kCASE.equals(elem)) {\n      AssignmentExpression.parse(builder, parser, true);\n    }\n    ParserUtils.getToken(builder, mCOLON, GroovyBundle.message(\"colon.expected\"));\n    label.done(CASE_LABEL);\n    PsiBuilder.Marker beforeNls = builder.mark();\n    ParserUtils.getToken(builder, mNLS);\n    if (parseCaseLabel(builder, parser)) {\n      beforeNls.drop();\n    } else {\n      beforeNls.rollbackTo();\n    }\n    return true;\n  }","commit_id":"f59542d908220fd34011e2bba2b612a044426e6f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void fetcherFinished(ObjectContainer container, ClientContext context) {\n\t\tsynchronized(this) {\n\t\t\tfetcherFinished = true;\n\t\t\tif(!encoderFinished) return;\n\t\t}\n\t\tremoveFrom(container, context);\n\t}","id":58991,"modified_method":"public void fetcherFinished(ObjectContainer container, ClientContext context) {\n\t\tsynchronized(this) {\n\t\t\tfetcherFinished = true;\n\t\t\tif(!encoderFinished) {\n\t\t\t\tcontainer.store(this);\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Fetcher finished but encoder not finished on \"+this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tremoveFrom(container, context);\n\t}","commit_id":"00af34c08a4681e266761fd11665b4cfddf4e235","url":"https://github.com/freenet/fred"},{"original_method":"public void onDecodedSegment(ObjectContainer container, ClientContext context, FECJob job, Bucket[] dataBuckets2, Bucket[] checkBuckets2, SplitfileBlock[] dataBlockStatus, SplitfileBlock[] checkBlockStatus) {\n\t\tif(persistent) {\n\t\t\tcontainer.activate(parentFetcher, 1);\n\t\t\tcontainer.activate(parent, 1);\n\t\t\tcontainer.activate(context, 1);\n\t\t}\n\t\tif(codec == null)\n\t\t\tcodec = FECCodec.getCodec(splitfileType, dataKeys.length, checkKeys.length);\n\t\t// Because we use SplitfileBlock, we DON'T have to copy here.\n\t\t// See FECCallback comments for explanation.\n\t\ttry {\n\t\t\tif(persistent) {\n\t\t\t\tfor(int i=0;i<dataBuckets.length;i++) {\n\t\t\t\t\t// The FECCodec won't set them.\n\t\t\t\t\t// But they should be active.\n\t\t\t\t\tif(dataBlockStatus[i] != dataBuckets[i]) {\n\t\t\t\t\t\tlong theirID = container.ext().getID(dataBlockStatus[i]);\n\t\t\t\t\t\tlong ourID = container.ext().getID(dataBuckets[i]);\n\t\t\t\t\t\tif(theirID == ourID) {\n\t\t\t\t\t\t\tLogger.error(this, \"DB4O BUG DETECTED IN DECODED SEGMENT!: our block: \"+dataBuckets[i]+\" block from decode \"+dataBlockStatus[i]+\" both have ID \"+ourID+\" = \"+theirID);\n\t\t\t\t\t\t\tdataBuckets[i] = (MinimalSplitfileBlock) dataBlockStatus[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\tLogger.minor(this, \"Data block \"+i+\" is \"+dataBuckets[i]);\n\t\t\t\t\tif(!container.ext().isStored(dataBuckets[i]))\n\t\t\t\t\t\tLogger.error(this, \"Data block \"+i+\" is not stored!\");\n\t\t\t\t\telse if(!container.ext().isActive(dataBuckets[i]))\n\t\t\t\t\t\tLogger.error(this, \"Data block \"+i+\" is inactive! : \"+dataBuckets[i]);\n\t\t\t\t\tif(dataBuckets[i] == null)\n\t\t\t\t\t\tLogger.error(this, \"Data block \"+i+\" is null!\");\n\t\t\t\t\telse if(dataBuckets[i].data == null)\n\t\t\t\t\t\tLogger.error(this, \"Data block \"+i+\" has null data!\");\n\t\t\t\t\telse\n\t\t\t\t\t\tdataBuckets[i].data.storeTo(container);\n\t\t\t\t\tcontainer.store(dataBuckets[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(isCollectingBinaryBlob(parent)) {\n\t\t\t\tfor(int i=0;i<dataBuckets.length;i++) {\n\t\t\t\t\tBucket data = dataBlockStatus[i].getData();\n\t\t\t\t\tif(data == null) \n\t\t\t\t\t\tthrow new NullPointerException(\"Data bucket \"+i+\" of \"+dataBuckets.length+\" is null\");\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmaybeAddToBinaryBlob(data, i, false, container, context);\n\t\t\t\t\t} catch (FetchException e) {\n\t\t\t\t\t\tfail(e, container, context, false);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdecodedData = context.getBucketFactory(persistent).makeBucket(maxBlockLength * dataBuckets.length);\n\t\t\tif(logMINOR) Logger.minor(this, \"Copying data from \"+dataBuckets.length+\" data blocks\");\n\t\t\tOutputStream os = decodedData.getOutputStream();\n\t\t\tlong osSize = 0;\n\t\t\tfor(int i=0;i<dataBuckets.length;i++) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Copying data from block \"+i);\n\t\t\t\tSplitfileBlock status = dataBuckets[i];\n\t\t\t\tif(status == null) throw new NullPointerException();\n\t\t\t\tBucket data = status.getData();\n\t\t\t\tif(data == null) \n\t\t\t\t\tthrow new NullPointerException(\"Data bucket \"+i+\" of \"+dataBuckets.length+\" is null\");\n\t\t\t\tif(persistent) container.activate(data, 1);\n\t\t\t\tlong copied = BucketTools.copyTo(data, os, Long.MAX_VALUE);\n\t\t\t\tosSize += copied;\n\t\t\t\tif(i != dataBuckets.length-1 && copied != 32768)\n\t\t\t\t\tLogger.error(this, \"Copied only \"+copied+\" bytes from \"+data+\" (bucket \"+i+\")\");\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Copied \"+copied+\" bytes from bucket \"+i);\n\t\t\t}\n\t\t\tif(logMINOR) Logger.minor(this, \"Copied data (\"+osSize+\")\");\n\t\t\tos.close();\n\t\t\t// Must set finished BEFORE calling parentFetcher.\n\t\t\t// Otherwise a race is possible that might result in it not seeing our finishing.\n\t\t\tfinished = true;\n\t\t\tif(persistent) container.store(this);\n\t\t\tif(splitfileType == Metadata.SPLITFILE_NONREDUNDANT || !isCollectingBinaryBlob(parent))\n\t\t\t\tparentFetcher.segmentFinished(SplitFileFetcherSegment.this, container, context);\n\t\t\t// Leave active before queueing\n\t\t} catch (IOException e) {\n\t\t\tLogger.normal(this, \"Caught bucket error?: \"+e, e);\n\t\t\tsynchronized(this) {\n\t\t\t\tfinished = true;\n\t\t\t\tfailureException = new FetchException(FetchException.BUCKET_ERROR);\n\t\t\t}\n\t\t\tif(persistent) container.store(this);\n\t\t\tparentFetcher.segmentFinished(SplitFileFetcherSegment.this, container, context);\n\t\t\tencoderFinished(container, context);\n\t\t\treturn;\n\t\t}\n\n\t\tif(splitfileType == Metadata.SPLITFILE_NONREDUNDANT) {\n\t\t\tif(persistent) {\n\t\t\t\tcontainer.deactivate(parentFetcher, 1);\n\t\t\t\tcontainer.deactivate(parent, 1);\n\t\t\t\tcontainer.deactivate(context, 1);\n\t\t\t}\n\t\t\tencoderFinished(container, context);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Now heal\n\n\t\t/** Splitfile healing:\n\t\t * Any block which we have tried and failed to download should be \n\t\t * reconstructed and reinserted.\n\t\t */\n\n\t\t// FIXME don't heal if ignoreLastBlock.\n\t\tBucket lastBlock = dataBuckets[dataBuckets.length-1].data;\n\t\tif(lastBlock != null) {\n\t\t\tif(persistent)\n\t\t\t\tcontainer.activate(lastBlock, 1);\n\t\t\tif(lastBlock.size() != CHKBlock.DATA_LENGTH) {\n\t\t\t\ttry {\n\t\t\t\t\tdataBuckets[dataBuckets.length-1].data =\n\t\t\t\t\t\tBucketTools.pad(lastBlock, CHKBlock.DATA_LENGTH, context.persistentBucketFactory, (int) lastBlock.size());\n\t\t\t\t\tlastBlock.free();\n\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\tlastBlock.removeFrom(container);\n\t\t\t\t\t\tdataBuckets[dataBuckets.length-1].storeTo(container);\n\t\t\t\t\t}\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tfail(new FetchException(FetchException.BUCKET_ERROR, e), container, context, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Encode any check blocks we don't have\n\t\ttry {\n\t\tcodec.addToQueue(new FECJob(codec, context.fecQueue, dataBuckets, checkBuckets, 32768, context.getBucketFactory(persistent), this, false, parent.getPriorityClass(), persistent),\n\t\t\t\tcontext.fecQueue, container);\n\t\tif(persistent) {\n\t\t\tcontainer.deactivate(parentFetcher, 1);\n\t\t\tcontainer.deactivate(parent, 1);\n\t\t\tcontainer.deactivate(context, 1);\n\t\t}\n\t\t} catch (Throwable t) {\n\t\t\tLogger.error(this, \"Caught \"+t, t);\n\t\t\tencoderFinished(container, context);\n\t\t}\n\t}","id":58992,"modified_method":"public void onDecodedSegment(ObjectContainer container, ClientContext context, FECJob job, Bucket[] dataBuckets2, Bucket[] checkBuckets2, SplitfileBlock[] dataBlockStatus, SplitfileBlock[] checkBlockStatus) {\n\t\tif(persistent) {\n\t\t\tcontainer.activate(parentFetcher, 1);\n\t\t\tcontainer.activate(parent, 1);\n\t\t\tcontainer.activate(context, 1);\n\t\t}\n\t\tif(codec == null)\n\t\t\tcodec = FECCodec.getCodec(splitfileType, dataKeys.length, checkKeys.length);\n\t\t// Because we use SplitfileBlock, we DON'T have to copy here.\n\t\t// See FECCallback comments for explanation.\n\t\ttry {\n\t\t\tif(persistent) {\n\t\t\t\tfor(int i=0;i<dataBuckets.length;i++) {\n\t\t\t\t\t// The FECCodec won't set them.\n\t\t\t\t\t// But they should be active.\n\t\t\t\t\tif(dataBlockStatus[i] != dataBuckets[i]) {\n\t\t\t\t\t\tlong theirID = container.ext().getID(dataBlockStatus[i]);\n\t\t\t\t\t\tlong ourID = container.ext().getID(dataBuckets[i]);\n\t\t\t\t\t\tif(theirID == ourID) {\n\t\t\t\t\t\t\tLogger.error(this, \"DB4O BUG DETECTED IN DECODED SEGMENT!: our block: \"+dataBuckets[i]+\" block from decode \"+dataBlockStatus[i]+\" both have ID \"+ourID+\" = \"+theirID);\n\t\t\t\t\t\t\tdataBuckets[i] = (MinimalSplitfileBlock) dataBlockStatus[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(logMINOR)\n\t\t\t\t\t\tLogger.minor(this, \"Data block \"+i+\" is \"+dataBuckets[i]);\n\t\t\t\t\tif(!container.ext().isStored(dataBuckets[i]))\n\t\t\t\t\t\tLogger.error(this, \"Data block \"+i+\" is not stored!\");\n\t\t\t\t\telse if(!container.ext().isActive(dataBuckets[i]))\n\t\t\t\t\t\tLogger.error(this, \"Data block \"+i+\" is inactive! : \"+dataBuckets[i]);\n\t\t\t\t\tif(dataBuckets[i] == null)\n\t\t\t\t\t\tLogger.error(this, \"Data block \"+i+\" is null!\");\n\t\t\t\t\telse if(dataBuckets[i].data == null)\n\t\t\t\t\t\tLogger.error(this, \"Data block \"+i+\" has null data!\");\n\t\t\t\t\telse\n\t\t\t\t\t\tdataBuckets[i].data.storeTo(container);\n\t\t\t\t\tcontainer.store(dataBuckets[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(isCollectingBinaryBlob(parent)) {\n\t\t\t\tfor(int i=0;i<dataBuckets.length;i++) {\n\t\t\t\t\tBucket data = dataBlockStatus[i].getData();\n\t\t\t\t\tif(data == null) \n\t\t\t\t\t\tthrow new NullPointerException(\"Data bucket \"+i+\" of \"+dataBuckets.length+\" is null\");\n\t\t\t\t\ttry {\n\t\t\t\t\t\tmaybeAddToBinaryBlob(data, i, false, container, context);\n\t\t\t\t\t} catch (FetchException e) {\n\t\t\t\t\t\tfail(e, container, context, false);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdecodedData = context.getBucketFactory(persistent).makeBucket(maxBlockLength * dataBuckets.length);\n\t\t\tif(logMINOR) Logger.minor(this, \"Copying data from \"+dataBuckets.length+\" data blocks\");\n\t\t\tOutputStream os = decodedData.getOutputStream();\n\t\t\tlong osSize = 0;\n\t\t\tfor(int i=0;i<dataBuckets.length;i++) {\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Copying data from block \"+i);\n\t\t\t\tSplitfileBlock status = dataBuckets[i];\n\t\t\t\tif(status == null) throw new NullPointerException();\n\t\t\t\tBucket data = status.getData();\n\t\t\t\tif(data == null) \n\t\t\t\t\tthrow new NullPointerException(\"Data bucket \"+i+\" of \"+dataBuckets.length+\" is null\");\n\t\t\t\tif(persistent) container.activate(data, 1);\n\t\t\t\tlong copied = BucketTools.copyTo(data, os, Long.MAX_VALUE);\n\t\t\t\tosSize += copied;\n\t\t\t\tif(i != dataBuckets.length-1 && copied != 32768)\n\t\t\t\t\tLogger.error(this, \"Copied only \"+copied+\" bytes from \"+data+\" (bucket \"+i+\")\");\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Copied \"+copied+\" bytes from bucket \"+i);\n\t\t\t}\n\t\t\tif(logMINOR) Logger.minor(this, \"Copied data (\"+osSize+\")\");\n\t\t\tos.close();\n\t\t\t// Must set finished BEFORE calling parentFetcher.\n\t\t\t// Otherwise a race is possible that might result in it not seeing our finishing.\n\t\t\tfinished = true;\n\t\t\tif(persistent) container.store(this);\n\t\t\tif(splitfileType == Metadata.SPLITFILE_NONREDUNDANT || !isCollectingBinaryBlob(parent))\n\t\t\t\tparentFetcher.segmentFinished(SplitFileFetcherSegment.this, container, context);\n\t\t\t// Leave active before queueing\n\t\t} catch (IOException e) {\n\t\t\tLogger.normal(this, \"Caught bucket error?: \"+e, e);\n\t\t\tsynchronized(this) {\n\t\t\t\tfinished = true;\n\t\t\t\tfailureException = new FetchException(FetchException.BUCKET_ERROR);\n\t\t\t}\n\t\t\tif(persistent) container.store(this);\n\t\t\tparentFetcher.segmentFinished(SplitFileFetcherSegment.this, container, context);\n\t\t\tif(persistent)\n\t\t\t\tencoderFinished(container, context);\n\t\t\treturn;\n\t\t}\n\n\t\tif(splitfileType == Metadata.SPLITFILE_NONREDUNDANT) {\n\t\t\tif(persistent) {\n\t\t\t\tcontainer.deactivate(parentFetcher, 1);\n\t\t\t\tcontainer.deactivate(parent, 1);\n\t\t\t\tcontainer.deactivate(context, 1);\n\t\t\t}\n\t\t\tif(persistent)\n\t\t\t\tencoderFinished(container, context);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Now heal\n\n\t\t/** Splitfile healing:\n\t\t * Any block which we have tried and failed to download should be \n\t\t * reconstructed and reinserted.\n\t\t */\n\n\t\t// FIXME don't heal if ignoreLastBlock.\n\t\tBucket lastBlock = dataBuckets[dataBuckets.length-1].data;\n\t\tif(lastBlock != null) {\n\t\t\tif(persistent)\n\t\t\t\tcontainer.activate(lastBlock, 1);\n\t\t\tif(lastBlock.size() != CHKBlock.DATA_LENGTH) {\n\t\t\t\ttry {\n\t\t\t\t\tdataBuckets[dataBuckets.length-1].data =\n\t\t\t\t\t\tBucketTools.pad(lastBlock, CHKBlock.DATA_LENGTH, context.persistentBucketFactory, (int) lastBlock.size());\n\t\t\t\t\tlastBlock.free();\n\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\tlastBlock.removeFrom(container);\n\t\t\t\t\t\tdataBuckets[dataBuckets.length-1].storeTo(container);\n\t\t\t\t\t}\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tfail(new FetchException(FetchException.BUCKET_ERROR, e), container, context, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Encode any check blocks we don't have\n\t\ttry {\n\t\tcodec.addToQueue(new FECJob(codec, context.fecQueue, dataBuckets, checkBuckets, 32768, context.getBucketFactory(persistent), this, false, parent.getPriorityClass(), persistent),\n\t\t\t\tcontext.fecQueue, container);\n\t\tif(persistent) {\n\t\t\tcontainer.deactivate(parentFetcher, 1);\n\t\t\tcontainer.deactivate(parent, 1);\n\t\t\tcontainer.deactivate(context, 1);\n\t\t}\n\t\t} catch (Throwable t) {\n\t\t\tLogger.error(this, \"Caught \"+t, t);\n\t\t\tif(persistent)\n\t\t\t\tencoderFinished(container, context);\n\t\t}\n\t}","commit_id":"00af34c08a4681e266761fd11665b4cfddf4e235","url":"https://github.com/freenet/fred"},{"original_method":"private void encoderFinished(ObjectContainer container, ClientContext context) {\n\t\tsynchronized(this) {\n\t\t\tencoderFinished = true;\n\t\t\tif(!fetcherFinished) return;\n\t\t}\n\t\tremoveFrom(container, context);\n\t}","id":58993,"modified_method":"private void encoderFinished(ObjectContainer container, ClientContext context) {\n\t\tsynchronized(this) {\n\t\t\tencoderFinished = true;\n\t\t\tif(!fetcherFinished) {\n\t\t\t\tcontainer.store(this);\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Encoder finished but fetcher not finished on \"+this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tremoveFrom(container, context);\n\t}","commit_id":"00af34c08a4681e266761fd11665b4cfddf4e235","url":"https://github.com/freenet/fred"},{"original_method":"public void onEncodedSegment(ObjectContainer container, ClientContext context, FECJob job, Bucket[] dataBuckets2, Bucket[] checkBuckets2, SplitfileBlock[] dataBlockStatus, SplitfileBlock[] checkBlockStatus) {\n\t\ttry {\n\t\tif(persistent) {\n\t\t\tcontainer.activate(parent, 1);\n\t\t}\n\t\tif(logMINOR)\n\t\t\tLogger.minor(this, \"Encoded \"+this);\n\t\t// Because we use SplitfileBlock, we DON'T have to copy here.\n\t\t// See FECCallback comments for explanation.\n\t\tsynchronized(this) {\n\t\t\t// Now insert *ALL* blocks on which we had at least one failure, and didn't eventually succeed\n\t\t\tfor(int i=0;i<dataBuckets.length;i++) {\n\t\t\t\tboolean heal = false;\n\t\t\t\tif(dataBuckets[i] == null) {\n\t\t\t\t\tLogger.error(this, \"Data bucket \"+i+\" is null in onEncodedSegment on \"+this);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(dataBuckets[i] != dataBlockStatus[i]) {\n\t\t\t\t\tLogger.error(this, \"Data block \"+i+\" : ours is \"+dataBuckets[i]+\" codec's is \"+dataBlockStatus[i]);\n\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\tif(container.ext().getID(dataBuckets[i]) == container.ext().getID(dataBlockStatus[i]))\n\t\t\t\t\t\t\tLogger.error(this, \"DB4O BUG DETECTED: SAME UID FOR TWO OBJECTS: \"+dataBuckets[i]+\"=\"+container.ext().getID(dataBuckets[i])+\" and \"+dataBlockStatus[i]+\"=\"+container.ext().getID(dataBlockStatus[i])+\" ... attempting workaround ...\");\n\t\t\t\t\t\tLogger.error(this, \"Ours is \"+(container.ext().isStored(dataBuckets[i])?\"stored \":\"\")+(container.ext().isActive(dataBuckets[i])?\"active \":\"\")+\" UUID \"+container.ext().getID(dataBuckets[i]));\n\t\t\t\t\t\tLogger.error(this, \"Theirs is \"+(container.ext().isStored(dataBlockStatus[i])?\"stored \":\"\")+(container.ext().isActive(dataBlockStatus[i])?\"active \":\"\")+\" UUID \"+container.ext().getID(dataBlockStatus[i]));\n\t\t\t\t\t}\n\t\t\t\t\tdataBuckets[i] = (MinimalSplitfileBlock) dataBlockStatus[i];\n\t\t\t\t}\n\t\t\t\tBucket data = dataBuckets[i].getData();\n\t\t\t\tif(data == null) {\n\t\t\t\t\tLogger.error(this, \"Data bucket \"+i+\" has null contents in onEncodedSegment on \"+this+\" for block \"+dataBuckets[i]);\n\t\t\t\t\tif(!container.ext().isStored(dataBuckets[i]))\n\t\t\t\t\t\tLogger.error(this, \"Splitfile block appears not to be stored\");\n\t\t\t\t\telse if(!container.ext().isActive(dataBuckets[i]))\n\t\t\t\t\t\tLogger.error(this, \"Splitfile block appears not to be active\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(dataRetries[i] > 0)\n\t\t\t\t\theal = true;\n\t\t\t\tif(heal) {\n\t\t\t\t\tqueueHeal(data, container, context);\n\t\t\t\t\tdataBuckets[i].data = null; // So that it doesn't remove the data\n\t\t\t\t} else {\n\t\t\t\t\tdataBuckets[i].data.free();\n\t\t\t\t}\n\t\t\t\tif(persistent)\n\t\t\t\t\tdataBuckets[i].removeFrom(container);\n\t\t\t\tdataBuckets[i] = null;\n\t\t\t\tif(persistent && dataKeys[i] != null)\n\t\t\t\t\tdataKeys[i].removeFrom(container);\n\t\t\t\tdataKeys[i] = null;\n\t\t\t}\n\t\t\tfor(int i=0;i<checkBuckets.length;i++) {\n\t\t\t\tboolean heal = false;\n\t\t\t\t// Check buckets will already be active because the FEC codec\n\t\t\t\t// has been using them.\n\t\t\t\tif(checkBuckets[i] == null) {\n\t\t\t\t\tLogger.error(this, \"Check bucket \"+i+\" is null in onEncodedSegment on \"+this);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(checkBuckets[i] != checkBlockStatus[i]) {\n\t\t\t\t\tLogger.error(this, \"Check block \"+i+\" : ours is \"+checkBuckets[i]+\" codec's is \"+checkBlockStatus[i]);\n\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\tif(container.ext().getID(checkBuckets[i]) == container.ext().getID(checkBlockStatus[i]))\n\t\t\t\t\t\t\tLogger.error(this, \"DB4O BUG DETECTED: SAME UID FOR TWO OBJECTS: \"+checkBuckets[i]+\"=\"+container.ext().getID(checkBuckets[i])+\" and \"+checkBlockStatus[i]+\"=\"+container.ext().getID(checkBlockStatus[i])+\" ... attempting workaround ...\");\n\t\t\t\t\t\tLogger.error(this, \"Ours is \"+(container.ext().isStored(checkBuckets[i])?\"stored \":\"\")+(container.ext().isActive(checkBuckets[i])?\"active \":\"\")+\" UUID \"+container.ext().getID(checkBuckets[i]));\n\t\t\t\t\t\tLogger.error(this, \"Theirs is \"+(container.ext().isStored(checkBlockStatus[i])?\"stored \":\"\")+(container.ext().isActive(checkBlockStatus[i])?\"active \":\"\")+\" UUID \"+container.ext().getID(checkBlockStatus[i]));\n\t\t\t\t\t}\n\t\t\t\t\tcheckBuckets[i] = (MinimalSplitfileBlock) checkBlockStatus[i];\n\t\t\t\t}\n\t\t\t\tBucket data = checkBuckets[i].getData();\n\t\t\t\tif(data == null) {\n\t\t\t\t\tLogger.error(this, \"Check bucket \"+i+\" has null contents in onEncodedSegment on \"+this+\" for block \"+checkBuckets[i]);\n\t\t\t\t\tif(!container.ext().isStored(dataBuckets[i]))\n\t\t\t\t\t\tLogger.error(this, \"Splitfile block appears not to be stored\");\n\t\t\t\t\telse if(!container.ext().isActive(dataBuckets[i]))\n\t\t\t\t\t\tLogger.error(this, \"Splitfile block appears not to be active\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tmaybeAddToBinaryBlob(data, i, true, container, context);\n\t\t\t\t} catch (FetchException e) {\n\t\t\t\t\tfail(e, container, context, false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(checkRetries[i] > 0)\n\t\t\t\t\theal = true;\n\t\t\t\tif(heal) {\n\t\t\t\t\tqueueHeal(data, container, context);\n\t\t\t\t\tcheckBuckets[i].data = null;\n\t\t\t\t} else {\n\t\t\t\t\tdata.free();\n\t\t\t\t}\n\t\t\t\tif(persistent)\n\t\t\t\t\tcheckBuckets[i].removeFrom(container);\n\t\t\t\tcheckBuckets[i] = null;\n\t\t\t\tif(persistent && checkKeys[i] != null)\n\t\t\t\t\tcheckKeys[i].removeFrom(container);\n\t\t\t\tcheckKeys[i] = null;\n\t\t\t}\n\t\t}\n\t\tif(persistent) {\n\t\t\tcontainer.store(this);\n\t\t}\n\t\t// Defer the completion until we have generated healing blocks if we are collecting binary blobs.\n\t\tif(isCollectingBinaryBlob(parent)) {\n\t\t\tif(persistent)\n\t\t\t\tcontainer.activate(parentFetcher, 1);\n\t\t\tparentFetcher.segmentFinished(SplitFileFetcherSegment.this, container, context);\n\t\t\tif(persistent)\n\t\t\t\tcontainer.deactivate(parentFetcher, 1);\n\t\t}\n\t\t} finally {\n\t\tencoderFinished(container, context);\n\t\t}\n\t}","id":58994,"modified_method":"public void onEncodedSegment(ObjectContainer container, ClientContext context, FECJob job, Bucket[] dataBuckets2, Bucket[] checkBuckets2, SplitfileBlock[] dataBlockStatus, SplitfileBlock[] checkBlockStatus) {\n\t\ttry {\n\t\tif(persistent) {\n\t\t\tcontainer.activate(parent, 1);\n\t\t}\n\t\tif(logMINOR)\n\t\t\tLogger.minor(this, \"Encoded \"+this);\n\t\t// Because we use SplitfileBlock, we DON'T have to copy here.\n\t\t// See FECCallback comments for explanation.\n\t\tsynchronized(this) {\n\t\t\t// Now insert *ALL* blocks on which we had at least one failure, and didn't eventually succeed\n\t\t\tfor(int i=0;i<dataBuckets.length;i++) {\n\t\t\t\tboolean heal = false;\n\t\t\t\tif(dataBuckets[i] == null) {\n\t\t\t\t\tLogger.error(this, \"Data bucket \"+i+\" is null in onEncodedSegment on \"+this);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(dataBuckets[i] != dataBlockStatus[i]) {\n\t\t\t\t\tLogger.error(this, \"Data block \"+i+\" : ours is \"+dataBuckets[i]+\" codec's is \"+dataBlockStatus[i]);\n\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\tif(container.ext().getID(dataBuckets[i]) == container.ext().getID(dataBlockStatus[i]))\n\t\t\t\t\t\t\tLogger.error(this, \"DB4O BUG DETECTED: SAME UID FOR TWO OBJECTS: \"+dataBuckets[i]+\"=\"+container.ext().getID(dataBuckets[i])+\" and \"+dataBlockStatus[i]+\"=\"+container.ext().getID(dataBlockStatus[i])+\" ... attempting workaround ...\");\n\t\t\t\t\t\tLogger.error(this, \"Ours is \"+(container.ext().isStored(dataBuckets[i])?\"stored \":\"\")+(container.ext().isActive(dataBuckets[i])?\"active \":\"\")+\" UUID \"+container.ext().getID(dataBuckets[i]));\n\t\t\t\t\t\tLogger.error(this, \"Theirs is \"+(container.ext().isStored(dataBlockStatus[i])?\"stored \":\"\")+(container.ext().isActive(dataBlockStatus[i])?\"active \":\"\")+\" UUID \"+container.ext().getID(dataBlockStatus[i]));\n\t\t\t\t\t}\n\t\t\t\t\tdataBuckets[i] = (MinimalSplitfileBlock) dataBlockStatus[i];\n\t\t\t\t}\n\t\t\t\tBucket data = dataBuckets[i].getData();\n\t\t\t\tif(data == null) {\n\t\t\t\t\tLogger.error(this, \"Data bucket \"+i+\" has null contents in onEncodedSegment on \"+this+\" for block \"+dataBuckets[i]);\n\t\t\t\t\tif(!container.ext().isStored(dataBuckets[i]))\n\t\t\t\t\t\tLogger.error(this, \"Splitfile block appears not to be stored\");\n\t\t\t\t\telse if(!container.ext().isActive(dataBuckets[i]))\n\t\t\t\t\t\tLogger.error(this, \"Splitfile block appears not to be active\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(dataRetries[i] > 0)\n\t\t\t\t\theal = true;\n\t\t\t\tif(heal) {\n\t\t\t\t\tqueueHeal(data, container, context);\n\t\t\t\t\tdataBuckets[i].data = null; // So that it doesn't remove the data\n\t\t\t\t} else {\n\t\t\t\t\tdataBuckets[i].data.free();\n\t\t\t\t}\n\t\t\t\tif(persistent)\n\t\t\t\t\tdataBuckets[i].removeFrom(container);\n\t\t\t\tdataBuckets[i] = null;\n\t\t\t\tif(persistent && dataKeys[i] != null)\n\t\t\t\t\tdataKeys[i].removeFrom(container);\n\t\t\t\tdataKeys[i] = null;\n\t\t\t}\n\t\t\tfor(int i=0;i<checkBuckets.length;i++) {\n\t\t\t\tboolean heal = false;\n\t\t\t\t// Check buckets will already be active because the FEC codec\n\t\t\t\t// has been using them.\n\t\t\t\tif(checkBuckets[i] == null) {\n\t\t\t\t\tLogger.error(this, \"Check bucket \"+i+\" is null in onEncodedSegment on \"+this);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(checkBuckets[i] != checkBlockStatus[i]) {\n\t\t\t\t\tLogger.error(this, \"Check block \"+i+\" : ours is \"+checkBuckets[i]+\" codec's is \"+checkBlockStatus[i]);\n\t\t\t\t\tif(persistent) {\n\t\t\t\t\t\tif(container.ext().getID(checkBuckets[i]) == container.ext().getID(checkBlockStatus[i]))\n\t\t\t\t\t\t\tLogger.error(this, \"DB4O BUG DETECTED: SAME UID FOR TWO OBJECTS: \"+checkBuckets[i]+\"=\"+container.ext().getID(checkBuckets[i])+\" and \"+checkBlockStatus[i]+\"=\"+container.ext().getID(checkBlockStatus[i])+\" ... attempting workaround ...\");\n\t\t\t\t\t\tLogger.error(this, \"Ours is \"+(container.ext().isStored(checkBuckets[i])?\"stored \":\"\")+(container.ext().isActive(checkBuckets[i])?\"active \":\"\")+\" UUID \"+container.ext().getID(checkBuckets[i]));\n\t\t\t\t\t\tLogger.error(this, \"Theirs is \"+(container.ext().isStored(checkBlockStatus[i])?\"stored \":\"\")+(container.ext().isActive(checkBlockStatus[i])?\"active \":\"\")+\" UUID \"+container.ext().getID(checkBlockStatus[i]));\n\t\t\t\t\t}\n\t\t\t\t\tcheckBuckets[i] = (MinimalSplitfileBlock) checkBlockStatus[i];\n\t\t\t\t}\n\t\t\t\tBucket data = checkBuckets[i].getData();\n\t\t\t\tif(data == null) {\n\t\t\t\t\tLogger.error(this, \"Check bucket \"+i+\" has null contents in onEncodedSegment on \"+this+\" for block \"+checkBuckets[i]);\n\t\t\t\t\tif(!container.ext().isStored(dataBuckets[i]))\n\t\t\t\t\t\tLogger.error(this, \"Splitfile block appears not to be stored\");\n\t\t\t\t\telse if(!container.ext().isActive(dataBuckets[i]))\n\t\t\t\t\t\tLogger.error(this, \"Splitfile block appears not to be active\");\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tmaybeAddToBinaryBlob(data, i, true, container, context);\n\t\t\t\t} catch (FetchException e) {\n\t\t\t\t\tfail(e, container, context, false);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(checkRetries[i] > 0)\n\t\t\t\t\theal = true;\n\t\t\t\tif(heal) {\n\t\t\t\t\tqueueHeal(data, container, context);\n\t\t\t\t\tcheckBuckets[i].data = null;\n\t\t\t\t} else {\n\t\t\t\t\tdata.free();\n\t\t\t\t}\n\t\t\t\tif(persistent)\n\t\t\t\t\tcheckBuckets[i].removeFrom(container);\n\t\t\t\tcheckBuckets[i] = null;\n\t\t\t\tif(persistent && checkKeys[i] != null)\n\t\t\t\t\tcheckKeys[i].removeFrom(container);\n\t\t\t\tcheckKeys[i] = null;\n\t\t\t}\n\t\t}\n\t\tif(persistent) {\n\t\t\tcontainer.store(this);\n\t\t}\n\t\t// Defer the completion until we have generated healing blocks if we are collecting binary blobs.\n\t\tif(isCollectingBinaryBlob(parent)) {\n\t\t\tif(persistent)\n\t\t\t\tcontainer.activate(parentFetcher, 1);\n\t\t\tparentFetcher.segmentFinished(SplitFileFetcherSegment.this, container, context);\n\t\t\tif(persistent)\n\t\t\t\tcontainer.deactivate(parentFetcher, 1);\n\t\t}\n\t\t} finally {\n\t\t\tif(persistent)\n\t\t\t\tencoderFinished(container, context);\n\t\t}\n\t}","commit_id":"00af34c08a4681e266761fd11665b4cfddf4e235","url":"https://github.com/freenet/fred"},{"original_method":"public void removeFrom(ObjectContainer container, ClientContext context) {\n\t\tif(decodedData != null)\n\t\t\tfreeDecodedData(container);\n\t\tremoveSubSegments(container, context);\n\t\tfor(int i=0;i<dataKeys.length;i++) {\n\t\t\tif(dataKeys[i] != null) dataKeys[i].removeFrom(container);\n\t\t\tdataKeys[i] = null;\n\t\t}\n\t\tfor(int i=0;i<checkKeys.length;i++) {\n\t\t\tif(checkKeys[i] != null) checkKeys[i].removeFrom(container);\n\t\t\tcheckKeys[i] = null;\n\t\t}\n\t\tfor(int i=0;i<dataBuckets.length;i++) {\n\t\t\tMinimalSplitfileBlock block = dataBuckets[i];\n\t\t\tif(block == null) continue;\n\t\t\tif(block.data != null) {\n\t\t\t\tLogger.error(this, \"Data block \"+i+\" still present in removeFrom()! on \"+this);\n\t\t\t\tblock.data.free();\n\t\t\t}\n\t\t\tblock.removeFrom(container);\n\t\t}\n\t\tfor(int i=0;i<checkBuckets.length;i++) {\n\t\t\tMinimalSplitfileBlock block = checkBuckets[i];\n\t\t\tif(block == null) continue;\n\t\t\tif(block.data != null) {\n\t\t\t\tLogger.error(this, \"Check block \"+i+\" still present in removeFrom()! on \"+this);\n\t\t\t\tblock.data.free();\n\t\t\t}\n\t\t\tblock.removeFrom(container);\n\t\t}\n\t\tcontainer.activate(errors, 1);\n\t\terrors.removeFrom(container);\n\t\tcontainer.delete(this);\n\t}","id":58995,"modified_method":"public void removeFrom(ObjectContainer container, ClientContext context) {\n\t\tif(logMINOR) Logger.minor(this, \"removing \"+this);\n\t\tif(decodedData != null)\n\t\t\tfreeDecodedData(container);\n\t\tremoveSubSegments(container, context);\n\t\tfor(int i=0;i<dataKeys.length;i++) {\n\t\t\tif(dataKeys[i] != null) dataKeys[i].removeFrom(container);\n\t\t\tdataKeys[i] = null;\n\t\t}\n\t\tfor(int i=0;i<checkKeys.length;i++) {\n\t\t\tif(checkKeys[i] != null) checkKeys[i].removeFrom(container);\n\t\t\tcheckKeys[i] = null;\n\t\t}\n\t\tfor(int i=0;i<dataBuckets.length;i++) {\n\t\t\tMinimalSplitfileBlock block = dataBuckets[i];\n\t\t\tif(block == null) continue;\n\t\t\tif(block.data != null) {\n\t\t\t\tLogger.error(this, \"Data block \"+i+\" still present in removeFrom()! on \"+this);\n\t\t\t\tblock.data.free();\n\t\t\t}\n\t\t\tblock.removeFrom(container);\n\t\t}\n\t\tfor(int i=0;i<checkBuckets.length;i++) {\n\t\t\tMinimalSplitfileBlock block = checkBuckets[i];\n\t\t\tif(block == null) continue;\n\t\t\tif(block.data != null) {\n\t\t\t\tLogger.error(this, \"Check block \"+i+\" still present in removeFrom()! on \"+this);\n\t\t\t\tblock.data.free();\n\t\t\t}\n\t\t\tblock.removeFrom(container);\n\t\t}\n\t\tcontainer.activate(errors, 1);\n\t\terrors.removeFrom(container);\n\t\tcontainer.delete(this);\n\t}","commit_id":"00af34c08a4681e266761fd11665b4cfddf4e235","url":"https://github.com/freenet/fred"},{"original_method":"/**\n   * Test parsing of Parquet file originally made from Avro records (avro < 1.8, before introduction of logical types)\n   */\n  @Test\n  public void testParseAvroPrimitiveTypes() {\n    FrameAssertion assertion = new GenFrameAssertion(\"avroPrimitiveTypes.parquet\", TestUtil.ari(9, 100)) {\n      @Override protected File prepareFile() throws IOException { return ParquetFileGenerator.generateAvroPrimitiveTypes(file, nrows(), new Date()); }\n      @Override public void check(Frame f) {\n        assertArrayEquals(\"Column names need to match!\", ar(\"myboolean\", \"myint\", \"mylong\", \"myfloat\", \"mydouble\", \"mydate\", \"myuuid\", \"mystring\", \"myenum\"), f.names());\n        assertArrayEquals(\"Column types need to match!\", ar(Vec.T_NUM, Vec.T_NUM, Vec.T_NUM, Vec.T_NUM, Vec.T_NUM, Vec.T_TIME, Vec.T_UUID, Vec.T_STR, Vec.T_CAT), f.types());\n        BufferedString bs = new BufferedString();\n        for (int row = 0; row < nrows(); row++) {\n          assertEquals(\"Value in column myboolean\", 1 - (row % 2), f.vec(0).at8(row));\n          assertEquals(\"Value in column myint\", 1 + row, f.vec(1).at8(row));\n          assertEquals(\"Value in column mylong\", 2 + row, f.vec(2).at8(row));\n          assertEquals(\"Value in column myfloat\", 3.1f + row, f.vec(3).at(row), EPSILON);\n          assertEquals(\"Value in column myfloat\", 4.1 + row, f.vec(4).at(row), EPSILON);\n          assertEquals(\"Value in column mystring\", \"hello world: \" + row, f.vec(7).atStr(bs, row).bytesToString());\n          assertEquals(\"Value in column myenum\", row % 2 == 0 ? \"a\" : \"b\", f.vec(8).factor(f.vec(8).at8(row)));\n        }\n      }\n    };\n    assertFrameAssertion(assertion);\n  }","id":58996,"modified_method":"/**\n   * Test parsing of Parquet file originally made from Avro records (avro < 1.8, before introduction of logical types)\n   */\n  @Test\n  public void testParseAvroPrimitiveTypes() {\n    FrameAssertion assertion = new GenFrameAssertion(\"avroPrimitiveTypes.parquet\", TestUtil.ari(9, 100)) {\n      @Override protected File prepareFile() throws IOException { return ParquetFileGenerator.generateAvroPrimitiveTypes(Files.createTempDir(), file, nrows(), new Date()); }\n      @Override public void check(Frame f) {\n        assertArrayEquals(\"Column names need to match!\", ar(\"myboolean\", \"myint\", \"mylong\", \"myfloat\", \"mydouble\", \"mydate\", \"myuuid\", \"mystring\", \"myenum\"), f.names());\n        assertArrayEquals(\"Column types need to match!\", ar(Vec.T_NUM, Vec.T_NUM, Vec.T_NUM, Vec.T_NUM, Vec.T_NUM, Vec.T_TIME, Vec.T_UUID, Vec.T_STR, Vec.T_CAT), f.types());\n        BufferedString bs = new BufferedString();\n        for (int row = 0; row < nrows(); row++) {\n          assertEquals(\"Value in column myboolean\", 1 - (row % 2), f.vec(0).at8(row));\n          assertEquals(\"Value in column myint\", 1 + row, f.vec(1).at8(row));\n          assertEquals(\"Value in column mylong\", 2 + row, f.vec(2).at8(row));\n          assertEquals(\"Value in column myfloat\", 3.1f + row, f.vec(3).at(row), EPSILON);\n          assertEquals(\"Value in column myfloat\", 4.1 + row, f.vec(4).at(row), EPSILON);\n          assertEquals(\"Value in column mystring\", \"hello world: \" + row, f.vec(7).atStr(bs, row).bytesToString());\n          assertEquals(\"Value in column myenum\", row % 2 == 0 ? \"a\" : \"b\", f.vec(8).factor(f.vec(8).at8(row)));\n        }\n      }\n    };\n    assertFrameAssertion(assertion);\n  }","commit_id":"86fc556db6c8260f1d32cda2bf249cd8f031c45d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"static File generateAvroPrimitiveTypes(String filename, int nrows, Date date) throws IOException {\n    File parentDir = Files.createTempDir();\n    File f = new File(parentDir, filename);\n    Schema schema = new Schema.Parser().parse(Resources.getResource(\"PrimitiveAvro.avsc\").openStream());\n    AvroParquetWriter<GenericRecord> writer = new AvroParquetWriter<GenericRecord>(new Path(f.getPath()), schema);\n    try {\n      DateFormat format = new SimpleDateFormat(\"yy-MMM-dd:hh.mm.ss.SSS aaa\");\n      for (int i = 0; i < nrows; i++) {\n        GenericData.Record record = new GenericRecordBuilder(schema)\n                .set(\"mynull\", null)\n                .set(\"myboolean\", i % 2 == 0)\n                .set(\"myint\", 1 + i)\n                .set(\"mylong\", 2L + i)\n                .set(\"myfloat\", 3.1f + i)\n                .set(\"mydouble\", 4.1 + i)\n                .set(\"mydate\", format.format(new Date(date.getTime() - (i * 1000 * 3600))))\n                .set(\"myuuid\", UUID.randomUUID())\n                .set(\"mystring\", \"hello world: \" + i)\n                .set(\"myenum\", i % 2 == 0 ? \"a\" : \"b\")\n                .build();\n        writer.write(record);\n      }\n    } finally {\n      writer.close();\n    }\n    return f;\n  }","id":58997,"modified_method":"static File generateAvroPrimitiveTypes(File parentDir, String filename, int nrows, Date date) throws IOException {\n    File f = new File(parentDir, filename);\n    Schema schema = new Schema.Parser().parse(Resources.getResource(\"PrimitiveAvro.avsc\").openStream());\n    AvroParquetWriter<GenericRecord> writer = new AvroParquetWriter<GenericRecord>(new Path(f.getPath()), schema);\n    try {\n      DateFormat format = new SimpleDateFormat(\"yy-MMM-dd:hh.mm.ss.SSS aaa\");\n      for (int i = 0; i < nrows; i++) {\n        GenericData.Record record = new GenericRecordBuilder(schema)\n                .set(\"mynull\", null)\n                .set(\"myboolean\", i % 2 == 0)\n                .set(\"myint\", 1 + i)\n                .set(\"mylong\", 2L + i)\n                .set(\"myfloat\", 3.1f + i)\n                .set(\"mydouble\", 4.1 + i)\n                .set(\"mydate\", format.format(new Date(date.getTime() - (i * 1000 * 3600))))\n                .set(\"myuuid\", UUID.randomUUID())\n                .set(\"mystring\", \"hello world: \" + i)\n                .set(\"myenum\", i % 2 == 0 ? \"a\" : \"b\")\n                .build();\n        writer.write(record);\n      }\n    } finally {\n      writer.close();\n    }\n    return f;\n  }","commit_id":"86fc556db6c8260f1d32cda2bf249cd8f031c45d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override\n    public Frame prepare() {\n      try {\n        File f = generatedFile = prepareFile();\n        System.out.println(\"File generated into: \" + f.getCanonicalPath());\n        return TestUtil.parse_test_file(f.getCanonicalPath());\n      } catch (IOException e) {\n        throw new RuntimeException(\"Cannot created test file: \" + file, e);\n      }\n    }","id":58998,"modified_method":"@Override\n    public Frame prepare() {\n      try {\n        File f = generatedFile = prepareFile();\n        System.out.println(\"File generated into: \" + f.getCanonicalPath());\n        if (f.isDirectory()) {\n          return parse_test_folder(f.getCanonicalPath(), null, ParseSetup.HAS_HEADER, null);\n        } else {\n          return parse_test_file(f.getCanonicalPath());\n        }\n      } catch (IOException e) {\n        throw new RuntimeException(\"Cannot prepare test frame from file: \" + file, e);\n      }\n    }","commit_id":"86fc556db6c8260f1d32cda2bf249cd8f031c45d","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override\n    public void done(Frame frame) {\n      generatedFile.deleteOnExit();\n      if (generatedFile != null) generatedFile.delete();\n    }","id":58999,"modified_method":"@Override\n    public void done(Frame frame) {\n      if (generatedFile != null) {\n        generatedFile.deleteOnExit();\n        FileUtils.deleteQuietly(generatedFile);\n      }\n    }","commit_id":"86fc556db6c8260f1d32cda2bf249cd8f031c45d","url":"https://github.com/h2oai/h2o-3"}]